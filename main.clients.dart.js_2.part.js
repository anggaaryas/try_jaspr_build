// Generated by dart2js (NullSafetyMode.sound, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.5.3.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.clients.dart.js_2", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var J, B, D,
  A = {
    AlarmClock$(timestampFunction) {
      return new A.AlarmClock(timestampFunction);
    },
    isDesktop() {
      return $.$get$browser().get$isDesktop();
    },
    isMobile() {
      return $.$get$browser().get$isMobile();
    },
    isSafari() {
      return $.$get$browser().get$isSafari();
    },
    isFirefox() {
      return $.$get$browser().get$isFirefox();
    },
    isEdge() {
      return $.$get$browser().get$isEdge();
    },
    isWasm() {
      return $.$get$browser().get$isWasm();
    },
    _isIOS() {
      return J.$eq$($.$get$browser().get$operatingSystem(), C.OperatingSystem_0);
    },
    isMacOrIOS() {
      return B.boolConversionCheck(A._isIOS()) || B.boolConversionCheck(J.$eq$($.$get$browser().get$operatingSystem(), C.OperatingSystem_4));
    },
    isIOS15() {
      var t1 = B.boolConversionCheck(A._isIOS()) && B.boolConversionCheck(J.contains$1$asx($.$get$browser().get$userAgent(), "OS 15_"));
      return t1;
    },
    isChrome110OrOlder() {
      var match,
        t1 = $._cachedIsChrome110OrOlder;
      if (t1 != null)
        return t1;
      match = B.RegExp_RegExp("Chrom(e|ium)\\/([0-9]+)\\.", true, false).firstMatch$1($.$get$browser().get$userAgent());
      if (match != null) {
        t1 = match.group$1(2);
        t1.toString;
        return $._cachedIsChrome110OrOlder = A.int_parse(t1, null) <= 110;
      }
      return $._cachedIsChrome110OrOlder = false;
    },
    isIosSafari() {
      var t1 = B.boolConversionCheck(A._isActualIosSafari());
      return t1;
    },
    _isActualIosSafari() {
      return B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_1)) && B.boolConversionCheck(J.$eq$($.$get$browser().get$operatingSystem(), C.OperatingSystem_0));
    },
    webGLVersion() {
      var t1 = $._cachedWebGLVersion;
      return t1 == null ? $._cachedWebGLVersion = A._detectWebGLVersion() : t1;
    },
    _detectWebGLVersion() {
      var canvas = A.createDomCanvasElement(1, 1);
      if (A.DomCanvasElementExtension_getContext(canvas, "webgl2", null) != null) {
        if (B.boolConversionCheck(A._workAroundBug91333()))
          return 1;
        return 2;
      }
      if (A.DomCanvasElementExtension_getContext(canvas, "webgl", null) != null)
        return 1;
      return -1;
    },
    _workAroundBug91333() {
      return A._isIOS();
    },
    browserSupportsCanvaskitChromium() {
      var t1 = type$.nullable_Object;
      return B.getProperty(self.Intl, "v8BreakIterator", t1) != null && B.getProperty(self.Intl, "Segmenter", t1) != null;
    },
    CanvasPool$(_widthInBitmapPixels, _heightInBitmapPixels, _density) {
      return new A.CanvasPool(_widthInBitmapPixels, _heightInBitmapPixels, _density, B._setArrayType([], type$.JSArray_SaveStackEntry), A.Matrix4$identity());
    },
    ContextStateHandle$(_canvasPool, context, density) {
      return new A.ContextStateHandle(context, _canvasPool, density, C.BlendMode_3, C.StrokeCap_0, C.StrokeJoin_0);
    },
    CkCanvas$(skCanvas) {
      return new A.CkCanvas(skCanvas);
    },
    canvasKit0(value) {
      $.__canvasKit.set$value(value);
    },
    canvasKit() {
      return $.__canvasKit.readField$1$0(type$.JavaScriptObject);
    },
    _enableCanvasKitChromiumInAutoMode() {
      return A.browserSupportsCanvaskitChromium();
    },
    CanvasKitExtension_get_NoDecoration(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "NoDecoration", type$.double));
    },
    CanvasKitExtension_get_UnderlineDecoration(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "UnderlineDecoration", type$.double));
    },
    CanvasKitExtension_get_OverlineDecoration(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "OverlineDecoration", type$.double));
    },
    CanvasKitExtension_get_LineThroughDecoration(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "LineThroughDecoration", type$.double));
    },
    CanvasKitExtension_GetWebGLContext(_this, canvas, options) {
      return A.JSNumberToNumber_get_toDartDouble(B._callMethodUnchecked2(_this, "GetWebGLContext", canvas, options, type$.double));
    },
    CanvasKitExtension_GetOffscreenWebGLContext(_this, canvas, options) {
      return A.JSNumberToNumber_get_toDartDouble(B._callMethodUnchecked2(_this, "GetWebGLContext", canvas, options, type$.double));
    },
    CanvasKitExtension_MakeGrContext(_this, glContext) {
      return B._callMethodUnchecked1(_this, "MakeGrContext", A.DoubleToJSNumber_get_toJS(glContext), type$.JavaScriptObject);
    },
    CanvasKitExtension_MakeOnScreenGLSurface(_this, grContext, width, height, colorSpace, sampleCount, stencil) {
      return A.callMethod(_this, "MakeOnScreenGLSurface", [grContext, A.DoubleToJSNumber_get_toJS(width), A.DoubleToJSNumber_get_toJS(height), colorSpace, A.NumToJSExtension_get_toJS(sampleCount), A.NumToJSExtension_get_toJS(stencil)], type$.nullable_JavaScriptObject);
    },
    CanvasKitExtension_MakeImage(_this, info, pixels, bytesPerRow) {
      return B._callMethodUnchecked3(_this, "MakeImage", info, A.Uint8ListToJSUint8Array_get_toJS(pixels), A.DoubleToJSNumber_get_toJS(bytesPerRow), type$.nullable_JavaScriptObject);
    },
    createLocateFileCallback(callback) {
      return A._functionToJS2(callback);
    },
    SkWebGLContextOptions__staticInteropFactoryStub(antialias, majorVersion) {
      return type$.JavaScriptObject._as({antialias: A.DoubleToJSNumber_get_toJS(antialias), majorVersion: A.DoubleToJSNumber_get_toJS(majorVersion)});
    },
    SkGrContextExtension_setResourceCacheLimitBytes(_this, limit) {
      return B._callMethodUnchecked1(_this, "setResourceCacheLimitBytes", A.DoubleToJSNumber_get_toJS(limit), type$.void);
    },
    toSkFontSlant(style) {
      return J.$index$asx($.$get$_skFontSlants(), style.index);
    },
    toSkFontWeight(weight) {
      return J.$index$asx($.$get$_skFontWeights(), weight.index);
    },
    SkAffinityExtension_get_value(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "value", type$.double));
    },
    SkTextDirectionExtension_get_value(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "value", type$.double));
    },
    toSkTextDirection(direction) {
      return J.$index$asx($.$get$_skTextDirections(), direction.index);
    },
    toSkTextAlign(align) {
      return J.$index$asx($.$get$_skTextAligns(), align.index);
    },
    toSkTextHeightBehavior(behavior) {
      return J.$index$asx($.$get$_skTextHeightBehaviors(), 0);
    },
    toSkRectHeightStyle(style) {
      return J.$index$asx($.$get$_skRectHeightStyles(), style.index);
    },
    toSkRectWidthStyle(style) {
      var index = style.index,
        t1 = $.$get$_skRectWidthStyles();
      return J.$index$asx(t1, index < 2 ? index : 0);
    },
    toSkClipOp(clipOp) {
      return J.$index$asx($.$get$_skClipOps(), clipOp.index);
    },
    toSkFillType(fillType) {
      return J.$index$asx($.$get$_skFillTypes(), fillType.index);
    },
    toSkPaintStyle(paintStyle) {
      return J.$index$asx($.$get$_skPaintStyles(), paintStyle.index);
    },
    toSkBlendMode(blendMode) {
      return J.$index$asx($.$get$_skBlendModes(), blendMode.index);
    },
    toSkTileMode(mode) {
      return J.$index$asx($.$get$_skTileModes(), mode.index);
    },
    toSkFilterMode(filterQuality) {
      var _s10_ = "FilterMode",
        t1 = type$.JavaScriptObject;
      return filterQuality === C.FilterQuality_0 ? B.getProperty(B.getProperty(A.canvasKit(), _s10_, t1), "Nearest", t1) : B.getProperty(B.getProperty(A.canvasKit(), _s10_, t1), "Linear", t1);
    },
    toSkMipmapMode(filterQuality) {
      var _s10_ = "MipmapMode",
        t1 = type$.JavaScriptObject;
      return filterQuality === C.FilterQuality_2 ? B.getProperty(B.getProperty(A.canvasKit(), _s10_, t1), "Linear", t1) : B.getProperty(B.getProperty(A.canvasKit(), _s10_, t1), "None", t1);
    },
    SkImageExtension_width(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B._callMethodUnchecked0(_this, "width", type$.double));
    },
    SkImageExtension_height(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B._callMethodUnchecked0(_this, "height", type$.double));
    },
    SkImageExtension_readPixels(_this, srcX, srcY, imageInfo) {
      return A.JSUint8ArrayToUint8List_get_toDart(B._callMethodUnchecked3(_this, "readPixels", A.DoubleToJSNumber_get_toJS(srcX), A.DoubleToJSNumber_get_toJS(srcY), imageInfo, type$.NativeUint8List));
    },
    SkShaderNamespaceExtension_MakeLinearGradient(_this, from, to, colors, colorStops, tileMode, matrix) {
      var t1 = A.Float32ListToJSFloat32Array_get_toJS(from),
        t2 = A.Float32ListToJSFloat32Array_get_toJS(to),
        t3 = A.Uint32ListToJSUint32Array_get_toJS(colors),
        t4 = A.Float32ListToJSFloat32Array_get_toJS(colorStops);
      return A.callMethod(_this, "MakeLinearGradient", [t1, t2, t3, t4, tileMode, matrix == null ? null : A.Float32ListToJSFloat32Array_get_toJS(matrix)], type$.JavaScriptObject);
    },
    SkPaintExtension_setStrokeWidth(_this, width) {
      return B._callMethodUnchecked1(_this, "setStrokeWidth", A.DoubleToJSNumber_get_toJS(width), type$.void);
    },
    SkPaintExtension_setAntiAlias(_this, isAntiAlias) {
      return B._callMethodUnchecked1(_this, "setAntiAlias", B.BoolToJSBoolean_get_toJS(isAntiAlias), type$.void);
    },
    SkPaintExtension_setColorInt(_this, color) {
      return B._callMethodUnchecked1(_this, "setColorInt", A.NumToJSExtension_get_toJS(color), type$.void);
    },
    toSkM44FromFloat32(matrix4) {
      var t1, r, t2, c, t3,
        skM44 = A.NativeFloat32List_NativeFloat32List(16);
      for (t1 = matrix4.length, r = 0; r < 4; ++r)
        for (t2 = r * 4, c = 0; c < 4; ++c) {
          t3 = t2 + c;
          if (!(t3 < t1))
            return B.ioore(matrix4, t3);
          D.NativeFloat32List_methods.$indexSet(skM44, c * 4 + r, matrix4[t3]);
        }
      return skM44;
    },
    toSkMatrixFromFloat32(matrix4) {
      var t1, t2, i, matrix4Index,
        skMatrix = A.NativeFloat32List_NativeFloat32List(9);
      for (t1 = skMatrix.length, t2 = matrix4.length, i = 0; i < 9; ++i) {
        matrix4Index = C.List_0[i];
        if (matrix4Index < t2) {
          if (matrix4Index >>> 0 !== matrix4Index)
            return B.ioore(matrix4, matrix4Index);
          D.NativeFloat32List_methods.$indexSet(skMatrix, i, matrix4[matrix4Index]);
        } else {
          if (!(i < t1))
            return B.ioore(skMatrix, i);
          skMatrix[i] = 0;
        }
      }
      return skMatrix;
    },
    toSkPoint(offset) {
      var point = A.NativeFloat32List_NativeFloat32List(2);
      D.NativeFloat32List_methods.$indexSet(point, 0, offset.get$dx());
      D.NativeFloat32List_methods.$indexSet(point, 1, offset.get$dy());
      return point;
    },
    toSkColorStops(colorStops) {
      var t1, len, skColorStops, i;
      if (colorStops == null)
        return $.$get$_kDefaultSkColorStops();
      t1 = J.getInterceptor$asx(colorStops);
      len = t1.get$length(colorStops);
      skColorStops = A.NativeFloat32List_NativeFloat32List(len);
      for (i = 0; i < len; ++i)
        D.NativeFloat32List_methods.$indexSet(skColorStops, i, t1.$index(colorStops, i));
      return skColorStops;
    },
    mallocFloat32List($length) {
      return type$.JavaScriptObject._as(self.window.flutterCanvasKit.Malloc(self.Float32Array, A.NumToJSExtension_get_toJS($length)));
    },
    SkFloat32ListExtension_toTypedArray(_this) {
      return A.JSFloat32ArrayToFloat32List_get_toDart(B._callMethodUnchecked0(_this, "toTypedArray", type$.NativeFloat32List));
    },
    _populateSkColor(skColor, color) {
      var t2,
        array = A.SkFloat32ListExtension_toTypedArray(skColor),
        t1 = color.get$red();
      if (typeof t1 !== "number")
        return t1.$div();
      t2 = array.length;
      if (0 >= t2)
        return B.ioore(array, 0);
      array[0] = t1 / 255;
      t1 = color.get$green();
      if (typeof t1 !== "number")
        return t1.$div();
      if (1 >= t2)
        return B.ioore(array, 1);
      array[1] = t1 / 255;
      t1 = color.get$blue();
      if (typeof t1 !== "number")
        return t1.$div();
      if (2 >= t2)
        return B.ioore(array, 2);
      array[2] = t1 / 255;
      t1 = color.get$alpha();
      if (typeof t1 !== "number")
        return t1.$div();
      if (3 >= t2)
        return B.ioore(array, 3);
      array[3] = t1 / 255;
      return array;
    },
    toSharedSkColor1(color) {
      return A._populateSkColor($.$get$_sharedSkColor1(), color);
    },
    SkPathExtension_addOval(_this, oval, counterClockWise, startIndex) {
      return B._callMethodUnchecked3(_this, "addOval", A.Float32ListToJSFloat32Array_get_toJS(oval), B.BoolToJSBoolean_get_toJS(counterClockWise), A.DoubleToJSNumber_get_toJS(startIndex), type$.void);
    },
    SkPathExtension_addRRect(_this, rrect, counterClockWise) {
      return B._callMethodUnchecked2(_this, "addRRect", A.Float32ListToJSFloat32Array_get_toJS(rrect), B.BoolToJSBoolean_get_toJS(counterClockWise), type$.void);
    },
    SkPathExtension_addRect(_this, rect) {
      return B._callMethodUnchecked1(_this, "addRect", A.Float32ListToJSFloat32Array_get_toJS(rect), type$.void);
    },
    SkPathExtension_contains(_this, x, y) {
      return A.JSBooleanToBool_get_toDart(B._callMethodUnchecked2(_this, "contains", A.DoubleToJSNumber_get_toJS(x), A.DoubleToJSNumber_get_toJS(y), type$.bool));
    },
    SkPathExtension_getBounds(_this) {
      return A.JSFloat32ArrayToFloat32List_get_toDart(B._callMethodUnchecked0(_this, "getBounds", type$.NativeFloat32List));
    },
    SkPathExtension_transform(_this, scaleX, skewX, transX, skewY, scaleY, transY, pers0, pers1, pers2) {
      return A.callMethod(_this, "transform", [A.DoubleToJSNumber_get_toJS(scaleX), A.DoubleToJSNumber_get_toJS(skewX), A.DoubleToJSNumber_get_toJS(transX), A.DoubleToJSNumber_get_toJS(skewY), A.DoubleToJSNumber_get_toJS(scaleY), A.DoubleToJSNumber_get_toJS(transY), A.DoubleToJSNumber_get_toJS(pers0), A.DoubleToJSNumber_get_toJS(pers1), A.DoubleToJSNumber_get_toJS(pers2)], type$.void);
    },
    toSkRect(rect) {
      var skRect = A.NativeFloat32List_NativeFloat32List(4);
      D.NativeFloat32List_methods.$indexSet(skRect, 0, rect.left);
      D.NativeFloat32List_methods.$indexSet(skRect, 1, rect.top);
      D.NativeFloat32List_methods.$indexSet(skRect, 2, rect.right);
      D.NativeFloat32List_methods.$indexSet(skRect, 3, rect.bottom);
      return skRect;
    },
    fromSkRect(skRect) {
      var t2, t3, t4,
        t1 = skRect.length;
      if (0 >= t1)
        return B.ioore(skRect, 0);
      t2 = skRect[0];
      if (1 >= t1)
        return B.ioore(skRect, 1);
      t3 = skRect[1];
      if (2 >= t1)
        return B.ioore(skRect, 2);
      t4 = skRect[2];
      if (3 >= t1)
        return B.ioore(skRect, 3);
      return A.Rect$fromLTRB(t2, t3, t4, skRect[3]);
    },
    toSkRRect(rrect) {
      var skRRect = A.NativeFloat32List_NativeFloat32List(12);
      D.NativeFloat32List_methods.$indexSet(skRRect, 0, rrect.left);
      D.NativeFloat32List_methods.$indexSet(skRRect, 1, rrect.top);
      D.NativeFloat32List_methods.$indexSet(skRRect, 2, rrect.right);
      D.NativeFloat32List_methods.$indexSet(skRRect, 3, rrect.bottom);
      D.NativeFloat32List_methods.$indexSet(skRRect, 4, rrect.tlRadiusX);
      D.NativeFloat32List_methods.$indexSet(skRRect, 5, rrect.tlRadiusY);
      D.NativeFloat32List_methods.$indexSet(skRRect, 6, rrect.trRadiusX);
      D.NativeFloat32List_methods.$indexSet(skRRect, 7, rrect.trRadiusY);
      D.NativeFloat32List_methods.$indexSet(skRRect, 8, rrect.brRadiusX);
      D.NativeFloat32List_methods.$indexSet(skRRect, 9, rrect.brRadiusY);
      D.NativeFloat32List_methods.$indexSet(skRRect, 10, rrect.blRadiusX);
      D.NativeFloat32List_methods.$indexSet(skRRect, 11, rrect.blRadiusY);
      return skRRect;
    },
    toFlatColors(colors) {
      var i,
        t1 = J.getInterceptor$asx(colors),
        len = t1.get$length(colors),
        result = A.NativeUint32List_NativeUint32List(len);
      for (i = 0; i < len; ++i)
        D.NativeUint32List_methods.$indexSet(result, i, t1.$index(colors, i).get$value());
      return result;
    },
    SkPictureRecorderExtension_beginRecording(_this, bounds) {
      return B._callMethodUnchecked2(_this, "beginRecording", A.Float32ListToJSFloat32Array_get_toJS(bounds), B.BoolToJSBoolean_get_toJS(true), type$.JavaScriptObject);
    },
    SkCanvasExtension_clear(_this, color) {
      return B._callMethodUnchecked1(_this, "clear", A.Float32ListToJSFloat32Array_get_toJS(color), type$.void);
    },
    SkCanvasExtension_clipPath(_this, path, clipOp, doAntiAlias) {
      return B._callMethodUnchecked3(_this, "clipPath", path, clipOp, B.BoolToJSBoolean_get_toJS(doAntiAlias), type$.void);
    },
    SkCanvasExtension_clipRRect(_this, rrect, clipOp, doAntiAlias) {
      return B._callMethodUnchecked3(_this, "clipRRect", A.Float32ListToJSFloat32Array_get_toJS(rrect), clipOp, B.BoolToJSBoolean_get_toJS(doAntiAlias), type$.void);
    },
    SkCanvasExtension_clipRect(_this, rect, clipOp, doAntiAlias) {
      return B._callMethodUnchecked3(_this, "clipRect", A.Float32ListToJSFloat32Array_get_toJS(rect), clipOp, B.BoolToJSBoolean_get_toJS(doAntiAlias), type$.void);
    },
    SkCanvasExtension_drawCircle(_this, x, y, radius, paint) {
      return A._callMethodUnchecked4(_this, "drawCircle", A.DoubleToJSNumber_get_toJS(x), A.DoubleToJSNumber_get_toJS(y), A.DoubleToJSNumber_get_toJS(radius), paint, type$.void);
    },
    SkCanvasExtension_drawDRRect(_this, outer, inner, paint) {
      return B._callMethodUnchecked3(_this, "drawDRRect", A.Float32ListToJSFloat32Array_get_toJS(outer), A.Float32ListToJSFloat32Array_get_toJS(inner), paint, type$.void);
    },
    SkCanvasExtension_drawImageRectCubic(_this, image, src, dst, $B, $C, paint) {
      return A.callMethod(_this, "drawImageRectCubic", [image, A.Float32ListToJSFloat32Array_get_toJS(src), A.Float32ListToJSFloat32Array_get_toJS(dst), A.DoubleToJSNumber_get_toJS($B), A.DoubleToJSNumber_get_toJS($C), paint], type$.void);
    },
    SkCanvasExtension_drawImageRectOptions(_this, image, src, dst, filterMode, mipmapMode, paint) {
      return A.callMethod(_this, "drawImageRectOptions", [image, A.Float32ListToJSFloat32Array_get_toJS(src), A.Float32ListToJSFloat32Array_get_toJS(dst), filterMode, mipmapMode, paint], type$.void);
    },
    SkCanvasExtension_drawOval(_this, rect, paint) {
      return B._callMethodUnchecked2(_this, "drawOval", A.Float32ListToJSFloat32Array_get_toJS(rect), paint, type$.void);
    },
    SkCanvasExtension_drawRRect(_this, rrect, paint) {
      return B._callMethodUnchecked2(_this, "drawRRect", A.Float32ListToJSFloat32Array_get_toJS(rrect), paint, type$.void);
    },
    SkCanvasExtension_drawRect(_this, rect, paint) {
      return B._callMethodUnchecked2(_this, "drawRect", A.Float32ListToJSFloat32Array_get_toJS(rect), paint, type$.void);
    },
    SkCanvasExtension_drawShadow(_this, path, zPlaneParams, lightPos, lightRadius, ambientColor, spotColor, flags) {
      return A.callMethod(_this, "drawShadow", [path, A.Float32ListToJSFloat32Array_get_toJS(zPlaneParams), A.Float32ListToJSFloat32Array_get_toJS(lightPos), A.DoubleToJSNumber_get_toJS(lightRadius), A.Float32ListToJSFloat32Array_get_toJS(ambientColor), A.Float32ListToJSFloat32Array_get_toJS(spotColor), A.DoubleToJSNumber_get_toJS(flags)], type$.void);
    },
    SkCanvasExtension_save(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B._callMethodUnchecked0(_this, "save", type$.double));
    },
    SkCanvasExtension_saveLayer(_this, paint, bounds, backdrop, flags) {
      var t1 = bounds == null ? null : A.Float32ListToJSFloat32Array_get_toJS(bounds),
        t2 = flags == null ? null : A.NumToJSExtension_get_toJS(flags);
      return A._callMethodUnchecked4(_this, "saveLayer", paint, t1, backdrop, t2, type$.void);
    },
    SkCanvasExtension_scale(_this, x, y) {
      return B._callMethodUnchecked2(_this, "scale", A.DoubleToJSNumber_get_toJS(x), A.DoubleToJSNumber_get_toJS(y), type$.void);
    },
    SkCanvasExtension_concat(_this, matrix) {
      return B._callMethodUnchecked1(_this, "concat", A.Float32ListToJSFloat32Array_get_toJS(matrix), type$.void);
    },
    SkCanvasExtension_translate(_this, x, y) {
      return B._callMethodUnchecked2(_this, "translate", A.DoubleToJSNumber_get_toJS(x), A.DoubleToJSNumber_get_toJS(y), type$.void);
    },
    SkCanvasExtension_drawParagraph(_this, paragraph, x, y) {
      return B._callMethodUnchecked3(_this, "drawParagraph", paragraph, A.DoubleToJSNumber_get_toJS(x), A.DoubleToJSNumber_get_toJS(y), type$.void);
    },
    SkPictureExtension_cullRect(_this) {
      return A.JSFloat32ArrayToFloat32List_get_toDart(B._callMethodUnchecked0(_this, "cullRect", type$.NativeFloat32List));
    },
    SkParagraphBuilderNamespaceExtension_RequiresClientICU(_this) {
      var _s17_ = "RequiresClientICU";
      if (!B.boolConversionCheck(A.hasProperty(_this, _s17_)))
        return false;
      return B._asBool(B._callMethodUnchecked0(_this, _s17_, type$.dynamic));
    },
    SkParagraphBuilderExtension_addText(_this, text) {
      return B._callMethodUnchecked1(_this, "addText", B.StringToJSString_get_toJS(text), type$.void);
    },
    SkParagraphBuilderExtension_getTextUtf8(_this) {
      return A.JSStringToString_get_toDart(B._callMethodUnchecked0(_this, "getText", type$.String));
    },
    SkParagraphBuilderExtension_getText(_this) {
      return D.C_Utf8Codec.decode$1(J.get$codeUnits$s(A.SkParagraphBuilderExtension_getTextUtf8(_this)));
    },
    SkParagraphBuilderExtension_setWordsUtf16(_this, words) {
      return B._callMethodUnchecked1(_this, "setWordsUtf16", A.Uint32ListToJSUint32Array_get_toJS(words), type$.void);
    },
    SkParagraphBuilderExtension_setGraphemeBreaksUtf16(_this, graphemes) {
      return B._callMethodUnchecked1(_this, "setGraphemeBreaksUtf16", A.Uint32ListToJSUint32Array_get_toJS(graphemes), type$.void);
    },
    SkParagraphBuilderExtension_setLineBreaksUtf16(_this, lineBreaks) {
      return B._callMethodUnchecked1(_this, "setLineBreaksUtf16", A.Uint32ListToJSUint32Array_get_toJS(lineBreaks), type$.void);
    },
    SkParagraphStylePropertiesExtension_set_heightMultiplier(_this, value) {
      var t1 = value == null ? null : A.DoubleToJSNumber_get_toJS(value);
      B._setPropertyUnchecked(_this, "heightMultiplier", t1, type$.nullable_double);
      return t1;
    },
    SkParagraphStylePropertiesExtension_set_maxLines(_this, value) {
      var t1 = value == null ? null : A.NumToJSExtension_get_toJS(value);
      B._setPropertyUnchecked(_this, "maxLines", t1, type$.nullable_double);
      return t1;
    },
    SkParagraphStylePropertiesExtension_set_ellipsis(_this, value) {
      var t1 = value == null ? null : B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "ellipsis", t1, type$.nullable_String);
      return t1;
    },
    SkParagraphStylePropertiesExtension_set_replaceTabCharacters(_this, bool) {
      var t1 = bool == null ? null : B.BoolToJSBoolean_get_toJS(bool);
      B._setPropertyUnchecked(_this, "replaceTabCharacters", t1, type$.nullable_bool);
      return t1;
    },
    toSkTextDecorationStyle(style) {
      return J.$index$asx($.$get$_skTextDecorationStyles(), style.index);
    },
    toSkTextBaseline(baseline) {
      return J.$index$asx($.$get$_skTextBaselines(), baseline.index);
    },
    SkTextStylePropertiesExtension_set_backgroundColor(_this, value) {
      var t1 = value == null ? null : A.Float32ListToJSFloat32Array_get_toJS(value);
      B._setPropertyUnchecked(_this, "backgroundColor", t1, type$.nullable_NativeFloat32List);
      return t1;
    },
    SkTextStylePropertiesExtension_set_color(_this, value) {
      var t1 = value == null ? null : A.Float32ListToJSFloat32Array_get_toJS(value);
      B._setPropertyUnchecked(_this, "color", t1, type$.nullable_NativeFloat32List);
      return t1;
    },
    SkTextStylePropertiesExtension_set_foregroundColor(_this, value) {
      var t1 = value == null ? null : A.Float32ListToJSFloat32Array_get_toJS(value);
      B._setPropertyUnchecked(_this, "foregroundColor", t1, type$.nullable_NativeFloat32List);
      return t1;
    },
    SkTextStylePropertiesExtension_set_decoration(_this, value) {
      var t1 = value == null ? null : A.NumToJSExtension_get_toJS(value);
      B._setPropertyUnchecked(_this, "decoration", t1, type$.nullable_double);
      return t1;
    },
    SkTextStylePropertiesExtension_set_decorationThickness(_this, value) {
      var t1 = value == null ? null : A.DoubleToJSNumber_get_toJS(value);
      B._setPropertyUnchecked(_this, "decorationThickness", t1, type$.nullable_double);
      return t1;
    },
    SkTextStylePropertiesExtension_set_decorationColor(_this, value) {
      var t1 = value == null ? null : A.Float32ListToJSFloat32Array_get_toJS(value);
      B._setPropertyUnchecked(_this, "decorationColor", t1, type$.nullable_NativeFloat32List);
      return t1;
    },
    SkTextStylePropertiesExtension_set_fontSize(_this, value) {
      var t1 = value == null ? null : A.DoubleToJSNumber_get_toJS(value);
      B._setPropertyUnchecked(_this, "fontSize", t1, type$.nullable_double);
      return t1;
    },
    SkTextStylePropertiesExtension_set_letterSpacing(_this, value) {
      var t1 = value == null ? null : A.DoubleToJSNumber_get_toJS(value);
      B._setPropertyUnchecked(_this, "letterSpacing", t1, type$.nullable_double);
      return t1;
    },
    SkTextStylePropertiesExtension_set_wordSpacing(_this, value) {
      var t1 = value == null ? null : A.DoubleToJSNumber_get_toJS(value);
      B._setPropertyUnchecked(_this, "wordSpacing", t1, type$.nullable_double);
      return t1;
    },
    SkTextStylePropertiesExtension_set_heightMultiplier(_this, value) {
      var t1 = value == null ? null : A.DoubleToJSNumber_get_toJS(value);
      B._setPropertyUnchecked(_this, "heightMultiplier", t1, type$.nullable_double);
      return t1;
    },
    SkTextStylePropertiesExtension_set_halfLeading(_this, value) {
      var t1 = value == null ? null : B.BoolToJSBoolean_get_toJS(value);
      B._setPropertyUnchecked(_this, "halfLeading", t1, type$.nullable_bool);
      return t1;
    },
    SkTextStylePropertiesExtension_set_locale(_this, value) {
      var t1 = value == null ? null : B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "locale", t1, type$.nullable_String);
      return t1;
    },
    SkTextStylePropertiesExtension_set_fontFamilies(_this, value) {
      var t1 = value == null ? null : A.ObjectToJSAnyExtension_get_toJSAnyShallow(value);
      B._setPropertyUnchecked(_this, "fontFamilies", t1, type$.nullable_Object);
      return t1;
    },
    SkTextStylePropertiesExtension_set_shadows(_this, value) {
      var t1 = value == null ? null : A.ListToJSArray_get_toJS(value, type$.Object);
      B._setPropertyUnchecked(_this, "shadows", t1, type$.nullable_JSArray_nullable_Object);
      return t1;
    },
    SkTextStylePropertiesExtension_set_fontFeatures(_this, value) {
      var t1 = value == null ? null : A.ListToJSArray_get_toJS(value, type$.Object);
      B._setPropertyUnchecked(_this, "fontFeatures", t1, type$.nullable_JSArray_nullable_Object);
      return t1;
    },
    SkTextStylePropertiesExtension_set_fontVariations(_this, value) {
      var t1 = value == null ? null : A.ListToJSArray_get_toJS(value, type$.Object);
      B._setPropertyUnchecked(_this, "fontVariations", t1, type$.nullable_JSArray_nullable_Object);
      return t1;
    },
    SkStrutStylePropertiesExtension_set_fontFamilies(_this, value) {
      var t1 = value == null ? null : A.ObjectToJSAnyExtension_get_toJSAnyShallow(value);
      B._setPropertyUnchecked(_this, "fontFamilies", t1, type$.nullable_Object);
      return t1;
    },
    SkStrutStylePropertiesExtension_set_fontSize(_this, value) {
      var t1 = value == null ? null : A.DoubleToJSNumber_get_toJS(value);
      B._setPropertyUnchecked(_this, "fontSize", t1, type$.nullable_double);
      return t1;
    },
    SkStrutStylePropertiesExtension_set_heightMultiplier(_this, value) {
      var t1 = value == null ? null : A.DoubleToJSNumber_get_toJS(value);
      B._setPropertyUnchecked(_this, "heightMultiplier", t1, type$.nullable_double);
      return t1;
    },
    SkStrutStylePropertiesExtension_set_halfLeading(_this, value) {
      var t1 = value == null ? null : B.BoolToJSBoolean_get_toJS(value);
      B._setPropertyUnchecked(_this, "halfLeading", t1, type$.nullable_bool);
      return t1;
    },
    SkStrutStylePropertiesExtension_set_leading(_this, value) {
      var t1 = value == null ? null : A.DoubleToJSNumber_get_toJS(value);
      B._setPropertyUnchecked(_this, "leading", t1, type$.nullable_double);
      return t1;
    },
    SkStrutStylePropertiesExtension_set_strutEnabled(_this, value) {
      var t1 = value == null ? null : B.BoolToJSBoolean_get_toJS(value);
      B._setPropertyUnchecked(_this, "strutEnabled", t1, type$.nullable_bool);
      return t1;
    },
    SkStrutStylePropertiesExtension_set_forceStrutHeight(_this, value) {
      var t1 = value == null ? null : B.BoolToJSBoolean_get_toJS(value);
      B._setPropertyUnchecked(_this, "forceStrutHeight", t1, type$.nullable_bool);
      return t1;
    },
    SkTextShadowExtension_set_color(_this, value) {
      var t1 = value == null ? null : A.Float32ListToJSFloat32Array_get_toJS(value);
      B._setPropertyUnchecked(_this, "color", t1, type$.nullable_NativeFloat32List);
      return t1;
    },
    SkTextShadowExtension_set_offset(_this, value) {
      var t1 = value == null ? null : A.Float32ListToJSFloat32Array_get_toJS(value);
      B._setPropertyUnchecked(_this, "offset", t1, type$.nullable_NativeFloat32List);
      return t1;
    },
    SkTextShadowExtension_set_blurRadius(_this, value) {
      var t1 = value == null ? null : A.DoubleToJSNumber_get_toJS(value);
      B._setPropertyUnchecked(_this, "blurRadius", t1, type$.nullable_double);
      return t1;
    },
    SkFontFeatureExtension_set_name(_this, value) {
      var t1 = value == null ? null : B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "name", t1, type$.nullable_String);
      return t1;
    },
    SkFontFeatureExtension_set_value(_this, v) {
      var t1 = v == null ? null : A.NumToJSExtension_get_toJS(v);
      B._setPropertyUnchecked(_this, "value", t1, type$.nullable_double);
      return t1;
    },
    SkFontVariationExtension_set_axis(_this, value) {
      var t1 = value == null ? null : B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "axis", t1, type$.nullable_String);
      return t1;
    },
    SkFontVariationExtension_set_value(_this, v) {
      var t1 = v == null ? null : A.DoubleToJSNumber_get_toJS(v);
      B._setPropertyUnchecked(_this, "value", t1, type$.nullable_double);
      return t1;
    },
    SkFontExtension_getGlyphIDs(_this, text) {
      return A.JSUint16ArrayToInt16List_get_toDart(B._callMethodUnchecked1(_this, "getGlyphIDs", B.StringToJSString_get_toJS(text), type$.NativeUint16List));
    },
    SkFontExtension_getGlyphBounds(_this, glyphs, paint, output) {
      var t1 = A.ObjectToJSAnyExtension_get_toJSAnyShallow(glyphs),
        t2 = output == null ? null : A.Uint8ListToJSUint8Array_get_toJS(output);
      return B._callMethodUnchecked3(_this, "getGlyphBounds", t1, paint, t2, type$.void);
    },
    SkFontMgrExtension_getFamilyName(_this, fontId) {
      var t1 = B._callMethodUnchecked1(_this, "getFamilyName", A.DoubleToJSNumber_get_toJS(fontId), type$.nullable_String);
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    TypefaceFontProviderExtension_registerFont(_this, font, family) {
      return B._callMethodUnchecked2(_this, "registerFont", A.Uint8ListToJSUint8Array_get_toJS(font), B.StringToJSString_get_toJS(family), type$.void);
    },
    SkLineMetricsExtension_get_startIndex(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "startIndex", type$.double));
    },
    SkLineMetricsExtension_get_endIndex(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "endIndex", type$.double));
    },
    SkLineMetricsExtension_get_isHardBreak(_this) {
      return A.JSBooleanToBool_get_toDart(B.getProperty(_this, "isHardBreak", type$.bool));
    },
    SkLineMetricsExtension_get_ascent(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "ascent", type$.double));
    },
    SkLineMetricsExtension_get_descent(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "descent", type$.double));
    },
    SkLineMetricsExtension_get_width(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "width", type$.double));
    },
    SkLineMetricsExtension_get_left(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "left", type$.double));
    },
    SkLineMetricsExtension_get_baseline(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "baseline", type$.double));
    },
    SkLineMetricsExtension_get_lineNumber(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "lineNumber", type$.double));
    },
    SkGlyphClusterInfoExtension_get__glyphInfo(_this) {
      var t2,
        _s24_ = "graphemeClusterTextRange",
        list = J.cast$1$0$ax(A.JSArrayToList_get_toDart(B.getProperty(_this, "graphemeLayoutBounds", type$.JSArray_nullable_Object), type$.nullable_Object), type$.double),
        t1 = J.getInterceptor$asx(list),
        bounds = A.Rect$fromLTRB(A.JSNumberToNumber_get_toDartDouble(t1.$index(list, 0)), A.JSNumberToNumber_get_toDartDouble(t1.$index(list, 1)), A.JSNumberToNumber_get_toDartDouble(t1.$index(list, 2)), A.JSNumberToNumber_get_toDartDouble(t1.$index(list, 3)));
      t1 = type$.JavaScriptObject;
      t2 = J.toInt$0$n(A.SkTextRangeExtension_get_start(B.getProperty(_this, _s24_, t1)));
      return A.GlyphInfo$(bounds, A.TextRange$(J.toInt$0$n(A.SkTextRangeExtension_get_end(B.getProperty(_this, _s24_, t1))), t2), D.JSArray_methods.$index(C.List_TextDirection_0_TextDirection_1, J.toInt$0$n(A.SkTextDirectionExtension_get_value(B.getProperty(_this, "dir", t1)))));
    },
    SkRectWithDirectionExtension_get_rect(_this) {
      return A.JSFloat32ArrayToFloat32List_get_toDart(B.getProperty(_this, "rect", type$.NativeFloat32List));
    },
    SkParagraphExtension_getAlphabeticBaseline(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B._callMethodUnchecked0(_this, "getAlphabeticBaseline", type$.double));
    },
    SkParagraphExtension_didExceedMaxLines(_this) {
      return A.JSBooleanToBool_get_toDart(B._callMethodUnchecked0(_this, "didExceedMaxLines", type$.bool));
    },
    SkParagraphExtension_getHeight(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B._callMethodUnchecked0(_this, "getHeight", type$.double));
    },
    SkParagraphExtension_getIdeographicBaseline(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B._callMethodUnchecked0(_this, "getIdeographicBaseline", type$.double));
    },
    SkParagraphExtension_getLineMetrics(_this) {
      return J.cast$1$0$ax(A.JSArrayToList_get_toDart(B._callMethodUnchecked0(_this, "getLineMetrics", type$.JSArray_nullable_Object), type$.nullable_Object), type$.JavaScriptObject);
    },
    SkParagraphExtension_getLineMetricsAt(_this, index) {
      return B._callMethodUnchecked1(_this, "getLineMetricsAt", A.DoubleToJSNumber_get_toJS(index), type$.nullable_JavaScriptObject);
    },
    SkParagraphExtension_getNumberOfLines(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B._callMethodUnchecked0(_this, "getNumberOfLines", type$.double));
    },
    SkParagraphExtension_getLongestLine(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B._callMethodUnchecked0(_this, "getLongestLine", type$.double));
    },
    SkParagraphExtension_getMaxIntrinsicWidth(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B._callMethodUnchecked0(_this, "getMaxIntrinsicWidth", type$.double));
    },
    SkParagraphExtension_getMinIntrinsicWidth(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B._callMethodUnchecked0(_this, "getMinIntrinsicWidth", type$.double));
    },
    SkParagraphExtension_getMaxWidth(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B._callMethodUnchecked0(_this, "getMaxWidth", type$.double));
    },
    SkParagraphExtension_getRectsForRange(_this, start, end, heightStyle, widthStyle) {
      return J.cast$1$0$ax(A.JSArrayToList_get_toDart(A._callMethodUnchecked4(_this, "getRectsForRange", A.DoubleToJSNumber_get_toJS(start), A.DoubleToJSNumber_get_toJS(end), heightStyle, widthStyle, type$.JSArray_nullable_Object), type$.nullable_Object), type$.JavaScriptObject);
    },
    SkParagraphExtension_getRectsForPlaceholders(_this) {
      return J.cast$1$0$ax(A.JSArrayToList_get_toDart(B._callMethodUnchecked0(_this, "getRectsForPlaceholders", type$.JSArray_nullable_Object), type$.nullable_Object), type$.JavaScriptObject);
    },
    SkParagraphExtension_getGlyphPositionAtCoordinate(_this, x, y) {
      return B._callMethodUnchecked2(_this, "getGlyphPositionAtCoordinate", A.DoubleToJSNumber_get_toJS(x), A.DoubleToJSNumber_get_toJS(y), type$.JavaScriptObject);
    },
    SkParagraphExtension_getGlyphInfoAt(_this, position) {
      var t1 = B._callMethodUnchecked1(_this, "getGlyphInfoAt", A.DoubleToJSNumber_get_toJS(position), type$.nullable_JavaScriptObject);
      return t1 == null ? null : A.SkGlyphClusterInfoExtension_get__glyphInfo(t1);
    },
    SkParagraphExtension_getClosestGlyphInfoAt(_this, x, y) {
      var t1 = B._callMethodUnchecked2(_this, "getClosestGlyphInfoAtCoordinate", A.DoubleToJSNumber_get_toJS(x), A.DoubleToJSNumber_get_toJS(y), type$.nullable_JavaScriptObject);
      return t1 == null ? null : A.SkGlyphClusterInfoExtension_get__glyphInfo(t1);
    },
    SkParagraphExtension_getWordBoundary(_this, position) {
      return B._callMethodUnchecked1(_this, "getWordBoundary", A.DoubleToJSNumber_get_toJS(position), type$.JavaScriptObject);
    },
    SkParagraphExtension_layout(_this, width) {
      return B._callMethodUnchecked1(_this, "layout", A.DoubleToJSNumber_get_toJS(width), type$.void);
    },
    SkTextPositionExtnsion_get_pos(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "pos", type$.double));
    },
    SkTextRangeExtension_get_start(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "start", type$.double));
    },
    SkTextRangeExtension_get_end(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "end", type$.double));
    },
    SkTonalColors__staticInteropFactoryStub(ambient, spot) {
      return type$.JavaScriptObject._as({ambient: A.Float32ListToJSFloat32Array_get_toJS(ambient), spot: A.Float32ListToJSFloat32Array_get_toJS(spot)});
    },
    SkTonalColorsExtension_get_ambient(_this) {
      return A.JSFloat32ArrayToFloat32List_get_toDart(B.getProperty(_this, "ambient", type$.NativeFloat32List));
    },
    SkTonalColorsExtension_get_spot(_this) {
      return A.JSFloat32ArrayToFloat32List_get_toDart(B.getProperty(_this, "spot", type$.NativeFloat32List));
    },
    SkFontMgrNamespaceExtension_FromData(_this, fonts) {
      return B._callMethodUnchecked1(_this, "FromData", A.ObjectToJSAnyExtension_get_toJSAnyShallow(fonts), type$.nullable_JavaScriptObject);
    },
    SkTypefaceFactoryExtension_MakeFreeTypeFaceFromData(_this, fontData) {
      return B._callMethodUnchecked1(_this, "MakeFreeTypeFaceFromData", A.ByteBufferToJSArrayBuffer_get_toJS(fontData), type$.nullable_JavaScriptObject);
    },
    SkDeletableExtension_isDeleted(_this) {
      return A.JSBooleanToBool_get_toDart(B._callMethodUnchecked0(_this, "isDeleted", type$.bool));
    },
    SkImageInfo__staticInteropFactoryStub(alphaType, colorSpace, colorType, height, width) {
      return type$.JavaScriptObject._as({width: A.DoubleToJSNumber_get_toJS(width), height: A.DoubleToJSNumber_get_toJS(height), colorType: colorType, alphaType: alphaType, colorSpace: colorSpace});
    },
    _canvasKitBaseUrl() {
      return A.configuration().get$canvasKitBaseUrl();
    },
    getCanvasKitJsFileNames(variant) {
      var t1,
        _s21_ = "chromium/canvaskit.js";
      switch (variant.index) {
        case 0:
          t1 = B._setArrayType([], type$.JSArray_String);
          if (B.boolConversionCheck(A._enableCanvasKitChromiumInAutoMode()))
            t1.push(_s21_);
          t1.push("canvaskit.js");
          return t1;
        case 1:
          return B._setArrayType(["canvaskit.js"], type$.JSArray_String);
        case 2:
          return B._setArrayType([_s21_], type$.JSArray_String);
      }
    },
    _canvasKitJsUrls() {
      return J.map$1$1$ax(A.getCanvasKitJsFileNames(A.configuration().get$canvasKitVariant()), new A._canvasKitJsUrls_closure(), type$.String);
    },
    canvasKitWasmModuleUrl(file, canvasKitBase) {
      B._asString(file);
      return B._asString(canvasKitBase) + file;
    },
    downloadCanvasKit() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, t1, canvasKit, $async$temp1, $async$temp2, $async$temp3;
      var $async$downloadCanvasKit = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.JavaScriptObject;
              $async$temp1 = t1;
              $async$temp2 = A;
              $async$temp3 = B;
              $async$goto = 4;
              return B._asyncAwait(A._downloadOneOf(A._canvasKitJsUrls()), $async$downloadCanvasKit);
            case 4:
              // returning from await.
              $async$goto = 3;
              return B._asyncAwait($async$temp2.JSPromiseToFuture_get_toDart($async$temp3._callMethodUnchecked1($async$result, "default", t1._as({locateFile: A.createLocateFileCallback(A._engine__canvasKitWasmModuleUrl$closure())}), type$.JSObject), type$.Object), $async$downloadCanvasKit);
            case 3:
              // returning from await.
              canvasKit = $async$temp1._as($async$result);
              if (B.boolConversionCheck(A.SkParagraphBuilderNamespaceExtension_RequiresClientICU(B.getProperty(canvasKit, "ParagraphBuilder", t1))) && !B.boolConversionCheck(A.browserSupportsCanvaskitChromium()))
                throw B.wrapException(B.Exception_Exception("The CanvasKit variant you are using only works on Chromium browsers. Please use a different CanvasKit variant, or use a Chromium browser."));
              $async$returnValue = canvasKit;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$downloadCanvasKit, $async$completer);
    },
    _downloadOneOf(urls) {
      return A._downloadOneOf$body(urls);
    },
    _downloadOneOf$body(urls) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, $async$handler = 2, $async$currentError, url, t1, t2, exception, $async$exception;
      var $async$_downloadOneOf = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = J.get$iterator$ax(urls);
            case 3:
              // for condition
              if (!B.boolConversionCheck(t1.moveNext$0())) {
                // goto after for
                $async$goto = 4;
                break;
              }
              url = t1.get$current();
              $async$handler = 6;
              $async$goto = 9;
              return B._asyncAwait(A._downloadCanvasKitJs(url), $async$_downloadOneOf);
            case 9:
              // returning from await.
              t2 = $async$result;
              $async$returnValue = t2;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 8;
              break;
            case 6:
              // catch
              $async$handler = 5;
              $async$exception = $async$currentError;
              // goto for condition
              $async$goto = 3;
              break;
              // goto after finally
              $async$goto = 8;
              break;
            case 5:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 8:
              // after finally
              // goto for condition
              $async$goto = 3;
              break;
            case 4:
              // after for
              throw B.wrapException(B.Exception_Exception("Failed to download any of the following CanvasKit URLs: " + B.S(urls)));
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return B._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return B._asyncStartSync($async$_downloadOneOf, $async$completer);
    },
    _resolveUrl(url) {
      return A.JSStringToString_get_toDart(B._callMethodUnchecked0(A.createDomURL(url, A.DomNodeExtension_get_baseUri(B.getProperty(self.window, "document", type$.JavaScriptObject))), "toString", type$.String));
    },
    _downloadCanvasKitJs(url) {
      return A._downloadCanvasKitJs$body(url);
    },
    _downloadCanvasKitJs$body(url) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, $async$temp1;
      var $async$_downloadCanvasKitJs = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = type$.JavaScriptObject;
              $async$goto = 3;
              return B._asyncAwait(A.JSPromiseToFuture_get_toDart(A.importModule(A.createTrustedScriptUrl(A._resolveUrl(url))), type$.JSObject), $async$_downloadCanvasKitJs);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1._as($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$_downloadCanvasKitJs, $async$completer);
    },
    CanvasKitCanvas_CanvasKitCanvas(recorder, cullRect) {
      if (B.boolConversionCheck(recorder.get$isRecording()))
        throw B.wrapException(B.ArgumentError$(string$._recor, null));
      if (cullRect == null)
        cullRect = C.Rect_tsf;
      return A.CanvasKitCanvas$_(type$.CkPictureRecorder._as(recorder).beginRecording$1(cullRect));
    },
    CanvasKitCanvas$_(_canvas) {
      return new A.CanvasKitCanvas(_canvas);
    },
    DisplayCanvasFactory$(createCanvas, $T) {
      var t1 = $T._eval$1("JSArray<0>");
      return new A.DisplayCanvasFactory(createCanvas, B._setArrayType([], t1), B._setArrayType([], t1), $T._eval$1("DisplayCanvasFactory<0>"));
    },
    HtmlViewEmbedder$(sceneHost, rasterizer) {
      var t1 = type$.int,
        t2 = type$.JSArray_int;
      return new A.HtmlViewEmbedder(sceneHost, rasterizer, A.EmbedderFrameContext$(), B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.EmbeddedViewParams), B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.ViewClipChain), B.LinkedHashSet_LinkedHashSet$_empty(t1), B._setArrayType([], t2), B._setArrayType([], t2), A.Rendering$(), B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Set_String));
    },
    HtmlViewEmbedder_maximumCanvases() {
      return A.configuration().get$canvasKitMaximumSurfaces();
    },
    Mutator$clipRect(rect) {
      var _null = null;
      return new A.Mutator(C.MutatorType_0, rect, _null, _null, _null, _null);
    },
    Mutator$clipRRect(rrect) {
      var _null = null;
      return new A.Mutator(C.MutatorType_1, _null, rrect, _null, _null, _null);
    },
    Mutator$clipPath(path) {
      var _null = null;
      return new A.Mutator(C.MutatorType_2, _null, _null, path, _null, _null);
    },
    Mutator$transform(matrix) {
      var _null = null;
      return new A.Mutator(C.MutatorType_3, _null, _null, _null, matrix, _null);
    },
    Mutator$opacity(alpha) {
      var _null = null;
      return new A.Mutator(C.MutatorType_4, _null, _null, _null, _null, alpha);
    },
    MutatorsStack$() {
      return new A.MutatorsStack(B._setArrayType([], type$.JSArray_Mutator));
    },
    EmbedderFrameContext$() {
      var t1 = type$.JSArray_CkPictureRecorder;
      return new A.EmbedderFrameContext(B._setArrayType([], t1), B._setArrayType([], t1));
    },
    SkiaFontCollection$() {
      var t1 = type$.String,
        t2 = type$.JSArray_RegisteredFont;
      return new A.SkiaFontCollection(B.LinkedHashSet_LinkedHashSet$_empty(t1), B._setArrayType([], type$.JSArray_UnregisteredFont), B._setArrayType([], t2), B._setArrayType([], t2), B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.List_JavaScriptObject));
    },
    RegisteredFont$(bytes, family, typeface) {
      var t1 = new A.RegisteredFont(family, bytes, typeface);
      t1.RegisteredFont$3(bytes, family, typeface);
      return t1;
    },
    UnregisteredFont$(bytes, url, family) {
      return new A.UnregisteredFont(bytes, url, family);
    },
    FontDownloadResult$fromFont(assetName, font) {
      return new A.FontDownloadResult(assetName, font, null);
    },
    FontDownloadResult$fromError(assetName, error) {
      return new A.FontDownloadResult(assetName, null, error);
    },
    SkiaFallbackRegistry$(fontCollection) {
      return new A.SkiaFallbackRegistry(fontCollection);
    },
    CkImage$(skImage) {
      var t1;
      B.createSentinel(type$.StackTrace);
      t1 = new A.CkImage();
      t1.CkImage$2$videoFrame(skImage, null);
      return t1;
    },
    PrerollContext$(rasterCache, viewEmbedder) {
      return new A.PrerollContext(A.MutatorsStack$());
    },
    PaintContext$(internalNodesCanvas, leafNodesCanvas, rasterCache, viewEmbedder) {
      return new A.PaintContext(internalNodesCanvas, leafNodesCanvas);
    },
    RootLayer$() {
      return new A.RootLayer(B._setArrayType([], type$.JSArray_Layer), C.Rect_0_0_0_0);
    },
    ClipPathEngineLayer$(_clipPath, _clipBehavior) {
      return new A.ClipPathEngineLayer(_clipPath, _clipBehavior, B._setArrayType([], type$.JSArray_Layer), C.Rect_0_0_0_0);
    },
    ClipRectEngineLayer$(_clipRect, _clipBehavior) {
      return new A.ClipRectEngineLayer(_clipRect, _clipBehavior, B._setArrayType([], type$.JSArray_Layer), C.Rect_0_0_0_0);
    },
    ClipRRectEngineLayer$(_clipRRect, _clipBehavior) {
      return new A.ClipRRectEngineLayer(_clipRRect, _clipBehavior, B._setArrayType([], type$.JSArray_Layer), C.Rect_0_0_0_0);
    },
    OpacityEngineLayer$(_alpha, _offset) {
      return new A.OpacityEngineLayer(_alpha, _offset, B._setArrayType([], type$.JSArray_Layer), C.Rect_0_0_0_0);
    },
    TransformEngineLayer$(_transform) {
      return new A.TransformEngineLayer(_transform, B._setArrayType([], type$.JSArray_Layer), C.Rect_0_0_0_0);
    },
    OffsetEngineLayer$(dx, dy) {
      return new A.OffsetEngineLayer(A.Matrix4_Matrix4$translationValues(dx, dy, 0), B._setArrayType([], type$.JSArray_Layer), C.Rect_0_0_0_0);
    },
    PictureLayer$0(picture, offset, isComplex, willChange) {
      return new A.PictureLayer0(picture, offset, C.Rect_0_0_0_0);
    },
    LayerScene$(rootLayer) {
      return new A.LayerScene(A.LayerTree$(rootLayer));
    },
    LayerSceneBuilder$() {
      var t1 = new A.LayerSceneBuilder(A.RootLayer$());
      t1.LayerSceneBuilder$0();
      return t1;
    },
    LayerTree$(rootLayer) {
      return new A.LayerTree(rootLayer);
    },
    Frame$(canvas, rasterCache, viewEmbedder) {
      return new A.Frame(canvas, rasterCache, viewEmbedder);
    },
    CompositorContext$() {
      return new A.CompositorContext();
    },
    MultiSurfaceRasterizer$() {
      return new A.MultiSurfaceRasterizer(B.LinkedHashMap_LinkedHashMap$_empty(type$.EngineFlutterView, type$.MultiSurfaceViewRasterizer));
    },
    MultiSurfaceViewRasterizer$(view, rasterizer) {
      return new A.MultiSurfaceViewRasterizer(A.DisplayCanvasFactory$(new A.MultiSurfaceViewRasterizer_displayFactory_closure(), type$.Surface), view, A.RenderQueue$(), C.BitmapSize_0_0, A.CompositorContext$());
    },
    CkNWayCanvas$() {
      return new A.CkNWayCanvas(B._setArrayType([], type$.JSArray_CkCanvas));
    },
    NativeMemoryFinalizationRegistry$() {
      return new A.NativeMemoryFinalizationRegistry();
    },
    UniqueRef$(owner, nativeObject, _debugOwnerLabel, $T) {
      var t1 = new A.UniqueRef(_debugOwnerLabel, $T._eval$1("UniqueRef<0>"));
      t1.UniqueRef$3(owner, nativeObject, _debugOwnerLabel, $T);
      return t1;
    },
    CountedRef$(nativeObject, debugReferrer, debugLabel, $R, $T) {
      var t1 = new A.CountedRef(B.LinkedHashSet_LinkedHashSet$_empty($R), $R._eval$1("@<0>")._bind$1($T)._eval$1("CountedRef<1,2>"));
      t1.CountedRef$3(nativeObject, debugReferrer, debugLabel, $R, $T);
      return t1;
    },
    OffscreenCanvasRasterizer$() {
      return new A.OffscreenCanvasRasterizer(A.Surface$(false), B.LinkedHashMap_LinkedHashMap$_empty(type$.EngineFlutterView, type$.OffscreenCanvasViewRasterizer));
    },
    OffscreenCanvasViewRasterizer$(view, rasterizer) {
      return new A.OffscreenCanvasViewRasterizer(rasterizer, A.DisplayCanvasFactory$(new A.OffscreenCanvasViewRasterizer_displayFactory_closure(), type$.RenderCanvas), view, A.RenderQueue$(), C.BitmapSize_0_0, A.CompositorContext$());
    },
    Rendering$() {
      return new A.Rendering(B._setArrayType([], type$.JSArray_RenderingEntity));
    },
    RenderingRenderCanvas$() {
      return new A.RenderingRenderCanvas(B._setArrayType([], type$.JSArray_CkPicture));
    },
    RenderingPlatformView$(viewId) {
      return new A.RenderingPlatformView(viewId);
    },
    computePlatformViewBounds(params) {
      var t1, currentClipBounds, t2,
        currentTransform = A.Matrix4$identity();
      $label0$1:
        for (t1 = J.get$iterator$ax(J.get$reversed$ax(params.get$mutators())), currentClipBounds = C.Rect_tsf; B.boolConversionCheck(t1.moveNext$0());) {
          t2 = t1.get$current();
          switch (t2.type) {
            case C.MutatorType_0:
              t2 = t2.rect;
              t2.toString;
              currentClipBounds = currentClipBounds.intersect$1(A.transformRectWithMatrix(currentTransform, t2));
              break;
            case C.MutatorType_1:
              currentClipBounds = currentClipBounds.intersect$1(A.transformRectWithMatrix(currentTransform, t2.rrect.get$outerRect()));
              break;
            case C.MutatorType_2:
              currentClipBounds.intersect$1(A.transformRectWithMatrix(currentTransform, t2.path.getBounds$0()));
              break;
            case C.MutatorType_3:
              t2 = t2.matrix;
              t2.toString;
              currentTransform = currentTransform.multiplied$1(t2);
              break;
            case C.MutatorType_4:
              continue $label0$1;
          }
        }
      return A.transformRectWithMatrix(currentTransform, A.Rect$fromLTWH(params.get$offset().get$dx(), params.get$offset().get$dy(), params.get$size().get$width(), params.get$size().get$height())).intersect$1(currentClipBounds);
    },
    createOptimizedRendering(pictures, platformViews, paramsForViews) {
      var t2, i, t3, platformView, platformViewBounds, intersectsWithCurrentPictures,
        result = A.Rendering$(),
        currentRenderCanvas = A.RenderingRenderCanvas$(),
        t1 = J.getInterceptor$asx(pictures);
      if (!B.boolConversionCheck(J.get$isEmpty$asx(t1.$index(pictures, 0).get$cullRect())))
        currentRenderCanvas.add$1(0, t1.$index(pictures, 0));
      t2 = J.getInterceptor$asx(platformViews);
      i = 0;
      while (true) {
        t3 = t2.get$length(platformViews);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i < t3))
          break;
        platformView = A.RenderingPlatformView$(t2.$index(platformViews, i));
        if (B.boolConversionCheck($.$get$PlatformViewManager_instance().isVisible$1(t2.$index(platformViews, i)))) {
          t3 = paramsForViews.$index(0, t2.$index(platformViews, i));
          t3.toString;
          platformViewBounds = A.computePlatformViewBounds(t3);
          t3 = J.get$iterator$ax(currentRenderCanvas.pictures);
          while (true) {
            if (!B.boolConversionCheck(t3.moveNext$0())) {
              intersectsWithCurrentPictures = false;
              break;
            }
            if (B.boolConversionCheck(t3.get$current().get$cullRect().overlaps$1(platformViewBounds))) {
              intersectsWithCurrentPictures = true;
              break;
            }
          }
          if (intersectsWithCurrentPictures) {
            result.add$1(0, currentRenderCanvas);
            currentRenderCanvas = A.RenderingRenderCanvas$();
          }
        }
        result.add$1(0, platformView);
        ++i;
        if (!B.boolConversionCheck(J.get$isEmpty$asx(t1.$index(pictures, i).get$cullRect())))
          currentRenderCanvas.add$1(0, t1.$index(pictures, i));
      }
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(currentRenderCanvas.pictures)))
        result.add$1(0, currentRenderCanvas);
      return result;
    },
    CkPaint$() {
      var t1 = type$.Object;
      t1 = new A.CkPaint(A._callConstructorUnchecked0(B._getPropertyTrustType(B._getPropertyTrustType(B._getPropertyTrustType(B.staticInteropGlobalContext(), "window", t1), "flutterCanvasKit", t1), "Paint", t1), type$.JavaScriptObject), C.BlendMode_3, C.PaintingStyle_0, C.FilterQuality_0);
      t1.CkPaint$0();
      return t1;
    },
    CkPath_CkPath() {
      var t1 = type$.Object,
        skPath = A._callConstructorUnchecked0(B._getPropertyTrustType(B._getPropertyTrustType(B._getPropertyTrustType(B.staticInteropGlobalContext(), "window", t1), "flutterCanvasKit", t1), "Path", t1), type$.JavaScriptObject);
      B._callMethodUnchecked1(skPath, "setFillType", A.toSkFillType(C.PathFillType_0), type$.void);
      return A.CkPath$_(skPath, C.PathFillType_0);
    },
    CkPath_CkPath$fromSkPath(skPath, fillType) {
      B._callMethodUnchecked1(skPath, "setFillType", A.toSkFillType(fillType), type$.void);
      return A.CkPath$_(skPath, fillType);
    },
    CkPath$_(nativeObject, _fillType) {
      var t1 = new A.CkPath(_fillType);
      t1.CkPath$_$2(nativeObject, _fillType);
      return t1;
    },
    CkPicture$(skPicture) {
      var t1 = new A.CkPicture();
      t1.CkPicture$1(skPicture);
      return t1;
    },
    CkPictureRecorder$() {
      return new A.CkPictureRecorder();
    },
    RenderQueue$() {
      return new A.RenderQueue();
    },
    RenderCanvas$() {
      var t1 = new A.RenderCanvas(A.createDomElement("flt-canvas-container"), A.createDomCanvasElement(null, null));
      t1.RenderCanvas$0();
      return t1;
    },
    CanvasKitRenderer$() {
      return new A.CanvasKitRenderer(A.CanvasKitRenderer__createRasterizer(), A.Surface$(false), B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.ViewRasterizer));
    },
    CanvasKitRenderer_instance() {
      return A.CanvasKitRenderer__instance0();
    },
    CanvasKitRenderer__instance(value) {
      $.CanvasKitRenderer____instance.set$value(value);
    },
    CanvasKitRenderer__instance0() {
      return $.CanvasKitRenderer____instance.readField$1$0(type$.CanvasKitRenderer);
    },
    CanvasKitRenderer__createRasterizer() {
      if (B.boolConversionCheck(A.isSafari()) || B.boolConversionCheck(A.isFirefox()))
        return A.MultiSurfaceRasterizer$();
      return A.OffscreenCanvasRasterizer$();
    },
    CkGradientLinear$(from, to, colors, colorStops, tileMode, matrix) {
      var t1 = new A.CkGradientLinear(from, to, colors, colorStops, tileMode, matrix);
      t1.SimpleCkShader$0();
      return t1;
    },
    Surface$(isDisplayCanvas) {
      var t1 = A.createDomElement("flt-canvas-container");
      return new A.Surface(B.boolConversionCheck(A.Surface_offscreenCanvasSupported()) && !isDisplayCanvas, isDisplayCanvas, t1);
    },
    Surface_offscreenCanvasSupported() {
      return B.boolConversionCheck($.$get$browserSupportsOffscreenCanvas()) && !B.boolConversionCheck(A.isSafari());
    },
    CkSurface$(surface, _glContext) {
      return new A.CkSurface(surface);
    },
    _computeEffectiveFontFamily(fontFamily) {
      return B.boolConversionCheck(A.debugEmulateFlutterTesterEnvironment()) && !B.boolConversionCheck(J.contains$1$asx($._testFonts, fontFamily)) ? J.get$first$ax($._testFonts) : fontFamily;
    },
    CkParagraphStyle$(ellipsis, fontFamily, fontSize, fontStyle, fontWeight, height, locale, maxLines, strutStyle, textAlign, textDirection, textHeightBehavior) {
      var t3,
        t1 = A._computeEffectiveFontFamily(fontFamily),
        t2 = height === 0;
      t1 = A.CkParagraphStyle_toSkParagraphStyle(textAlign, textDirection, maxLines, t1, fontSize, t2 ? null : height, textHeightBehavior, fontWeight, fontStyle, strutStyle, ellipsis, locale);
      t3 = A._computeEffectiveFontFamily(fontFamily);
      return new A.CkParagraphStyle(t1, textAlign, textDirection, fontWeight, fontStyle, maxLines, fontFamily, t3, fontSize, t2 ? null : height, textHeightBehavior, strutStyle, ellipsis, locale);
    },
    CkParagraphStyle_toSkTextStyleProperties(fontFamily, fontSize, height, fontWeight, fontStyle) {
      var t1 = type$.JavaScriptObject,
        skTextStyle = t1._as({});
      if (fontWeight != null || fontStyle != null)
        B._setPropertyUnchecked(skTextStyle, "fontStyle", A.toSkFontStyle(fontWeight, fontStyle), t1);
      if (fontSize != null)
        A.SkTextStylePropertiesExtension_set_fontSize(skTextStyle, fontSize);
      if (height != null)
        A.SkTextStylePropertiesExtension_set_heightMultiplier(skTextStyle, height);
      A.SkTextStylePropertiesExtension_set_fontFamilies(skTextStyle, A._computeCombinedFontFamilies(fontFamily, null));
      return skTextStyle;
    },
    CkParagraphStyle_toSkStrutStyleProperties(value, paragraphHeightBehavior) {
      var t1, skStrutStyle, t2, effectiveLeadingDistribution;
      type$.CkStrutStyle._as(value);
      t1 = type$.JavaScriptObject;
      skStrutStyle = t1._as({});
      A.SkStrutStylePropertiesExtension_set_fontFamilies(skStrutStyle, A._computeCombinedFontFamilies(value._fontFamily, value._fontFamilyFallback));
      t2 = value._fontSize;
      if (t2 != null)
        A.SkStrutStylePropertiesExtension_set_fontSize(skStrutStyle, t2);
      t2 = value._height;
      if (t2 != null)
        A.SkStrutStylePropertiesExtension_set_heightMultiplier(skStrutStyle, t2);
      effectiveLeadingDistribution = value._leadingDistribution;
      if (effectiveLeadingDistribution == null)
        effectiveLeadingDistribution = paragraphHeightBehavior == null ? null : paragraphHeightBehavior.leadingDistribution;
      switch (effectiveLeadingDistribution) {
        case null:
        case void 0:
          break;
        case C.TextLeadingDistribution_1:
          A.SkStrutStylePropertiesExtension_set_halfLeading(skStrutStyle, true);
          break;
        case C.TextLeadingDistribution_0:
          A.SkStrutStylePropertiesExtension_set_halfLeading(skStrutStyle, false);
          break;
      }
      t2 = value._leading;
      if (t2 != null)
        A.SkStrutStylePropertiesExtension_set_leading(skStrutStyle, t2);
      t2 = value._fontWeight;
      if (t2 != null || value._fontStyle != null)
        B._setPropertyUnchecked(skStrutStyle, "fontStyle", A.toSkFontStyle(t2, value._fontStyle), t1);
      t1 = value._forceStrutHeight;
      if (t1 != null)
        A.SkStrutStylePropertiesExtension_set_forceStrutHeight(skStrutStyle, t1);
      A.SkStrutStylePropertiesExtension_set_strutEnabled(skStrutStyle, true);
      return skStrutStyle;
    },
    CkParagraphStyle_toSkParagraphStyle(textAlign, textDirection, maxLines, fontFamily, fontSize, height, textHeightBehavior, fontWeight, fontStyle, strutStyle, ellipsis, locale) {
      var t1 = type$.JavaScriptObject,
        properties = t1._as({});
      if (textAlign != null)
        B._setPropertyUnchecked(properties, "textAlign", A.toSkTextAlign(textAlign), t1);
      if (textDirection != null)
        B._setPropertyUnchecked(properties, "textDirection", A.toSkTextDirection(textDirection), t1);
      if (maxLines != null)
        A.SkParagraphStylePropertiesExtension_set_maxLines(properties, maxLines);
      if (height != null)
        A.SkParagraphStylePropertiesExtension_set_heightMultiplier(properties, height);
      if (textHeightBehavior != null)
        B._setPropertyUnchecked(properties, "textHeightBehavior", A.toSkTextHeightBehavior(textHeightBehavior), t1);
      if (ellipsis != null)
        A.SkParagraphStylePropertiesExtension_set_ellipsis(properties, ellipsis);
      if (strutStyle != null)
        B._setPropertyUnchecked(properties, "strutStyle", A.CkParagraphStyle_toSkStrutStyleProperties(strutStyle, textHeightBehavior), t1);
      A.SkParagraphStylePropertiesExtension_set_replaceTabCharacters(properties, true);
      B._setPropertyUnchecked(properties, "textStyle", A.CkParagraphStyle_toSkTextStyleProperties(fontFamily, fontSize, height, fontWeight, fontStyle), t1);
      B._setPropertyUnchecked(properties, "applyRoundingHack", false, type$.bool);
      return B._callMethodUnchecked1(A.canvasKit(), "ParagraphStyle", properties, t1);
    },
    CkTextStyle_CkTextStyle(background, color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, leadingDistribution, letterSpacing, locale, shadows, textBaseline, wordSpacing) {
      var t1 = A._computeEffectiveFontFamily(fontFamily);
      return A.CkTextStyle$_(background, color, decoration, decorationColor, decorationStyle, decorationThickness, t1, B.boolConversionCheck(A.debugEmulateFlutterTesterEnvironment()) ? null : fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, leadingDistribution, letterSpacing, locale, fontFamily, fontFamilyFallback, shadows, textBaseline, wordSpacing);
    },
    CkTextStyle$_(background, color, decoration, decorationColor, decorationStyle, decorationThickness, effectiveFontFamily, effectiveFontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, leadingDistribution, letterSpacing, locale, originalFontFamily, originalFontFamilyFallback, shadows, textBaseline, wordSpacing) {
      return new A.CkTextStyle(color, decoration, decorationColor, decorationStyle, decorationThickness, fontWeight, fontStyle, textBaseline, originalFontFamily, effectiveFontFamily, originalFontFamilyFallback, effectiveFontFamilyFallback, fontSize, letterSpacing, wordSpacing, height, leadingDistribution, locale, background, foreground, shadows, fontFeatures, fontVariations);
    },
    toSkFontStyle(fontWeight, fontStyle) {
      var t1 = type$.JavaScriptObject,
        style = t1._as({});
      if (fontWeight != null)
        B._setPropertyUnchecked(style, "weight", A.toSkFontWeight(fontWeight), t1);
      if (fontStyle != null)
        B._setPropertyUnchecked(style, "slant", A.toSkFontSlant(fontStyle), t1);
      return style;
    },
    CkParagraph$(skParagraph, _paragraphStyle) {
      var t1 = new A.CkParagraph(_paragraphStyle);
      t1.CkParagraph$2(skParagraph, _paragraphStyle);
      return t1;
    },
    CkLineMetrics$_(skLineMetrics) {
      return new A.CkLineMetrics(skLineMetrics);
    },
    CkParagraphBuilder$(style) {
      var t1, t2;
      type$.CkParagraphStyle._as(style);
      t1 = B._setArrayType([], type$.JSArray_CkTextStyle);
      t2 = type$.JavaScriptObject;
      t1 = new A.CkParagraphBuilder(B._callMethodUnchecked2(B.getProperty(A.canvasKit(), "ParagraphBuilder", t2), "MakeFromFontCollection", style.skParagraphStyle, A.CanvasKitRenderer_instance().get$fontCollection().skFontCollection, t2), style, t1);
      t1.CkParagraphBuilder$1(style);
      return t1;
    },
    _computeCombinedFontFamilies(fontFamily, fontFamilyFallback) {
      var fontFamilies = B._setArrayType([], type$.JSArray_String);
      if (fontFamily != null)
        D.JSArray_methods.add$1(fontFamilies, fontFamily);
      if (fontFamilyFallback != null && !B.boolConversionCheck(J.every$1$ax(fontFamilyFallback, new A._computeCombinedFontFamilies_closure(fontFamily))))
        D.JSArray_methods.addAll$1(fontFamilies, fontFamilyFallback);
      D.JSArray_methods.addAll$1(fontFamilies, A.renderer().get$fontCollection().get$fontFallbackManager().globalFontFallbacks);
      return fontFamilies;
    },
    SegmentationCacheExtensions_getCacheForText(_this, text) {
      var t1 = text.length;
      if (t1 <= 10)
        return _this._2;
      if (t1 <= 100)
        return _this._1;
      if (t1 <= 50000)
        return _this._0;
      return null;
    },
    injectClientICU(builder) {
      var result = A.segmentText(A.SkParagraphBuilderExtension_getText(builder));
      A.SkParagraphBuilderExtension_setWordsUtf16(builder, result._2);
      A.SkParagraphBuilderExtension_setGraphemeBreaksUtf16(builder, result._1);
      A.SkParagraphBuilderExtension_setLineBreaksUtf16(builder, result._0);
    },
    segmentText(text) {
      var result, t2, t3,
        cache = A.SegmentationCacheExtensions_getCacheForText($.$get$segmentationCache(), text),
        t1 = cache == null,
        cachedResult = t1 ? null : cache.$index(0, text);
      if (cachedResult != null)
        result = cachedResult;
      else {
        t2 = A.fragmentUsingIntlSegmenter(text, C.IntlSegmenterGranularity_1);
        t3 = A.fragmentUsingIntlSegmenter(text, C.IntlSegmenterGranularity_0);
        result = new B._Record_3_breaks_graphemes_words(A.fragmentUsingV8LineBreaker(text), t3, t2);
      }
      if (!t1)
        cache.cache$2(text, result);
      return result;
    },
    fragmentUsingIntlSegmenter(text, granularity) {
      var iterator, breaks,
        t1 = J.$index$asx($.$get$_intlSegmenters(), granularity);
      t1.toString;
      iterator = A.DomSegmentsExtension_iterator(A.DomSegmenterExtension_segment(t1, text));
      breaks = B._setArrayType([], type$.JSArray_int);
      for (; B.boolConversionCheck(iterator.moveNext$0());)
        D.JSArray_methods.add$1(breaks, A.DomSegmentExtension_get_index(iterator.get$current()));
      D.JSArray_methods.add$1(breaks, text.length);
      return A.NativeUint32List_NativeUint32List$fromList(breaks);
    },
    fragmentUsingV8LineBreaker(text) {
      var typedArray, i, t3, fragment, uint32Index, t4,
        fragments = A.breakLinesUsingV8BreakIterator(text, B.StringToJSString_get_toJS(text), $.$get$_v8LineBreaker()),
        t1 = J.getInterceptor$asx(fragments),
        t2 = t1.get$length(fragments);
      if (typeof t2 !== "number")
        return t2.$add();
      typedArray = A.NativeUint32List_NativeUint32List((t2 + 1) * 2);
      t2 = typedArray.length;
      if (0 >= t2)
        return B.ioore(typedArray, 0);
      typedArray[0] = 0;
      if (1 >= t2)
        return B.ioore(typedArray, 1);
      typedArray[1] = 0;
      i = 0;
      while (true) {
        t3 = t1.get$length(fragments);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i < t3))
          break;
        fragment = t1.$index(fragments, i);
        uint32Index = 2 + i * 2;
        D.NativeUint32List_methods.$indexSet(typedArray, uint32Index, fragment.end);
        t3 = uint32Index + 1;
        t4 = B.boolConversionCheck(J.$eq$(fragment.type, C.LineBreakType_2)) ? 1 : 0;
        if (!(t3 < t2))
          return B.ioore(typedArray, t3);
        typedArray[t3] = t4;
        ++i;
      }
      return typedArray;
    },
    CanvasKitError$(message) {
      return new A.CanvasKitError(message);
    },
    makeFreshSkColor(color) {
      var t2,
        result = A.NativeFloat32List_NativeFloat32List(4),
        t1 = color.get$red();
      if (typeof t1 !== "number")
        return t1.$div();
      t2 = result.length;
      if (0 >= t2)
        return B.ioore(result, 0);
      result[0] = t1 / 255;
      t1 = color.get$green();
      if (typeof t1 !== "number")
        return t1.$div();
      if (1 >= t2)
        return B.ioore(result, 1);
      result[1] = t1 / 255;
      t1 = color.get$blue();
      if (typeof t1 !== "number")
        return t1.$div();
      if (2 >= t2)
        return B.ioore(result, 2);
      result[2] = t1 / 255;
      t1 = color.get$alpha();
      if (typeof t1 !== "number")
        return t1.$div();
      if (3 >= t2)
        return B.ioore(result, 3);
      result[3] = t1 / 255;
      return result;
    },
    fromPositionWithAffinity(positionWithAffinity) {
      return A.TextPosition$(D.JSArray_methods.$index(C.List_TextAffinity_0_TextAffinity_1, J.toInt$0$n(A.SkAffinityExtension_get_value(B.getProperty(positionWithAffinity, "affinity", type$.JavaScriptObject)))), J.toInt$0$n(A.SkTextPositionExtnsion_get_pos(positionWithAffinity)));
    },
    drawSkShadow(skCanvas, path, color, elevation, transparentOccluder, devicePixelRatio) {
      var inAmbient, inSpot, inTonalColors, tonalColors, t2, t3, t4,
        flags = transparentOccluder ? 5 : 4,
        t1 = color.get$alpha();
      if (typeof t1 !== "number")
        return t1.$mul();
      inAmbient = color.withAlpha$1(D.JSNumber_methods.round$0(t1 * 0.039));
      t1 = color.get$alpha();
      if (typeof t1 !== "number")
        return t1.$mul();
      inSpot = color.withAlpha$1(D.JSNumber_methods.round$0(t1 * 0.25));
      inTonalColors = A.SkTonalColors__staticInteropFactoryStub(A.makeFreshSkColor(inAmbient), A.makeFreshSkColor(inSpot));
      tonalColors = B._callMethodUnchecked1(A.canvasKit(), "computeTonalColors", inTonalColors, type$.JavaScriptObject);
      t1 = path.get$skiaObject();
      t2 = A.NativeFloat32List_NativeFloat32List(3);
      J.$indexSet$ax(t2, 2, devicePixelRatio * elevation);
      t3 = A.NativeFloat32List_NativeFloat32List(3);
      t4 = J.getInterceptor$ax(t3);
      t4.$indexSet(t3, 0, 0);
      t4.$indexSet(t3, 1, -1);
      t4.$indexSet(t3, 2, 1);
      A.SkCanvasExtension_drawShadow(skCanvas, t1, t2, t3, 1.3333333333333333, A.SkTonalColorsExtension_get_ambient(tonalColors), A.SkTonalColorsExtension_get_spot(tonalColors), D.JSInt_methods.toDouble$0(flags | 4));
    },
    ClipboardMessageHandler$() {
      return new A.ClipboardMessageHandler(A.CopyToClipboardStrategy_CopyToClipboardStrategy(), A.PasteFromClipboardStrategy_PasteFromClipboardStrategy());
    },
    CopyToClipboardStrategy_CopyToClipboardStrategy() {
      return B.getProperty(B.getProperty(self.window, "navigator", type$.JavaScriptObject), "clipboard", type$.nullable_JavaScriptObject) != null ? A.ClipboardAPICopyStrategy$() : A.ExecCommandCopyStrategy$();
    },
    PasteFromClipboardStrategy_PasteFromClipboardStrategy() {
      return B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_2)) || B.getProperty(B.getProperty(self.window, "navigator", type$.JavaScriptObject), "clipboard", type$.nullable_JavaScriptObject) == null ? A.ExecCommandPasteStrategy$() : A.ClipboardAPIPasteStrategy$();
    },
    ClipboardAPICopyStrategy$() {
      return new A.ClipboardAPICopyStrategy();
    },
    ClipboardAPIPasteStrategy$() {
      return new A.ClipboardAPIPasteStrategy();
    },
    ExecCommandCopyStrategy$() {
      return new A.ExecCommandCopyStrategy();
    },
    ExecCommandPasteStrategy$() {
      return new A.ExecCommandPasteStrategy();
    },
    configuration() {
      var t1 = $._configuration;
      return t1 == null ? $._configuration = A.FlutterConfiguration$legacy(self.window.flutterConfiguration) : t1;
    },
    FlutterConfiguration$legacy(config) {
      var t1 = new A.FlutterConfiguration();
      t1.FlutterConfiguration$legacy$1(config);
      return t1;
    },
    JsFlutterConfigurationExtension_get_assetBase(_this) {
      var t1 = B.getProperty(_this, "assetBase", type$.nullable_String);
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    JsFlutterConfigurationExtension_get_canvasKitBaseUrl(_this) {
      var t1 = B.getProperty(_this, "canvasKitBaseUrl", type$.nullable_String);
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    JsFlutterConfigurationExtension_get_canvasKitVariant(_this) {
      var t1 = B.getProperty(_this, "canvasKitVariant", type$.nullable_String);
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    JsFlutterConfigurationExtension_get_canvasKitForceCpuOnly(_this) {
      var t1 = B.getProperty(_this, "canvasKitForceCpuOnly", type$.nullable_bool);
      return t1 == null ? null : A.JSBooleanToBool_get_toDart(t1);
    },
    JsFlutterConfigurationExtension_get_canvasKitMaximumSurfaces(_this) {
      var t1 = B.getProperty(_this, "canvasKitMaximumSurfaces", type$.nullable_double);
      return t1 == null ? null : A.JSNumberToNumber_get_toDartDouble(t1);
    },
    JsFlutterConfigurationExtension_get_debugShowSemanticsNodes(_this) {
      var t1 = B.getProperty(_this, "debugShowSemanticsNodes", type$.nullable_bool);
      return t1 == null ? null : A.JSBooleanToBool_get_toDart(t1);
    },
    JsFlutterConfigurationExtension_get_multiViewEnabled(_this) {
      var t1 = B.getProperty(_this, "multiViewEnabled", type$.nullable_bool);
      return t1 == null ? null : A.JSBooleanToBool_get_toDart(t1);
    },
    JsFlutterConfigurationExtension_get_nonce(_this) {
      var t1 = B.getProperty(_this, "nonce", type$.nullable_String);
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    JsFlutterConfigurationExtension_get_renderer(_this) {
      var t1 = B.getProperty(_this, "renderer", type$.nullable_String);
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    JsFlutterConfigurationExtension_get_fontFallbackBaseUrl(_this) {
      var t1 = B.getProperty(_this, "fontFallbackBaseUrl", type$.nullable_String);
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    JsFlutterConfigurationExtension_get_useColorEmoji(_this) {
      var t1 = B.getProperty(_this, "useColorEmoji", type$.nullable_bool);
      return t1 == null ? null : A.JSBooleanToBool_get_toDart(t1);
    },
    _requestedRendererType() {
      var t1 = self.window.flutterWebRenderer;
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    EngineFlutterDisplay$(id, refreshRate, size) {
      return new A.EngineFlutterDisplay(size);
    },
    EngineFlutterDisplay_instance() {
      return $.$get$EngineFlutterDisplay__instance();
    },
    ScreenOrientation_instance() {
      return C.C_ScreenOrientation;
    },
    ScreenOrientation__deviceOrientationToLockType(deviceOrientation) {
      switch (deviceOrientation) {
        case "DeviceOrientation.portraitUp":
          return "portrait-primary";
        case "DeviceOrientation.portraitDown":
          return "portrait-secondary";
        case "DeviceOrientation.landscapeLeft":
          return "landscape-primary";
        case "DeviceOrientation.landscapeRight":
          return "landscape-secondary";
        default:
          return null;
      }
    },
    ObjectToJSAnyExtension_get_toJSAnyShallow(_this) {
      if (B.boolConversionCheck(A.isWasm()))
        return A.ObjectToJSAnyExtension_get_toJSAnyDeep(_this);
      else
        return _this;
    },
    ObjectToJSAnyExtension_get_toJSAnyDeep(_this) {
      var t1 = A.jsify(_this);
      return t1 == null ? type$.Object._as(t1) : t1;
    },
    JSAnyToObjectExtension_get_toObjectShallow(_this) {
      if (B.boolConversionCheck(A.isWasm()))
        return A.JSAnyToObjectExtension_get_toObjectDeep(_this);
      else
        return _this;
    },
    JSAnyToObjectExtension_get_toObjectDeep(_this) {
      var t1 = A.dartify(_this);
      t1.toString;
      return t1;
    },
    DomWindowExtension_get_devicePixelRatio(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "devicePixelRatio", type$.double));
    },
    DomWindowExtension_get_innerHeight(_this) {
      var t1 = B.getProperty(_this, "innerHeight", type$.nullable_double);
      return t1 == null ? null : A.JSNumberToNumber_get_toDartDouble(t1);
    },
    DomWindowExtension_get_innerWidth(_this) {
      var t1 = B.getProperty(_this, "innerWidth", type$.nullable_double);
      return t1 == null ? null : A.JSNumberToNumber_get_toDartDouble(t1);
    },
    DomWindowExtension_dispatchEvent(_this, $event) {
      return A.JSBooleanToBool_get_toDart(B._callMethodUnchecked1(_this, "dispatchEvent", $event, type$.bool));
    },
    DomWindowExtension_matchMedia(_this, query) {
      var t1 = query == null ? null : B.StringToJSString_get_toJS(query);
      return B._callMethodUnchecked1(_this, "matchMedia", t1, type$.JavaScriptObject);
    },
    DomWindowExtension_getComputedStyle(_this, elt) {
      var t1 = B._callMethodUnchecked1(_this, "getComputedStyle", elt, type$.JavaScriptObject);
      return t1;
    },
    DomWindowExtension_requestAnimationFrame(_this, callback) {
      return A.JSNumberToNumber_get_toDartDouble(B._callMethodUnchecked1(_this, "requestAnimationFrame", B._functionToJS1(callback), type$.double));
    },
    DomConsoleExtension_get_warn(_this) {
      return new A.DomConsoleExtension_get_warn_closure(_this);
    },
    DomConsoleExtension_warn(_this, arg) {
      return B._callMethodUnchecked1(_this, "warn", B.StringToJSString_get_toJS(J.toString$0$(arg)), type$.void);
    },
    DomConsoleExtension_error(_this, arg) {
      return B._callMethodUnchecked1(_this, "error", B.StringToJSString_get_toJS(J.toString$0$(arg)), type$.void);
    },
    createImageBitmap(source, bounds) {
      var t1, jsPromise;
      if (bounds != null) {
        t1 = bounds._values;
        jsPromise = self.createImageBitmap(source, A.NumToJSExtension_get_toJS(t1[2]), A.NumToJSExtension_get_toJS(t1[3]), A.NumToJSExtension_get_toJS(t1[1]), A.NumToJSExtension_get_toJS(t1[0]));
      } else
        jsPromise = self.createImageBitmap(source);
      return A.promiseToFuture(jsPromise, type$.JavaScriptObject);
    },
    DomNavigatorExtension_get_maxTouchPoints(_this) {
      var t1 = B.getProperty(_this, "maxTouchPoints", type$.nullable_double);
      return t1 == null ? null : A.JSNumberToNumber_get_toDartDouble(t1);
    },
    DomNavigatorExtension_get_vendor(_this) {
      return A.JSStringToString_get_toDart(B.getProperty(_this, "vendor", type$.String));
    },
    DomNavigatorExtension_get_language(_this) {
      return A.JSStringToString_get_toDart(B.getProperty(_this, "language", type$.String));
    },
    DomNavigatorExtension_get_platform(_this) {
      var t1 = B.getProperty(_this, "platform", type$.nullable_String);
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    DomNavigatorExtension_get_userAgent(_this) {
      return A.JSStringToString_get_toDart(B.getProperty(_this, "userAgent", type$.String));
    },
    DomNavigatorExtension_get_languages(_this) {
      var t1 = B.getProperty(_this, "languages", type$.nullable_JSArray_nullable_Object);
      return t1 == null ? null : J.toList$0$ax(J.map$1$1$ax(A.JSArrayToList_get_toDart(t1, type$.nullable_Object), new A.DomNavigatorExtension_get_languages_closure(), type$.String));
    },
    DomDocumentExtension_querySelector(_this, selectors) {
      return B._callMethodUnchecked1(_this, "querySelector", B.StringToJSString_get_toJS(selectors), type$.nullable_JavaScriptObject);
    },
    DomDocumentExtension_createElement(_this, $name) {
      var t1 = B._callMethodUnchecked1(_this, "createElement", B.StringToJSString_get_toJS($name), type$.JavaScriptObject);
      return t1;
    },
    DomDocumentExtension_execCommand(_this, commandId) {
      return A.JSBooleanToBool_get_toDart(B._callMethodUnchecked1(_this, "execCommand", B.StringToJSString_get_toJS(commandId), type$.bool));
    },
    DomDocumentExtension_createElementNS(_this, namespaceURI, qualifiedName) {
      return B._callMethodUnchecked2(_this, "createElementNS", B.StringToJSString_get_toJS(namespaceURI), B.StringToJSString_get_toJS(qualifiedName), type$.JavaScriptObject);
    },
    DomDocumentExtension_createTextNode(_this, data) {
      return B._callMethodUnchecked1(_this, "createTextNode", B.StringToJSString_get_toJS(data), type$.JavaScriptObject);
    },
    DomDocumentExtension_createEvent(_this, eventType) {
      return B._callMethodUnchecked1(_this, "createEvent", B.StringToJSString_get_toJS(eventType), type$.JavaScriptObject);
    },
    DomHTMLDocumentExtension_set_title(_this, value) {
      var t1 = value == null ? null : B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "title", t1, type$.nullable_String);
      return t1;
    },
    DomHTMLDocumentExtension_get_visibilityState(_this) {
      return A.JSStringToString_get_toDart(B.getProperty(_this, "visibilityState", type$.String));
    },
    DomEventTargetExtension_addEventListener(_this, type, listener, useCapture) {
      var t1,
        _s16_ = "addEventListener";
      if (listener != null) {
        t1 = type$.void;
        if (useCapture == null)
          B._callMethodUnchecked2(_this, _s16_, B.StringToJSString_get_toJS(type), listener, t1);
        else
          B._callMethodUnchecked3(_this, _s16_, B.StringToJSString_get_toJS(type), listener, B.BoolToJSBoolean_get_toJS(useCapture), t1);
      }
    },
    DomEventTargetExtension_addEventListenerWithOptions(_this, type, listener, options) {
      return B._callMethodUnchecked3(_this, "addEventListener", B.StringToJSString_get_toJS(type), listener, A.ObjectToJSAnyExtension_get_toJSAnyDeep(options), type$.void);
    },
    DomEventTargetExtension_removeEventListener(_this, type, listener, useCapture) {
      var t1,
        _s19_ = "removeEventListener";
      if (listener != null) {
        t1 = type$.void;
        if (useCapture == null)
          B._callMethodUnchecked2(_this, _s19_, B.StringToJSString_get_toJS(type), listener, t1);
        else
          B._callMethodUnchecked3(_this, _s19_, B.StringToJSString_get_toJS(type), listener, B.BoolToJSBoolean_get_toJS(useCapture), t1);
      }
    },
    createDomEventListener(listener) {
      return B._functionToJS1(listener);
    },
    DomEventExtension_get_timeStamp(_this) {
      var t1 = B.getProperty(_this, "timeStamp", type$.nullable_double);
      return t1 == null ? null : A.JSNumberToNumber_get_toDartDouble(t1);
    },
    DomEventExtension_get_type(_this) {
      return A.JSStringToString_get_toDart(B.getProperty(_this, "type", type$.String));
    },
    DomEventExtension_initEvent(_this, type, bubbles, cancelable) {
      var t1,
        _s9_ = "initEvent";
      if (bubbles == null)
        B._callMethodUnchecked1(_this, _s9_, B.StringToJSString_get_toJS(type), type$.void);
      else {
        t1 = type$.void;
        if (cancelable == null)
          B._callMethodUnchecked2(_this, _s9_, B.StringToJSString_get_toJS(type), B.BoolToJSBoolean_get_toJS(bubbles), t1);
        else
          B._callMethodUnchecked3(_this, _s9_, B.StringToJSString_get_toJS(type), B.BoolToJSBoolean_get_toJS(bubbles), B.BoolToJSBoolean_get_toJS(cancelable), t1);
      }
    },
    createDomEvent(type, $name) {
      var $event = A.DomDocumentExtension_createEvent(self.document, type);
      A.DomEventExtension_initEvent($event, $name, true, true);
      return $event;
    },
    DomNodeExtension_get_baseUri(_this) {
      var t1 = B.getProperty(_this, "baseURI", type$.nullable_String);
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    DomNodeExtension_get_parent(_this) {
      return B.getProperty(_this, "parentElement", type$.nullable_JavaScriptObject);
    },
    DomNodeExtension_remove(_this) {
      var _s10_ = "parentNode",
        t1 = type$.nullable_JavaScriptObject;
      if (B.getProperty(_this, _s10_, t1) != null) {
        t1 = B.getProperty(_this, _s10_, t1);
        t1.toString;
        B._callMethodUnchecked1(t1, "removeChild", _this, type$.JavaScriptObject);
      }
    },
    DomNodeExtension_get_isConnected(_this) {
      var t1 = B.getProperty(_this, "isConnected", type$.nullable_bool);
      return t1 == null ? null : A.JSBooleanToBool_get_toDart(t1);
    },
    DomNodeExtension_set_text(_this, value) {
      var t1 = value == null ? null : B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "textContent", t1, type$.nullable_String);
      return t1;
    },
    DomNodeExtension_cloneNode(_this, deep) {
      var t1 = deep == null ? null : B.BoolToJSBoolean_get_toJS(deep);
      return B._callMethodUnchecked1(_this, "cloneNode", t1, type$.JavaScriptObject);
    },
    DomNodeExtension_contains(_this, other) {
      return A.JSBooleanToBool_get_toDart(B._callMethodUnchecked1(_this, "contains", other, type$.bool));
    },
    createDomElement(tag) {
      return A.DomDocumentExtension_createElement(self.document, tag);
    },
    DomElementExtension_get_children(_this) {
      var t1 = type$.JavaScriptObject;
      return A.createDomListWrapper(B.getProperty(_this, "children", t1), t1);
    },
    DomElementExtension_get_clientHeight(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "clientHeight", type$.double));
    },
    DomElementExtension_get_clientWidth(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "clientWidth", type$.double));
    },
    DomElementExtension_get_offsetHeight(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "offsetHeight", type$.double));
    },
    DomElementExtension_get_offsetWidth(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "offsetWidth", type$.double));
    },
    DomElementExtension_get_id(_this) {
      return A.JSStringToString_get_toDart(B.getProperty(_this, "id", type$.String));
    },
    DomElementExtension_set_id(_this, id) {
      var t1 = B.StringToJSString_get_toJS(id);
      B._setPropertyUnchecked(_this, "id", t1, type$.String);
      return t1;
    },
    DomElementExtension_set_spellcheck(_this, value) {
      var t1 = value == null ? null : B.BoolToJSBoolean_get_toJS(value);
      B._setPropertyUnchecked(_this, "spellcheck", t1, type$.nullable_bool);
      return t1;
    },
    DomElementExtension_get_tagName(_this) {
      return A.JSStringToString_get_toDart(B.getProperty(_this, "tagName", type$.String));
    },
    DomElementExtension_getAttribute(_this, attributeName) {
      var t1 = B._callMethodUnchecked1(_this, "getAttribute", B.StringToJSString_get_toJS(attributeName), type$.nullable_String);
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    DomElementExtension_querySelector(_this, selectors) {
      return B._callMethodUnchecked1(_this, "querySelector", B.StringToJSString_get_toJS(selectors), type$.nullable_JavaScriptObject);
    },
    DomElementExtension_closest(_this, selectors) {
      return B._callMethodUnchecked1(_this, "closest", B.StringToJSString_get_toJS(selectors), type$.nullable_JavaScriptObject);
    },
    DomElementExtension_querySelectorAll(_this, selectors) {
      var t1 = type$.JavaScriptObject;
      return A.createDomListWrapper(B._callMethodUnchecked1(_this, "querySelectorAll", B.StringToJSString_get_toJS(selectors), t1), t1);
    },
    DomElementExtension_setAttribute(_this, $name, value) {
      return B._callMethodUnchecked2(_this, "setAttribute", B.StringToJSString_get_toJS($name), A.ObjectToJSAnyExtension_get_toJSAnyDeep(value), type$.void);
    },
    DomElementExtension_appendText(_this, text) {
      return B._callMethodUnchecked1(_this, "append", A.createDomText(text), type$.void);
    },
    DomElementExtension_removeAttribute(_this, $name) {
      return B._callMethodUnchecked1(_this, "removeAttribute", B.StringToJSString_get_toJS($name), type$.void);
    },
    DomElementExtension_set_tabIndex(_this, value) {
      var t1 = value == null ? null : A.DoubleToJSNumber_get_toJS(value);
      B._setPropertyUnchecked(_this, "tabIndex", t1, type$.nullable_double);
      return t1;
    },
    DomElementExtension_focus(_this, preventScroll) {
      var t1 = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.bool);
      if (preventScroll != null)
        t1.$indexSet(0, "preventScroll", preventScroll);
      B._callMethodUnchecked1(_this, "focus", A.ObjectToJSAnyExtension_get_toJSAnyDeep(t1), type$.void);
    },
    DomElementExtension_get_scrollTop(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "scrollTop", type$.double));
    },
    DomElementExtension_set_scrollTop(_this, value) {
      var t1 = A.DoubleToJSNumber_get_toJS(value);
      B._setPropertyUnchecked(_this, "scrollTop", t1, type$.double);
      return t1;
    },
    DomElementExtension_get_scrollLeft(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "scrollLeft", type$.double));
    },
    DomElementExtension_set_scrollLeft(_this, value) {
      var t1 = A.DoubleToJSNumber_get_toJS(value);
      B._setPropertyUnchecked(_this, "scrollLeft", t1, type$.double);
      return t1;
    },
    DomElementExtension_set_className(_this, value) {
      var t1 = B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "className", t1, type$.String);
      return t1;
    },
    DomElementExtension_getElementsByClassName(_this, className) {
      var t1 = type$.JavaScriptObject;
      return A.createDomListWrapper(B._callMethodUnchecked1(_this, "getElementsByClassName", B.StringToJSString_get_toJS(className), t1), t1);
    },
    DomElementExtension_hasAttribute(_this, $name) {
      return A.JSBooleanToBool_get_toDart(B._callMethodUnchecked1(_this, "hasAttribute", B.StringToJSString_get_toJS($name), type$.bool));
    },
    DomElementExtension_attachShadow(_this, initDict) {
      return B._callMethodUnchecked1(_this, "attachShadow", A.ObjectToJSAnyExtension_get_toJSAnyDeep(initDict), type$.JavaScriptObject);
    },
    DomElementExtension_clearChildren(_this) {
      var t1, t2, t3,
        _s10_ = "firstChild";
      for (t1 = type$.nullable_JavaScriptObject, t2 = type$.JavaScriptObject; B.getProperty(_this, _s10_, t1) != null;) {
        t3 = B.getProperty(_this, _s10_, t1);
        t3.toString;
        B._callMethodUnchecked1(_this, "removeChild", t3, t2);
      }
    },
    DomCSSStyleDeclarationExtension_set_width(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "width", value);
    },
    DomCSSStyleDeclarationExtension_set_height(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "height", value);
    },
    DomCSSStyleDeclarationExtension_set_position(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "position", value);
    },
    DomCSSStyleDeclarationExtension_set_transform(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "transform", value);
    },
    DomCSSStyleDeclarationExtension_set_transformOrigin(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "transform-origin", value);
    },
    DomCSSStyleDeclarationExtension_set_opacity(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "opacity", value);
    },
    DomCSSStyleDeclarationExtension_set_color(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "color", value);
    },
    DomCSSStyleDeclarationExtension_set_top(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "top", value);
    },
    DomCSSStyleDeclarationExtension_set_left(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "left", value);
    },
    DomCSSStyleDeclarationExtension_set_right(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "right", value);
    },
    DomCSSStyleDeclarationExtension_set_bottom(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "bottom", value);
    },
    DomCSSStyleDeclarationExtension_set_backgroundColor(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "background-color", value);
    },
    DomCSSStyleDeclarationExtension_set_caretColor(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "caret-color", value);
    },
    DomCSSStyleDeclarationExtension_set_pointerEvents(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "pointer-events", value);
    },
    DomCSSStyleDeclarationExtension_set_filter(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "filter", value);
    },
    DomCSSStyleDeclarationExtension_set_zIndex(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "z-index", value);
    },
    DomCSSStyleDeclarationExtension_set_whiteSpace(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "white-space", value);
    },
    DomCSSStyleDeclarationExtension_set_lineHeight(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "line-height", value);
    },
    DomCSSStyleDeclarationExtension_set_textStroke(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "-webkit-text-stroke", value);
    },
    DomCSSStyleDeclarationExtension_set_fontSize(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "font-size", value);
    },
    DomCSSStyleDeclarationExtension_set_fontWeight(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "font-weight", value);
    },
    DomCSSStyleDeclarationExtension_set_fontStyle(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "font-style", value);
    },
    DomCSSStyleDeclarationExtension_set_fontFamily(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "font-family", value);
    },
    DomCSSStyleDeclarationExtension_set_letterSpacing(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "letter-spacing", value);
    },
    DomCSSStyleDeclarationExtension_set_wordSpacing(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "word-spacing", value);
    },
    DomCSSStyleDeclarationExtension_set_textShadow(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "text-shadow", value);
    },
    DomCSSStyleDeclarationExtension_set_textDecoration(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "text-decoration", value);
    },
    DomCSSStyleDeclarationExtension_set_textDecorationColor(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "text-decoration-color", value);
    },
    DomCSSStyleDeclarationExtension_set_fontFeatureSettings(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "font-feature-settings", value);
    },
    DomCSSStyleDeclarationExtension_set_visibility(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "visibility", value);
    },
    DomCSSStyleDeclarationExtension_set_overflow(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "overflow", value);
    },
    DomCSSStyleDeclarationExtension_set_boxShadow(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "box-shadow", value);
    },
    DomCSSStyleDeclarationExtension_set_borderTopLeftRadius(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "border-top-left-radius", value);
    },
    DomCSSStyleDeclarationExtension_set_borderTopRightRadius(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "border-top-right-radius", value);
    },
    DomCSSStyleDeclarationExtension_set_borderBottomLeftRadius(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "border-bottom-left-radius", value);
    },
    DomCSSStyleDeclarationExtension_set_borderBottomRightRadius(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "border-bottom-right-radius", value);
    },
    DomCSSStyleDeclarationExtension_set_borderRadius(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "border-radius", value);
    },
    DomCSSStyleDeclarationExtension_set_padding(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "padding", value);
    },
    DomCSSStyleDeclarationExtension_set_backgroundImage(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "background-image", value);
    },
    DomCSSStyleDeclarationExtension_set_border(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "border", value);
    },
    DomCSSStyleDeclarationExtension_set_mixBlendMode(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "mix-blend-mode", value);
    },
    DomCSSStyleDeclarationExtension_set_backgroundSize(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "background-size", value);
    },
    DomCSSStyleDeclarationExtension_set_backgroundBlendMode(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "background-blend-mode", value);
    },
    DomCSSStyleDeclarationExtension_set_transformStyle(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "transform-style", value);
    },
    DomCSSStyleDeclarationExtension_set_display(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "display", value);
    },
    DomCSSStyleDeclarationExtension_set_flexDirection(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "flex-direction", value);
    },
    DomCSSStyleDeclarationExtension_set_alignItems(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "align-items", value);
    },
    DomCSSStyleDeclarationExtension_set_margin(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "margin", value);
    },
    DomCSSStyleDeclarationExtension_set_background(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "background", value);
    },
    DomCSSStyleDeclarationExtension_set_touchAction(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "touch-action", value);
    },
    DomCSSStyleDeclarationExtension_set_overflowY(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "overflow-y", value);
    },
    DomCSSStyleDeclarationExtension_set_overflowX(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "overflow-x", value);
    },
    DomCSSStyleDeclarationExtension_set_outline(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "outline", value);
    },
    DomCSSStyleDeclarationExtension_set_resize(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "resize", value);
    },
    DomCSSStyleDeclarationExtension_set_alignContent(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "align-content", value);
    },
    DomCSSStyleDeclarationExtension_set_textAlign(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "text-align", value);
    },
    DomCSSStyleDeclarationExtension_set_font(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "font", value);
    },
    DomCSSStyleDeclarationExtension_set_cursor(_this, value) {
      return A.DomCSSStyleDeclarationExtension_setProperty(_this, "cursor", value);
    },
    DomCSSStyleDeclarationExtension_get_width(_this) {
      return A.DomCSSStyleDeclarationExtension_getPropertyValue(_this, "width");
    },
    DomCSSStyleDeclarationExtension_get_height(_this) {
      return A.DomCSSStyleDeclarationExtension_getPropertyValue(_this, "height");
    },
    DomCSSStyleDeclarationExtension_get_fontSize(_this) {
      return A.DomCSSStyleDeclarationExtension_getPropertyValue(_this, "font-size");
    },
    DomCSSStyleDeclarationExtension_getPropertyValue(_this, property) {
      return A.JSStringToString_get_toDart(B._callMethodUnchecked1(_this, "getPropertyValue", B.StringToJSString_get_toJS(property), type$.String));
    },
    DomCSSStyleDeclarationExtension_setProperty(_this, propertyName, value) {
      B._callMethodUnchecked3(_this, "setProperty", B.StringToJSString_get_toJS(propertyName), B.StringToJSString_get_toJS(value), B.StringToJSString_get_toJS(""), type$.void);
    },
    DomCSSStyleDeclarationExtension_removeProperty(_this, property) {
      return A.JSStringToString_get_toDart(B._callMethodUnchecked1(_this, "removeProperty", B.StringToJSString_get_toJS(property), type$.String));
    },
    DomHTMLElementExtension_get_offsetLeft(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "offsetLeft", type$.double));
    },
    DomHTMLElementExtension_get_offsetTop(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "offsetTop", type$.double));
    },
    DomHTMLMetaElementExtension_set_name(_this, value) {
      var t1 = B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "name", t1, type$.String);
      return t1;
    },
    DomHTMLMetaElementExtension_set_content(_this, value) {
      var t1 = B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "content", t1, type$.String);
      return t1;
    },
    createDomHTMLMetaElement() {
      return A.DomDocumentExtension_createElement(self.document, "meta");
    },
    DomHTMLImageElementExtension_get_src(_this) {
      var t1 = B.getProperty(_this, "src", type$.nullable_String);
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    createDomHTMLDivElement() {
      return A.DomDocumentExtension_createElement(self.document, "div");
    },
    DomHTMLStyleElementExtension_set_nonce(_this, value) {
      var t1 = value == null ? null : B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "nonce", t1, type$.nullable_String);
      return t1;
    },
    createDomHTMLStyleElement(nonce) {
      var style = A.DomDocumentExtension_createElement(self.document, "style");
      if (nonce != null)
        A.DomHTMLStyleElementExtension_set_nonce(style, nonce);
      return style;
    },
    DomPerformanceExtension_now(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B._callMethodUnchecked0(_this, "now", type$.double));
    },
    createDomCanvasElement(height, width) {
      var canvas,
        t1 = $.debugCanvasCount;
      if (typeof t1 !== "number")
        return t1.$add();
      $.debugCanvasCount = t1 + 1;
      canvas = A.DomDocumentExtension_createElement(B.getProperty(self.window, "document", type$.JavaScriptObject), "canvas");
      if (width != null)
        A.DomCanvasElementExtension_set_width(canvas, D.JSInt_methods.toDouble$0(width));
      if (height != null)
        A.DomCanvasElementExtension_set_height(canvas, D.JSInt_methods.toDouble$0(height));
      return canvas;
    },
    DomCanvasElementExtension_set_width(_this, value) {
      var t1 = value == null ? null : A.DoubleToJSNumber_get_toJS(value);
      B._setPropertyUnchecked(_this, "width", t1, type$.nullable_double);
      return t1;
    },
    DomCanvasElementExtension_set_height(_this, value) {
      var t1 = value == null ? null : A.DoubleToJSNumber_get_toJS(value);
      B._setPropertyUnchecked(_this, "height", t1, type$.nullable_double);
      return t1;
    },
    DomCanvasElementExtension_toDataURL(_this) {
      return A.JSStringToString_get_toDart(B._callMethodUnchecked1(_this, "toDataURL", B.StringToJSString_get_toJS("image/png"), type$.String));
    },
    DomCanvasElementExtension_getContext(_this, contextType, attributes) {
      var _s10_ = "getContext",
        t1 = type$.nullable_Object;
      if (attributes == null)
        return B._callMethodUnchecked1(_this, _s10_, B.StringToJSString_get_toJS(contextType), t1);
      else
        return B._callMethodUnchecked2(_this, _s10_, B.StringToJSString_get_toJS(contextType), A.ObjectToJSAnyExtension_get_toJSAnyDeep(attributes), t1);
    },
    DomCanvasElementExtension_get_context2D(_this) {
      var t1 = A.DomCanvasElementExtension_getContext(_this, "2d", null);
      t1.toString;
      return type$.JavaScriptObject._as(t1);
    },
    DomCanvasElementExtension_getGlContext(_this, majorVersion) {
      var t1;
      if (majorVersion === 1) {
        t1 = A.DomCanvasElementExtension_getContext(_this, "webgl", null);
        t1.toString;
        return type$.JavaScriptObject._as(t1);
      }
      t1 = A.DomCanvasElementExtension_getContext(_this, "webgl2", null);
      t1.toString;
      return type$.JavaScriptObject._as(t1);
    },
    DomCanvasElementExtension_get_contextBitmapRenderer(_this) {
      var t1 = A.DomCanvasElementExtension_getContext(_this, "bitmaprenderer", null);
      t1.toString;
      return type$.JavaScriptObject._as(t1);
    },
    WebGLContextExtension_getParameter(_this, value) {
      return J.toInt$0$n(A.JSNumberToNumber_get_toDartDouble(B._callMethodUnchecked1(_this, "getParameter", A.NumToJSExtension_get_toJS(value), type$.double)));
    },
    WebGLContextExtension_get_samples(_this) {
      return J.toInt$0$n(A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "SAMPLES", type$.double)));
    },
    WebGLContextExtension_get_stencilBits(_this) {
      return J.toInt$0$n(A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "STENCIL_BITS", type$.double)));
    },
    DomCanvasRenderingContext2DExtension_get_fillStyle(_this) {
      var t1 = B.getProperty(_this, "fillStyle", type$.nullable_Object);
      return t1 == null ? null : A.JSAnyToObjectExtension_get_toObjectShallow(t1);
    },
    DomCanvasRenderingContext2DExtension_set_fillStyle(_this, style) {
      var t1 = style == null ? null : A.ObjectToJSAnyExtension_get_toJSAnyShallow(style);
      B._setPropertyUnchecked(_this, "fillStyle", t1, type$.nullable_Object);
      return t1;
    },
    DomCanvasRenderingContext2DExtension_get_font(_this) {
      return A.JSStringToString_get_toDart(B.getProperty(_this, "font", type$.String));
    },
    DomCanvasRenderingContext2DExtension_set_font(_this, value) {
      var t1 = B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "font", t1, type$.String);
      return t1;
    },
    DomCanvasRenderingContext2DExtension_set_direction(_this, value) {
      var t1 = B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "direction", t1, type$.String);
      return t1;
    },
    DomCanvasRenderingContext2DExtension_set_lineWidth(_this, value) {
      var t1 = value == null ? null : A.NumToJSExtension_get_toJS(value);
      B._setPropertyUnchecked(_this, "lineWidth", t1, type$.nullable_double);
      return t1;
    },
    DomCanvasRenderingContext2DExtension_set_strokeStyle(_this, value) {
      var t1 = value == null ? null : A.ObjectToJSAnyExtension_get_toJSAnyShallow(value);
      B._setPropertyUnchecked(_this, "strokeStyle", t1, type$.nullable_Object);
      return t1;
    },
    DomCanvasRenderingContext2DExtension_get_strokeStyle(_this) {
      var t1 = B.getProperty(_this, "strokeStyle", type$.nullable_Object);
      return t1 == null ? null : A.JSAnyToObjectExtension_get_toObjectShallow(t1);
    },
    DomCanvasRenderingContext2DExtension_createLinearGradient(_this, x0, y0, x1, y1) {
      return A._callMethodUnchecked4(_this, "createLinearGradient", A.NumToJSExtension_get_toJS(x0), A.NumToJSExtension_get_toJS(y0), A.NumToJSExtension_get_toJS(x1), A.NumToJSExtension_get_toJS(y1), type$.JavaScriptObject);
    },
    DomCanvasRenderingContext2DExtension_createPattern(_this, image, reptitionType) {
      return B._callMethodUnchecked2(_this, "createPattern", A.ObjectToJSAnyExtension_get_toJSAnyShallow(image), B.StringToJSString_get_toJS(reptitionType), type$.nullable_JavaScriptObject);
    },
    DomCanvasRenderingContext2DExtension_drawImage(_this, source, srcxOrDstX, srcyOrDstY, srcWidth, srcHeight, dstX, dstY, dstWidth, dstHeight) {
      var t2, t3, t4, t5, t6, t7, t8,
        _s9_ = "drawImage",
        t1 = type$.void;
      if (srcWidth == null)
        return B._callMethodUnchecked3(_this, _s9_, source, A.NumToJSExtension_get_toJS(srcxOrDstX), A.NumToJSExtension_get_toJS(srcyOrDstY), t1);
      else {
        t2 = A.NumToJSExtension_get_toJS(srcxOrDstX);
        t3 = A.NumToJSExtension_get_toJS(srcyOrDstY);
        t4 = A.NumToJSExtension_get_toJS(srcWidth);
        srcHeight.toString;
        t5 = A.NumToJSExtension_get_toJS(srcHeight);
        dstX.toString;
        t6 = A.NumToJSExtension_get_toJS(dstX);
        dstY.toString;
        t7 = A.NumToJSExtension_get_toJS(dstY);
        dstWidth.toString;
        t8 = A.NumToJSExtension_get_toJS(dstWidth);
        dstHeight.toString;
        return A.callMethod(_this, _s9_, [source, t2, t3, t4, t5, t6, t7, t8, A.NumToJSExtension_get_toJS(dstHeight)], t1);
      }
    },
    DomCanvasRenderingContext2DExtension_fill(_this, pathOrWinding) {
      var t1 = type$.void;
      if (pathOrWinding == null)
        B._callMethodUnchecked0(_this, "fill", t1);
      else
        B._callMethodUnchecked1(_this, "fill", A.ObjectToJSAnyExtension_get_toJSAnyShallow(pathOrWinding), t1);
    },
    DomCanvasRenderingContext2DExtension_fillRect(_this, x, y, width, height) {
      return A._callMethodUnchecked4(_this, "fillRect", A.NumToJSExtension_get_toJS(x), A.NumToJSExtension_get_toJS(y), A.NumToJSExtension_get_toJS(width), A.NumToJSExtension_get_toJS(height), type$.void);
    },
    DomCanvasRenderingContext2DExtension_fillText(_this, text, x, y) {
      B._callMethodUnchecked3(_this, "fillText", B.StringToJSString_get_toJS(text), A.NumToJSExtension_get_toJS(x), A.NumToJSExtension_get_toJS(y), type$.void);
    },
    DomCanvasRenderingContext2DExtension_lineTo(_this, x, y) {
      return B._callMethodUnchecked2(_this, "lineTo", A.NumToJSExtension_get_toJS(x), A.NumToJSExtension_get_toJS(y), type$.void);
    },
    DomCanvasRenderingContext2DExtension_measureText(_this, text) {
      return B._callMethodUnchecked1(_this, "measureText", B.StringToJSString_get_toJS(text), type$.JavaScriptObject);
    },
    DomCanvasRenderingContext2DExtension_moveTo(_this, x, y) {
      return B._callMethodUnchecked2(_this, "moveTo", A.NumToJSExtension_get_toJS(x), A.NumToJSExtension_get_toJS(y), type$.void);
    },
    DomCanvasRenderingContext2DExtension_rect(_this, x, y, width, height) {
      return A._callMethodUnchecked4(_this, "rect", A.NumToJSExtension_get_toJS(x), A.NumToJSExtension_get_toJS(y), A.NumToJSExtension_get_toJS(width), A.NumToJSExtension_get_toJS(height), type$.void);
    },
    DomCanvasRenderingContext2DExtension_setTransform(_this, a, b, c, d, e, f) {
      return A.callMethod(_this, "setTransform", [A.NumToJSExtension_get_toJS(a), A.NumToJSExtension_get_toJS(b), A.NumToJSExtension_get_toJS(c), A.NumToJSExtension_get_toJS(d), A.NumToJSExtension_get_toJS(e), A.NumToJSExtension_get_toJS(f)], type$.void);
    },
    DomCanvasRenderingContext2DExtension_transform(_this, a, b, c, d, e, f) {
      return A.callMethod(_this, "transform", [A.NumToJSExtension_get_toJS(a), A.NumToJSExtension_get_toJS(b), A.NumToJSExtension_get_toJS(c), A.NumToJSExtension_get_toJS(d), A.NumToJSExtension_get_toJS(e), A.NumToJSExtension_get_toJS(f)], type$.void);
    },
    DomCanvasRenderingContext2DExtension_clip(_this, pathOrWinding) {
      var t1 = type$.void;
      if (pathOrWinding == null)
        B._callMethodUnchecked0(_this, "clip", t1);
      else
        B._callMethodUnchecked1(_this, "clip", A.ObjectToJSAnyExtension_get_toJSAnyShallow(pathOrWinding), t1);
    },
    DomCanvasRenderingContext2DExtension_scale(_this, x, y) {
      return B._callMethodUnchecked2(_this, "scale", A.NumToJSExtension_get_toJS(x), A.NumToJSExtension_get_toJS(y), type$.void);
    },
    DomCanvasRenderingContext2DExtension_clearRect(_this, x, y, width, height) {
      return A._callMethodUnchecked4(_this, "clearRect", A.NumToJSExtension_get_toJS(x), A.NumToJSExtension_get_toJS(y), A.NumToJSExtension_get_toJS(width), A.NumToJSExtension_get_toJS(height), type$.void);
    },
    DomCanvasRenderingContext2DExtension_translate(_this, x, y) {
      return B._callMethodUnchecked2(_this, "translate", A.NumToJSExtension_get_toJS(x), A.NumToJSExtension_get_toJS(y), type$.void);
    },
    DomCanvasRenderingContext2DExtension_rotate(_this, angle) {
      return B._callMethodUnchecked1(_this, "rotate", A.NumToJSExtension_get_toJS(angle), type$.void);
    },
    DomCanvasRenderingContext2DExtension_bezierCurveTo(_this, cp1x, cp1y, cp2x, cp2y, x, y) {
      return A.callMethod(_this, "bezierCurveTo", [A.NumToJSExtension_get_toJS(cp1x), A.NumToJSExtension_get_toJS(cp1y), A.NumToJSExtension_get_toJS(cp2x), A.NumToJSExtension_get_toJS(cp2y), A.NumToJSExtension_get_toJS(x), A.NumToJSExtension_get_toJS(y)], type$.void);
    },
    DomCanvasRenderingContext2DExtension_quadraticCurveTo(_this, cpx, cpy, x, y) {
      return A._callMethodUnchecked4(_this, "quadraticCurveTo", A.NumToJSExtension_get_toJS(cpx), A.NumToJSExtension_get_toJS(cpy), A.NumToJSExtension_get_toJS(x), A.NumToJSExtension_get_toJS(y), type$.void);
    },
    DomCanvasRenderingContext2DExtension_set_globalCompositeOperation(_this, value) {
      var t1 = B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "globalCompositeOperation", t1, type$.String);
      return t1;
    },
    DomCanvasRenderingContext2DExtension_set_lineCap(_this, value) {
      var t1 = B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "lineCap", t1, type$.String);
      return t1;
    },
    DomCanvasRenderingContext2DExtension_set_lineJoin(_this, value) {
      var t1 = B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "lineJoin", t1, type$.String);
      return t1;
    },
    DomCanvasRenderingContext2DExtension_set_shadowBlur(_this, value) {
      var t1 = A.NumToJSExtension_get_toJS(value);
      B._setPropertyUnchecked(_this, "shadowBlur", t1, type$.double);
      return t1;
    },
    DomCanvasRenderingContext2DExtension_arc(_this, x, y, radius, startAngle, endAngle, antiClockwise) {
      return A.callMethod(_this, "arc", [A.NumToJSExtension_get_toJS(x), A.NumToJSExtension_get_toJS(y), A.NumToJSExtension_get_toJS(radius), A.NumToJSExtension_get_toJS(startAngle), A.NumToJSExtension_get_toJS(endAngle), B.BoolToJSBoolean_get_toJS(antiClockwise)], type$.void);
    },
    DomCanvasRenderingContext2DExtension_set_filter(_this, value) {
      var t1 = value == null ? null : B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "filter", t1, type$.nullable_String);
      return t1;
    },
    DomCanvasRenderingContext2DExtension_set_shadowOffsetX(_this, x) {
      var t1 = x == null ? null : A.NumToJSExtension_get_toJS(x);
      B._setPropertyUnchecked(_this, "shadowOffsetX", t1, type$.nullable_double);
      return t1;
    },
    DomCanvasRenderingContext2DExtension_set_shadowOffsetY(_this, y) {
      var t1 = y == null ? null : A.NumToJSExtension_get_toJS(y);
      B._setPropertyUnchecked(_this, "shadowOffsetY", t1, type$.nullable_double);
      return t1;
    },
    DomCanvasRenderingContext2DExtension_set_shadowColor(_this, value) {
      var t1 = value == null ? null : B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "shadowColor", t1, type$.nullable_String);
      return t1;
    },
    DomCanvasRenderingContext2DExtension_ellipse(_this, x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {
      var t1 = A.NumToJSExtension_get_toJS(x),
        t2 = A.NumToJSExtension_get_toJS(y),
        t3 = A.NumToJSExtension_get_toJS(radiusX),
        t4 = A.NumToJSExtension_get_toJS(radiusY),
        t5 = A.NumToJSExtension_get_toJS(rotation),
        t6 = A.NumToJSExtension_get_toJS(startAngle),
        t7 = A.NumToJSExtension_get_toJS(endAngle);
      return A.callMethod(_this, "ellipse", [t1, t2, t3, t4, t5, t6, t7, antiClockwise == null ? null : B.BoolToJSBoolean_get_toJS(antiClockwise)], type$.void);
    },
    DomCanvasRenderingContext2DExtension_strokeText(_this, text, x, y) {
      return B._callMethodUnchecked3(_this, "strokeText", B.StringToJSString_get_toJS(text), A.NumToJSExtension_get_toJS(x), A.NumToJSExtension_get_toJS(y), type$.void);
    },
    DomCanvasRenderingContext2DExtension_set_globalAlpha(_this, value) {
      var t1 = value == null ? null : A.NumToJSExtension_get_toJS(value);
      B._setPropertyUnchecked(_this, "globalAlpha", t1, type$.nullable_double);
      return t1;
    },
    DomCanvasGradientExtension_addColorStop(_this, offset, color) {
      return B._callMethodUnchecked2(_this, "addColorStop", A.NumToJSExtension_get_toJS(offset), B.StringToJSString_get_toJS(color), type$.void);
    },
    rawHttpGet(url) {
      return A.promiseToFuture(B._callMethodUnchecked1(self.window, "fetch", B.StringToJSString_get_toJS(url), type$.JSObject), type$.JavaScriptObject);
    },
    httpFetch(url) {
      return A.httpFetch$body(url);
    },
    httpFetch$body(url) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.HttpFetchResponse),
        $async$returnValue, $async$handler = 2, $async$currentError, domResponse, requestError, t1, exception, $async$exception;
      var $async$httpFetch = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              $async$goto = 7;
              return B._asyncAwait(A.rawHttpGet(url), $async$httpFetch);
            case 7:
              // returning from await.
              domResponse = $async$result;
              t1 = A.HttpFetchResponseImpl$_(url, domResponse);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              requestError = B.unwrapException($async$exception);
              t1 = A.HttpFetchError$(url, requestError);
              throw B.wrapException(t1);
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return B._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return B._asyncStartSync($async$httpFetch, $async$completer);
    },
    httpFetchByteBuffer(url) {
      return A.httpFetchByteBuffer$body(url);
    },
    httpFetchByteBuffer$body(url) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.ByteBuffer),
        $async$returnValue, $async$temp1;
      var $async$httpFetchByteBuffer = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = A;
              $async$goto = 3;
              return B._asyncAwait(A.httpFetch(url), $async$httpFetchByteBuffer);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.HttpFetchResponseExtension_asByteBuffer($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$httpFetchByteBuffer, $async$completer);
    },
    HttpFetchResponseExtension_asByteBuffer(_this) {
      return _this.get$payload().asByteBuffer$0();
    },
    HttpFetchResponseImpl$_(url, _domResponse) {
      return new A.HttpFetchResponseImpl(url, _domResponse);
    },
    HttpFetchPayloadImpl$_(_domResponse) {
      return new A.HttpFetchPayloadImpl(_domResponse);
    },
    HttpFetchNoPayloadError$(url, $status) {
      return new A.HttpFetchNoPayloadError(url, $status);
    },
    HttpFetchError$(url, requestError) {
      return new A.HttpFetchError(url, requestError);
    },
    DomResponseExtension_get_status(_this) {
      return A.JSNumberToNumber_get_toDartInt(B.getProperty(_this, "status", type$.double));
    },
    DomResponseExtension_arrayBuffer(_this) {
      return A.promiseToFuture(B._callMethodUnchecked0(_this, "arrayBuffer", type$.JSObject), type$.nullable_Object);
    },
    _DomStreamReaderExtension_read(_this) {
      return A.promiseToFuture(B._callMethodUnchecked0(_this, "read", type$.JSObject), type$.JavaScriptObject);
    },
    _DomStreamChunkExtension_get_done(_this) {
      return A.JSBooleanToBool_get_toDart(B.getProperty(_this, "done", type$.bool));
    },
    createDomText(data) {
      return A.DomDocumentExtension_createTextNode(self.document, data);
    },
    DomTextMetricsExtension_get_width(_this) {
      var t1 = B.getProperty(_this, "width", type$.nullable_double);
      return t1 == null ? null : A.JSNumberToNumber_get_toDartDouble(t1);
    },
    DomRectReadOnlyExtension_get_x(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "x", type$.double));
    },
    DomRectReadOnlyExtension_get_y(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "y", type$.double));
    },
    DomRectReadOnlyExtension_get_height(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "height", type$.double));
    },
    DomRectReadOnlyExtension_get_top(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "top", type$.double));
    },
    DomRectReadOnlyExtension_get_right(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "right", type$.double));
    },
    DomRectReadOnlyExtension_get_bottom(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "bottom", type$.double));
    },
    DomRectReadOnlyExtension_get_left(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "left", type$.double));
    },
    createDomFontFace(family, source, descriptors) {
      var _s8_ = "FontFace",
        t1 = type$.Object,
        t2 = type$.JavaScriptObject;
      if (descriptors == null)
        return A._callConstructorUnchecked2(B._getPropertyTrustType(B.staticInteropGlobalContext(), _s8_, t1), B.StringToJSString_get_toJS(family), A.ObjectToJSAnyExtension_get_toJSAnyShallow(source), t2);
      else
        return A._callConstructorUnchecked3(B._getPropertyTrustType(B.staticInteropGlobalContext(), _s8_, t1), B.StringToJSString_get_toJS(family), A.ObjectToJSAnyExtension_get_toJSAnyShallow(source), A.ObjectToJSAnyExtension_get_toJSAnyDeep(descriptors), t2);
    },
    DomFontFaceExtension_load(_this) {
      return A.promiseToFuture(B._callMethodUnchecked0(_this, "load", type$.JSObject), type$.JavaScriptObject);
    },
    DomFontFaceExtension_get_status(_this) {
      var t1 = B.getProperty(_this, "status", type$.nullable_String);
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    DomVisualViewportExtension_get_height(_this) {
      var t1 = B.getProperty(_this, "height", type$.nullable_double);
      return t1 == null ? null : A.JSNumberToNumber_get_toDartDouble(t1);
    },
    DomVisualViewportExtension_get_width(_this) {
      var t1 = B.getProperty(_this, "width", type$.nullable_double);
      return t1 == null ? null : A.JSNumberToNumber_get_toDartDouble(t1);
    },
    createDomHTMLTextAreaElement() {
      return A.DomDocumentExtension_createElement(self.document, "textarea");
    },
    DomHTMLTextAreaElementExtension_set_value(_this, value) {
      var t1 = value == null ? null : B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "value", t1, type$.nullable_String);
      return t1;
    },
    DomHTMLTextAreaElementExtension_set_placeholder(_this, value) {
      var t1 = value == null ? null : B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "placeholder", t1, type$.nullable_String);
      return t1;
    },
    DomHTMLTextAreaElementExtension_set_name(_this, value) {
      var t1 = B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "name", t1, type$.String);
      return t1;
    },
    DomHTMLTextAreaElementExtension_get_selectionDirection(_this) {
      var t1 = B.getProperty(_this, "selectionDirection", type$.nullable_String);
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    DomHTMLTextAreaElementExtension_get_selectionStart(_this) {
      var t1 = B.getProperty(_this, "selectionStart", type$.nullable_double);
      return t1 == null ? null : A.JSNumberToNumber_get_toDartDouble(t1);
    },
    DomHTMLTextAreaElementExtension_get_selectionEnd(_this) {
      var t1 = B.getProperty(_this, "selectionEnd", type$.nullable_double);
      return t1 == null ? null : A.JSNumberToNumber_get_toDartDouble(t1);
    },
    DomHTMLTextAreaElementExtension_get_value(_this) {
      var t1 = B.getProperty(_this, "value", type$.nullable_String);
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    DomHTMLTextAreaElementExtension_setSelectionRange(_this, start, end) {
      B._callMethodUnchecked2(_this, "setSelectionRange", A.NumToJSExtension_get_toJS(start), A.NumToJSExtension_get_toJS(end), type$.void);
    },
    DomClipboardExtension_readText(_this) {
      return A.promiseToFuture(B._callMethodUnchecked0(_this, "readText", type$.JSObject), type$.String);
    },
    DomClipboardExtension_writeText(_this, data) {
      return A.promiseToFuture(B._callMethodUnchecked1(_this, "writeText", B.StringToJSString_get_toJS(data), type$.JSObject), type$.dynamic);
    },
    DomKeyboardEventExtension_get_keyCode(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "keyCode", type$.double));
    },
    DomKeyboardEventExtension_get_shiftKey(_this) {
      var t1 = B.getProperty(_this, "shiftKey", type$.nullable_bool);
      return t1 == null ? null : A.JSBooleanToBool_get_toDart(t1);
    },
    createDomURL(url, base) {
      var t1 = type$.Object,
        t2 = type$.JavaScriptObject;
      return base == null ? B._callConstructorUnchecked1(B._getPropertyTrustType(B.staticInteropGlobalContext(), "URL", t1), B.StringToJSString_get_toJS(url), t2) : A._callConstructorUnchecked2(B._getPropertyTrustType(B.staticInteropGlobalContext(), "URL", t1), B.StringToJSString_get_toJS(url), B.StringToJSString_get_toJS(base), t2);
    },
    createDomMutationObserver(callback) {
      return B._callConstructorUnchecked1(B._getPropertyTrustType(B.staticInteropGlobalContext(), "MutationObserver", type$.Object), A._functionToJS2(callback), type$.JavaScriptObject);
    },
    DomMutationObserverExtension_observe(_this, target, attributeFilter, attributes) {
      var t1 = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      if (attributes != null)
        t1.$indexSet(0, "attributes", attributes);
      if (attributeFilter != null)
        t1.$indexSet(0, "attributeFilter", attributeFilter);
      return B._callMethodUnchecked2(_this, "observe", target, A.ObjectToJSAnyExtension_get_toJSAnyDeep(t1), type$.void);
    },
    DomMutationRecordExtension_get_attributeName(_this) {
      var t1 = B.getProperty(_this, "attributeName", type$.nullable_String);
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    DomMutationRecordExtension_get_type(_this) {
      var t1 = B.getProperty(_this, "type", type$.nullable_String);
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    DomMediaQueryListExtension_get_matches(_this) {
      return A.JSBooleanToBool_get_toDart(B.getProperty(_this, "matches", type$.bool));
    },
    DomMediaQueryListEventExtension_get_matches(_this) {
      var t1 = B.getProperty(_this, "matches", type$.nullable_bool);
      return t1 == null ? null : A.JSBooleanToBool_get_toDart(t1);
    },
    DomMouseEventExtension_get_clientX(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "clientX", type$.double));
    },
    DomMouseEventExtension_get_clientY(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "clientY", type$.double));
    },
    DomMouseEventExtension_get_offsetX(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "offsetX", type$.double));
    },
    DomMouseEventExtension_get_offsetY(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "offsetY", type$.double));
    },
    DomMouseEventExtension_get_client(_this) {
      return A.DomPoint$(A.DomMouseEventExtension_get_clientX(_this), A.DomMouseEventExtension_get_clientY(_this));
    },
    DomMouseEventExtension_get_offset(_this) {
      return A.DomPoint$(A.DomMouseEventExtension_get_offsetX(_this), A.DomMouseEventExtension_get_offsetY(_this));
    },
    DomMouseEventExtension_get_button(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "button", type$.double));
    },
    DomMouseEventExtension_get_buttons(_this) {
      var t1 = B.getProperty(_this, "buttons", type$.nullable_double);
      return t1 == null ? null : A.JSNumberToNumber_get_toDartDouble(t1);
    },
    DomMouseEventExtension_get_ctrlKey(_this) {
      return A.JSBooleanToBool_get_toDart(B.getProperty(_this, "ctrlKey", type$.bool));
    },
    DomMouseEventExtension_getModifierState(_this, keyArg) {
      return A.JSBooleanToBool_get_toDart(B._callMethodUnchecked1(_this, "getModifierState", B.StringToJSString_get_toJS(keyArg), type$.bool));
    },
    DomPointerEventExtension_get_pointerId(_this) {
      var t1 = B.getProperty(_this, "pointerId", type$.nullable_double);
      return t1 == null ? null : A.JSNumberToNumber_get_toDartDouble(t1);
    },
    DomPointerEventExtension_get_pointerType(_this) {
      var t1 = B.getProperty(_this, "pointerType", type$.nullable_String);
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    DomPointerEventExtension_get_pressure(_this) {
      var t1 = B.getProperty(_this, "pressure", type$.nullable_double);
      return t1 == null ? null : A.JSNumberToNumber_get_toDartDouble(t1);
    },
    DomPointerEventExtension_get_tiltX(_this) {
      var t1 = B.getProperty(_this, "tiltX", type$.nullable_double);
      return t1 == null ? null : A.JSNumberToNumber_get_toDartDouble(t1);
    },
    DomPointerEventExtension_get_tiltY(_this) {
      var t1 = B.getProperty(_this, "tiltY", type$.nullable_double);
      return t1 == null ? null : A.JSNumberToNumber_get_toDartDouble(t1);
    },
    DomPointerEventExtension_getCoalescedEvents(_this) {
      return J.cast$1$0$ax(A.JSArrayToList_get_toDart(B._callMethodUnchecked0(_this, "getCoalescedEvents", type$.JSArray_nullable_Object), type$.nullable_Object), type$.JavaScriptObject);
    },
    DomWheelEventExtension_get_deltaX(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "deltaX", type$.double));
    },
    DomWheelEventExtension_get_deltaY(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "deltaY", type$.double));
    },
    DomWheelEventExtension_get_wheelDeltaX(_this) {
      var t1 = B.getProperty(_this, "wheelDeltaX", type$.nullable_double);
      return t1 == null ? null : A.JSNumberToNumber_get_toDartDouble(t1);
    },
    DomWheelEventExtension_get_wheelDeltaY(_this) {
      var t1 = B.getProperty(_this, "wheelDeltaY", type$.nullable_double);
      return t1 == null ? null : A.JSNumberToNumber_get_toDartDouble(t1);
    },
    DomWheelEventExtension_get_deltaMode(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "deltaMode", type$.double));
    },
    DomTouchEventExtension_get_changedTouches(_this) {
      var t1 = type$.JavaScriptObject;
      return A.createDomTouchListWrapper(B.getProperty(_this, "changedTouches", t1), t1);
    },
    DomTouchExtension_get_clientX(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "clientX", type$.double));
    },
    DomTouchExtension_get_clientY(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "clientY", type$.double));
    },
    DomTouchExtension_get_client(_this) {
      return A.DomPoint$(A.DomTouchExtension_get_clientX(_this), A.DomTouchExtension_get_clientY(_this));
    },
    DomCompositionEventExtension_get_data(_this) {
      var t1 = B.getProperty(_this, "data", type$.nullable_String);
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    DomHTMLInputElementExtension_set_type(_this, value) {
      var t1 = value == null ? null : B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "type", t1, type$.nullable_String);
      return t1;
    },
    DomHTMLInputElementExtension_set_max(_this, value) {
      var t1 = value == null ? null : B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "max", t1, type$.nullable_String);
      return t1;
    },
    DomHTMLInputElementExtension_set_min(_this, value) {
      var t1 = B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "min", t1, type$.String);
      return t1;
    },
    DomHTMLInputElementExtension_set_value(_this, v) {
      var t1 = v == null ? null : B.StringToJSString_get_toJS(v);
      B._setPropertyUnchecked(_this, "value", t1, type$.nullable_String);
      return t1;
    },
    DomHTMLInputElementExtension_get_value(_this) {
      var t1 = B.getProperty(_this, "value", type$.nullable_String);
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    DomHTMLInputElementExtension_get_disabled(_this) {
      var t1 = B.getProperty(_this, "disabled", type$.nullable_bool);
      return t1 == null ? null : A.JSBooleanToBool_get_toDart(t1);
    },
    DomHTMLInputElementExtension_set_disabled(_this, value) {
      var t1 = value == null ? null : B.BoolToJSBoolean_get_toJS(value);
      B._setPropertyUnchecked(_this, "disabled", t1, type$.nullable_bool);
      return t1;
    },
    DomHTMLInputElementExtension_set_placeholder(_this, value) {
      var t1 = value == null ? null : B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "placeholder", t1, type$.nullable_String);
      return t1;
    },
    DomHTMLInputElementExtension_set_name(_this, value) {
      var t1 = value == null ? null : B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "name", t1, type$.nullable_String);
      return t1;
    },
    DomHTMLInputElementExtension_set_autocomplete(_this, value) {
      var t1 = B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "autocomplete", t1, type$.String);
      return t1;
    },
    DomHTMLInputElementExtension_get_selectionDirection(_this) {
      var t1 = B.getProperty(_this, "selectionDirection", type$.nullable_String);
      return t1 == null ? null : A.JSStringToString_get_toDart(t1);
    },
    DomHTMLInputElementExtension_get_selectionStart(_this) {
      var t1 = B.getProperty(_this, "selectionStart", type$.nullable_double);
      return t1 == null ? null : A.JSNumberToNumber_get_toDartDouble(t1);
    },
    DomHTMLInputElementExtension_get_selectionEnd(_this) {
      var t1 = B.getProperty(_this, "selectionEnd", type$.nullable_double);
      return t1 == null ? null : A.JSNumberToNumber_get_toDartDouble(t1);
    },
    DomHTMLInputElementExtension_setSelectionRange(_this, start, end) {
      B._callMethodUnchecked2(_this, "setSelectionRange", A.NumToJSExtension_get_toJS(start), A.NumToJSExtension_get_toJS(end), type$.void);
    },
    createDomHTMLInputElement() {
      return A.DomDocumentExtension_createElement(self.document, "input");
    },
    DomTokenListExtension_add(_this, value) {
      return B._callMethodUnchecked1(_this, "add", B.StringToJSString_get_toJS(value), type$.void);
    },
    DomHTMLFormElementExtension_set_noValidate(_this, value) {
      var t1 = value == null ? null : B.BoolToJSBoolean_get_toJS(value);
      B._setPropertyUnchecked(_this, "noValidate", t1, type$.nullable_bool);
      return t1;
    },
    DomHTMLFormElementExtension_set_method(_this, value) {
      var t1 = value == null ? null : B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "method", t1, type$.nullable_String);
      return t1;
    },
    DomHTMLFormElementExtension_set_action(_this, value) {
      var t1 = value == null ? null : B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "action", t1, type$.nullable_String);
      return t1;
    },
    createDomHTMLFormElement() {
      return A.DomDocumentExtension_createElement(self.document, "form");
    },
    DomOffscreenCanvasExtension_set_height(_this, value) {
      var t1 = value == null ? null : A.DoubleToJSNumber_get_toJS(value);
      B._setPropertyUnchecked(_this, "height", t1, type$.nullable_double);
      return t1;
    },
    DomOffscreenCanvasExtension_set_width(_this, value) {
      var t1 = value == null ? null : A.DoubleToJSNumber_get_toJS(value);
      B._setPropertyUnchecked(_this, "width", t1, type$.nullable_double);
      return t1;
    },
    DomOffscreenCanvasExtension_getContext(_this, contextType, attributes) {
      var _s10_ = "getContext",
        t1 = type$.nullable_Object;
      if (attributes == null)
        return B._callMethodUnchecked1(_this, _s10_, B.StringToJSString_get_toJS(contextType), t1);
      else
        return B._callMethodUnchecked2(_this, _s10_, B.StringToJSString_get_toJS(contextType), A.ObjectToJSAnyExtension_get_toJSAnyDeep(attributes), t1);
    },
    DomOffscreenCanvasExtension_getGlContext(_this, majorVersion) {
      var t1;
      if (majorVersion === 1) {
        t1 = A.DomOffscreenCanvasExtension_getContext(_this, "webgl", null);
        t1.toString;
        return type$.JavaScriptObject._as(t1);
      }
      t1 = A.DomOffscreenCanvasExtension_getContext(_this, "webgl2", null);
      t1.toString;
      return type$.JavaScriptObject._as(t1);
    },
    createDomOffscreenCanvas(width, height) {
      return A._callConstructorUnchecked2(B._getPropertyTrustType(B.staticInteropGlobalContext(), "OffscreenCanvas", type$.Object), A.NumToJSExtension_get_toJS(width), A.NumToJSExtension_get_toJS(height), type$.JavaScriptObject);
    },
    DomScreenOrientationExtension_lock(_this, orientation) {
      return A.promiseToFuture(B._callMethodUnchecked1(_this, "lock", B.StringToJSString_get_toJS(orientation), type$.JSObject), type$.dynamic);
    },
    DomSubscription$(target, typeString, dartListener) {
      var t1 = new A.DomSubscription(B.StringToJSString_get_toJS(typeString), target, A.createDomEventListener(dartListener));
      t1.DomSubscription$3(target, typeString, dartListener);
      return t1;
    },
    DomPoint$(x, y) {
      return new A.DomPoint(x, y);
    },
    createDomResizeObserver(fn) {
      return B._callConstructorUnchecked1(B._getPropertyTrustType(B.staticInteropGlobalContext(), "ResizeObserver", type$.Object), A._functionToJS2(new A.createDomResizeObserver_closure(fn)), type$.JavaScriptObject);
    },
    DomTrustedTypePolicyExtension_createScriptURL(_this, input) {
      return B._callMethodUnchecked1(_this, "createScriptURL", B.StringToJSString_get_toJS(input), type$.JavaScriptObject);
    },
    createTrustedScriptUrl(url) {
      if (B.getProperty(self.window, "trustedTypes", type$.nullable_JavaScriptObject) != null)
        return A.DomTrustedTypePolicyExtension_createScriptURL($.$get$_ttPolicy(), url);
      return B.StringToJSString_get_toJS(url);
    },
    domInstanceOfString(element, objectType) {
      return A.instanceOfString(element, objectType);
    },
    DomListExtension_get_length(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "length", type$.double));
    },
    DomListExtension_item(_this, index) {
      return B._callMethodUnchecked1(_this, "item", A.NumToJSExtension_get_toJS(index), type$.JavaScriptObject);
    },
    _DomListIterator$(list, $T) {
      return new A._DomListIterator(list, $T._eval$1("_DomListIterator<0>"));
    },
    _DomListWrapper$_(list, $T) {
      return new A._DomListWrapper(list, $T._eval$1("_DomListWrapper<0>"));
    },
    createDomListWrapper(list, $T) {
      return A._DomListWrapper$_(list, $T).cast$1$0(0, $T);
    },
    DomTouchListExtension_get_length(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "length", type$.double));
    },
    DomTouchListExtension_item(_this, index) {
      return B._callMethodUnchecked1(_this, "item", A.NumToJSExtension_get_toJS(index), type$.JavaScriptObject);
    },
    _DomTouchListIterator$(list, $T) {
      return new A._DomTouchListIterator(list, $T._eval$1("_DomTouchListIterator<0>"));
    },
    _DomTouchListWrapper$_(list, $T) {
      return new A._DomTouchListWrapper(list, $T._eval$1("_DomTouchListWrapper<0>"));
    },
    createDomTouchListWrapper(list, $T) {
      return A._DomTouchListWrapper$_(list, $T).cast$1$0(0, $T);
    },
    DomSegmenterExtension_segment(_this, text) {
      return B._callMethodUnchecked1(_this, "segment", B.StringToJSString_get_toJS(text), type$.JavaScriptObject);
    },
    DomSegmentsExtension_iterator(_this) {
      var t1 = type$.JavaScriptObject;
      return A.DomIteratorWrapper$(t1._as(B._callMethodUnchecked0(_this, B.getProperty(self.Symbol, "iterator", type$.Object), type$.dynamic)), t1);
    },
    DomIteratorResultExtension_get_done(_this) {
      return A.JSBooleanToBool_get_toDart(B.getProperty(_this, "done", type$.bool));
    },
    DomIteratorWrapper$(_iterator, $T) {
      return new A.DomIteratorWrapper(_iterator, $T._eval$1("DomIteratorWrapper<0>"));
    },
    DomSegmentExtension_get_index(_this) {
      return J.toInt$0$n(A.JSNumberToNumber_get_toDartDouble(B.getProperty(_this, "index", type$.double)));
    },
    createIntlSegmenter(granularity) {
      var t2, t3,
        _s9_ = "Segmenter",
        t1 = type$.nullable_Object;
      if (B.getProperty(self.Intl, _s9_, t1) == null)
        throw B.wrapException(B.UnimplementedError$("Intl.Segmenter() is not supported."));
      t2 = type$.Object;
      t3 = type$.String;
      return A._callConstructorUnchecked2(B._getPropertyTrustType(B._getPropertyTrustType(B.staticInteropGlobalContext(), "Intl", t2), _s9_, t2), A.ListToJSArray_get_toJS([], t1), A.ObjectToJSAnyExtension_get_toJSAnyDeep(B.LinkedHashMap_LinkedHashMap$_literal(["granularity", granularity], t3, t3)), type$.JavaScriptObject);
    },
    DomV8BreakIteratorExtension_first(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B._callMethodUnchecked0(_this, "first", type$.double));
    },
    DomV8BreakIteratorExtension_next(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B._callMethodUnchecked0(_this, "next", type$.double));
    },
    DomV8BreakIteratorExtension_current(_this) {
      return A.JSNumberToNumber_get_toDartDouble(B._callMethodUnchecked0(_this, "current", type$.double));
    },
    createV8BreakIterator() {
      var t2,
        _s15_ = "v8BreakIterator",
        t1 = type$.nullable_Object;
      if (B.getProperty(self.Intl, _s15_, t1) == null)
        throw B.wrapException(B.UnimplementedError$("v8BreakIterator is not supported."));
      t2 = type$.Object;
      return A._callConstructorUnchecked2(B._getPropertyTrustType(B._getPropertyTrustType(B.staticInteropGlobalContext(), "Intl", t2), _s15_, t2), A.ListToJSArray_get_toJS([], t1), A.ObjectToJSAnyExtension_get_toJSAnyDeep(C.Map_wEY7l), type$.JavaScriptObject);
    },
    browserSupportsCreateImageBitmap() {
      if (self.window.createImageBitmap != null)
        var t1 = !B.boolConversionCheck(A.isChrome110OrOlder());
      else
        t1 = false;
      return t1;
    },
    transformWithOffset(transform, offset) {
      var effectiveTransform;
      if (B.boolConversionCheck(offset.$eq(0, C.Offset_0_0)))
        return transform;
      effectiveTransform = transform.clone$0();
      effectiveTransform.translate$2(offset.get$dx(), offset.get$dy());
      return effectiveTransform;
    },
    SaveStackEntry$(clipStack, transform) {
      return new A.SaveStackEntry(transform, clipStack);
    },
    SaveClipEntry$rect(rect, currentTransform) {
      return new A.SaveClipEntry(rect, null, null, currentTransform);
    },
    SaveClipEntry$rrect(rrect, currentTransform) {
      return new A.SaveClipEntry(null, rrect, null, currentTransform);
    },
    SaveClipEntry$path(path, currentTransform) {
      return new A.SaveClipEntry(null, null, path, currentTransform);
    },
    drawParagraphElement(paragraph, offset, transform) {
      var paragraphElement = paragraph.toDomElement$0();
      if (transform != null)
        A.setElementTransform(paragraphElement, A.transformWithOffset(transform, offset).get$storage());
      return paragraphElement;
    },
    _SaveElementStackEntry$(savedElement, transform) {
      return new A._SaveElementStackEntry(savedElement, transform);
    },
    sendFontChangeMessage() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void);
      var $async$sendFontChangeMessage = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (!B.boolConversionCheck($._fontChangeScheduled)) {
                $._fontChangeScheduled = true;
                A.DomWindowExtension_requestAnimationFrame(self.window, new A.sendFontChangeMessage_closure());
              }
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$sendFontChangeMessage, $async$completer);
    },
    getFallbackFontList(useColorEmoji) {
      return B._setArrayType([A.NotoFont$("Noto Sans", "notosans/v36/o-0mIpQlx3QUlC5A4PNB6Ryti20_6n1iPHjcz6L1SoM-jCpoiyD9A99d41P6zHtY.ttf", true), A.NotoFont$("Noto Color Emoji", "notocoloremoji/v30/Yq6P-KqIXTD0t4D9z1ESnKM3-HpFab5s79iz64w.ttf", useColorEmoji), A.NotoFont$("Noto Emoji", "notoemoji/v47/bMrnmSyK7YY-MEu6aWjPDs-ar6uWaGWuob-r0jwvS-FGJCMY.ttf", !useColorEmoji), A.NotoFont$("Noto Music", "notomusic/v20/pe0rMIiSN5pO63htf1sxIteQB9Zra1U.ttf", true), A.NotoFont$("Noto Sans Symbols", "notosanssymbols/v43/rP2up3q65FkAtHfwd-eIS2brbDN6gxP34F9jRRCe4W3gfQ8gavVFRkzrbQ.ttf", true), A.NotoFont$("Noto Sans Symbols 2", "notosanssymbols2/v23/I_uyMoGduATTei9eI8daxVHDyfisHr71ypPqfX71-AI.ttf", true), A.NotoFont$("Noto Sans Adlam", "notosansadlam/v22/neIczCCpqp0s5pPusPamd81eMfjPonvqdbYxxpgufnv0TGnBZLwhuvk.ttf", true), A.NotoFont$("Noto Sans Anatolian Hieroglyphs", "notosansanatolianhieroglyphs/v16/ijw9s4roRME5LLRxjsRb8A0gKPSWq4BbDmHHu6j2pEtUJzZWXybIymc5QYo.ttf", true), A.NotoFont$("Noto Sans Arabic", "notosansarabic/v18/nwpxtLGrOAZMl5nJ_wfgRg3DrWFZWsnVBJ_sS6tlqHHFlhQ5l3sQWIHPqzCfyGyvu3CBFQLaig.ttf", true), A.NotoFont$("Noto Sans Armenian", "notosansarmenian/v43/ZgN0jOZKPa7CHqq0h37c7ReDUubm2SEdFXp7ig73qtTY5idb74R9UdM3y2nZLorxb60iYy6zF3Eg.ttf", true), A.NotoFont$("Noto Sans Avestan", "notosansavestan/v21/bWti7ejKfBziStx7lIzKOLQZKhIJkyu9SASLji8U.ttf", true), A.NotoFont$("Noto Sans Balinese", "notosansbalinese/v24/NaPwcYvSBuhTirw6IaFn6UrRDaqje-lpbbRtYf-Fwu2Ov7fdhE5Vd222PPY.ttf", true), A.NotoFont$("Noto Sans Bamum", "notosansbamum/v27/uk-0EGK3o6EruUbnwovcbBTkkklK_Ya_PBHfNGTPEddO-_gLykxEkxA.ttf", true), A.NotoFont$("Noto Sans Bassa Vah", "notosansbassavah/v17/PN_bRee-r3f7LnqsD5sax12gjZn7mBpL5YwUpA2MBdcFn4MaAc6p34gH-GD7.ttf", true), A.NotoFont$("Noto Sans Batak", "notosansbatak/v20/gok2H6TwAEdtF9N8-mdTCQvT-Zdgo4_PHuk74A.ttf", true), A.NotoFont$("Noto Sans Bengali", "notosansbengali/v20/Cn-SJsCGWQxOjaGwMQ6fIiMywrNJIky6nvd8BjzVMvJx2mcSPVFpVEqE-6KmsolLudCk8izI0lc.ttf", true), A.NotoFont$("Noto Sans Bhaiksuki", "notosansbhaiksuki/v17/UcC63EosKniBH4iELXATsSBWdvUHXxhj8rLUdU4wh9U.ttf", true), A.NotoFont$("Noto Sans Brahmi", "notosansbrahmi/v19/vEFK2-VODB8RrNDvZSUmQQIIByV18tK1W77HtMo.ttf", true), A.NotoFont$("Noto Sans Buginese", "notosansbuginese/v18/esDM30ldNv-KYGGJpKGk18phe_7Da6_gtfuEXLmNtw.ttf", true), A.NotoFont$("Noto Sans Buhid", "notosansbuhid/v22/Dxxy8jiXMW75w3OmoDXVWJD7YwzAe6tgnaFoGA.ttf", true), A.NotoFont$("Noto Sans Canadian Aboriginal", "notosanscanadianaboriginal/v26/4C_TLjTuEqPj-8J01CwaGkiZ9os0iGVkezM1mUT-j_Lmlzda6uH_nnX1bzigWLn_yAsg0q0uhQ.ttf", true), A.NotoFont$("Noto Sans Carian", "notosanscarian/v16/LDIpaoiONgYwA9Yc6f0gUILeMIOgs7ob9yGLmfI.ttf", true), A.NotoFont$("Noto Sans Caucasian Albanian", "notosanscaucasianalbanian/v18/nKKA-HM_FYFRJvXzVXaANsU0VzsAc46QGOkWytlTs-TXrYDmoVmRSZo.ttf", true), A.NotoFont$("Noto Sans Chakma", "notosanschakma/v17/Y4GQYbJ8VTEp4t3MKJSMjg5OIzhi4JjTQhYBeYo.ttf", true), A.NotoFont$("Noto Sans Cham", "notosanscham/v30/pe06MIySN5pO62Z5YkFyQb_bbuRhe6D4yip43qfcERwcv7GykboaLg.ttf", true), A.NotoFont$("Noto Sans Cherokee", "notosanscherokee/v20/KFOPCm6Yu8uF-29fiz9vQF9YWK6Z8O10cHNA0cSkZCHYWi5PDkm5rAffjl0.ttf", true), A.NotoFont$("Noto Sans Coptic", "notosanscoptic/v21/iJWfBWmUZi_OHPqn4wq6kgqumOEd78u_VG0xR4Y.ttf", true), A.NotoFont$("Noto Sans Cuneiform", "notosanscuneiform/v17/bMrrmTWK7YY-MF22aHGGd7H8PhJtvBDWgb9JlRQueeQ.ttf", true), A.NotoFont$("Noto Sans Cypriot", "notosanscypriot/v19/8AtzGta9PYqQDjyp79a6f8Cj-3a3cxIsK5MPpahF.ttf", true), A.NotoFont$("Noto Sans Deseret", "notosansdeseret/v17/MwQsbgPp1eKH6QsAVuFb9AZM6MMr2Vq9ZnJSZtQG.ttf", true), A.NotoFont$("Noto Sans Devanagari", "notosansdevanagari/v25/TuGoUUFzXI5FBtUq5a8bjKYTZjtRU6Sgv3NaV_SNmI0b8QQCQmHn6B2OHjbL_08AlXQly-AzoFoW4Ow.ttf", true), A.NotoFont$("Noto Sans Duployan", "notosansduployan/v17/gokzH7nwAEdtF9N8-mdTDx_X9JM5wsvrFsIn6WYDvA.ttf", true), A.NotoFont$("Noto Sans Egyptian Hieroglyphs", "notosansegyptianhieroglyphs/v29/vEF42-tODB8RrNDvZSUmRhcQHzx1s7y_F9-j3qSzEcbEYindSVK8xRg7iw.ttf", true), A.NotoFont$("Noto Sans Elbasan", "notosanselbasan/v16/-F6rfiZqLzI2JPCgQBnw400qp1trvHdlre4dFcFh.ttf", true), A.NotoFont$("Noto Sans Elymaic", "notosanselymaic/v17/UqyKK9YTJW5liNMhTMqe9vUFP65ZD4AjWOT0zi2V.ttf", true), A.NotoFont$("Noto Sans Ethiopic", "notosansethiopic/v47/7cHPv50vjIepfJVOZZgcpQ5B9FBTH9KGNfhSTgtoow1KVnIvyBoMSzUMacb-T35OK6DjwmfeaY9u.ttf", true), A.NotoFont$("Noto Sans Georgian", "notosansgeorgian/v44/PlIaFke5O6RzLfvNNVSitxkr76PRHBC4Ytyq-Gof7PUs4S7zWn-8YDB09HFNdpvnzFj-f5WK0OQV.ttf", true), A.NotoFont$("Noto Sans Glagolitic", "notosansglagolitic/v18/1q2ZY4-BBFBst88SU_tOj4J-4yuNF_HI4ERK4Amu7nM1.ttf", true), A.NotoFont$("Noto Sans Gothic", "notosansgothic/v16/TuGKUUVzXI5FBtUq5a8bj6wRbzxTFMX40kFQRx0.ttf", true), A.NotoFont$("Noto Sans Grantha", "notosansgrantha/v17/3y976akwcCjmsU8NDyrKo3IQfQ4o-r8cFeulHc6N.ttf", true), A.NotoFont$("Noto Sans Gujarati", "notosansgujarati/v25/wlpWgx_HC1ti5ViekvcxnhMlCVo3f5pv17ivlzsUB14gg1TMR2Gw4VceEl7MA_ypFwPM_OdiEH0s.ttf", true), A.NotoFont$("Noto Sans Gunjala Gondi", "notosansgunjalagondi/v19/bWtX7e7KfBziStx7lIzKPrcSMwcEnCv6DW7n5g0ef3PLtymzNxYL4YDE4J4vCTxEJQ.ttf", true), A.NotoFont$("Noto Sans Gurmukhi", "notosansgurmukhi/v26/w8g9H3EvQP81sInb43inmyN9zZ7hb7ATbSWo4q8dJ74a3cVrYFQ_bogT0-gPeG1OenbxZ_trdp7h.ttf", true), A.NotoFont$("Noto Sans HK", "notosanshk/v31/nKKF-GM_FYFRJvXzVXaAPe97P1KHynJFP716qHB--oWTiYjNvVA.ttf", true), A.NotoFont$("Noto Sans Hanunoo", "notosanshanunoo/v21/f0Xs0fCv8dxkDWlZSoXOj6CphMloFsEsEpgL_ix2.ttf", true), A.NotoFont$("Noto Sans Hatran", "notosanshatran/v16/A2BBn4Ne0RgnVF3Lnko-0sOBIfL_mM83r1nwzDs.ttf", true), A.NotoFont$("Noto Sans Hebrew", "notosanshebrew/v43/or3HQ7v33eiDljA1IufXTtVf7V6RvEEdhQlk0LlGxCyaeNKYZC0sqk3xXGiXd4qtoiJltutR2g.ttf", true), A.NotoFont$("Noto Sans Imperial Aramaic", "notosansimperialaramaic/v16/a8IMNpjwKmHXpgXbMIsbTc_kvks91LlLetBr5itQrtdml3YfPNno.ttf", true), A.NotoFont$("Noto Sans Indic Siyaq Numbers", "notosansindicsiyaqnumbers/v16/6xK5dTJFKcWIu4bpRBjRZRpsIYHabOeZ8UZLubTzpXNHKx2WPOpVd5Iu.ttf", true), A.NotoFont$("Noto Sans Inscriptional Pahlavi", "notosansinscriptionalpahlavi/v16/ll8UK3GaVDuxR-TEqFPIbsR79Xxz9WEKbwsjpz7VklYlC7FCVtqVOAYK0QA.ttf", true), A.NotoFont$("Noto Sans Inscriptional Parthian", "notosansinscriptionalparthian/v16/k3k7o-IMPvpLmixcA63oYi-yStDkgXuXncL7dzfW3P4TAJ2yklBJ2jNkLlLr.ttf", true), A.NotoFont$("Noto Sans JP", "notosansjp/v52/-F6jfjtqLzI2JPCgQBnw7HFyzSD-AsregP8VFBEj75vY0rw-oME.ttf", true), A.NotoFont$("Noto Sans Javanese", "notosansjavanese/v23/2V01KJkDAIA6Hp4zoSScDjV0Y-eoHAHT-Z3MngEefiidxJnkFFliZYWj4O8.ttf", true), A.NotoFont$("Noto Sans KR", "notosanskr/v36/PbyxFmXiEBPT4ITbgNA5Cgms3VYcOA-vvnIzzuoyeLTq8H4hfeE.ttf", true), A.NotoFont$("Noto Sans Kaithi", "notosanskaithi/v21/buEtppS9f8_vkXadMBJJu0tWjLwjQi0KdoZIKlo.ttf", true), A.NotoFont$("Noto Sans Kannada", "notosanskannada/v27/8vIs7xs32H97qzQKnzfeXycxXZyUmySvZWItmf1fe6TVmgop9ndpS-BqHEyGrDvNzSIMLsPKrkY.ttf", true), A.NotoFont$("Noto Sans Kayah Li", "notosanskayahli/v21/B50nF61OpWTRcGrhOVJJwOMXdca6Yecki3E06x2jVTX3WCc3CZH4EXLuKVM.ttf", true), A.NotoFont$("Noto Sans Kharoshthi", "notosanskharoshthi/v16/Fh4qPiLjKS30-P4-pGMMXCCfvkc5Vd7KE5z4rFyx5mR1.ttf", true), A.NotoFont$("Noto Sans Khmer", "notosanskhmer/v24/ijw3s5roRME5LLRxjsRb-gssOenAyendxrgV2c-Zw-9vbVUti_Z_dWgtWYuNAJz4kAbrddiA.ttf", true), A.NotoFont$("Noto Sans Khojki", "notosanskhojki/v19/-nFnOHM29Oofr2wohFbTuPPKVWpmK_d709jy92k.ttf", true), A.NotoFont$("Noto Sans Khudawadi", "notosanskhudawadi/v21/fdNi9t6ZsWBZ2k5ltHN73zZ5hc8HANlHIjRnVVXz9MY.ttf", true), A.NotoFont$("Noto Sans Lao", "notosanslao/v30/bx6lNx2Ol_ixgdYWLm9BwxM3NW6BOkuf763Clj73CiQ_J1Djx9pidOt4ccbdf5MK3riB2w.ttf", true), A.NotoFont$("Noto Sans Lepcha", "notosanslepcha/v19/0QI7MWlB_JWgA166SKhu05TekNS32AJstqBXgd4.ttf", true), A.NotoFont$("Noto Sans Limbu", "notosanslimbu/v22/3JnlSDv90Gmq2mrzckOBBRRoNJVj0MF3OHRDnA.ttf", true), A.NotoFont$("Noto Sans Linear A", "notosanslineara/v18/oPWS_l16kP4jCuhpgEGmwJOiA18FZj22zmHQAGQicw.ttf", true), A.NotoFont$("Noto Sans Linear B", "notosanslinearb/v17/HhyJU4wt9vSgfHoORYOiXOckKNB737IV3BkFTq4EPw.ttf", true), A.NotoFont$("Noto Sans Lisu", "notosanslisu/v25/uk-3EGO3o6EruUbnwovcYhz6kh57_nqbcTdjJnHP2Vwt29IlxkVdig.ttf", true), A.NotoFont$("Noto Sans Lycian", "notosanslycian/v15/QldVNSNMqAsHtsJ7UmqxBQA9r8wA5_naCJwn00E.ttf", true), A.NotoFont$("Noto Sans Lydian", "notosanslydian/v18/c4m71mVzGN7s8FmIukZJ1v4ZlcPReUPXMoIjEQI.ttf", true), A.NotoFont$("Noto Sans Mahajani", "notosansmahajani/v19/-F6sfiVqLzI2JPCgQBnw60Agp0JrvD5Fh8ARHNh4zg.ttf", true), A.NotoFont$("Noto Sans Malayalam", "notosansmalayalam/v26/sJoi3K5XjsSdcnzn071rL37lpAOsUThnDZIfPdbeSNzVakglNM-Qw8EaeB8Nss-_RuD9BFzEr6HxEA.ttf", true), A.NotoFont$("Noto Sans Mandaic", "notosansmandaic/v16/cIfnMbdWt1w_HgCcilqhKQBo_OsMI5_A_gMk0izH.ttf", true), A.NotoFont$("Noto Sans Manichaean", "notosansmanichaean/v18/taiVGntiC4--qtsfi4Jp9-_GkPZZCcrfekqCNTtFCtdX.ttf", true), A.NotoFont$("Noto Sans Marchen", "notosansmarchen/v19/aFTO7OZ_Y282EP-WyG6QTOX_C8WZMHhPk652ZaHk.ttf", true), A.NotoFont$("Noto Sans Masaram Gondi", "notosansmasaramgondi/v17/6xK_dThFKcWIu4bpRBjRYRV7KZCbUq6n_1kPnuGe7RI9WSWX.ttf", true), A.NotoFont$("Noto Sans Math", "notosansmath/v15/7Aump_cpkSecTWaHRlH2hyV5UHkG-V048PW0.ttf", true), A.NotoFont$("Noto Sans Mayan Numerals", "notosansmayannumerals/v16/PlIuFk25O6RzLfvNNVSivR09_KqYMwvvDKYjfIiE68oo6eepYQ.ttf", true), A.NotoFont$("Noto Sans Medefaidrin", "notosansmedefaidrin/v23/WwkzxOq6Dk-wranENynkfeVsNbRZtbOIdLb1exeM4ZeuabBfmErWlT318e5A3rw.ttf", true), A.NotoFont$("Noto Sans Meetei Mayek", "notosansmeeteimayek/v15/HTxAL3QyKieByqY9eZPFweO0be7M21uSphSdhqILnmrRfJ8t_1TJ_vTW5PgeFYVa.ttf", true), A.NotoFont$("Noto Sans Meroitic", "notosansmeroitic/v18/IFS5HfRJndhE3P4b5jnZ3ITPvC6i00UDgDhTiKY9KQ.ttf", true), A.NotoFont$("Noto Sans Miao", "notosansmiao/v17/Dxxz8jmXMW75w3OmoDXVV4zyZUjgUYVslLhx.ttf", true), A.NotoFont$("Noto Sans Modi", "notosansmodi/v23/pe03MIySN5pO62Z5YkFyT7jeav5qWVAgVol-.ttf", true), A.NotoFont$("Noto Sans Mongolian", "notosansmongolian/v21/VdGCAYADGIwE0EopZx8xQfHlgEAMsrToxLsg6-av1x0.ttf", true), A.NotoFont$("Noto Sans Mro", "notosansmro/v18/qWcsB6--pZv9TqnUQMhe9b39WDzRtjkho4M.ttf", true), A.NotoFont$("Noto Sans Multani", "notosansmultani/v20/9Bty3ClF38_RfOpe1gCaZ8p30BOFO1A0pfCs5Kos.ttf", true), A.NotoFont$("Noto Sans Myanmar", "notosansmyanmar/v20/AlZq_y1ZtY3ymOryg38hOCSdOnFq0En23OU4o1AC.ttf", true), A.NotoFont$("Noto Sans NKo", "notosansnko/v6/esDX31ZdNv-KYGGJpKGk2_RpMpCMHMLBrdA.ttf", true), A.NotoFont$("Noto Sans Nabataean", "notosansnabataean/v16/IFS4HfVJndhE3P4b5jnZ34DfsjO330dNoBJ9hK8kMK4.ttf", true), A.NotoFont$("Noto Sans New Tai Lue", "notosansnewtailue/v22/H4cKBW-Pl9DZ0Xe_nHUapt7PovLXAhAnY7wqaLy-OJgU3p_pdeXAYUbghFPKzeY.ttf", true), A.NotoFont$("Noto Sans Newa", "notosansnewa/v16/7r3fqXp6utEsO9pI4f8ok8sWg8n_qN4R5lNU.ttf", true), A.NotoFont$("Noto Sans Nushu", "notosansnushu/v19/rnCw-xRQ3B7652emAbAe_Ai1IYaFWFAMArZKqQ.ttf", true), A.NotoFont$("Noto Sans Ogham", "notosansogham/v17/kmKlZqk1GBDGN0mY6k5lmEmww4hrt5laQxcoCA.ttf", true), A.NotoFont$("Noto Sans Ol Chiki", "notosansolchiki/v29/N0b92TJNOPt-eHmFZCdQbrL32r-4CvhzDzRwlxOQYuVALWk267I6gVrz5gQ.ttf", true), A.NotoFont$("Noto Sans Old Hungarian", "notosansoldhungarian/v18/E213_cD6hP3GwCJPEUssHEM0KqLaHJXg2PiIgRfjbg5nCYXt.ttf", true), A.NotoFont$("Noto Sans Old Italic", "notosansolditalic/v16/TuGOUUFzXI5FBtUq5a8bh68BJxxEVam7tWlRdRhtCC4d.ttf", true), A.NotoFont$("Noto Sans Old North Arabian", "notosansoldnortharabian/v16/esDF30BdNv-KYGGJpKGk2tNiMt7Jar6olZDyNdr81zBQmUo_xw4ABw.ttf", true), A.NotoFont$("Noto Sans Old Permic", "notosansoldpermic/v17/snf1s1q1-dF8pli1TesqcbUY4Mr-ElrwKLdXgv_dKYB5.ttf", true), A.NotoFont$("Noto Sans Old Persian", "notosansoldpersian/v16/wEOjEAbNnc5caQTFG18FHrZr9Bp6-8CmIJ_tqOlQfx9CjA.ttf", true), A.NotoFont$("Noto Sans Old Sogdian", "notosansoldsogdian/v16/3JnjSCH90Gmq2mrzckOBBhFhdrMst48aURt7neIqM-9uyg.ttf", true), A.NotoFont$("Noto Sans Old South Arabian", "notosansoldsoutharabian/v16/3qT5oiOhnSyU8TNFIdhZTice3hB_HWKsEnF--0XCHiKx1OtDT9HwTA.ttf", true), A.NotoFont$("Noto Sans Old Turkic", "notosansoldturkic/v17/yMJNMJVya43H0SUF_WmcGEQVqoEMKDKbsE2RjEw-Vyws.ttf", true), A.NotoFont$("Noto Sans Oriya", "notosansoriya/v31/AYCppXfzfccDCstK_hrjDyADv5e9748vhj3CJBLHIARtgD6TJQS0dJT5Ivj0f6_c6LhHBRe-.ttf", true), A.NotoFont$("Noto Sans Osage", "notosansosage/v18/oPWX_kB6kP4jCuhpgEGmw4mtAVtXRlaSxkrMCQ.ttf", true), A.NotoFont$("Noto Sans Osmanya", "notosansosmanya/v18/8vIS7xs32H97qzQKnzfeWzUyUpOJmz6kR47NCV5Z.ttf", true), A.NotoFont$("Noto Sans Pahawh Hmong", "notosanspahawhhmong/v18/bWtp7e_KfBziStx7lIzKKaMUOBEA3UPQDW7krzc_c48aMpM.ttf", true), A.NotoFont$("Noto Sans Palmyrene", "notosanspalmyrene/v16/ZgNPjOdKPa7CHqq0h37c_ASCWvH93SFCPnK5ZpdNtcA.ttf", true), A.NotoFont$("Noto Sans Pau Cin Hau", "notosanspaucinhau/v20/x3d-cl3IZKmUqiMg_9wBLLtzl22EayN7ehIdjEWqKMxsKw.ttf", true), A.NotoFont$("Noto Sans Phags Pa", "notosansphagspa/v15/pxiZyoo6v8ZYyWh5WuPeJzMkd4SrGChkqkSsrvNXiA.ttf", true), A.NotoFont$("Noto Sans Phoenician", "notosansphoenician/v17/jizFRF9Ksm4Bt9PvcTaEkIHiTVtxmFtS5X7Jot-p5561.ttf", true), A.NotoFont$("Noto Sans Psalter Pahlavi", "notosanspsalterpahlavi/v16/rP2Vp3K65FkAtHfwd-eISGznYihzggmsicPfud3w1G3KsUQBct4.ttf", true), A.NotoFont$("Noto Sans Rejang", "notosansrejang/v21/Ktk2AKuMeZjqPnXgyqrib7DIogqwN4O3WYZB_sU.ttf", true), A.NotoFont$("Noto Sans Runic", "notosansrunic/v17/H4c_BXWPl9DZ0Xe_nHUaus7W68WWaxpvHtgIYg.ttf", true), A.NotoFont$("Noto Sans SC", "notosanssc/v36/k3kCo84MPvpLmixcA63oeAL7Iqp5IZJF9bmaG9_FnYxNbPzS5HE.ttf", true), A.NotoFont$("Noto Sans Saurashtra", "notosanssaurashtra/v23/ea8GacQ0Wfz_XKWXe6OtoA8w8zvmYwTef9ndjhPTSIx9.ttf", true), A.NotoFont$("Noto Sans Sharada", "notosanssharada/v16/gok0H7rwAEdtF9N8-mdTGALG6p0kwoXLPOwr4H8a.ttf", true), A.NotoFont$("Noto Sans Shavian", "notosansshavian/v17/CHy5V_HZE0jxJBQlqAeCKjJvQBNF4EFQSplv2Cwg.ttf", true), A.NotoFont$("Noto Sans Siddham", "notosanssiddham/v20/OZpZg-FwqiNLe9PELUikxTWDoCCeGqndk3Ic92ZH.ttf", true), A.NotoFont$("Noto Sans Sinhala", "notosanssinhala/v26/yMJ2MJBya43H0SUF_WmcBEEf4rQVO2P524V5N_MxQzQtb-tf5dJbC30Fu9zUwg2a5lgLpJwbQRM.ttf", true), A.NotoFont$("Noto Sans Sogdian", "notosanssogdian/v16/taiQGn5iC4--qtsfi4Jp6eHPnfxQBo--Pm6KHidM.ttf", true), A.NotoFont$("Noto Sans Sora Sompeng", "notosanssorasompeng/v24/PlIRFkO5O6RzLfvNNVSioxM2_OTrEhPyDLolKvCsHzCxWuGkYHR818DpZXJQd4Mu.ttf", true), A.NotoFont$("Noto Sans Soyombo", "notosanssoyombo/v17/RWmSoL-Y6-8q5LTtXs6MF6q7xsxgY0FrIFOcK25W.ttf", true), A.NotoFont$("Noto Sans Sundanese", "notosanssundanese/v26/FwZw7_84xUkosG2xJo2gm7nFwSLQkdymq2mkz3Gz1_b6ctxpNNHCizv7fQES.ttf", true), A.NotoFont$("Noto Sans Syloti Nagri", "notosanssylotinagri/v20/uU9eCAQZ75uhfF9UoWDRiY3q7Sf_VFV3m4dGFVfxN87gsj0.ttf", true), A.NotoFont$("Noto Sans Syriac", "notosanssyriac/v16/Ktk7AKuMeZjqPnXgyqribqzQqgW0LYiVqV7dXcP0C-VD9MaJyZfUL_FC.ttf", true), A.NotoFont$("Noto Sans TC", "notosanstc/v35/-nFuOG829Oofr2wohFbTp9ifNAn722rq0MXz76Cy_CpOtma3uNQ.ttf", true), A.NotoFont$("Noto Sans Tagalog", "notosanstagalog/v22/J7aFnoNzCnFcV9ZI-sUYuvote1R0wwEAA8jHexnL.ttf", true), A.NotoFont$("Noto Sans Tagbanwa", "notosanstagbanwa/v18/Y4GWYbB8VTEp4t3MKJSMmQdIKjRtt_nZRjQEaYpGoQ.ttf", true), A.NotoFont$("Noto Sans Tai Le", "notosanstaile/v17/vEFK2-VODB8RrNDvZSUmVxEATwR58tK1W77HtMo.ttf", true), A.NotoFont$("Noto Sans Tai Tham", "notosanstaitham/v20/kJEbBv0U4hgtwxDUw2x9q7tbjLIfbPGHBoaVSAZ3MdLJBCUbPgquyaRGKMw.ttf", true), A.NotoFont$("Noto Sans Tai Viet", "notosanstaiviet/v19/8QIUdj3HhN_lv4jf9vsE-9GMOLsaSPZr644fWsRO9w.ttf", true), A.NotoFont$("Noto Sans Takri", "notosanstakri/v24/TuGJUVpzXI5FBtUq5a8bnKIOdTwQNO_W3khJXg.ttf", true), A.NotoFont$("Noto Sans Tamil", "notosanstamil/v27/ieVc2YdFI3GCY6SyQy1KfStzYKZgzN1z4LKDbeZce-0429tBManUktuex7vGo70RqKDt_EvT.ttf", true), A.NotoFont$("Noto Sans Tamil Supplement", "notosanstamilsupplement/v21/DdTz78kEtnooLS5rXF1DaruiCd_bFp_Ph4sGcn7ax_vsAeMkeq1x.ttf", true), A.NotoFont$("Noto Sans Telugu", "notosanstelugu/v26/0FlxVOGZlE2Rrtr-HmgkMWJNjJ5_RyT8o8c7fHkeg-esVC5dzHkHIJQqrEntezbqQUbf-3v37w.ttf", true), A.NotoFont$("Noto Sans Thaana", "notosansthaana/v24/C8c14dM-vnz-s-3jaEsxlxHkBH-WZOETXfoQrfQ9Y4XrbhLhnu4-tbNu.ttf", true), A.NotoFont$("Noto Sans Thai", "notosansthai/v25/iJWnBXeUZi_OHPqn4wq6hQ2_hbJ1xyN9wd43SofNWcd1MKVQt_So_9CdU5RtpzF-QRvzzXg.ttf", true), A.NotoFont$("Noto Sans Tifinagh", "notosanstifinagh/v20/I_uzMoCduATTei9eI8dawkHIwvmhCvbn6rnEcXfs4Q.ttf", true), A.NotoFont$("Noto Sans Tirhuta", "notosanstirhuta/v16/t5t6IQYRNJ6TWjahPR6X-M-apUyby7uGUBsTrn5P.ttf", true), A.NotoFont$("Noto Sans Ugaritic", "notosansugaritic/v16/3qTwoiqhnSyU8TNFIdhZVCwbjCpkAXXkMhoIkiazfg.ttf", true), A.NotoFont$("Noto Sans Vai", "notosansvai/v17/NaPecZTSBuhTirw6IaFn_UrURMTsDIRSfr0.ttf", true), A.NotoFont$("Noto Sans Wancho", "notosanswancho/v17/zrf-0GXXyfn6Fs0lH9P4cUubP0GBqAPopiRfKp8.ttf", true), A.NotoFont$("Noto Sans Warang Citi", "notosanswarangciti/v17/EYqtmb9SzL1YtsZSScyKDXIeOv3w-zgsNvKRpeVCCXzdgA.ttf", true), A.NotoFont$("Noto Sans Yi", "notosansyi/v19/sJoD3LFXjsSdcnzn071rO3apxVDJNVgSNg.ttf", true), A.NotoFont$("Noto Sans Zanabazar Square", "notosanszanabazarsquare/v19/Cn-jJsuGWQxOjaGwMQ6fOicyxLBEMRfDtkzl4uagQtJxOCEgN0Gc.ttf", true), A.NotoFont$("Noto Serif Tibetan", "notoseriftibetan/v22/gokGH7nwAEdtF9N45n0Vaz7O-pk0wsvxHeDXMfqguoCmIrYcPS7rdSy_32c.ttf", true)], type$.JSArray_NotoFont);
    },
    FontFallbackManager_FontFallbackManager(registry) {
      return A.FontFallbackManager$_(registry, A.getFallbackFontList(A.configuration().get$useColorEmoji()));
    },
    FontFallbackManager$_(registry, fallbackFonts) {
      var t6,
        t1 = type$.int,
        t2 = B.LinkedHashSet_LinkedHashSet$_empty(t1),
        t3 = B.LinkedHashSet_LinkedHashSet$_empty(t1),
        t4 = B.Future_Future$value(null, type$.void),
        t5 = B._setArrayType(["Roboto"], type$.JSArray_String);
      t1 = B.LinkedHashSet_LinkedHashSet$_empty(t1);
      t6 = J.getInterceptor$ax(fallbackFonts);
      t1 = new A.FontFallbackManager(registry, t2, t3, fallbackFonts, t6.singleWhere$1(fallbackFonts, new A.FontFallbackManager$__closure()), t6.singleWhere$1(fallbackFonts, new A.FontFallbackManager$__closure0()), t6.singleWhere$1(fallbackFonts, new A.FontFallbackManager$__closure1()), t6.singleWhere$1(fallbackFonts, new A.FontFallbackManager$__closure2()), t6.singleWhere$1(fallbackFonts, new A.FontFallbackManager$__closure3()), t6.singleWhere$1(fallbackFonts, new A.FontFallbackManager$__closure4()), t4, t5, t1);
      t1.FontFallbackManager$_$2(registry, fallbackFonts);
      return t1;
    },
    _UnicodePropertyLookup$_(_boundaries, _values, $P) {
      return new A._UnicodePropertyLookup(_boundaries, _values, $P._eval$1("_UnicodePropertyLookup<0>"));
    },
    _UnicodePropertyLookup__UnicodePropertyLookup$fromPackedData(packedData, propertyEnumValues, $P) {
      var t1, t2, start, prefix, size, i, code, prefix0, value,
        boundaries = B._setArrayType([], type$.JSArray_int),
        values = B._setArrayType([], $P._eval$1("JSArray<0>"));
      for (t1 = packedData.length, t2 = J.getInterceptor$asx(propertyEnumValues), start = 0, prefix = 0, size = 1, i = 0; i < t1; ++i) {
        code = packedData.charCodeAt(i);
        prefix0 = 0;
        if (65 <= code && code < 91) {
          value = t2.$index(propertyEnumValues, prefix * 26 + (code - 65));
          start += size;
          D.JSArray_methods.add$1(boundaries, start);
          D.JSArray_methods.add$1(values, value);
          prefix = prefix0;
          size = 1;
        } else if (97 <= code && code < 123) {
          size = prefix * 26 + (code - 97) + 2;
          prefix = prefix0;
        } else if (48 <= code && code < 58)
          prefix = prefix * 10 + (code - 48);
        else
          throw B.wrapException(B.StateError$("Unreachable"));
      }
      if (start !== 1114112)
        throw B.wrapException(B.StateError$("Bad map size: " + start));
      return A._UnicodePropertyLookup$_(boundaries, values, $P);
    },
    FallbackFontDownloadQueue$(fallbackManager) {
      var t1 = type$.NotoFont;
      return new A.FallbackFontDownloadQueue(fallbackManager, B.LinkedHashSet_LinkedHashSet$_empty(t1), B.LinkedHashMap_LinkedHashMap$_empty(type$.String, t1));
    },
    FontNotFoundError$(url) {
      return new A.FontNotFoundError();
    },
    FontDownloadError$(url, error) {
      return new A.FontDownloadError();
    },
    FontInvalidDataError$(url) {
      return new A.FontInvalidDataError();
    },
    AssetFontsResult$(loadedFonts, fontFailures) {
      return new A.AssetFontsResult();
    },
    FrameReference$(value, $V) {
      var t1 = new A.FrameReference(value, $V._eval$1("FrameReference<0>"));
      t1.FrameReference$1(value, $V);
      return t1;
    },
    CrossFrameCache$($T) {
      return new A.CrossFrameCache($T._eval$1("CrossFrameCache<0>"));
    },
    _CrossFrameCacheItem$(value, evictCallback, $T) {
      return new A._CrossFrameCacheItem(value, evictCallback, $T._eval$1("_CrossFrameCacheItem<0>"));
    },
    FrameTimingRecorder$() {
      return new A.FrameTimingRecorder($.FrameTimingRecorder__currentFrameVsyncStart, $.FrameTimingRecorder__currentFrameBuildStart);
    },
    FrameTimingRecorder_frameTimingsEnabled() {
      return A.EnginePlatformDispatcher_instance().get$onReportTimings() != null;
    },
    FrameTimingRecorder__nowMicros() {
      var t1 = A.DomPerformanceExtension_now(B.getProperty(self.window, "performance", type$.JavaScriptObject));
      if (typeof t1 !== "number")
        return t1.$mul();
      return D.JSNumber_methods.toInt$0(t1 * 1000);
    },
    BitmapCanvas$(_bounds, renderStrategy, density) {
      var t1 = A.createDomElement("flt-canvas"),
        t2 = B._setArrayType([], type$.JSArray_JavaScriptObject),
        t3 = A.EngineFlutterDisplay_instance().get$browserDevicePixelRatio(),
        t4 = A.BitmapCanvas_widthToPhysical(_bounds.get$width()),
        t5 = A.BitmapCanvas_heightToPhysical(_bounds.get$height());
      t3 = new A.BitmapCanvas(_bounds, t1, A.CanvasPool$(A.BitmapCanvas_widthToPhysical(_bounds.get$width()), A.BitmapCanvas_heightToPhysical(_bounds.get$height()), density), t2, t4, t5, t3, density, renderStrategy);
      t3.BitmapCanvas$3$density(_bounds, renderStrategy, density);
      return t3;
    },
    BitmapCanvas_widthToPhysical(width) {
      var t1 = A.EngineFlutterDisplay_instance().get$browserDevicePixelRatio();
      if (typeof t1 !== "number")
        return B.iae(t1);
      t1 = D.JSNumber_methods.ceil$0((width + 1) * t1);
      if (typeof t1 !== "number")
        return t1.$add();
      return t1 + 2;
    },
    BitmapCanvas_heightToPhysical(height) {
      var t1 = A.EngineFlutterDisplay_instance().get$browserDevicePixelRatio();
      if (typeof t1 !== "number")
        return B.iae(t1);
      t1 = D.JSNumber_methods.ceil$0((height + 1) * t1);
      if (typeof t1 !== "number")
        return t1.$add();
      return t1 + 2;
    },
    BitmapCanvas__onEvictElement(element) {
      B._callMethodUnchecked0(type$.JavaScriptObject._as(element), "remove", type$.void);
    },
    blendModeToCssMixBlendMode(blendMode) {
      if (blendMode == null)
        return null;
      switch (blendMode.index) {
        case 3:
          return "source-over";
        case 5:
          return "source-in";
        case 7:
          return "source-out";
        case 9:
          return "source-atop";
        case 4:
          return "destination-over";
        case 6:
          return "destination-in";
        case 8:
          return "destination-out";
        case 10:
          return "destination-atop";
        case 12:
          return "lighten";
        case 1:
          return "copy";
        case 11:
          return "xor";
        case 24:
        case 13:
          return "multiply";
        case 14:
          return "screen";
        case 15:
          return "overlay";
        case 16:
          return "darken";
        case 17:
          return "lighten";
        case 18:
          return "color-dodge";
        case 19:
          return "color-burn";
        case 20:
          return "hard-light";
        case 21:
          return "soft-light";
        case 22:
          return "difference";
        case 23:
          return "exclusion";
        case 25:
          return "hue";
        case 26:
          return "saturation";
        case 27:
          return "color";
        case 28:
          return "luminosity";
        default:
          throw B.wrapException(B.UnimplementedError$("Flutter Web does not support the blend mode: " + B.S(blendMode)));
      }
    },
    blendModeToSvgEnum(blendMode) {
      if (blendMode == null)
        return null;
      switch (blendMode.index) {
        case 0:
          return C.SvgBlendMode_0;
        case 3:
          return C.SvgBlendMode_00;
        case 5:
          return C.SvgBlendMode_01;
        case 7:
          return C.SvgBlendMode_02;
        case 9:
          return C.SvgBlendMode_03;
        case 4:
          return C.SvgBlendMode_04;
        case 6:
          return C.SvgBlendMode_05;
        case 8:
          return C.SvgBlendMode_06;
        case 10:
          return C.SvgBlendMode_07;
        case 12:
          return C.SvgBlendMode_08;
        case 1:
          return C.SvgBlendMode_09;
        case 11:
          return C.SvgBlendMode_010;
        case 24:
        case 13:
          return C.SvgBlendMode_2;
        case 14:
          return C.SvgBlendMode_3;
        case 15:
          return C.SvgBlendMode_6;
        case 16:
          return C.SvgBlendMode_4;
        case 17:
          return C.SvgBlendMode_5;
        case 18:
          return C.SvgBlendMode_7;
        case 19:
          return C.SvgBlendMode_8;
        case 20:
          return C.SvgBlendMode_9;
        case 21:
          return C.SvgBlendMode_10;
        case 22:
          return C.SvgBlendMode_11;
        case 23:
          return C.SvgBlendMode_12;
        case 25:
          return C.SvgBlendMode_13;
        case 26:
          return C.SvgBlendMode_14;
        case 27:
          return C.SvgBlendMode_15;
        case 28:
          return C.SvgBlendMode_16;
        default:
          return C.SvgBlendMode_1;
      }
    },
    stringForStrokeCap(strokeCap) {
      if (strokeCap == null)
        return null;
      switch (strokeCap.index) {
        case 0:
          return "butt";
        case 1:
          return "round";
        case 2:
        default:
          return "square";
      }
    },
    stringForStrokeJoin(strokeJoin) {
      switch (strokeJoin.index) {
        case 1:
          return "round";
        case 2:
          return "bevel";
        case 0:
        default:
          return "miter";
      }
    },
    _clipContent(clipStack, $content, offset, currentTransform) {
      var t3, t4, t5, root, curElement, clipIndex, entry, newElement, rect, newClipTransform, transformKind, clipOffsetX, clipOffsetY, t6, t7, t8, t9, t10, t11, ovalBounds, reverseTransformDiv, _s5_ = "style",
        _s8_ = "absolute",
        _s6_ = "append", _s6_0 = "hidden",
        _s11_ = "preserve-3d",
        t1 = type$.JSArray_JavaScriptObject,
        clipDefs = B._setArrayType([], t1),
        t2 = J.getInterceptor$asx(clipStack),
        len = t2.get$length(clipStack);
      for (t3 = type$.void, t4 = type$.JavaScriptObject, t5 = type$.SurfacePath, root = null, curElement = null, clipIndex = 0; clipIndex < len; ++clipIndex, curElement = reverseTransformDiv) {
        entry = t2.$index(clipStack, clipIndex);
        newElement = A.createDomHTMLDivElement();
        A.DomCSSStyleDeclarationExtension_set_position(B.getProperty(newElement, _s5_, t4), _s8_);
        A.applyWebkitClipFix(newElement);
        if (root == null)
          root = newElement;
        else {
          curElement.toString;
          B._callMethodUnchecked1(curElement, _s6_, newElement, t3);
        }
        rect = entry.rect;
        newClipTransform = entry.currentTransform;
        transformKind = A.transformKindOf(newClipTransform.get$storage());
        if (rect != null) {
          clipOffsetX = rect.left;
          clipOffsetY = rect.top;
          newClipTransform = newClipTransform.clone$0();
          newClipTransform.translate$2(clipOffsetX, clipOffsetY);
          t6 = B.getProperty(newElement, _s5_, t4);
          A.DomCSSStyleDeclarationExtension_set_overflow(t6, _s6_0);
          t7 = rect.right;
          if (typeof t7 !== "number")
            return t7.$sub();
          A.DomCSSStyleDeclarationExtension_set_width(t6, B.S(t7 - clipOffsetX) + "px");
          t7 = rect.bottom;
          if (typeof t7 !== "number")
            return t7.$sub();
          A.DomCSSStyleDeclarationExtension_set_height(t6, B.S(t7 - clipOffsetY) + "px");
          A.setElementTransform(newElement, newClipTransform.get$storage());
        } else {
          t6 = entry.rrect;
          if (t6 != null) {
            t7 = B.S(t6.tlRadiusX);
            t8 = B.S(t6.trRadiusX);
            t9 = B.S(t6.brRadiusX);
            t10 = B.S(t6.blRadiusX);
            clipOffsetX = t6.left;
            clipOffsetY = t6.top;
            newClipTransform = newClipTransform.clone$0();
            newClipTransform.translate$2(clipOffsetX, clipOffsetY);
            t11 = B.getProperty(newElement, _s5_, t4);
            A.DomCSSStyleDeclarationExtension_set_borderRadius(t11, t7 + "px " + t8 + "px " + t9 + "px " + t10 + "px");
            A.DomCSSStyleDeclarationExtension_set_overflow(t11, _s6_0);
            t10 = t6.right;
            if (typeof t10 !== "number")
              return t10.$sub();
            A.DomCSSStyleDeclarationExtension_set_width(t11, B.S(t10 - clipOffsetX) + "px");
            t6 = t6.bottom;
            if (typeof t6 !== "number")
              return t6.$sub();
            A.DomCSSStyleDeclarationExtension_set_height(t11, B.S(t6 - clipOffsetY) + "px");
            A.setElementTransform(newElement, newClipTransform.get$storage());
          } else {
            t6 = entry.path;
            if (t6 != null) {
              t5._as(t6);
              if (!B.boolConversionCheck(J.$eq$(t6.pathRef.get$isOval(), -1))) {
                ovalBounds = t6.getBounds$0();
                clipOffsetX = ovalBounds.left;
                clipOffsetY = ovalBounds.top;
                newClipTransform = newClipTransform.clone$0();
                newClipTransform.translate$2(clipOffsetX, clipOffsetY);
                t6 = B.getProperty(newElement, _s5_, t4);
                A.DomCSSStyleDeclarationExtension_set_overflow(t6, _s6_0);
                A.DomCSSStyleDeclarationExtension_set_width(t6, B.S(ovalBounds.get$width()) + "px");
                A.DomCSSStyleDeclarationExtension_set_height(t6, B.S(ovalBounds.get$height()) + "px");
                A.DomCSSStyleDeclarationExtension_set_borderRadius(t6, "50%");
                A.setElementTransform(newElement, newClipTransform.get$storage());
              } else {
                t7 = B.getProperty(newElement, _s5_, t4);
                A.DomCSSStyleDeclarationExtension_set_transform(t7, A.matrix4ToCssTransform(newClipTransform));
                A.DomCSSStyleDeclarationExtension_set_transformOrigin(t7, "0 0 0");
                D.JSArray_methods.add$1(clipDefs, A.createSvgClipDef(newElement, t6));
              }
            }
          }
        }
        reverseTransformDiv = A.createDomHTMLDivElement();
        A.DomCSSStyleDeclarationExtension_set_position(B.getProperty(reverseTransformDiv, _s5_, t4), _s8_);
        t6 = newClipTransform.clone$0();
        t6.invert$0();
        A.setElementTransform(reverseTransformDiv, t6.get$storage());
        if (transformKind === C.TransformKind_2) {
          A.DomCSSStyleDeclarationExtension_set_transformStyle(B.getProperty(newElement, _s5_, t4), _s11_);
          A.DomCSSStyleDeclarationExtension_set_transformStyle(B.getProperty(reverseTransformDiv, _s5_, t4), _s11_);
        }
        B._callMethodUnchecked1(newElement, _s6_, reverseTransformDiv, t3);
      }
      root.toString;
      A.DomCSSStyleDeclarationExtension_set_position(B.getProperty(root, _s5_, t4), _s8_);
      curElement.toString;
      B._callMethodUnchecked1(curElement, _s6_, $content, t3);
      A.setElementTransform($content, A.transformWithOffset(currentTransform, offset).get$storage());
      t1 = B._setArrayType([root], t1);
      D.JSArray_methods.addAll$1(t1, clipDefs);
      return t1;
    },
    maskFilterToCanvasFilter(maskFilter) {
      var t1, t2;
      if (maskFilter != null) {
        t1 = maskFilter.get$webOnlySigma();
        t2 = A.EngineFlutterDisplay_instance().get$devicePixelRatio();
        if (typeof t1 !== "number")
          return t1.$mul();
        if (typeof t2 !== "number")
          return B.iae(t2);
        return "blur(" + B.S(t1 * t2) + "px)";
      } else
        return "none";
    },
    SurfaceCanvas_SurfaceCanvas(recorder, cullRect) {
      if (B.boolConversionCheck(recorder.get$isRecording()))
        throw B.wrapException(B.ArgumentError$(string$._recor, null));
      return A.SurfaceCanvas$_(recorder.beginRecording$1(cullRect == null ? C.Rect_tsf : cullRect));
    },
    SurfaceCanvas$_(_canvas) {
      return new A.SurfaceCanvas(_canvas);
    },
    PersistedClipRect$(oldLayer, rect, clipBehavior) {
      var t1 = B._setArrayType([], type$.JSArray_PersistedSurface),
        t2 = oldLayer != null && B.boolConversionCheck(oldLayer.get$isActive()) ? oldLayer : null;
      return new A.PersistedClipRect(clipBehavior, rect, null, t1, A.FrameReference$(t2, type$.PersistedSurface), C.PersistedSurfaceState_0);
    },
    PersistedClipRRect$(oldLayer, rrect, clipBehavior) {
      var t1, t2;
      type$.nullable_PersistedSurface._as(oldLayer);
      t1 = B._setArrayType([], type$.JSArray_PersistedSurface);
      t2 = oldLayer != null && B.boolConversionCheck(oldLayer.get$isActive()) ? oldLayer : null;
      return new A.PersistedClipRRect(rrect, clipBehavior, null, t1, A.FrameReference$(t2, type$.PersistedSurface), C.PersistedSurfaceState_0);
    },
    PersistedClipPath$(oldLayer, clipPath, clipBehavior) {
      var t1 = B._setArrayType([], type$.JSArray_PersistedSurface),
        t2 = oldLayer != null && B.boolConversionCheck(oldLayer.get$isActive()) ? oldLayer : null;
      return new A.PersistedClipPath(clipPath, clipBehavior, t1, A.FrameReference$(t2, type$.PersistedSurface), C.PersistedSurfaceState_0);
    },
    createSvgClipDef(element, clipPath) {
      var t2, svgClipPath, t3,
        pathBounds = clipPath.getBounds$0(),
        t1 = pathBounds.right;
      if (typeof t1 !== "number")
        return B.iae(t1);
      t2 = pathBounds.bottom;
      if (typeof t2 !== "number")
        return B.iae(t2);
      svgClipPath = A.pathToSvgClipPath(clipPath, 1 / t1, 1 / t2);
      A.setClipPath(element, A.createSvgClipUrl());
      t3 = B.getProperty(element, "style", type$.JavaScriptObject);
      A.DomCSSStyleDeclarationExtension_set_width(t3, B.S(t1) + "px");
      A.DomCSSStyleDeclarationExtension_set_height(t3, B.S(t2) + "px");
      return svgClipPath;
    },
    svgFilterFromBlendMode(filterColor, colorFilterBlendMode) {
      var svgFilter, t1;
      switch (colorFilterBlendMode.index) {
        case 5:
        case 9:
          svgFilter = A._srcInColorFilterToSvg(filterColor);
          break;
        case 7:
          svgFilter = A._srcOutColorFilterToSvg(filterColor);
          break;
        case 10:
          svgFilter = A._dstATopColorFilterToSvg(filterColor);
          break;
        case 11:
          svgFilter = A._xorColorFilterToSvg(filterColor);
          break;
        case 12:
          svgFilter = A._compositeColorFilterToSvg(filterColor, 0, 1, 1, 0);
          break;
        case 13:
          filterColor.toString;
          svgFilter = A._modulateColorFilterToSvg(filterColor);
          break;
        case 15:
          t1 = A.blendModeToSvgEnum(C.BlendMode_20);
          t1.toString;
          svgFilter = A._blendColorFilterToSvg(filterColor, t1, true);
          break;
        case 26:
        case 18:
        case 19:
        case 25:
        case 27:
        case 28:
        case 24:
        case 14:
        case 16:
        case 17:
        case 20:
        case 21:
        case 22:
        case 23:
          t1 = A.blendModeToSvgEnum(colorFilterBlendMode);
          t1.toString;
          svgFilter = A._blendColorFilterToSvg(filterColor, t1, false);
          break;
        case 1:
        case 2:
        case 6:
        case 8:
        case 4:
        case 0:
        case 3:
          throw B.wrapException(B.UnimplementedError$("Blend mode not supported in HTML renderer: " + B.S(colorFilterBlendMode)));
        default:
          svgFilter = null;
      }
      return svgFilter;
    },
    SvgFilterBuilder$() {
      var t1 = A.DomNodeExtension_cloneNode($.$get$kSvgResourceHeader(), false),
        t2 = A.createSVGFilterElement(),
        t3 = $.SvgFilterBuilder__filterIdCounter;
      if (typeof t3 !== "number")
        return t3.$add();
      ++t3;
      $.SvgFilterBuilder__filterIdCounter = t3;
      t2 = new A.SvgFilterBuilder("_fcf" + B.S(t3), t1, t2);
      t2.SvgFilterBuilder$0();
      return t2;
    },
    SvgFilter$_(id, element) {
      return new A.SvgFilter(id, element);
    },
    svgFilterFromColorMatrix(matrix) {
      var builder = A.SvgFilterBuilder$();
      builder.setFeColorMatrix$2$result(matrix, "comp");
      return builder.build$0();
    },
    _srcInColorFilterToSvg(color) {
      var t1,
        _s9_ = "destalpha",
        builder = A.SvgFilterBuilder$();
      builder.set$colorInterpolationFilters("sRGB");
      builder.setFeColorMatrix$2$result(C.List_twE, _s9_);
      t1 = color == null ? null : A.CssColor_toCssString(color);
      builder.setFeFlood$3$floodColor$floodOpacity$result(t1 == null ? "" : t1, "1", "flood");
      builder.setFeComposite$8$in1$in2$k1$k2$k3$k4$operator$result("flood", _s9_, 1, 0, 0, 0, 6, "comp");
      return builder.build$0();
    },
    _dstATopColorFilterToSvg(color) {
      var builder = A.SvgFilterBuilder$(),
        t1 = color == null ? null : A.CssColor_toCssString(color);
      builder.setFeFlood$3$floodColor$floodOpacity$result(t1 == null ? "" : t1, "1", "flood");
      builder.setFeComposite$4$in1$in2$operator$result("SourceGraphic", "flood", 4, "comp");
      return builder.build$0();
    },
    _srcOutColorFilterToSvg(color) {
      var builder = A.SvgFilterBuilder$(),
        t1 = color == null ? null : A.CssColor_toCssString(color);
      builder.setFeFlood$3$floodColor$floodOpacity$result(t1 == null ? "" : t1, "1", "flood");
      builder.setFeComposite$4$in1$in2$operator$result("flood", "SourceGraphic", 3, "comp");
      return builder.build$0();
    },
    _xorColorFilterToSvg(color) {
      var builder = A.SvgFilterBuilder$(),
        t1 = color == null ? null : A.CssColor_toCssString(color);
      builder.setFeFlood$3$floodColor$floodOpacity$result(t1 == null ? "" : t1, "1", "flood");
      builder.setFeComposite$4$in1$in2$operator$result("flood", "SourceGraphic", 5, "comp");
      return builder.build$0();
    },
    _compositeColorFilterToSvg(color, k1, k2, k3, k4) {
      var builder = A.SvgFilterBuilder$(),
        t1 = color == null ? null : A.CssColor_toCssString(color);
      builder.setFeFlood$3$floodColor$floodOpacity$result(t1 == null ? "" : t1, "1", "flood");
      builder.setFeComposite$8$in1$in2$k1$k2$k3$k4$operator$result("flood", "SourceGraphic", k1, k2, k3, k4, 6, "comp");
      return builder.build$0();
    },
    _modulateColorFilterToSvg(color) {
      var t2, t3, builder,
        t1 = color.get$red();
      if (typeof t1 !== "number")
        return t1.$div();
      t2 = color.get$blue();
      if (typeof t2 !== "number")
        return t2.$div();
      t3 = color.get$green();
      if (typeof t3 !== "number")
        return t3.$div();
      builder = A.SvgFilterBuilder$();
      builder.setFeColorMatrix$2$result(B._setArrayType([0, 0, 0, 0, t1 / 255, 0, 0, 0, 0, t3 / 255, 0, 0, 0, 0, t2 / 255, 0, 0, 0, 1, 0], type$.JSArray_double), "recolor");
      builder.setFeComposite$8$in1$in2$k1$k2$k3$k4$operator$result("recolor", "SourceGraphic", 1, 0, 0, 0, 6, "comp");
      return builder.build$0();
    },
    _blendColorFilterToSvg(color, svgBlendMode, swapLayers) {
      var _s5_ = "flood",
        _s13_ = "SourceGraphic",
        builder = A.SvgFilterBuilder$(),
        t1 = color == null ? null : A.CssColor_toCssString(color);
      builder.setFeFlood$3$floodColor$floodOpacity$result(t1 == null ? "" : t1, "1", _s5_);
      t1 = svgBlendMode.blendMode;
      if (swapLayers)
        builder.setFeBlend$3$in1$in2$mode(_s13_, _s5_, t1);
      else
        builder.setFeBlend$3$in1$in2$mode(_s5_, _s13_, t1);
      return builder.build$0();
    },
    DomCanvas$(rootElement) {
      return new A.DomCanvas(rootElement, B._setArrayType([], type$.JSArray__SaveElementStackEntry), B._setArrayType([], type$.JSArray_JavaScriptObject), A.Matrix4$identity());
    },
    blurColor(color, sigma) {
      var strength, reducedAlpha,
        t1 = A.sqrt(sigma);
      if (typeof t1 !== "number")
        return t1.$div();
      strength = A.min(t1 / 6.283185307179586, 1, type$.double);
      t1 = color.get$alpha();
      if (typeof t1 !== "number")
        return B.iae(t1);
      reducedAlpha = D.JSNumber_methods.round$0((1 - strength) * t1);
      t1 = color.get$value();
      if (typeof t1 !== "number")
        return t1.$and();
      return A.Color$(((reducedAlpha & 255) << 24 | t1 & 16777215) >>> 0);
    },
    adjustRectForDom(rect, paint) {
      var t4,
        t1 = rect.left,
        t2 = type$.double,
        left = A.min(t1, rect.right, t2),
        t3 = rect.top,
        $top = A.min(t3, rect.bottom, t2),
        width = J.abs$0$in(rect.get$width()),
        height = J.abs$0$in(rect.get$height()),
        isStroke = J.$eq$(paint.style, C.PaintingStyle_1),
        strokeWidth = paint.strokeWidth;
      if (strokeWidth == null)
        strokeWidth = 0;
      if (isStroke && strokeWidth > 0) {
        t4 = strokeWidth / 2;
        left -= t4;
        $top -= t4;
        width = A.max(0, width - strokeWidth, t2);
        height = A.max(0, height - strokeWidth, t2);
      }
      if (left !== t1 || $top !== t3 || width !== rect.get$width() || height !== rect.get$height())
        return A.Rect$fromLTWH(left, $top, width, height);
      return rect;
    },
    buildDrawRectElement(rect, paint, tagName, transform) {
      var t1, t2, t3, effectiveTransform, translated, style, cssColor, sigma,
        rectangle = A.DomDocumentExtension_createElement(self.document, tagName),
        isStroke = J.$eq$(paint.style, C.PaintingStyle_1),
        strokeWidth = paint.strokeWidth;
      if (strokeWidth == null)
        strokeWidth = 0;
      t1 = B.boolConversionCheck(transform.isIdentity$0());
      t2 = rect.left;
      t3 = rect.top;
      if (t1)
        effectiveTransform = "translate(" + B.S(t2) + "px, " + B.S(t3) + "px)";
      else {
        translated = transform.clone$0();
        translated.translate$2(t2, t3);
        effectiveTransform = A.matrix4ToCssTransform(translated);
      }
      style = B.getProperty(rectangle, "style", type$.JavaScriptObject);
      A.DomCSSStyleDeclarationExtension_set_position(style, "absolute");
      A.DomCSSStyleDeclarationExtension_set_transformOrigin(style, "0 0 0");
      A.DomCSSStyleDeclarationExtension_set_transform(style, effectiveTransform);
      cssColor = A.colorValueToCssString(paint.color);
      t1 = paint.maskFilter;
      if (t1 != null) {
        sigma = t1.get$webOnlySigma();
        if (B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_1)) && !isStroke) {
          A.DomCSSStyleDeclarationExtension_set_boxShadow(style, "0px 0px " + B.S(sigma * 2) + "px " + cssColor);
          cssColor = A.CssColor_toCssString(A.blurColor(A.Color$(paint.color), sigma));
        } else
          A.DomCSSStyleDeclarationExtension_set_filter(style, "blur(" + B.S(sigma) + "px)");
      }
      A.DomCSSStyleDeclarationExtension_set_width(style, B.S(rect.get$width()) + "px");
      A.DomCSSStyleDeclarationExtension_set_height(style, B.S(rect.get$height()) + "px");
      if (isStroke)
        A.DomCSSStyleDeclarationExtension_set_border(style, B.S(A._borderStrokeToCssUnit(strokeWidth)) + " solid " + cssColor);
      else {
        A.DomCSSStyleDeclarationExtension_set_backgroundColor(style, cssColor);
        A.DomCSSStyleDeclarationExtension_set_backgroundImage(style, A._getBackgroundImageCssValue(paint.shader, rect));
      }
      return rectangle;
    },
    _getBackgroundImageCssValue(shader, bounds) {
      var url = A._getBackgroundImageUrl(shader, bounds);
      return url !== "" ? "url('" + url + "'" : "";
    },
    _getBackgroundImageUrl(shader, bounds) {
      if (shader != null)
        if (shader instanceof A.GradientLinear)
          return B._asString(shader.createImageBitmap$3(bounds, 1, true));
      return "";
    },
    applyRRectBorderRadius(style, rrect) {
      var t5,
        t1 = rrect.tlRadiusX,
        t2 = rrect.trRadiusX,
        t3 = J.getInterceptor$(t1),
        t4 = false;
      if (B.boolConversionCheck(t3.$eq(t1, t2))) {
        t5 = rrect.blRadiusX;
        if (B.boolConversionCheck(t3.$eq(t1, t5))) {
          t4 = rrect.brRadiusX;
          t3 = B.boolConversionCheck(t3.$eq(t1, t4)) && B.boolConversionCheck(t3.$eq(t1, rrect.tlRadiusY)) && B.boolConversionCheck(J.$eq$(t2, rrect.trRadiusY)) && B.boolConversionCheck(J.$eq$(t5, rrect.blRadiusY)) && B.boolConversionCheck(J.$eq$(t4, rrect.brRadiusY));
        } else
          t3 = t4;
      } else
        t3 = t4;
      if (t3) {
        A.DomCSSStyleDeclarationExtension_set_borderRadius(style, A._borderStrokeToCssUnit(rrect.blRadiusX));
        return;
      }
      A.DomCSSStyleDeclarationExtension_set_borderTopLeftRadius(style, B.S(A._borderStrokeToCssUnit(t1)) + " " + B.S(A._borderStrokeToCssUnit(rrect.tlRadiusY)));
      A.DomCSSStyleDeclarationExtension_set_borderTopRightRadius(style, B.S(A._borderStrokeToCssUnit(t2)) + " " + B.S(A._borderStrokeToCssUnit(rrect.trRadiusY)));
      A.DomCSSStyleDeclarationExtension_set_borderBottomLeftRadius(style, B.S(A._borderStrokeToCssUnit(rrect.blRadiusX)) + " " + B.S(A._borderStrokeToCssUnit(rrect.blRadiusY)));
      A.DomCSSStyleDeclarationExtension_set_borderBottomRightRadius(style, B.S(A._borderStrokeToCssUnit(rrect.brRadiusX)) + " " + B.S(A._borderStrokeToCssUnit(rrect.brRadiusY)));
    },
    _borderStrokeToCssUnit(value) {
      return B.S(D.JSNumber_methods.toStringAsFixed$1(value === 0 ? 1 : value, 3)) + "px";
    },
    pathToSvgElement(path, paint) {
      var svgPath, t1, t2,
        root = A.createSVGSVGElement();
      A.DomElementExtension_setAttribute(root, "overflow", "visible");
      svgPath = A.createSVGPathElement();
      B._callMethodUnchecked1(root, "append", svgPath, type$.void);
      if (!B.boolConversionCheck(J.$eq$(paint.style, C.PaintingStyle_1)))
        t1 = !B.boolConversionCheck(J.$eq$(paint.style, C.PaintingStyle_0)) && !B.boolConversionCheck(J.$eq$(paint.strokeWidth, 0)) && paint.strokeWidth != null;
      else
        t1 = true;
      t2 = paint.color;
      if (t1) {
        A.DomElementExtension_setAttribute(svgPath, "stroke", A.colorValueToCssString(t2));
        t1 = paint.strokeWidth;
        A.DomElementExtension_setAttribute(svgPath, "stroke-width", B.S(t1 == null ? 1 : t1));
        t1 = paint.strokeCap;
        if (t1 != null)
          A.DomElementExtension_setAttribute(svgPath, "stroke-linecap", B.S(A.stringForStrokeCap(t1)));
        A.DomElementExtension_setAttribute(svgPath, "fill", "none");
      } else
        A.DomElementExtension_setAttribute(svgPath, "fill", A.colorValueToCssString(t2));
      if (B.boolConversionCheck(J.$eq$(path.get$fillType(), C.PathFillType_1)))
        A.DomElementExtension_setAttribute(svgPath, "fill-rule", "evenodd");
      A.DomElementExtension_setAttribute(svgPath, "d", A.pathToSvg(path.pathRef, 0, 0));
      return root;
    },
    PersistedOffset$(oldLayer, dx, dy) {
      var t1 = B._setArrayType([], type$.JSArray_PersistedSurface),
        t2 = oldLayer != null && B.boolConversionCheck(oldLayer.get$isActive()) ? oldLayer : null;
      return new A.PersistedOffset(dx, dy, t1, A.FrameReference$(t2, type$.PersistedSurface), C.PersistedSurfaceState_0);
    },
    PersistedOpacity$(oldLayer, alpha, offset) {
      var t1 = B._setArrayType([], type$.JSArray_PersistedSurface),
        t2 = oldLayer != null && B.boolConversionCheck(oldLayer.get$isActive()) ? oldLayer : null;
      return new A.PersistedOpacity(alpha, offset, t1, A.FrameReference$(t2, type$.PersistedSurface), C.PersistedSurfaceState_0);
    },
    SurfacePaint$() {
      return new A.SurfacePaint(A.SurfacePaintData$());
    },
    SurfacePaintData$() {
      return new A.SurfacePaintData();
    },
    Conic$(p0x, p0y, p1x, p1y, p2x, p2y, fW) {
      return new A.Conic(p0x, p0y, p1x, p1y, p2x, p2y, fW);
    },
    Conic__subdivide(src, level, pointList) {
      var t1, dst, t2, startY, endY, midY, t3;
      if (0 === level) {
        t1 = J.getInterceptor$ax(pointList);
        t1.add$1(pointList, A.Offset$(src.p1x, src.p1y));
        t1.add$1(pointList, A.Offset$(src.p2x, src.p2y));
        return;
      }
      dst = A._ConicPair$();
      src._chop$1(dst);
      t1 = dst.first;
      t1.toString;
      t2 = dst.second;
      t2.toString;
      startY = src.p0y;
      endY = src.p2y;
      if (B.boolConversionCheck(A.SPath_between(startY, src.p1y, endY))) {
        midY = t1.p2y;
        if (!B.boolConversionCheck(A.SPath_between(startY, midY, endY)))
          t3 = t1.p2y = t2.p0y = Math.abs(midY - startY) < Math.abs(midY - endY) ? startY : endY;
        else
          t3 = midY;
        if (!B.boolConversionCheck(A.SPath_between(startY, t1.p1y, t3)))
          t1.p1y = startY;
        if (!B.boolConversionCheck(A.SPath_between(t2.p0y, t2.p1y, endY)))
          t2.p1y = endY;
      }
      --level;
      A.Conic__subdivide(t1, level, pointList);
      A.Conic__subdivide(t2, level, pointList);
    },
    Conic__subdivideWeightValue(w) {
      return A.sqrt(0.5 + w * 0.5);
    },
    Conic_evalNumerator(p0, p1, p2, w, t) {
      var src2w = p1 * w;
      return A.polyEval(p2 - 2 * src2w + p0, 2 * (src2w - p0), p0, t);
    },
    Conic_evalDenominator(w, t) {
      var $B = 2 * (w - 1);
      return A.polyEval(-$B, $B, 1, t);
    },
    QuadBounds$() {
      return new A.QuadBounds();
    },
    ConicBounds$() {
      return new A.ConicBounds();
    },
    _ConicPair$() {
      return new A._ConicPair();
    },
    chopCubicAtYExtrema(points, dest) {
      var y0, y1, y2, roots, rootCount, t2,
        t1 = points.length;
      if (1 >= t1)
        return B.ioore(points, 1);
      y0 = points[1];
      if (3 >= t1)
        return B.ioore(points, 3);
      y1 = points[3];
      if (5 >= t1)
        return B.ioore(points, 5);
      y2 = points[5];
      if (7 >= t1)
        return B.ioore(points, 7);
      roots = A._findCubicExtrema(y0, y1, y2, points[7]).get$roots();
      t1 = J.getInterceptor$asx(roots);
      if (B.boolConversionCheck(t1.get$isEmpty(roots)))
        return 0;
      A._chopCubicAt(roots, points, dest);
      rootCount = t1.get$length(roots);
      if (rootCount > 0) {
        t1 = dest.length;
        if (7 >= t1)
          return B.ioore(dest, 7);
        t2 = dest[7];
        if (9 >= t1)
          return B.ioore(dest, 9);
        dest[9] = t2;
        dest[5] = t2;
        if (rootCount === 2) {
          if (13 >= t1)
            return B.ioore(dest, 13);
          t2 = dest[13];
          if (15 >= t1)
            return B.ioore(dest, 15);
          dest[15] = t2;
          dest[11] = t2;
        }
      }
      return rootCount;
    },
    _findCubicExtrema(a, b, c, d) {
      var t1 = A.QuadRoots$();
      t1.findRoots$3(d - a + 3 * (b - c), 2 * (a - b - b + c), b - a);
      return t1;
    },
    _chopCubicAt(tValues, points, outPts) {
      var i, t, t2, bufferPos, i0, t3, t4, t5,
        t1 = J.getInterceptor$asx(tValues),
        rootCount = t1.get$length(tValues);
      if (0 === rootCount)
        for (t1 = points.length, i = 0; i < 8; ++i) {
          if (!(i < t1))
            return B.ioore(points, i);
          D.NativeFloat32List_methods.$indexSet(outPts, i, points[i]);
        }
      else {
        t = t1.$index(tValues, 0);
        for (t2 = rootCount - 1, bufferPos = 0, i = 0; i < rootCount; i = i0) {
          t.toString;
          A._chopCubicAtT(points, bufferPos, outPts, bufferPos, t);
          if (i === t2)
            break;
          bufferPos += 6;
          i0 = i + 1;
          t3 = t1.$index(tValues, i0);
          t4 = t1.$index(tValues, i);
          if (typeof t3 !== "number")
            return t3.$sub();
          if (typeof t4 !== "number")
            return B.iae(t4);
          t5 = t1.$index(tValues, i);
          if (typeof t5 !== "number")
            return B.iae(t5);
          t = A.validUnitDivide(t3 - t4, 1 - t5);
          if (t == null) {
            t1 = bufferPos + 3;
            if (!(t1 < points.length))
              return B.ioore(points, t1);
            t1 = points[t1];
            D.NativeFloat32List_methods.$indexSet(outPts, bufferPos + 6, t1);
            D.NativeFloat32List_methods.$indexSet(outPts, bufferPos + 5, t1);
            D.NativeFloat32List_methods.$indexSet(outPts, bufferPos + 4, t1);
            break;
          }
        }
      }
    },
    _chopCubicAtT(points, bufferPos, outPts, outIndex, t) {
      var p3y, p0x, p0y, p1x, p1y, p2x, p2y, p3x, ab1x, ab1y, bc1x, bc1y, cd1x, cd1y, abc1x, abc1y, bcd1x, bcd1y, abcd1x, abcd1y, outIndex0,
        t1 = bufferPos + 7,
        t2 = points.length;
      if (!(t1 >= 0 && t1 < t2))
        return B.ioore(points, t1);
      p3y = points[t1];
      if (bufferPos >>> 0 !== bufferPos || bufferPos >= t2)
        return B.ioore(points, bufferPos);
      p0x = points[bufferPos];
      t1 = bufferPos + 1;
      if (!(t1 < t2))
        return B.ioore(points, t1);
      p0y = points[t1];
      t1 = bufferPos + 2;
      if (!(t1 < t2))
        return B.ioore(points, t1);
      p1x = points[t1];
      t1 = bufferPos + 3;
      if (!(t1 < t2))
        return B.ioore(points, t1);
      p1y = points[t1];
      t1 = bufferPos + 4;
      if (!(t1 < t2))
        return B.ioore(points, t1);
      p2x = points[t1];
      t1 = bufferPos + 5;
      if (!(t1 < t2))
        return B.ioore(points, t1);
      p2y = points[t1];
      t1 = bufferPos + 6;
      if (!(t1 < t2))
        return B.ioore(points, t1);
      p3x = points[t1];
      ab1x = A.interpolate(p0x, p1x, t);
      ab1y = A.interpolate(p0y, p1y, t);
      bc1x = A.interpolate(p1x, p2x, t);
      bc1y = A.interpolate(p1y, p2y, t);
      cd1x = A.interpolate(p2x, p3x, t);
      cd1y = A.interpolate(p2y, p3y, t);
      abc1x = A.interpolate(ab1x, bc1x, t);
      abc1y = A.interpolate(ab1y, bc1y, t);
      bcd1x = A.interpolate(bc1x, cd1x, t);
      bcd1y = A.interpolate(bc1y, cd1y, t);
      abcd1x = A.interpolate(abc1x, bcd1x, t);
      abcd1y = A.interpolate(abc1y, bcd1y, t);
      outIndex0 = outIndex + 1;
      t1 = outPts.length;
      if (outIndex >>> 0 !== outIndex || outIndex >= t1)
        return B.ioore(outPts, outIndex);
      outPts[outIndex] = p0x;
      outIndex = outIndex0 + 1;
      if (!(outIndex0 >= 0 && outIndex0 < t1))
        return B.ioore(outPts, outIndex0);
      outPts[outIndex0] = p0y;
      outIndex0 = outIndex + 1;
      if (!(outIndex >= 0 && outIndex < t1))
        return B.ioore(outPts, outIndex);
      outPts[outIndex] = ab1x;
      outIndex = outIndex0 + 1;
      if (!(outIndex0 >= 0 && outIndex0 < t1))
        return B.ioore(outPts, outIndex0);
      outPts[outIndex0] = ab1y;
      outIndex0 = outIndex + 1;
      if (!(outIndex >= 0 && outIndex < t1))
        return B.ioore(outPts, outIndex);
      outPts[outIndex] = abc1x;
      outIndex = outIndex0 + 1;
      if (!(outIndex0 >= 0 && outIndex0 < t1))
        return B.ioore(outPts, outIndex0);
      outPts[outIndex0] = abc1y;
      outIndex0 = outIndex + 1;
      if (!(outIndex >= 0 && outIndex < t1))
        return B.ioore(outPts, outIndex);
      outPts[outIndex] = abcd1x;
      outIndex = outIndex0 + 1;
      if (!(outIndex0 >= 0 && outIndex0 < t1))
        return B.ioore(outPts, outIndex0);
      outPts[outIndex0] = abcd1y;
      outIndex0 = outIndex + 1;
      if (!(outIndex >= 0 && outIndex < t1))
        return B.ioore(outPts, outIndex);
      outPts[outIndex] = bcd1x;
      outIndex = outIndex0 + 1;
      if (!(outIndex0 >= 0 && outIndex0 < t1))
        return B.ioore(outPts, outIndex0);
      outPts[outIndex0] = bcd1y;
      outIndex0 = outIndex + 1;
      if (!(outIndex >= 0 && outIndex < t1))
        return B.ioore(outPts, outIndex);
      outPts[outIndex] = cd1x;
      outIndex = outIndex0 + 1;
      if (!(outIndex0 >= 0 && outIndex0 < t1))
        return B.ioore(outPts, outIndex0);
      outPts[outIndex0] = cd1y;
      outIndex0 = outIndex + 1;
      if (!(outIndex >= 0 && outIndex < t1))
        return B.ioore(outPts, outIndex);
      outPts[outIndex] = p3x;
      if (!(outIndex0 >= 0 && outIndex0 < t1))
        return B.ioore(outPts, outIndex0);
      outPts[outIndex0] = p3y;
    },
    chopMonoAtY(buffer, bufferStartPos, y) {
      var ycrv0, ycrv1, ycrv2, ycrv3, tNeg, tPos, t3, tMid, y01, y12, y012, y0123,
        t1 = 1 + bufferStartPos,
        t2 = buffer.length;
      if (!(t1 >= 0 && t1 < t2))
        return B.ioore(buffer, t1);
      t1 = buffer[t1];
      if (typeof t1 !== "number")
        return t1.$sub();
      ycrv0 = t1 - y;
      t1 = 3 + bufferStartPos;
      if (!(t1 >= 0 && t1 < t2))
        return B.ioore(buffer, t1);
      t1 = buffer[t1];
      if (typeof t1 !== "number")
        return t1.$sub();
      ycrv1 = t1 - y;
      t1 = 5 + bufferStartPos;
      if (!(t1 >= 0 && t1 < t2))
        return B.ioore(buffer, t1);
      t1 = buffer[t1];
      if (typeof t1 !== "number")
        return t1.$sub();
      ycrv2 = t1 - y;
      t1 = 7 + bufferStartPos;
      if (!(t1 >= 0 && t1 < t2))
        return B.ioore(buffer, t1);
      t1 = buffer[t1];
      if (typeof t1 !== "number")
        return t1.$sub();
      ycrv3 = t1 - y;
      if (ycrv0 < 0) {
        if (ycrv3 < 0)
          return null;
        tNeg = 0;
        tPos = 1;
      } else {
        if (!(ycrv0 > 0))
          return 0;
        tNeg = 1;
        tPos = 0;
      }
      t1 = ycrv1 - ycrv0;
      t2 = ycrv2 - ycrv1;
      t3 = ycrv3 - ycrv2;
      do {
        tMid = (tPos + tNeg) / 2;
        y01 = ycrv0 + t1 * tMid;
        y12 = ycrv1 + t2 * tMid;
        y012 = y01 + (y12 - y01) * tMid;
        y0123 = y012 + (y12 + (ycrv2 + t3 * tMid - y12) * tMid - y012) * tMid;
        if (y0123 === 0)
          return tMid;
        if (y0123 < 0)
          tNeg = tMid;
        else
          tPos = tMid;
      } while (Math.abs(tPos - tNeg) > 0.0000152587890625);
      return (tNeg + tPos) / 2;
    },
    evalCubicPts(c0, c1, c2, c3, t) {
      return A.polyEval4(c3 + 3 * (c1 - c2) - c0, 3 * (c2 - c1 - c1 + c0), 3 * (c1 - c0), c0, t);
    },
    CubicBounds$() {
      return new A.CubicBounds();
    },
    SurfacePath$() {
      var t1 = new A.SurfacePath(A.PathRef$(), C.PathFillType_0);
      t1.SurfacePath$0();
      return t1;
    },
    SurfacePath$shiftedFrom(source, offsetX, offsetY) {
      var t1 = new A.SurfacePath(A.PathRef$shiftedFrom(source.pathRef, offsetX, offsetY), C.PathFillType_0);
      t1.SurfacePath$shiftedFrom$3(source, offsetX, offsetY);
      return t1;
    },
    SurfacePath$shallowCopy(source) {
      var t1 = new A.SurfacePath(A.PathRef$shallowCopy(source.pathRef), C.PathFillType_0);
      t1.SurfacePath$shallowCopy$1(source);
      return t1;
    },
    _computeMinScale(radius1, radius2, limit, scale) {
      var totalRadius = radius1 + radius2;
      if (totalRadius <= limit)
        return scale;
      return A.min(limit / totalRadius, scale, type$.double);
    },
    PathIterator$(pathRef, forceClose) {
      var t1 = new A.PathIterator(pathRef, forceClose, pathRef.countVerbs$0());
      t1.PathIterator$2(pathRef, forceClose);
      return t1;
    },
    PathRef$() {
      var t1 = new A.PathRef(A.NativeFloat32List_NativeFloat32List(16), B.NativeUint8List_NativeUint8List(8));
      t1.PathRef$0();
      return t1;
    },
    PathRef$shallowCopy(ref) {
      var t1 = new A.PathRef(ref.fPoints, ref._fVerbs);
      t1.PathRef$shallowCopy$1(ref);
      return t1;
    },
    PathRef$shiftedFrom(source, offsetX, offsetY) {
      var t1 = new A.PathRef(A.PathRef__fPointsFromSource(source, offsetX, offsetY), A.PathRef__fVerbsFromSource(source));
      t1.PathRef$shiftedFrom$3(source, offsetX, offsetY);
      return t1;
    },
    PathRef__fPointsFromSource(source, offsetX, offsetY) {
      var t1, t2, i, t3, t4,
        sourceLength = source._fPointsLength,
        dest = A.NativeFloat32List_NativeFloat32List(source._fPointsCapacity * 2),
        sourcePoints = source.get$points(),
        len = sourceLength * 2;
      for (t1 = sourcePoints.length, t2 = dest.length, i = 0; i < len; i += 2) {
        if (!(i < t1))
          return B.ioore(sourcePoints, i);
        t3 = sourcePoints[i];
        if (typeof t3 !== "number")
          return t3.$add();
        if (!(i < t2))
          return B.ioore(dest, i);
        dest[i] = t3 + offsetX;
        t3 = i + 1;
        if (!(t3 < t1))
          return B.ioore(sourcePoints, t3);
        t4 = sourcePoints[t3];
        if (typeof t4 !== "number")
          return t4.$add();
        if (!(t3 < t2))
          return B.ioore(dest, t3);
        dest[t3] = t4 + offsetY;
      }
      return dest;
    },
    PathRef__fVerbsFromSource(source) {
      var verbs = B.NativeUint8List_NativeUint8List(source._fVerbsCapacity);
      D.NativeUint8List_methods.setAll$2(verbs, 0, source._fVerbs);
      return verbs;
    },
    PathRefIterator$(pathRef) {
      var t1 = new A.PathRefIterator(pathRef);
      t1.PathRefIterator$1(pathRef);
      return t1;
    },
    pathToSvg(pathRef, offsetX, offsetY) {
      var t1, verb, t2, t3, t4, t5, t6, t7, w, points, len, i,
        buffer = B.StringBuffer$(""),
        iter = A.PathRefIterator$(pathRef),
        outPts = A.NativeFloat32List_NativeFloat32List(8);
      for (t1 = outPts.length; verb = iter.next$1(outPts), verb !== 6;)
        switch (verb) {
          case 0:
            if (0 >= t1)
              return B.ioore(outPts, 0);
            t2 = outPts[0];
            if (typeof t2 !== "number")
              return t2.$add();
            if (1 >= t1)
              return B.ioore(outPts, 1);
            t3 = outPts[1];
            if (typeof t3 !== "number")
              return t3.$add();
            buffer.write$1("M " + B.S(t2 + offsetX) + " " + B.S(t3 + offsetY));
            break;
          case 1:
            if (2 >= t1)
              return B.ioore(outPts, 2);
            t2 = outPts[2];
            if (typeof t2 !== "number")
              return t2.$add();
            if (3 >= t1)
              return B.ioore(outPts, 3);
            t3 = outPts[3];
            if (typeof t3 !== "number")
              return t3.$add();
            buffer.write$1("L " + B.S(t2 + offsetX) + " " + B.S(t3 + offsetY));
            break;
          case 4:
            if (2 >= t1)
              return B.ioore(outPts, 2);
            t2 = outPts[2];
            if (typeof t2 !== "number")
              return t2.$add();
            if (3 >= t1)
              return B.ioore(outPts, 3);
            t3 = outPts[3];
            if (typeof t3 !== "number")
              return t3.$add();
            if (4 >= t1)
              return B.ioore(outPts, 4);
            t4 = outPts[4];
            if (typeof t4 !== "number")
              return t4.$add();
            if (5 >= t1)
              return B.ioore(outPts, 5);
            t5 = outPts[5];
            if (typeof t5 !== "number")
              return t5.$add();
            if (6 >= t1)
              return B.ioore(outPts, 6);
            t6 = outPts[6];
            if (typeof t6 !== "number")
              return t6.$add();
            if (7 >= t1)
              return B.ioore(outPts, 7);
            t7 = outPts[7];
            if (typeof t7 !== "number")
              return t7.$add();
            buffer.write$1("C " + B.S(t2 + offsetX) + " " + B.S(t3 + offsetY) + " " + B.S(t4 + offsetX) + " " + B.S(t5 + offsetY) + " " + B.S(t6 + offsetX) + " " + B.S(t7 + offsetY));
            break;
          case 2:
            if (2 >= t1)
              return B.ioore(outPts, 2);
            t2 = outPts[2];
            if (typeof t2 !== "number")
              return t2.$add();
            if (3 >= t1)
              return B.ioore(outPts, 3);
            t3 = outPts[3];
            if (typeof t3 !== "number")
              return t3.$add();
            if (4 >= t1)
              return B.ioore(outPts, 4);
            t4 = outPts[4];
            if (typeof t4 !== "number")
              return t4.$add();
            if (5 >= t1)
              return B.ioore(outPts, 5);
            t5 = outPts[5];
            if (typeof t5 !== "number")
              return t5.$add();
            buffer.write$1("Q " + B.S(t2 + offsetX) + " " + B.S(t3 + offsetY) + " " + B.S(t4 + offsetX) + " " + B.S(t5 + offsetY));
            break;
          case 3:
            w = iter.get$conicWeight();
            if (0 >= t1)
              return B.ioore(outPts, 0);
            t2 = outPts[0];
            if (1 >= t1)
              return B.ioore(outPts, 1);
            t3 = outPts[1];
            if (2 >= t1)
              return B.ioore(outPts, 2);
            t4 = outPts[2];
            if (3 >= t1)
              return B.ioore(outPts, 3);
            t5 = outPts[3];
            if (4 >= t1)
              return B.ioore(outPts, 4);
            t6 = outPts[4];
            if (5 >= t1)
              return B.ioore(outPts, 5);
            points = A.Conic$(t2, t3, t4, t5, t6, outPts[5], w).toQuads$0();
            t6 = J.getInterceptor$asx(points);
            len = t6.get$length(points);
            for (i = 1; i < len; i += 2) {
              t2 = i + 1;
              buffer.write$1("Q " + B.S(t6.$index(points, i).get$dx() + offsetX) + " " + B.S(t6.$index(points, i).get$dy() + offsetY) + " " + B.S(t6.$index(points, t2).get$dx() + offsetX) + " " + B.S(t6.$index(points, t2).get$dy() + offsetY));
            }
            break;
          case 5:
            buffer.write$1("Z");
            break;
          default:
            throw B.wrapException(B.UnimplementedError$("Unknown path verb " + B.S(verb)));
        }
      return buffer.toString$0(0);
    },
    SPath_between(a, b, c) {
      return (a - b) * (c - b) <= 0;
    },
    SPath_scalarSignedAsInt(x) {
      var t1;
      if (x < 0)
        t1 = -1;
      else
        t1 = x > 0 ? 1 : 0;
      return t1;
    },
    SPath_nearlyEqual(value1, value2) {
      return Math.abs(value1 - value2) < 0.000244140625;
    },
    QuadRoots$() {
      return new A.QuadRoots();
    },
    validUnitDivide(numer, denom) {
      var r;
      if (numer < 0) {
        numer = -numer;
        denom = -denom;
      }
      if (denom === 0 || numer === 0 || numer >= denom)
        return null;
      r = numer / denom;
      if (B.boolConversionCheck(D.JSNumber_methods.get$isNaN(r)))
        return null;
      if (r === 0)
        return null;
      return r;
    },
    isRRectOval(rrect) {
      var t3, t4,
        t1 = rrect.tlRadiusX,
        t2 = rrect.trRadiusX;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (t1 + t2 !== rrect.get$width())
        return false;
      t3 = rrect.tlRadiusY;
      t4 = rrect.trRadiusY;
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      if (t3 + t4 !== rrect.get$height())
        return false;
      if (t1 !== rrect.blRadiusX || t2 !== rrect.brRadiusX || t3 !== rrect.blRadiusY || t4 !== rrect.brRadiusY)
        return false;
      return true;
    },
    polyEval($A, $B, $C, t) {
      return ($A * t + $B) * t + $C;
    },
    polyEval4($A, $B, $C, $D, t) {
      return (($A * t + $B) * t + $C) * t + $D;
    },
    interpolate(startValue, endValue, t) {
      return startValue * (1 - t) + endValue * t;
    },
    lengthSquaredOffset(offset) {
      var dx = offset.get$dx(),
        dy = offset.get$dy();
      return dx * dx + dy * dy;
    },
    SkQuadCoefficients$(x0, y0, x1, y1, x2, y2) {
      return new A.SkQuadCoefficients(x2 - 2 * x1 + x0, y2 - 2 * y1 + y0, 2 * (x1 - x0), 2 * (y1 - y0), x0, y0);
    },
    PathWinding$(pathRef, x, y) {
      var t1 = new A.PathWinding(pathRef, x, y, A.NativeFloat32List_NativeFloat32List(18));
      t1.PathWinding$3(pathRef, x, y);
      return t1;
    },
    PathWinding__checkOnCurve(x, y, startX, startY, endX, endY) {
      if (startY === endY)
        return B.boolConversionCheck(A.SPath_between(startX, x, endX)) && x !== endX;
      else
        return x === startX && y === startY;
    },
    PathWinding__chopQuadAtExtrema(buffer) {
      var x0, y0, x1, y1, x2, y2, t2, tValueAtExtrema, p01x, p01y, p12x, p12y,
        t1 = buffer.length;
      if (0 >= t1)
        return B.ioore(buffer, 0);
      x0 = buffer[0];
      if (1 >= t1)
        return B.ioore(buffer, 1);
      y0 = buffer[1];
      if (2 >= t1)
        return B.ioore(buffer, 2);
      x1 = buffer[2];
      if (3 >= t1)
        return B.ioore(buffer, 3);
      y1 = buffer[3];
      if (4 >= t1)
        return B.ioore(buffer, 4);
      x2 = buffer[4];
      if (5 >= t1)
        return B.ioore(buffer, 5);
      y2 = buffer[5];
      t2 = y0 - y1;
      tValueAtExtrema = A.validUnitDivide(t2, t2 - y1 + y2);
      if (tValueAtExtrema != null) {
        p01x = x0 + tValueAtExtrema * (x1 - x0);
        p01y = y0 + tValueAtExtrema * (y1 - y0);
        p12x = x1 + tValueAtExtrema * (x2 - x1);
        p12y = y1 + tValueAtExtrema * (y2 - y1);
        buffer[2] = p01x;
        buffer[3] = p01y;
        buffer[4] = p01x + tValueAtExtrema * (p12x - p01x);
        buffer[5] = p01y + tValueAtExtrema * (p12y - p01y);
        if (6 >= t1)
          return B.ioore(buffer, 6);
        buffer[6] = p12x;
        if (7 >= t1)
          return B.ioore(buffer, 7);
        buffer[7] = p12y;
        if (8 >= t1)
          return B.ioore(buffer, 8);
        buffer[8] = x2;
        if (9 >= t1)
          return B.ioore(buffer, 9);
        buffer[9] = y2;
        return 1;
      }
      buffer[3] = Math.abs(t2) < Math.abs(y1 - y2) ? y0 : y2;
      return 0;
    },
    PathWinding__isQuadMonotonic(quad) {
      var y0, y1, y2,
        t1 = quad.length;
      if (1 >= t1)
        return B.ioore(quad, 1);
      y0 = quad[1];
      if (3 >= t1)
        return B.ioore(quad, 3);
      y1 = quad[3];
      if (5 >= t1)
        return B.ioore(quad, 5);
      y2 = quad[5];
      if (y0 === y1)
        return true;
      if (y0 < y1)
        return y1 <= y2;
      else
        return y1 >= y2;
    },
    tangentLine(pts, x, y, tangents) {
      var y0, y1, x0, x1, dx, dy,
        t1 = pts.length;
      if (1 >= t1)
        return B.ioore(pts, 1);
      y0 = pts[1];
      if (3 >= t1)
        return B.ioore(pts, 3);
      y1 = pts[3];
      if (!B.boolConversionCheck(A.SPath_between(y0, y, y1)))
        return;
      x0 = pts[0];
      x1 = pts[2];
      if (!B.boolConversionCheck(A.SPath_between(x0, x, x1)))
        return;
      dx = x1 - x0;
      dy = y1 - y0;
      if (!B.boolConversionCheck(A.SPath_nearlyEqual((x - x0) * dy, dx * (y - y0))))
        return;
      J.add$1$ax(tangents, A.Offset$(dx, dy));
    },
    tangentQuad(pts, x, y, tangents) {
      var y0, y1, y2, x0, x1, x2, roots, n, $A, $B, index, t2, t,
        t1 = pts.length;
      if (1 >= t1)
        return B.ioore(pts, 1);
      y0 = pts[1];
      if (3 >= t1)
        return B.ioore(pts, 3);
      y1 = pts[3];
      if (5 >= t1)
        return B.ioore(pts, 5);
      y2 = pts[5];
      if (!B.boolConversionCheck(A.SPath_between(y0, y, y1)) && !B.boolConversionCheck(A.SPath_between(y1, y, y2)))
        return;
      x0 = pts[0];
      x1 = pts[2];
      x2 = pts[4];
      if (!B.boolConversionCheck(A.SPath_between(x0, x, x1)) && !B.boolConversionCheck(A.SPath_between(x1, x, x2)))
        return;
      roots = A.QuadRoots$();
      n = roots.findRoots$3(y0 - 2 * y1 + y2, 2 * (y1 - y0), y0 - y);
      for (t1 = J.getInterceptor$ax(tangents), $A = x2 - 2 * x1 + x0, $B = 2 * (x1 - x0), index = 0; index < n; ++index) {
        if (index === 0) {
          t2 = roots.root0;
          t2.toString;
          t = t2;
        } else {
          t2 = roots.root1;
          t2.toString;
          t = t2;
        }
        if (!B.boolConversionCheck(A.SPath_nearlyEqual(x, A.polyEval($A, $B, x0, t))))
          continue;
        t1.add$1(tangents, A._evalQuadTangentAt(x0, y0, x1, y1, x2, y2, t));
      }
    },
    _evalQuadTangentAt(x0, y0, x1, y1, x2, y2, t) {
      var t1, bx, by;
      if (!(t === 0 && x0 === x1 && y0 === y1))
        t1 = t === 1 && x1 === x2 && y1 === y2;
      else
        t1 = true;
      if (t1)
        return A.Offset$(x2 - x0, y2 - y0);
      bx = x1 - x0;
      by = y1 - y0;
      return A.Offset$(((x2 - x1 - bx) * t + bx) * 2, ((y2 - y1 - by) * t + by) * 2);
    },
    tangentConic(pts, x, y, weight, tangents) {
      var y0, y1, y2, x0, x1, x2, $B, quadRoots, n, index, t2, t, t3,
        t1 = pts.length;
      if (1 >= t1)
        return B.ioore(pts, 1);
      y0 = pts[1];
      if (3 >= t1)
        return B.ioore(pts, 3);
      y1 = pts[3];
      if (5 >= t1)
        return B.ioore(pts, 5);
      y2 = pts[5];
      if (!B.boolConversionCheck(A.SPath_between(y0, y, y1)) && !B.boolConversionCheck(A.SPath_between(y1, y, y2)))
        return;
      x0 = pts[0];
      x1 = pts[2];
      x2 = pts[4];
      if (!B.boolConversionCheck(A.SPath_between(x0, x, x1)) && !B.boolConversionCheck(A.SPath_between(x1, x, x2)))
        return;
      $B = y1 * weight - y * weight + y;
      quadRoots = A.QuadRoots$();
      n = quadRoots.findRoots$3(y2 + (y0 - 2 * $B), 2 * ($B - y0), y0 - y);
      for (t1 = J.getInterceptor$ax(tangents), index = 0; index < n; ++index) {
        if (index === 0) {
          t2 = quadRoots.root0;
          t2.toString;
          t = t2;
        } else {
          t2 = quadRoots.root1;
          t2.toString;
          t = t2;
        }
        t2 = A.Conic_evalNumerator(x0, x1, x2, weight, t);
        t3 = A.Conic_evalDenominator(weight, t);
        if (typeof t2 !== "number")
          return t2.$div();
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!B.boolConversionCheck(A.SPath_nearlyEqual(x, t2 / t3)))
          continue;
        t1.add$1(tangents, A.Conic$(x0, y0, x1, y1, x2, y2, weight).evalTangentAt$1(t));
      }
    },
    tangentCubic(pts, x, y, tangents) {
      var y3, y0, y1, y2, x0, x1, x2, x3, dst, n, t1, t2, i, bufferPos, t, t3, t4, t5, t6;
      if (7 >= pts.length)
        return B.ioore(pts, 7);
      y3 = pts[7];
      y0 = pts[1];
      y1 = pts[3];
      y2 = pts[5];
      if (!B.boolConversionCheck(A.SPath_between(y0, y, y1)) && !B.boolConversionCheck(A.SPath_between(y1, y, y2)) && !B.boolConversionCheck(A.SPath_between(y2, y, y3)))
        return;
      x0 = pts[0];
      x1 = pts[2];
      x2 = pts[4];
      x3 = pts[6];
      if (!B.boolConversionCheck(A.SPath_between(x0, x, x1)) && !B.boolConversionCheck(A.SPath_between(x1, x, x2)) && !B.boolConversionCheck(A.SPath_between(x2, x, x3)))
        return;
      dst = A.NativeFloat32List_NativeFloat32List(20);
      n = A.chopCubicAtYExtrema(pts, dst);
      for (t1 = J.getInterceptor$ax(tangents), t2 = dst.length, i = 0; i <= n; ++i) {
        bufferPos = i * 6;
        t = A.chopMonoAtY(dst, bufferPos, y);
        if (t == null)
          continue;
        if (!(bufferPos < t2))
          return B.ioore(dst, bufferPos);
        t3 = dst[bufferPos];
        t4 = bufferPos + 2;
        if (!(t4 < t2))
          return B.ioore(dst, t4);
        t4 = dst[t4];
        t5 = bufferPos + 4;
        if (!(t5 < t2))
          return B.ioore(dst, t5);
        t5 = dst[t5];
        t6 = bufferPos + 6;
        if (!(t6 < t2))
          return B.ioore(dst, t6);
        if (!B.boolConversionCheck(A.SPath_nearlyEqual(x, A.evalCubicPts(t3, t4, t5, dst[t6], t))))
          continue;
        t1.add$1(tangents, A._evalCubicTangentAt(dst, bufferPos, t));
      }
    },
    _evalCubicTangentAt(points, bufferPos, t) {
      var y3, y0, y1, y2, x0, x1, x2, x3, dx, dy,
        t1 = 7 + bufferPos,
        t2 = points.length;
      if (!(t1 >= 0 && t1 < t2))
        return B.ioore(points, t1);
      y3 = points[t1];
      t1 = 1 + bufferPos;
      if (!(t1 >= 0 && t1 < t2))
        return B.ioore(points, t1);
      y0 = points[t1];
      t1 = 3 + bufferPos;
      if (!(t1 >= 0 && t1 < t2))
        return B.ioore(points, t1);
      y1 = points[t1];
      t1 = 5 + bufferPos;
      if (!(t1 >= 0 && t1 < t2))
        return B.ioore(points, t1);
      y2 = points[t1];
      if (bufferPos >>> 0 !== bufferPos || bufferPos >= t2)
        return B.ioore(points, bufferPos);
      x0 = points[bufferPos];
      t1 = 2 + bufferPos;
      if (!(t1 < t2))
        return B.ioore(points, t1);
      x1 = points[t1];
      t1 = 4 + bufferPos;
      if (!(t1 < t2))
        return B.ioore(points, t1);
      x2 = points[t1];
      t1 = 6 + bufferPos;
      if (!(t1 < t2))
        return B.ioore(points, t1);
      x3 = points[t1];
      t1 = t === 0;
      if (!(t1 && x0 === x1 && y0 === y1))
        t2 = t === 1 && x2 === x3 && y2 === y3;
      else
        t2 = true;
      if (t2) {
        if (t1) {
          dx = x2 - x0;
          dy = y2 - y0;
        } else {
          dx = x3 - x1;
          dy = y3 - y1;
        }
        if (dx === 0 && dy === 0) {
          dx = x3 - x0;
          dy = y3 - y0;
        }
        return A.Offset$(dx, dy);
      } else
        return A._evalCubicDerivative(x0, y0, x1, y1, x2, y2, x3, y3, t);
    },
    _evalCubicDerivative(x0, y0, x1, y1, x2, y2, x3, y3, t) {
      var coeff = A.SkQuadCoefficients$(x3 + 3 * (x1 - x2) - x0, y3 + 3 * (y1 - y2) - y0, 2 * (x2 - 2 * x1 + x0), 2 * (y2 - 2 * y1 + y0), x1 - x0, y1 - y0);
      return A.Offset$(coeff.evalX$1(t), coeff.evalY$1(t));
    },
    pathToSvgClipPath(path, scaleX, scaleY) {
      var root, defs, t2, clipPath, svgPath, _s6_ = "append",
        _s9_ = "clip-rule",
        t1 = $._clipIdCounter;
      if (typeof t1 !== "number")
        return t1.$add();
      ++t1;
      $._clipIdCounter = t1;
      root = A.DomNodeExtension_cloneNode($.$get$kSvgResourceHeader(), false);
      defs = A.createSVGDefsElement();
      t2 = type$.void;
      B._callMethodUnchecked1(root, _s6_, defs, t2);
      clipPath = A.createSVGClipPathElement();
      B._callMethodUnchecked1(defs, _s6_, clipPath, t2);
      A.DomElementExtension_set_id(clipPath, "svgClip" + B.S(t1));
      svgPath = A.createSVGPathElement();
      B._callMethodUnchecked1(clipPath, _s6_, svgPath, t2);
      A.DomElementExtension_setAttribute(svgPath, "fill", "#FFFFFF");
      if (!B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_2))) {
        A.DomElementExtension_setAttribute(clipPath, "clipPathUnits", "objectBoundingBox");
        A.DomElementExtension_setAttribute(svgPath, "transform", "scale(" + B.S(scaleX) + ", " + B.S(scaleY) + ")");
      }
      if (B.boolConversionCheck(J.$eq$(path.get$fillType(), C.PathFillType_1)))
        A.DomElementExtension_setAttribute(svgPath, _s9_, "evenodd");
      else
        A.DomElementExtension_setAttribute(svgPath, _s9_, "nonzero");
      A.DomElementExtension_setAttribute(svgPath, "d", A.pathToSvg(type$.SurfacePath._as(path).pathRef, 0, 0));
      return root;
    },
    createSvgClipUrl() {
      return "url(#svgClip" + B.S($._clipIdCounter) + ")";
    },
    EnginePictureRecorder$() {
      return new A.EnginePictureRecorder();
    },
    EnginePicture$(recordingCanvas, cullRect) {
      return new A.EnginePicture(recordingCanvas);
    },
    reduceCanvasMemoryUsage() {
      var i,
        t1 = J.getInterceptor$asx($._recycledCanvases),
        canvasCount = t1.get$length($._recycledCanvases);
      for (i = 0; i < canvasCount; ++i)
        t1.$index($._recycledCanvases, i).dispose$0();
      t1.clear$0($._recycledCanvases);
    },
    PaintRequest$(canvasSize, paintCallback) {
      return new A.PaintRequest(canvasSize, paintCallback);
    },
    _recycleCanvas(canvas) {
      var t1, t2;
      if (canvas != null && B.boolConversionCheck(J.contains$1$asx($._recycledCanvases, canvas)))
        return;
      if (canvas instanceof A.BitmapCanvas) {
        canvas.setElementCache$1(null);
        if (B.boolConversionCheck(canvas.isReusable$0())) {
          t1 = J.getInterceptor$ax($._recycledCanvases);
          t1.add$1($._recycledCanvases, canvas);
          t2 = t1.get$length($._recycledCanvases);
          if (typeof t2 !== "number")
            return t2.$gt();
          if (t2 > 30)
            t1.removeAt$1($._recycledCanvases, 0).dispose$0();
        } else
          canvas.dispose$0();
      }
    },
    PersistedPicture$(dx, dy, picture, hints) {
      var t1 = A.CrossFrameCache$(type$.JavaScriptObject),
        t2 = picture.recordingCanvas.get$pictureBounds();
      return new A.PersistedPicture(dx, dy, picture, t2, t1, A.FrameReference$(null, type$.PersistedSurface), C.PersistedSurfaceState_0);
    },
    PersistedPicture__predictTrend(delta, extent) {
      var t1;
      if (delta <= 0)
        return extent * 0.1;
      else {
        t1 = type$.double;
        return A.min(A.max(extent * 0.5, delta * 10, t1), extent, t1);
      }
    },
    _computePixelDensity(transform, width, height) {
      var m, t1, t2, minX, t3, minY, t4, t5, t6, t7, wp, t8, t9, t10, t11, xp, t12, t13, t14, t15, yp, t16, minX0, maxX, minY0, maxY, scale;
      if (transform == null || B.boolConversionCheck(transform.isIdentityOrTranslation$0()))
        return 1;
      m = transform.get$storage();
      t1 = m.length;
      if (12 >= t1)
        return B.ioore(m, 12);
      t2 = m[12];
      if (15 >= t1)
        return B.ioore(m, 15);
      t1 = m[15];
      if (typeof t2 !== "number")
        return t2.$mul();
      if (typeof t1 !== "number")
        return B.iae(t1);
      minX = t2 * t1;
      t3 = m[13];
      if (typeof t3 !== "number")
        return t3.$mul();
      minY = t3 * t1;
      t4 = m[3];
      if (typeof t4 !== "number")
        return t4.$mul();
      t5 = t4 * width;
      t6 = m[7];
      if (typeof t6 !== "number")
        return t6.$mul();
      t7 = t6 * height;
      wp = 1 / (t5 + t7 + t1);
      t8 = m[0];
      if (typeof t8 !== "number")
        return t8.$mul();
      t9 = t8 * width;
      t10 = m[4];
      if (typeof t10 !== "number")
        return t10.$mul();
      t11 = t10 * height;
      xp = (t9 + t11 + t2) * wp;
      t12 = m[1];
      if (typeof t12 !== "number")
        return t12.$mul();
      t13 = t12 * width;
      t14 = m[5];
      if (typeof t14 !== "number")
        return t14.$mul();
      t15 = t14 * height;
      yp = (t13 + t15 + t3) * wp;
      t16 = type$.double;
      minX0 = A.min(minX, xp, t16);
      maxX = A.max(minX, xp, t16);
      minY0 = A.min(minY, yp, t16);
      maxY = A.max(minY, yp, t16);
      wp = 1 / (t4 * 0 + t7 + t1);
      xp = (t8 * 0 + t11 + t2) * wp;
      yp = (t12 * 0 + t15 + t3) * wp;
      minX = A.min(minX0, xp, t16);
      maxX = A.max(maxX, xp, t16);
      minY = A.min(minY0, yp, t16);
      maxY = A.max(maxY, yp, t16);
      wp = 1 / (t5 + t6 * 0 + t1);
      xp = (t9 + t10 * 0 + t2) * wp;
      yp = (t13 + t14 * 0 + t3) * wp;
      minX = A.min(minX, xp, t16);
      maxX = A.max(maxX, xp, t16);
      minY = A.min(minY, yp, t16);
      scale = A.min((maxX - minX) / width, (A.max(maxY, yp, t16) - minY) / height, t16);
      if (scale < 1e-9 || scale === 1)
        return 1;
      if (scale > 1) {
        t1 = D.JSNumber_methods.ceil$0(scale / 2);
        if (typeof t1 !== "number")
          return t1.$mul();
        scale = A.min(4, t1 * 2, t16);
        t1 = width * height;
        if (t1 * scale * scale > 4194304 && scale > 2)
          scale = 3355443.2 / t1;
      } else {
        t1 = D.JSNumber_methods.floor$0(2 / scale);
        if (typeof t1 !== "number")
          return B.iae(t1);
        scale = A.max(2 / t1, 0.0001, t16);
      }
      return scale;
    },
    _measureBorderRadius(x, y) {
      return x * x + y * y;
    },
    RecordingCanvas$(bounds) {
      var t1 = B._setArrayType([], type$.JSArray_PaintCommand),
        t2 = A.RenderStrategy$();
      return new A.RecordingCanvas(A._PaintBounds$(bounds == null ? C.Rect_tsf : bounds), t1, t2);
    },
    PaintTranslate$(dx, dy) {
      return new A.PaintTranslate(dx, dy);
    },
    PaintScale$(sx, sy) {
      return new A.PaintScale(sx, sy);
    },
    PaintTransform$(matrix4) {
      return new A.PaintTransform(matrix4);
    },
    PaintClipRect$(rect, clipOp) {
      return new A.PaintClipRect(rect, clipOp);
    },
    PaintClipRRect$(rrect) {
      return new A.PaintClipRRect(rrect);
    },
    PaintClipPath$(path) {
      return new A.PaintClipPath(path);
    },
    PaintDrawPaint$(paint) {
      return new A.PaintDrawPaint(paint);
    },
    PaintDrawRect$(rect, paint) {
      return new A.PaintDrawRect(rect, paint);
    },
    PaintDrawRRect$(rrect, paint) {
      return new A.PaintDrawRRect(rrect, paint);
    },
    PaintDrawDRRect$(outer, inner, paint) {
      var t1 = new A.PaintDrawDRRect(outer, inner, paint);
      t1.PaintDrawDRRect$3(outer, inner, paint);
      return t1;
    },
    PaintDrawOval$(rect, paint) {
      return new A.PaintDrawOval(rect, paint);
    },
    PaintDrawCircle$(c, radius, paint) {
      return new A.PaintDrawCircle(c, radius, paint);
    },
    PaintDrawPath$(path, paint) {
      return new A.PaintDrawPath(path, paint);
    },
    PaintDrawShadow$(path, color, elevation, transparentOccluder) {
      return new A.PaintDrawShadow(path, color, elevation, transparentOccluder);
    },
    PaintDrawImageRect$(image, src, dst, paint) {
      return new A.PaintDrawImageRect(image, src, dst, paint);
    },
    PaintDrawParagraph$(paragraph, offset) {
      return new A.PaintDrawParagraph(paragraph, offset);
    },
    _PaintBounds$(maxPaintBounds) {
      return new A._PaintBounds(maxPaintBounds, B._setArrayType([], type$.JSArray_Matrix4), B._setArrayType([], type$.JSArray_nullable_Rect), A.Matrix4$identity());
    },
    _getPaintSpread(paint) {
      var t1, spread,
        maskFilter = paint.get$maskFilter();
      if (maskFilter != null) {
        t1 = maskFilter.get$webOnlySigma();
        if (typeof t1 !== "number")
          return t1.$mul();
        spread = 0 + t1 * 2;
      } else
        spread = 0;
      if (!B.boolConversionCheck(J.$eq$(paint.get$strokeWidth(), 0))) {
        t1 = paint.get$strokeWidth();
        if (typeof t1 !== "number")
          return t1.$mul();
        spread += t1 * 0.70710678118;
      }
      return spread;
    },
    RenderStrategy$() {
      return new A.RenderStrategy();
    },
    initWebGl() {
      if ($.glRenderer == null)
        $.glRenderer = A._WebGlRenderer$();
    },
    _WebGlRenderer$() {
      return new A._WebGlRenderer();
    },
    HtmlRenderer$() {
      return new A.HtmlRenderer();
    },
    HtmlRenderer__instance(value) {
      $.HtmlRenderer____instance.set$value(value);
    },
    SurfaceScene$(webOnlyRootElement, timingRecorder) {
      return new A.SurfaceScene(webOnlyRootElement, timingRecorder);
    },
    PersistedScene$(oldLayer) {
      var t1 = B._setArrayType([], type$.JSArray_PersistedSurface),
        t2 = oldLayer != null && B.boolConversionCheck(oldLayer.get$isActive()) ? oldLayer : null;
      t2 = new A.PersistedScene(t1, A.FrameReference$(t2, type$.PersistedSurface), C.PersistedSurfaceState_0);
      t2.PersistedScene$1(oldLayer);
      return t2;
    },
    SurfaceSceneBuilder$() {
      var t1 = new A.SurfaceSceneBuilder(B._setArrayType([], type$.JSArray_PersistedContainerSurface));
      t1.SurfaceSceneBuilder$0();
      return t1;
    },
    NormalizedGradient_NormalizedGradient(colors, stops) {
      var t1, colorCount, t2, t3, addFirst, addLast, normalizedCount, t4, bias, scale, thresholds, c, t5, t6, targetIndex, thresholdIndex, t7, targetIndex0, t8, thresholdIndex0, lastColorIndex, i, t, colorIndex;
      if (stops == null)
        stops = C.List_0_1;
      t1 = J.getInterceptor$asx(colors);
      colorCount = t1.get$length(colors);
      t2 = B.boolConversionCheck(t1.any$1(colors, new A.NormalizedGradient_NormalizedGradient_closure()));
      t3 = J.getInterceptor$asx(stops);
      addFirst = !B.boolConversionCheck(J.$eq$(t3.$index(stops, 0), 0));
      addLast = !B.boolConversionCheck(J.$eq$(t3.get$last(stops), 1));
      normalizedCount = addFirst ? colorCount + 1 : colorCount;
      if (addLast)
        ++normalizedCount;
      t4 = normalizedCount * 4;
      bias = A.NativeFloat32List_NativeFloat32List(t4);
      scale = A.NativeFloat32List_NativeFloat32List(t4);
      t4 = normalizedCount - 1;
      thresholds = A.NativeFloat32List_NativeFloat32List(4 * (D.JSInt_methods._tdivFast$1(t4, 4) + 1));
      if (addFirst) {
        c = t1.$index(colors, 0);
        t5 = c.get$red();
        if (typeof t5 !== "number")
          return t5.$div();
        t6 = bias.length;
        if (0 >= t6)
          return B.ioore(bias, 0);
        bias[0] = t5 / 255;
        t5 = c.get$green();
        if (typeof t5 !== "number")
          return t5.$div();
        if (1 >= t6)
          return B.ioore(bias, 1);
        bias[1] = t5 / 255;
        t5 = c.get$blue();
        if (typeof t5 !== "number")
          return t5.$div();
        if (2 >= t6)
          return B.ioore(bias, 2);
        bias[2] = t5 / 255;
        t5 = c.get$alpha();
        if (typeof t5 !== "number")
          return t5.$div();
        if (3 >= t6)
          return B.ioore(bias, 3);
        bias[3] = t5 / 255;
        if (0 >= thresholds.length)
          return B.ioore(thresholds, 0);
        thresholds[0] = 0;
        targetIndex = 4;
        thresholdIndex = 1;
      } else {
        targetIndex = 0;
        thresholdIndex = 0;
      }
      for (t5 = t1.get$iterator(colors), t6 = bias.length; B.boolConversionCheck(t5.moveNext$0());) {
        t7 = t5.get$current();
        targetIndex0 = targetIndex + 1;
        t8 = t7.get$red();
        if (typeof t8 !== "number")
          return t8.$div();
        if (!(targetIndex < t6))
          return B.ioore(bias, targetIndex);
        bias[targetIndex] = t8 / 255;
        targetIndex = targetIndex0 + 1;
        t8 = t7.get$green();
        if (typeof t8 !== "number")
          return t8.$div();
        if (!(targetIndex0 < t6))
          return B.ioore(bias, targetIndex0);
        bias[targetIndex0] = t8 / 255;
        targetIndex0 = targetIndex + 1;
        t8 = t7.get$blue();
        if (typeof t8 !== "number")
          return t8.$div();
        if (!(targetIndex < t6))
          return B.ioore(bias, targetIndex);
        bias[targetIndex] = t8 / 255;
        targetIndex = targetIndex0 + 1;
        t7 = t7.get$alpha();
        if (typeof t7 !== "number")
          return t7.$div();
        if (!(targetIndex0 < t6))
          return B.ioore(bias, targetIndex0);
        bias[targetIndex0] = t7 / 255;
      }
      for (t3 = t3.get$iterator(stops), t5 = thresholds.length; B.boolConversionCheck(t3.moveNext$0()); thresholdIndex = thresholdIndex0) {
        t7 = t3.get$current();
        thresholdIndex0 = thresholdIndex + 1;
        if (!(thresholdIndex < t5))
          return B.ioore(thresholds, thresholdIndex);
        thresholds[thresholdIndex] = t7;
      }
      if (addLast) {
        c = t1.get$last(colors);
        targetIndex0 = targetIndex + 1;
        t1 = c.get$red();
        if (typeof t1 !== "number")
          return t1.$div();
        if (!(targetIndex < t6))
          return B.ioore(bias, targetIndex);
        bias[targetIndex] = t1 / 255;
        targetIndex = targetIndex0 + 1;
        t1 = c.get$green();
        if (typeof t1 !== "number")
          return t1.$div();
        if (!(targetIndex0 < t6))
          return B.ioore(bias, targetIndex0);
        bias[targetIndex0] = t1 / 255;
        targetIndex0 = targetIndex + 1;
        t1 = c.get$blue();
        if (typeof t1 !== "number")
          return t1.$div();
        if (!(targetIndex < t6))
          return B.ioore(bias, targetIndex);
        bias[targetIndex] = t1 / 255;
        t1 = c.get$alpha();
        if (typeof t1 !== "number")
          return t1.$div();
        if (!(targetIndex0 < t6))
          return B.ioore(bias, targetIndex0);
        bias[targetIndex0] = t1 / 255;
        if (!(thresholdIndex < t5))
          return B.ioore(thresholds, thresholdIndex);
        thresholds[thresholdIndex] = 1;
      }
      lastColorIndex = 4 * t4;
      for (t1 = scale.length, i = 0; i < lastColorIndex; ++i) {
        thresholdIndex = i >>> 2;
        t3 = i + 4;
        if (!(t3 < t6))
          return B.ioore(bias, t3);
        t3 = bias[t3];
        if (!(i < t6))
          return B.ioore(bias, i);
        t4 = bias[i];
        if (typeof t3 !== "number")
          return t3.$sub();
        if (typeof t4 !== "number")
          return B.iae(t4);
        t7 = thresholdIndex + 1;
        if (!(t7 < t5))
          return B.ioore(thresholds, t7);
        t7 = thresholds[t7];
        if (!(thresholdIndex < t5))
          return B.ioore(thresholds, thresholdIndex);
        t8 = thresholds[thresholdIndex];
        if (typeof t7 !== "number")
          return t7.$sub();
        if (typeof t8 !== "number")
          return B.iae(t8);
        if (!(i < t1))
          return B.ioore(scale, i);
        scale[i] = (t3 - t4) / (t7 - t8);
      }
      if (!(lastColorIndex >= 0 && lastColorIndex < t1))
        return B.ioore(scale, lastColorIndex);
      scale[lastColorIndex] = 0;
      t3 = lastColorIndex + 1;
      if (!(t3 < t1))
        return B.ioore(scale, t3);
      scale[t3] = 0;
      t3 = lastColorIndex + 2;
      if (!(t3 < t1))
        return B.ioore(scale, t3);
      scale[t3] = 0;
      t3 = lastColorIndex + 3;
      if (!(t3 < t1))
        return B.ioore(scale, t3);
      scale[t3] = 0;
      for (i = 0; i < normalizedCount; ++i) {
        if (!(i < t5))
          return B.ioore(thresholds, i);
        t = thresholds[i];
        colorIndex = i * 4;
        if (!(colorIndex < t6))
          return B.ioore(bias, colorIndex);
        t3 = bias[colorIndex];
        if (!(colorIndex < t1))
          return B.ioore(scale, colorIndex);
        t4 = scale[colorIndex];
        if (typeof t4 !== "number")
          return B.iae(t4);
        if (typeof t3 !== "number")
          return t3.$sub();
        bias[colorIndex] = t3 - t * t4;
        t4 = colorIndex + 1;
        if (!(t4 < t6))
          return B.ioore(bias, t4);
        t3 = bias[t4];
        if (!(t4 < t1))
          return B.ioore(scale, t4);
        t7 = scale[t4];
        if (typeof t7 !== "number")
          return B.iae(t7);
        if (typeof t3 !== "number")
          return t3.$sub();
        bias[t4] = t3 - t * t7;
        t7 = colorIndex + 2;
        if (!(t7 < t6))
          return B.ioore(bias, t7);
        t3 = bias[t7];
        if (!(t7 < t1))
          return B.ioore(scale, t7);
        t4 = scale[t7];
        if (typeof t4 !== "number")
          return B.iae(t4);
        if (typeof t3 !== "number")
          return t3.$sub();
        bias[t7] = t3 - t * t4;
        t4 = colorIndex + 3;
        if (!(t4 < t6))
          return B.ioore(bias, t4);
        t3 = bias[t4];
        if (!(t4 < t1))
          return B.ioore(scale, t4);
        t7 = scale[t4];
        if (typeof t7 !== "number")
          return B.iae(t7);
        if (typeof t3 !== "number")
          return t3.$sub();
        bias[t4] = t3 - t * t7;
      }
      return A.NormalizedGradient$_(normalizedCount, thresholds, scale, bias, !t2);
    },
    NormalizedGradient$_(thresholdCount, _thresholds, _scale, _bias, isOpaque) {
      return new A.NormalizedGradient(_thresholds, _bias, _scale, thresholdCount, isOpaque);
    },
    writeUnrolledBinarySearch(method, start, end, biasName, probe, scaleName, sourcePrefix) {
      var t1, mid;
      if (start === end) {
        t1 = B.S(start);
        method.addStatement$1(biasName + " = " + (biasName + "_" + t1) + ";");
        method.addStatement$1(scaleName + " = " + (scaleName + "_" + t1) + ";");
      } else {
        mid = D.JSInt_methods._tdivFast$1(start + end, 2);
        t1 = mid + 1;
        method.addStatement$1("if (" + probe + " < " + (sourcePrefix + "_" + D.JSInt_methods._tdivFast$1(t1, 4) + ("." + B.S(A.vectorComponentIndexToName(D.JSInt_methods.$mod(t1, 4))))) + ") {");
        method.indent$0();
        A.writeUnrolledBinarySearch(method, start, mid, biasName, probe, scaleName, sourcePrefix);
        method.unindent$0();
        method.addStatement$1("} else {");
        method.indent$0();
        A.writeUnrolledBinarySearch(method, t1, end, biasName, probe, scaleName, sourcePrefix);
        method.unindent$0();
        method.addStatement$1("}");
      }
    },
    vectorComponentIndexToName(index) {
      if (index >>> 0 !== index || index >= 4)
        return B.ioore("xyzw", index);
      return "xyzw"[index];
    },
    SharedCanvas$() {
      return new A.SharedCanvas();
    },
    GradientLinear$(from, to, colors, colorStops, tileMode, matrix) {
      return new A.GradientLinear(from, to, colors, colorStops, tileMode, matrix == null ? null : A.FastMatrix32$(matrix));
    },
    _addColorStopsToCanvasGradient(gradient, colors, colorStops, isDecal) {
      var scale, offset, t1, t2, i, t3,
        _s9_ = "#00000000";
      if (isDecal) {
        A.DomCanvasGradientExtension_addColorStop(gradient, 0, _s9_);
        scale = 0.999;
        offset = 0.0005000000000000004;
      } else {
        scale = 1;
        offset = 0;
      }
      if (colorStops == null) {
        t1 = J.getInterceptor$asx(colors);
        A.DomCanvasGradientExtension_addColorStop(gradient, offset, A.CssColor_toCssString(t1.$index(colors, 0)));
        A.DomCanvasGradientExtension_addColorStop(gradient, 1 - offset, A.CssColor_toCssString(t1.$index(colors, 1)));
      } else {
        t1 = J.getInterceptor$asx(colors);
        t2 = J.getInterceptor$asx(colorStops);
        i = 0;
        while (true) {
          t3 = t1.get$length(colors);
          if (typeof t3 !== "number")
            return B.iae(t3);
          if (!(i < t3))
            break;
          A.DomCanvasGradientExtension_addColorStop(gradient, J.clamp$2$n(t2.$index(colorStops, i), 0, 1) * scale + offset, A.CssColor_toCssString(t1.$index(colors, i)));
          ++i;
        }
      }
      if (isDecal)
        A.DomCanvasGradientExtension_addColorStop(gradient, 1, _s9_);
    },
    _writeSharedGradientShader(builder, method, gradient, tileMode) {
      var t1, t2, t3, i, probeName;
      method.addStatement$1("vec4 bias;");
      method.addStatement$1("vec4 scale;");
      t1 = gradient.thresholdCount;
      if (typeof t1 !== "number")
        return t1.$sub();
      t2 = t1 - 1;
      t3 = D.JSNumber_methods._tdivFast$1(t2, 4) + 1;
      i = 0;
      for (; i < t3; ++i)
        builder.addUniform$2$name(11, "threshold_" + i);
      for (i = 0; i < t1; ++i) {
        t3 = "" + i;
        builder.addUniform$2$name(11, "bias_" + t3);
        builder.addUniform$2$name(11, "scale_" + t3);
      }
      probeName = "tiled_st";
      switch (tileMode.index) {
        case 0:
          method.addStatement$1("float tiled_st = clamp(st, 0.0, 1.0);");
          break;
        case 3:
          probeName = "st";
          break;
        case 1:
          method.addStatement$1("float tiled_st = fract(st);");
          break;
        case 2:
          method.addStatement$1("float t_1 = (st - 1.0);");
          method.addStatement$1("float tiled_st = abs((t_1 - 2.0 * floor(t_1 * 0.5)) - 1.0);");
          break;
        default:
          probeName = "st";
      }
      A.writeUnrolledBinarySearch(method, 0, t2, "bias", probeName, "scale", "threshold");
      if (tileMode === C.TileMode_3) {
        method.addStatement$1("if (st < 0.0 || st > 1.0) {");
        method.addStatement$1("  " + B.S(builder.get$fragmentColor().name) + " = vec4(0, 0, 0, 0);");
        method.addStatement$1("  return;");
        method.addStatement$1("}");
      }
      return probeName;
    },
    createHtmlColorFilter(colorFilter) {
      return null;
    },
    ShaderBuilder$(version) {
      return new A.ShaderBuilder(B._setArrayType([], type$.JSArray_ShaderDeclaration), B._setArrayType([], type$.JSArray_ShaderMethod), version === 2, false, B.StringBuffer$(""));
    },
    ShaderBuilder$fragment(version) {
      return new A.ShaderBuilder(B._setArrayType([], type$.JSArray_ShaderDeclaration), B._setArrayType([], type$.JSArray_ShaderMethod), version === 2, true, B.StringBuffer$(""));
    },
    ShaderBuilder_typeToString(dataType) {
      switch (dataType) {
        case 0:
          return "bool";
        case 1:
          return "int";
        case 2:
          return "float";
        case 3:
          return "bvec2";
        case 4:
          return "bvec3";
        case 5:
          return "bvec4";
        case 6:
          return "ivec2";
        case 7:
          return "ivec3";
        case 8:
          return "ivec4";
        case 9:
          return "vec2";
        case 10:
          return "vec3";
        case 11:
          return "vec4";
        case 12:
          return "mat2";
        case 13:
          return "mat3";
        case 14:
          return "mat4";
        case 15:
          return "sampler1D";
        case 16:
          return "sampler2D";
        case 17:
          return "sampler3D";
        case 18:
          return "void";
      }
      throw B.wrapException(B.ArgumentError$(null, null));
    },
    ShaderMethod$($name) {
      return new A.ShaderMethod($name, B._setArrayType([], type$.JSArray_String));
    },
    ShaderDeclaration$($name, dataType, storage) {
      return new A.ShaderDeclaration($name, dataType, storage);
    },
    VertexShaders_writeBaseVertexShader() {
      var builder, method,
        t1 = $.VertexShaders__baseVertexShader;
      if (t1 == null) {
        builder = A.ShaderBuilder$(A.webGLVersion());
        builder.addIn$2$name(11, "position");
        builder.addIn$2$name(11, "color");
        builder.addUniform$2$name(14, "u_ctransform");
        builder.addUniform$2$name(11, "u_scale");
        builder.addUniform$2$name(11, "u_shift");
        builder.addOut$2$name(11, "v_color");
        method = builder.addMethod$1("main");
        method.addStatement$1("gl_Position = ((u_ctransform * position) * u_scale) + u_shift;");
        method.addStatement$1("v_color = color.zyxw;");
        t1 = $.VertexShaders__baseVertexShader = builder.build$0();
      }
      t1.toString;
      return t1;
    },
    commitScene(scene) {
      var request, t1, i;
      if (B.boolConversionCheck(J.get$isNotEmpty$asx($.paintQueue)))
        try {
          t1 = J.get$length$asx($.paintQueue);
          if (typeof t1 !== "number")
            return t1.$gt();
          if (t1 > 1)
            J.sort$1$ax($.paintQueue, new A.commitScene_closure());
          for (t1 = J.get$iterator$ax($.paintQueue); B.boolConversionCheck(t1.moveNext$0());) {
            request = t1.get$current();
            request.paintCallback$0();
          }
        } finally {
          $.paintQueue = B._setArrayType([], type$.JSArray_PaintRequest);
        }
      if (B.boolConversionCheck(J.get$isNotEmpty$asx($.retainedSurfaces))) {
        i = 0;
        while (true) {
          t1 = J.get$length$asx($.retainedSurfaces);
          if (typeof t1 !== "number")
            return B.iae(t1);
          if (!(i < t1))
            break;
          J.$index$asx($.retainedSurfaces, i).set$state(C.PersistedSurfaceState_1);
          ++i;
        }
        $.retainedSurfaces = B._setArrayType([], type$.JSArray_PersistedSurface);
      }
      i = 0;
      while (true) {
        t1 = J.get$length$asx($.frameReferences);
        if (typeof t1 !== "number")
          return B.iae(t1);
        if (!(i < t1))
          break;
        J.$index$asx($.frameReferences, i).set$value(null);
        ++i;
      }
      $.frameReferences = B._setArrayType([], type$.JSArray_FrameReference_dynamic);
    },
    PersistedContainerSurface__discardActiveChildren(surface) {
      var i, child,
        t1 = surface.__engine$_children,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      for (i = 0; i < $length; ++i) {
        child = t2.$index(t1, i);
        if (B.boolConversionCheck(child.get$isActive()))
          child.discard$0();
      }
    },
    _PersistedSurfaceMatch$(matchQuality, newChild, oldChildIndex) {
      return new A._PersistedSurfaceMatch(newChild, oldChildIndex, matchQuality);
    },
    PrerollSurfaceContext$() {
      return new A.PrerollSurfaceContext();
    },
    PersistedTransform$(oldLayer, _matrixStorage) {
      var t1 = B._setArrayType([], type$.JSArray_PersistedSurface),
        t2 = oldLayer != null && B.boolConversionCheck(oldLayer.get$isActive()) ? oldLayer : null;
      return new A.PersistedTransform(_matrixStorage, t1, A.FrameReference$(t2, type$.PersistedSurface), C.PersistedSurfaceState_0);
    },
    buildMode() {
      return "debug";
    },
    registerHotRestartListener(listener) {
      J.add$1$ax($._hotRestartListeners, listener);
    },
    engineAssetManager() {
      var t1 = $._assetManager;
      t1.toString;
      return t1;
    },
    debugDisableFontFallbacks() {
      return false;
    },
    JsFlutterViewOptionsExtension_get_hostElement(_this) {
      var t1 = B.getProperty(_this, "hostElement", type$.nullable_JavaScriptObject);
      t1.toString;
      return t1;
    },
    JsFlutterViewOptionsExtension_get_viewConstraints(_this) {
      return B.getProperty(_this, "viewConstraints", type$.nullable_JavaScriptObject);
    },
    KeyboardBinding_instance() {
      return $.KeyboardBinding__instance;
    },
    ContextMenu$(element) {
      return new A.ContextMenu(element);
    },
    MouseCursor$(element) {
      return new A.MouseCursor();
    },
    MouseCursor__mapKindToCssValue(kind) {
      var t1 = C.Map_WZ6cQ.$index(0, kind);
      return t1 == null ? "default" : t1;
    },
    NotoFont$($name, url, enabled) {
      var t1 = $.NotoFont__index;
      if (typeof t1 !== "number")
        return t1.$add();
      $.NotoFont__index = t1 + 1;
      return new A.NotoFont($name, url, enabled, t1, B._setArrayType([], type$.JSArray_FallbackFontComponent));
    },
    FallbackFontComponent$(_allFonts) {
      return new A.FallbackFontComponent(_allFonts);
    },
    HighContrastSupport$() {
      return new A.HighContrastSupport(B._setArrayType([], type$.JSArray_of_void_Function_bool), A.DomWindowExtension_matchMedia(self.window, "(forced-colors: active)"));
    },
    EnginePlatformDispatcher$() {
      var t4,
        t1 = A.EngineSemantics_instance().semanticsHelper.prepareAccessibilityPlaceholder$0(),
        t2 = A.EnginePlatformDispatcher_parseBrowserLanguages(),
        t3 = A.findBrowserTextScaleFactor();
      t3 = A.PlatformConfiguration$(A.EnginePlatformDispatcher_computeAccessibilityFeatures(), false, "/", t2, C.Brightness_1, false, null, t3);
      t2 = B._setArrayType([A.EngineFlutterDisplay_instance()], type$.JSArray_EngineFlutterDisplay);
      t4 = A.DomWindowExtension_matchMedia(self.window, "(prefers-color-scheme: dark)");
      B.createSentinel(type$.Zone);
      t4 = new A.EnginePlatformDispatcher(t1, t3, t2, t4, D.C__RootZone);
      t4.EnginePlatformDispatcher$0();
      return t4;
    },
    EnginePlatformDispatcher_instance() {
      return $.$get$EnginePlatformDispatcher__instance();
    },
    EnginePlatformDispatcher_computeAccessibilityFeatures() {
      var builder = A.EngineAccessibilityFeaturesBuilder$(0);
      if (B.boolConversionCheck($.$get$HighContrastSupport_instance().get$isHighContrastEnabled()))
        builder.set$highContrast(true);
      return builder.build$0();
    },
    EnginePlatformDispatcher__zonedPlatformMessageResponseCallback(callback) {
      if (callback == null)
        return null;
      return new A.EnginePlatformDispatcher__zonedPlatformMessageResponseCallback_closure(B.Zone_current(), callback);
    },
    EnginePlatformDispatcher_parseBrowserLanguages() {
      var locales, t1, t2, t3, parts,
        languages = A.DomNavigatorExtension_get_languages(B.getProperty(self.window, "navigator", type$.JavaScriptObject));
      if (languages == null || B.boolConversionCheck(J.get$isEmpty$asx(languages)))
        return C.List_Locale_en_US;
      locales = B._setArrayType([], type$.JSArray_Locale);
      for (t1 = J.get$iterator$ax(languages), t2 = type$.JSArray_String; B.boolConversionCheck(t1.moveNext$0());) {
        t3 = t1.get$current();
        parts = B._setArrayType(t3.split("-"), t2);
        if (parts.length > 1)
          D.JSArray_methods.add$1(locales, A.Locale$(D.JSArray_methods.get$first(parts), D.JSArray_methods.get$last(parts)));
        else
          D.JSArray_methods.add$1(locales, A.Locale$(t3, null));
      }
      return locales;
    },
    _handleWebTestEnd2EndMessage(codec, data) {
      var decoded = codec.decodeMethodCall$1(data),
        ratio = A.double_parse(B._asString(decoded.$arguments));
      switch (decoded.method) {
        case "setDevicePixelRatio":
          A.EngineFlutterDisplay_instance().debugOverrideDevicePixelRatio$1(ratio);
          A.EnginePlatformDispatcher_instance().get$onMetricsChanged().call$0();
          return true;
      }
      return false;
    },
    invoke(callback, zone) {
      var t1;
      if (callback == null)
        return;
      t1 = B.Zone_current();
      if (zone == null ? t1 == null : zone === t1)
        callback.call$0();
      else
        zone.runGuarded$1(callback);
    },
    invoke1(callback, zone, arg, $A) {
      var t1;
      if (callback == null)
        return;
      t1 = B.Zone_current();
      if (zone == null ? t1 == null : zone === t1)
        callback.call$1(arg);
      else
        zone.runUnaryGuarded$1$2(callback, arg, $A);
    },
    invoke2(callback, zone, arg1, arg2, A1, A2) {
      var t1;
      if (callback == null)
        return;
      t1 = B.Zone_current();
      if (zone == null ? t1 == null : zone === t1)
        callback.call$2(arg1, arg2);
      else
        zone.runGuarded$1(new A.invoke2_closure(callback, arg1, arg2));
    },
    findBrowserTextScaleFactor() {
      var fontSize,
        t1 = B.getProperty(self.document, "documentElement", type$.nullable_JavaScriptObject);
      t1.toString;
      fontSize = A.parseFontSize(t1);
      return (fontSize == null ? 16 : fontSize) / 16;
    },
    PlatformConfiguration$(accessibilityFeatures, alwaysUse24HourFormat, defaultRouteName, locales, platformBrightness, semanticsEnabled, systemFontFamily, textScaleFactor) {
      return new A.PlatformConfiguration(accessibilityFeatures, alwaysUse24HourFormat, semanticsEnabled, platformBrightness, textScaleFactor, locales, defaultRouteName, systemFontFamily);
    },
    AppLifecycleState_create(viewManager) {
      return A._BrowserAppLifecycleState$(viewManager);
    },
    _BrowserAppLifecycleState$(_viewManager) {
      return new A._BrowserAppLifecycleState(_viewManager, B._setArrayType([], type$.JSArray_StreamSubscription_void), C.AppLifecycleState_1, B._setArrayType([], type$.JSArray_of_void_Function_AppLifecycleState));
    },
    ViewFocusBinding$(_viewManager, _onViewFocusChange) {
      return new A.ViewFocusBinding(_viewManager, _onViewFocusChange, C.ViewFocusDirection_1);
    },
    PlatformViewManager$() {
      var t1 = type$.String,
        t2 = type$.int;
      t1 = new A.PlatformViewManager(B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Function), B.LinkedHashMap_LinkedHashMap$_empty(t2, type$.JavaScriptObject), B.LinkedHashSet_LinkedHashSet$_empty(t1), B.LinkedHashMap_LinkedHashMap$_empty(t2, t1));
      t1.PlatformViewManager$0();
      return t1;
    },
    _defaultFactory(viewId, params) {
      var t1, t2;
      B._asInt(viewId);
      params.toString;
      type$.Map_of_nullable_Object_and_nullable_Object._as(params);
      t1 = A.DomDocumentExtension_createElement(self.document, A.JsonExtensions_readString(params, "tagName"));
      t2 = type$.JavaScriptObject;
      A.DomCSSStyleDeclarationExtension_set_width(B.getProperty(t1, "style", t2), "100%");
      A.DomCSSStyleDeclarationExtension_set_height(B.getProperty(t1, "style", t2), "100%");
      return t1;
    },
    PlatformViewMessageHandler$(contentManager) {
      return new A.PlatformViewMessageHandler(contentManager);
    },
    getPlatformViewSlotName(viewId) {
      return "flt-pv-slot-" + B.S(viewId);
    },
    getPlatformViewDomId(viewId) {
      return "flt-pv-" + B.S(viewId);
    },
    _nthButton(n) {
      return D.JSInt_methods.$shl(1, n);
    },
    convertButtonToButtons(button) {
      switch (button) {
        case 0:
          return 1;
        case 1:
          return 4;
        case 2:
          return 2;
        default:
          return A._nthButton(button);
      }
    },
    SafariPointerEventWorkaround$_() {
      return new A.SafariPointerEventWorkaround();
    },
    PointerBinding$(view) {
      var t1 = A.KeyboardBinding_instance();
      t1 = t1 == null ? null : t1.get$converter();
      t1 = new A.PointerBinding(view, A.PointerDataConverter$(), t1);
      t1.PointerBinding$3$detector$safariWorkaround(view, C.C_PointerSupportDetector, null);
      return t1;
    },
    ClickDebouncer$() {
      return new A.ClickDebouncer();
    },
    Listener$_($event, handler, target) {
      return new A.Listener($event, target, handler);
    },
    Listener_Listener$register($event, handler, passive, target) {
      var jsHandler = A.createDomEventListener(handler);
      if (passive == null)
        A.DomEventTargetExtension_addEventListener(target, $event, jsHandler, null);
      else
        A.DomEventTargetExtension_addEventListenerWithOptions(target, $event, jsHandler, B.LinkedHashMap_LinkedHashMap$_literal(["passive", passive], type$.String, type$.Object));
      return A.Listener$_($event, jsHandler, target);
    },
    _BaseAdapter__eventTimeStampToDuration(milliseconds) {
      var ms = D.JSNumber_methods.toInt$0(milliseconds);
      return A.Duration$(D.JSNumber_methods.toInt$0((milliseconds - ms) * 1000), ms);
    },
    _SanitizedDetails$(buttons, change) {
      return new A._SanitizedDetails(change, buttons);
    },
    _ButtonSanitizer$() {
      return new A._ButtonSanitizer();
    },
    _PointerAdapter$(owner) {
      var t1 = new A._PointerAdapter(B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$._ButtonSanitizer), owner, B._setArrayType([], type$.JSArray_Listener));
      t1._BaseAdapter$1(owner);
      return t1;
    },
    computeEventOffsetToTarget($event, view) {
      var t1, t2, t3, inputGeometry, origin, t4,
        actualTarget = view.get$dom().rootElement;
      if (B.boolConversionCheck(A.EngineSemantics_instance().get$semanticsEnabled()) && B.boolConversionCheck(J.$eq$(A.DomMouseEventExtension_get_offsetX($event), 0)) && B.boolConversionCheck(J.$eq$(A.DomMouseEventExtension_get_offsetY($event), 0)))
        return A._computeOffsetForTalkbackEvent($event, actualTarget);
      t1 = view.get$dom().textEditingHost;
      t2 = type$.nullable_JavaScriptObject;
      t3 = B.getProperty($event, "target", t2);
      t3.toString;
      if (A.DomNodeExtension_contains(t1, t3)) {
        inputGeometry = $.$get$textEditing().get$strategy().geometry;
        if (inputGeometry != null)
          return A._computeOffsetForInputs($event, inputGeometry);
      }
      if (!B.boolConversionCheck(J.$eq$(B.getProperty($event, "target", t2), actualTarget))) {
        origin = B._callMethodUnchecked0(actualTarget, "getBoundingClientRect", type$.JavaScriptObject);
        t1 = A.DomMouseEventExtension_get_clientX($event);
        t2 = A.DomRectReadOnlyExtension_get_x(origin);
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t3 = A.DomMouseEventExtension_get_clientY($event);
        t4 = A.DomRectReadOnlyExtension_get_y(origin);
        if (typeof t3 !== "number")
          return t3.$sub();
        if (typeof t4 !== "number")
          return B.iae(t4);
        return A.Offset$(t1 - t2, t3 - t4);
      }
      return A.Offset$(A.DomMouseEventExtension_get_offsetX($event), A.DomMouseEventExtension_get_offsetY($event));
    },
    _computeOffsetForInputs($event, inputGeometry) {
      var transformedPoint;
      B.getProperty($event, "target", type$.nullable_JavaScriptObject).toString;
      $.$get$textEditing().get$strategy().get$activeDomElement();
      transformedPoint = A.Matrix4$fromFloat32List(inputGeometry.globalTransform).perspectiveTransform$3$x$y$z(A.DomMouseEventExtension_get_offsetX($event), A.DomMouseEventExtension_get_offsetY($event), 0);
      return A.Offset$(transformedPoint._0, transformedPoint._1);
    },
    _computeOffsetForTalkbackEvent($event, actualTarget) {
      var t1, $parent, t2, t3,
        _s12_ = "offsetParent",
        offsetX = A.DomMouseEventExtension_get_clientX($event),
        offsetY = A.DomMouseEventExtension_get_clientY($event);
      for (t1 = type$.nullable_JavaScriptObject, $parent = actualTarget; B.getProperty($parent, _s12_, t1) != null; $parent = t2) {
        t2 = A.DomHTMLElementExtension_get_offsetLeft($parent);
        t3 = A.DomElementExtension_get_scrollLeft($parent);
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t3 !== "number")
          return B.iae(t3);
        offsetX -= t2 - t3;
        t3 = A.DomHTMLElementExtension_get_offsetTop($parent);
        t2 = A.DomElementExtension_get_scrollTop($parent);
        if (typeof t3 !== "number")
          return t3.$sub();
        if (typeof t2 !== "number")
          return B.iae(t2);
        offsetY -= t3 - t2;
        t2 = B.getProperty($parent, _s12_, t1);
        t2.toString;
      }
      return A.Offset$(offsetX, offsetY);
    },
    _PointerDeviceState$(x, y) {
      return new A._PointerDeviceState(x, y);
    },
    _GlobalPointerState$() {
      return new A._GlobalPointerState(B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$._PointerDeviceState));
    },
    PointerDataConverter$() {
      return new A.PointerDataConverter();
    },
    timeAction($name, action, $R) {
      var t1 = action.call$0();
      return t1;
    },
    Instrumentation$_() {
      var t1 = new A.Instrumentation(B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.int));
      t1.Instrumentation$_$0();
      return t1;
    },
    Instrumentation_enabled() {
      return false;
    },
    Instrumentation_instance() {
      A.Instrumentation__checkInstrumentationEnabled();
      return $.$get$Instrumentation__instance();
    },
    Instrumentation__checkInstrumentationEnabled() {
      if (!B.boolConversionCheck(A.Instrumentation_enabled()))
        throw B.wrapException(B.StateError$("Cannot use Instrumentation unless it is enabled. You can enable it by setting the `FLUTTER_WEB_ENABLE_INSTRUMENTATION` environment variable to true, or by passing --dart-define=FLUTTER_WEB_ENABLE_INSTRUMENTATION=true to the flutter tool."));
    },
    renderer() {
      return $.$get$_renderer();
    },
    Renderer_Renderer$_internal() {
      return (A.configuration().get$requestedRendererType() != null ? J.$eq$(A.configuration().get$requestedRendererType(), "canvaskit") : A.isDesktop()) ? A.CanvasKitRenderer$() : A.HtmlRenderer$();
    },
    RRectToCanvasRenderer$(context) {
      return new A.RRectToCanvasRenderer(context);
    },
    hasJsProperty(object, $name) {
      return A.hasProperty(object, $name);
    },
    getJsProperty(object, $name, $T) {
      return B.getProperty(object, $name, $T);
    },
    promiseToFuture0(jsPromise, $T) {
      return A.promiseToFuture(jsPromise, $T);
    },
    parseFloat(source) {
      var result = B._callMethodUnchecked1(self.window, "parseFloat", source, type$.nullable_num);
      if (result == null || B.boolConversionCheck(D.JSNumber_methods.get$isNaN(result)))
        return null;
      return result;
    },
    parseFontSize(element) {
      var t1, computedStyleMap, fontSizeObject,
        _s16_ = "computedStyleMap",
        _s9_ = "font-size",
        fontSize = null;
      if (B.boolConversionCheck(A.hasJsProperty(element, _s16_))) {
        t1 = type$.nullable_Object;
        computedStyleMap = B._callMethodUnchecked0(element, _s16_, t1);
        if (computedStyleMap != null) {
          fontSizeObject = B._callMethodUnchecked1(computedStyleMap, "get", _s9_, t1);
          fontSize = fontSizeObject != null ? B.getProperty(fontSizeObject, "value", type$.num) : null;
        }
      }
      return fontSize == null ? A.parseFloat(A.DomCSSStyleDeclarationExtension_getPropertyValue(A.DomWindowExtension_getComputedStyle(self.window, element), _s9_)) : fontSize;
    },
    vibrate(durationMs) {
      var $navigator = B.getProperty(self.window, "navigator", type$.JavaScriptObject);
      if (B.boolConversionCheck(A.hasJsProperty($navigator, "vibrate")))
        B._callMethodUnchecked1($navigator, "vibrate", durationMs, type$.void);
    },
    tryCreateCanvasElement(width, height) {
      var exception,
        canvas = B._callMethodUnchecked1(self.document, "createElement", "CANVAS", type$.nullable_JavaScriptObject);
      if (canvas == null)
        return null;
      try {
        A.DomCanvasElementExtension_set_width(canvas, D.JSInt_methods.toDouble$0(width));
        A.DomCanvasElementExtension_set_height(canvas, D.JSInt_methods.toDouble$0(height));
      } catch (exception) {
        return null;
      }
      return canvas;
    },
    vertexAttribPointerGlContext(glContext, index, size, type, normalized, stride, offset) {
      A.callMethod(glContext, "vertexAttribPointer", [index, size, type, normalized, stride, offset], type$.void);
    },
    GlProgram$(program) {
      return new A.GlProgram(program);
    },
    GlContext_GlContext(offScreenCanvas) {
      var t1;
      if (B.boolConversionCheck(A.OffScreenCanvas_supported())) {
        t1 = offScreenCanvas.offScreenCanvas;
        t1.toString;
        t1 = A.GlContext$_fromOffscreenCanvas(t1);
      } else {
        t1 = offScreenCanvas.canvasElement;
        t1.toString;
        t1 = A.GlContext$_fromCanvasElement(t1, J.$eq$(A.webGLVersion(), 1));
      }
      return t1;
    },
    GlContext$_fromOffscreenCanvas(canvas) {
      var t1 = A.DomOffscreenCanvasExtension_getContext(canvas, "webgl2", B.LinkedHashMap_LinkedHashMap$_literal(["premultipliedAlpha", false], type$.String, type$.dynamic));
      t1.toString;
      t1 = new A.GlContext(t1);
      t1.GlContext$_fromOffscreenCanvas$1(canvas);
      return t1;
    },
    GlContext$_fromCanvasElement(canvas, useWebGl1) {
      var t1 = useWebGl1 ? "webgl" : "webgl2";
      t1 = A.DomCanvasElementExtension_getContext(canvas, t1, B.LinkedHashMap_LinkedHashMap$_literal(["premultipliedAlpha", false], type$.String, type$.dynamic));
      t1.toString;
      t1 = new A.GlContext(t1);
      t1.GlContext$_fromCanvasElement$2(canvas, useWebGl1);
      return t1;
    },
    GlContext__programCache() {
      return $.GlContext____programCache.readField$1$0(type$.Map_of_String_and_nullable_GlProgram);
    },
    GlContext__programCache0(value) {
      $.GlContext____programCache.set$value(value);
    },
    OffScreenCanvas$(width, height) {
      var t1 = new A.OffScreenCanvas(width, height);
      t1.OffScreenCanvas$2(width, height);
      return t1;
    },
    OffScreenCanvas_supported() {
      var t1 = $.OffScreenCanvas__supported;
      if (t1 == null)
        t1 = $.OffScreenCanvas__supported = !B.boolConversionCheck($.$get$browser().get$isSafari()) && B.boolConversionCheck(A.hasProperty(self.window, "OffscreenCanvas"));
      return t1;
    },
    AccessibilityAnnouncements_AccessibilityAnnouncements(hostElement) {
      var politeElement = A.AccessibilityAnnouncements__createElement(C.Assertiveness_0),
        assertiveElement = A.AccessibilityAnnouncements__createElement(C.Assertiveness_1),
        t1 = type$.void;
      B._callMethodUnchecked1(hostElement, "append", politeElement, t1);
      B._callMethodUnchecked1(hostElement, "append", assertiveElement, t1);
      return A.AccessibilityAnnouncements$_(politeElement, assertiveElement);
    },
    AccessibilityAnnouncements$_(_politeElement, _assertiveElement) {
      return new A.AccessibilityAnnouncements(_politeElement, _assertiveElement);
    },
    AccessibilityAnnouncements__createElement(assertiveness) {
      var ariaLiveValue = assertiveness === C.Assertiveness_1 ? "assertive" : "polite",
        liveRegion = A.createDomElement("flt-announcement-" + ariaLiveValue),
        t1 = B.getProperty(liveRegion, "style", type$.JavaScriptObject);
      A.DomCSSStyleDeclarationExtension_set_position(t1, "fixed");
      A.DomCSSStyleDeclarationExtension_set_overflow(t1, "hidden");
      A.DomCSSStyleDeclarationExtension_set_transform(t1, "translate(-99999px, -99999px)");
      A.DomCSSStyleDeclarationExtension_set_width(t1, "1px");
      A.DomCSSStyleDeclarationExtension_set_height(t1, "1px");
      A.DomElementExtension_setAttribute(liveRegion, "aria-live", ariaLiveValue);
      return liveRegion;
    },
    _checkableKindFromSemanticsFlag(semanticsObject) {
      if (B.boolConversionCheck(semanticsObject.hasFlag$1(C.SemanticsFlag_256_isInMutuallyExclusiveGroup)))
        return C._CheckableKind_1;
      else if (B.boolConversionCheck(semanticsObject.hasFlag$1(C.SemanticsFlag_65536_hasToggledState)))
        return C._CheckableKind_2;
      else
        return C._CheckableKind_0;
    },
    Checkable$(semanticsObject) {
      var t1 = new A.Checkable(A._checkableKindFromSemanticsFlag(semanticsObject), C.PrimaryRole_4, semanticsObject);
      t1.PrimaryRoleManager$withBasics$3$preferredLabelRepresentation(C.PrimaryRole_4, semanticsObject, C.LabelRepresentation_0);
      t1.Checkable$1(semanticsObject);
      return t1;
    },
    Dialog$(semanticsObject) {
      var t1 = new A.Dialog(C.PrimaryRole_7, semanticsObject);
      t1.PrimaryRoleManager$blank$2(C.PrimaryRole_7, semanticsObject);
      t1.Dialog$1(semanticsObject);
      return t1;
    },
    RouteName$(semanticsObject, owner) {
      return new A.RouteName(semanticsObject, owner);
    },
    Focusable$(semanticsObject, owner) {
      return new A.Focusable(A.AccessibilityFocusManager$(semanticsObject.owner), semanticsObject, owner);
    },
    AccessibilityFocusManager$(_owner) {
      return new A.AccessibilityFocusManager(_owner);
    },
    Heading$(semanticsObject) {
      var t1 = new A.Heading(C.PrimaryRole_5, semanticsObject);
      t1.PrimaryRoleManager$blank$2(C.PrimaryRole_5, semanticsObject);
      t1.Heading$1(semanticsObject);
      return t1;
    },
    ImageRoleManager$(semanticsObject) {
      var t1 = new A.ImageRoleManager(C.PrimaryRole_6, semanticsObject);
      t1.PrimaryRoleManager$blank$2(C.PrimaryRole_6, semanticsObject);
      t1.ImageRoleManager$1(semanticsObject);
      return t1;
    },
    Incrementable$(semanticsObject) {
      var t1 = new A.Incrementable(A.createDomHTMLInputElement(), A.AccessibilityFocusManager$(semanticsObject.owner), C.PrimaryRole_0, semanticsObject);
      t1.PrimaryRoleManager$blank$2(C.PrimaryRole_0, semanticsObject);
      t1.Incrementable$1(semanticsObject);
      return t1;
    },
    AriaLabelRepresentation$_(owner) {
      return new A.AriaLabelRepresentation(C.LabelRepresentation_0, owner);
    },
    DomTextRepresentation$_(owner) {
      return new A.DomTextRepresentation(C.LabelRepresentation_1, owner);
    },
    SizedSpanRepresentation$_(owner) {
      var t1 = new A.SizedSpanRepresentation(A.DomDocumentExtension_createElement(self.document, "span"), C.LabelRepresentation_2, owner);
      t1.SizedSpanRepresentation$_$1(owner);
      return t1;
    },
    SizedSpanRepresentation__updateSizes() {
      var measurements, t1, t2, t3, update, t4, measurement, representation, domWidth, domHeight, targetSize, t5, _s5_ = "style",
        queue = $.SizedSpanRepresentation__resizeQueue;
      $.SizedSpanRepresentation__resizeQueue = null;
      if (queue == null || B.boolConversionCheck(J.get$isEmpty$asx(queue)))
        return;
      measurements = B._setArrayType([], type$.JSArray_Record_3_Size_domSize_and_SizedSpanRepresentation_representation_and_Size_targetSize);
      for (t1 = J.getInterceptor$ax(queue), t2 = t1.get$iterator(queue), t3 = type$.JavaScriptObject; B.boolConversionCheck(t2.moveNext$0());)
        A.DomCSSStyleDeclarationExtension_set_display(B.getProperty(t2.get$current()._0._domText, _s5_, t3), "inline");
      for (t1 = t1.get$iterator(queue); B.boolConversionCheck(t1.moveNext$0());) {
        update = t1.get$current();
        t2 = update._0;
        t4 = t2._domText;
        D.JSArray_methods.add$1(measurements, new B._Record_3_domSize_representation_targetSize(A.Size$(A.DomElementExtension_get_offsetWidth(t4), A.DomElementExtension_get_offsetHeight(t4)), t2, update._1));
      }
      for (t1 = D.JSArray_methods.get$iterator(measurements); B.boolConversionCheck(t1.moveNext$0());) {
        measurement = t1.get$current();
        representation = measurement._1;
        t2 = measurement._0;
        domWidth = t2.get$width();
        domHeight = t2.get$height();
        targetSize = measurement._2;
        t2 = representation._domText;
        A.DomCSSStyleDeclarationExtension_set_display(B.getProperty(t2, _s5_, t3), "inline-block");
        if (domWidth < 1 && domHeight < 1)
          A.DomCSSStyleDeclarationExtension_set_transform(B.getProperty(t2, _s5_, t3), "");
        else {
          t4 = targetSize.get$width();
          if (typeof t4 !== "number")
            return t4.$div();
          t5 = targetSize.get$height();
          if (typeof t5 !== "number")
            return t5.$div();
          A.DomCSSStyleDeclarationExtension_set_transform(B.getProperty(t2, _s5_, t3), "scale(" + B.S(t4 / domWidth) + ", " + B.S(t5 / domHeight) + ")");
        }
      }
    },
    LabelAndValue$(semanticsObject, owner, preferredRepresentation) {
      return new A.LabelAndValue(preferredRepresentation, semanticsObject, owner);
    },
    computeDomSemanticsLabel(hint, label, tooltip, value) {
      var combinedValue,
        labelHintValue = A._computeLabelHintValue(hint, label, value),
        t1 = tooltip == null;
      if (t1 && labelHintValue == null)
        return null;
      combinedValue = B.StringBuffer$("");
      if (!t1) {
        combinedValue.write$1(tooltip);
        if (labelHintValue != null)
          combinedValue.writeln$0();
      }
      if (labelHintValue != null)
        combinedValue.write$1(labelHintValue);
      return B.boolConversionCheck(combinedValue.get$isNotEmpty(0)) ? combinedValue.toString$0(0) : null;
    },
    _computeLabelHintValue(hint, label, value) {
      var combinedValue = J.join$1$ax(J.where$1$ax(D.JSArray_methods.whereType$1$0(B._setArrayType([label, hint, value], type$.JSArray_nullable_String), type$.String), new A._computeLabelHintValue_closure()), " ");
      return B.boolConversionCheck(D.JSString_methods.get$isNotEmpty(combinedValue)) ? combinedValue : null;
    },
    Link$(semanticsObject) {
      var t1 = new A.Link(C.PrimaryRole_10, semanticsObject);
      t1.PrimaryRoleManager$withBasics$3$preferredLabelRepresentation(C.PrimaryRole_10, semanticsObject, C.LabelRepresentation_1);
      t1.Link$1(semanticsObject);
      return t1;
    },
    LiveRegion$(semanticsObject, owner) {
      return new A.LiveRegion(semanticsObject, owner);
    },
    PlatformViewRoleManager$(semanticsObject) {
      var t1 = new A.PlatformViewRoleManager(C.PrimaryRole_8, semanticsObject);
      t1.PrimaryRoleManager$withBasics$3$preferredLabelRepresentation(C.PrimaryRole_8, semanticsObject, C.LabelRepresentation_0);
      return t1;
    },
    Scrollable$(semanticsObject) {
      var t1 = new A.Scrollable(A.createDomElement("flt-semantics-scroll-overflow"), C.PrimaryRole_1, semanticsObject);
      t1.PrimaryRoleManager$withBasics$3$preferredLabelRepresentation(C.PrimaryRole_1, semanticsObject, C.LabelRepresentation_0);
      return t1;
    },
    EngineAccessibilityFeatures$(_index) {
      return new A.EngineAccessibilityFeatures(_index);
    },
    EngineAccessibilityFeaturesBuilder$(_index) {
      return new A.EngineAccessibilityFeaturesBuilder(_index);
    },
    PrimaryRoleManager__initElement(element, semanticsObject) {
      var _s5_ = "style",
        t1 = type$.JavaScriptObject,
        t2 = B.getProperty(element, _s5_, t1);
      A.DomCSSStyleDeclarationExtension_set_position(t2, "absolute");
      A.DomCSSStyleDeclarationExtension_set_overflow(t2, "visible");
      t2 = semanticsObject.id;
      A.DomElementExtension_setAttribute(element, "id", "flt-semantic-node-" + B.S(t2));
      if (B.boolConversionCheck(J.$eq$(t2, 0)) && !B.boolConversionCheck(A.configuration().get$debugShowSemanticsNodes())) {
        A.DomCSSStyleDeclarationExtension_set_filter(B.getProperty(element, _s5_, t1), "opacity(0%)");
        A.DomCSSStyleDeclarationExtension_set_color(B.getProperty(element, _s5_, t1), "rgba(0,0,0,0)");
      }
      if (B.boolConversionCheck(A.configuration().get$debugShowSemanticsNodes()))
        A.DomCSSStyleDeclarationExtension_set_outline(B.getProperty(element, _s5_, t1), "1px solid green");
      return element;
    },
    GenericRole$(semanticsObject) {
      var t1 = new A.GenericRole(C.PrimaryRole_9, semanticsObject);
      t1.PrimaryRoleManager$withBasics$3$preferredLabelRepresentation(C.PrimaryRole_9, semanticsObject, C.LabelRepresentation_2);
      t1.GenericRole$1(semanticsObject);
      return t1;
    },
    SemanticsObject$(id, owner) {
      return new A.SemanticsObject(id, owner);
    },
    SemanticsObject__clearSemanticElementTransform(element) {
      var _s5_ = "style",
        t1 = type$.JavaScriptObject,
        t2 = B.getProperty(element, _s5_, t1);
      A.DomCSSStyleDeclarationExtension_removeProperty(t2, "transform-origin");
      A.DomCSSStyleDeclarationExtension_removeProperty(t2, "transform");
      if (B.boolConversionCheck(A.isMacOrIOS())) {
        t1 = B.getProperty(element, _s5_, t1);
        A.DomCSSStyleDeclarationExtension_set_top(t1, "0px");
        A.DomCSSStyleDeclarationExtension_set_left(t1, "0px");
      } else {
        t1 = B.getProperty(element, _s5_, t1);
        A.DomCSSStyleDeclarationExtension_removeProperty(t1, "top");
        A.DomCSSStyleDeclarationExtension_removeProperty(t1, "left");
      }
    },
    EngineSemantics$_() {
      return new A.EngineSemantics(A.AccessibilityAnnouncements_AccessibilityAnnouncements(A.EngineSemantics__initializeAccessibilityAnnouncementHost()), new A.EngineSemantics__now_closure(), A.SemanticsHelper$(), C.GestureMode_1, B._setArrayType([], type$.JSArray_of_void_Function_GestureMode));
    },
    EngineSemantics_instance() {
      var t1 = $.EngineSemantics__instance;
      return t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1;
    },
    EngineSemantics__initializeAccessibilityAnnouncementHost() {
      var host = A.createDomElement("flt-announcement-host"),
        t1 = B.getProperty(self.document, "body", type$.nullable_JavaScriptObject);
      t1.toString;
      B._callMethodUnchecked1(t1, "append", host, type$.void);
      return host;
    },
    EngineSemanticsOwner$(semanticsHost) {
      var t1 = type$.int,
        t2 = type$.SemanticsObject;
      t2 = new A.EngineSemanticsOwner(semanticsHost, B.LinkedHashMap_LinkedHashMap$_empty(t1, t2), B.LinkedHashMap_LinkedHashMap$_empty(t1, t2), B._setArrayType([], type$.JSArray_SemanticsObject), B._setArrayType([], type$.JSArray_of_void_Function));
      t2.EngineSemanticsOwner$1(semanticsHost);
      return t2;
    },
    longestIncreasingSubsequence(list) {
      var longest, i, elem, hi, lo, mid, seq, k,
        t1 = J.getInterceptor$asx(list),
        len = t1.get$length(list),
        t2 = type$.JSArray_int,
        predecessors = B._setArrayType([], t2),
        mins = B._setArrayType([0], t2);
      for (longest = 0, i = 0; i < len; ++i) {
        elem = t1.$index(list, i);
        for (hi = longest, lo = 1; lo <= hi;) {
          mid = D.JSInt_methods._tdivFast$1(lo + hi, 2);
          if (!(mid >= 0 && mid < mins.length))
            return B.ioore(mins, mid);
          t2 = t1.$index(list, mins[mid]);
          if (typeof t2 !== "number")
            return t2.$lt();
          if (t2 < elem)
            lo = mid + 1;
          else
            hi = mid - 1;
        }
        t2 = lo - 1;
        if (!(t2 >= 0 && t2 < mins.length))
          return B.ioore(mins, t2);
        D.JSArray_methods.add$1(predecessors, mins[t2]);
        if (lo >= mins.length)
          D.JSArray_methods.add$1(mins, i);
        else
          D.JSArray_methods.$indexSet(mins, lo, i);
        if (lo > longest)
          longest = lo;
      }
      seq = B.List_List$filled(longest, 0, false, type$.int);
      if (!(longest >= 0 && longest < mins.length))
        return B.ioore(mins, longest);
      k = mins[longest];
      for (i = longest - 1, t1 = J.getInterceptor$ax(seq); i >= 0; --i) {
        t1.$indexSet(seq, i, k);
        if (!(k >= 0 && k < predecessors.length))
          return B.ioore(predecessors, k);
        k = predecessors[k];
      }
      return seq;
    },
    SemanticsHelper$() {
      return new A.SemanticsHelper(B.boolConversionCheck($.$get$browser().get$isDesktop()) ? A.DesktopSemanticsEnabler$() : A.MobileSemanticsEnabler$());
    },
    DesktopSemanticsEnabler$() {
      return new A.DesktopSemanticsEnabler();
    },
    MobileSemanticsEnabler$() {
      return new A.MobileSemanticsEnabler();
    },
    Button$(semanticsObject) {
      var t1 = new A.Button(C.PrimaryRole_2, semanticsObject);
      t1.PrimaryRoleManager$withBasics$3$preferredLabelRepresentation(C.PrimaryRole_2, semanticsObject, C.LabelRepresentation_1);
      t1.Button$1(semanticsObject);
      return t1;
    },
    Tappable$(semanticsObject, owner) {
      var t1 = new A.Tappable(semanticsObject, owner);
      t1.Tappable$2(semanticsObject, owner);
      return t1;
    },
    SemanticsTextEditingStrategy$(owner) {
      var t1 = type$.JavaScriptObject;
      return new A.SemanticsTextEditingStrategy(owner, B._setArrayType([], type$.JSArray_DomSubscription), B.createSentinel(t1), B.createSentinel(t1), B.createSentinel(t1), null);
    },
    SemanticsTextEditingStrategy_ensureInitialized(owner) {
      var t1 = $.SemanticsTextEditingStrategy__instance;
      if (t1 != null)
        t1 = B.boolConversionCheck(J.$eq$(t1.owner, owner));
      else
        t1 = false;
      if (t1) {
        t1 = $.SemanticsTextEditingStrategy__instance;
        t1.toString;
        return t1;
      }
      return $.SemanticsTextEditingStrategy__instance = A.SemanticsTextEditingStrategy$(owner);
    },
    TextField$(semanticsObject) {
      var t1 = new A.TextField(C.PrimaryRole_3, semanticsObject);
      t1.PrimaryRoleManager$blank$2(C.PrimaryRole_3, semanticsObject);
      t1.TextField$1(semanticsObject);
      return t1;
    },
    _TypedDataBuffer__reverse(buffer, start, end) {
      var t1, first, last;
      --end;
      for (t1 = J.getInterceptor$asx(buffer); start < end;) {
        first = t1.$index(buffer, start);
        last = t1.$index(buffer, end);
        t1.$indexSet(buffer, end, first);
        t1.$indexSet(buffer, start, last);
        ++start;
        --end;
      }
    },
    Uint8Buffer$() {
      var t1 = B.NativeUint8List_NativeUint8List(0);
      return new A.Uint8Buffer(t1, J.get$length$asx(t1));
    },
    MethodCall$0(method, $arguments) {
      return new A.MethodCall0(method, $arguments);
    },
    WriteBuffer_WriteBuffer0() {
      var buffer = A.Uint8Buffer$(),
        eightBytes = A.NativeByteData_NativeByteData(8);
      return A.WriteBuffer$_0(buffer, eightBytes, J.asUint8List$0$x(D.NativeByteData_methods.get$buffer(eightBytes)));
    },
    WriteBuffer$_0(_buffer, _eightBytes, _eightBytesAsList) {
      return new A.WriteBuffer0(_buffer, _eightBytes, _eightBytesAsList);
    },
    ReadBuffer$0(data) {
      return new A.ReadBuffer0(data);
    },
    computeShadowOffset(elevation) {
      if (elevation === 0)
        return C.Offset_0_0;
      return A.Offset$(200 * elevation / 600, 400 * elevation / 600);
    },
    computePenumbraBounds(shape, elevation) {
      var t1, t2, dx, dy, offset, t3, t4;
      if (elevation === 0)
        return shape;
      t1 = shape.get$width();
      if (typeof t1 !== "number")
        return t1.$mul();
      t2 = shape.get$height();
      if (typeof t2 !== "number")
        return t2.$mul();
      dx = elevation * ((800 + t1 * 0.5) / 600);
      dy = elevation * ((800 + t2 * 0.5) / 600);
      offset = A.computeShadowOffset(elevation);
      t2 = shape.left;
      if (typeof t2 !== "number")
        return t2.$sub();
      t1 = shape.top;
      if (typeof t1 !== "number")
        return t1.$sub();
      t3 = shape.right;
      if (typeof t3 !== "number")
        return t3.$add();
      t4 = shape.bottom;
      if (typeof t4 !== "number")
        return t4.$add();
      return A.Rect$fromLTRB(t2 - dx, t1 - dy, t3 + dx, t4 + dy).shift$1(offset).inflate$1(20);
    },
    SurfaceShadowData$(blurWidth, offset) {
      return new A.SurfaceShadowData(blurWidth, offset);
    },
    computeShadow(shape, elevation) {
      var t1, t2;
      if (elevation === 0)
        return null;
      t1 = shape.get$width();
      if (typeof t1 !== "number")
        return t1.$mul();
      t2 = shape.get$height();
      if (typeof t2 !== "number")
        return t2.$mul();
      return A.SurfaceShadowData$(A.min(elevation * ((800 + t1 * 0.5) / 600), elevation * ((800 + t2 * 0.5) / 600), type$.double), A.computeShadowOffset(elevation));
    },
    toShadowColor(color) {
      var reducedAlpha,
        t1 = color.get$alpha();
      if (typeof t1 !== "number")
        return B.iae(t1);
      reducedAlpha = D.JSNumber_methods.round$0(0.3 * t1);
      t1 = color.get$value();
      if (typeof t1 !== "number")
        return t1.$and();
      return A.Color$(((reducedAlpha & 255) << 24 | t1 & 16777215) >>> 0);
    },
    createSVGElement(tag) {
      return A.DomDocumentExtension_createElementNS(self.document, "http://www.w3.org/2000/svg", tag);
    },
    createSVGSVGElement() {
      var el = A.createSVGElement("svg");
      A.DomElementExtension_setAttribute(el, "version", "1.1");
      return el;
    },
    createSVGClipPathElement() {
      return A.DomDocumentExtension_createElementNS(self.document, "http://www.w3.org/2000/svg", "clipPath");
    },
    createSVGDefsElement() {
      return A.DomDocumentExtension_createElementNS(self.document, "http://www.w3.org/2000/svg", "defs");
    },
    createSVGPathElement() {
      return A.DomDocumentExtension_createElementNS(self.document, "http://www.w3.org/2000/svg", "path");
    },
    createSVGFilterElement() {
      return A.DomDocumentExtension_createElementNS(self.document, "http://www.w3.org/2000/svg", "filter");
    },
    SVGLengthExtension_set_valueAsString(_this, value) {
      var t1 = value == null ? null : B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "valueAsString", t1, type$.nullable_String);
      return t1;
    },
    SVGAnimatedEnumerationExtenson_set_baseVal(_this, value) {
      var t1 = value == null ? null : A.NumToJSExtension_get_toJS(value);
      B._setPropertyUnchecked(_this, "baseVal", t1, type$.nullable_double);
      return t1;
    },
    createSVGFEColorMatrixElement() {
      return A.DomDocumentExtension_createElementNS(self.document, "http://www.w3.org/2000/svg", "feColorMatrix");
    },
    createSVGFEFloodElement() {
      return A.DomDocumentExtension_createElementNS(self.document, "http://www.w3.org/2000/svg", "feFlood");
    },
    createSVGFEBlendElement() {
      return A.DomDocumentExtension_createElementNS(self.document, "http://www.w3.org/2000/svg", "feBlend");
    },
    createSVGFECompositeElement() {
      return A.DomDocumentExtension_createElementNS(self.document, "http://www.w3.org/2000/svg", "feComposite");
    },
    SVGAnimatedStringExtension_set_baseVal(_this, value) {
      var t1 = value == null ? null : B.StringToJSString_get_toJS(value);
      B._setPropertyUnchecked(_this, "baseVal", t1, type$.nullable_String);
      return t1;
    },
    SVGAnimatedNumberExtension_set_baseVal(_this, value) {
      var t1 = value == null ? null : A.NumToJSExtension_get_toJS(value);
      B._setPropertyUnchecked(_this, "baseVal", t1, type$.nullable_double);
      return t1;
    },
    SVGNumberExtension_set_value(_this, v) {
      var t1 = v == null ? null : A.NumToJSExtension_get_toJS(v);
      B._setPropertyUnchecked(_this, "value", t1, type$.nullable_double);
      return t1;
    },
    CanvasParagraph$(spans, canDrawOnCanvas, paragraphStyle, plainText) {
      return new A.CanvasParagraph(spans, paragraphStyle, plainText, canDrawOnCanvas);
    },
    _positionSpanElement(element, line, fragment) {
      var boxRect = fragment.toPaintingTextBox$0().toRect$0(),
        t1 = B.getProperty(element, "style", type$.JavaScriptObject);
      A.DomCSSStyleDeclarationExtension_set_position(t1, "absolute");
      A.DomCSSStyleDeclarationExtension_set_top(t1, B.S(boxRect.top) + "px");
      A.DomCSSStyleDeclarationExtension_set_left(t1, B.S(boxRect.left) + "px");
      A.DomCSSStyleDeclarationExtension_set_width(t1, B.S(boxRect.get$width()) + "px");
      A.DomCSSStyleDeclarationExtension_set_lineHeight(t1, B.S(boxRect.get$height()) + "px");
    },
    ParagraphSpan$(end, start, style) {
      return new A.ParagraphSpan(style, end);
    },
    ChildStyleNode$($parent, style) {
      return new A.ChildStyleNode($parent, style);
    },
    RootStyleNode$(paragraphStyle) {
      return new A.RootStyleNode(paragraphStyle);
    },
    CanvasParagraphBuilder$(style) {
      var t1 = B.StringBuffer$(""),
        t2 = B._setArrayType([], type$.JSArray_ParagraphSpan),
        t3 = B._setArrayType([], type$.JSArray_StyleNode),
        t4 = B._setArrayType([], type$.JSArray_double);
      return new A.CanvasParagraphBuilder(t1, style, t2, t3, A.RootStyleNode$(style), t4);
    },
    HtmlFontCollection$() {
      return new A.HtmlFontCollection();
    },
    LayoutFragmenter$(text, paragraphSpans) {
      return new A.LayoutFragmenter(paragraphSpans, text);
    },
    LayoutFragment$(start, end, type, textDirection, fragmentFlow, span, trailingNewlines, trailingSpaces) {
      var t1 = type$.double;
      return new A.LayoutFragment(B.createSentinel(type$.TextBox), B.createSentinel(type$.nullable_Record_2_int_and_int), B.createSentinel(t1), B.createSentinel(type$.ParagraphLine), B.createSentinel(type$.Spanometer), B.createSentinel(t1), B.createSentinel(t1), B.createSentinel(t1), B.createSentinel(t1), 0, type, textDirection, fragmentFlow, span, trailingNewlines, trailingSpaces, start, end);
    },
    EllipsisFragment$(index, span) {
      var t1 = type$.double;
      return new A.EllipsisFragment(B.createSentinel(type$.TextBox), B.createSentinel(type$.nullable_Record_2_int_and_int), B.createSentinel(t1), B.createSentinel(type$.ParagraphLine), B.createSentinel(type$.Spanometer), B.createSentinel(t1), B.createSentinel(t1), B.createSentinel(t1), B.createSentinel(t1), 0, C.LineBreakType_3, null, C.FragmentFlow_3, span, 0, 0, index, index);
    },
    TextLayoutService$(paragraph) {
      return new A.TextLayoutService(paragraph, B._setArrayType([], type$.JSArray_ParagraphLine), C.Rect_0_0_0_0);
    },
    LineBuilder$_(paragraph, spanometer, accumulatedHeight, fragments, lineNumber, maxWidth) {
      var t1 = new A.LineBuilder(fragments, maxWidth, paragraph, spanometer, lineNumber, accumulatedHeight);
      t1.LineBuilder$_$6$accumulatedHeight$fragments$lineNumber$maxWidth(paragraph, spanometer, accumulatedHeight, fragments, lineNumber, maxWidth);
      return t1;
    },
    LineBuilder_LineBuilder$first(paragraph, spanometer, maxWidth) {
      return A.LineBuilder$_(paragraph, spanometer, 0, B._setArrayType([], type$.JSArray_LayoutFragment), 0, maxWidth);
    },
    Spanometer$(paragraph) {
      return new A.Spanometer(paragraph);
    },
    Spanometer_clearRulersCache() {
      var t1 = J.getInterceptor$ax($.Spanometer__rulers);
      t1.forEach$1($.Spanometer__rulers, new A.Spanometer_clearRulersCache_closure());
      t1.clear$0($.Spanometer__rulers);
    },
    lineLookup() {
      return A.ensureLineLookupInitialized();
    },
    ensureLineLookupInitialized() {
      var t1 = $._lineLookup;
      return t1 == null ? $._lineLookup = A.UnicodePropertyLookup_UnicodePropertyLookup$fromPackedData("00000008A0009!B000a!C000b000cD000d!E000e000vA000w!F000x!G000y!H000z!I0010!J0011!K0012!I0013!H0014!L0015!M0016!I0017!J0018!N0019!O001a!N001b!P001c001lQ001m001nN001o001qI001r!G001s002iI002j!L002k!J002l!M002m003eI003f!L003g!B003h!R003i!I003j003oA003p!D003q004fA004g!S004h!L004i!K004j004lJ004m004qI004r!H004s!I004t!B004u004vI004w!K004x!J004y004zI0050!T00510056I0057!H0058005aI005b!L005c00jrI00js!T00jt00jvI00jw!T00jx00keI00kf!T00kg00lbI00lc00niA00nj!S00nk00nvA00nw00o2S00o300ofA00og00otI00ou!N00ov00w2I00w300w9A00wa013cI013d!N013e!B013h013iI013j!J013l014tA014u!B014v!A014w!I014x014yA014z!I01500151A0152!G0153!A015c0162U0167016aU016b016wI016x016zK01700171N01720173I0174017eA017f!G017g!A017i017jG017k018qI018r019bA019c019lQ019m!K019n019oQ019p019rI019s!A019t01cjI01ck!G01cl!I01cm01csA01ct01cuI01cv01d0A01d101d2I01d301d4A01d5!I01d601d9A01da01dbI01dc01dlQ01dm01e8I01e9!A01ea01f3I01f401fuA01fx01idI01ie01ioA01ip!I01j401jdQ01je01kaI01kb01kjA01kk01knI01ko!N01kp!G01kq!I01kt!A01ku01kvJ01kw01lhI01li01llA01lm!I01ln01lvA01lw!I01lx01lzA01m0!I01m101m5A01m801ncI01nd01nfA01ni01qfI01qr01r5A01r6!I01r701s3A01s401tlI01tm01toA01tp!I01tq01u7A01u8!I01u901ufA01ug01upI01uq01urA01us01utB01uu01v3Q01v401vkI01vl01vnA01vp01x5I01x8!A01x9!I01xa01xgA01xj01xkA01xn01xpA01xq!I01xz!A01y401y9I01ya01ybA01ye01ynQ01yo01ypI01yq01yrK01ys01ywI01yx!K01yy!I01yz!J01z001z1I01z2!A01z501z7A01z9020pI020s!A020u020yA02130214A02170219A021d!A021l021qI021y0227Q02280229A022a022cI022d!A022e!I022p022rA022t0249I024c!A024d!I024e024lA024n024pA024r024tA024w025dI025e025fA025i025rQ025s!I025t!J0261!I02620267A0269026bA026d027tI027w!A027x!I027y0284A02870288A028b028dA028l028nA028s028xI028y028zA0292029bQ029c029jI029u!A029v02bdI02bi02bmA02bq02bsA02bu02bxA02c0!I02c7!A02cm02cvQ02cw02d4I02d5!J02d6!I02dc02dgA02dh02f1I02f202f8A02fa02fcA02fe02fhA02fp02fqA02fs02g1I02g202g3A02g602gfQ02gn!T02go02gwI02gx02gzA02h0!T02h102ihI02ik!A02il!I02im02isA02iu02iwA02iy02j1A02j902jaA02ji02jlI02jm02jnA02jq02jzQ02k102k2I02kg02kjA02kk02m2I02m302m4A02m5!I02m602mcA02me02mgA02mi02mlA02mm02muI02mv!A02mw02n5I02n602n7A02na02njQ02nk02nsI02nt!K02nu02nzI02o102o3A02o502pyI02q2!A02q702qcA02qe!A02qg02qnA02qu02r3Q02r602r7A02r802t6I02tb!J02tc02trI02ts02u1Q02u202u3B02v502x9I02xc02xlQ02xo02yoI02yp02ysT02yt!I02yu02yvT02yw!S02yx02yyT02yz!B02z0!S02z102z5G02z6!S02z7!I02z8!G02z902zbI02zc02zdA02ze02zjI02zk02ztQ02zu0303I0304!B0305!A0306!I0307!A0308!I0309!A030a!L030b!R030c!L030d!R030e030fA030g031oI031t0326A0327!B0328032cA032d!B032e032fA032g032kI032l032vA032x033wA033y033zB03400345I0346!A0347034fI034g034hT034i!B034j!T034k034oI034p034qS035s037jI037k037tQ037u037vB037w039rI039s03a1Q03a203cvI03cw03fjV03fk03hjW03hk03jzX03k003tmI03tp03trA03ts!I03tt!B03tu03y5I03y8!B03y904fzI04g0!B04g104gqI04gr!L04gs!R04gw04iyI04iz04j1B04j204k1I04k204k4A04kg04kxI04ky04l0A04l104l2B04lc04ltI04lu04lvA04m804moI04mq04mrA04n404pfI04pg04phB04pi!Y04pj!I04pk!B04pl!I04pm!B04pn!J04po04ppI04ps04q1Q04q804qpI04qq04qrG04qs04qtB04qu!T04qv!I04qw04qxG04qy!I04qz04r1A04r2!S04r404rdQ04rk04ucI04ud04ueA04uf04vcI04vd!A04ve04ymI04yo04yzA04z404zfA04zk!I04zo04zpG04zq04zzQ0500053dI053k053tQ053u055iI055j055nA055q058cI058f!A058g058pQ058w0595Q059c059pI059s05a8A05c005c4A05c505dfI05dg05dwA05dx05e3I05e805ehQ05ei05ejB05ek!I05el05eoB05ep05eyI05ez05f7A05f805fgI05fk05fmA05fn05ggI05gh05gtA05gu05gvI05gw05h5Q05h605idI05ie05irA05j005k3I05k405knA05kr05kvB05kw05l5Q05l905lbI05lc05llQ05lm05mlI05mm05mnB05mo05onI05ow05oyA05oz!I05p005pkA05pl05poI05pp!A05pq05pvI05pw!A05px05pyI05pz05q1A05q205vjI05vk05x5A05x705xbA05xc06bgI06bh!T06bi!I06bk06bqB06br!S06bs06buB06bv!Z06bw!A06bx!a06by06bzA06c0!B06c1!S06c206c3B06c4!b06c506c7I06c806c9H06ca!L06cb06cdH06ce!L06cf!H06cg06cjI06ck06cmc06cn!B06co06cpD06cq06cuA06cv!S06cw06d3K06d4!I06d506d6H06d7!I06d806d9Y06da06dfI06dg!N06dh!L06di!R06dj06dlY06dm06dxI06dy!B06dz!I06e006e3B06e4!I06e506e7B06e8!d06e906ecI06ee06enA06eo06f0I06f1!L06f2!R06f306fgI06fh!L06fi!R06fk06fwI06g006g6J06g7!K06g806glJ06gm!K06gn06gqJ06gr!K06gs06gtJ06gu!K06gv06hbJ06hc06i8A06io06iqI06ir!K06is06iwI06ix!K06iy06j9I06ja!J06jb06q9I06qa06qbJ06qc06weI06wf!c06wg06x3I06x4!L06x5!R06x6!L06x7!R06x806xlI06xm06xne06xo06y0I06y1!L06y2!R06y3073jI073k073ne073o07i7I07i807ibe07ic07irI07is07ite07iu07ivI07iw!e07ix!I07iy07j0e07j1!f07j207j3e07j407jsI07jt07jve07jw07l3I07l4!e07l507lqI07lr!e07ls07ngI07nh07nse07nt07nwI07nx!e07ny!I07nz07o1e07o2!I07o307o4e07o507o7I07o807o9e07oa07obI07oc!e07od07oeI07of07ohe07oi07opI07oq!e07or07owI07ox07p1e07p2!I07p307p4e07p5!f07p6!e07p707p8I07p907pge07ph07pjI07pk07ple07pm07ppf07pq07ruI07rv07s0H07s1!I07s207s3G07s4!e07s507s7I07s8!L07s9!R07sa!L07sb!R07sc!L07sd!R07se!L07sf!R07sg!L07sh!R07si!L07sj!R07sk!L07sl!R07sm07usI07ut!L07uu!R07uv07vpI07vq!L07vr!R07vs!L07vt!R07vu!L07vv!R07vw!L07vx!R07vy!L07vz!R07w00876I0877!L0878!R0879!L087a!R087b!L087c!R087d!L087e!R087f!L087g!R087h!L087i!R087j!L087k!R087l!L087m!R087n!L087o!R087p!L087q!R087r!L087s!R087t089jI089k!L089l!R089m!L089n!R089o08ajI08ak!L08al!R08am08viI08vj08vlA08vm08vnI08vt!G08vu08vwB08vx!I08vy!G08vz!B08w008z3I08z4!B08zj!A08zk0926I09280933A0934093hH093i093pB093q!I093r!B093s!L093t!B093u093vI093w093xH093y093zI09400941H0942!L0943!R0944!L0945!R0946!L0947!R0948!L0949!R094a094dB094e!G094f!I094g094hB094i!I094j094kB094l094pI094q094rb094s094uB094v!I094w094xB094y!L094z0956B0957!I0958!B0959!I095a095bB095c095eI096o097de097f099ve09a809g5e09gw09h7e09hc!B09hd09heR09hf09hge09hh!Y09hi09hje09hk!L09hl!R09hm!L09hn!R09ho!L09hp!R09hq!L09hr!R09hs!L09ht!R09hu09hve09hw!L09hx!R09hy!L09hz!R09i0!L09i1!R09i2!L09i3!R09i4!Y09i5!L09i609i7R09i809ihe09ii09inA09io09ise09it!A09iu09iye09iz09j0Y09j109j3e09j5!Y09j6!e09j7!Y09j8!e09j9!Y09ja!e09jb!Y09jc!e09jd!Y09je09k2e09k3!Y09k409kye09kz!Y09l0!e09l1!Y09l2!e09l3!Y09l409l9e09la!Y09lb09lge09lh09liY09ll09lmA09ln09lqY09lr!e09ls09ltY09lu!e09lv!Y09lw!e09lx!Y09ly!e09lz!Y09m0!e09m1!Y09m209mqe09mr!Y09ms09nme09nn!Y09no!e09np!Y09nq!e09nr!Y09ns09nxe09ny!Y09nz09o4e09o509o6Y09o709oae09ob09oeY09of!e09ol09pre09pt09see09sg09ure09v409vjY09vk09wee09wg09xje09xk09xrI09xs0fcve0fcw0fenI0feo0vmce0vmd!Y0vme0wi4e0wi80wjqe0wk00wl9I0wla0wlbB0wlc0wssI0wst!B0wsu!G0wsv!B0wsw0wtbI0wtc0wtlQ0wtm0wviI0wvj0wvmA0wvn!I0wvo0wvxA0wvy0wwtI0wwu0wwvA0www0wz3I0wz40wz5A0wz6!I0wz70wzbB0wzk0x6pI0x6q!A0x6r0x6tI0x6u!A0x6v0x6yI0x6z!A0x700x7mI0x7n0x7rA0x7s0x7vI0x7w!A0x800x87I0x88!K0x890x9vI0x9w0x9xT0x9y0x9zG0xa80xa9A0xaa0xbnI0xbo0xc5A0xce0xcfB0xcg0xcpQ0xcw0xddA0xde0xdnI0xdo!T0xdp0xdqI0xdr!A0xds0xe1Q0xe20xetI0xeu0xf1A0xf20xf3B0xf40xfqI0xfr0xg3A0xgf!I0xgg0xh8V0xhc0xhfA0xhg0xiqI0xir0xj4A0xj50xjaI0xjb0xjdB0xje0xjjI0xjk0xjtQ0xjy0xkfI0xkg0xkpQ0xkq0xm0I0xm10xmeA0xmo0xmqI0xmr!A0xms0xmzI0xn00xn1A0xn40xndQ0xng!I0xnh0xnjB0xnk0xreI0xrf0xrjA0xrk0xrlB0xrm0xroI0xrp0xrqA0xs10xyaI0xyb0xyiA0xyj!B0xyk0xylA0xyo0xyxQ0xz4!g0xz50xzvh0xzw!g0xzx0y0nh0y0o!g0y0p0y1fh0y1g!g0y1h0y27h0y28!g0y290y2zh0y30!g0y310y3rh0y3s!g0y3t0y4jh0y4k!g0y4l0y5bh0y5c!g0y5d0y63h0y64!g0y650y6vh0y6w!g0y6x0y7nh0y7o!g0y7p0y8fh0y8g!g0y8h0y97h0y98!g0y990y9zh0ya0!g0ya10yarh0yas!g0yat0ybjh0ybk!g0ybl0ycbh0ycc!g0ycd0yd3h0yd4!g0yd50ydvh0ydw!g0ydx0yenh0yeo!g0yep0yffh0yfg!g0yfh0yg7h0yg8!g0yg90ygzh0yh0!g0yh10yhrh0yhs!g0yht0yijh0yik!g0yil0yjbh0yjc!g0yjd0yk3h0yk4!g0yk50ykvh0ykw!g0ykx0ylnh0ylo!g0ylp0ymfh0ymg!g0ymh0yn7h0yn8!g0yn90ynzh0yo0!g0yo10yorh0yos!g0yot0ypjh0ypk!g0ypl0yqbh0yqc!g0yqd0yr3h0yr4!g0yr50yrvh0yrw!g0yrx0ysnh0yso!g0ysp0ytfh0ytg!g0yth0yu7h0yu8!g0yu90yuzh0yv0!g0yv10yvrh0yvs!g0yvt0ywjh0ywk!g0ywl0yxbh0yxc!g0yxd0yy3h0yy4!g0yy50yyvh0yyw!g0yyx0yznh0yzo!g0yzp0z0fh0z0g!g0z0h0z17h0z18!g0z190z1zh0z20!g0z210z2rh0z2s!g0z2t0z3jh0z3k!g0z3l0z4bh0z4c!g0z4d0z53h0z54!g0z550z5vh0z5w!g0z5x0z6nh0z6o!g0z6p0z7fh0z7g!g0z7h0z87h0z88!g0z890z8zh0z90!g0z910z9rh0z9s!g0z9t0zajh0zak!g0zal0zbbh0zbc!g0zbd0zc3h0zc4!g0zc50zcvh0zcw!g0zcx0zdnh0zdo!g0zdp0zefh0zeg!g0zeh0zf7h0zf8!g0zf90zfzh0zg0!g0zg10zgrh0zgs!g0zgt0zhjh0zhk!g0zhl0zibh0zic!g0zid0zj3h0zj4!g0zj50zjvh0zjw!g0zjx0zknh0zko!g0zkp0zlfh0zlg!g0zlh0zm7h0zm8!g0zm90zmzh0zn0!g0zn10znrh0zns!g0znt0zojh0zok!g0zol0zpbh0zpc!g0zpd0zq3h0zq4!g0zq50zqvh0zqw!g0zqx0zrnh0zro!g0zrp0zsfh0zsg!g0zsh0zt7h0zt8!g0zt90ztzh0zu0!g0zu10zurh0zus!g0zut0zvjh0zvk!g0zvl0zwbh0zwc!g0zwd0zx3h0zx4!g0zx50zxvh0zxw!g0zxx0zynh0zyo!g0zyp0zzfh0zzg!g0zzh1007h1008!g1009100zh1010!g1011101rh101s!g101t102jh102k!g102l103bh103c!g103d1043h1044!g1045104vh104w!g104x105nh105o!g105p106fh106g!g106h1077h1078!g1079107zh1080!g1081108rh108s!g108t109jh109k!g109l10abh10ac!g10ad10b3h10b4!g10b510bvh10bw!g10bx10cnh10co!g10cp10dfh10dg!g10dh10e7h10e8!g10e910ezh10f0!g10f110frh10fs!g10ft10gjh10gk!g10gl10hbh10hc!g10hd10i3h10i4!g10i510ivh10iw!g10ix10jnh10jo!g10jp10kfh10kg!g10kh10l7h10l8!g10l910lzh10m0!g10m110mrh10ms!g10mt10njh10nk!g10nl10obh10oc!g10od10p3h10p4!g10p510pvh10pw!g10px10qnh10qo!g10qp10rfh10rg!g10rh10s7h10s8!g10s910szh10t0!g10t110trh10ts!g10tt10ujh10uk!g10ul10vbh10vc!g10vd10w3h10w4!g10w510wvh10ww!g10wx10xnh10xo!g10xp10yfh10yg!g10yh10z7h10z8!g10z910zzh1100!g1101110rh110s!g110t111jh111k!g111l112bh112c!g112d1133h1134!g1135113vh113w!g113x114nh114o!g114p115fh115g!g115h1167h1168!g1169116zh1170!g1171117rh117s!g117t118jh118k!g118l119bh119c!g119d11a3h11a4!g11a511avh11aw!g11ax11bnh11bo!g11bp11cfh11cg!g11ch11d7h11d8!g11d911dzh11e0!g11e111erh11es!g11et11fjh11fk!g11fl11gbh11gc!g11gd11h3h11h4!g11h511hvh11hw!g11hx11inh11io!g11ip11jfh11jg!g11jh11k7h11k8!g11k911kzh11l0!g11l111lrh11ls!g11lt11mjh11mk!g11ml11nbh11nc!g11nd11o3h11o4!g11o511ovh11ow!g11ox11pnh11po!g11pp11qfh11qg!g11qh11r7h11r8!g11r911rzh11s0!g11s111srh11ss!g11st11tjh11tk!g11tl11ubh11uc!g11ud11v3h11v4!g11v511vvh11vw!g11vx11wnh11wo!g11wp11xfh11xg!g11xh11y7h11y8!g11y911yzh11z0!g11z111zrh11zs!g11zt120jh120k!g120l121bh121c!g121d1223h1224!g1225122vh122w!g122x123nh123o!g123p124fh124g!g124h1257h1258!g1259125zh1260!g1261126rh126s!g126t127jh127k!g127l128bh128c!g128d1293h1294!g1295129vh129w!g129x12anh12ao!g12ap12bfh12bg!g12bh12c7h12c8!g12c912czh12d0!g12d112drh12ds!g12dt12ejh12ek!g12el12fbh12fc!g12fd12g3h12g4!g12g512gvh12gw!g12gx12hnh12ho!g12hp12ifh12ig!g12ih12j7h12j8!g12j912jzh12k0!g12k112krh12ks!g12kt12ljh12lk!g12ll12mbh12mc!g12md12n3h12n4!g12n512nvh12nw!g12nx12onh12oo!g12op12pfh12pg!g12ph12q7h12q8!g12q912qzh12r0!g12r112rrh12rs!g12rt12sjh12sk!g12sl12tbh12tc!g12td12u3h12u4!g12u512uvh12uw!g12ux12vnh12vo!g12vp12wfh12wg!g12wh12x7h12x8!g12x912xzh12y0!g12y112yrh12ys!g12yt12zjh12zk!g12zl130bh130c!g130d1313h1314!g1315131vh131w!g131x132nh132o!g132p133fh133g!g133h1347h1348!g1349134zh1350!g1351135rh135s!g135t136jh136k!g136l137bh137c!g137d1383h1384!g1385138vh138w!g138x139nh139o!g139p13afh13ag!g13ah13b7h13b8!g13b913bzh13c0!g13c113crh13cs!g13ct13djh13dk!g13dl13ebh13ec!g13ed13f3h13f4!g13f513fvh13fw!g13fx13gnh13go!g13gp13hfh13hg!g13hh13i7h13i8!g13i913izh13j0!g13j113jrh13js!g13jt13kjh13kk!g13kl13lbh13lc!g13ld13m3h13m4!g13m513mvh13mw!g13mx13nnh13no!g13np13ofh13og!g13oh13p7h13p8!g13p913pzh13q0!g13q113qrh13qs!g13qt13rjh13rk!g13rl13sbh13sc!g13sd13t3h13t4!g13t513tvh13tw!g13tx13unh13uo!g13up13vfh13vg!g13vh13w7h13w8!g13w913wzh13x0!g13x113xrh13xs!g13xt13yjh13yk!g13yl13zbh13zc!g13zd1403h1404!g1405140vh140w!g140x141nh141o!g141p142fh142g!g142h1437h1438!g1439143zh1440!g1441144rh144s!g144t145jh145k!g145l146bh146c!g146d1473h1474!g1475147vh147w!g147x148nh148o!g148p149fh149g!g149h14a7h14a8!g14a914azh14b0!g14b114brh14bs!g14bt14cjh14ck!g14cl14dbh14dc!g14dd14e3h14e4!g14e514evh14ew!g14ex14fnh14fo!g14fp14gfh14gg!g14gh14h7h14h8!g14h914hzh14i0!g14i114irh14is!g14it14jjh14jk!g14jl14kbh14kc!g14kd14l3h14l4!g14l514lvh14lw!g14lx14mnh14mo!g14mp14nfh14ng!g14nh14o7h14o8!g14o914ozh14p0!g14p114prh14ps!g14pt14qjh14qk!g14ql14rbh14rc!g14rd14s3h14s4!g14s514svh14sw!g14sx14tnh14to!g14tp14ufh14ug!g14uh14v7h14v8!g14v914vzh14w0!g14w114wrh14ws!g14wt14xjh14xk!g14xl14ybh14yc!g14yd14z3h14z4!g14z514zvh14zw!g14zx150nh150o!g150p151fh151g!g151h1527h1528!g1529152zh1530!g1531153rh153s!g153t154jh154k!g154l155bh155c!g155d1563h1564!g1565156vh156w!g156x157nh157o!g157p158fh158g!g158h1597h1598!g1599159zh15a0!g15a115arh15as!g15at15bjh15bk!g15bl15cbh15cc!g15cd15d3h15d4!g15d515dvh15dw!g15dx15enh15eo!g15ep15ffh15fg!g15fh15g7h15g8!g15g915gzh15h0!g15h115hrh15hs!g15ht15ijh15ik!g15il15jbh15jc!g15jd15k3h15k4!g15k515kvh15kw!g15kx15lnh15lo!g15lp15mfh15mg!g15mh15n7h15n8!g15n915nzh15o0!g15o115orh15os!g15ot15pjh15pk!g15pl15qbh15qc!g15qd15r3h15r4!g15r515rvh15rw!g15rx15snh15so!g15sp15tfh15tg!g15th15u7h15u8!g15u915uzh15v0!g15v115vrh15vs!g15vt15wjh15wk!g15wl15xbh15xc!g15xd15y3h15y4!g15y515yvh15yw!g15yx15znh15zo!g15zp160fh160g!g160h1617h1618!g1619161zh1620!g1621162rh162s!g162t163jh163k!g163l164bh164c!g164d1653h1654!g1655165vh165w!g165x166nh166o!g166p167fh167g!g167h1687h1688!g1689168zh1690!g1691169rh169s!g169t16ajh16ak!g16al16bbh16bc!g16bd16c3h16c4!g16c516cvh16cw!g16cx16dnh16do!g16dp16efh16eg!g16eh16f7h16f8!g16f916fzh16g0!g16g116grh16gs!g16gt16hjh16hk!g16hl16ibh16ic!g16id16j3h16j4!g16j516jvh16jw!g16jx16knh16ko!g16kp16lfh16ls16meW16mj16nvX16o01d6nI1d6o1dkve1dkw1dljI1dlp!U1dlq!A1dlr1dm0U1dm1!I1dm21dmeU1dmg1dmkU1dmm!U1dmo1dmpU1dmr1dmsU1dmu1dn3U1dn41e0tI1e0u!R1e0v!L1e1c1e63I1e64!K1e65!I1e681e6nA1e6o!N1e6p1e6qR1e6r1e6sN1e6t1e6uG1e6v!L1e6w!R1e6x!c1e741e7jA1e7k1e7oe1e7p!L1e7q!R1e7r!L1e7s!R1e7t!L1e7u!R1e7v!L1e7w!R1e7x!L1e7y!R1e7z!L1e80!R1e81!L1e82!R1e83!L1e84!R1e851e86e1e87!L1e88!R1e891e8fe1e8g!R1e8h!e1e8i!R1e8k1e8lY1e8m1e8nG1e8o!e1e8p!L1e8q!R1e8r!L1e8s!R1e8t!L1e8u!R1e8v1e92e1e94!e1e95!J1e96!K1e97!e1e9c1ed8I1edb!d1edd!G1ede1edfe1edg!J1edh!K1edi1edje1edk!L1edl!R1edm1edne1edo!R1edp!e1edq!R1edr1ee1e1ee21ee3Y1ee41ee6e1ee7!G1ee81eeye1eez!L1ef0!e1ef1!R1ef21efue1efv!L1efw!e1efx!R1efy!e1efz!L1eg01eg1R1eg2!L1eg31eg4R1eg5!Y1eg6!e1eg71eggY1egh1ehpe1ehq1ehrY1ehs1eime1eiq1eive1eiy1ej3e1ej61ejbe1eje1ejge1ejk!K1ejl!J1ejm1ejoe1ejp1ejqJ1ejs1ejyI1ek91ekbA1ekc!i1ekd1ereI1erk1ermB1err1eykI1eyl!A1f281f4gI1f4w!A1f4x1f91I1f921f96A1f9c1fa5I1fa7!B1fa81fbjI1fbk!B1fbl1fh9I1fhc1fhlQ1fhs1g7pI1g7r!B1g7s1gd7I1gdb!B1gdc1gjkI1gjl1gjnA1gjp1gjqA1gjw1gjzA1gk01gl1I1gl41gl6A1glb!A1glc1glkI1gls1glzB1gm01gpwI1gpx1gpyA1gq31gq7I1gq81gqdB1gqe!c1gqo1gs5I1gs91gsfB1gsg1h5vI1h5w1h5zA1h681h6hQ1heo1hgpI1hgr1hgsA1hgt!B1hgw1hl1I1hl21hlcA1hld1hpyI1hq81hqaA1hqb1hrrI1hrs1hs6A1hs71hs8B1hs91ht1I1ht21htbQ1htr1htuA1htv1hv3I1hv41hveA1hvf1hvhI1hvi1hvlB1hvx1hwoI1hww1hx5Q1hxc1hxeA1hxf1hyeI1hyf1hysA1hyu1hz3Q1hz41hz7B1hz8!I1hz91hzaA1hzb1i0iI1i0j!A1i0k!I1i0l!T1i0m!I1i0w1i0yA1i0z1i2aI1i2b1i2oA1i2p1i2sI1i2t1i2uB1i2v!I1i2w!B1i2x1i30A1i31!I1i321i33A1i341i3dQ1i3e!I1i3f!T1i3g!I1i3h1i3jB1i3l1i5nI1i5o1i5zA1i601i61B1i62!I1i631i64B1i65!I1i66!A1i801i94I1i95!B1i9c1iamI1ian1iayA1ib41ibdQ1ibk1ibnA1ibp1id5I1id71id8A1id9!I1ida1idgA1idj1idkA1idn1idpA1ids!I1idz!A1ie51ie9I1iea1iebA1iee1iekA1ieo1iesA1iio1ik4I1ik51ikmA1ikn1ikqI1ikr1ikuB1ikv!I1ikw1il5Q1il61il7B1il9!I1ila!A1ilb1injI1ink1io3A1io41io7I1iog1iopQ1itc1iumI1iun1iutA1iuw1iv4A1iv5!T1iv61iv7B1iv81iv9G1iva1ivcI1ivd1ivrB1ivs1ivvI1ivw1ivxA1iww1iy7I1iy81iyoA1iyp1iyqB1iyr1iysI1iz41izdQ1izk1izwT1j0g1j1mI1j1n1j1zA1j20!I1j281j2hQ1j401j57I1j5c1j5lQ1j5m1j5nI1j5o1j5qB1j5r1jcbI1jcc1jcqA1jcr1jhbI1jhc1jhlQ1jhm1jjjI1jjk1jjpA1jjr1jjsA1jjv1jjyA1jjz!I1jk0!A1jk1!I1jk21jk3A1jk41jk6B1jkg1jkpQ1jmo1jo0I1jo11jo7A1joa1jogA1joh!I1joi!T1joj!I1jok!A1jpc!I1jpd1jpmA1jpn1jqqI1jqr1jqxA1jqy!I1jqz1jr2A1jr3!T1jr4!I1jr51jr8B1jr9!T1jra!I1jrb!A1jrk!I1jrl1jrvA1jrw1jt5I1jt61jtlA1jtm1jtoB1jtp!I1jtq1jtsT1jtt1jtuB1juo1k4uI1k4v1k52A1k541k5bA1k5c!I1k5d1k5hB1k5s1k61Q1k621k6kI1k6o!T1k6p!G1k6q1k7jI1k7m1k87A1k891k8mA1kao1kc0I1kc11kc6A1kca!A1kcc1kcdA1kcf1kclA1kcm!I1kcn!A1kcw1kd5Q1kdc1kehI1kei1kemA1keo1kepA1ker1kevA1kew!I1kf41kfdQ1ko01koiI1koj1komA1kon1kv0I1kv11kv4K1kv51kvlI1kvz!B1kw01lriI1lrk1lroB1ls01oifI1oig1oiiL1oij1oilR1oim1ojlI1ojm!R1ojn1ojpI1ojq!L1ojr!R1ojs!L1ojt!R1oju1oqgI1oqh!L1oqi1oqjR1oqk1oviI1ovk1ovqS1ovr!L1ovs!R1s001sctI1scu!L1scv!R1scw1zkuI1zkw1zl5Q1zla1zlbB1zo01zotI1zow1zp0A1zp1!B1zpc1zqnI1zqo1zquA1zqv1zqxB1zqy1zr7I1zr8!B1zr9!I1zrk1zrtQ1zrv20euI20ev20ewB20ex20juI20jz!A20k0!I20k120ljA20lr20luA20lv20m7I20o020o3Y20o4!S20og20ohA20ow25fbe25fk260ve260w26dxI26f426fce2dc02djye2dlc2dleY2dlw2dlzY2dm82dx7e2fpc2ftoI2ftp2ftqA2ftr!B2fts2ftvA2jnk2jxgI2jxh2jxlA2jxm2jxoI2jxp2jyaA2jyb2jycI2jyd2jyjA2jyk2jzdI2jze2jzhA2jzi2k3lI2k3m2k3oA2k3p2l6zI2l722l8fQ2l8g2lmnI2lmo2lo6A2lo72loaI2lob2lpoA2lpp2lpwI2lpx!A2lpy2lqbI2lqc!A2lqd2lqeI2lqf2lqiB2lqj!I2lqz2lr3A2lr52lrjA2mtc2mtiA2mtk2mu0A2mu32mu9A2mub2mucA2mue2muiA2n0g2n1oI2n1s2n1yA2n1z2n25I2n282n2hQ2n2m2ne3I2ne42ne7A2ne82nehQ2nen!J2oe82ojzI2ok02ok6A2olc2on7I2on82oneA2onf!I2onk2ontQ2ony2onzL2p9t2pbfI2pbg!K2pbh2pbjI2pbk!K2pbl2prlI2pz42q67e2q682q6kI2q6l2q6ne2q6o2q98I2q992q9be2q9c2qb0I2qb12qcle2qcm2qdbj2qdc2qo4e2qo5!f2qo62qore2qos2qotI2qou2qpge2qph2qpiI2qpj2qpne2qpo!I2qpp2qpte2qpu2qpwf2qpx2qpye2qpz!f2qq02qq1e2qq22qq4f2qq52qree2qrf2qrjk2qrk2qtde2qte2qtff2qtg2qthe2qti2qtsf2qtt2qude2que2quwf2qux2quze2qv0!f2qv12qv4e2qv52qv7f2qv8!e2qv92qvbf2qvc2qvie2qvj!f2qvk!e2qvl!f2qvm2qvze2qw0!I2qw1!e2qw2!I2qw3!e2qw4!I2qw52qw9e2qwa!f2qwb2qwee2qwf!I2qwg!e2qwh2qwiI2qwj2qyne2qyo2qyuI2qyv2qzae2qzb2qzoI2qzp2r01e2r022r0pI2r0q2r1ve2r1w2r1xf2r1y2r21e2r22!f2r232r2ne2r2o!f2r2p2r2se2r2t2r2uf2r2v2r4je2r4k2r4rI2r4s2r5fe2r5g2r5lI2r5m2r7oe2r7p2r7rf2r7s2r7ue2r7v2r7zf2r802r91I2r922r94H2r952r97Y2r982r9bI2r9c2raae2rab!f2rac2rare2ras2rauf2rav2rb3e2rb4!f2rb52rbfe2rbg!f2rbh2rcve2rcw2rg3I2rg42rgfe2rgg2risI2rit2rjze2rk02rkbI2rkc2rkfe2rkg2rlzI2rm02rm7e2rm82rmhI2rmi2rmne2rmo2rnrI2rns2rnze2ro02rotI2rou2rr3e2rr42rrfI2rrg!f2rrh2rrie2rrj!f2rrk2rrre2rrs2rrzf2rs02rs5e2rs6!f2rs72rsfe2rsg2rspf2rsq2rsre2rss2rsuf2rsv2ruee2ruf!f2rug2rw4e2rw52rw6f2rw7!e2rw82rw9f2rwa!e2rwb!f2rwc2rwse2rwt2rwvf2rww!e2rwx2rx9f2rxa2ry7e2ry82s0jI2s0k2s5be2s5c2sayI2sc02sc9Q2scg2t4te2t4w47p9e47pc5m9pejny9!Ajnz4jo1rAjo5cjobzAl2ionvnhI", 937, C.List_grL, C.LineCharProperty_8, type$.LineCharProperty) : t1;
    },
    LineBreakFragmenter_LineBreakFragmenter(text) {
      if (B.getProperty(self.Intl, "v8BreakIterator", type$.nullable_Object) != null)
        return A.V8LineBreakFragmenter$(text);
      return A.FWLineBreakFragmenter$(text);
    },
    FWLineBreakFragmenter$(text) {
      return new A.FWLineBreakFragmenter(text);
    },
    V8LineBreakFragmenter$(text) {
      return new A.V8LineBreakFragmenter(A.createV8BreakIterator(), text);
    },
    breakLinesUsingV8BreakIterator(text, jsText, iterator) {
      var t1, fragmentStart, fragmentEnd, i, trailingNewlines, trailingSpaces, codeUnit, type,
        breaks = B._setArrayType([], type$.JSArray_LineBreakFragment);
      B._callMethodUnchecked1(iterator, "adoptText", jsText, type$.void);
      A.DomV8BreakIteratorExtension_first(iterator);
      for (t1 = text.length, fragmentStart = 0; !B.boolConversionCheck(J.$eq$(A.DomV8BreakIteratorExtension_next(iterator), -1)); fragmentStart = fragmentEnd) {
        fragmentEnd = J.toInt$0$n(A.DomV8BreakIteratorExtension_current(iterator));
        for (i = fragmentStart, trailingNewlines = 0, trailingSpaces = 0; i < fragmentEnd; ++i) {
          if (!(i >= 0 && i < t1))
            return B.ioore(text, i);
          codeUnit = text.charCodeAt(i);
          if (B.boolConversionCheck(C.Set_k2M5.contains$1(0, codeUnit))) {
            ++trailingNewlines;
            ++trailingSpaces;
          } else if (B.boolConversionCheck(C.Set_GJovi.contains$1(0, codeUnit)))
            ++trailingSpaces;
          else if (trailingSpaces > 0) {
            D.JSArray_methods.add$1(breaks, A.LineBreakFragment$(fragmentStart, i, C.LineBreakType_0, trailingNewlines, trailingSpaces));
            fragmentStart = i;
            trailingNewlines = 0;
            trailingSpaces = 0;
          }
        }
        if (trailingNewlines > 0)
          type = C.LineBreakType_2;
        else
          type = fragmentEnd === t1 ? C.LineBreakType_3 : C.LineBreakType_0;
        D.JSArray_methods.add$1(breaks, A.LineBreakFragment$(fragmentStart, fragmentEnd, type, trailingNewlines, trailingSpaces));
      }
      if (B.boolConversionCheck(D.JSArray_methods.get$isEmpty(breaks)) || B.boolConversionCheck(J.$eq$(D.JSArray_methods.get$last(breaks).type, C.LineBreakType_2)))
        D.JSArray_methods.add$1(breaks, A.LineBreakFragment$(t1, t1, C.LineBreakType_3, 0, 0));
      return breaks;
    },
    LineBreakFragment$(start, end, type, trailingNewlines, trailingSpaces) {
      return new A.LineBreakFragment(type, trailingNewlines, trailingSpaces, start, end);
    },
    _isHardBreak(prop) {
      return prop === C.LineCharProperty_2 || prop === C.LineCharProperty_3;
    },
    _isALorHL(prop) {
      return prop === C.LineCharProperty_8 || prop === C.LineCharProperty_20;
    },
    _isKoreanSyllable(prop) {
      return prop === C.LineCharProperty_21 || prop === C.LineCharProperty_22 || prop === C.LineCharProperty_23 || prop === C.LineCharProperty_32 || prop === C.LineCharProperty_33;
    },
    _hasEastAsianWidthFWH(charCode) {
      var t1 = true;
      if (charCode !== 9001)
        if (!(charCode >= 12296 && charCode <= 12317))
          t1 = charCode >= 65047 && charCode <= 65378;
      return t1;
    },
    _isSurrogatePair(codePoint) {
      return codePoint != null && codePoint > 65535;
    },
    _computeLineBreakFragments(text) {
      var codePoint, curr, setBreak, t1, index, t2, baseOfCombiningMarks, regionalIndicatorCount, t3, _box_0 = {},
        fragments = B._setArrayType([], type$.JSArray_LineBreakFragment);
      _box_0.prev1 = _box_0.prev2 = null;
      codePoint = A.getCodePoint(text, 0);
      curr = A.lineLookup().findForChar$1(codePoint);
      _box_0.fragmentStart = _box_0.trailingSpaces = _box_0.trailingNewlines = _box_0.index = 0;
      setBreak = new A._computeLineBreakFragments_setBreak(_box_0, text, fragments);
      setBreak.call$2(C.LineBreakType_1, 2);
      t1 = _box_0.index;
      if (typeof t1 !== "number")
        return t1.$add();
      index = t1 + 1;
      _box_0.index = index;
      t1 = text.length;
      t2 = index;
      baseOfCombiningMarks = C.LineCharProperty_8;
      regionalIndicatorCount = 0;
      while (t2 <= t1) {
        c$0: {
          _box_0.prev2 = _box_0.prev1;
          _box_0.prev1 = curr;
          if (B.boolConversionCheck(A._isSurrogatePair(codePoint))) {
            setBreak.call$2(C.LineBreakType_1, -1);
            t2 = _box_0.index;
            if (typeof t2 !== "number")
              return t2.$add();
            t2 = _box_0.index = t2 + 1;
          }
          codePoint = A.getCodePoint(text, t2);
          curr = A.lineLookup().findForChar$1(codePoint);
          regionalIndicatorCount = B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_35)) ? regionalIndicatorCount + 1 : 0;
          t2 = _box_0.prev1;
          if (B.boolConversionCheck(A._isHardBreak(t2))) {
            setBreak.call$2(C.LineBreakType_2, 5);
            break c$0;
          }
          if (B.boolConversionCheck(J.$eq$(t2, C.LineCharProperty_4))) {
            if (curr === C.LineCharProperty_2)
              setBreak.call$2(C.LineBreakType_1, 5);
            else
              setBreak.call$2(C.LineBreakType_2, 5);
            break c$0;
          }
          if (B.boolConversionCheck(A._isHardBreak(curr)) || curr === C.LineCharProperty_4) {
            setBreak.call$2(C.LineBreakType_1, 6);
            break c$0;
          }
          t2 = _box_0.index;
          if (typeof t2 !== "number")
            return t2.$ge();
          if (t2 >= t1)
            break;
          if (curr === C.LineCharProperty_5 || curr === C.LineCharProperty_25) {
            setBreak.call$2(C.LineBreakType_1, 7);
            break c$0;
          }
          if (B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_5))) {
            setBreak.call$2(C.LineBreakType_0, 18);
            break c$0;
          }
          if (B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_25))) {
            setBreak.call$2(C.LineBreakType_0, 8);
            break c$0;
          }
          if (B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_26))) {
            setBreak.call$2(C.LineBreakType_1, 8);
            break c$0;
          }
          if (!B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_0)) && !B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_26))) {
            baseOfCombiningMarks = _box_0.prev1;
            if (baseOfCombiningMarks == null)
              baseOfCombiningMarks = C.LineCharProperty_8;
          }
          if (curr === C.LineCharProperty_0 || curr === C.LineCharProperty_26) {
            if (baseOfCombiningMarks !== C.LineCharProperty_5) {
              if (baseOfCombiningMarks === C.LineCharProperty_35)
                --regionalIndicatorCount;
              setBreak.call$2(C.LineBreakType_1, 9);
              curr = baseOfCombiningMarks;
              break c$0;
            }
            curr = C.LineCharProperty_8;
          }
          if (B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_0)) || B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_26)))
            _box_0.prev1 = baseOfCombiningMarks;
          if (curr === C.LineCharProperty_29 || B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_29))) {
            setBreak.call$2(C.LineBreakType_1, 11);
            break c$0;
          }
          if (B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_18))) {
            setBreak.call$2(C.LineBreakType_1, 12);
            break c$0;
          }
          if (!(B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_5)) || B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_1)) || B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_14))) && curr === C.LineCharProperty_18) {
            setBreak.call$2(C.LineBreakType_1, 12);
            break c$0;
          }
          if (!B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_5)))
            t2 = curr === C.LineCharProperty_17 || curr === C.LineCharProperty_12 || curr === C.LineCharProperty_6 || curr === C.LineCharProperty_13 || curr === C.LineCharProperty_15;
          else
            t2 = false;
          if (t2) {
            setBreak.call$2(C.LineBreakType_1, 13);
            break c$0;
          }
          if (B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_11))) {
            setBreak.call$2(C.LineBreakType_1, 14);
            break c$0;
          }
          if (B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_7)) && curr === C.LineCharProperty_11) {
            setBreak.call$2(C.LineBreakType_1, 15);
            break c$0;
          }
          if ((B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_17)) || B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_12))) && curr === C.LineCharProperty_24) {
            setBreak.call$2(C.LineBreakType_1, 16);
            break c$0;
          }
          if (B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_27)) && curr === C.LineCharProperty_27) {
            setBreak.call$2(C.LineBreakType_1, 17);
            break c$0;
          }
          if (B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_7)) || curr === C.LineCharProperty_7) {
            setBreak.call$2(C.LineBreakType_1, 19);
            break c$0;
          }
          if (B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_34)) || curr === C.LineCharProperty_34) {
            setBreak.call$2(C.LineBreakType_0, 20);
            break c$0;
          }
          if (curr === C.LineCharProperty_1 || curr === C.LineCharProperty_14 || curr === C.LineCharProperty_24 || B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_19))) {
            setBreak.call$2(C.LineBreakType_1, 21);
            break c$0;
          }
          if (B.boolConversionCheck(J.$eq$(_box_0.prev2, C.LineCharProperty_20)))
            t2 = B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_14)) || B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_1));
          else
            t2 = false;
          if (t2) {
            setBreak.call$2(C.LineBreakType_1, 21);
            break c$0;
          }
          if (B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_15)) && curr === C.LineCharProperty_20) {
            setBreak.call$2(C.LineBreakType_1, 21);
            break c$0;
          }
          if (curr === C.LineCharProperty_28) {
            setBreak.call$2(C.LineBreakType_1, 22);
            break c$0;
          }
          t2 = _box_0.prev1;
          if (!(B.boolConversionCheck(A._isALorHL(t2)) && curr === C.LineCharProperty_16))
            t2 = B.boolConversionCheck(J.$eq$(t2, C.LineCharProperty_16)) && B.boolConversionCheck(A._isALorHL(curr));
          else
            t2 = true;
          if (t2) {
            setBreak.call$2(C.LineBreakType_1, 23);
            break c$0;
          }
          if (B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_9)))
            t2 = curr === C.LineCharProperty_30 || curr === C.LineCharProperty_31 || curr === C.LineCharProperty_36;
          else
            t2 = false;
          if (t2) {
            setBreak.call$2(C.LineBreakType_1, 23);
            break c$0;
          }
          if ((B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_30)) || B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_31)) || B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_36))) && curr === C.LineCharProperty_10) {
            setBreak.call$2(C.LineBreakType_1, 23);
            break c$0;
          }
          if ((B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_9)) || B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_10))) && B.boolConversionCheck(A._isALorHL(curr))) {
            setBreak.call$2(C.LineBreakType_1, 24);
            break c$0;
          }
          t2 = _box_0.prev1;
          if (B.boolConversionCheck(A._isALorHL(t2)))
            t3 = curr === C.LineCharProperty_9 || curr === C.LineCharProperty_10;
          else
            t3 = false;
          if (t3) {
            setBreak.call$2(C.LineBreakType_1, 24);
            break c$0;
          }
          if (B.boolConversionCheck(J.$eq$(t2, C.LineCharProperty_17)) || B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_12)) || B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_16)))
            t2 = curr === C.LineCharProperty_10 || curr === C.LineCharProperty_9;
          else
            t2 = false;
          if (t2) {
            setBreak.call$2(C.LineBreakType_1, 25);
            break c$0;
          }
          if ((B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_10)) || B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_9))) && curr === C.LineCharProperty_11) {
            setBreak.call$2(C.LineBreakType_1, 25);
            break c$0;
          }
          if ((B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_10)) || B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_9)) || B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_14)) || B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_13)) || B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_16)) || B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_15))) && curr === C.LineCharProperty_16) {
            setBreak.call$2(C.LineBreakType_1, 25);
            break c$0;
          }
          if (B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_21)))
            t2 = curr === C.LineCharProperty_21 || curr === C.LineCharProperty_22 || curr === C.LineCharProperty_32 || curr === C.LineCharProperty_33;
          else
            t2 = false;
          if (t2) {
            setBreak.call$2(C.LineBreakType_1, 26);
            break c$0;
          }
          if (B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_22)) || B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_32)))
            t2 = curr === C.LineCharProperty_22 || curr === C.LineCharProperty_23;
          else
            t2 = false;
          if (t2) {
            setBreak.call$2(C.LineBreakType_1, 26);
            break c$0;
          }
          if ((B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_23)) || B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_33))) && curr === C.LineCharProperty_23) {
            setBreak.call$2(C.LineBreakType_1, 26);
            break c$0;
          }
          t2 = _box_0.prev1;
          if (B.boolConversionCheck(A._isKoreanSyllable(t2)) && curr === C.LineCharProperty_10) {
            setBreak.call$2(C.LineBreakType_1, 27);
            break c$0;
          }
          if (B.boolConversionCheck(J.$eq$(t2, C.LineCharProperty_9)) && B.boolConversionCheck(A._isKoreanSyllable(curr))) {
            setBreak.call$2(C.LineBreakType_1, 27);
            break c$0;
          }
          t2 = _box_0.prev1;
          if (B.boolConversionCheck(A._isALorHL(t2)) && B.boolConversionCheck(A._isALorHL(curr))) {
            setBreak.call$2(C.LineBreakType_1, 28);
            break c$0;
          }
          if (B.boolConversionCheck(J.$eq$(t2, C.LineCharProperty_13)) && B.boolConversionCheck(A._isALorHL(curr))) {
            setBreak.call$2(C.LineBreakType_1, 29);
            break c$0;
          }
          t2 = _box_0.prev1;
          if ((B.boolConversionCheck(A._isALorHL(t2)) || B.boolConversionCheck(J.$eq$(t2, C.LineCharProperty_16))) && curr === C.LineCharProperty_11 && !B.boolConversionCheck(A._hasEastAsianWidthFWH(D.JSString_methods.codeUnitAt$1(text, _box_0.index)))) {
            setBreak.call$2(C.LineBreakType_1, 30);
            break c$0;
          }
          t2 = false;
          if (B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_12))) {
            t3 = _box_0.index;
            if (typeof t3 !== "number")
              return t3.$sub();
            if (!B.boolConversionCheck(A._hasEastAsianWidthFWH(D.JSString_methods.codeUnitAt$1(text, t3 - 1))))
              t2 = B.boolConversionCheck(A._isALorHL(curr)) || curr === C.LineCharProperty_16;
          }
          if (t2) {
            setBreak.call$2(C.LineBreakType_1, 30);
            break c$0;
          }
          if (curr === C.LineCharProperty_35) {
            if (B.boolConversionCheck(D.JSInt_methods.get$isOdd(regionalIndicatorCount)))
              setBreak.call$2(C.LineBreakType_1, 30);
            else
              setBreak.call$2(C.LineBreakType_0, 30);
            break c$0;
          }
          if (B.boolConversionCheck(J.$eq$(_box_0.prev1, C.LineCharProperty_31)) && curr === C.LineCharProperty_36) {
            setBreak.call$2(C.LineBreakType_1, 30);
            break c$0;
          }
          setBreak.call$2(C.LineBreakType_0, 31);
        }
        t2 = _box_0.index;
        if (typeof t2 !== "number")
          return t2.$add();
        index = t2 + 1;
        _box_0.index = index;
        t2 = index;
      }
      setBreak.call$2(C.LineBreakType_3, 3);
      return fragments;
    },
    RulerHost$() {
      var t1 = new A.RulerHost(A.createDomElement("flt-ruler-host"));
      t1.RulerHost$0();
      return t1;
    },
    measureSubstring(canvasContext, text, start, end, letterSpacing) {
      var cssFont, width, t1;
      if (start === end)
        return 0;
      cssFont = A.DomCanvasRenderingContext2DExtension_get_font(canvasContext);
      if (start === $._lastStart && end === $._lastEnd && text === $._lastText && cssFont === $._lastCssFont)
        width = $._lastWidth;
      else {
        t1 = A.DomTextMetricsExtension_get_width(A.DomCanvasRenderingContext2DExtension_measureText(canvasContext, start === 0 && end === text.length ? text : D.JSString_methods.substring$2(text, start, end)));
        t1.toString;
        width = t1;
      }
      $._lastStart = start;
      $._lastEnd = end;
      $._lastText = text;
      $._lastCssFont = cssFont;
      $._lastWidth = width;
      if (letterSpacing == null)
        letterSpacing = 0;
      return A._roundWidth(letterSpacing !== 0 ? width + letterSpacing * (end - start) : width);
    },
    _roundWidth(width) {
      var t1 = D.JSNumber_methods.round$0(width * 100);
      if (typeof t1 !== "number")
        return t1.$div();
      return t1 / 100;
    },
    TextPaintService$(paragraph) {
      return new A.TextPaintService(paragraph);
    },
    EngineLineMetrics$(ascent, baseline, descent, hardBreak, height, left, lineNumber, unscaledAscent, width) {
      return new A.EngineLineMetrics(hardBreak, ascent, descent, unscaledAscent, height, width, left, baseline, lineNumber);
    },
    ParagraphLine$(ascent, baseline, descent, endIndex, fragments, hardBreak, height, left, lineNumber, paragraph, spaceCount, startIndex, textDirection, trailingNewlines, trailingSpaces, width, widthWithTrailingSpaces) {
      return new A.ParagraphLine(A.EngineLineMetrics$(ascent, baseline, descent, hardBreak, height, left, lineNumber, ascent, width), startIndex, endIndex, trailingNewlines, trailingSpaces, spaceCount, widthWithTrailingSpaces, fragments, textDirection, paragraph);
    },
    EngineParagraphStyle$(ellipsis, fontFamily, fontSize, fontStyle, fontWeight, height, locale, maxLines, strutStyle, textAlign, textDirection, textHeightBehavior) {
      type$.nullable_EngineStrutStyle._as(strutStyle);
      return new A.EngineParagraphStyle(textAlign, textDirection, fontWeight, fontStyle, maxLines, fontFamily, fontSize, height === 0 ? null : height, textHeightBehavior, strutStyle, ellipsis, locale);
    },
    EngineTextStyle$only(background, color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, leadingDistribution, letterSpacing, locale, shadows, textBaseline, wordSpacing) {
      var t1 = fontFamily == null,
        t2 = t1 ? "" : fontFamily;
      return new A.EngineTextStyle(color, decoration, decorationColor, decorationStyle, decorationThickness, fontWeight, fontStyle, textBaseline, !t1, t2, fontFamilyFallback, fontFeatures, fontVariations, fontSize, letterSpacing, wordSpacing, height, leadingDistribution, locale, background, foreground, shadows);
    },
    FontStyleExtension_toCssString(_this) {
      return _this === C.FontStyle_0 ? "normal" : "italic";
    },
    FontWeightExtension_toCssString(_this) {
      return A.fontWeightIndexToCss(_this.index);
    },
    fontWeightIndexToCss(fontWeightIndex) {
      switch (fontWeightIndex) {
        case 0:
          return "100";
        case 1:
          return "200";
        case 2:
          return "300";
        case 3:
          return "normal";
        case 4:
          return "500";
        case 5:
          return "600";
        case 6:
          return "bold";
        case 7:
          return "800";
        case 8:
          return "900";
      }
      return "";
    },
    applyTextStyleToElement(element, style) {
      var strokeWidth, adaptedWidth, background, fontSize, shadows, textDecoration, decorationColor, fontFeatures, fontVariations, _null = null,
        cssStyle = B.getProperty(element, "style", type$.JavaScriptObject),
        t1 = style.foreground,
        t2 = t1 == null,
        color = t2 ? _null : t1.get$color();
      if (color == null)
        color = style.color;
      if (B.boolConversionCheck(J.$eq$(t2 ? _null : t1.get$style(), C.PaintingStyle_1))) {
        A.DomCSSStyleDeclarationExtension_set_color(cssStyle, "transparent");
        strokeWidth = t2 ? _null : t1.get$strokeWidth();
        if (strokeWidth != null && strokeWidth > 0)
          adaptedWidth = strokeWidth;
        else {
          t1 = A.window().get$devicePixelRatio();
          if (typeof t1 !== "number")
            return B.iae(t1);
          adaptedWidth = 1 / t1;
        }
        A.DomCSSStyleDeclarationExtension_set_textStroke(cssStyle, B.S(adaptedWidth) + "px " + B.S(color == null ? _null : A.CssColor_toCssString(color)));
      } else if (color != null)
        A.DomCSSStyleDeclarationExtension_set_color(cssStyle, A.CssColor_toCssString(color));
      t1 = style.background;
      background = t1 == null ? _null : t1.get$color();
      if (background != null)
        A.DomCSSStyleDeclarationExtension_set_backgroundColor(cssStyle, A.CssColor_toCssString(background));
      fontSize = style.fontSize;
      if (fontSize != null)
        A.DomCSSStyleDeclarationExtension_set_fontSize(cssStyle, B.S(D.JSNumber_methods.floor$0(fontSize)) + "px");
      t1 = style.fontWeight;
      if (t1 != null)
        A.DomCSSStyleDeclarationExtension_set_fontWeight(cssStyle, A.FontWeightExtension_toCssString(t1));
      t1 = style.fontStyle;
      if (t1 != null)
        A.DomCSSStyleDeclarationExtension_set_fontStyle(cssStyle, A.FontStyleExtension_toCssString(t1));
      if (B.boolConversionCheck(A.debugEmulateFlutterTesterEnvironment())) {
        t1 = A.canonicalizeFontFamily(style.get$effectiveFontFamily());
        t1.toString;
        A.DomCSSStyleDeclarationExtension_set_fontFamily(cssStyle, t1);
      } else {
        t1 = A.canonicalizeFontFamily(style.fontFamily);
        t1.toString;
        A.DomCSSStyleDeclarationExtension_set_fontFamily(cssStyle, t1);
      }
      t1 = style.letterSpacing;
      if (t1 != null)
        A.DomCSSStyleDeclarationExtension_set_letterSpacing(cssStyle, B.S(t1) + "px");
      t1 = style.wordSpacing;
      if (t1 != null)
        A.DomCSSStyleDeclarationExtension_set_wordSpacing(cssStyle, B.S(t1) + "px");
      t1 = style.decoration;
      shadows = style.shadows;
      if (shadows != null)
        A.DomCSSStyleDeclarationExtension_set_textShadow(cssStyle, A._shadowListToCss(shadows));
      if (t1 != null) {
        textDecoration = A._textDecorationToCssString(t1, style.decorationStyle);
        if (textDecoration != null) {
          if (B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_1)))
            A.setElementStyle(element, "-webkit-text-decoration", textDecoration);
          else
            A.DomCSSStyleDeclarationExtension_set_textDecoration(cssStyle, textDecoration);
          decorationColor = style.decorationColor;
          if (decorationColor != null)
            A.DomCSSStyleDeclarationExtension_set_textDecorationColor(cssStyle, A.CssColor_toCssString(decorationColor));
        }
      }
      fontFeatures = style.fontFeatures;
      if (fontFeatures != null && B.boolConversionCheck(J.get$isNotEmpty$asx(fontFeatures)))
        A.DomCSSStyleDeclarationExtension_set_fontFeatureSettings(cssStyle, A._fontFeatureListToCss(fontFeatures));
      fontVariations = style.fontVariations;
      if (fontVariations != null && B.boolConversionCheck(J.get$isNotEmpty$asx(fontVariations)))
        A.DomCSSStyleDeclarationExtension_setProperty(cssStyle, "font-variation-settings", A._fontVariationListToCss(fontVariations));
    },
    _shadowListToCss(shadows) {
      var sb, len, i, shadow, t2,
        t1 = J.getInterceptor$asx(shadows);
      if (B.boolConversionCheck(t1.get$isEmpty(shadows)))
        return "";
      sb = B.StringBuffer$("");
      len = t1.get$length(shadows);
      for (i = 0; i < len; ++i) {
        if (i !== 0)
          sb.write$1(",");
        shadow = t1.$index(shadows, i);
        t2 = shadow.offset;
        sb.write$1(B.S(t2.get$dx()) + "px " + B.S(t2.get$dy()) + "px " + B.S(shadow.blurRadius) + "px " + B.S(A.CssColor_toCssString(shadow.color)));
      }
      return sb.toString$0(0);
    },
    _fontFeatureListToCss(fontFeatures) {
      var i, fontFeature,
        sb = B.StringBuffer$(""),
        t1 = J.getInterceptor$asx(fontFeatures),
        len = t1.get$length(fontFeatures);
      for (i = 0; i < len; ++i) {
        if (i !== 0)
          sb.write$1(",");
        fontFeature = t1.$index(fontFeatures, i);
        sb.write$1('"' + B.S(fontFeature.get$feature()) + '" ' + B.S(fontFeature.get$value()));
      }
      return sb.toString$0(0);
    },
    _fontVariationListToCss(fontVariations) {
      var i, fontVariation,
        sb = B.StringBuffer$(""),
        t1 = J.getInterceptor$asx(fontVariations),
        len = t1.get$length(fontVariations);
      for (i = 0; i < len; ++i) {
        if (i !== 0)
          sb.write$1(",");
        fontVariation = t1.$index(fontVariations, i);
        sb.write$1('"' + B.S(fontVariation.axis) + '" ' + B.S(fontVariation.value));
      }
      return sb.toString$0(0);
    },
    _textDecorationToCssString(decoration, decorationStyle) {
      var decorations = B.StringBuffer$("");
      if (decoration != null) {
        if (B.boolConversionCheck(decoration.contains$1(0, C.TextDecoration_1)))
          decorations.write$1("underline ");
        if (B.boolConversionCheck(decoration.contains$1(0, C.TextDecoration_2)))
          decorations.write$1("overline ");
        if (B.boolConversionCheck(decoration.contains$1(0, C.TextDecoration_4)))
          decorations.write$1("line-through ");
      }
      if (decorationStyle != null)
        decorations.write$1(A._decorationStyleToCssString(decorationStyle));
      return B.boolConversionCheck(decorations.get$isEmpty(0)) ? null : decorations.toString$0(0);
    },
    _decorationStyleToCssString(decorationStyle) {
      switch (decorationStyle.index) {
        case 3:
          return "dashed";
        case 2:
          return "dotted";
        case 1:
          return "double";
        case 0:
          return "solid";
        case 4:
          return "wavy";
        default:
          return null;
      }
    },
    textAlignToCssValue(align, textDirection) {
      switch (align) {
        case C.TextAlign_0:
          return "left";
        case C.TextAlign_1:
          return "right";
        case C.TextAlign_2:
          return "center";
        case C.TextAlign_3:
          return "justify";
        case C.TextAlign_5:
          switch (textDirection.index) {
            case 1:
              return "end";
            case 0:
              return "left";
          }
          break;
        case C.TextAlign_4:
          switch (textDirection.index) {
            case 1:
              return "";
            case 0:
              return "right";
          }
          break;
        case null:
        case void 0:
          return "";
      }
    },
    buildCssFontString(fontFamily, fontSize, fontStyle, fontWeight) {
      var cssFontWeight, cssFontSize, t1,
        cssFontStyle = fontStyle == null ? null : A.FontStyleExtension_toCssString(fontStyle);
      if (cssFontStyle == null)
        cssFontStyle = "normal";
      cssFontWeight = fontWeight == null ? null : A.FontWeightExtension_toCssString(fontWeight);
      if (cssFontWeight == null)
        cssFontWeight = "normal";
      cssFontSize = D.JSNumber_methods.floor$0(fontSize == null ? 14 : fontSize);
      t1 = A.canonicalizeFontFamily(fontFamily);
      t1.toString;
      return cssFontStyle + " " + cssFontWeight + " " + B.S(cssFontSize) + "px " + t1;
    },
    TextHeightStyle$(fontFamily, fontFeatures, fontSize, fontVariations, height) {
      return new A.TextHeightStyle(fontFamily, fontSize, height, fontFeatures, fontVariations);
    },
    TextDimensions$(_element) {
      return new A.TextDimensions(_element);
    },
    TextHeightRuler$(textHeightStyle, rulerHost) {
      return new A.TextHeightRuler(textHeightStyle, rulerHost, A.TextDimensions$(A.DomDocumentExtension_createElement(self.document, "flt-paragraph")));
    },
    BidiFragmenter$(text) {
      return new A.BidiFragmenter(text);
    },
    BidiFragment$(start, end, textDirection, fragmentFlow) {
      return new A.BidiFragment(textDirection, fragmentFlow, start, end);
    },
    _computeBidiFragments(text) {
      var textDirection, fragmentFlow, t1, fragmentStart, i, charTextDirection,
        fragments = B._setArrayType([], type$.JSArray_BidiFragment);
      if (B.boolConversionCheck(D.JSString_methods.get$isEmpty(text))) {
        D.JSArray_methods.add$1(fragments, C.BidiFragment_ZCw);
        return fragments;
      }
      textDirection = A._getTextDirection(text, 0);
      fragmentFlow = A._getFragmentFlow(text, 0);
      for (t1 = text.length, fragmentStart = 0, i = 1; i < t1; ++i) {
        charTextDirection = A._getTextDirection(text, i);
        if (charTextDirection != textDirection) {
          D.JSArray_methods.add$1(fragments, A.BidiFragment$(fragmentStart, i, textDirection, fragmentFlow));
          fragmentFlow = A._getFragmentFlow(text, i);
          textDirection = charTextDirection;
          fragmentStart = i;
        } else if (fragmentFlow === C.FragmentFlow_2)
          fragmentFlow = A._getFragmentFlow(text, i);
      }
      D.JSArray_methods.add$1(fragments, A.BidiFragment$(fragmentStart, t1, textDirection, fragmentFlow));
      return fragments;
    },
    _getTextDirection(text, i) {
      var textDirection,
        t1 = A.getCodePoint(text, i);
      t1.toString;
      if (B.boolConversionCheck(A._isDigit(t1)) || B.boolConversionCheck(A._isMashriqiDigit(t1)))
        return C.TextDirection_1;
      textDirection = $.$get$_textDirectionLookup().findForChar$1(t1);
      if (textDirection != null)
        return textDirection;
      return null;
    },
    _getFragmentFlow(text, i) {
      var t1 = A.getCodePoint(text, i);
      t1.toString;
      if (B.boolConversionCheck(A._isDigit(t1)))
        return C.FragmentFlow_2;
      if (B.boolConversionCheck(A._isMashriqiDigit(t1)))
        return C.FragmentFlow_1;
      switch ($.$get$_textDirectionLookup().findForChar$1(t1)) {
        case C.TextDirection_1:
          return C.FragmentFlow_0;
        case C.TextDirection_0:
          return C.FragmentFlow_1;
        case null:
        case void 0:
          return C.FragmentFlow_3;
      }
    },
    _isDigit(codePoint) {
      return codePoint >= 48 && codePoint <= 57;
    },
    _isMashriqiDigit(codePoint) {
      return codePoint >= 1632 && codePoint <= 1641;
    },
    UnicodeRange$(start, end, property, $P) {
      return new A.UnicodeRange(start, end, property, $P._eval$1("UnicodeRange<0>"));
    },
    isUtf16Surrogate(char) {
      return (char & 63488) === 55296;
    },
    combineSurrogatePair(text, index) {
      var hi, t2,
        t1 = text.length;
      if (index >>> 0 !== index || index >= t1)
        return B.ioore(text, index);
      hi = text.charCodeAt(index);
      t2 = index + 1;
      if (!(t2 < t1))
        return B.ioore(text, t2);
      return (hi >>> 6 & 31) + 1 << 16 | (hi & 63) << 10 | text.charCodeAt(t2) & 1023;
    },
    getCodePoint(text, index) {
      var t1, char;
      if (index < 0 || index >= text.length)
        return null;
      t1 = text.length;
      if (index >>> 0 !== index || index >= t1)
        return B.ioore(text, index);
      char = text.charCodeAt(index);
      if (B.boolConversionCheck(A.isUtf16Surrogate(char)) && index < t1 - 1)
        return A.combineSurrogatePair(text, index);
      return char;
    },
    UnicodePropertyLookup$(ranges, defaultProperty, $P) {
      return new A.UnicodePropertyLookup(ranges, defaultProperty, B.LinkedHashMap_LinkedHashMap$_empty(type$.int, $P), $P._eval$1("UnicodePropertyLookup<0>"));
    },
    UnicodePropertyLookup_UnicodePropertyLookup$fromPackedData(packedData, singleRangesCount, propertyEnumValues, defaultProperty, $P) {
      return A.UnicodePropertyLookup$(A._unpackProperties(packedData, singleRangesCount, propertyEnumValues, $P), defaultProperty, $P);
    },
    _unpackProperties(packedData, singleRangesCount, propertyEnumValues, $P) {
      var t1, i, rangeStart, rangeEnd, i0,
        ranges = B._setArrayType([], $P._eval$1("JSArray<UnicodeRange<0>>")),
        dataLength = packedData.length;
      for (t1 = J.getInterceptor$asx(propertyEnumValues), i = 0; i < dataLength; i = i0) {
        rangeStart = A._consumeInt(packedData, i);
        i += 4;
        if (!(i < dataLength))
          return B.ioore(packedData, i);
        if (packedData.charCodeAt(i) === 33) {
          ++i;
          rangeEnd = rangeStart;
        } else {
          rangeEnd = A._consumeInt(packedData, i);
          i += 4;
        }
        if (!(i < dataLength))
          return B.ioore(packedData, i);
        i0 = i + 1;
        D.JSArray_methods.add$1(ranges, A.UnicodeRange$(rangeStart, rangeEnd, t1.$index(propertyEnumValues, A._getEnumIndexFromPackedValue(packedData.charCodeAt(i))), $P));
      }
      return ranges;
    },
    _getEnumIndexFromPackedValue(charCode) {
      if (charCode <= 90)
        return charCode - 65;
      return 26 + charCode - 97;
    },
    _consumeInt(packedData, index) {
      var digit0, digit1, digit2,
        t1 = index + 3,
        t2 = packedData.length;
      if (!(t1 >= 0 && t1 < t2))
        return B.ioore(packedData, t1);
      digit0 = A.getIntFromCharCode(packedData.charCodeAt(t1));
      t1 = index + 2;
      if (!(t1 >= 0 && t1 < t2))
        return B.ioore(packedData, t1);
      digit1 = A.getIntFromCharCode(packedData.charCodeAt(t1));
      t1 = index + 1;
      if (!(t1 >= 0 && t1 < t2))
        return B.ioore(packedData, t1);
      digit2 = A.getIntFromCharCode(packedData.charCodeAt(t1));
      if (index >>> 0 !== index || index >= t2)
        return B.ioore(packedData, index);
      return digit0 + digit1 * 36 + digit2 * 36 * 36 + A.getIntFromCharCode(packedData.charCodeAt(index)) * 36 * 36 * 36;
    },
    getIntFromCharCode(charCode) {
      if (charCode <= 57)
        return charCode - 48;
      return charCode - 97 + 10;
    },
    WordBreaker_nextBreakIndex(text, index) {
      return A.WordBreaker__findBreakIndex(C._FindBreakDirection_1_0_forward, text, index);
    },
    WordBreaker_prevBreakIndex(text, index) {
      return A.WordBreaker__findBreakIndex(C._FindBreakDirection_m1_1_backward, text, index);
    },
    WordBreaker__findBreakIndex(direction, text, index) {
      var t1 = direction.step,
        t2 = text.length,
        i = index;
      while (true) {
        if (!(i >= 0 && i <= t2))
          break;
        if (typeof t1 !== "number")
          return B.iae(t1);
        i += t1;
        if (B.boolConversionCheck(A.WordBreaker__isBreak(text, i)))
          break;
      }
      return A.clampInt(i, 0, t2);
    },
    WordBreaker__isBreak(text, index) {
      var t1, immediateRight, immediateLeft, l, r, nextRight, nextLeft, _null = null;
      if (index <= 0 || index >= text.length)
        return true;
      t1 = index - 1;
      if (!(t1 >= 0 && t1 < text.length))
        return B.ioore(text, t1);
      if (B.boolConversionCheck(A.WordBreaker__isUtf16Surrogate(text.charCodeAt(t1))))
        return false;
      immediateRight = $.$get$wordLookup().find$2(text, index);
      immediateLeft = $.$get$wordLookup().find$2(text, t1);
      if (immediateLeft === C.WordCharProperty_3 && immediateRight === C.WordCharProperty_4)
        return false;
      if (B.boolConversionCheck(A.WordBreaker__oneOf(immediateLeft, C.WordCharProperty_5, C.WordCharProperty_3, C.WordCharProperty_4, _null, _null)))
        return true;
      if (B.boolConversionCheck(A.WordBreaker__oneOf(immediateRight, C.WordCharProperty_5, C.WordCharProperty_3, C.WordCharProperty_4, _null, _null)))
        return true;
      if (immediateLeft === C.WordCharProperty_17 && immediateRight === C.WordCharProperty_17)
        return false;
      if (B.boolConversionCheck(A.WordBreaker__oneOf(immediateRight, C.WordCharProperty_6, C.WordCharProperty_8, C.WordCharProperty_16, _null, _null)))
        return false;
      for (l = 0; B.boolConversionCheck(A.WordBreaker__oneOf(immediateLeft, C.WordCharProperty_6, C.WordCharProperty_8, C.WordCharProperty_16, _null, _null));) {
        ++l;
        t1 = index - l - 1;
        if (t1 < 0)
          return true;
        immediateLeft = $.$get$wordLookup().find$2(text, t1);
      }
      if (B.boolConversionCheck(A.WordBreaker__isAHLetter(immediateLeft)) && B.boolConversionCheck(A.WordBreaker__isAHLetter(immediateRight)))
        return false;
      r = 0;
      do {
        ++r;
        nextRight = $.$get$wordLookup().find$2(text, index + r);
      } while (B.boolConversionCheck(A.WordBreaker__oneOf(nextRight, C.WordCharProperty_6, C.WordCharProperty_8, C.WordCharProperty_16, _null, _null)));
      do {
        ++l;
        nextLeft = $.$get$wordLookup().find$2(text, index - l - 1);
      } while (B.boolConversionCheck(A.WordBreaker__oneOf(nextLeft, C.WordCharProperty_6, C.WordCharProperty_8, C.WordCharProperty_16, _null, _null)));
      if (B.boolConversionCheck(A.WordBreaker__isAHLetter(immediateLeft)) && B.boolConversionCheck(A.WordBreaker__oneOf(immediateRight, C.WordCharProperty_11, C.WordCharProperty_13, C.WordCharProperty_1, _null, _null)) && B.boolConversionCheck(A.WordBreaker__isAHLetter(nextRight)))
        return false;
      if (B.boolConversionCheck(A.WordBreaker__isAHLetter(nextLeft)) && B.boolConversionCheck(A.WordBreaker__oneOf(immediateLeft, C.WordCharProperty_11, C.WordCharProperty_13, C.WordCharProperty_1, _null, _null)) && B.boolConversionCheck(A.WordBreaker__isAHLetter(immediateRight)))
        return false;
      t1 = immediateLeft === C.WordCharProperty_2;
      if (t1 && immediateRight === C.WordCharProperty_1)
        return false;
      if (t1 && immediateRight === C.WordCharProperty_0 && nextRight === C.WordCharProperty_2)
        return false;
      if (nextLeft === C.WordCharProperty_2 && immediateLeft === C.WordCharProperty_0 && immediateRight === C.WordCharProperty_2)
        return false;
      t1 = immediateLeft === C.WordCharProperty_14;
      if (t1 && immediateRight === C.WordCharProperty_14)
        return false;
      if (B.boolConversionCheck(A.WordBreaker__isAHLetter(immediateLeft)) && immediateRight === C.WordCharProperty_14)
        return false;
      if (t1 && B.boolConversionCheck(A.WordBreaker__isAHLetter(immediateRight)))
        return false;
      if (nextLeft === C.WordCharProperty_14 && B.boolConversionCheck(A.WordBreaker__oneOf(immediateLeft, C.WordCharProperty_12, C.WordCharProperty_13, C.WordCharProperty_1, _null, _null)) && immediateRight === C.WordCharProperty_14)
        return false;
      if (t1 && B.boolConversionCheck(A.WordBreaker__oneOf(immediateRight, C.WordCharProperty_12, C.WordCharProperty_13, C.WordCharProperty_1, _null, _null)) && nextRight === C.WordCharProperty_14)
        return false;
      if (immediateLeft === C.WordCharProperty_9 && immediateRight === C.WordCharProperty_9)
        return false;
      if (B.boolConversionCheck(A.WordBreaker__oneOf(immediateLeft, C.WordCharProperty_10, C.WordCharProperty_2, C.WordCharProperty_14, C.WordCharProperty_9, C.WordCharProperty_15)) && immediateRight === C.WordCharProperty_15)
        return false;
      if (immediateLeft === C.WordCharProperty_15 && B.boolConversionCheck(A.WordBreaker__oneOf(immediateRight, C.WordCharProperty_10, C.WordCharProperty_2, C.WordCharProperty_14, C.WordCharProperty_9, _null)))
        return false;
      return true;
    },
    WordBreaker__isUtf16Surrogate(value) {
      return (value & 63488) === 55296;
    },
    WordBreaker__oneOf(value, choice1, choice2, choice3, choice4, choice5) {
      if (value === choice1)
        return true;
      if (value === choice2)
        return true;
      if (choice3 != null && value === choice3)
        return true;
      if (choice4 != null && value === choice4)
        return true;
      if (choice5 != null && value === choice5)
        return true;
      return false;
    },
    WordBreaker__isAHLetter(property) {
      return A.WordBreaker__oneOf(property, C.WordCharProperty_10, C.WordCharProperty_2, null, null, null);
    },
    BrowserAutofillHints$_() {
      var t1 = type$.String;
      return new A.BrowserAutofillHints(B.LinkedHashMap_LinkedHashMap$_literal(["birthday", "bday", "birthdayDay", "bday-day", "birthdayMonth", "bday-month", "birthdayYear", "bday-year", "countryCode", "country", "countryName", "country-name", "creditCardExpirationDate", "cc-exp", "creditCardExpirationMonth", "cc-exp-month", "creditCardExpirationYear", "cc-exp-year", "creditCardFamilyName", "cc-family-name", "creditCardGivenName", "cc-given-name", "creditCardMiddleName", "cc-additional-name", "creditCardName", "cc-name", "creditCardNumber", "cc-number", "creditCardSecurityCode", "cc-csc", "creditCardType", "cc-type", "email", "email", "familyName", "family-name", "fullStreetAddress", "street-address", "gender", "sex", "givenName", "given-name", "impp", "impp", "jobTitle", "organization-title", "language", "language", "middleName", "additional-name", "name", "name", "namePrefix", "honorific-prefix", "nameSuffix", "honorific-suffix", "newPassword", "new-password", "nickname", "nickname", "oneTimeCode", "one-time-code", "organizationName", "organization", "password", "current-password", "photo", "photo", "postalCode", "postal-code", "streetAddressLevel1", "address-level1", "streetAddressLevel2", "address-level2", "streetAddressLevel3", "address-level3", "streetAddressLevel4", "address-level4", "streetAddressLine1", "address-line1", "streetAddressLine2", "address-line2", "streetAddressLine3", "address-line3", "telephoneNumber", "tel", "telephoneNumberAreaCode", "tel-area-code", "telephoneNumberCountryCode", "tel-country-code", "telephoneNumberExtension", "tel-extension", "telephoneNumberLocal", "tel-local", "telephoneNumberLocalPrefix", "tel-local-prefix", "telephoneNumberLocalSuffix", "tel-local-suffix", "telephoneNumberNational", "tel-national", "transactionAmount", "transaction-amount", "transactionCurrency", "transaction-currency", "url", "url", "username", "username"], t1, t1));
    },
    BrowserAutofillHints_instance() {
      return $.$get$BrowserAutofillHints__singletonInstance();
    },
    EngineInputAction_fromName($name) {
      switch ($name) {
        case "TextInputAction.continueAction":
        case "TextInputAction.next":
          return C.C_NextInputAction;
        case "TextInputAction.previous":
          return C.C_PreviousInputAction;
        case "TextInputAction.done":
          return C.C_DoneInputAction;
        case "TextInputAction.go":
          return C.C_GoInputAction;
        case "TextInputAction.newline":
          return C.C_EnterInputAction;
        case "TextInputAction.search":
          return C.C_SearchInputAction;
        case "TextInputAction.send":
          return C.C_SendInputAction;
        case "TextInputAction.emergencyCall":
        case "TextInputAction.join":
        case "TextInputAction.none":
        case "TextInputAction.route":
        case "TextInputAction.unspecified":
        default:
          return C.C_NoInputAction;
      }
    },
    EngineInputType_fromName($name, isDecimal, isMultiline) {
      switch ($name) {
        case "TextInputType.number":
          return isDecimal ? C.C_DecimalInputType : C.C_NumberInputType;
        case "TextInputType.phone":
          return C.C_PhoneInputType;
        case "TextInputType.emailAddress":
          return C.C_EmailInputType;
        case "TextInputType.url":
          return C.C_UrlInputType;
        case "TextInputType.multiline":
          return C.C_MultilineInputType;
        case "TextInputType.none":
          return isMultiline ? C.C_MultilineNoTextInputType : C.C_NoTextInputType;
        case "TextInputType.text":
        default:
          return C.C_TextInputType;
      }
    },
    TextCapitalizationConfig$fromInputConfiguration(inputConfiguration) {
      var t1;
      if (inputConfiguration === "TextCapitalization.words")
        t1 = C.TextCapitalization_0;
      else if (inputConfiguration === "TextCapitalization.characters")
        t1 = C.TextCapitalization_2;
      else
        t1 = inputConfiguration === "TextCapitalization.sentences" ? C.TextCapitalization_1 : C.TextCapitalization_3;
      return new A.TextCapitalizationConfig(t1);
    },
    browserHasAutofillOverlay() {
      return B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_0)) || B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_1));
    },
    _emptyCallback(_) {
    },
    _setStaticStyleAttributes(domElement) {
      var elementStyle,
        _s9_ = "classList",
        _s4_ = "none",
        _s11_ = "transparent",
        t1 = type$.JavaScriptObject;
      A.DomTokenListExtension_add(B.getProperty(domElement, _s9_, t1), "flt-text-editing");
      elementStyle = B.getProperty(domElement, "style", t1);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "forced-color-adjust", _s4_);
      A.DomCSSStyleDeclarationExtension_set_whiteSpace(elementStyle, "pre-wrap");
      A.DomCSSStyleDeclarationExtension_set_alignContent(elementStyle, "center");
      A.DomCSSStyleDeclarationExtension_set_position(elementStyle, "absolute");
      A.DomCSSStyleDeclarationExtension_set_top(elementStyle, "0");
      A.DomCSSStyleDeclarationExtension_set_left(elementStyle, "0");
      A.DomCSSStyleDeclarationExtension_set_padding(elementStyle, "0");
      A.DomCSSStyleDeclarationExtension_set_opacity(elementStyle, "1");
      A.DomCSSStyleDeclarationExtension_set_color(elementStyle, _s11_);
      A.DomCSSStyleDeclarationExtension_set_backgroundColor(elementStyle, _s11_);
      A.DomCSSStyleDeclarationExtension_set_background(elementStyle, _s11_);
      A.DomCSSStyleDeclarationExtension_set_caretColor(elementStyle, _s11_);
      A.DomCSSStyleDeclarationExtension_set_outline(elementStyle, _s4_);
      A.DomCSSStyleDeclarationExtension_set_border(elementStyle, _s4_);
      A.DomCSSStyleDeclarationExtension_set_resize(elementStyle, _s4_);
      A.DomCSSStyleDeclarationExtension_set_textShadow(elementStyle, _s4_);
      A.DomCSSStyleDeclarationExtension_set_overflow(elementStyle, "hidden");
      A.DomCSSStyleDeclarationExtension_set_transformOrigin(elementStyle, "0 0 0");
      if (B.boolConversionCheck(A.browserHasAutofillOverlay()))
        A.DomTokenListExtension_add(B.getProperty(domElement, _s9_, t1), "transparentTextEditing");
    },
    _styleAutofillElements(domElement, isOffScreen, shouldDisablePointerEvents, shouldHideElement) {
      var _s11_ = "transparent",
        _s4_ = "none",
        t1 = type$.JavaScriptObject,
        elementStyle = B.getProperty(domElement, "style", t1);
      A.DomCSSStyleDeclarationExtension_set_whiteSpace(elementStyle, "pre-wrap");
      A.DomCSSStyleDeclarationExtension_set_alignContent(elementStyle, "center");
      A.DomCSSStyleDeclarationExtension_set_padding(elementStyle, "0");
      A.DomCSSStyleDeclarationExtension_set_opacity(elementStyle, "1");
      A.DomCSSStyleDeclarationExtension_set_color(elementStyle, _s11_);
      A.DomCSSStyleDeclarationExtension_set_backgroundColor(elementStyle, _s11_);
      A.DomCSSStyleDeclarationExtension_set_background(elementStyle, _s11_);
      A.DomCSSStyleDeclarationExtension_set_outline(elementStyle, _s4_);
      A.DomCSSStyleDeclarationExtension_set_border(elementStyle, _s4_);
      A.DomCSSStyleDeclarationExtension_set_resize(elementStyle, _s4_);
      A.DomCSSStyleDeclarationExtension_set_textShadow(elementStyle, _s11_);
      A.DomCSSStyleDeclarationExtension_set_transformOrigin(elementStyle, "0 0 0");
      if (isOffScreen) {
        A.DomCSSStyleDeclarationExtension_set_top(elementStyle, "-9999px");
        A.DomCSSStyleDeclarationExtension_set_left(elementStyle, "-9999px");
      }
      if (shouldHideElement) {
        A.DomCSSStyleDeclarationExtension_set_width(elementStyle, "0");
        A.DomCSSStyleDeclarationExtension_set_height(elementStyle, "0");
      }
      if (shouldDisablePointerEvents)
        A.DomCSSStyleDeclarationExtension_set_pointerEvents(elementStyle, _s4_);
      if (B.boolConversionCheck(A.browserHasAutofillOverlay()))
        A.DomTokenListExtension_add(B.getProperty(domElement, "classList", t1), "transparentTextEditing");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "caret-color", _s11_);
    },
    _ensureEditingElementInView(element, viewId) {
      var currentView,
        isAlreadyAppended = A.DomNodeExtension_get_isConnected(element);
      if (!(isAlreadyAppended == null ? false : isAlreadyAppended))
        return;
      currentView = A.EnginePlatformDispatcher_instance().get$viewManager().findViewForElement$1(element);
      if (currentView == null)
        return;
      if (!B.boolConversionCheck(J.$eq$(currentView.viewId, viewId)))
        A._insertEditingElementInView(element, viewId);
    },
    _insertEditingElementInView(element, viewId) {
      B._callMethodUnchecked1(A.EnginePlatformDispatcher_instance().get$viewManager().$index(0, viewId).get$dom().textEditingHost, "append", element, type$.void);
    },
    EngineAutofillForm$(elements, formElement, formIdentifier, insertionReferenceNode, items, viewId) {
      return new A.EngineAutofillForm(formElement, elements, items, insertionReferenceNode, formIdentifier, viewId);
    },
    EngineAutofillForm_fromFrameworkMessage(viewId, focusedElementAutofill, fields) {
      var t1, elements, items, formElement, isSafariDesktopStrategy, ids, focusedElement, insertionReferenceNode, t2, t3, t4, t5, fieldIsFocusedElement, t6, autofill, t7, htmlElement, idBuffer, formIdentifier, form, submitButton;
      if (focusedElementAutofill == null)
        return null;
      t1 = type$.String;
      elements = B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.JavaScriptObject);
      items = B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.AutofillInfo);
      formElement = A.createDomHTMLFormElement();
      isSafariDesktopStrategy = $.$get$textEditing().get$strategy() instanceof A.SafariDesktopTextEditingStrategy;
      A.DomHTMLFormElementExtension_set_noValidate(formElement, true);
      A.DomHTMLFormElementExtension_set_method(formElement, "post");
      A.DomHTMLFormElementExtension_set_action(formElement, "#");
      A.DomEventTargetExtension_addEventListener(formElement, "submit", $.$get$preventDefaultListener(), null);
      A._styleAutofillElements(formElement, false, isSafariDesktopStrategy, true);
      ids = B.List_List$empty(true, t1);
      focusedElement = A.AutofillInfo_AutofillInfo$fromFrameworkMessage(focusedElementAutofill, C.TextCapitalizationConfig_TextCapitalization_3);
      insertionReferenceNode = null;
      if (fields != null)
        for (t1 = J.get$iterator$ax(J.cast$1$0$ax(fields, type$.Map_String_dynamic)), t2 = focusedElement.uniqueIdentifier, t3 = J.getInterceptor$ax(ids), t4 = !isSafariDesktopStrategy, t5 = type$.void, fieldIsFocusedElement = false; B.boolConversionCheck(t1.moveNext$0());) {
          t6 = t1.get$current();
          autofill = A.AutofillInfo_AutofillInfo$fromFrameworkMessage(A.JsonExtensions_readJson(t6, "autofill"), A.TextCapitalizationConfig$fromInputConfiguration(A.JsonExtensions_readString(t6, "textCapitalization")));
          t7 = autofill.uniqueIdentifier;
          t3.add$1(ids, t7);
          if (!B.boolConversionCheck(J.$eq$(t7, t2))) {
            htmlElement = A.EngineInputType_fromName(A.JsonExtensions_readString(A.JsonExtensions_readJson(t6, "inputType"), "name"), false, false).createDomElement$0();
            autofill.editingState.applyToDomElement$1(htmlElement);
            autofill.applyToDomElement$1(htmlElement);
            A._styleAutofillElements(htmlElement, false, isSafariDesktopStrategy, t4);
            items.$indexSet(0, t7, autofill);
            elements.$indexSet(0, t7, htmlElement);
            B._callMethodUnchecked1(formElement, "append", htmlElement, t5);
            if (fieldIsFocusedElement) {
              insertionReferenceNode = htmlElement;
              fieldIsFocusedElement = false;
            }
          } else
            fieldIsFocusedElement = true;
        }
      else
        J.add$1$ax(ids, focusedElement.uniqueIdentifier);
      t1 = J.getInterceptor$ax(ids);
      t1.sort$0(ids);
      idBuffer = B.StringBuffer$("");
      for (t1 = t1.get$iterator(ids); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        t3 = idBuffer.get$length(0);
        if (typeof t3 !== "number")
          return t3.$gt();
        if (t3 > 0)
          idBuffer.write$1("*");
        idBuffer.write$1(t2);
      }
      formIdentifier = idBuffer.toString$0(0);
      form = J.$index$asx($.formsOnTheDom, formIdentifier);
      if (form != null)
        B._callMethodUnchecked0(form, "remove", type$.void);
      submitButton = A.createDomHTMLInputElement();
      A.DomElementExtension_set_tabIndex(submitButton, -1);
      A._styleAutofillElements(submitButton, true, false, true);
      A.DomElementExtension_set_className(submitButton, "submitBtn");
      A.DomHTMLInputElementExtension_set_type(submitButton, "submit");
      B._callMethodUnchecked1(formElement, "append", submitButton, type$.void);
      return A.EngineAutofillForm$(elements, formElement, formIdentifier, insertionReferenceNode == null ? submitButton : insertionReferenceNode, items, viewId);
    },
    AutofillInfo$(autofillHint, editingState, placeholder, textCapitalization, uniqueIdentifier) {
      return new A.AutofillInfo(editingState, uniqueIdentifier, autofillHint, placeholder);
    },
    AutofillInfo_AutofillInfo$fromFrameworkMessage(autofill, textCapitalization) {
      var uniqueIdentifier = A.JsonExtensions_readString(autofill, "uniqueIdentifier"),
        hintsList = A.JsonExtensions_tryList(autofill, "hints"),
        firstHint = hintsList == null || B.boolConversionCheck(J.get$isEmpty$asx(hintsList)) ? null : B._asString(J.get$first$ax(hintsList)),
        editingState = A.EditingState_EditingState$fromFrameworkMessage(A.JsonExtensions_readJson(autofill, "editingValue")),
        t1 = firstHint != null ? A.BrowserAutofillHints_instance().flutterToEngine$1(firstHint) : null;
      return A.AutofillInfo$(t1, editingState, A.JsonExtensions_tryString(autofill, "hintText"), textCapitalization, uniqueIdentifier);
    },
    _replace(originalText, replacementText, replacedRange) {
      var t1 = replacedRange.start,
        t2 = replacedRange.end,
        t3 = type$.int,
        t4 = A.min(t1, t2, t3),
        normalizedRange = A.TextRange$(A.max(t1, t2, t3), t4);
      return J.$add$ansx(J.$add$ansx(normalizedRange.textBefore$1(originalText), replacementText), normalizedRange.textAfter$1(originalText));
    },
    TextEditingDeltaState$(baseOffset, composingExtent, composingOffset, deltaEnd, deltaStart, deltaText, extentOffset, oldText) {
      return new A.TextEditingDeltaState(oldText, deltaText, deltaStart, deltaEnd, baseOffset, extentOffset, composingOffset, composingExtent);
    },
    TextEditingDeltaState_inferDeltaState(newEditingState, lastEditingState, lastTextEditingDeltaState) {
      var t3, deletedLength, isCurrentlyComposing, replacementRange, textAfterDelta, isPeriodInsertion, t4, t5, t6, t7, isMatchWithinOldTextBounds, actualEnd, textAfterMatch,
        newTextEditingDeltaState = lastTextEditingDeltaState.copyWith$0(),
        t1 = lastEditingState == null,
        t2 = t1 ? null : lastEditingState.baseOffset,
        previousSelectionWasCollapsed = J.$eq$(t2, t1 ? null : lastEditingState.extentOffset),
        isTextBeingRemoved = B.boolConversionCheck(J.get$isEmpty$asx(newTextEditingDeltaState.deltaText)) && !B.boolConversionCheck(J.$eq$(newTextEditingDeltaState.deltaEnd, -1)),
        isTextBeingChangedAtActiveSelection = B.boolConversionCheck(J.get$isNotEmpty$asx(newTextEditingDeltaState.deltaText)) && !previousSelectionWasCollapsed;
      if (isTextBeingRemoved) {
        t2 = J.get$length$asx(newTextEditingDeltaState.oldText);
        t3 = newEditingState.text;
        t3.toString;
        t3 = J.get$length$asx(t3);
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t3 !== "number")
          return B.iae(t3);
        deletedLength = t2 - t3;
        t3 = newEditingState.baseOffset;
        if (!B.boolConversionCheck(J.$eq$(t3, t1 ? null : lastEditingState.baseOffset))) {
          t1 = newTextEditingDeltaState.deltaEnd;
          if (typeof t1 !== "number")
            return t1.$sub();
          newTextEditingDeltaState.set$deltaStart(t1 - deletedLength);
        } else {
          t3.toString;
          newTextEditingDeltaState.set$deltaStart(t3);
          t1 = newTextEditingDeltaState.deltaStart;
          if (typeof t1 !== "number")
            return t1.$add();
          newTextEditingDeltaState.set$deltaEnd(t1 + deletedLength);
        }
      } else if (isTextBeingChangedAtActiveSelection) {
        t1 = lastEditingState.baseOffset;
        t1.toString;
        t2 = lastEditingState.extentOffset;
        t2.toString;
        if (typeof t1 !== "number")
          return t1.$gt();
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (t1 > t2)
          t1 = t2;
        newTextEditingDeltaState.set$deltaStart(t1);
      }
      t1 = newTextEditingDeltaState.composingOffset;
      isCurrentlyComposing = t1 != null && !B.boolConversionCheck(J.$eq$(t1, newTextEditingDeltaState.composingExtent));
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(newTextEditingDeltaState.deltaText)) && previousSelectionWasCollapsed && isCurrentlyComposing) {
        t1 = newTextEditingDeltaState.composingOffset;
        t1.toString;
        newTextEditingDeltaState.set$deltaStart(t1);
      }
      if (!(B.boolConversionCheck(J.$eq$(newTextEditingDeltaState.deltaStart, -1)) && B.boolConversionCheck(J.$eq$(newTextEditingDeltaState.deltaStart, newTextEditingDeltaState.deltaEnd)))) {
        t1 = newTextEditingDeltaState.deltaStart;
        replacementRange = A.TextRange$(newTextEditingDeltaState.deltaEnd, t1);
        t1 = newTextEditingDeltaState.oldText;
        t2 = newTextEditingDeltaState.deltaText;
        textAfterDelta = A._replace(t1, t2, replacementRange);
        t3 = newEditingState.text;
        t3.toString;
        if (textAfterDelta !== t3) {
          isPeriodInsertion = J.contains$1$asx(t2, ".");
          for (t2 = J.get$iterator$ax(B.RegExp_RegExp(A.RegExp_escape(newTextEditingDeltaState.deltaText), true, false).allMatches$1(0, t3)), t4 = J.getInterceptor$asx(t1); B.boolConversionCheck(t2.moveNext$0());) {
            t5 = t2.get$current();
            t6 = t5.get$start();
            if (typeof t6 !== "number")
              return t6.$ge();
            if (t6 >= 0) {
              t6 = t5.get$end();
              t7 = t4.get$length(t1);
              if (typeof t6 !== "number")
                return t6.$le();
              if (typeof t7 !== "number")
                return B.iae(t7);
              isMatchWithinOldTextBounds = t6 <= t7;
            } else
              isMatchWithinOldTextBounds = false;
            if (!isMatchWithinOldTextBounds) {
              t6 = t5.get$start();
              t7 = J.get$length$asx(newTextEditingDeltaState.deltaText);
              if (typeof t6 !== "number")
                return t6.$add();
              if (typeof t7 !== "number")
                return B.iae(t7);
              actualEnd = t6 + t7 - 1;
              textAfterMatch = A._replace(t1, newTextEditingDeltaState.deltaText, A.TextRange$(actualEnd, t5.get$start()));
            } else {
              if (isPeriodInsertion) {
                t6 = t5.get$end();
                if (typeof t6 !== "number")
                  return t6.$sub();
                actualEnd = t6 - 1;
              } else
                actualEnd = t5.get$end();
              textAfterMatch = A._replace(t1, newTextEditingDeltaState.deltaText, A.TextRange$(actualEnd, t5.get$start()));
            }
            if (textAfterMatch === t3) {
              newTextEditingDeltaState.set$deltaStart(t5.get$start());
              newTextEditingDeltaState.deltaEnd = actualEnd;
              break;
            }
          }
        }
      }
      newTextEditingDeltaState.set$baseOffset(newEditingState.baseOffset);
      newTextEditingDeltaState.set$extentOffset(newEditingState.extentOffset);
      return newTextEditingDeltaState;
    },
    EditingState$(baseOffset, composingBaseOffset, composingExtentOffset, extentOffset, text) {
      var t1 = baseOffset == null ? 0 : baseOffset,
        t2 = type$.int;
      t1 = A.max(0, t1, t2);
      return new A.EditingState(text, t1, A.max(0, extentOffset == null ? 0 : extentOffset, t2), composingBaseOffset, composingExtentOffset);
    },
    EditingState_EditingState$fromFrameworkMessage(flutterEditingState) {
      var text = A.JsonExtensions_tryString(flutterEditingState, "text"),
        selectionBase = A.JsonExtensions_readInt(flutterEditingState, "selectionBase"),
        selectionExtent = A.JsonExtensions_readInt(flutterEditingState, "selectionExtent"),
        composingBase = A.JsonExtensions_tryInt(flutterEditingState, "composingBase"),
        composingExtent = A.JsonExtensions_tryInt(flutterEditingState, "composingExtent"),
        t1 = composingBase == null ? -1 : composingBase;
      return A.EditingState$(selectionBase, t1, composingExtent == null ? -1 : composingExtent, selectionExtent, text);
    },
    EditingState_EditingState$fromDomElement(domElement) {
      var t1, t2, t3,
        _s8_ = "backward",
        _null = null;
      if (B.boolConversionCheck(A.domInstanceOfString(domElement, "HTMLInputElement"))) {
        domElement.toString;
        if (B.boolConversionCheck(J.$eq$(A.DomHTMLInputElementExtension_get_selectionDirection(domElement), _s8_))) {
          t1 = A.DomHTMLInputElementExtension_get_value(domElement);
          t2 = A.DomHTMLInputElementExtension_get_selectionEnd(domElement);
          t2 = t2 == null ? _null : J.toInt$0$n(t2);
          t3 = A.DomHTMLInputElementExtension_get_selectionStart(domElement);
          return A.EditingState$(t2, -1, -1, t3 == null ? _null : J.toInt$0$n(t3), t1);
        } else {
          t1 = A.DomHTMLInputElementExtension_get_value(domElement);
          t2 = A.DomHTMLInputElementExtension_get_selectionStart(domElement);
          t2 = t2 == null ? _null : J.toInt$0$n(t2);
          t3 = A.DomHTMLInputElementExtension_get_selectionEnd(domElement);
          return A.EditingState$(t2, -1, -1, t3 == null ? _null : J.toInt$0$n(t3), t1);
        }
      } else if (B.boolConversionCheck(A.domInstanceOfString(domElement, "HTMLTextAreaElement"))) {
        domElement.toString;
        if (B.boolConversionCheck(J.$eq$(A.DomHTMLTextAreaElementExtension_get_selectionDirection(domElement), _s8_))) {
          t1 = A.DomHTMLTextAreaElementExtension_get_value(domElement);
          t2 = A.DomHTMLTextAreaElementExtension_get_selectionEnd(domElement);
          t2 = t2 == null ? _null : J.toInt$0$n(t2);
          t3 = A.DomHTMLTextAreaElementExtension_get_selectionStart(domElement);
          return A.EditingState$(t2, -1, -1, t3 == null ? _null : J.toInt$0$n(t3), t1);
        } else {
          t1 = A.DomHTMLTextAreaElementExtension_get_value(domElement);
          t2 = A.DomHTMLTextAreaElementExtension_get_selectionStart(domElement);
          t2 = t2 == null ? _null : J.toInt$0$n(t2);
          t3 = A.DomHTMLTextAreaElementExtension_get_selectionEnd(domElement);
          return A.EditingState$(t2, -1, -1, t3 == null ? _null : J.toInt$0$n(t3), t1);
        }
      } else
        throw B.wrapException(B.UnsupportedError$("Initialized with unsupported input type"));
    },
    InputConfiguration$fromFrameworkMessage(flutterInputConfiguration) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10,
        _s9_ = "inputType",
        _s8_ = "autofill",
        t1 = A.JsonExtensions_tryInt(flutterInputConfiguration, "viewId");
      if (t1 == null)
        t1 = 0;
      t2 = A.JsonExtensions_readString(A.JsonExtensions_readJson(flutterInputConfiguration, _s9_), "name");
      t3 = A.JsonExtensions_tryBool(A.JsonExtensions_readJson(flutterInputConfiguration, _s9_), "decimal");
      if (t3 == null)
        t3 = false;
      t4 = A.JsonExtensions_tryBool(A.JsonExtensions_readJson(flutterInputConfiguration, _s9_), "isMultiline");
      t2 = A.EngineInputType_fromName(t2, t3, t4 == null ? false : t4);
      t3 = A.JsonExtensions_tryString(flutterInputConfiguration, "inputAction");
      if (t3 == null)
        t3 = "TextInputAction.done";
      t4 = A.JsonExtensions_tryBool(flutterInputConfiguration, "obscureText");
      if (t4 == null)
        t4 = false;
      t5 = A.JsonExtensions_tryBool(flutterInputConfiguration, "readOnly");
      if (t5 == null)
        t5 = false;
      t6 = A.JsonExtensions_tryBool(flutterInputConfiguration, "autocorrect");
      if (t6 == null)
        t6 = true;
      t7 = A.TextCapitalizationConfig$fromInputConfiguration(A.JsonExtensions_readString(flutterInputConfiguration, "textCapitalization"));
      t8 = B.boolConversionCheck(flutterInputConfiguration.containsKey$1(_s8_)) ? A.AutofillInfo_AutofillInfo$fromFrameworkMessage(A.JsonExtensions_readJson(flutterInputConfiguration, _s8_), C.TextCapitalizationConfig_TextCapitalization_3) : null;
      t9 = A.JsonExtensions_tryInt(flutterInputConfiguration, "viewId");
      if (t9 == null)
        t9 = 0;
      t9 = A.EngineAutofillForm_fromFrameworkMessage(t9, A.JsonExtensions_tryJson(flutterInputConfiguration, _s8_), A.JsonExtensions_tryList(flutterInputConfiguration, "fields"));
      t10 = A.JsonExtensions_tryBool(flutterInputConfiguration, "enableDeltaModel");
      return new A.InputConfiguration(t1, t2, t3, t5, t4, t6, t10 == null ? false : t10, t8, t9, t7);
    },
    GloballyPositionedTextEditingStrategy$(owner) {
      var t1 = type$.JavaScriptObject;
      return new A.GloballyPositionedTextEditingStrategy(owner, B._setArrayType([], type$.JSArray_DomSubscription), B.createSentinel(t1), B.createSentinel(t1), B.createSentinel(t1), null);
    },
    SafariDesktopTextEditingStrategy$(owner) {
      var t1 = type$.JavaScriptObject;
      return new A.SafariDesktopTextEditingStrategy(owner, B._setArrayType([], type$.JSArray_DomSubscription), B.createSentinel(t1), B.createSentinel(t1), B.createSentinel(t1), null);
    },
    DefaultTextEditingStrategy__moveFocusToFlutterView(element, view, removeElement) {
      A.Timer_Timer(D.Duration_0, new A.DefaultTextEditingStrategy__moveFocusToFlutterView_closure(element, view, removeElement));
    },
    IOSTextEditingStrategy$(owner) {
      var t1 = type$.JavaScriptObject;
      return new A.IOSTextEditingStrategy(owner, B._setArrayType([], type$.JSArray_DomSubscription), B.createSentinel(t1), B.createSentinel(t1), B.createSentinel(t1), null);
    },
    AndroidTextEditingStrategy$(owner) {
      var t1 = type$.JavaScriptObject;
      return new A.AndroidTextEditingStrategy(owner, B._setArrayType([], type$.JSArray_DomSubscription), B.createSentinel(t1), B.createSentinel(t1), B.createSentinel(t1), null);
    },
    FirefoxTextEditingStrategy$(owner) {
      var t1 = type$.JavaScriptObject;
      return new A.FirefoxTextEditingStrategy(owner, B._setArrayType([], type$.JSArray_DomSubscription), B.createSentinel(t1), B.createSentinel(t1), B.createSentinel(t1), null);
    },
    TextInputSetClient$(clientId, configuration) {
      return new A.TextInputSetClient(clientId, configuration);
    },
    createDefaultTextEditingStrategy(textEditing) {
      var strategy;
      if (B.boolConversionCheck(J.$eq$($.$get$browser().get$operatingSystem(), C.OperatingSystem_0)))
        strategy = A.IOSTextEditingStrategy$(textEditing);
      else if (B.boolConversionCheck(J.$eq$($.$get$browser().get$operatingSystem(), C.OperatingSystem_1)))
        strategy = A.AndroidTextEditingStrategy$(textEditing);
      else if (B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_1)))
        strategy = A.SafariDesktopTextEditingStrategy$(textEditing);
      else
        strategy = B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_2)) ? A.FirefoxTextEditingStrategy$(textEditing) : A.GloballyPositionedTextEditingStrategy$(textEditing);
      return strategy;
    },
    TextInputSetEditingState$(state) {
      return new A.TextInputSetEditingState(state);
    },
    TextInputSetEditableSizeAndTransform$(geometry) {
      return new A.TextInputSetEditableSizeAndTransform(geometry);
    },
    TextInputSetStyle$(style) {
      return new A.TextInputSetStyle(style);
    },
    TextInputFinishAutofillContext$(saveForm) {
      return new A.TextInputFinishAutofillContext(saveForm);
    },
    saveForms() {
      J.forEach$1$ax($.formsOnTheDom, new A.saveForms_closure());
    },
    cleanForms() {
      var t1, t2;
      for (t1 = J.get$iterator$ax($.formsOnTheDom.get$values()), t2 = type$.void; B.boolConversionCheck(t1.moveNext$0());)
        B._callMethodUnchecked0(t1.get$current(), "remove", t2);
      J.clear$0$ax($.formsOnTheDom);
    },
    TextEditingChannel$(implementation) {
      return new A.TextEditingChannel(implementation);
    },
    HybridTextEditing$() {
      return new A.HybridTextEditing();
    },
    EditableTextStyle$(fontFamily, fontSize, fontWeight, textAlign, textDirection) {
      return new A.EditableTextStyle(fontSize, fontWeight, fontFamily, textAlign, textDirection);
    },
    EditableTextStyle_EditableTextStyle$fromFrameworkMessage(flutterStyle) {
      var t3,
        textAlignIndex = B._asInt(flutterStyle.$index(0, "textAlignIndex")),
        textDirectionIndex = B._asInt(flutterStyle.$index(0, "textDirectionIndex")),
        fontWeightIndex = B._asIntQ(flutterStyle.$index(0, "fontWeightIndex")),
        fontWeight = fontWeightIndex != null ? A.fontWeightIndexToCss(fontWeightIndex) : "normal",
        t1 = A.JsonExtensions_tryDouble(flutterStyle, "fontSize"),
        t2 = A.JsonExtensions_tryString(flutterStyle, "fontFamily");
      if (!(textAlignIndex >= 0 && textAlignIndex < 6))
        return B.ioore(C.List_44l, textAlignIndex);
      t3 = C.List_44l[textAlignIndex];
      if (!(textDirectionIndex >= 0 && textDirectionIndex < 2))
        return B.ioore(C.List_TextDirection_0_TextDirection_1, textDirectionIndex);
      return A.EditableTextStyle$(t2, t1, fontWeight, t3, C.List_TextDirection_0_TextDirection_1[textDirectionIndex]);
    },
    EditableTextGeometry$(globalTransform, height, width) {
      return new A.EditableTextGeometry(width, height, globalTransform);
    },
    EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage(encodedGeometry) {
      var transformList = B.List_List$from(J.map$1$1$ax(A.JsonExtensions_readList(encodedGeometry, "transform"), new A.EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage_closure(), type$.dynamic), true, type$.double),
        t1 = A.JsonExtensions_readDouble(encodedGeometry, "width"),
        t2 = A.JsonExtensions_readDouble(encodedGeometry, "height");
      return A.EditableTextGeometry$(A.NativeFloat32List_NativeFloat32List$fromList(transformList), t2, t1);
    },
    matrix4ToCssTransform(matrix) {
      return A.float64ListToCssTransform(matrix.get$storage());
    },
    setElementTransform(element, matrix4) {
      var t1 = B.getProperty(element, "style", type$.JavaScriptObject);
      A.DomCSSStyleDeclarationExtension_set_transformOrigin(t1, "0 0 0");
      A.DomCSSStyleDeclarationExtension_set_transform(t1, A.float64ListToCssTransform(matrix4));
    },
    float64ListToCssTransform(matrix) {
      var transformKind = A.transformKindOf(matrix);
      if (transformKind === C.TransformKind_1)
        return A.float64ListToCssTransform2d(matrix);
      else if (transformKind === C.TransformKind_2)
        return A.float64ListToCssTransform3d(matrix);
      else
        return "none";
    },
    transformKindOf(matrix) {
      var t1 = J.getInterceptor$asx(matrix);
      if (!(B.boolConversionCheck(J.$eq$(t1.$index(matrix, 15), 1)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 14), 0)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 11), 0)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 10), 1)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 9), 0)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 8), 0)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 7), 0)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 6), 0)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 3), 0)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 2), 0))))
        return C.TransformKind_2;
      if (B.boolConversionCheck(J.$eq$(t1.$index(matrix, 0), 1)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 1), 0)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 4), 0)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 5), 1)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 12), 0)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 13), 0)))
        return C.TransformKind_0;
      else
        return C.TransformKind_1;
    },
    isIdentityFloat32ListTransform(matrix) {
      return J.$eq$(A.transformKindOf(matrix), C.TransformKind_0);
    },
    float64ListToCssTransform2d(matrix) {
      var t1 = J.getInterceptor$asx(matrix);
      return "matrix(" + B.S(t1.$index(matrix, 0)) + "," + B.S(t1.$index(matrix, 1)) + "," + B.S(t1.$index(matrix, 4)) + "," + B.S(t1.$index(matrix, 5)) + "," + B.S(t1.$index(matrix, 12)) + "," + B.S(t1.$index(matrix, 13)) + ")";
    },
    float64ListToCssTransform3d(matrix) {
      var t1 = J.getInterceptor$asx(matrix);
      if (B.boolConversionCheck(J.$eq$(t1.$index(matrix, 0), 1)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 1), 0)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 2), 0)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 3), 0)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 4), 0)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 5), 1)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 6), 0)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 7), 0)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 8), 0)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 9), 0)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 10), 1)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 11), 0)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 14), 0)) && B.boolConversionCheck(J.$eq$(t1.$index(matrix, 15), 1)))
        return "translate3d(" + B.S(t1.$index(matrix, 12)) + "px, " + B.S(t1.$index(matrix, 13)) + "px, 0px)";
      else
        return "matrix3d(" + B.S(t1.$index(matrix, 0)) + "," + B.S(t1.$index(matrix, 1)) + "," + B.S(t1.$index(matrix, 2)) + "," + B.S(t1.$index(matrix, 3)) + "," + B.S(t1.$index(matrix, 4)) + "," + B.S(t1.$index(matrix, 5)) + "," + B.S(t1.$index(matrix, 6)) + "," + B.S(t1.$index(matrix, 7)) + "," + B.S(t1.$index(matrix, 8)) + "," + B.S(t1.$index(matrix, 9)) + "," + B.S(t1.$index(matrix, 10)) + "," + B.S(t1.$index(matrix, 11)) + "," + B.S(t1.$index(matrix, 12)) + "," + B.S(t1.$index(matrix, 13)) + "," + B.S(t1.$index(matrix, 14)) + "," + B.S(t1.$index(matrix, 15)) + ")";
    },
    transformRectWithMatrix(transform, rect) {
      var t1 = $.$get$_tempRectData(),
        t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, 0, rect.left);
      t2.$indexSet(t1, 1, rect.top);
      t2.$indexSet(t1, 2, rect.right);
      t2.$indexSet(t1, 3, rect.bottom);
      A.transformLTRB(transform, t1);
      t2 = J.getInterceptor$asx(t1);
      return A.Rect$fromLTRB(t2.$index(t1, 0), t2.$index(t1, 1), t2.$index(t1, 2), t2.$index(t1, 3));
    },
    transformLTRB(transform, ltrb) {
      var t3, w, t4,
        t1 = $.$get$_tempPointData(),
        t2 = ltrb.length;
      if (0 >= t2)
        return B.ioore(ltrb, 0);
      t3 = J.getInterceptor$ax(t1);
      t3.$indexSet(t1, 0, ltrb[0]);
      if (1 >= t2)
        return B.ioore(ltrb, 1);
      t3.$indexSet(t1, 4, ltrb[1]);
      t3.$indexSet(t1, 8, 0);
      t3.$indexSet(t1, 12, 1);
      if (2 >= t2)
        return B.ioore(ltrb, 2);
      t3.$indexSet(t1, 1, ltrb[2]);
      t3.$indexSet(t1, 5, ltrb[1]);
      t3.$indexSet(t1, 9, 0);
      t3.$indexSet(t1, 13, 1);
      t3.$indexSet(t1, 2, ltrb[0]);
      if (3 >= t2)
        return B.ioore(ltrb, 3);
      t3.$indexSet(t1, 6, ltrb[3]);
      t3.$indexSet(t1, 10, 0);
      t3.$indexSet(t1, 14, 1);
      t3.$indexSet(t1, 3, ltrb[2]);
      t3.$indexSet(t1, 7, ltrb[3]);
      t3.$indexSet(t1, 11, 0);
      t3.$indexSet(t1, 15, 1);
      $.$get$_tempPointMatrix().multiplyTranspose$1(transform);
      w = transform.$index(0, 15);
      if (w === 0)
        w = 1;
      t2 = J.getInterceptor$asx(t1);
      t3 = type$.double;
      t4 = A.min(A.min(A.min(t2.$index(t1, 0), t2.$index(t1, 1), t3), t2.$index(t1, 2), t3), t2.$index(t1, 3), t3);
      if (typeof t4 !== "number")
        return t4.$div();
      ltrb[0] = t4 / w;
      t4 = A.min(A.min(A.min(t2.$index(t1, 4), t2.$index(t1, 5), t3), t2.$index(t1, 6), t3), t2.$index(t1, 7), t3);
      if (typeof t4 !== "number")
        return t4.$div();
      ltrb[1] = t4 / w;
      t4 = A.max(A.max(A.max(t2.$index(t1, 0), t2.$index(t1, 1), t3), t2.$index(t1, 2), t3), t2.$index(t1, 3), t3);
      if (typeof t4 !== "number")
        return t4.$div();
      ltrb[2] = t4 / w;
      t3 = A.max(A.max(A.max(t2.$index(t1, 4), t2.$index(t1, 5), t3), t2.$index(t1, 6), t3), t2.$index(t1, 7), t3);
      if (typeof t3 !== "number")
        return t3.$div();
      ltrb[3] = t3 / w;
    },
    rectContainsOther(rect, other) {
      var t3,
        t1 = rect.left,
        t2 = other.left;
      if (typeof t1 !== "number")
        return t1.$le();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = false;
      if (t1 <= t2) {
        t1 = rect.top;
        t2 = other.top;
        if (typeof t1 !== "number")
          return t1.$le();
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (t1 <= t2) {
          t1 = rect.right;
          t2 = other.right;
          if (typeof t1 !== "number")
            return t1.$ge();
          if (typeof t2 !== "number")
            return B.iae(t2);
          if (t1 >= t2) {
            t1 = rect.bottom;
            t2 = other.bottom;
            if (typeof t1 !== "number")
              return t1.$ge();
            if (typeof t2 !== "number")
              return B.iae(t2);
            t2 = t1 >= t2;
            t1 = t2;
          } else
            t1 = t3;
        } else
          t1 = t3;
      } else
        t1 = t3;
      return t1;
    },
    CssColor_toCssString(_this) {
      return A.colorValueToCssString(_this.get$value());
    },
    colorValueToCssString(value) {
      var hexValue, t1, sb;
      if (value === 4278190080)
        return "#000000";
      if ((value & 4278190080) >>> 0 === 4278190080) {
        hexValue = D.JSInt_methods.toRadixString$1(value & 16777215, 16);
        switch (hexValue.length) {
          case 1:
            return "#00000" + hexValue;
          case 2:
            return "#0000" + hexValue;
          case 3:
            return "#000" + hexValue;
          case 4:
            return "#00" + hexValue;
          case 5:
            return "#0" + hexValue;
          default:
            return "#" + hexValue;
        }
      } else {
        t1 = D.JSInt_methods._shrOtherPositive$1(value, 24);
        sb = B.StringBuffer$("");
        sb.write$1("rgba(");
        sb.write$1(D.JSInt_methods.toString$0(D.JSInt_methods._shrOtherPositive$1(value, 16) & 255));
        sb.write$1(",");
        sb.write$1(D.JSInt_methods.toString$0(D.JSInt_methods._shrOtherPositive$1(value, 8) & 255));
        sb.write$1(",");
        sb.write$1(D.JSInt_methods.toString$0(value & 255));
        sb.write$1(",");
        sb.write$1(D.JSNumber_methods.toString$0((t1 & 255) / 255));
        sb.write$1(")");
        return sb.toString$0(0);
      }
    },
    colorComponentsToCssString(r, g, b, a) {
      var t1 = B.S(r),
        t2 = B.S(g),
        t3 = B.S(b);
      if (a === 255)
        return "rgb(" + t1 + "," + t2 + "," + t3 + ")";
      else
        return "rgba(" + t1 + "," + t2 + "," + t3 + "," + B.S(D.JSNumber_methods.toStringAsFixed$1(a / 255, 2)) + ")";
    },
    isNsErrorFailureException(e) {
      return J.$eq$(A.getJsProperty(e, "name", type$.dynamic), "NS_ERROR_FAILURE");
    },
    _fallbackFontFamily() {
      if (B.boolConversionCheck(A.isIOS15()))
        return "BlinkMacSystemFont";
      if (B.boolConversionCheck(A.isMacOrIOS()))
        return "-apple-system, BlinkMacSystemFont";
      return "Arial";
    },
    canonicalizeFontFamily(fontFamily) {
      if (B.boolConversionCheck(C.Set_GbU0l.contains$1(0, fontFamily)))
        return fontFamily;
      if (B.boolConversionCheck(A.isMacOrIOS()))
        if (fontFamily === ".SF Pro Text" || fontFamily === ".SF Pro Display" || fontFamily === ".SF UI Text" || fontFamily === ".SF UI Display")
          return A._fallbackFontFamily();
      return '"' + B.S(fontFamily) + '", ' + B.S(A._fallbackFontFamily()) + ", sans-serif";
    },
    applyWebkitClipFix(containerElement) {
      if (B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_1))) {
        containerElement.toString;
        A.DomCSSStyleDeclarationExtension_set_zIndex(B.getProperty(containerElement, "style", type$.JavaScriptObject), "0");
      }
    },
    convertSigmaToRadius(sigma) {
      return sigma * 2;
    },
    clampInt(value, min, max) {
      if (value < min)
        return min;
      else if (value > max)
        return max;
      else
        return value;
    },
    listEquals0(a, b, $T) {
      var t1, t2, index, t3;
      if (a == null)
        return b == null;
      if (b == null || !B.boolConversionCheck(J.$eq$(J.get$length$asx(a), J.get$length$asx(b))))
        return false;
      t1 = J.getInterceptor$asx(a);
      t2 = J.getInterceptor$asx(b);
      index = 0;
      while (true) {
        t3 = t1.get$length(a);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(index < t3))
          break;
        if (!B.boolConversionCheck(J.$eq$(t1.$index(a, index), t2.$index(b, index))))
          return false;
        ++index;
      }
      return true;
    },
    JsonExtensions_readJson(_this, propertyName) {
      return type$.Map_String_dynamic._as(_this.$index(0, propertyName));
    },
    JsonExtensions_tryJson(_this, propertyName) {
      return type$.nullable_Map_String_dynamic._as(_this.$index(0, propertyName));
    },
    JsonExtensions_readDynamicJson(_this, propertyName) {
      return type$.Map_dynamic_dynamic._as(_this.$index(0, propertyName));
    },
    JsonExtensions_readList(_this, propertyName) {
      return type$.List_dynamic._as(_this.$index(0, propertyName));
    },
    JsonExtensions_tryList(_this, propertyName) {
      return type$.nullable_List_dynamic._as(_this.$index(0, propertyName));
    },
    JsonExtensions_readString(_this, propertyName) {
      return B._asString(_this.$index(0, propertyName));
    },
    JsonExtensions_tryString(_this, propertyName) {
      return B._asStringQ(_this.$index(0, propertyName));
    },
    JsonExtensions_tryBool(_this, propertyName) {
      return B._asBoolQ(_this.$index(0, propertyName));
    },
    JsonExtensions_readInt(_this, propertyName) {
      return D.JSNumber_methods.toInt$0(B._asNum(_this.$index(0, propertyName)));
    },
    JsonExtensions_tryInt(_this, propertyName) {
      var t1 = B._asNumQ(_this.$index(0, propertyName));
      return t1 == null ? null : D.JSNumber_methods.toInt$0(t1);
    },
    JsonExtensions_readDouble(_this, propertyName) {
      return D.JSNumber_methods.toDouble$0(B._asNum(_this.$index(0, propertyName)));
    },
    JsonExtensions_tryDouble(_this, propertyName) {
      var t1 = B._asNumQ(_this.$index(0, propertyName));
      return t1 == null ? null : D.JSNumber_methods.toDouble$0(t1);
    },
    setElementStyle(element, $name, value) {
      var t1 = type$.JavaScriptObject;
      if (value == null)
        A.DomCSSStyleDeclarationExtension_removeProperty(B.getProperty(element, "style", t1), $name);
      else
        A.DomCSSStyleDeclarationExtension_setProperty(B.getProperty(element, "style", t1), $name, value);
    },
    setClipPath(element, value) {
      var t1, _s5_ = "style",
        _s17_ = "-webkit-clip-path",
        _s9_ = "clip-path";
      if (B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_1))) {
        t1 = type$.JavaScriptObject;
        if (value == null)
          A.DomCSSStyleDeclarationExtension_removeProperty(B.getProperty(element, _s5_, t1), _s17_);
        else
          A.DomCSSStyleDeclarationExtension_setProperty(B.getProperty(element, _s5_, t1), _s17_, value);
      }
      t1 = type$.JavaScriptObject;
      if (value == null)
        A.DomCSSStyleDeclarationExtension_removeProperty(B.getProperty(element, _s5_, t1), _s9_);
      else
        A.DomCSSStyleDeclarationExtension_setProperty(B.getProperty(element, _s5_, t1), _s9_, value);
    },
    setThemeColor(color) {
      var t1,
        theme = A.DomDocumentExtension_querySelector(self.document, "#flutterweb-theme");
      if (color != null) {
        if (theme == null) {
          theme = A.createDomHTMLMetaElement();
          A.DomElementExtension_set_id(theme, "flutterweb-theme");
          A.DomHTMLMetaElementExtension_set_name(theme, "theme-color");
          t1 = B.getProperty(self.document, "head", type$.nullable_JavaScriptObject);
          t1.toString;
          B._callMethodUnchecked1(t1, "append", theme, type$.void);
        }
        A.DomHTMLMetaElementExtension_set_content(theme, A.CssColor_toCssString(color));
      } else if (theme != null)
        B._callMethodUnchecked0(theme, "remove", type$.void);
    },
    drawEllipse(context, centerX, centerY, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {
      var t1 = $._ellipseFeatureDetected;
      if (B.boolConversionCheck(t1 == null ? $._ellipseFeatureDetected = A.getJsProperty(context, "ellipse", type$.nullable_Object) != null : t1))
        A.DomCanvasRenderingContext2DExtension_ellipse(context, centerX, centerY, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise);
      else {
        t1 = type$.void;
        B._callMethodUnchecked0(context, "save", t1);
        A.DomCanvasRenderingContext2DExtension_translate(context, centerX, centerY);
        A.DomCanvasRenderingContext2DExtension_rotate(context, rotation);
        A.DomCanvasRenderingContext2DExtension_scale(context, radiusX, radiusY);
        A.DomCanvasRenderingContext2DExtension_arc(context, 0, 0, 1, startAngle, endAngle, antiClockwise);
        B._callMethodUnchecked0(context, "restore", t1);
      }
    },
    removeAllChildren(node) {
      var t1, t2,
        _s9_ = "lastChild";
      for (t1 = type$.nullable_JavaScriptObject; B.getProperty(node, _s9_, t1) != null;) {
        t2 = B.getProperty(node, _s9_, t1);
        t2.toString;
        A.DomNodeExtension_remove(t2);
      }
    },
    LruCache$(maximumSize, $K, $V) {
      var t1 = $K._eval$1("@<0>")._bind$1($V);
      return new A.LruCache(maximumSize, A.DoubleLinkedQueue$(t1._eval$1("+key,value(1,2)")), B.LinkedHashMap_LinkedHashMap$_empty($K, t1._eval$1("DoubleLinkedQueueEntry<+key,value(1,2)>")), t1._eval$1("LruCache<1,2>"));
    },
    BitmapSize$(width, height) {
      return new A.BitmapSize(width, height);
    },
    BitmapSize$fromSize(size) {
      return new A.BitmapSize(J.round$0$n(size.get$width()), J.round$0$n(size.get$height()));
    },
    Matrix4$zero0() {
      return new A.Matrix4(A.NativeFloat32List_NativeFloat32List(16));
    },
    Matrix4$identity() {
      var t1 = new A.Matrix4(A.NativeFloat32List_NativeFloat32List(16));
      t1.Matrix4$identity$0();
      return t1;
    },
    Matrix4_Matrix4$copy(other) {
      var t1 = A.Matrix4$zero0();
      t1.setFrom$1(other);
      return t1;
    },
    Matrix4_Matrix4$translationValues(x, y, z) {
      var t1 = A.Matrix4$identity();
      t1.setTranslationRaw$3(x, y, z);
      return t1;
    },
    Matrix4$fromFloat32List(_m4storage) {
      return new A.Matrix4(_m4storage);
    },
    Matrix4_tryInvert(other) {
      var r = A.Matrix4$zero0();
      if (r.copyInverse$1(other) === 0)
        return null;
      return r;
    },
    toMatrix32(matrix64) {
      var matrix32 = A.NativeFloat32List_NativeFloat32List(16);
      if (15 >= matrix64.length)
        return B.ioore(matrix64, 15);
      D.NativeFloat32List_methods.$indexSet(matrix32, 15, matrix64[15]);
      D.NativeFloat32List_methods.$indexSet(matrix32, 14, matrix64[14]);
      D.NativeFloat32List_methods.$indexSet(matrix32, 13, matrix64[13]);
      D.NativeFloat32List_methods.$indexSet(matrix32, 12, matrix64[12]);
      D.NativeFloat32List_methods.$indexSet(matrix32, 11, matrix64[11]);
      D.NativeFloat32List_methods.$indexSet(matrix32, 10, matrix64[10]);
      D.NativeFloat32List_methods.$indexSet(matrix32, 9, matrix64[9]);
      D.NativeFloat32List_methods.$indexSet(matrix32, 8, matrix64[8]);
      D.NativeFloat32List_methods.$indexSet(matrix32, 7, matrix64[7]);
      D.NativeFloat32List_methods.$indexSet(matrix32, 6, matrix64[6]);
      D.NativeFloat32List_methods.$indexSet(matrix32, 5, matrix64[5]);
      D.NativeFloat32List_methods.$indexSet(matrix32, 4, matrix64[4]);
      D.NativeFloat32List_methods.$indexSet(matrix32, 3, matrix64[3]);
      D.NativeFloat32List_methods.$indexSet(matrix32, 2, matrix64[2]);
      D.NativeFloat32List_methods.$indexSet(matrix32, 1, matrix64[1]);
      D.NativeFloat32List_methods.$indexSet(matrix32, 0, matrix64[0]);
      return matrix32;
    },
    FastMatrix32$(matrix) {
      return new A.FastMatrix32(matrix);
    },
    CustomElementDimensionsProvider$(_hostElement, onDprChange) {
      var t1 = new A.CustomElementDimensionsProvider(_hostElement, A.StreamController_StreamController$broadcast(false, type$.nullable_Size));
      t1.CustomElementDimensionsProvider$2$onDprChange(_hostElement, onDprChange);
      return t1;
    },
    DimensionsProvider_DimensionsProvider$create(hostElement) {
      if (hostElement != null)
        return A.CustomElementDimensionsProvider$(hostElement, $.$get$DisplayDprStream_instance().get$dprChanged());
      else
        return A.FullPageDimensionsProvider$();
    },
    FullPageDimensionsProvider$() {
      var t1 = new A.FullPageDimensionsProvider(A.StreamController_StreamController$broadcast(false, type$.nullable_Size));
      t1.FullPageDimensionsProvider$0();
      return t1;
    },
    DisplayDprStream$(_display) {
      var t1 = A.StreamController_StreamController$broadcast(false, type$.double);
      t1 = new A.DisplayDprStream(_display, _display.get$devicePixelRatio(), t1);
      t1.DisplayDprStream$2$overrides(_display, null);
      return t1;
    },
    DomManager_DomManager(devicePixelRatio) {
      var _s12_ = "flutter-view",
        _s11_ = "appendChild",
        rootElement = A.DomDocumentExtension_createElement(self.document, _s12_),
        platformViewsHost = A.DomDocumentExtension_createElement(self.document, "flt-glass-pane"),
        renderingHost = A._attachShadowRoot(platformViewsHost),
        sceneHost = A.DomDocumentExtension_createElement(self.document, "flt-scene-host"),
        textEditingHost = A.DomDocumentExtension_createElement(self.document, "flt-text-editing-host"),
        semanticsHost = A.DomDocumentExtension_createElement(self.document, "flt-semantics-host"),
        t1 = type$.JavaScriptObject;
      B._callMethodUnchecked1(rootElement, _s11_, platformViewsHost, t1);
      B._callMethodUnchecked1(rootElement, _s11_, textEditingHost, t1);
      B._callMethodUnchecked1(rootElement, _s11_, semanticsHost, t1);
      B._callMethodUnchecked1(renderingHost, "append", sceneHost, type$.void);
      A.StyleManager_attachGlobalStyles(_s12_, rootElement, "flt-text-editing-stylesheet", A.configuration().get$nonce());
      A.StyleManager_attachGlobalStyles("", renderingHost, "flt-internals-stylesheet", A.configuration().get$nonce());
      A.StyleManager_styleSceneHost(sceneHost, A.configuration().get$debugShowSemanticsNodes());
      A.StyleManager_styleSemanticsHost(semanticsHost, devicePixelRatio);
      return A.DomManager$_(platformViewsHost, renderingHost, rootElement, sceneHost, semanticsHost, textEditingHost);
    },
    DomManager$_(platformViewsHost, renderingHost, rootElement, sceneHost, semanticsHost, textEditingHost) {
      return new A.DomManager(rootElement, renderingHost, sceneHost, textEditingHost, semanticsHost);
    },
    _attachShadowRoot(element) {
      return A.DomElementExtension_attachShadow(element, B.LinkedHashMap_LinkedHashMap$_literal(["mode", "open", "delegatesFocus", false], type$.String, type$.dynamic));
    },
    CustomElementEmbeddingStrategy$(hostElement) {
      var t1 = new A.CustomElementEmbeddingStrategy(hostElement);
      t1.CustomElementEmbeddingStrategy$1(hostElement);
      return t1;
    },
    EmbeddingStrategy_EmbeddingStrategy$create(hostElement) {
      if (hostElement != null)
        return A.CustomElementEmbeddingStrategy$(hostElement);
      else
        return A.FullPageEmbeddingStrategy$();
    },
    FullPageEmbeddingStrategy$() {
      var t1 = B.getProperty(self.document, "body", type$.nullable_JavaScriptObject);
      t1.toString;
      t1 = new A.FullPageEmbeddingStrategy(t1);
      t1.FullPageEmbeddingStrategy$0();
      return t1;
    },
    FlutterViewManager$(_dispatcher) {
      var t1 = type$.int;
      return new A.FlutterViewManager(_dispatcher, B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.EngineFlutterView), B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.JavaScriptObject), A.StreamController_StreamController$broadcast(true, t1), A.StreamController_StreamController$broadcast(true, t1));
    },
    GlobalHtmlAttributes$(hostElement, rootElement) {
      return new A.GlobalHtmlAttributes(rootElement, hostElement);
    },
    registerElementForCleanup(element) {
      var t1 = $.$get$_hotRestartCache();
      if (t1 != null)
        t1.registerElement$1(element);
    },
    StyleManager_attachGlobalStyles(cssSelectorPrefix, node, styleId, styleNonce) {
      var styleElement = A.createDomHTMLStyleElement(styleNonce);
      A.DomElementExtension_set_id(styleElement, styleId);
      B._callMethodUnchecked1(node, "appendChild", styleElement, type$.JavaScriptObject);
      A.applyGlobalCssRulesToSheet(styleElement, cssSelectorPrefix, "normal normal 14px sans-serif");
    },
    StyleManager_styleSceneHost(sceneHost, debugShowSemanticsNodes) {
      var t1 = type$.JavaScriptObject;
      A.DomCSSStyleDeclarationExtension_set_pointerEvents(B.getProperty(sceneHost, "style", t1), "none");
      if (debugShowSemanticsNodes)
        A.DomCSSStyleDeclarationExtension_set_opacity(B.getProperty(sceneHost, "style", t1), "0.3");
    },
    StyleManager_styleSemanticsHost(semanticsHost, devicePixelRatio) {
      var t1 = B.getProperty(semanticsHost, "style", type$.JavaScriptObject);
      A.DomCSSStyleDeclarationExtension_set_position(t1, "absolute");
      A.DomCSSStyleDeclarationExtension_set_transformOrigin(t1, "0 0 0");
      A.StyleManager_scaleSemanticsHost(semanticsHost, devicePixelRatio);
    },
    StyleManager_scaleSemanticsHost(semanticsHost, devicePixelRatio) {
      A.DomCSSStyleDeclarationExtension_set_transform(B.getProperty(semanticsHost, "style", type$.JavaScriptObject), "scale(" + B.S(1 / devicePixelRatio) + ")");
    },
    applyGlobalCssRulesToSheet(styleElement, cssSelectorPrefix, defaultCssFont) {
      var e, exception, t1, t2;
      A.DomElementExtension_appendText(styleElement, cssSelectorPrefix + " flt-scene-host {  font: " + defaultCssFont + ";}" + cssSelectorPrefix + " flt-semantics input[type=range] {  appearance: none;  -webkit-appearance: none;  width: 100%;  position: absolute;  border: none;  top: 0;  right: 0;  bottom: 0;  left: 0;}" + cssSelectorPrefix + " input::selection {  background-color: transparent;}" + cssSelectorPrefix + " textarea::selection {  background-color: transparent;}" + cssSelectorPrefix + " flt-semantics input," + cssSelectorPrefix + " flt-semantics textarea," + cssSelectorPrefix + ' flt-semantics [contentEditable="true"] {  caret-color: transparent;}' + cssSelectorPrefix + " .flt-text-editing::placeholder {  opacity: 0;}" + cssSelectorPrefix + ":focus { outline: none;}");
      if (B.boolConversionCheck(A.isSafari()))
        A.DomElementExtension_appendText(styleElement, cssSelectorPrefix + " * {  -webkit-tap-highlight-color: transparent;}" + cssSelectorPrefix + " flt-semantics input[type=range]::-webkit-slider-thumb {  -webkit-appearance: none;}");
      if (B.boolConversionCheck(A.isFirefox()))
        A.DomElementExtension_appendText(styleElement, cssSelectorPrefix + " flt-paragraph," + cssSelectorPrefix + " flt-span {  line-height: 100%;}");
      if (B.boolConversionCheck(A.browserHasAutofillOverlay()))
        A.DomElementExtension_appendText(styleElement, cssSelectorPrefix + " .transparentTextEditing:-webkit-autofill," + cssSelectorPrefix + " .transparentTextEditing:-webkit-autofill:hover," + cssSelectorPrefix + " .transparentTextEditing:-webkit-autofill:focus," + cssSelectorPrefix + " .transparentTextEditing:-webkit-autofill:active {  opacity: 0 !important;}");
      if (B.boolConversionCheck(A.isEdge()))
        try {
          A.DomElementExtension_appendText(styleElement, cssSelectorPrefix + " input::-ms-reveal {  display: none;}");
        } catch (exception) {
          t1 = B.unwrapException(exception);
          t2 = type$.JavaScriptObject;
          if (t2._is(t1)) {
            e = t1;
            A.DomConsoleExtension_warn(B.getProperty(self.window, "console", t2), e);
          } else
            throw exception;
        }
    },
    _EngineFlutterViewImpl$(platformDispatcher, hostElement, viewConstraints) {
      var t2,
        t1 = $._nextViewId;
      if (typeof t1 !== "number")
        return t1.$add();
      $._nextViewId = t1 + 1;
      t2 = new A._EngineFlutterViewImpl(t1, platformDispatcher, A.EmbeddingStrategy_EmbeddingStrategy$create(hostElement), viewConstraints, C.ViewPadding_0_0_0_0, A.DimensionsProvider_DimensionsProvider$create(hostElement));
      t2.EngineFlutterView$_$4$viewConstraints(t1, platformDispatcher, hostElement, viewConstraints);
      return t2;
    },
    window0() {
      var t1 = $._window;
      t1.toString;
      return t1;
    },
    ViewPadding$(bottom, left, right, $top) {
      return new A.ViewPadding(left, $top, right, bottom);
    },
    ViewConstraints$(maxHeight, maxWidth, minHeight, minWidth) {
      return new A.ViewConstraints(minWidth, maxWidth, minHeight, maxHeight);
    },
    ViewConstraints$tight(size) {
      return new A.ViewConstraints(size.get$width(), size.get$width(), size.get$height(), size.get$height());
    },
    ViewConstraints_ViewConstraints$fromJs(constraints, currentLogicalSize) {
      var t1, t2, t3, t4;
      if (constraints == null)
        return A.ViewConstraints$tight(currentLogicalSize);
      t1 = type$.nullable_double;
      t2 = A._computeMinConstraintValue(B.getProperty(constraints, "minWidth", t1), currentLogicalSize.get$width());
      t3 = A._computeMinConstraintValue(B.getProperty(constraints, "minHeight", t1), currentLogicalSize.get$height());
      t4 = A._computeMaxConstraintValue(B.getProperty(constraints, "maxWidth", t1), currentLogicalSize.get$width());
      return A.ViewConstraints$(A._computeMaxConstraintValue(B.getProperty(constraints, "maxHeight", t1), currentLogicalSize.get$height()), t4, t3, t2);
    },
    _computeMinConstraintValue(desired, available) {
      return desired == null ? available : desired;
    },
    _computeMaxConstraintValue(desired, available) {
      return desired == null ? available : desired;
    },
    AlarmClock: function AlarmClock(t0) {
      var _ = this;
      _._timestampFunction = t0;
      _.callback = _._datetime = _._timer = null;
    },
    CanvasPool: function CanvasPool(t0, t1, t2, t3, t4) {
      var _ = this;
      _._contextHandle = _._context = null;
      _._widthInBitmapPixels = t0;
      _._heightInBitmapPixels = t1;
      _._rootElement = _.__engine$_canvas = _._reusablePool = _._activeCanvasList = null;
      _._saveContextCount = 0;
      _._density = t2;
      _._saveStack = t3;
      _.clipStack = null;
      _._currentTransform = t4;
    },
    ContextStateHandle: function ContextStateHandle(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.context = t0;
      _._canvasPool = t1;
      _.density = t2;
      _._currentBlendMode = t3;
      _._currentStrokeCap = t4;
      _._currentStrokeJoin = t5;
      _._currentStrokeStyle = _._currentFillStyle = null;
      _._currentLineWidth = 1;
      _._shaderBounds = _._lastUsedPaint = _._currentFilter = null;
    },
    _SaveStackTracking: function _SaveStackTracking() {
    },
    CkCanvas: function CkCanvas(t0) {
      this.skCanvas = t0;
    },
    _canvasKitJsUrls_closure: function _canvasKitJsUrls_closure() {
    },
    CanvasKitCanvas: function CanvasKitCanvas(t0) {
      this.__engine$_canvas = t0;
    },
    DisplayCanvasFactory: function DisplayCanvasFactory(t0, t1, t2, t3) {
      var _ = this;
      _.createCanvas = t0;
      _.__DisplayCanvasFactory_baseCanvas_FI = $;
      _._liveCanvases = t1;
      _._cache = t2;
      _.$ti = t3;
    },
    HtmlViewEmbedder: function HtmlViewEmbedder(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.sceneHost = t0;
      _.rasterizer = t1;
      _._context = t2;
      _._currentCompositionParams = t3;
      _._viewClipChains = t4;
      _._viewsToRecomposite = t5;
      _._compositionOrder = t6;
      _._activeCompositionOrder = t7;
      _._activeRendering = t8;
      _.debugBoundsCanvas = null;
      _.__HtmlViewEmbedder__frameSize_A = $;
      _._svgClipDefs = t9;
    },
    HtmlViewEmbedder_getOverlayCanvases_closure: function HtmlViewEmbedder_getOverlayCanvases_closure() {
    },
    HtmlViewEmbedder__updateDomForNewRendering_closure: function HtmlViewEmbedder__updateDomForNewRendering_closure() {
    },
    HtmlViewEmbedder__updateDomForNewRendering_updateRenderCanvasWithDisplay: function HtmlViewEmbedder__updateDomForNewRendering_updateRenderCanvasWithDisplay(t0, t1) {
      this.$this = t0;
      this.indexMap = t1;
    },
    MutatorType: function MutatorType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    Mutator: function Mutator(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.type = t0;
      _.rect = t1;
      _.rrect = t2;
      _.path = t3;
      _.matrix = t4;
      _.alpha = t5;
    },
    MutatorsStack: function MutatorsStack(t0) {
      this._mutators = t0;
    },
    EmbedderFrameContext: function EmbedderFrameContext(t0, t1) {
      this.pictureRecordersCreatedDuringPreroll = t0;
      this.pictureRecorders = t1;
    },
    SkiaFontCollection: function SkiaFontCollection(t0, t1, t2, t3, t4) {
      var _ = this;
      _._downloadedFontFamilies = t0;
      _.__SkiaFontCollection_fontFallbackManager_AI = $;
      _._unregisteredFonts = t1;
      _._registeredFonts = t2;
      _.registeredFallbackFonts = t3;
      _.familyToFontMap = t4;
      _.skFontCollection = _._fontProvider = null;
    },
    SkiaFontCollection__registerWithFontProvider_closure: function SkiaFontCollection__registerWithFontProvider_closure() {
    },
    SkiaFontCollection__registerWithFontProvider_closure0: function SkiaFontCollection__registerWithFontProvider_closure0() {
    },
    SkiaFontCollection_registerDownloadedFonts_makeRegisterFont: function SkiaFontCollection_registerDownloadedFonts_makeRegisterFont() {
    },
    RegisteredFont: function RegisteredFont(t0, t1, t2) {
      this.family = t0;
      this.bytes = t1;
      this.typeface = t2;
    },
    UnregisteredFont: function UnregisteredFont(t0, t1, t2) {
      this.bytes = t0;
      this.url = t1;
      this.family = t2;
    },
    FontDownloadResult: function FontDownloadResult(t0, t1, t2) {
      this.assetName = t0;
      this.font = t1;
      this.error = t2;
    },
    SkiaFallbackRegistry: function SkiaFallbackRegistry(t0) {
      this.fontCollection = t0;
    },
    CkImage: function CkImage() {
      this.__CkImage_box_F = $;
    },
    Layer: function Layer() {
    },
    PrerollContext: function PrerollContext(t0) {
      this.mutatorsStack = t0;
    },
    PaintContext: function PaintContext(t0, t1) {
      this.internalNodesCanvas = t0;
      this.leafNodesCanvas = t1;
    },
    ContainerLayer: function ContainerLayer() {
    },
    RootLayer: function RootLayer(t0, t1) {
      this._layers = t0;
      this.parent = null;
      this.paintBounds = t1;
    },
    ClipPathEngineLayer: function ClipPathEngineLayer(t0, t1, t2, t3) {
      var _ = this;
      _._clipPath = t0;
      _.__engine$_clipBehavior = t1;
      _._layers = t2;
      _.parent = null;
      _.paintBounds = t3;
    },
    ClipRectEngineLayer: function ClipRectEngineLayer(t0, t1, t2, t3) {
      var _ = this;
      _._clipRect = t0;
      _.__engine$_clipBehavior = t1;
      _._layers = t2;
      _.parent = null;
      _.paintBounds = t3;
    },
    ClipRRectEngineLayer: function ClipRRectEngineLayer(t0, t1, t2, t3) {
      var _ = this;
      _._clipRRect = t0;
      _.__engine$_clipBehavior = t1;
      _._layers = t2;
      _.parent = null;
      _.paintBounds = t3;
    },
    OpacityEngineLayer: function OpacityEngineLayer(t0, t1, t2, t3) {
      var _ = this;
      _.__engine$_alpha = t0;
      _.__engine$_offset = t1;
      _._layers = t2;
      _.parent = null;
      _.paintBounds = t3;
    },
    TransformEngineLayer: function TransformEngineLayer(t0, t1, t2) {
      var _ = this;
      _.__engine$_transform = t0;
      _._layers = t1;
      _.parent = null;
      _.paintBounds = t2;
    },
    OffsetEngineLayer: function OffsetEngineLayer(t0, t1, t2) {
      var _ = this;
      _.__engine$_transform = t0;
      _._layers = t1;
      _.parent = null;
      _.paintBounds = t2;
    },
    PictureLayer0: function PictureLayer0(t0, t1, t2) {
      var _ = this;
      _.picture = t0;
      _.offset = t1;
      _.parent = null;
      _.paintBounds = t2;
    },
    LayerScene: function LayerScene(t0) {
      this.layerTree = t0;
    },
    LayerSceneBuilder: function LayerSceneBuilder(t0) {
      this.rootLayer = t0;
      this.__LayerSceneBuilder_currentLayer_A = $;
    },
    LayerTree: function LayerTree(t0) {
      this.rootLayer = t0;
    },
    Frame: function Frame(t0, t1, t2) {
      this.canvas = t0;
      this.rasterCache = t1;
      this.viewEmbedder = t2;
    },
    Frame_raster_closure: function Frame_raster_closure(t0, t1, t2) {
      this.$this = t0;
      this.layerTree = t1;
      this.ignoreRasterCache = t2;
    },
    Frame_raster_closure0: function Frame_raster_closure0(t0, t1, t2) {
      this.$this = t0;
      this.layerTree = t1;
      this.ignoreRasterCache = t2;
    },
    CompositorContext: function CompositorContext() {
    },
    MultiSurfaceRasterizer: function MultiSurfaceRasterizer(t0) {
      this._viewRasterizers = t0;
    },
    MultiSurfaceRasterizer_createViewRasterizer_closure: function MultiSurfaceRasterizer_createViewRasterizer_closure(t0, t1) {
      this.$this = t0;
      this.view = t1;
    },
    MultiSurfaceRasterizer_setResourceCacheMaxBytes_closure: function MultiSurfaceRasterizer_setResourceCacheMaxBytes_closure(t0) {
      this.bytes = t0;
    },
    MultiSurfaceViewRasterizer: function MultiSurfaceViewRasterizer(t0, t1, t2, t3, t4) {
      var _ = this;
      _.displayFactory = t0;
      _.view = t1;
      _.queue = t2;
      _.currentFrameSize = t3;
      _.context = t4;
      _.__ViewRasterizer_viewEmbedder_FI = $;
    },
    MultiSurfaceViewRasterizer_displayFactory_closure: function MultiSurfaceViewRasterizer_displayFactory_closure() {
    },
    CkNWayCanvas: function CkNWayCanvas(t0) {
      this._canvases = t0;
    },
    _finalizationRegistry_closure: function _finalizationRegistry_closure() {
    },
    NativeMemoryFinalizationRegistry: function NativeMemoryFinalizationRegistry() {
    },
    UniqueRef: function UniqueRef(t0, t1) {
      this._nativeObject = null;
      this._debugOwnerLabel = t0;
      this.$ti = t1;
    },
    CountedRef: function CountedRef(t0, t1) {
      var _ = this;
      _.__CountedRef__ref_F = $;
      _.__engine$_refCount = 1;
      _.debugReferrers = t0;
      _.$ti = t1;
    },
    OffscreenCanvasRasterizer: function OffscreenCanvasRasterizer(t0, t1) {
      this.offscreenSurface = t0;
      this._viewRasterizers = t1;
    },
    OffscreenCanvasRasterizer_createViewRasterizer_closure: function OffscreenCanvasRasterizer_createViewRasterizer_closure(t0, t1) {
      this.$this = t0;
      this.view = t1;
    },
    OffscreenCanvasViewRasterizer: function OffscreenCanvasViewRasterizer(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.rasterizer = t0;
      _.displayFactory = t1;
      _.view = t2;
      _.queue = t3;
      _.currentFrameSize = t4;
      _.context = t5;
      _.__ViewRasterizer_viewEmbedder_FI = $;
    },
    OffscreenCanvasViewRasterizer_displayFactory_closure: function OffscreenCanvasViewRasterizer_displayFactory_closure() {
    },
    Rendering: function Rendering(t0) {
      this.entities = t0;
    },
    RenderingEntity: function RenderingEntity() {
    },
    RenderingRenderCanvas: function RenderingRenderCanvas(t0) {
      this.pictures = t0;
      this.displayCanvas = null;
    },
    RenderingPlatformView: function RenderingPlatformView(t0) {
      this.viewId = t0;
      this.debugComputedBounds = null;
    },
    CkPaint: function CkPaint(t0, t1, t2, t3) {
      var _ = this;
      _.skiaObject = t0;
      _.__CkPaint__ref_F = $;
      _._imageFilter = null;
      _._blendMode = t1;
      _._style = t2;
      _._strokeWidth = 0;
      _._color = 4278190080;
      _._ckMaskFilter = _._maskFilter = _._shader = null;
      _._filterQuality = t3;
    },
    CkPath: function CkPath(t0) {
      this.__CkPath__ref_F = $;
      this._fillType = t0;
    },
    CkPicture: function CkPicture() {
      this.__CkPicture__ref_F = $;
    },
    CkPictureRecorder: function CkPictureRecorder() {
      this._recordingCanvas = this._skRecorder = null;
    },
    Rasterizer: function Rasterizer() {
    },
    ViewRasterizer: function ViewRasterizer() {
    },
    DisplayCanvas: function DisplayCanvas() {
    },
    RenderQueue: function RenderQueue() {
      this.next = this.current = null;
    },
    RenderCanvas: function RenderCanvas(t0, t1) {
      var _ = this;
      _.hostElement = t0;
      _.canvasElement = t1;
      _._pixelHeight = _._pixelWidth = 0;
      _.__RenderCanvas_renderContext2d_FI = _.__RenderCanvas_renderContext_FI = $;
      _._currentDevicePixelRatio = -1;
    },
    CanvasKitVariant: function CanvasKitVariant(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    CanvasKitRenderer: function CanvasKitRenderer(t0, t1, t2) {
      var _ = this;
      _._initialized = null;
      _.__CanvasKitRenderer__fontCollection_FI = $;
      _._rasterizer = t0;
      _.pictureToImageSurface = t1;
      _._onViewDisposedListener = _._onViewCreatedListener = null;
      _._rasterizers = t2;
    },
    CanvasKitRenderer_initialize_closure: function CanvasKitRenderer_initialize_closure(t0) {
      this.$this = t0;
    },
    SimpleCkShader: function SimpleCkShader() {
    },
    CkGradientLinear: function CkGradientLinear(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.from = t0;
      _.to = t1;
      _.colors = t2;
      _.colorStops = t3;
      _.tileMode = t4;
      _.matrix4 = t5;
      _.__SimpleCkShader__ref_F = $;
    },
    Surface: function Surface(t0, t1, t2) {
      var _ = this;
      _._surface = null;
      _.useOffscreenCanvas = t0;
      _.isDisplayCanvas = t1;
      _._forceNewContext = true;
      _._canvasElement = _._offscreenCanvas = _._skiaCacheBytes = _._glContext = _._grContext = _._cachedContextRestoredListener = _._cachedContextLostListener = null;
      _.hostElement = t2;
      _._stencilBits = _._sampleCount = _._currentDevicePixelRatio = _._pixelHeight = _._pixelWidth = -1;
      _._currentSurfaceSize = _._currentCanvasPhysicalSize = null;
    },
    CkSurface: function CkSurface(t0) {
      this.surface = t0;
      this._isDisposed = false;
    },
    CkParagraphStyle: function CkParagraphStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.skParagraphStyle = t0;
      _._textAlign = t1;
      _.__engine$_textDirection = t2;
      _._fontWeight = t3;
      _._fontStyle = t4;
      _._maxLines = t5;
      _._originalFontFamily = t6;
      _._effectiveFontFamily = t7;
      _._fontSize = t8;
      _._height = t9;
      _._textHeightBehavior = t10;
      _._strutStyle = t11;
      _._ellipsis = t12;
      _._locale = t13;
    },
    CkTextStyle: function CkTextStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22) {
      var _ = this;
      _.color = t0;
      _.decoration = t1;
      _.decorationColor = t2;
      _.decorationStyle = t3;
      _.decorationThickness = t4;
      _.fontWeight = t5;
      _.fontStyle = t6;
      _.textBaseline = t7;
      _.originalFontFamily = t8;
      _.effectiveFontFamily = t9;
      _.originalFontFamilyFallback = t10;
      _.effectiveFontFamilyFallback = t11;
      _.fontSize = t12;
      _.letterSpacing = t13;
      _.wordSpacing = t14;
      _.height = t15;
      _.leadingDistribution = t16;
      _.locale = t17;
      _.background = t18;
      _.foreground = t19;
      _.shadows = t20;
      _.fontFeatures = t21;
      _.fontVariations = t22;
      _.__CkTextStyle_skTextStyle_FI = _.__CkTextStyle_combinedFontFamilies_FI = $;
    },
    CkTextStyle_skTextStyle_closure: function CkTextStyle_skTextStyle_closure(t0) {
      this.$this = t0;
    },
    CkParagraph: function CkParagraph(t0) {
      var _ = this;
      _.__CkParagraph__ref_F = $;
      _._lastLayoutConstraints = -1 / 0;
      _._paragraphStyle = t0;
      _._alphabeticBaseline = 0;
      _._didExceedMaxLines = false;
      _._width = _._maxIntrinsicWidth = _._longestLine = _._ideographicBaseline = _._height = 0;
      _.__CkParagraph__boxesForPlaceholders_A = $;
    },
    CkLineMetrics: function CkLineMetrics(t0) {
      this.skLineMetrics = t0;
    },
    CkParagraphBuilder: function CkParagraphBuilder(t0, t1, t2) {
      this._paragraphBuilder = t0;
      this._style = t1;
      this._styleStack = t2;
    },
    _computeCombinedFontFamilies_closure: function _computeCombinedFontFamilies_closure(t0) {
      this.fontFamily = t0;
    },
    IntlSegmenterGranularity: function IntlSegmenterGranularity(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    CanvasKitError: function CanvasKitError(t0) {
      this.message = t0;
    },
    ClipboardMessageHandler: function ClipboardMessageHandler(t0, t1) {
      this._copyToClipboardStrategy = t0;
      this._pasteFromClipboardStrategy = t1;
    },
    ClipboardMessageHandler_setDataMethodCall_closure: function ClipboardMessageHandler_setDataMethodCall_closure(t0, t1) {
      this._box_0 = t0;
      this.callback = t1;
    },
    ClipboardMessageHandler_setDataMethodCall_closure0: function ClipboardMessageHandler_setDataMethodCall_closure0(t0, t1) {
      this._box_0 = t0;
      this.callback = t1;
    },
    ClipboardMessageHandler_getDataMethodCall_closure: function ClipboardMessageHandler_getDataMethodCall_closure(t0) {
      this.callback = t0;
    },
    ClipboardMessageHandler_getDataMethodCall_closure0: function ClipboardMessageHandler_getDataMethodCall_closure0(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    ClipboardMessageHandler_getDataMethodCall__closure: function ClipboardMessageHandler_getDataMethodCall__closure(t0) {
      this.callback = t0;
    },
    ClipboardMessageHandler_hasStringsMethodCall_closure: function ClipboardMessageHandler_hasStringsMethodCall_closure(t0) {
      this.callback = t0;
    },
    ClipboardMessageHandler_hasStringsMethodCall_closure0: function ClipboardMessageHandler_hasStringsMethodCall_closure0(t0) {
      this.callback = t0;
    },
    ClipboardMessageHandler_hasStringsMethodCall__closure: function ClipboardMessageHandler_hasStringsMethodCall__closure(t0) {
      this.callback = t0;
    },
    ClipboardAPICopyStrategy: function ClipboardAPICopyStrategy() {
    },
    ClipboardAPIPasteStrategy: function ClipboardAPIPasteStrategy() {
    },
    ExecCommandCopyStrategy: function ExecCommandCopyStrategy() {
    },
    ExecCommandPasteStrategy: function ExecCommandPasteStrategy() {
    },
    FlutterConfiguration: function FlutterConfiguration() {
      this._configuration = null;
    },
    EngineFlutterDisplay: function EngineFlutterDisplay(t0) {
      this.size = t0;
      this._debugDevicePixelRatioOverride = null;
    },
    ScreenOrientation: function ScreenOrientation() {
    },
    DomConsoleExtension_get_warn_closure: function DomConsoleExtension_get_warn_closure(t0) {
      this._this = t0;
    },
    DomNavigatorExtension_get_languages_closure: function DomNavigatorExtension_get_languages_closure() {
    },
    HttpFetchResponseImpl: function HttpFetchResponseImpl(t0, t1) {
      this.url = t0;
      this._domResponse = t1;
    },
    HttpFetchPayloadImpl: function HttpFetchPayloadImpl(t0) {
      this._domResponse = t0;
    },
    HttpFetchNoPayloadError: function HttpFetchNoPayloadError(t0, t1) {
      this.url = t0;
      this.status = t1;
    },
    HttpFetchError: function HttpFetchError(t0, t1) {
      this.url = t0;
      this.requestError = t1;
    },
    DomSubscription: function DomSubscription(t0, t1, t2) {
      this.type = t0;
      this.target = t1;
      this.listener = t2;
    },
    DomPoint: function DomPoint(t0, t1) {
      this.x = t0;
      this.y = t1;
    },
    createDomResizeObserver_closure: function createDomResizeObserver_closure(t0) {
      this.fn = t0;
    },
    _ttPolicy_closure: function _ttPolicy_closure() {
    },
    _DomListIterator: function _DomListIterator(t0, t1) {
      this.list = t0;
      this.index = -1;
      this.$ti = t1;
    },
    _DomListWrapper: function _DomListWrapper(t0, t1) {
      this.list = t0;
      this.$ti = t1;
    },
    _DomTouchListIterator: function _DomTouchListIterator(t0, t1) {
      this.list = t0;
      this.index = -1;
      this.$ti = t1;
    },
    _DomTouchListWrapper: function _DomTouchListWrapper(t0, t1) {
      this.list = t0;
      this.$ti = t1;
    },
    DomIteratorWrapper: function DomIteratorWrapper(t0, t1) {
      this.__engine$_iterator = t0;
      this.__DomIteratorWrapper__current_A = $;
      this.$ti = t1;
    },
    EngineCanvas: function EngineCanvas() {
    },
    SaveStackEntry: function SaveStackEntry(t0, t1) {
      this.transform = t0;
      this.clipStack = t1;
    },
    SaveClipEntry: function SaveClipEntry(t0, t1, t2, t3) {
      var _ = this;
      _.rect = t0;
      _.rrect = t1;
      _.path = t2;
      _.currentTransform = t3;
    },
    _SaveElementStackEntry: function _SaveElementStackEntry(t0, t1) {
      this.savedElement = t0;
      this.transform = t1;
    },
    SaveElementStackTracking: function SaveElementStackTracking() {
    },
    sendFontChangeMessage_closure: function sendFontChangeMessage_closure() {
    },
    sendFontChangeMessage__closure: function sendFontChangeMessage__closure() {
    },
    FontFallbackManager: function FontFallbackManager(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.registry = t0;
      _.__FontFallbackManager_downloadQueue_F = $;
      _.codePointsWithNoKnownFont = t1;
      _.knownCoveredCodePoints = t2;
      _.fallbackFonts = t3;
      _._notoSansSC = t4;
      _._notoSansTC = t5;
      _._notoSansHK = t6;
      _._notoSansJP = t7;
      _._notoSansKR = t8;
      _._notoSymbols = t9;
      _._idleFuture = t10;
      _.globalFontFallbacks = t11;
      _._codePointsToCheckAgainstFallbackFonts = t12;
      _._scheduledCodePointCheck = false;
      _.__FontFallbackManager_codePointToComponents_FI = _.__FontFallbackManager_fontComponents_FI = $;
    },
    FontFallbackManager$__closure: function FontFallbackManager$__closure() {
    },
    FontFallbackManager$__closure0: function FontFallbackManager$__closure0() {
    },
    FontFallbackManager$__closure1: function FontFallbackManager$__closure1() {
    },
    FontFallbackManager$__closure2: function FontFallbackManager$__closure2() {
    },
    FontFallbackManager$__closure3: function FontFallbackManager$__closure3() {
    },
    FontFallbackManager$__closure4: function FontFallbackManager$__closure4() {
    },
    FontFallbackManager_addMissingCodePoints_closure: function FontFallbackManager_addMissingCodePoints_closure(t0) {
      this.$this = t0;
    },
    FontFallbackManager_findFontsForMissingCodePoints_closure: function FontFallbackManager_findFontsForMissingCodePoints_closure() {
    },
    FontFallbackManager__selectFont_closure: function FontFallbackManager__selectFont_closure(t0) {
      this.$this = t0;
    },
    _UnicodePropertyLookup: function _UnicodePropertyLookup(t0, t1, t2) {
      this._boundaries = t0;
      this.__engine$_values = t1;
      this.$ti = t2;
    },
    FallbackFontDownloadQueue: function FallbackFontDownloadQueue(t0, t1, t2) {
      var _ = this;
      _.fallbackManager = t0;
      _.downloadedFonts = t1;
      _.pendingFonts = t2;
      _._idleCompleter = null;
    },
    FallbackFontDownloadQueue_startDownloads_closure: function FallbackFontDownloadQueue_startDownloads_closure(t0, t1, t2) {
      this.$this = t0;
      this.font = t1;
      this.downloadedFontFamilies = t2;
    },
    FontLoadError: function FontLoadError() {
    },
    FontNotFoundError: function FontNotFoundError() {
    },
    FontDownloadError: function FontDownloadError() {
    },
    FontInvalidDataError: function FontInvalidDataError() {
    },
    AssetFontsResult: function AssetFontsResult() {
    },
    FrameReference: function FrameReference(t0, t1) {
      this.value = t0;
      this.$ti = t1;
    },
    CrossFrameCache: function CrossFrameCache(t0) {
      this._reusablePool = this._cache = null;
      this.$ti = t0;
    },
    _CrossFrameCacheItem: function _CrossFrameCacheItem(t0, t1, t2) {
      this.value = t0;
      this.evictCallback = t1;
      this.$ti = t2;
    },
    FrameTimingRecorder: function FrameTimingRecorder(t0, t1) {
      var _ = this;
      _._vsyncStartMicros = t0;
      _._buildStartMicros = t1;
      _._rasterFinishMicros = _._rasterStartMicros = _._buildFinishMicros = null;
    },
    BitmapCanvas: function BitmapCanvas(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._bounds = t0;
      _._elementCache = null;
      _.rootElement = t1;
      _._canvasPool = t2;
      _._cachedLastCssFont = null;
      _.__engine$_children = t3;
      _.widthInBitmapPixels = t4;
      _.heightInBitmapPixels = t5;
      _._saveCount = 0;
      _._devicePixelRatio = t6;
      _._canvasPositionY = _._canvasPositionX = null;
      _._contains3dTransform = _._childOverdraw = false;
      _._density = t7;
      _._renderStrategy = t8;
    },
    SvgBlendMode: function SvgBlendMode(t0) {
      this.blendMode = t0;
    },
    SurfaceCanvas: function SurfaceCanvas(t0) {
      this.__engine$_canvas = t0;
    },
    _DomClip: function _DomClip() {
    },
    PersistedClipRect: function PersistedClipRect(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.clipBehavior = t0;
      _.rect = t1;
      _._DomClip__childContainer = t2;
      _.__engine$_children = t3;
      _._oldLayer = t4;
      _.__engine$_index = -1;
      _.__engine$_state = t5;
      _.localClipBounds = _.projectedClip = _.transform = _.parent = _.rootElement = null;
    },
    PersistedClipRRect: function PersistedClipRRect(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.rrect = t0;
      _.clipBehavior = t1;
      _._DomClip__childContainer = t2;
      _.__engine$_children = t3;
      _._oldLayer = t4;
      _.__engine$_index = -1;
      _.__engine$_state = t5;
      _.localClipBounds = _.projectedClip = _.transform = _.parent = _.rootElement = null;
    },
    PersistedClipPath: function PersistedClipPath(t0, t1, t2, t3, t4) {
      var _ = this;
      _.clipPath = t0;
      _.clipBehavior = t1;
      _._clipElement = null;
      _.__engine$_children = t2;
      _._oldLayer = t3;
      _.__engine$_index = -1;
      _.__engine$_state = t4;
      _.localClipBounds = _.projectedClip = _.transform = _.parent = _.rootElement = null;
    },
    SvgFilterBuilder: function SvgFilterBuilder(t0, t1, t2) {
      this.id = t0;
      this.root = t1;
      this.filter = t2;
    },
    SvgFilter: function SvgFilter(t0, t1) {
      this.id = t0;
      this.element = t1;
    },
    DomCanvas: function DomCanvas(t0, t1, t2, t3) {
      var _ = this;
      _.rootElement = t0;
      _.SaveElementStackTracking__saveStack = t1;
      _.SaveElementStackTracking__elementStack = t2;
      _.SaveElementStackTracking__currentTransform = t3;
    },
    PersistedOffset: function PersistedOffset(t0, t1, t2, t3, t4) {
      var _ = this;
      _.dx = t0;
      _.dy = t1;
      _._localTransformInverse = null;
      _.__engine$_children = t2;
      _._oldLayer = t3;
      _.__engine$_index = -1;
      _.__engine$_state = t4;
      _.localClipBounds = _.projectedClip = _.transform = _.parent = _.rootElement = null;
    },
    PersistedOpacity: function PersistedOpacity(t0, t1, t2, t3, t4) {
      var _ = this;
      _.alpha = t0;
      _.offset = t1;
      _._localTransformInverse = null;
      _.__engine$_children = t2;
      _._oldLayer = t3;
      _.__engine$_index = -1;
      _.__engine$_state = t4;
      _.localClipBounds = _.projectedClip = _.transform = _.parent = _.rootElement = null;
    },
    SurfacePaint: function SurfacePaint(t0) {
      this._paintData = t0;
      this._frozen = false;
    },
    SurfacePaintData: function SurfacePaintData() {
      var _ = this;
      _.strokeJoin = _.strokeCap = _.strokeWidth = _.style = _.blendMode = null;
      _.isAntiAlias = true;
      _.color = 4278190080;
      _.colorFilter = _.filterQuality = _.maskFilter = _.shader = null;
    },
    Conic: function Conic(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.p0x = t0;
      _.p0y = t1;
      _.p1x = t2;
      _.p1y = t3;
      _.p2x = t4;
      _.p2y = t5;
      _.fW = t6;
    },
    QuadBounds: function QuadBounds() {
      var _ = this;
      _.maxY = _.maxX = _.minY = _.minX = 0;
    },
    ConicBounds: function ConicBounds() {
      var _ = this;
      _.maxY = _.maxX = _.minY = _.minX = 0;
    },
    _ConicPair: function _ConicPair() {
      this.second = this.first = null;
    },
    CubicBounds: function CubicBounds() {
      var _ = this;
      _.maxY = _.minY = _.maxX = _.minX = 0;
    },
    SurfacePath: function SurfacePath(t0, t1) {
      var _ = this;
      _.pathRef = t0;
      _._fillType = t1;
      _.fLastMoveToIndex = 0;
      _._firstDirection = _._convexityType = -1;
    },
    PathIterator: function PathIterator(t0, t1, t2) {
      var _ = this;
      _.pathRef = t0;
      _._forceClose = t1;
      _._verbCount = t2;
      _._needClose = false;
      _._segmentState = 0;
      _._conicWeightIndex = -1;
      _._pointIndex = _._verbIndex = _._moveToY = _._moveToX = _._lastPointY = _._lastPointX = 0;
    },
    PathRef: function PathRef(t0, t1) {
      var _ = this;
      _.cachedBounds = _.fBounds = null;
      _._fVerbsCapacity = _._fPointsLength = _._fPointsCapacity = 0;
      _.fPoints = t0;
      _._fVerbs = t1;
      _._conicWeightsCapacity = _._fVerbsLength = 0;
      _._conicWeights = null;
      _._conicWeightsLength = 0;
      _.fIsFinite = _.fBoundsIsDirty = true;
      _.fRRectOrOvalIsCCW = _.fIsRect = _.fIsRRect = _.fIsOval = false;
      _.fRRectOrOvalStartIdx = -1;
      _.fSegmentMask = 0;
    },
    PathRefIterator: function PathRefIterator(t0) {
      var _ = this;
      _.pathRef = t0;
      _._conicWeightIndex = -1;
      _.iterIndex = _._pointIndex = _._verbIndex = 0;
    },
    QuadRoots: function QuadRoots() {
      this.root1 = this.root0 = null;
    },
    SkQuadCoefficients: function SkQuadCoefficients(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.ax = t0;
      _.ay = t1;
      _.bx = t2;
      _.by = t3;
      _.cx = t4;
      _.cy = t5;
    },
    PathWinding: function PathWinding(t0, t1, t2, t3) {
      var _ = this;
      _.pathRef = t0;
      _.x = t1;
      _.y = t2;
      _._onCurveCount = _._w = 0;
      _.__engine$_buffer = t3;
    },
    EnginePictureRecorder: function EnginePictureRecorder() {
      this.__engine$_canvas = null;
      this.__EnginePictureRecorder_cullRect_A = $;
      this.__engine$_isRecording = false;
    },
    EnginePicture: function EnginePicture(t0) {
      this.recordingCanvas = t0;
    },
    PaintRequest: function PaintRequest(t0, t1) {
      this.canvasSize = t0;
      this.paintCallback = t1;
    },
    PersistedPicture: function PersistedPicture(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.__engine$_canvas = null;
      _.dx = t0;
      _.dy = t1;
      _.picture = t2;
      _.localPaintBounds = t3;
      _._density = 1;
      _._requiresRepaint = false;
      _._elementCache = t4;
      _._exactLocalCullRect = _._optimalLocalCullRect = null;
      _._oldLayer = t5;
      _.__engine$_index = -1;
      _.__engine$_state = t6;
      _.localClipBounds = _.projectedClip = _.transform = _.parent = _.rootElement = null;
    },
    PersistedPicture__applyBitmapPaint_closure: function PersistedPicture__applyBitmapPaint_closure(t0) {
      this.$this = t0;
    },
    RecordingCanvas: function RecordingCanvas(t0, t1, t2) {
      var _ = this;
      _._paintBounds = t0;
      _._pictureBounds = null;
      _._commands = t1;
      _.renderStrategy = t2;
      _._recordingEnded = _._didDraw = false;
      _._saveCount = 1;
    },
    PaintCommand: function PaintCommand() {
    },
    DrawCommand: function DrawCommand() {
    },
    PaintSave: function PaintSave() {
    },
    PaintRestore: function PaintRestore() {
    },
    PaintTranslate: function PaintTranslate(t0, t1) {
      this.dx = t0;
      this.dy = t1;
    },
    PaintScale: function PaintScale(t0, t1) {
      this.sx = t0;
      this.sy = t1;
    },
    PaintTransform: function PaintTransform(t0) {
      this.matrix4 = t0;
    },
    PaintClipRect: function PaintClipRect(t0, t1) {
      var _ = this;
      _.rect = t0;
      _.clipOp = t1;
      _.isClippedOut = false;
      _.topBound = _.leftBound = -1 / 0;
      _.bottomBound = _.rightBound = 1 / 0;
    },
    PaintClipRRect: function PaintClipRRect(t0) {
      var _ = this;
      _.rrect = t0;
      _.isClippedOut = false;
      _.topBound = _.leftBound = -1 / 0;
      _.bottomBound = _.rightBound = 1 / 0;
    },
    PaintClipPath: function PaintClipPath(t0) {
      var _ = this;
      _.path = t0;
      _.isClippedOut = false;
      _.topBound = _.leftBound = -1 / 0;
      _.bottomBound = _.rightBound = 1 / 0;
    },
    PaintDrawPaint: function PaintDrawPaint(t0) {
      var _ = this;
      _.paint = t0;
      _.isClippedOut = false;
      _.topBound = _.leftBound = -1 / 0;
      _.bottomBound = _.rightBound = 1 / 0;
    },
    PaintDrawRect: function PaintDrawRect(t0, t1) {
      var _ = this;
      _.rect = t0;
      _.paint = t1;
      _.isClippedOut = false;
      _.topBound = _.leftBound = -1 / 0;
      _.bottomBound = _.rightBound = 1 / 0;
    },
    PaintDrawRRect: function PaintDrawRRect(t0, t1) {
      var _ = this;
      _.rrect = t0;
      _.paint = t1;
      _.isClippedOut = false;
      _.topBound = _.leftBound = -1 / 0;
      _.bottomBound = _.rightBound = 1 / 0;
    },
    PaintDrawDRRect: function PaintDrawDRRect(t0, t1, t2) {
      var _ = this;
      _.outer = t0;
      _.inner = t1;
      _.paint = t2;
      _.path = null;
      _.isClippedOut = false;
      _.topBound = _.leftBound = -1 / 0;
      _.bottomBound = _.rightBound = 1 / 0;
    },
    PaintDrawOval: function PaintDrawOval(t0, t1) {
      var _ = this;
      _.rect = t0;
      _.paint = t1;
      _.isClippedOut = false;
      _.topBound = _.leftBound = -1 / 0;
      _.bottomBound = _.rightBound = 1 / 0;
    },
    PaintDrawCircle: function PaintDrawCircle(t0, t1, t2) {
      var _ = this;
      _.c = t0;
      _.radius = t1;
      _.paint = t2;
      _.isClippedOut = false;
      _.topBound = _.leftBound = -1 / 0;
      _.bottomBound = _.rightBound = 1 / 0;
    },
    PaintDrawPath: function PaintDrawPath(t0, t1) {
      var _ = this;
      _.path = t0;
      _.paint = t1;
      _.isClippedOut = false;
      _.topBound = _.leftBound = -1 / 0;
      _.bottomBound = _.rightBound = 1 / 0;
    },
    PaintDrawShadow: function PaintDrawShadow(t0, t1, t2, t3) {
      var _ = this;
      _.path = t0;
      _.color = t1;
      _.elevation = t2;
      _.transparentOccluder = t3;
      _.isClippedOut = false;
      _.topBound = _.leftBound = -1 / 0;
      _.bottomBound = _.rightBound = 1 / 0;
    },
    PaintDrawImageRect: function PaintDrawImageRect(t0, t1, t2, t3) {
      var _ = this;
      _.image = t0;
      _.src = t1;
      _.dst = t2;
      _.paint = t3;
      _.isClippedOut = false;
      _.topBound = _.leftBound = -1 / 0;
      _.bottomBound = _.rightBound = 1 / 0;
    },
    PaintDrawParagraph: function PaintDrawParagraph(t0, t1) {
      var _ = this;
      _.paragraph = t0;
      _.offset = t1;
      _.isClippedOut = false;
      _.topBound = _.leftBound = -1 / 0;
      _.bottomBound = _.rightBound = 1 / 0;
    },
    _PaintBounds: function _PaintBounds(t0, t1, t2, t3) {
      var _ = this;
      _.maxPaintBounds = t0;
      _._didPaintInsideClipArea = false;
      _.__engine$_top = _.__engine$_left = 17976931348623157e292;
      _.__engine$_bottom = _.__engine$_right = -17976931348623157e292;
      _.__engine$_transforms = t1;
      _._clipStack = t2;
      _._currentMatrixIsIdentity = true;
      _._currentMatrix = t3;
      _._clipRectInitialized = false;
      _._currentClipBottom = _._currentClipRight = _._currentClipTop = _._currentClipLeft = 0;
    },
    RenderStrategy: function RenderStrategy() {
      var _ = this;
      _.isInsideSvgFilterTree = _.hasArbitraryPaint = _.hasParagraphs = _.hasImageElements = false;
    },
    _WebGlRenderer: function _WebGlRenderer() {
    },
    HtmlRenderer: function HtmlRenderer() {
      this.__HtmlRenderer__fontCollection_FI = $;
    },
    HtmlRenderer_initialize_closure: function HtmlRenderer_initialize_closure() {
    },
    SurfaceScene: function SurfaceScene(t0, t1) {
      this.webOnlyRootElement = t0;
      this.timingRecorder = t1;
    },
    PersistedScene: function PersistedScene(t0, t1, t2) {
      var _ = this;
      _._localTransformInverse = null;
      _.__engine$_children = t0;
      _._oldLayer = t1;
      _.__engine$_index = -1;
      _.__engine$_state = t2;
      _.localClipBounds = _.projectedClip = _.transform = _.parent = _.rootElement = null;
    },
    SurfaceSceneBuilder: function SurfaceSceneBuilder(t0) {
      this._surfaceStack = t0;
    },
    SurfaceSceneBuilder_build_closure: function SurfaceSceneBuilder_build_closure(t0) {
      this.$this = t0;
    },
    SurfaceSceneBuilder_build_closure0: function SurfaceSceneBuilder_build_closure0(t0, t1) {
      this.$this = t0;
      this.recorder = t1;
    },
    NormalizedGradient: function NormalizedGradient(t0, t1, t2, t3, t4) {
      var _ = this;
      _._thresholds = t0;
      _._bias = t1;
      _._scale = t2;
      _.thresholdCount = t3;
      _.isOpaque = t4;
    },
    NormalizedGradient_NormalizedGradient_closure: function NormalizedGradient_NormalizedGradient_closure() {
    },
    SharedCanvas: function SharedCanvas() {
      this.__engine$_canvas = null;
    },
    EngineGradient: function EngineGradient() {
    },
    GradientLinear: function GradientLinear(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.from = t0;
      _.to = t1;
      _.colors = t2;
      _.colorStops = t3;
      _.tileMode = t4;
      _.matrix4 = t5;
    },
    GradientLinear_createImageBitmap_closure: function GradientLinear_createImageBitmap_closure(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.createDataUrl = t0;
      _.shaderBounds = t1;
      _.gl = t2;
      _.glProgram = t3;
      _.normalizedGradient = t4;
      _.widthInPixels = t5;
      _.heightInPixels = t6;
    },
    ModeHtmlColorFilter: function ModeHtmlColorFilter() {
    },
    MatrixHtmlColorFilter: function MatrixHtmlColorFilter() {
    },
    ShaderBuilder: function ShaderBuilder(t0, t1, t2, t3, t4) {
      var _ = this;
      _.declarations = t0;
      _._methods = t1;
      _.floatPrecision = null;
      _._uniformCounter = _._varyingCounter = _._attribCounter = 0;
      _.isWebGl2 = t2;
      _._isFragmentShader = t3;
      _._fragmentColorDeclaration = null;
      _.__engine$_buffer = t4;
    },
    ShaderMethod: function ShaderMethod(t0, t1) {
      this.name = t0;
      this._statements = t1;
      this.__engine$_indentLevel = 1;
    },
    ShaderDeclaration: function ShaderDeclaration(t0, t1, t2) {
      this.name = t0;
      this.dataType = t1;
      this.storage = t2;
    },
    commitScene_closure: function commitScene_closure() {
    },
    PersistedSurfaceState: function PersistedSurfaceState(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    PersistedSurface: function PersistedSurface() {
    },
    PersistedLeafSurface: function PersistedLeafSurface() {
    },
    PersistedContainerSurface: function PersistedContainerSurface() {
    },
    PersistedContainerSurface__matchChildren_closure: function PersistedContainerSurface__matchChildren_closure() {
    },
    _PersistedSurfaceMatch: function _PersistedSurfaceMatch(t0, t1, t2) {
      this.newChild = t0;
      this.oldChildIndex = t1;
      this.matchQuality = t2;
    },
    PrerollSurfaceContext: function PrerollSurfaceContext() {
    },
    PersistedTransform: function PersistedTransform(t0, t1, t2, t3) {
      var _ = this;
      _._matrixStorage = t0;
      _._localTransformInverse = _._matrix4 = null;
      _.__engine$_children = t1;
      _._oldLayer = t2;
      _.__engine$_index = -1;
      _.__engine$_state = t3;
      _.localClipBounds = _.projectedClip = _.transform = _.parent = _.rootElement = null;
    },
    ContextMenu: function ContextMenu(t0) {
      this.element = t0;
      this._enabled = true;
    },
    MouseCursor: function MouseCursor() {
    },
    preventDefaultListener_closure: function preventDefaultListener_closure() {
    },
    NotoFont: function NotoFont(t0, t1, t2, t3, t4) {
      var _ = this;
      _.name = t0;
      _.url = t1;
      _.enabled = t2;
      _.index = t3;
      _.coverCount = 0;
      _.coverComponents = t4;
    },
    FallbackFontComponent: function FallbackFontComponent(t0) {
      this._allFonts = t0;
      this.__FallbackFontComponent__activeFonts_FI = $;
      this.coverCount = 0;
    },
    FallbackFontComponent__activeFonts_closure: function FallbackFontComponent__activeFonts_closure() {
    },
    HighContrastSupport: function HighContrastSupport(t0, t1) {
      this._listeners = t0;
      this._highContrastMediaQuery = t1;
      this.__HighContrastSupport__onHighContrastChangeListener_FI = $;
    },
    EnginePlatformDispatcher: function EnginePlatformDispatcher(t0, t1, t2, t3, t4) {
      var _ = this;
      _.__EnginePlatformDispatcher__onViewDisposedListener_A = $;
      _.accessibilityPlaceholder = t0;
      _.configuration = t1;
      _.displays = t2;
      _.__EnginePlatformDispatcher__appLifecycleState_FI = _.__EnginePlatformDispatcher_viewManager_FI = $;
      _._onMetricsChangedZone = _._onMetricsChanged = null;
      _.__EnginePlatformDispatcher__viewFocusBinding_FI = $;
      _._onTextScaleFactorChangedZone = _._onTextScaleFactorChanged = _._fontSizeObserver = _._onLocaleChangedZone = _._onLocaleChanged = _._onLocaleChangedSubscription = _._onReportTimingsZone = _._onReportTimings = _._onKeyDataZone = _._onKeyData = _._onPointerDataPacketZone = _._onPointerDataPacket = _._onDrawFrameZone = _._onDrawFrame = _._onBeginFrameZone = _._onBeginFrame = _._viewsRenderedInCurrentFrame = _._onViewFocusChangeZone = _._onViewFocusChange = null;
      _._brightnessMediaQuery = t3;
      _._onSemanticsActionEvent = _._onSemanticsEnabledChangedZone = _._onSemanticsEnabledChanged = _._onPlatformBrightnessChangedZone = _._onPlatformBrightnessChanged = _._brightnessMediaQueryListener = null;
      _._onSemanticsActionEventZone = t4;
      _._defaultRouteName = null;
    },
    EnginePlatformDispatcher_closure: function EnginePlatformDispatcher_closure(t0) {
      this.$this = t0;
    },
    EnginePlatformDispatcher_invokeOnKeyData_closure: function EnginePlatformDispatcher_invokeOnKeyData_closure(t0, t1, t2) {
      this.callback = t0;
      this.onKeyData = t1;
      this.data = t2;
    },
    EnginePlatformDispatcher__zonedPlatformMessageResponseCallback_closure: function EnginePlatformDispatcher__zonedPlatformMessageResponseCallback_closure(t0, t1) {
      this.registrationZone = t0;
      this.callback = t1;
    },
    EnginePlatformDispatcher__sendPlatformMessage_closure: function EnginePlatformDispatcher__sendPlatformMessage_closure(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    EnginePlatformDispatcher__sendPlatformMessage_closure0: function EnginePlatformDispatcher__sendPlatformMessage_closure0(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    EnginePlatformDispatcher__sendPlatformMessage_closure1: function EnginePlatformDispatcher__sendPlatformMessage_closure1(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    EnginePlatformDispatcher__addLocaleChangedListener_closure: function EnginePlatformDispatcher__addLocaleChangedListener_closure(t0) {
      this.$this = t0;
    },
    EnginePlatformDispatcher__addFontSizeObserver_closure: function EnginePlatformDispatcher__addFontSizeObserver_closure(t0) {
      this.$this = t0;
    },
    EnginePlatformDispatcher__setAppLifecycleState_closure: function EnginePlatformDispatcher__setAppLifecycleState_closure() {
    },
    EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure: function EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure(t0) {
      this.$this = t0;
    },
    EnginePlatformDispatcher_replyToPlatformMessage_closure: function EnginePlatformDispatcher_replyToPlatformMessage_closure(t0, t1) {
      this.callback = t0;
      this.data = t1;
    },
    invoke2_closure: function invoke2_closure(t0, t1, t2) {
      this.callback = t0;
      this.arg1 = t1;
      this.arg2 = t2;
    },
    ViewConfiguration0: function ViewConfiguration0() {
    },
    PlatformConfiguration: function PlatformConfiguration(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.accessibilityFeatures = t0;
      _.alwaysUse24HourFormat = t1;
      _.semanticsEnabled = t2;
      _.platformBrightness = t3;
      _.textScaleFactor = t4;
      _.locales = t5;
      _.defaultRouteName = t6;
      _.systemFontFamily = t7;
    },
    AppLifecycleState0: function AppLifecycleState0() {
    },
    _BrowserAppLifecycleState: function _BrowserAppLifecycleState(t0, t1, t2, t3) {
      var _ = this;
      _._viewManager = t0;
      _._subscriptions = t1;
      _.___BrowserAppLifecycleState__visibilityChangeListener_FI = _.___BrowserAppLifecycleState__blurListener_FI = _.___BrowserAppLifecycleState__focusListener_FI = $;
      _._appLifecycleState = t2;
      _._listeners = t3;
    },
    _BrowserAppLifecycleState__focusListener_closure: function _BrowserAppLifecycleState__focusListener_closure(t0) {
      this.$this = t0;
    },
    _BrowserAppLifecycleState__blurListener_closure: function _BrowserAppLifecycleState__blurListener_closure(t0) {
      this.$this = t0;
    },
    _BrowserAppLifecycleState__visibilityChangeListener_closure: function _BrowserAppLifecycleState__visibilityChangeListener_closure(t0) {
      this.$this = t0;
    },
    ViewFocusBinding: function ViewFocusBinding(t0, t1, t2) {
      var _ = this;
      _._viewManager = t0;
      _._onViewFocusChange = t1;
      _._lastViewId = null;
      _._viewFocusDirection = t2;
      _._onViewCreatedListener = null;
      _.__ViewFocusBinding__handleKeyUp_FI = _.__ViewFocusBinding__handleKeyDown_FI = _.__ViewFocusBinding__handleFocusout_FI = _.__ViewFocusBinding__handleFocusin_FI = $;
    },
    ViewFocusBinding__handleFocusin_closure: function ViewFocusBinding__handleFocusin_closure(t0) {
      this.$this = t0;
    },
    ViewFocusBinding__handleFocusout_closure: function ViewFocusBinding__handleFocusout_closure(t0) {
      this.$this = t0;
    },
    ViewFocusBinding__handleKeyDown_closure: function ViewFocusBinding__handleKeyDown_closure(t0) {
      this.$this = t0;
    },
    ViewFocusBinding__handleKeyUp_closure: function ViewFocusBinding__handleKeyUp_closure(t0) {
      this.$this = t0;
    },
    PlatformViewManager: function PlatformViewManager(t0, t1, t2, t3) {
      var _ = this;
      _._factories = t0;
      _.__engine$_contents = t1;
      _._invisibleViews = t2;
      _._viewIdToType = t3;
    },
    PlatformViewManager_renderContent_closure: function PlatformViewManager_renderContent_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.viewId = t1;
      _.slotName = t2;
      _.viewType = t3;
      _.params = t4;
    },
    PlatformViewMessageHandler: function PlatformViewMessageHandler(t0) {
      this._contentManager = t0;
    },
    SafariPointerEventWorkaround: function SafariPointerEventWorkaround() {
      this._listener = null;
    },
    SafariPointerEventWorkaround_workAroundMissingPointerEvents_closure: function SafariPointerEventWorkaround_workAroundMissingPointerEvents_closure() {
    },
    PointerBinding: function PointerBinding(t0, t1, t2) {
      var _ = this;
      _._safariWorkaround = null;
      _.view = t0;
      _._pointerDataConverter = t1;
      _._keyboardConverter = t2;
      _.__PointerBinding__adapter_A = $;
    },
    ClickDebouncer: function ClickDebouncer() {
      this._lastSentPointerUpTimeStamp = this.__engine$_state = null;
    },
    PointerSupportDetector: function PointerSupportDetector() {
    },
    Listener: function Listener(t0, t1, t2) {
      this.event = t0;
      this.target = t1;
      this.handler = t2;
    },
    _BaseAdapter: function _BaseAdapter() {
    },
    _BaseAdapter_addEventListener_loggedHandler: function _BaseAdapter_addEventListener_loggedHandler(t0) {
      this.handler = t0;
    },
    _WheelEventListenerMixin: function _WheelEventListenerMixin() {
    },
    _WheelEventListenerMixin__convertWheelEventToPointerData_closure: function _WheelEventListenerMixin__convertWheelEventToPointerData_closure(t0) {
      this.$this = t0;
    },
    _SanitizedDetails: function _SanitizedDetails(t0, t1) {
      this.change = t0;
      this.buttons = t1;
    },
    _ButtonSanitizer: function _ButtonSanitizer() {
      this._pressedButtons = 0;
    },
    _PointerAdapter: function _PointerAdapter(t0, t1, t2) {
      var _ = this;
      _._sanitizers = t0;
      _.__engine$_owner = t1;
      _._listeners = t2;
      _._lastWheelEvent = null;
      _._lastWheelEventAllowedDefault = _._lastWheelEventWasTrackpad = false;
    },
    _PointerAdapter__ensureSanitizer_closure: function _PointerAdapter__ensureSanitizer_closure() {
    },
    _PointerAdapter__addPointerEventListener_closure: function _PointerAdapter__addPointerEventListener_closure(t0, t1, t2) {
      this.$this = t0;
      this.checkModifiers = t1;
      this.handler = t2;
    },
    _PointerAdapter_setup_closure: function _PointerAdapter_setup_closure(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup__closure: function _PointerAdapter_setup__closure(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure0: function _PointerAdapter_setup_closure0(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure1: function _PointerAdapter_setup_closure1(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure2: function _PointerAdapter_setup_closure2(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure3: function _PointerAdapter_setup_closure3(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure4: function _PointerAdapter_setup_closure4(t0) {
      this.$this = t0;
    },
    _PointerDeviceState: function _PointerDeviceState(t0, t1) {
      this._pointer = null;
      this.x = t0;
      this.y = t1;
    },
    _GlobalPointerState: function _GlobalPointerState(t0) {
      this.pointers = t0;
      this.activeButtons = 0;
    },
    _GlobalPointerState_ensurePointerDeviceState_closure: function _GlobalPointerState_ensurePointerDeviceState_closure(t0, t1) {
      this.x = t0;
      this.y = t1;
    },
    PointerDataConverter: function PointerDataConverter() {
    },
    Instrumentation: function Instrumentation(t0) {
      this._counters = t0;
      this._printTimer = null;
    },
    Instrumentation_incrementCounter_closure: function Instrumentation_incrementCounter_closure(t0) {
      this.$this = t0;
    },
    RRectRenderer: function RRectRenderer() {
    },
    RRectToCanvasRenderer: function RRectToCanvasRenderer(t0) {
      this.context = t0;
    },
    GlProgram: function GlProgram(t0) {
      this.program = t0;
    },
    GlContext: function GlContext(t0) {
      var _ = this;
      _.glContext = t0;
      _._heightInPixels = _._widthInPixels = _.__engine$_canvas = _._kUnsignedShort = _._kUnsignedByte = _._kLinkStatus = _._kTriangles = _._kColorBufferBit = _._kFloat = _._kStaticDraw = _._kElementArrayBuffer = _._kArrayBuffer = _._kCompileStatus = null;
    },
    OffScreenCanvas: function OffScreenCanvas(t0, t1) {
      var _ = this;
      _.canvasElement = _.offScreenCanvas = null;
      _.width = t0;
      _.height = t1;
    },
    Assertiveness: function Assertiveness(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    AccessibilityAnnouncements: function AccessibilityAnnouncements(t0, t1) {
      this._politeElement = t0;
      this._assertiveElement = t1;
      this._appendSpace = false;
    },
    AccessibilityAnnouncements_announce_closure: function AccessibilityAnnouncements_announce_closure(t0) {
      this.messageElement = t0;
    },
    _CheckableKind: function _CheckableKind(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    Checkable: function Checkable(t0, t1, t2) {
      var _ = this;
      _.__engine$_kind = t0;
      _.__PrimaryRoleManager_element_F = $;
      _.role = t1;
      _.semanticsObject = t2;
      _._labelAndValue = _._focusable = _._secondaryRoleManagers = null;
    },
    Dialog: function Dialog(t0, t1) {
      var _ = this;
      _.__PrimaryRoleManager_element_F = $;
      _.role = t0;
      _.semanticsObject = t1;
      _._labelAndValue = _._focusable = _._secondaryRoleManagers = null;
    },
    Dialog_closure: function Dialog_closure(t0, t1) {
      this.$this = t0;
      this.semanticsObject = t1;
    },
    Dialog__setDefaultFocus_closure: function Dialog__setDefaultFocus_closure() {
    },
    RouteName: function RouteName(t0, t1) {
      var _ = this;
      _._dialog = null;
      _.semanticsObject = t0;
      _.owner = t1;
      _._isDisposed = false;
    },
    RouteName_update_closure: function RouteName_update_closure(t0) {
      this.$this = t0;
    },
    Focusable: function Focusable(t0, t1, t2) {
      var _ = this;
      _._focusManager = t0;
      _.semanticsObject = t1;
      _.owner = t2;
      _._isDisposed = false;
    },
    AccessibilityFocusManager: function AccessibilityFocusManager(t0) {
      this.__engine$_owner = t0;
      this._lastSetValue = this.__engine$_target = null;
    },
    AccessibilityFocusManager_manage_closure: function AccessibilityFocusManager_manage_closure(t0) {
      this.$this = t0;
    },
    AccessibilityFocusManager_manage_closure0: function AccessibilityFocusManager_manage_closure0(t0) {
      this.$this = t0;
    },
    AccessibilityFocusManager_changeFocus_closure: function AccessibilityFocusManager_changeFocus_closure(t0, t1) {
      this.$this = t0;
      this.target = t1;
    },
    Heading: function Heading(t0, t1) {
      var _ = this;
      _.__PrimaryRoleManager_element_F = $;
      _.role = t0;
      _.semanticsObject = t1;
      _._labelAndValue = _._focusable = _._secondaryRoleManagers = null;
    },
    ImageRoleManager: function ImageRoleManager(t0, t1) {
      var _ = this;
      _._auxiliaryImageElement = null;
      _.__PrimaryRoleManager_element_F = $;
      _.role = t0;
      _.semanticsObject = t1;
      _._labelAndValue = _._focusable = _._secondaryRoleManagers = null;
    },
    Incrementable: function Incrementable(t0, t1, t2, t3) {
      var _ = this;
      _.__engine$_element = t0;
      _._focusManager = t1;
      _._currentSurrogateValue = 1;
      _.__Incrementable__gestureModeListener_F = $;
      _._pendingResync = false;
      _.__PrimaryRoleManager_element_F = $;
      _.role = t2;
      _.semanticsObject = t3;
      _._labelAndValue = _._focusable = _._secondaryRoleManagers = null;
    },
    Incrementable_closure: function Incrementable_closure(t0, t1) {
      this.$this = t0;
      this.semanticsObject = t1;
    },
    Incrementable_closure0: function Incrementable_closure0(t0) {
      this.$this = t0;
    },
    LabelRepresentation: function LabelRepresentation(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    LabelRepresentationBehavior: function LabelRepresentationBehavior() {
    },
    AriaLabelRepresentation: function AriaLabelRepresentation(t0, t1) {
      this.kind = t0;
      this.owner = t1;
    },
    DomTextRepresentation: function DomTextRepresentation(t0, t1) {
      this._domText = null;
      this.kind = t0;
      this.owner = t1;
    },
    SizedSpanRepresentation: function SizedSpanRepresentation(t0, t1, t2) {
      var _ = this;
      _._domText = t0;
      _._previousSize = _._previousLabel = null;
      _.kind = t1;
      _.owner = t2;
    },
    LabelAndValue: function LabelAndValue(t0, t1, t2) {
      var _ = this;
      _.preferredRepresentation = t0;
      _._representation = null;
      _.semanticsObject = t1;
      _.owner = t2;
      _._isDisposed = false;
    },
    _computeLabelHintValue_closure: function _computeLabelHintValue_closure() {
    },
    Link: function Link(t0, t1) {
      var _ = this;
      _.__PrimaryRoleManager_element_F = $;
      _.role = t0;
      _.semanticsObject = t1;
      _._labelAndValue = _._focusable = _._secondaryRoleManagers = null;
    },
    LiveRegion: function LiveRegion(t0, t1) {
      var _ = this;
      _._lastAnnouncement = null;
      _.semanticsObject = t0;
      _.owner = t1;
      _._isDisposed = false;
    },
    PlatformViewRoleManager: function PlatformViewRoleManager(t0, t1) {
      var _ = this;
      _.__PrimaryRoleManager_element_F = $;
      _.role = t0;
      _.semanticsObject = t1;
      _._labelAndValue = _._focusable = _._secondaryRoleManagers = null;
    },
    Scrollable: function Scrollable(t0, t1, t2) {
      var _ = this;
      _._gestureModeListener = null;
      _._scrollOverflowElement = t0;
      _._scrollListener = null;
      _._effectiveNeutralScrollPosition = 0;
      _.__PrimaryRoleManager_element_F = $;
      _.role = t1;
      _.semanticsObject = t2;
      _._labelAndValue = _._focusable = _._secondaryRoleManagers = null;
    },
    Scrollable_update_closure: function Scrollable_update_closure(t0) {
      this.$this = t0;
    },
    Scrollable_update_closure0: function Scrollable_update_closure0(t0) {
      this.$this = t0;
    },
    Scrollable_update_closure1: function Scrollable_update_closure1(t0) {
      this.$this = t0;
    },
    EngineAccessibilityFeatures: function EngineAccessibilityFeatures(t0) {
      this.__engine$_index = t0;
    },
    EngineAccessibilityFeaturesBuilder: function EngineAccessibilityFeaturesBuilder(t0) {
      this.__engine$_index = t0;
    },
    PrimaryRole: function PrimaryRole(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    PrimaryRoleManager: function PrimaryRoleManager() {
    },
    GenericRole: function GenericRole(t0, t1) {
      var _ = this;
      _.__PrimaryRoleManager_element_F = $;
      _.role = t0;
      _.semanticsObject = t1;
      _._labelAndValue = _._focusable = _._secondaryRoleManagers = null;
    },
    RoleManager: function RoleManager() {
    },
    SemanticsObject: function SemanticsObject(t0, t1) {
      var _ = this;
      _.__engine$_flags = 0;
      _.__engine$_tooltip = _._additionalActions = _._childrenInHitTestOrder = _._childrenInTraversalOrder = _.__engine$_transform = _.__engine$_textDirection = _._decreasedValueAttributes = _._decreasedValue = _._increasedValueAttributes = _._increasedValue = _._valueAttributes = _.__engine$_value = _._hintAttributes = _._hint = _._labelAttributes = _._label = _._rect = _.__engine$_scrollExtentMin = _.__engine$_scrollExtentMax = _.__engine$_scrollPosition = _.__engine$_scrollIndex = _._scrollChildren = _._textSelectionExtent = _._textSelectionBase = _.__engine$_actions = null;
      _.__engine$_platformViewId = -1;
      _.__engine$_headingLevel = 0;
      _.__engine$_identifier = null;
      _.id = t0;
      _.owner = t1;
      _._dirtyFields = -1;
      _.primaryRole = _._currentChildrenInRenderOrder = _.__engine$_parent = _._childContainerElement = null;
      _.horizontalContainerAdjustment = _.verticalContainerAdjustment = 0;
    },
    AccessibilityMode: function AccessibilityMode(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    GestureMode: function GestureMode(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    EngineSemantics: function EngineSemantics(t0, t1, t2, t3, t4) {
      var _ = this;
      _.accessibilityAnnouncements = t0;
      _._semanticsEnabled = false;
      _._now = t1;
      _.semanticsHelper = t2;
      _._gestureMode = t3;
      _._gestureModeClock = null;
      _._gestureModeListeners = t4;
    },
    EngineSemantics__now_closure: function EngineSemantics__now_closure() {
    },
    EngineSemantics__getGestureModeClock_closure: function EngineSemantics__getGestureModeClock_closure(t0) {
      this.$this = t0;
    },
    EngineSemanticsOwner: function EngineSemanticsOwner(t0, t1, t2, t3, t4) {
      var _ = this;
      _.semanticsHost = t0;
      _._rootSemanticsElement = null;
      _._semanticsTree = t1;
      _._attachments = t2;
      _._detachments = t3;
      _._oneTimePostUpdateCallbacks = t4;
      _._hasNodeRequestingFocus = false;
    },
    EngineSemanticsOwner_closure: function EngineSemanticsOwner_closure(t0) {
      this.$this = t0;
    },
    EngineSemanticsOwner__finalizeTree_closure: function EngineSemanticsOwner__finalizeTree_closure(t0, t1) {
      this.$this = t0;
      this.removals = t1;
    },
    EnabledState: function EnabledState(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    SemanticsHelper: function SemanticsHelper(t0) {
      this._semanticsEnabler = t0;
    },
    SemanticsEnabler: function SemanticsEnabler() {
    },
    DesktopSemanticsEnabler: function DesktopSemanticsEnabler() {
      this._semanticsPlaceholder = null;
    },
    DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure: function DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure(t0) {
      this.$this = t0;
    },
    MobileSemanticsEnabler: function MobileSemanticsEnabler() {
      var _ = this;
      _._semanticsPlaceholder = _.semanticsActivationTimer = null;
      _.semanticsActivationAttempts = 0;
      _._schedulePlaceholderRemoval = false;
    },
    MobileSemanticsEnabler_tryEnableSemantics_closure: function MobileSemanticsEnabler_tryEnableSemantics_closure(t0) {
      this.$this = t0;
    },
    MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure: function MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure(t0) {
      this.$this = t0;
    },
    Button: function Button(t0, t1) {
      var _ = this;
      _.__PrimaryRoleManager_element_F = $;
      _.role = t0;
      _.semanticsObject = t1;
      _._labelAndValue = _._focusable = _._secondaryRoleManagers = null;
    },
    Tappable: function Tappable(t0, t1) {
      var _ = this;
      _._clickListener = null;
      _._isListening = false;
      _.semanticsObject = t0;
      _.owner = t1;
      _._isDisposed = false;
    },
    Tappable_closure: function Tappable_closure(t0, t1) {
      this.$this = t0;
      this.semanticsObject = t1;
    },
    SemanticsTextEditingStrategy: function SemanticsTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._queuedStyle = _.inputConfig = _.activeTextField = null;
      _.owner = t0;
      _.isEnabled = false;
      _.domElement = null;
      _.__DefaultTextEditingStrategy_inputConfiguration_A = $;
      _.onAction = _.onChange = _.geometry = _.style = _._editingDeltaState = _.lastEditingState = null;
      _.subscriptions = t1;
      _._appendedToForm = false;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    TextField: function TextField(t0, t1) {
      var _ = this;
      _._positionInputElementTimer = _.editableElement = null;
      _.__PrimaryRoleManager_element_F = $;
      _.role = t0;
      _.semanticsObject = t1;
      _._labelAndValue = _._focusable = _._secondaryRoleManagers = null;
    },
    TextField__initializeForBlink_closure: function TextField__initializeForBlink_closure(t0) {
      this.$this = t0;
    },
    TextField__initializeForBlink_closure0: function TextField__initializeForBlink_closure0(t0) {
      this.$this = t0;
    },
    TextField__initializeForWebkit_closure: function TextField__initializeForWebkit_closure(t0) {
      this._box_0 = t0;
    },
    TextField__initializeForWebkit_closure0: function TextField__initializeForWebkit_closure0(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    TextField__invokeIosWorkaround_closure: function TextField__invokeIosWorkaround_closure(t0) {
      this.$this = t0;
    },
    TextField__invokeIosWorkaround_closure0: function TextField__invokeIosWorkaround_closure0(t0) {
      this.$this = t0;
    },
    TextField_update_closure: function TextField_update_closure(t0) {
      this.$this = t0;
    },
    _TypedDataBuffer: function _TypedDataBuffer() {
    },
    _IntBuffer: function _IntBuffer() {
    },
    Uint8Buffer: function Uint8Buffer(t0, t1) {
      this.__engine$_buffer = t0;
      this.__engine$_length = t1;
    },
    MethodCall0: function MethodCall0(t0, t1) {
      this.method = t0;
      this.$arguments = t1;
    },
    StringCodec: function StringCodec() {
    },
    JSONMessageCodec: function JSONMessageCodec() {
    },
    JSONMethodCodec: function JSONMethodCodec() {
    },
    StandardMessageCodec: function StandardMessageCodec() {
    },
    StandardMessageCodec_writeValue_closure0: function StandardMessageCodec_writeValue_closure0(t0, t1) {
      this.$this = t0;
      this.buffer = t1;
    },
    StandardMethodCodec: function StandardMethodCodec() {
    },
    WriteBuffer0: function WriteBuffer0(t0, t1, t2) {
      this.__engine$_buffer = t0;
      this.__engine$_eightBytes = t1;
      this.__engine$_eightBytesAsList = t2;
    },
    ReadBuffer0: function ReadBuffer0(t0) {
      this.data = t0;
      this.__engine$_position = 0;
    },
    SurfaceShadowData: function SurfaceShadowData(t0, t1) {
      this.blurWidth = t0;
      this.offset = t1;
    },
    CanvasParagraph: function CanvasParagraph(t0, t1, t2, t3) {
      var _ = this;
      _.spans = t0;
      _.paragraphStyle = t1;
      _.plainText = t2;
      _.canDrawOnCanvas = t3;
      _.isLaidOut = false;
      _._lastUsedConstraints = null;
      _.__CanvasParagraph__paintService_FI = _.__CanvasParagraph__layoutService_FI = $;
      _._cachedDomElement = null;
    },
    CanvasParagraph_computeLineMetrics_closure: function CanvasParagraph_computeLineMetrics_closure() {
    },
    ParagraphSpan: function ParagraphSpan(t0, t1) {
      this.style = t0;
      this.end = t1;
    },
    StyleNode: function StyleNode() {
    },
    ChildStyleNode: function ChildStyleNode(t0, t1) {
      this.parent = t0;
      this.style = t1;
      this._cachedStyle = null;
    },
    RootStyleNode: function RootStyleNode(t0) {
      this.paragraphStyle = t0;
      this._cachedStyle = null;
    },
    CanvasParagraphBuilder: function CanvasParagraphBuilder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._plainTextBuffer = t0;
      _._paragraphStyle = t1;
      _._spans = t2;
      _._styleStack = t3;
      _._rootStyleNode = t4;
      _._placeholderScales = t5;
      _._canDrawOnCanvas = true;
    },
    HtmlFontCollection: function HtmlFontCollection() {
    },
    HtmlFontCollection_loadAssetFonts_closure: function HtmlFontCollection_loadAssetFonts_closure(t0, t1, t2) {
      this.$this = t0;
      this.fontAsset = t1;
      this.family = t2;
    },
    TextFragmenter: function TextFragmenter() {
    },
    TextFragment: function TextFragment() {
    },
    LayoutFragmenter: function LayoutFragmenter(t0, t1) {
      this.paragraphSpans = t0;
      this.text = t1;
    },
    _CombinedFragment: function _CombinedFragment() {
    },
    LayoutFragment: function LayoutFragment(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17) {
      var _ = this;
      _._FragmentBox____FragmentBox__textBoxIncludingTrailingSpaces_FI = t0;
      _._FragmentBox____FragmentBox_graphemeStartIndexRange_FI = t1;
      _._FragmentPosition____FragmentPosition__startOffset_A = t2;
      _._FragmentPosition____FragmentPosition_line_A = t3;
      _._FragmentMetrics____FragmentMetrics__spanometer_A = t4;
      _._FragmentMetrics____FragmentMetrics__ascent_A = t5;
      _._FragmentMetrics____FragmentMetrics__descent_A = t6;
      _._FragmentMetrics____FragmentMetrics__widthExcludingTrailingSpaces_A = t7;
      _._FragmentMetrics____FragmentMetrics__widthIncludingTrailingSpaces_A = t8;
      _._FragmentMetrics__extraWidthForJustification = t9;
      _.type = t10;
      _.__engine$_textDirection = t11;
      _.fragmentFlow = t12;
      _.span = t13;
      _.trailingNewlines = t14;
      _.trailingSpaces = t15;
      _.start = t16;
      _.end = t17;
    },
    _FragmentMetrics: function _FragmentMetrics() {
    },
    _FragmentPosition: function _FragmentPosition() {
    },
    _FragmentBox: function _FragmentBox() {
    },
    EllipsisFragment: function EllipsisFragment(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17) {
      var _ = this;
      _._FragmentBox____FragmentBox__textBoxIncludingTrailingSpaces_FI = t0;
      _._FragmentBox____FragmentBox_graphemeStartIndexRange_FI = t1;
      _._FragmentPosition____FragmentPosition__startOffset_A = t2;
      _._FragmentPosition____FragmentPosition_line_A = t3;
      _._FragmentMetrics____FragmentMetrics__spanometer_A = t4;
      _._FragmentMetrics____FragmentMetrics__ascent_A = t5;
      _._FragmentMetrics____FragmentMetrics__descent_A = t6;
      _._FragmentMetrics____FragmentMetrics__widthExcludingTrailingSpaces_A = t7;
      _._FragmentMetrics____FragmentMetrics__widthIncludingTrailingSpaces_A = t8;
      _._FragmentMetrics__extraWidthForJustification = t9;
      _.type = t10;
      _.__engine$_textDirection = t11;
      _.fragmentFlow = t12;
      _.span = t13;
      _.trailingNewlines = t14;
      _.trailingSpaces = t15;
      _.start = t16;
      _.end = t17;
    },
    TextLayoutService: function TextLayoutService(t0, t1, t2) {
      var _ = this;
      _.paragraph = t0;
      _.width = -1;
      _.height = 0;
      _.longestLine = null;
      _.maxIntrinsicWidth = _.minIntrinsicWidth = 0;
      _.ideographicBaseline = _.alphabeticBaseline = -1;
      _.didExceedMaxLines = false;
      _.lines = t1;
      _._paintBounds = t2;
      _.__TextLayoutService_layoutFragmenter_FI = _.__TextLayoutService_spanometer_FI = $;
    },
    LineBuilder: function LineBuilder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._fragments = t0;
      _._fragmentsForNextLine = null;
      _.maxWidth = t1;
      _.paragraph = t2;
      _.spanometer = t3;
      _.lineNumber = t4;
      _.accumulatedHeight = t5;
      _.descent = _.ascent = _.widthIncludingSpace = _.width = 0;
      _._lastBreakableFragment = -1;
      _._trailingSpaces = _._spaceCount = _._breakCount = 0;
    },
    Spanometer: function Spanometer(t0) {
      this.paragraph = t0;
      this._currentSpan = this._currentRuler = null;
    },
    Spanometer_clearRulersCache_closure: function Spanometer_clearRulersCache_closure() {
    },
    LineBreakType: function LineBreakType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    FWLineBreakFragmenter: function FWLineBreakFragmenter(t0) {
      this.text = t0;
    },
    V8LineBreakFragmenter: function V8LineBreakFragmenter(t0, t1) {
      this._v8BreakIterator = t0;
      this.text = t1;
    },
    LineBreakFragment: function LineBreakFragment(t0, t1, t2, t3, t4) {
      var _ = this;
      _.type = t0;
      _.trailingNewlines = t1;
      _.trailingSpaces = t2;
      _.start = t3;
      _.end = t4;
    },
    _computeLineBreakFragments_setBreak: function _computeLineBreakFragments_setBreak(t0, t1, t2) {
      this._box_0 = t0;
      this.text = t1;
      this.fragments = t2;
    },
    RulerHost: function RulerHost(t0) {
      this._rulerHost = t0;
    },
    TextPaintService: function TextPaintService(t0) {
      this.paragraph = t0;
    },
    EngineLineMetrics: function EngineLineMetrics(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.hardBreak = t0;
      _.ascent = t1;
      _.descent = t2;
      _.unscaledAscent = t3;
      _.height = t4;
      _.width = t5;
      _.left = t6;
      _.baseline = t7;
      _.lineNumber = t8;
    },
    ParagraphLine: function ParagraphLine(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.lineMetrics = t0;
      _.startIndex = t1;
      _.endIndex = t2;
      _.__ParagraphLine_visibleEndIndex_FI = $;
      _.trailingNewlines = t3;
      _.trailingSpaces = t4;
      _.spaceCount = t5;
      _.widthWithTrailingSpaces = t6;
      _.fragments = t7;
      _.textDirection = t8;
      _.paragraph = t9;
      _.__ParagraphLine_graphemeStarts_FI = $;
    },
    EngineParagraphStyle: function EngineParagraphStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.textAlign = t0;
      _.textDirection = t1;
      _.fontWeight = t2;
      _.fontStyle = t3;
      _.maxLines = t4;
      _.fontFamily = t5;
      _.fontSize = t6;
      _.height = t7;
      _._textHeightBehavior = t8;
      _._strutStyle = t9;
      _.ellipsis = t10;
      _.locale = t11;
    },
    EngineTextStyle: function EngineTextStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21) {
      var _ = this;
      _.color = t0;
      _.decoration = t1;
      _.decorationColor = t2;
      _.decorationStyle = t3;
      _.decorationThickness = t4;
      _.fontWeight = t5;
      _.fontStyle = t6;
      _.textBaseline = t7;
      _.isFontFamilyProvided = t8;
      _.fontFamily = t9;
      _.fontFamilyFallback = t10;
      _.fontFeatures = t11;
      _.fontVariations = t12;
      _.fontSize = t13;
      _.letterSpacing = t14;
      _.wordSpacing = t15;
      _.height = t16;
      _.leadingDistribution = t17;
      _.locale = t18;
      _.background = t19;
      _.foreground = t20;
      _.shadows = t21;
      _._cssFontString = null;
      _.__EngineTextStyle_heightStyle_FI = $;
    },
    TextHeightStyle: function TextHeightStyle(t0, t1, t2, t3, t4) {
      var _ = this;
      _.fontFamily = t0;
      _.fontSize = t1;
      _.height = t2;
      _.fontFeatures = t3;
      _.fontVariations = t4;
      _.__TextHeightStyle_hashCode_FI = $;
    },
    TextDimensions: function TextDimensions(t0) {
      this.__engine$_element = t0;
      this._cachedBoundingClientRect = null;
    },
    TextHeightRuler: function TextHeightRuler(t0, t1, t2) {
      var _ = this;
      _.textHeightStyle = t0;
      _.rulerHost = t1;
      _.__TextHeightRuler__host_FI = _.__TextHeightRuler__probe_FI = $;
      _._dimensions = t2;
      _.__TextHeightRuler_height_FI = _.__TextHeightRuler_alphabeticBaseline_FI = $;
    },
    FragmentFlow: function FragmentFlow(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    BidiFragmenter: function BidiFragmenter(t0) {
      this.text = t0;
    },
    BidiFragment: function BidiFragment(t0, t1, t2, t3) {
      var _ = this;
      _.textDirection = t0;
      _.fragmentFlow = t1;
      _.start = t2;
      _.end = t3;
    },
    _ComparisonResult: function _ComparisonResult(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    UnicodeRange: function UnicodeRange(t0, t1, t2, t3) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _.property = t2;
      _.$ti = t3;
    },
    UnicodePropertyLookup: function UnicodePropertyLookup(t0, t1, t2, t3) {
      var _ = this;
      _.ranges = t0;
      _.defaultProperty = t1;
      _._cache = t2;
      _.$ti = t3;
    },
    _FindBreakDirection: function _FindBreakDirection(t0, t1, t2) {
      this.step = t0;
      this.index = t1;
      this._core$_name = t2;
    },
    BrowserAutofillHints: function BrowserAutofillHints(t0) {
      this._flutterToEngineMap = t0;
    },
    CompositionAwareMixin: function CompositionAwareMixin() {
    },
    EngineInputAction: function EngineInputAction() {
    },
    NoInputAction: function NoInputAction() {
    },
    EnterInputAction: function EnterInputAction() {
    },
    DoneInputAction: function DoneInputAction() {
    },
    GoInputAction: function GoInputAction() {
    },
    NextInputAction: function NextInputAction() {
    },
    PreviousInputAction: function PreviousInputAction() {
    },
    SearchInputAction: function SearchInputAction() {
    },
    SendInputAction: function SendInputAction() {
    },
    EngineInputType: function EngineInputType() {
    },
    NoTextInputType: function NoTextInputType() {
    },
    MultilineNoTextInputType: function MultilineNoTextInputType() {
    },
    TextInputType0: function TextInputType0() {
    },
    NumberInputType: function NumberInputType() {
    },
    DecimalInputType: function DecimalInputType() {
    },
    PhoneInputType: function PhoneInputType() {
    },
    EmailInputType: function EmailInputType() {
    },
    UrlInputType: function UrlInputType() {
    },
    MultilineInputType: function MultilineInputType() {
    },
    TextCapitalization: function TextCapitalization(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    TextCapitalizationConfig: function TextCapitalizationConfig(t0) {
      this.textCapitalization = t0;
    },
    EngineAutofillForm: function EngineAutofillForm(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.formElement = t0;
      _.elements = t1;
      _.items = t2;
      _.insertionReferenceNode = t3;
      _.formIdentifier = t4;
      _.viewId = t5;
    },
    EngineAutofillForm_addInputEventListeners_addSubscriptionForKey: function EngineAutofillForm_addInputEventListeners_addSubscriptionForKey(t0, t1) {
      this.$this = t0;
      this.subscriptions = t1;
    },
    EngineAutofillForm_addInputEventListeners_addSubscriptionForKey_closure: function EngineAutofillForm_addInputEventListeners_addSubscriptionForKey_closure(t0, t1, t2) {
      this.$this = t0;
      this.key = t1;
      this.element = t2;
    },
    AutofillInfo: function AutofillInfo(t0, t1, t2, t3) {
      var _ = this;
      _.editingState = t0;
      _.uniqueIdentifier = t1;
      _.autofillHint = t2;
      _.placeholder = t3;
    },
    TextEditingDeltaState: function TextEditingDeltaState(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.oldText = t0;
      _.deltaText = t1;
      _.deltaStart = t2;
      _.deltaEnd = t3;
      _.baseOffset = t4;
      _.extentOffset = t5;
      _.composingOffset = t6;
      _.composingExtent = t7;
    },
    EditingState: function EditingState(t0, t1, t2, t3, t4) {
      var _ = this;
      _.text = t0;
      _.baseOffset = t1;
      _.extentOffset = t2;
      _.composingBaseOffset = t3;
      _.composingExtentOffset = t4;
    },
    InputConfiguration: function InputConfiguration(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.viewId = t0;
      _.inputType = t1;
      _.inputAction = t2;
      _.readOnly = t3;
      _.obscureText = t4;
      _.autocorrect = t5;
      _.enableDeltaModel = t6;
      _.autofill = t7;
      _.autofillGroup = t8;
      _.textCapitalization = t9;
    },
    GloballyPositionedTextEditingStrategy: function GloballyPositionedTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.owner = t0;
      _.isEnabled = false;
      _.domElement = null;
      _.__DefaultTextEditingStrategy_inputConfiguration_A = $;
      _.onAction = _.onChange = _.geometry = _.style = _._editingDeltaState = _.lastEditingState = null;
      _.subscriptions = t1;
      _._appendedToForm = false;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    SafariDesktopTextEditingStrategy: function SafariDesktopTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.owner = t0;
      _.isEnabled = false;
      _.domElement = null;
      _.__DefaultTextEditingStrategy_inputConfiguration_A = $;
      _.onAction = _.onChange = _.geometry = _.style = _._editingDeltaState = _.lastEditingState = null;
      _.subscriptions = t1;
      _._appendedToForm = false;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    DefaultTextEditingStrategy: function DefaultTextEditingStrategy() {
    },
    DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure: function DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure() {
    },
    DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0: function DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0() {
    },
    DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1: function DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1() {
    },
    DefaultTextEditingStrategy__moveFocusToFlutterView_closure: function DefaultTextEditingStrategy__moveFocusToFlutterView_closure(t0, t1, t2) {
      this.element = t0;
      this.view = t1;
      this.removeElement = t2;
    },
    IOSTextEditingStrategy: function IOSTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._positionInputElementTimer = null;
      _._canPosition = true;
      _.owner = t0;
      _.isEnabled = false;
      _.domElement = null;
      _.__DefaultTextEditingStrategy_inputConfiguration_A = $;
      _.onAction = _.onChange = _.geometry = _.style = _._editingDeltaState = _.lastEditingState = null;
      _.subscriptions = t1;
      _._appendedToForm = false;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    IOSTextEditingStrategy_addEventHandlers_closure: function IOSTextEditingStrategy_addEventHandlers_closure(t0) {
      this.$this = t0;
    },
    IOSTextEditingStrategy__addTapListener_closure: function IOSTextEditingStrategy__addTapListener_closure(t0) {
      this.$this = t0;
    },
    IOSTextEditingStrategy__schedulePlacement_closure: function IOSTextEditingStrategy__schedulePlacement_closure(t0) {
      this.$this = t0;
    },
    AndroidTextEditingStrategy: function AndroidTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.owner = t0;
      _.isEnabled = false;
      _.domElement = null;
      _.__DefaultTextEditingStrategy_inputConfiguration_A = $;
      _.onAction = _.onChange = _.geometry = _.style = _._editingDeltaState = _.lastEditingState = null;
      _.subscriptions = t1;
      _._appendedToForm = false;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    FirefoxTextEditingStrategy: function FirefoxTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.owner = t0;
      _.isEnabled = false;
      _.domElement = null;
      _.__DefaultTextEditingStrategy_inputConfiguration_A = $;
      _.onAction = _.onChange = _.geometry = _.style = _._editingDeltaState = _.lastEditingState = null;
      _.subscriptions = t1;
      _._appendedToForm = false;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    FirefoxTextEditingStrategy_addEventHandlers_closure: function FirefoxTextEditingStrategy_addEventHandlers_closure(t0) {
      this.$this = t0;
    },
    TextInputCommand: function TextInputCommand() {
    },
    TextInputSetClient: function TextInputSetClient(t0, t1) {
      this.clientId = t0;
      this.configuration = t1;
    },
    TextInputUpdateConfig: function TextInputUpdateConfig() {
    },
    TextInputSetEditingState: function TextInputSetEditingState(t0) {
      this.state = t0;
    },
    TextInputShow: function TextInputShow() {
    },
    TextInputSetEditableSizeAndTransform: function TextInputSetEditableSizeAndTransform(t0) {
      this.geometry = t0;
    },
    TextInputSetStyle: function TextInputSetStyle(t0) {
      this.style = t0;
    },
    TextInputClearClient: function TextInputClearClient() {
    },
    TextInputHide: function TextInputHide() {
    },
    TextInputSetMarkedTextRect: function TextInputSetMarkedTextRect() {
    },
    TextInputSetCaretRect: function TextInputSetCaretRect() {
    },
    TextInputRequestAutofill: function TextInputRequestAutofill() {
    },
    TextInputFinishAutofillContext: function TextInputFinishAutofillContext(t0) {
      this.saveForm = t0;
    },
    saveForms_closure: function saveForms_closure() {
    },
    TextEditingChannel: function TextEditingChannel(t0) {
      this.implementation = t0;
    },
    TextEditingChannel_handleTextInput_closure: function TextEditingChannel_handleTextInput_closure(t0) {
      this.callback = t0;
    },
    HybridTextEditing: function HybridTextEditing() {
      var _ = this;
      _.__HybridTextEditing_channel_FI = $;
      _._clientId = null;
      _.isEditing = false;
      _.configuration = null;
      _.__HybridTextEditing_strategy_FI = $;
    },
    HybridTextEditing__startEditing_closure0: function HybridTextEditing__startEditing_closure0(t0) {
      this.$this = t0;
    },
    HybridTextEditing__startEditing_closure: function HybridTextEditing__startEditing_closure(t0) {
      this.$this = t0;
    },
    EditableTextStyle: function EditableTextStyle(t0, t1, t2, t3, t4) {
      var _ = this;
      _.fontSize = t0;
      _.fontWeight = t1;
      _.fontFamily = t2;
      _.textAlign = t3;
      _.textDirection = t4;
    },
    EditableTextGeometry: function EditableTextGeometry(t0, t1, t2) {
      this.width = t0;
      this.height = t1;
      this.globalTransform = t2;
    },
    EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage_closure: function EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage_closure() {
    },
    TransformKind: function TransformKind(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    LruCache: function LruCache(t0, t1, t2, t3) {
      var _ = this;
      _.maximumSize = t0;
      _._itemQueue = t1;
      _._itemMap = t2;
      _.$ti = t3;
    },
    BitmapSize: function BitmapSize(t0, t1) {
      this.width = t0;
      this.height = t1;
    },
    Matrix4: function Matrix4(t0) {
      this._m4storage = t0;
    },
    FastMatrix32: function FastMatrix32(t0) {
      this.matrix = t0;
      this.transformedY = this.transformedX = 0;
    },
    CustomElementDimensionsProvider: function CustomElementDimensionsProvider(t0, t1) {
      var _ = this;
      _._hostElement = t0;
      _.__CustomElementDimensionsProvider__dprChangeStreamSubscription_A = _.__CustomElementDimensionsProvider__hostElementResizeObserver_A = $;
      _._onResizeStreamController = t1;
    },
    CustomElementDimensionsProvider_closure: function CustomElementDimensionsProvider_closure(t0) {
      this.$this = t0;
    },
    CustomElementDimensionsProvider_closure0: function CustomElementDimensionsProvider_closure0(t0) {
      this.$this = t0;
    },
    DimensionsProvider: function DimensionsProvider() {
    },
    FullPageDimensionsProvider: function FullPageDimensionsProvider(t0) {
      this.__FullPageDimensionsProvider__domResizeSubscription_A = $;
      this._onResizeStreamController = t0;
    },
    DisplayDprStream: function DisplayDprStream(t0, t1, t2) {
      var _ = this;
      _._display = t0;
      _._currentDpr = t1;
      _._dprStreamController = t2;
      _.__DisplayDprStream__dprMediaQuery_A = $;
    },
    DomManager: function DomManager(t0, t1, t2, t3, t4) {
      var _ = this;
      _.rootElement = t0;
      _.renderingHost = t1;
      _.sceneHost = t2;
      _.textEditingHost = t3;
      _.semanticsHost = t4;
      _._lastSceneElement = null;
    },
    CustomElementEmbeddingStrategy: function CustomElementEmbeddingStrategy(t0) {
      this.hostElement = t0;
      this.__CustomElementEmbeddingStrategy__rootElement_F = $;
    },
    FullPageEmbeddingStrategy: function FullPageEmbeddingStrategy(t0) {
      this.hostElement = t0;
    },
    FlutterViewManager: function FlutterViewManager(t0, t1, t2, t3, t4) {
      var _ = this;
      _._dispatcher = t0;
      _._viewData = t1;
      _._jsViewOptions = t2;
      _._onViewCreatedController = t3;
      _._onViewDisposedController = t4;
    },
    GlobalHtmlAttributes: function GlobalHtmlAttributes(t0, t1) {
      this.rootElement = t0;
      this.hostElement = t1;
    },
    _hotRestartCache_closure: function _hotRestartCache_closure() {
    },
    EngineFlutterView: function EngineFlutterView() {
    },
    _EngineFlutterViewImpl: function _EngineFlutterViewImpl(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.viewId = t0;
      _.platformDispatcher = t1;
      _.embeddingStrategy = t2;
      _.__EngineFlutterView__resizeSubscription_F = $;
      _.isDisposed = false;
      _.__EngineFlutterView_pointerBinding_F = _.__EngineFlutterView_dom_FI = _.__EngineFlutterView_contextMenu_FI = _.__EngineFlutterView_mouseCursor_FI = _.__EngineFlutterView__globalHtmlAttributes_FI = $;
      _._jsViewConstraints = t3;
      _.__EngineFlutterView_semantics_FI = $;
      _._physicalSize = null;
      _._viewInsets = t4;
      _.dimensionsProvider = t5;
    },
    ViewPadding: function ViewPadding(t0, t1, t2, t3) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
    },
    ViewConstraints: function ViewConstraints(t0, t1, t2, t3) {
      var _ = this;
      _.minWidth = t0;
      _.maxWidth = t1;
      _.minHeight = t2;
      _.maxHeight = t3;
    },
    ViewConstraints_toString_describe: function ViewConstraints_toString_describe() {
    },
    _DefaultTextEditingStrategy_Object_CompositionAwareMixin: function _DefaultTextEditingStrategy_Object_CompositionAwareMixin() {
    },
    _DomCanvas_EngineCanvas_SaveElementStackTracking: function _DomCanvas_EngineCanvas_SaveElementStackTracking() {
    },
    _LayoutFragment__CombinedFragment__FragmentMetrics: function _LayoutFragment__CombinedFragment__FragmentMetrics() {
    },
    _LayoutFragment__CombinedFragment__FragmentMetrics__FragmentPosition: function _LayoutFragment__CombinedFragment__FragmentMetrics__FragmentPosition() {
    },
    _LayoutFragment__CombinedFragment__FragmentMetrics__FragmentPosition__FragmentBox: function _LayoutFragment__CombinedFragment__FragmentMetrics__FragmentPosition__FragmentBox() {
    },
    _PersistedClipRRect_PersistedContainerSurface__DomClip: function _PersistedClipRRect_PersistedContainerSurface__DomClip() {
    },
    _PersistedClipRect_PersistedContainerSurface__DomClip: function _PersistedClipRect_PersistedContainerSurface__DomClip() {
    },
    __PointerAdapter__BaseAdapter__WheelEventListenerMixin: function __PointerAdapter__BaseAdapter__WheelEventListenerMixin() {
    },
    typeAcceptsNull($T) {
      return $T._is(null);
    },
    isSentinel(value) {
      return false;
    },
    hexDigitValue(char) {
      var letter,
        digit = (char ^ 48) >>> 0;
      if (digit <= 9)
        return digit;
      letter = (char | 32) >>> 0;
      if (97 <= letter && letter <= 102)
        return letter - 87;
      return -1;
    },
    parseHexByte(source, index) {
      var digit1, t2, digit2,
        t1 = source.length;
      if (index >>> 0 !== index || index >= t1)
        return B.ioore(source, index);
      digit1 = A.hexDigitValue(source.charCodeAt(index));
      t2 = index + 1;
      if (!(t2 < t1))
        return B.ioore(source, t2);
      digit2 = A.hexDigitValue(source.charCodeAt(t2));
      return digit1 * 16 + digit2 - (digit2 & 256);
    },
    nullFuture_closure: function nullFuture_closure() {
    },
    ConstantMap_ConstantMap$from(other, $K, $V) {
      var allStrings, k, object, index, index0, values, map,
        keys = B.List_List$from(other.get$keys(), true, $K),
        t1 = J.getInterceptor$ax(keys),
        t2 = t1.get$iterator(keys);
      while (true) {
        if (!B.boolConversionCheck(t2.moveNext$0())) {
          allStrings = true;
          break;
        }
        k = t2.get$current();
        if (typeof k != "string" || "__proto__" === k) {
          allStrings = false;
          break;
        }
      }
      if (allStrings) {
        object = {};
        for (t1 = t1.get$iterator(keys), index = 0; B.boolConversionCheck(t1.moveNext$0()); index = index0) {
          k = t1.get$current();
          $V._as(other.$index(0, k));
          index0 = index + 1;
          object[k] = index;
        }
        values = B.List_List$from(other.get$values(), true, $V);
        map = A.ConstantStringMap$_(object, values, $K, $V);
        map._setKeys$1(keys);
        return map;
      }
      return B.ConstantMapView$(A.LinkedHashMap_LinkedHashMap$from(other, $K, $V), $K, $V);
    },
    ConstantStringMap$_(_jsIndex, _values, $K, $V) {
      return new B.ConstantStringMap(_jsIndex, _values, $K._eval$1("@<0>")._bind$1($V)._eval$1("ConstantStringMap<1,2>"));
    },
    ConstantSet__throwUnmodifiable() {
      throw B.wrapException(B.UnsupportedError$("Cannot modify constant Set"));
    },
    Primitives_parseInt(source, radix) {
      var decimalMatch, maxCharCode, digitsPart, t1, i, _null = null,
        match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return _null;
      if (3 >= match.length)
        return B.ioore(match, 3);
      decimalMatch = match[3];
      if (radix == null) {
        if (decimalMatch != null)
          return parseInt(source, 10);
        if (match[2] != null)
          return parseInt(source, 16);
        return _null;
      }
      if (radix < 2 || radix > 36)
        throw B.wrapException(B.RangeError$range(radix, 2, 36, "radix", _null));
      if (radix === 10 && decimalMatch != null)
        return parseInt(source, 10);
      if (radix < 10 || decimalMatch == null) {
        maxCharCode = radix <= 10 ? 47 + radix : 86 + radix;
        digitsPart = match[1];
        for (t1 = digitsPart.length, i = 0; i < t1; ++i)
          if ((digitsPart.charCodeAt(i) | 32) > maxCharCode)
            return _null;
      }
      return parseInt(source, radix);
    },
    Primitives_parseDouble(source) {
      var result, trimmed;
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(source))
        return null;
      result = parseFloat(source);
      if (B.boolConversionCheck(D.JSNumber_methods.get$isNaN(result))) {
        trimmed = D.JSString_methods.trim$0(source);
        if (trimmed === "NaN" || trimmed === "+NaN" || trimmed === "-NaN")
          return result;
        return null;
      }
      return result;
    },
    Primitives_dateNow() {
      return Date.now();
    },
    Primitives_initTicker() {
      var $window, performance;
      if (!B.boolConversionCheck(J.$eq$($.Primitives_timerFrequency, 0)))
        return;
      $.Primitives_timerFrequency = 1000;
      if (typeof window == "undefined")
        return;
      $window = window;
      if ($window == null)
        return;
      if (!!$window.dartUseDateNowForTicks)
        return;
      performance = $window.performance;
      if (performance == null)
        return;
      if (typeof performance.now != "function")
        return;
      $.Primitives_timerFrequency = 1000000;
      $.Primitives_timerTicks = new A.Primitives_initTicker_closure(performance);
    },
    Primitives_lazyAsJsDate(receiver) {
      if (receiver.date === void 0)
        receiver.date = new Date(receiver.get$millisecondsSinceEpoch());
      return receiver.date;
    },
    Primitives_getYear(receiver) {
      return B.boolConversionCheck(receiver.isUtc) ? A.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : A.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
    },
    Primitives_getMonth(receiver) {
      return B.boolConversionCheck(receiver.isUtc) ? A.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : A.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
    },
    Primitives_getDay(receiver) {
      return B.boolConversionCheck(receiver.isUtc) ? A.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : A.Primitives_lazyAsJsDate(receiver).getDate() + 0;
    },
    Primitives_getHours(receiver) {
      return B.boolConversionCheck(receiver.isUtc) ? A.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : A.Primitives_lazyAsJsDate(receiver).getHours() + 0;
    },
    Primitives_getMinutes(receiver) {
      return B.boolConversionCheck(receiver.isUtc) ? A.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : A.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
    },
    Primitives_getSeconds(receiver) {
      return B.boolConversionCheck(receiver.isUtc) ? A.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : A.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
    },
    Primitives_getMilliseconds(receiver) {
      return B.boolConversionCheck(receiver.isUtc) ? A.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : A.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
    },
    checkNum(value) {
      if (typeof value != "number")
        throw B.wrapException(B.argumentErrorValue(value));
      return value;
    },
    assertInteropArgs(args) {
    },
    ConstantSet: function ConstantSet() {
    },
    ConstantStringSet: function ConstantStringSet(t0, t1, t2) {
      this._jsIndex = t0;
      this.__js_helper$_length = t1;
      this.$ti = t2;
    },
    GeneralConstantSet: function GeneralConstantSet(t0, t1) {
      this.__js_helper$_elements = t0;
      this.$ti = t1;
    },
    Primitives_initTicker_closure: function Primitives_initTicker_closure(t0) {
      this.performance = t0;
    },
    LineCharProperty: function LineCharProperty(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    WordCharProperty: function WordCharProperty(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _wrapAwaitedExpression(e, $T) {
      return $T._eval$1("Future<0>")._is(e) ? e : B._Future$value(B.unsafeCast(e, $T), $T);
    },
    _BroadcastStream$(controller, $T) {
      return new A._BroadcastStream(controller, $T._eval$1("_BroadcastStream<0>"));
    },
    _BroadcastSubscription$(controller, onData, onError, onDone, cancelOnError, $T) {
      var t1 = B.Zone_current(),
        t2 = cancelOnError ? 1 : 0,
        t3 = onError != null ? 32 : 0,
        t4 = A._BufferingStreamSubscription__registerDataHandler(t1, onData, $T);
      A._BufferingStreamSubscription__registerErrorHandler(t1, onError);
      t3 = new A._BroadcastSubscription(controller, t4, A._BufferingStreamSubscription__registerDoneHandler(t1, onDone), t1, t2 | t3, $T._eval$1("_BroadcastSubscription<0>"));
      t3._BroadcastSubscription$5(controller, onData, onError, onDone, cancelOnError, $T);
      return t3;
    },
    _SyncBroadcastStreamController$(onListen, onCancel, $T) {
      return new A._SyncBroadcastStreamController(onListen, onCancel, $T._eval$1("_SyncBroadcastStreamController<0>"));
    },
    _AsyncBroadcastStreamController$(onListen, onCancel, $T) {
      return new A._AsyncBroadcastStreamController(onListen, onCancel, $T._eval$1("_AsyncBroadcastStreamController<0>"));
    },
    Future_Future(computation, $T) {
      var result = B._Future$($T);
      A.Timer_run(new A.Future_Future_closure(computation, result));
      return result;
    },
    Future_Future$delayed(duration, computation, $T) {
      var result;
      if (computation == null && !B.boolConversionCheck(A.typeAcceptsNull($T)))
        throw B.wrapException(B.ArgumentError$value(null, "computation", "The type parameter is not nullable"));
      result = B._Future$($T);
      A.Timer_Timer(duration, new A.Future_Future$delayed_closure(computation, result, $T));
      return result;
    },
    _completeWithErrorCallback(result, error, stackTrace) {
      var replacement = B.Zone_current().errorCallback$2(error, stackTrace);
      if (replacement != null) {
        error = replacement.error;
        stackTrace = replacement.stackTrace;
      } else if (stackTrace == null)
        stackTrace = B.AsyncError_defaultStackTrace(error);
      result._completeError$2(error, stackTrace);
    },
    StreamController_StreamController$broadcast(sync, $T) {
      var _null = null;
      return sync ? A._SyncBroadcastStreamController$(_null, _null, $T) : A._AsyncBroadcastStreamController$(_null, _null, $T);
    },
    _runGuarded(notificationHandler) {
      var e, s, exception;
      if (notificationHandler == null)
        return;
      try {
        notificationHandler.call$0();
      } catch (exception) {
        e = B.unwrapException(exception);
        s = B.getTraceFromException(exception);
        B.Zone_current().handleUncaughtError$2(e, s);
      }
    },
    _ControllerStream$(_controller, $T) {
      return new A._ControllerStream(_controller, $T._eval$1("_ControllerStream<0>"));
    },
    _ControllerSubscription$(_controller, onData, onError, onDone, cancelOnError, $T) {
      var t1 = B.Zone_current(),
        t2 = cancelOnError ? 1 : 0,
        t3 = onError != null ? 32 : 0,
        t4 = A._BufferingStreamSubscription__registerDataHandler(t1, onData, $T);
      A._BufferingStreamSubscription__registerErrorHandler(t1, onError);
      return new A._ControllerSubscription(_controller, t4, A._BufferingStreamSubscription__registerDoneHandler(t1, onDone), t1, t2 | t3, $T._eval$1("_ControllerSubscription<0>"));
    },
    _BufferingStreamSubscription__registerDataHandler(zone, handleData, $T) {
      var t1 = handleData == null ? A.async___nullDataHandler$closure() : handleData;
      return zone.registerUnaryCallback$2$1(t1, type$.void, $T);
    },
    _BufferingStreamSubscription__registerErrorHandler(zone, handleError) {
      if (handleError == null)
        handleError = A.async___nullErrorHandler$closure();
      if (type$.void_Function_Object_StackTrace._is(handleError))
        return zone.registerBinaryCallback$3$1(handleError, type$.dynamic, type$.Object, type$.StackTrace);
      if (type$.void_Function_Object._is(handleError))
        return zone.registerUnaryCallback$2$1(handleError, type$.dynamic, type$.Object);
      throw B.wrapException(B.ArgumentError$("handleError callback must take either an Object (the error), or both an Object (the error) and a StackTrace.", null));
    },
    _BufferingStreamSubscription__registerDoneHandler(zone, handleDone) {
      var t1 = handleDone == null ? A.async___nullDoneHandler$closure() : handleDone;
      return zone.registerCallback$1$1(t1, type$.void);
    },
    _nullDataHandler(value) {
    },
    _nullErrorHandler(error, stackTrace) {
      type$.Object._as(error);
      type$.StackTrace._as(stackTrace);
      B.Zone_current().handleUncaughtError$2(error, stackTrace);
    },
    _nullDoneHandler() {
    },
    _DelayedData$(value, $T) {
      return new A._DelayedData(value, $T._eval$1("_DelayedData<0>"));
    },
    _PendingEvents$($T) {
      return new A._PendingEvents($T._eval$1("_PendingEvents<0>"));
    },
    _DoneStreamSubscription$(onDone, $T) {
      var t1 = new A._DoneStreamSubscription(B.Zone_current(), $T._eval$1("_DoneStreamSubscription<0>"));
      t1._DoneStreamSubscription$1(onDone, $T);
      return t1;
    },
    Timer_Timer(duration, callback) {
      if (B.boolConversionCheck(J.$eq$(B.Zone_current(), D.C__RootZone)))
        return B.Zone_current().createTimer$2(duration, callback);
      return B.Zone_current().createTimer$2(duration, B.Zone_current().bindCallbackGuarded$1(callback));
    },
    Timer_run(callback) {
      A.Timer_Timer(D.Duration_0, callback);
    },
    _BroadcastStream: function _BroadcastStream(t0, t1) {
      this._controller = t0;
      this.$ti = t1;
    },
    _BroadcastSubscription: function _BroadcastSubscription(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._eventState = 0;
      _._async$_previous = _._async$_next = null;
      _._controller = t0;
      _._async$_onData = t1;
      _._onDone = t2;
      _._zone = t3;
      _._state = t4;
      _._pending = _._cancelFuture = null;
      _.$ti = t5;
    },
    _BroadcastStreamController: function _BroadcastStreamController() {
    },
    _SyncBroadcastStreamController: function _SyncBroadcastStreamController(t0, t1, t2) {
      var _ = this;
      _.onListen = t0;
      _.onCancel = t1;
      _._state = 0;
      _._doneFuture = _._lastSubscription = _._firstSubscription = null;
      _.$ti = t2;
    },
    _SyncBroadcastStreamController__sendData_closure: function _SyncBroadcastStreamController__sendData_closure(t0, t1) {
      this.$this = t0;
      this.data = t1;
    },
    _SyncBroadcastStreamController__sendDone_closure: function _SyncBroadcastStreamController__sendDone_closure(t0) {
      this.$this = t0;
    },
    _AsyncBroadcastStreamController: function _AsyncBroadcastStreamController(t0, t1, t2) {
      var _ = this;
      _.onListen = t0;
      _.onCancel = t1;
      _._state = 0;
      _._doneFuture = _._lastSubscription = _._firstSubscription = null;
      _.$ti = t2;
    },
    Future_Future_closure: function Future_Future_closure(t0, t1) {
      this.computation = t0;
      this.result = t1;
    },
    Future_Future$delayed_closure: function Future_Future$delayed_closure(t0, t1, t2) {
      this.computation = t0;
      this.result = t1;
      this.T = t2;
    },
    _ControllerStream: function _ControllerStream(t0, t1) {
      this._controller = t0;
      this.$ti = t1;
    },
    _ControllerSubscription: function _ControllerSubscription(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._controller = t0;
      _._async$_onData = t1;
      _._onDone = t2;
      _._zone = t3;
      _._state = t4;
      _._pending = _._cancelFuture = null;
      _.$ti = t5;
    },
    _BufferingStreamSubscription: function _BufferingStreamSubscription() {
    },
    _BufferingStreamSubscription__sendDone_sendDone: function _BufferingStreamSubscription__sendDone_sendDone(t0) {
      this.$this = t0;
    },
    _StreamImpl: function _StreamImpl() {
    },
    _DelayedEvent: function _DelayedEvent() {
    },
    _DelayedData: function _DelayedData(t0, t1) {
      this.value = t0;
      this.next = null;
      this.$ti = t1;
    },
    _DelayedDone: function _DelayedDone() {
    },
    _PendingEvents: function _PendingEvents(t0) {
      var _ = this;
      _._state = 0;
      _.lastPendingEvent = _.firstPendingEvent = null;
      _.$ti = t0;
    },
    _PendingEvents_schedule_closure: function _PendingEvents_schedule_closure(t0, t1) {
      this.$this = t0;
      this.dispatch = t1;
    },
    _DoneStreamSubscription: function _DoneStreamSubscription(t0, t1) {
      var _ = this;
      _._state = 1;
      _._zone = t0;
      _._onDone = null;
      _.$ti = t1;
    },
    IterableExtensions_get_lastOrNull(_this, $T) {
      var t1, iterator, result;
      if (type$.EfficientLengthIterable_dynamic._is(_this)) {
        t1 = J.getInterceptor$asx(_this);
        if (B.boolConversionCheck(t1.get$isEmpty(_this)))
          return null;
        return t1.get$last(_this);
      }
      iterator = J.get$iterator$ax(_this);
      if (!B.boolConversionCheck(iterator.moveNext$0()))
        return null;
      do
        result = iterator.get$current();
      while (B.boolConversionCheck(iterator.moveNext$0()));
      return result;
    },
    LinkedHashMap_LinkedHashMap$from(other, $K, $V) {
      var result = E.LinkedHashMap_LinkedHashMap($K, $V);
      other.forEach$1(0, new A.LinkedHashMap_LinkedHashMap$from_closure(result, $K, $V));
      return result;
    },
    _DoubleLinkedQueueElement$(element, _queue, $E) {
      return new A._DoubleLinkedQueueElement(_queue, element, $E._eval$1("_DoubleLinkedQueueElement<0>"));
    },
    _DoubleLinkedQueueSentinel$($E) {
      var t1 = new A._DoubleLinkedQueueSentinel($E._eval$1("_DoubleLinkedQueueSentinel<0>"));
      t1._DoubleLinkedQueueSentinel$0($E);
      return t1;
    },
    DoubleLinkedQueue$($E) {
      return new A.DoubleLinkedQueue(A._DoubleLinkedQueueSentinel$($E), $E._eval$1("DoubleLinkedQueue<0>"));
    },
    _DoubleLinkedQueueIterator$(_queue, $E) {
      return new A._DoubleLinkedQueueIterator(_queue, _queue._sentinel._nextLink, $E._eval$1("_DoubleLinkedQueueIterator<0>"));
    },
    ListQueue$(initialCapacity, $E) {
      return new A.ListQueue(B.List_List$filled(A.ListQueue__calculateCapacity(initialCapacity), null, false, $E._eval$1("0?")), $E._eval$1("ListQueue<0>"));
    },
    ListQueue__calculateCapacity(initialCapacity) {
      if (initialCapacity == null || initialCapacity < 8)
        return 8;
      else if (!B.boolConversionCheck(A.ListQueue__isPowerOf2(initialCapacity)))
        return A.ListQueue__nextPowerOf2(initialCapacity);
      return initialCapacity;
    },
    ListQueue__isPowerOf2(number) {
      return (number & number - 1) >>> 0 === 0;
    },
    ListQueue__nextPowerOf2(number) {
      var nextNumber;
      number = (number << 1 >>> 0) - 1;
      for (; true; number = nextNumber) {
        nextNumber = (number & number - 1) >>> 0;
        if (nextNumber === 0)
          return number;
      }
    },
    _ListQueueIterator$(queue, $E) {
      return new A._ListQueueIterator(queue, queue._tail, queue._modificationCount, queue._head, $E._eval$1("_ListQueueIterator<0>"));
    },
    LinkedHashMap_LinkedHashMap$from_closure: function LinkedHashMap_LinkedHashMap$from_closure(t0, t1, t2) {
      this.result = t0;
      this.K = t1;
      this.V = t2;
    },
    _DoubleLinkedQueueEntry: function _DoubleLinkedQueueEntry() {
    },
    _DoubleLinkedQueueElement: function _DoubleLinkedQueueElement(t0, t1, t2) {
      var _ = this;
      _._collection$_queue = t0;
      _.element = t1;
      _._nextLink = _._previousLink = null;
      _.$ti = t2;
    },
    _DoubleLinkedQueueSentinel: function _DoubleLinkedQueueSentinel(t0) {
      this._nextLink = this._previousLink = null;
      this.$ti = t0;
    },
    DoubleLinkedQueue: function DoubleLinkedQueue(t0, t1) {
      this._sentinel = t0;
      this._elementCount = 0;
      this.$ti = t1;
    },
    _DoubleLinkedQueueIterator: function _DoubleLinkedQueueIterator(t0, t1, t2) {
      var _ = this;
      _._collection$_queue = t0;
      _._nextEntry = t1;
      _._collection$_current = null;
      _.$ti = t2;
    },
    ListQueue: function ListQueue(t0, t1) {
      var _ = this;
      _._table = t0;
      _._modificationCount = _._tail = _._head = 0;
      _.$ti = t1;
    },
    _ListQueueIterator: function _ListQueueIterator(t0, t1, t2, t3, t4) {
      var _ = this;
      _._collection$_queue = t0;
      _._end = t1;
      _._modificationCount = t2;
      _._position = t3;
      _._collection$_current = null;
      _.$ti = t4;
    },
    _UnicodeSubsetEncoderSink$(_subsetMask, _sink) {
      return new A._UnicodeSubsetEncoderSink(_sink, _subsetMask);
    },
    _ErrorHandlingAsciiDecoderSink$(_utf8Sink) {
      return new A._ErrorHandlingAsciiDecoderSink(_utf8Sink);
    },
    _SimpleAsciiDecoderSink$(_sink) {
      return new A._SimpleAsciiDecoderSink(_sink);
    },
    Base64Codec__checkPadding(source, sourceIndex, sourceEnd, firstPadding, paddingCount, $length) {
      if (D.JSInt_methods.$mod($length, 4) !== 0)
        throw B.wrapException(B.FormatException$("Invalid base64 padding, padded length must be multiple of four, is " + B.S($length), source, sourceEnd));
      if (firstPadding + paddingCount !== $length)
        throw B.wrapException(B.FormatException$("Invalid base64 padding, '=' not at the end", source, sourceIndex));
      if (paddingCount > 2)
        throw B.wrapException(B.FormatException$("Invalid base64 padding, more than two '=' characters", source, sourceIndex));
    },
    _Base64Encoder$(urlSafe) {
      return new A._Base64Encoder(urlSafe ? string$.ABCDEFx2d : string$.ABCDEFx2b);
    },
    _Base64Encoder__encodeState(count, bits) {
      return (bits << 2 | count) >>> 0;
    },
    _Base64Encoder__stateBits(state) {
      return D.JSInt_methods._shrOtherPositive$1(state, 2);
    },
    _Base64Encoder__stateCount(state) {
      return state & 3;
    },
    _Base64Encoder_encodeChunk(alphabet, bytes, start, end, isLast, output, outputIndex, state) {
      var expectedChars, t2, t3, i, byteOr, byte, outputIndex0, t4,
        bits = A._Base64Encoder__stateBits(state),
        t1 = A._Base64Encoder__stateCount(state);
      if (typeof t1 !== "number")
        return B.iae(t1);
      expectedChars = 3 - t1;
      for (t1 = J.getInterceptor$asx(bytes), t2 = alphabet.length, t3 = output.length, i = start, byteOr = 0; i < end; ++i) {
        byte = t1.$index(bytes, i);
        byteOr = (byteOr | byte) >>> 0;
        bits = (bits << 8 | byte) & 16777215;
        --expectedChars;
        if (expectedChars === 0) {
          outputIndex0 = outputIndex + 1;
          t4 = bits >>> 18 & 63;
          if (!(t4 < t2))
            return B.ioore(alphabet, t4);
          t4 = alphabet.charCodeAt(t4);
          if (!(outputIndex >= 0 && outputIndex < t3))
            return B.ioore(output, outputIndex);
          output[outputIndex] = t4;
          outputIndex = outputIndex0 + 1;
          t4 = bits >>> 12 & 63;
          if (!(t4 < t2))
            return B.ioore(alphabet, t4);
          t4 = alphabet.charCodeAt(t4);
          if (!(outputIndex0 >= 0 && outputIndex0 < t3))
            return B.ioore(output, outputIndex0);
          output[outputIndex0] = t4;
          outputIndex0 = outputIndex + 1;
          t4 = bits >>> 6 & 63;
          if (!(t4 < t2))
            return B.ioore(alphabet, t4);
          t4 = alphabet.charCodeAt(t4);
          if (!(outputIndex >= 0 && outputIndex < t3))
            return B.ioore(output, outputIndex);
          output[outputIndex] = t4;
          outputIndex = outputIndex0 + 1;
          t4 = bits & 63;
          if (!(t4 < t2))
            return B.ioore(alphabet, t4);
          t4 = alphabet.charCodeAt(t4);
          if (!(outputIndex0 >= 0 && outputIndex0 < t3))
            return B.ioore(output, outputIndex0);
          output[outputIndex0] = t4;
          bits = 0;
          expectedChars = 3;
        }
      }
      if (byteOr >= 0 && byteOr <= 255) {
        if (isLast && expectedChars < 3) {
          A._Base64Encoder_writeFinalChunk(alphabet, output, outputIndex, 3 - expectedChars, bits);
          return 0;
        }
        return A._Base64Encoder__encodeState(3 - expectedChars, bits);
      }
      for (i = start; i < end;) {
        byte = t1.$index(bytes, i);
        if (byte < 0 || byte > 255)
          break;
        ++i;
      }
      throw B.wrapException(B.ArgumentError$value(bytes, "Not a byte value at index " + i + ": 0x" + B.S(J.toRadixString$1$n(t1.$index(bytes, i), 16)), null));
    },
    _Base64Encoder_writeFinalChunk(alphabet, output, outputIndex, count, bits) {
      var t3,
        outputIndex0 = outputIndex + 1,
        t1 = alphabet.length,
        t2 = output.length,
        outputIndex1 = outputIndex0 + 1;
      if (count === 1) {
        t3 = D.JSInt_methods._shrOtherPositive$1(bits, 2) & 63;
        if (!(t3 < t1))
          return B.ioore(alphabet, t3);
        t3 = alphabet.charCodeAt(t3);
        if (outputIndex >>> 0 !== outputIndex || outputIndex >= t2)
          return B.ioore(output, outputIndex);
        output[outputIndex] = t3;
        t3 = bits << 4 & 63;
        if (!(t3 < t1))
          return B.ioore(alphabet, t3);
        t3 = alphabet.charCodeAt(t3);
        if (!(outputIndex0 >= 0 && outputIndex0 < t2))
          return B.ioore(output, outputIndex0);
        output[outputIndex0] = t3;
        outputIndex = outputIndex1 + 1;
        if (!(outputIndex1 >= 0 && outputIndex1 < t2))
          return B.ioore(output, outputIndex1);
        output[outputIndex1] = 61;
        if (!(outputIndex >= 0 && outputIndex < t2))
          return B.ioore(output, outputIndex);
        output[outputIndex] = 61;
      } else {
        t3 = D.JSInt_methods._shrOtherPositive$1(bits, 10) & 63;
        if (!(t3 < t1))
          return B.ioore(alphabet, t3);
        t3 = alphabet.charCodeAt(t3);
        if (outputIndex >>> 0 !== outputIndex || outputIndex >= t2)
          return B.ioore(output, outputIndex);
        output[outputIndex] = t3;
        t3 = D.JSInt_methods._shrOtherPositive$1(bits, 4) & 63;
        if (!(t3 < t1))
          return B.ioore(alphabet, t3);
        t3 = alphabet.charCodeAt(t3);
        if (!(outputIndex0 >= 0 && outputIndex0 < t2))
          return B.ioore(output, outputIndex0);
        output[outputIndex0] = t3;
        outputIndex = outputIndex1 + 1;
        t3 = bits << 2 & 63;
        if (!(t3 < t1))
          return B.ioore(alphabet, t3);
        t3 = alphabet.charCodeAt(t3);
        if (!(outputIndex1 >= 0 && outputIndex1 < t2))
          return B.ioore(output, outputIndex1);
        output[outputIndex1] = t3;
        if (!(outputIndex >= 0 && outputIndex < t2))
          return B.ioore(output, outputIndex);
        output[outputIndex] = 61;
      }
    },
    _BufferCachingBase64Encoder$(urlSafe) {
      return new A._BufferCachingBase64Encoder(urlSafe ? string$.ABCDEFx2d : string$.ABCDEFx2b);
    },
    _AsciiBase64EncoderSink$(_sink, urlSafe) {
      return new A._AsciiBase64EncoderSink(_sink, A._BufferCachingBase64Encoder$(urlSafe));
    },
    _Utf8Base64EncoderSink$(_sink, urlSafe) {
      return new A._Utf8Base64EncoderSink(_sink, A._Base64Encoder$(urlSafe));
    },
    _Base64Decoder$() {
      return new A._Base64Decoder();
    },
    _Base64Decoder__encodeCharacterState(count, bits) {
      return (bits << 2 | count) >>> 0;
    },
    _Base64Decoder__stateCount(state) {
      return state & 3;
    },
    _Base64Decoder__stateBits(state) {
      return D.JSInt_methods._shrOtherPositive$1(state, 2);
    },
    _Base64Decoder__encodePaddingState(expectedPadding) {
      return -expectedPadding - 1;
    },
    _Base64Decoder__statePadding(state) {
      return -state - 1;
    },
    _Base64Decoder__hasSeenPadding(state) {
      return state < 0;
    },
    _Base64Decoder_decodeChunk(input, start, end, output, outIndex, state) {
      var t1, t2, t3, i, charOr, char, code, outIndex0, expectedPadding,
        _s31_ = "Invalid encoding before padding",
        _s17_ = "Invalid character",
        bits = A._Base64Decoder__stateBits(state),
        count = A._Base64Decoder__stateCount(state),
        inverseAlphabet = $.$get$_Base64Decoder__inverseAlphabet();
      for (t1 = input.length, t2 = J.getInterceptor$asx(inverseAlphabet), t3 = output.length, i = start, charOr = 0; i < end; ++i) {
        if (!(i >= 0 && i < t1))
          return B.ioore(input, i);
        char = input.charCodeAt(i);
        charOr = (charOr | char) >>> 0;
        code = t2.$index(inverseAlphabet, char & 127);
        if (code >= 0) {
          bits = (bits << 6 | code) & 16777215;
          count = count + 1 & 3;
          if (count === 0) {
            outIndex0 = outIndex + 1;
            if (!(outIndex >= 0 && outIndex < t3))
              return B.ioore(output, outIndex);
            output[outIndex] = bits >>> 16 & 255;
            outIndex = outIndex0 + 1;
            if (!(outIndex0 >= 0 && outIndex0 < t3))
              return B.ioore(output, outIndex0);
            output[outIndex0] = bits >>> 8 & 255;
            outIndex0 = outIndex + 1;
            if (!(outIndex >= 0 && outIndex < t3))
              return B.ioore(output, outIndex);
            output[outIndex] = bits & 255;
            outIndex = outIndex0;
            bits = 0;
          }
          continue;
        } else if (code === -1 && count > 1) {
          if (charOr > 127)
            break;
          if (count === 3) {
            if ((bits & 3) !== 0)
              throw B.wrapException(B.FormatException$(_s31_, input, i));
            outIndex0 = outIndex + 1;
            t1 = D.JSInt_methods._shrOtherPositive$1(bits, 10);
            if (!(outIndex >= 0 && outIndex < t3))
              return B.ioore(output, outIndex);
            output[outIndex] = t1;
            t1 = D.JSInt_methods._shrOtherPositive$1(bits, 2);
            if (!(outIndex0 >= 0 && outIndex0 < t3))
              return B.ioore(output, outIndex0);
            output[outIndex0] = t1;
          } else {
            if ((bits & 15) !== 0)
              throw B.wrapException(B.FormatException$(_s31_, input, i));
            t1 = D.JSInt_methods._shrOtherPositive$1(bits, 4);
            if (!(outIndex >= 0 && outIndex < t3))
              return B.ioore(output, outIndex);
            output[outIndex] = t1;
          }
          expectedPadding = (3 - count) * 3;
          return A._Base64Decoder__checkPadding(input, i + 1, end, A._Base64Decoder__encodePaddingState(char === 37 ? expectedPadding + 2 : expectedPadding));
        }
        throw B.wrapException(B.FormatException$(_s17_, input, i));
      }
      if (charOr >= 0 && charOr <= 127)
        return A._Base64Decoder__encodeCharacterState(count, bits);
      for (i = start; i < end; ++i) {
        if (!(i >= 0 && i < t1))
          return B.ioore(input, i);
        char = input.charCodeAt(i);
        if (char > 127)
          break;
      }
      throw B.wrapException(B.FormatException$(_s17_, input, i));
    },
    _Base64Decoder__allocateBuffer(input, start, end, state) {
      var $length, bufferLength, remainderLength,
        paddingStart = A._Base64Decoder__trimPaddingChars(input, start, end),
        t1 = A._Base64Decoder__stateCount(state);
      if (typeof t1 !== "number")
        return t1.$add();
      $length = t1 + (paddingStart - start);
      bufferLength = D.JSInt_methods._shrOtherPositive$1($length, 2) * 3;
      remainderLength = $length & 3;
      if (remainderLength !== 0 && paddingStart < end)
        bufferLength += remainderLength - 1;
      if (bufferLength > 0)
        return B.NativeUint8List_NativeUint8List(bufferLength);
      return $.$get$_Base64Decoder__emptyBuffer();
    },
    _Base64Decoder__trimPaddingChars(input, start, end) {
      var char,
        t1 = input.length,
        newEnd = end,
        index = newEnd,
        padding = 0;
      while (true) {
        if (!(index > start && padding < 2))
          break;
        c$0: {
          --index;
          if (!(index >= 0 && index < t1))
            return B.ioore(input, index);
          char = input.charCodeAt(index);
          if (char === 61) {
            ++padding;
            newEnd = index;
            break c$0;
          }
          if ((char | 32) === 100) {
            if (index === start)
              break;
            --index;
            if (!(index >= 0 && index < t1))
              return B.ioore(input, index);
            char = input.charCodeAt(index);
          }
          if (char === 51) {
            if (index === start)
              break;
            --index;
            if (!(index >= 0 && index < t1))
              return B.ioore(input, index);
            char = input.charCodeAt(index);
          }
          if (char === 37) {
            ++padding;
            newEnd = index;
            break c$0;
          }
          break;
        }
      }
      return newEnd;
    },
    _Base64Decoder__checkPadding(input, start, end, state) {
      var expectedPadding, t1, char;
      if (start === end)
        return state;
      expectedPadding = A._Base64Decoder__statePadding(state);
      for (t1 = input.length; expectedPadding > 0;) {
        if (!(start >= 0 && start < t1))
          return B.ioore(input, start);
        char = input.charCodeAt(start);
        if (expectedPadding === 3) {
          if (char === 61) {
            expectedPadding -= 3;
            ++start;
            break;
          }
          if (char === 37) {
            --expectedPadding;
            ++start;
            if (start === end)
              break;
            if (!(start < t1))
              return B.ioore(input, start);
            char = input.charCodeAt(start);
          } else
            break;
        }
        if ((expectedPadding > 3 ? expectedPadding - 3 : expectedPadding) === 2) {
          if (char !== 51)
            break;
          ++start;
          --expectedPadding;
          if (start === end)
            break;
          if (!(start < t1))
            return B.ioore(input, start);
          char = input.charCodeAt(start);
        }
        if ((char | 32) !== 100)
          break;
        ++start;
        --expectedPadding;
        if (start === end)
          break;
      }
      if (start !== end)
        throw B.wrapException(B.FormatException$("Invalid padding character", input, start));
      return A._Base64Decoder__encodePaddingState(expectedPadding);
    },
    _Base64DecoderSink$(_sink) {
      return new A._Base64DecoderSink(_sink, A._Base64Decoder$());
    },
    _Latin1DecoderSink$(_sink) {
      return new A._Latin1DecoderSink(_sink);
    },
    _Latin1DecoderSink__checkValidLatin1(source, start, end) {
      var t1, i, mask, t2;
      for (t1 = J.getInterceptor$asx(source), i = start, mask = 0; i < end; ++i) {
        t2 = t1.$index(source, i);
        if (typeof t2 !== "number")
          return B.iae(t2);
        mask = (mask | t2) >>> 0;
      }
      if (mask >= 0 && mask <= 255)
        return;
      A._Latin1DecoderSink__reportInvalidLatin1(source, start, end);
    },
    _Latin1DecoderSink__reportInvalidLatin1(source, start, end) {
      var t1, i, char;
      for (t1 = J.getInterceptor$asx(source), i = start; i < end; ++i) {
        char = t1.$index(source, i);
        if (char < 0 || char > 255)
          throw B.wrapException(B.FormatException$("Source contains non-Latin-1 characters.", source, i));
      }
    },
    _Latin1AllowInvalidDecoderSink$(sink) {
      return new A._Latin1AllowInvalidDecoderSink(sink);
    },
    AsciiCodec: function AsciiCodec() {
    },
    _UnicodeSubsetEncoder: function _UnicodeSubsetEncoder() {
    },
    AsciiEncoder: function AsciiEncoder(t0) {
      this._subsetMask = t0;
    },
    _UnicodeSubsetEncoderSink: function _UnicodeSubsetEncoderSink(t0, t1) {
      this._sink = t0;
      this._subsetMask = t1;
    },
    _UnicodeSubsetDecoder: function _UnicodeSubsetDecoder() {
    },
    AsciiDecoder: function AsciiDecoder(t0, t1) {
      this._allowInvalid = t0;
      this._subsetMask = t1;
    },
    _ErrorHandlingAsciiDecoderSink: function _ErrorHandlingAsciiDecoderSink(t0) {
      this._utf8Sink = t0;
    },
    _SimpleAsciiDecoderSink: function _SimpleAsciiDecoderSink(t0) {
      this._sink = t0;
    },
    Base64Codec: function Base64Codec() {
    },
    Base64Encoder: function Base64Encoder() {
    },
    _Base64Encoder: function _Base64Encoder(t0) {
      this._convert$_state = 0;
      this._alphabet = t0;
    },
    _BufferCachingBase64Encoder: function _BufferCachingBase64Encoder(t0) {
      this.bufferCache = null;
      this._convert$_state = 0;
      this._alphabet = t0;
    },
    _Base64EncoderSink: function _Base64EncoderSink() {
    },
    _AsciiBase64EncoderSink: function _AsciiBase64EncoderSink(t0, t1) {
      this._sink = t0;
      this._encoder = t1;
    },
    _Utf8Base64EncoderSink: function _Utf8Base64EncoderSink(t0, t1) {
      this._sink = t0;
      this._encoder = t1;
    },
    Base64Decoder: function Base64Decoder() {
    },
    _Base64Decoder: function _Base64Decoder() {
      this._convert$_state = 0;
    },
    _Base64DecoderSink: function _Base64DecoderSink(t0, t1) {
      this._sink = t0;
      this._decoder = t1;
    },
    Latin1Codec: function Latin1Codec() {
    },
    Latin1Encoder: function Latin1Encoder(t0) {
      this._subsetMask = t0;
    },
    Latin1Decoder: function Latin1Decoder(t0, t1) {
      this._allowInvalid = t0;
      this._subsetMask = t1;
    },
    _Latin1DecoderSink: function _Latin1DecoderSink(t0) {
      this._sink = t0;
    },
    _Latin1AllowInvalidDecoderSink: function _Latin1AllowInvalidDecoderSink(t0) {
      this._sink = t0;
    },
    Expando$($T) {
      return new A.Expando(new WeakMap(), $T._eval$1("Expando<0>"));
    },
    Expando__checkType(object) {
      if (object == null || B._isBool(object) || typeof object == "number" || typeof object == "string" || object instanceof B._Record)
        A.Expando__badExpandoKey(object);
    },
    Expando__badExpandoKey(object) {
      throw B.wrapException(B.ArgumentError$value(object, "object", "Expandos are not allowed on strings, numbers, bools, records or null"));
    },
    int_parse(source, radix) {
      var value = A.int_tryParse(source, radix);
      if (value != null)
        return value;
      throw B.wrapException(B.FormatException$(source, null, null));
    },
    int_tryParse(source, radix) {
      return A.Primitives_parseInt(source, radix);
    },
    double_parse(source) {
      var value = A.double_tryParse(source);
      if (value != null)
        return value;
      throw B.wrapException(B.FormatException$("Invalid double", source, null));
    },
    double_tryParse(source) {
      return A.Primitives_parseDouble(source);
    },
    Stopwatch__initTicker() {
      A.Primitives_initTicker();
      return $.Primitives_timerFrequency;
    },
    Stopwatch__now() {
      return $.Primitives_timerTicks.call$0();
    },
    RegExp_escape(text) {
      return B._asString(B.quoteStringForRegExp(text));
    },
    _Uri__uriEncode(canonicalTable, text, encoding, spaceToPlus) {
      var result, bytes, t1, t2, i, t3, byte,
        _s16_ = "0123456789ABCDEF";
      if (encoding === D.C_Utf8Codec && B.boolConversionCheck($.$get$_Uri__needsNoEncoding().hasMatch$1(text)))
        return text;
      result = B.StringBuffer$("");
      bytes = encoding.encode$1(text);
      t1 = J.getInterceptor$asx(bytes);
      t2 = J.getInterceptor$asx(canonicalTable);
      i = 0;
      while (true) {
        t3 = t1.get$length(bytes);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i < t3))
          break;
        byte = t1.$index(bytes, i);
        if (byte < 128) {
          t3 = t2.$index(canonicalTable, D.JSInt_methods._shrOtherPositive$1(byte, 4));
          if (typeof t3 !== "number")
            return t3.$and();
          t3 = (t3 & 1 << (byte & 15)) >>> 0 !== 0;
        } else
          t3 = false;
        if (t3)
          result.writeCharCode$1(byte);
        else if (spaceToPlus && byte === 32)
          result.write$1("+");
        else {
          result.write$1("%");
          result.write$1(_s16_[D.JSInt_methods._shrOtherPositive$1(byte, 4) & 15]);
          result.write$1(_s16_[byte & 15]);
        }
        ++i;
      }
      return result.toString$0(0);
    },
    _Uri__makeQueryFromParameters(queryParameters) {
      var params, encoded, $length;
      if (!B.boolConversionCheck($.$get$_Uri__useURLSearchParams()))
        return A._Uri__makeQueryFromParametersDefault(queryParameters);
      params = new URLSearchParams();
      queryParameters.forEach$1(0, new A._Uri__makeQueryFromParameters_closure(params));
      encoded = params.toString();
      $length = encoded.length;
      if ($length > 0 && B.boolConversionCheck(J.$eq$(encoded[$length - 1], "=")))
        encoded = D.JSString_methods.substring$2(encoded, 0, $length - 1);
      return encoded.replace(/=&|\*|%7E/g, m => m === "=&" ? "&" : m === "*" ? "%2A" : "~");
    },
    DateTime$_withValueChecked(millisecondsSinceEpoch, microsecond, isUtc) {
      return new A.DateTime(A.DateTime__validate(millisecondsSinceEpoch, microsecond, isUtc), microsecond, isUtc);
    },
    DateTime$fromMillisecondsSinceEpoch(millisecondsSinceEpoch, isUtc) {
      return new A.DateTime(A.DateTime__validate(millisecondsSinceEpoch, 0, isUtc), 0, isUtc);
    },
    DateTime$now() {
      return new A.DateTime(A.Primitives_dateNow(), 0, false);
    },
    DateTime__validate(millisecondsSinceEpoch, microsecond, isUtc) {
      var _s11_ = "microsecond";
      if (microsecond < 0 || microsecond > 999)
        throw B.wrapException(B.RangeError$range(microsecond, 0, 999, _s11_, null));
      if (millisecondsSinceEpoch < -864e13 || millisecondsSinceEpoch > 864e13)
        throw B.wrapException(B.RangeError$range(millisecondsSinceEpoch, -864e13, 864e13, "millisecondsSinceEpoch", null));
      if (millisecondsSinceEpoch === 864e13 && microsecond !== 0)
        throw B.wrapException(B.ArgumentError$value(microsecond, _s11_, "Time including microseconds is outside valid range"));
      B.checkNotNullable(isUtc, "isUtc", type$.bool);
      return millisecondsSinceEpoch;
    },
    DateTime__fourDigits(n) {
      var absN = Math.abs(n),
        sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return B.S(n);
      if (absN >= 100)
        return sign + "0" + absN;
      if (absN >= 10)
        return sign + "00" + absN;
      return sign + "000" + absN;
    },
    DateTime__threeDigits(n) {
      if (n >= 100)
        return B.S(n);
      if (n >= 10)
        return "0" + B.S(n);
      return "00" + B.S(n);
    },
    DateTime__twoDigits(n) {
      if (n >= 10)
        return B.S(n);
      return "0" + B.S(n);
    },
    Duration$(microseconds, milliseconds) {
      return new B.Duration(microseconds + 1000 * milliseconds);
    },
    EnumByName_byName(_this, $name, $T) {
      var t1, value;
      for (t1 = J.get$iterator$ax(_this); B.boolConversionCheck(t1.moveNext$0());) {
        value = t1.get$current();
        if (B.boolConversionCheck(J.$eq$(value._core$_name, $name)))
          return value;
      }
      throw B.wrapException(B.ArgumentError$value($name, "name", "No enum value with that name"));
    },
    IndexError$(invalidValue, indexable) {
      var t1 = J.get$length$asx(indexable);
      B._asInt(t1);
      return new B.IndexError(t1, true, invalidValue, null, "Index out of range");
    },
    IndexError_check(index, $length, indexable, $name) {
      if (0 > index || index >= $length)
        throw B.wrapException(B.IndexError$withLength(index, $length, indexable, null, $name == null ? "index" : $name));
      return index;
    },
    Stopwatch$() {
      var t1 = new A.Stopwatch();
      t1.Stopwatch$0();
      return t1;
    },
    Uri_parse(uri) {
      var dataDelta, indices, t1, schemeEnd, t2, hostStart, portStart, pathStart, queryStart, fragmentStart, isSimple, scheme, schemeAuth, delta, queryStart0, pathStart0,
        end = uri.length;
      if (end >= 5) {
        dataDelta = A._startsWithData(uri, 0);
        if (dataDelta === 0)
          return A.UriData__parse(end < end ? D.JSString_methods.substring$2(uri, 0, end) : uri, 5, null).get$uri();
        else if (dataDelta === 32)
          return A.UriData__parse(D.JSString_methods.substring$2(uri, 5, end), 0, null).get$uri();
      }
      indices = B.List_List$filled(8, 0, false, type$.int);
      t1 = J.getInterceptor$ax(indices);
      t1.$indexSet(indices, 0, 0);
      t1.$indexSet(indices, 1, -1);
      t1.$indexSet(indices, 2, -1);
      t1.$indexSet(indices, 7, -1);
      t1.$indexSet(indices, 3, 0);
      t1.$indexSet(indices, 4, 0);
      t1.$indexSet(indices, 5, end);
      t1.$indexSet(indices, 6, end);
      if (A._scan(uri, 0, end, 0, indices) >= 14)
        t1.$indexSet(indices, 7, end);
      schemeEnd = t1.$index(indices, 1);
      if (schemeEnd >= 0)
        if (A._scan(uri, 0, schemeEnd, 20, indices) === 20)
          t1.$indexSet(indices, 7, schemeEnd);
      t2 = t1.$index(indices, 2);
      if (typeof t2 !== "number")
        return t2.$add();
      hostStart = t2 + 1;
      portStart = t1.$index(indices, 3);
      pathStart = t1.$index(indices, 4);
      queryStart = t1.$index(indices, 5);
      fragmentStart = t1.$index(indices, 6);
      if (fragmentStart < queryStart)
        queryStart = fragmentStart;
      if (pathStart < hostStart)
        pathStart = queryStart;
      else if (pathStart <= schemeEnd)
        pathStart = schemeEnd + 1;
      if (portStart < hostStart)
        portStart = pathStart;
      t1 = t1.$index(indices, 7);
      if (typeof t1 !== "number")
        return t1.$lt();
      isSimple = t1 < 0;
      scheme = null;
      if (isSimple) {
        isSimple = false;
        if (!(hostStart > schemeEnd + 3)) {
          t1 = portStart > 0;
          if (!(t1 && portStart + 1 === pathStart)) {
            if (!B.boolConversionCheck(D.JSString_methods.startsWith$2(uri, "\\", pathStart)))
              if (hostStart > 0)
                t2 = B.boolConversionCheck(D.JSString_methods.startsWith$2(uri, "\\", hostStart - 1)) || B.boolConversionCheck(D.JSString_methods.startsWith$2(uri, "\\", hostStart - 2));
              else
                t2 = false;
            else
              t2 = true;
            if (!t2) {
              if (!(queryStart < end && queryStart === pathStart + 2 && B.boolConversionCheck(D.JSString_methods.startsWith$2(uri, "..", pathStart))))
                t2 = queryStart > pathStart + 2 && B.boolConversionCheck(D.JSString_methods.startsWith$2(uri, "/..", queryStart - 3));
              else
                t2 = true;
              if (!t2)
                if (schemeEnd === 4) {
                  if (B.boolConversionCheck(D.JSString_methods.startsWith$2(uri, "file", 0))) {
                    if (hostStart <= 0) {
                      if (!B.boolConversionCheck(D.JSString_methods.startsWith$2(uri, "/", pathStart))) {
                        schemeAuth = "file:///";
                        delta = 3;
                      } else {
                        schemeAuth = "file://";
                        delta = 2;
                      }
                      uri = D.JSString_methods.$add(schemeAuth, D.JSString_methods.substring$2(uri, pathStart, end));
                      queryStart += delta;
                      fragmentStart += delta;
                      end = uri.length;
                      hostStart = 7;
                      portStart = 7;
                      pathStart = 7;
                    } else if (pathStart === queryStart) {
                      ++fragmentStart;
                      queryStart0 = queryStart + 1;
                      uri = D.JSString_methods.replaceRange$3(uri, pathStart, queryStart, "/");
                      ++end;
                      queryStart = queryStart0;
                    }
                    scheme = "file";
                  } else if (B.boolConversionCheck(D.JSString_methods.startsWith$2(uri, "http", 0))) {
                    if (t1 && portStart + 3 === pathStart && B.boolConversionCheck(D.JSString_methods.startsWith$2(uri, "80", portStart + 1))) {
                      fragmentStart -= 3;
                      pathStart0 = pathStart - 3;
                      queryStart -= 3;
                      uri = D.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                      end -= 3;
                      pathStart = pathStart0;
                    }
                    scheme = "http";
                  }
                } else if (schemeEnd === 5 && B.boolConversionCheck(D.JSString_methods.startsWith$2(uri, "https", 0))) {
                  if (t1 && portStart + 4 === pathStart && B.boolConversionCheck(D.JSString_methods.startsWith$2(uri, "443", portStart + 1))) {
                    fragmentStart -= 4;
                    pathStart0 = pathStart - 4;
                    queryStart -= 4;
                    uri = D.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                    end -= 3;
                    pathStart = pathStart0;
                  }
                  scheme = "https";
                }
              isSimple = !t2;
            }
          }
        }
      }
      if (isSimple)
        return A._SimpleUri$(end < uri.length ? D.JSString_methods.substring$2(uri, 0, end) : uri, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme);
      return A._Uri__Uri$notSimple(uri, 0, end, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme);
    },
    Uri_encodeQueryComponent(component) {
      return A._Uri__uriEncode(C.List_piR, component, D.C_Utf8Codec, true);
    },
    Uri_decodeComponent(encodedComponent) {
      B._asString(encodedComponent);
      return A._Uri__uriDecode(encodedComponent, 0, encodedComponent.length, D.C_Utf8Codec, false);
    },
    Uri_encodeFull(uri) {
      return A._Uri__uriEncode(C.List_w0I, uri, D.C_Utf8Codec, false);
    },
    Uri__parseIPv4Address(host, start, end) {
      var t1, t2, i, partStart, partIndex, char, part, partIndex0,
        _s43_ = "IPv4 address should contain exactly 4 parts",
        _s37_ = "each part must be in the range 0..255",
        error = new A.Uri__parseIPv4Address_error(host),
        result = B.NativeUint8List_NativeUint8List(4);
      for (t1 = result.length, t2 = host.length, i = start, partStart = i, partIndex = 0; i < end; ++i) {
        if (!(i >= 0 && i < t2))
          return B.ioore(host, i);
        char = host.charCodeAt(i);
        if (char !== 46) {
          if ((char ^ 48) > 9)
            error.call$2("invalid character", i);
        } else {
          if (partIndex === 3)
            error.call$2(_s43_, i);
          part = A.int_parse(D.JSString_methods.substring$2(host, partStart, i), null);
          if (part > 255)
            error.call$2(_s37_, partStart);
          partIndex0 = partIndex + 1;
          if (!(partIndex < t1))
            return B.ioore(result, partIndex);
          result[partIndex] = part;
          partStart = i + 1;
          partIndex = partIndex0;
        }
      }
      if (partIndex !== 3)
        error.call$2(_s43_, end);
      part = A.int_parse(D.JSString_methods.substring$2(host, partStart, end), null);
      if (part > 255)
        error.call$2(_s37_, partStart);
      if (!(partIndex < t1))
        return B.ioore(result, partIndex);
      result[partIndex] = part;
      return result;
    },
    Uri_parseIPv6Address(host, start, end) {
      var error, parseHex, t1, parts, i, partStart, wildcardSeen, seenDot, char, atEnd, isLastWildcard, last, t2, t3, bytes, index, value, wildCardLength, j, _null = null;
      if (end == null)
        end = host.length;
      error = new A.Uri_parseIPv6Address_error(host);
      parseHex = new A.Uri_parseIPv6Address_parseHex(error, host);
      t1 = host.length;
      if (t1 < 2)
        error.call$2("address is too short", _null);
      parts = B._setArrayType([], type$.JSArray_int);
      for (i = start, partStart = i, wildcardSeen = false, seenDot = false; i < end; ++i) {
        if (!(i >= 0 && i < t1))
          return B.ioore(host, i);
        char = host.charCodeAt(i);
        if (char === 58) {
          if (i === start) {
            ++i;
            if (!(i < t1))
              return B.ioore(host, i);
            if (host.charCodeAt(i) !== 58)
              error.call$2("invalid start colon.", i);
            partStart = i;
          }
          if (i === partStart) {
            if (wildcardSeen)
              error.call$2("only one wildcard `::` is allowed", i);
            D.JSArray_methods.add$1(parts, -1);
            wildcardSeen = true;
          } else
            D.JSArray_methods.add$1(parts, parseHex.call$2(partStart, i));
          partStart = i + 1;
        } else if (char === 46)
          seenDot = true;
      }
      if (parts.length === 0)
        error.call$2("too few parts", _null);
      atEnd = partStart === end;
      isLastWildcard = J.$eq$(D.JSArray_methods.get$last(parts), -1);
      if (atEnd && !isLastWildcard)
        error.call$2("expected a part after last `:`", end);
      if (!atEnd)
        if (!seenDot)
          D.JSArray_methods.add$1(parts, parseHex.call$2(partStart, end));
        else {
          last = A.Uri__parseIPv4Address(host, partStart, end);
          t1 = J.getInterceptor$asx(last);
          t2 = t1.$index(last, 0);
          if (typeof t2 !== "number")
            return t2.$shl();
          t3 = t1.$index(last, 1);
          if (typeof t3 !== "number")
            return B.iae(t3);
          D.JSArray_methods.add$1(parts, (t2 << 8 | t3) >>> 0);
          t3 = t1.$index(last, 2);
          if (typeof t3 !== "number")
            return t3.$shl();
          t1 = t1.$index(last, 3);
          if (typeof t1 !== "number")
            return B.iae(t1);
          D.JSArray_methods.add$1(parts, (t3 << 8 | t1) >>> 0);
        }
      if (wildcardSeen) {
        if (parts.length > 7)
          error.call$2("an address with a wildcard must have less than 7 parts", _null);
      } else if (parts.length !== 8)
        error.call$2("an address without a wildcard must contain exactly 8 parts", _null);
      bytes = B.NativeUint8List_NativeUint8List(16);
      for (t1 = J.getInterceptor$ax(bytes), i = 0, index = 0; t2 = parts.length, i < t2; ++i) {
        value = parts[i];
        if (value === -1) {
          wildCardLength = 9 - t2;
          for (j = 0; j < wildCardLength; ++j) {
            t1.$indexSet(bytes, index, 0);
            t1.$indexSet(bytes, index + 1, 0);
            index += 2;
          }
        } else {
          t1.$indexSet(bytes, index, D.JSInt_methods._shrOtherPositive$1(value, 8));
          t1.$indexSet(bytes, index + 1, value & 255);
          index += 2;
        }
      }
      return bytes;
    },
    _Uri$_internal(scheme, _userInfo, _host, _port, path, _query, _fragment) {
      B.createSentinel(type$.Map_String_String);
      return new A._Uri(scheme, _userInfo, _host, _port, path, _query, _fragment);
    },
    _Uri__Uri$notSimple(uri, start, end, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme) {
      var port, userInfoStart, userInfo, host, t1, portNumber, path, query, _null = null;
      if (scheme == null)
        if (schemeEnd > start)
          scheme = A._Uri__makeScheme(uri, start, schemeEnd);
        else {
          if (schemeEnd === start)
            A._Uri__fail(uri, start, "Invalid empty scheme");
          scheme = "";
        }
      port = _null;
      if (hostStart > start) {
        userInfoStart = schemeEnd + 3;
        userInfo = userInfoStart < hostStart ? A._Uri__makeUserInfo(uri, userInfoStart, hostStart - 1) : "";
        host = A._Uri__makeHost(uri, hostStart, portStart, false);
        t1 = portStart + 1;
        if (t1 < pathStart) {
          portNumber = A.int_tryParse(D.JSString_methods.substring$2(uri, t1, pathStart), _null);
          port = A._Uri__makePort(portNumber == null ? B.throwExpression(B.FormatException$("Invalid port", uri, t1)) : portNumber, scheme);
        }
      } else {
        host = _null;
        userInfo = "";
      }
      path = A._Uri__makePath(uri, pathStart, queryStart, _null, scheme, host != null);
      query = queryStart < fragmentStart ? A._Uri__makeQuery(uri, queryStart + 1, fragmentStart, _null) : _null;
      return A._Uri$_internal(scheme, userInfo, host, port, path, query, fragmentStart < end ? A._Uri__makeFragment(uri, fragmentStart + 1, end) : _null);
    },
    _Uri__Uri(fragment, path, queryParameters) {
      var host, query, port, t1, hasAuthority, _null = null,
        userInfo = A._Uri__makeUserInfo(_null, 0, A._stringOrNullLength(_null));
      if (userInfo == null)
        throw B.wrapException("unreachable");
      host = A._Uri__makeHost(_null, 0, A._stringOrNullLength(_null), false);
      query = A._Uri__makeQuery(_null, 0, A._stringOrNullLength(_null), queryParameters);
      fragment = A._Uri__makeFragment(fragment, 0, A._stringOrNullLength(fragment));
      port = A._Uri__makePort(_null, "");
      if (host == null)
        if (!B.boolConversionCheck(D.JSString_methods.get$isNotEmpty(userInfo)))
          t1 = port != null;
        else
          t1 = true;
      else
        t1 = false;
      if (t1)
        host = "";
      t1 = host == null;
      hasAuthority = !t1;
      path = A._Uri__makePath(path, 0, A._stringOrNullLength(path), _null, "", hasAuthority);
      if (path == null)
        throw B.wrapException("unreachable");
      if (B.boolConversionCheck(D.JSString_methods.get$isEmpty("")) && t1 && !B.boolConversionCheck(D.JSString_methods.startsWith$1(path, "/")))
        path = A._Uri__normalizeRelativePath(path, B.boolConversionCheck(D.JSString_methods.get$isNotEmpty("")) || hasAuthority);
      else
        path = A._Uri__removeDotSegments(path);
      return A._Uri$_internal("", userInfo, t1 && B.boolConversionCheck(J.startsWith$1$s(path, "//")) ? "" : host, port, path, query, fragment);
    },
    _Uri__defaultPort(scheme) {
      if (scheme === "http")
        return 80;
      if (scheme === "https")
        return 443;
      return 0;
    },
    _Uri__fail(uri, index, message) {
      throw B.wrapException(B.FormatException$(message, uri, index));
    },
    _Uri__computePathSegments(pathToSplit) {
      var t1;
      if (B.boolConversionCheck(D.JSString_methods.get$isNotEmpty(pathToSplit))) {
        if (0 >= pathToSplit.length)
          return B.ioore(pathToSplit, 0);
        t1 = pathToSplit.charCodeAt(0) === 47;
      } else
        t1 = false;
      if (t1)
        pathToSplit = D.JSString_methods.substring$1(pathToSplit, 1);
      return B.boolConversionCheck(D.JSString_methods.get$isEmpty(pathToSplit)) ? C.List_empty : B.List_List$unmodifiable(D.JSArray_methods.map$1$1(B._setArrayType(pathToSplit.split("/"), type$.JSArray_String), A.core_Uri_decodeComponent$closure(), type$.dynamic), type$.String);
    },
    _Uri__computeQueryParametersAll(query) {
      var queryParameterLists;
      if (query == null || B.boolConversionCheck(D.JSString_methods.get$isEmpty(query)))
        return C.Map_empty;
      queryParameterLists = A._Uri__splitQueryStringAll(query);
      queryParameterLists.updateAll$1(A.core___toUnmodifiableStringList$closure());
      return A.ConstantMap_ConstantMap$from(queryParameterLists, type$.String, type$.List_String);
    },
    _Uri__makePort(port, scheme) {
      if (port != null && port === A._Uri__defaultPort(scheme))
        return null;
      return port;
    },
    _Uri__makeHost(host, start, end, strictIPv6) {
      var t1, t2, index, zoneIDstart, zoneID, i;
      if (host == null)
        return null;
      if (start === end)
        return "";
      t1 = host.length;
      if (start >>> 0 !== start || start >= t1)
        return B.ioore(host, start);
      if (host.charCodeAt(start) === 91) {
        t2 = end - 1;
        if (!(t2 >= 0 && t2 < t1))
          return B.ioore(host, t2);
        if (host.charCodeAt(t2) !== 93)
          A._Uri__fail(host, start, "Missing end `]` to match `[` in host");
        t1 = start + 1;
        index = A._Uri__checkZoneID(host, t1, t2);
        if (index < t2) {
          zoneIDstart = index + 1;
          zoneID = A._Uri__normalizeZoneID(host, B.boolConversionCheck(D.JSString_methods.startsWith$2(host, "25", zoneIDstart)) ? index + 3 : zoneIDstart, t2, "%25");
        } else
          zoneID = "";
        A.Uri_parseIPv6Address(host, t1, index);
        return J.$add$ansx(J.$add$ansx(J.toLowerCase$0$s(D.JSString_methods.substring$2(host, start, index)), zoneID), "]");
      }
      if (!strictIPv6)
        for (i = start; i < end; ++i) {
          if (!(i < t1))
            return B.ioore(host, i);
          if (host.charCodeAt(i) === 58) {
            index = A._Uri__checkZoneID(host, start, end);
            if (index < end) {
              zoneIDstart = index + 1;
              zoneID = A._Uri__normalizeZoneID(host, B.boolConversionCheck(D.JSString_methods.startsWith$2(host, "25", zoneIDstart)) ? index + 3 : zoneIDstart, end, "%25");
            } else
              zoneID = "";
            A.Uri_parseIPv6Address(host, start, index);
            return J.$add$ansx("[" + B.S(D.JSString_methods.substring$2(host, start, index)) + zoneID, "]");
          }
        }
      return A._Uri__normalizeRegName(host, start, end);
    },
    _Uri__checkZoneID(host, start, end) {
      var index = D.JSString_methods.indexOf$2(host, "%", start);
      return index >= start && index < end ? index : end;
    },
    _Uri__isZoneIDChar(char) {
      var t1;
      if (char < 127) {
        t1 = D.JSInt_methods._shrOtherPositive$1(char, 4);
        if (!(t1 < 8))
          return B.ioore(C.List_piR, t1);
        t1 = C.List_piR[t1];
        if (typeof t1 !== "number")
          return t1.$and();
        t1 = (t1 & 1 << (char & 15)) >>> 0 !== 0;
      } else
        t1 = false;
      return t1;
    },
    _Uri__normalizeZoneID(host, start, end, prefix) {
      var t1, index, sectionStart, isNormalized, char, replacement, t2, sourceLength, tail, slice,
        buffer = prefix !== "" ? B.StringBuffer$(prefix) : null;
      for (t1 = host.length, index = start, sectionStart = index, isNormalized = true; index < end;) {
        if (!(index >= 0 && index < t1))
          return B.ioore(host, index);
        char = host.charCodeAt(index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t2 = replacement == null;
          if (t2 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = B.StringBuffer$("");
          buffer.write$1(D.JSString_methods.substring$2(host, sectionStart, index));
          if (t2)
            replacement = D.JSString_methods.substring$2(host, index, index + 3);
          else if (replacement === "%")
            A._Uri__fail(host, index, "ZoneID should not contain % anymore");
          buffer.write$1(replacement);
          index += 3;
          sectionStart = index;
          isNormalized = true;
        } else if (B.boolConversionCheck(A._Uri__isZoneIDChar(char))) {
          if (isNormalized && 65 <= char && 90 >= char) {
            if (buffer == null)
              buffer = B.StringBuffer$("");
            if (sectionStart < index) {
              buffer.write$1(D.JSString_methods.substring$2(host, sectionStart, index));
              sectionStart = index;
            }
            isNormalized = false;
          }
          ++index;
        } else {
          sourceLength = 1;
          if ((char & 64512) === 55296 && index + 1 < end) {
            t2 = index + 1;
            if (!(t2 < t1))
              return B.ioore(host, t2);
            tail = host.charCodeAt(t2);
            if ((tail & 64512) === 56320) {
              char = (char & 1023) << 10 | tail & 1023 | 65536;
              sourceLength = 2;
            }
          }
          slice = D.JSString_methods.substring$2(host, sectionStart, index);
          if (buffer == null) {
            buffer = B.StringBuffer$("");
            t2 = buffer;
          } else
            t2 = buffer;
          t2.write$1(slice);
          t2.write$1(A._Uri__escapeChar(char));
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return D.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end)
        buffer.write$1(D.JSString_methods.substring$2(host, sectionStart, end));
      return buffer.toString$0(0);
    },
    _Uri__isRegNameChar(char) {
      var t1;
      if (char < 127) {
        t1 = D.JSInt_methods._shrOtherPositive$1(char, 4);
        if (!(t1 < 8))
          return B.ioore(C.List_4AN, t1);
        t1 = C.List_4AN[t1];
        if (typeof t1 !== "number")
          return t1.$and();
        t1 = (t1 & 1 << (char & 15)) >>> 0 !== 0;
      } else
        t1 = false;
      return t1;
    },
    _Uri__normalizeRegName(host, start, end) {
      var t1, index, sectionStart, buffer, isNormalized, char, replacement, t2, slice, sourceLength, tail;
      for (t1 = host.length, index = start, sectionStart = index, buffer = null, isNormalized = true; index < end;) {
        if (!(index >= 0 && index < t1))
          return B.ioore(host, index);
        char = host.charCodeAt(index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t2 = replacement == null;
          if (t2 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = B.StringBuffer$("");
          slice = D.JSString_methods.substring$2(host, sectionStart, index);
          buffer.write$1(!isNormalized ? D.JSString_methods.toLowerCase$0(slice) : slice);
          sourceLength = 3;
          if (t2)
            replacement = D.JSString_methods.substring$2(host, index, index + 3);
          else if (replacement === "%") {
            replacement = "%25";
            sourceLength = 1;
          }
          buffer.write$1(replacement);
          index += sourceLength;
          sectionStart = index;
          isNormalized = true;
        } else if (B.boolConversionCheck(A._Uri__isRegNameChar(char))) {
          if (isNormalized && 65 <= char && 90 >= char) {
            if (buffer == null)
              buffer = B.StringBuffer$("");
            if (sectionStart < index) {
              buffer.write$1(D.JSString_methods.substring$2(host, sectionStart, index));
              sectionStart = index;
            }
            isNormalized = false;
          }
          ++index;
        } else if (B.boolConversionCheck(A._Uri__isGeneralDelimiter(char)))
          A._Uri__fail(host, index, "Invalid character");
        else {
          sourceLength = 1;
          if ((char & 64512) === 55296 && index + 1 < end) {
            t2 = index + 1;
            if (!(t2 < t1))
              return B.ioore(host, t2);
            tail = host.charCodeAt(t2);
            if ((tail & 64512) === 56320) {
              char = (char & 1023) << 10 | tail & 1023 | 65536;
              sourceLength = 2;
            }
          }
          slice = D.JSString_methods.substring$2(host, sectionStart, index);
          if (!isNormalized)
            slice = D.JSString_methods.toLowerCase$0(slice);
          if (buffer == null) {
            buffer = B.StringBuffer$("");
            t2 = buffer;
          } else
            t2 = buffer;
          t2.write$1(slice);
          t2.write$1(A._Uri__escapeChar(char));
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return D.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end) {
        slice = D.JSString_methods.substring$2(host, sectionStart, end);
        buffer.write$1(!isNormalized ? D.JSString_methods.toLowerCase$0(slice) : slice);
      }
      return buffer.toString$0(0);
    },
    _Uri__makeScheme(scheme, start, end) {
      var t1, i, containsUpperCase, codeUnit;
      if (start === end)
        return "";
      t1 = scheme.length;
      if (start >>> 0 !== start || start >= t1)
        return B.ioore(scheme, start);
      if (!B.boolConversionCheck(A._Uri__isAlphabeticCharacter(scheme.charCodeAt(start))))
        A._Uri__fail(scheme, start, "Scheme not starting with alphabetic character");
      for (i = start, containsUpperCase = false; i < end; ++i) {
        if (!(i < t1))
          return B.ioore(scheme, i);
        codeUnit = scheme.charCodeAt(i);
        if (!B.boolConversionCheck(A._Uri__isSchemeCharacter(codeUnit)))
          A._Uri__fail(scheme, i, "Illegal scheme character");
        if (65 <= codeUnit && codeUnit <= 90)
          containsUpperCase = true;
      }
      scheme = D.JSString_methods.substring$2(scheme, start, end);
      return A._Uri__canonicalizeScheme(containsUpperCase ? D.JSString_methods.toLowerCase$0(scheme) : scheme);
    },
    _Uri__canonicalizeScheme(scheme) {
      if (scheme === "http")
        return "http";
      if (scheme === "file")
        return "file";
      if (scheme === "https")
        return "https";
      if (scheme === "package")
        return "package";
      return scheme;
    },
    _Uri__makeUserInfo(userInfo, start, end) {
      if (userInfo == null)
        return "";
      return A._Uri__normalizeOrSubstring(userInfo, start, end, C.List_2jN, false, false);
    },
    _Uri__makePath(path, start, end, pathSegments, scheme, hasAuthority) {
      var result,
        isFile = scheme === "file",
        ensureLeadingSlash = isFile || hasAuthority;
      if (path == null) {
        if (pathSegments == null)
          return isFile ? "/" : "";
        result = J.join$1$ax(J.map$1$1$ax(pathSegments, new A._Uri__makePath_closure(), type$.String), "/");
      } else if (pathSegments != null)
        throw B.wrapException(B.ArgumentError$("Both path and pathSegments specified", null));
      else
        result = A._Uri__normalizeOrSubstring(path, start, end, C.List_M2I, true, true);
      if (B.boolConversionCheck(D.JSString_methods.get$isEmpty(result))) {
        if (isFile)
          return "/";
      } else if (ensureLeadingSlash && !B.boolConversionCheck(D.JSString_methods.startsWith$1(result, "/")))
        result = "/" + result;
      return A._Uri__normalizePath(result, scheme, hasAuthority);
    },
    _Uri__normalizePath(path, scheme, hasAuthority) {
      if (B.boolConversionCheck(D.JSString_methods.get$isEmpty(scheme)) && !hasAuthority && !B.boolConversionCheck(D.JSString_methods.startsWith$1(path, "/")) && !B.boolConversionCheck(D.JSString_methods.startsWith$1(path, "\\")))
        return A._Uri__normalizeRelativePath(path, B.boolConversionCheck(D.JSString_methods.get$isNotEmpty(scheme)) || hasAuthority);
      return A._Uri__removeDotSegments(path);
    },
    _Uri__makeQuery(query, start, end, queryParameters) {
      if (query != null) {
        if (queryParameters != null)
          throw B.wrapException(B.ArgumentError$("Both query and queryParameters specified", null));
        return A._Uri__normalizeOrSubstring(query, start, end, C.List_42A, true, false);
      }
      if (queryParameters == null)
        return null;
      return A._Uri__makeQueryFromParameters(queryParameters);
    },
    _Uri__makeQueryFromParametersDefault(queryParameters) {
      var t1 = {},
        result = B.StringBuffer$("");
      t1.separator = "";
      queryParameters.forEach$1(0, new A._Uri__makeQueryFromParametersDefault_closure(new A._Uri__makeQueryFromParametersDefault_writeParameter(t1, result)));
      return result.toString$0(0);
    },
    _Uri__makeFragment(fragment, start, end) {
      if (fragment == null)
        return null;
      return A._Uri__normalizeOrSubstring(fragment, start, end, C.List_42A, true, false);
    },
    _Uri__normalizeEscape(source, index, lowerCase) {
      var t3, firstDigit, secondDigit, firstDigitValue, secondDigitValue, value,
        t1 = index + 2,
        t2 = source.length;
      if (t1 >= t2)
        return "%";
      t3 = index + 1;
      if (!(t3 >= 0 && t3 < t2))
        return B.ioore(source, t3);
      firstDigit = source.charCodeAt(t3);
      if (!(t1 >= 0))
        return B.ioore(source, t1);
      secondDigit = source.charCodeAt(t1);
      firstDigitValue = A.hexDigitValue(firstDigit);
      secondDigitValue = A.hexDigitValue(secondDigit);
      if (firstDigitValue < 0 || secondDigitValue < 0)
        return "%";
      value = firstDigitValue * 16 + secondDigitValue;
      if (B.boolConversionCheck(A._Uri__isUnreservedChar(value)))
        return B.String_String$fromCharCode(lowerCase && 65 <= value && 90 >= value ? (value | 32) >>> 0 : value);
      if (firstDigit >= 97 || secondDigit >= 97)
        return J.toUpperCase$0$s(D.JSString_methods.substring$2(source, index, index + 3));
      return null;
    },
    _Uri__escapeChar(char) {
      var codeUnits, t1, t2, flag, encodedBytes, index, byte,
        _s16_ = "0123456789ABCDEF";
      if (char < 128) {
        codeUnits = B.NativeUint8List_NativeUint8List(3);
        t1 = J.getInterceptor$ax(codeUnits);
        t1.$indexSet(codeUnits, 0, 37);
        t2 = D.JSInt_methods._shrOtherPositive$1(char, 4);
        if (!(t2 < 16))
          return B.ioore(_s16_, t2);
        t1.$indexSet(codeUnits, 1, _s16_.charCodeAt(t2));
        t1.$indexSet(codeUnits, 2, _s16_.charCodeAt(char & 15));
      } else {
        if (char > 2047)
          if (char > 65535) {
            flag = 240;
            encodedBytes = 4;
          } else {
            flag = 224;
            encodedBytes = 3;
          }
        else {
          flag = 192;
          encodedBytes = 2;
        }
        codeUnits = B.NativeUint8List_NativeUint8List(3 * encodedBytes);
        for (t1 = J.getInterceptor$ax(codeUnits), index = 0; --encodedBytes, encodedBytes >= 0; flag = 128) {
          byte = D.JSInt_methods.$shr(char, 6 * encodedBytes) & 63 | flag;
          t1.$indexSet(codeUnits, index, 37);
          t2 = byte >>> 4;
          if (!(t2 < 16))
            return B.ioore(_s16_, t2);
          t1.$indexSet(codeUnits, index + 1, _s16_.charCodeAt(t2));
          t1.$indexSet(codeUnits, index + 2, _s16_.charCodeAt(byte & 15));
          index += 3;
        }
      }
      return B.String_String$fromCharCodes(codeUnits, 0, null);
    },
    _Uri__normalizeOrSubstring(component, start, end, charTable, escapeDelimiters, replaceBackslash) {
      var t1 = A._Uri__normalize(component, start, end, charTable, escapeDelimiters, replaceBackslash);
      return t1 == null ? D.JSString_methods.substring$2(component, start, end) : t1;
    },
    _Uri__normalize(component, start, end, charTable, escapeDelimiters, replaceBackslash) {
      var t1, t2, t3, index, sectionStart, buffer, char, t4, sourceLength, replacement, tail;
      for (t1 = !escapeDelimiters, t2 = component.length, t3 = J.getInterceptor$asx(charTable), index = start, sectionStart = index, buffer = null; index < end;) {
        if (!(index >= 0 && index < t2))
          return B.ioore(component, index);
        char = component.charCodeAt(index);
        if (char < 127) {
          t4 = t3.$index(charTable, char >>> 4);
          if (typeof t4 !== "number")
            return t4.$and();
          t4 = (t4 & 1 << (char & 15)) >>> 0 !== 0;
        } else
          t4 = false;
        if (t4)
          ++index;
        else {
          sourceLength = 1;
          if (char === 37) {
            replacement = A._Uri__normalizeEscape(component, index, false);
            if (replacement == null) {
              index += 3;
              continue;
            }
            if ("%" === replacement)
              replacement = "%25";
            else
              sourceLength = 3;
          } else if (char === 92 && replaceBackslash)
            replacement = "/";
          else if (t1 && B.boolConversionCheck(A._Uri__isGeneralDelimiter(char))) {
            A._Uri__fail(component, index, "Invalid character");
            throw B.wrapException("unreachable");
          } else {
            if ((char & 64512) === 55296) {
              t4 = index + 1;
              if (t4 < end) {
                if (!(t4 < t2))
                  return B.ioore(component, t4);
                tail = component.charCodeAt(t4);
                if ((tail & 64512) === 56320) {
                  char = (char & 1023) << 10 | tail & 1023 | 65536;
                  sourceLength = 2;
                }
              }
            }
            replacement = A._Uri__escapeChar(char);
          }
          if (buffer == null) {
            buffer = B.StringBuffer$("");
            t4 = buffer;
          } else
            t4 = buffer;
          t4.write$1(D.JSString_methods.substring$2(component, sectionStart, index));
          t4.write$1(replacement);
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return null;
      if (sectionStart < end)
        buffer.write$1(D.JSString_methods.substring$2(component, sectionStart, end));
      return buffer.toString$0(0);
    },
    _Uri__isSchemeCharacter(ch) {
      var t1;
      if (ch < 128) {
        t1 = D.JSInt_methods._shrOtherPositive$1(ch, 4);
        if (!(t1 < 8))
          return B.ioore(C.List_GVy, t1);
        t1 = C.List_GVy[t1];
        if (typeof t1 !== "number")
          return t1.$and();
        t1 = (t1 & 1 << (ch & 15)) >>> 0 !== 0;
      } else
        t1 = false;
      return t1;
    },
    _Uri__isGeneralDelimiter(ch) {
      var t1;
      if (ch <= 93) {
        t1 = D.JSInt_methods._shrOtherPositive$1(ch, 4);
        if (!(t1 < 8))
          return B.ioore(C.List_VOY, t1);
        t1 = C.List_VOY[t1];
        if (typeof t1 !== "number")
          return t1.$and();
        t1 = (t1 & 1 << (ch & 15)) >>> 0 !== 0;
      } else
        t1 = false;
      return t1;
    },
    _Uri__mayContainDotSegments(path) {
      if (B.boolConversionCheck(D.JSString_methods.startsWith$1(path, ".")))
        return true;
      return D.JSString_methods.indexOf$1(path, "/.") !== -1;
    },
    _Uri__removeDotSegments(path) {
      var t1, output, appendSlash, t2;
      if (!B.boolConversionCheck(A._Uri__mayContainDotSegments(path)))
        return path;
      t1 = type$.JSArray_String;
      output = B._setArrayType([], t1);
      for (t1 = D.JSArray_methods.get$iterator(B._setArrayType(path.split("/"), t1)), appendSlash = false; B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        if (t2 === "..") {
          if (B.boolConversionCheck(D.JSArray_methods.get$isNotEmpty(output))) {
            if (0 >= output.length)
              return B.ioore(output, -1);
            output.pop();
            if (B.boolConversionCheck(D.JSArray_methods.get$isEmpty(output)))
              D.JSArray_methods.add$1(output, "");
          }
          appendSlash = true;
        } else {
          appendSlash = "." === t2;
          if (!appendSlash)
            D.JSArray_methods.add$1(output, t2);
        }
      }
      if (appendSlash)
        D.JSArray_methods.add$1(output, "");
      return D.JSArray_methods.join$1(output, "/");
    },
    _Uri__normalizeRelativePath(path, allowScheme) {
      var t1, output, appendSlash, t2;
      if (!B.boolConversionCheck(A._Uri__mayContainDotSegments(path)))
        return !allowScheme ? A._Uri__escapeScheme(path) : path;
      t1 = type$.JSArray_String;
      output = B._setArrayType([], t1);
      for (t1 = D.JSArray_methods.get$iterator(B._setArrayType(path.split("/"), t1)), appendSlash = false; B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        if (".." === t2) {
          appendSlash = !B.boolConversionCheck(D.JSArray_methods.get$isEmpty(output)) && !B.boolConversionCheck(J.$eq$(D.JSArray_methods.get$last(output), ".."));
          if (appendSlash) {
            if (0 >= output.length)
              return B.ioore(output, -1);
            output.pop();
          } else
            D.JSArray_methods.add$1(output, "..");
        } else {
          appendSlash = "." === t2;
          if (!appendSlash)
            D.JSArray_methods.add$1(output, t2);
        }
      }
      if (!B.boolConversionCheck(D.JSArray_methods.get$isEmpty(output))) {
        t1 = output.length;
        if (t1 === 1) {
          if (0 >= t1)
            return B.ioore(output, 0);
          t1 = B.boolConversionCheck(J.get$isEmpty$asx(output[0]));
        } else
          t1 = false;
      } else
        t1 = true;
      if (t1)
        return "./";
      if (appendSlash || B.boolConversionCheck(J.$eq$(D.JSArray_methods.get$last(output), "..")))
        D.JSArray_methods.add$1(output, "");
      if (!allowScheme) {
        if (0 >= output.length)
          return B.ioore(output, 0);
        D.JSArray_methods.$indexSet(output, 0, A._Uri__escapeScheme(output[0]));
      }
      return D.JSArray_methods.join$1(output, "/");
    },
    _Uri__escapeScheme(path) {
      var i, char, t2,
        t1 = path.length;
      if (t1 >= 2 && B.boolConversionCheck(A._Uri__isAlphabeticCharacter(path.charCodeAt(0))))
        for (i = 1; i < t1; ++i) {
          char = path.charCodeAt(i);
          if (char === 58)
            return B.S(D.JSString_methods.substring$2(path, 0, i)) + "%3A" + B.S(D.JSString_methods.substring$1(path, i + 1));
          if (char <= 127) {
            t2 = char >>> 4;
            if (!(t2 < 8))
              return B.ioore(C.List_GVy, t2);
            t2 = C.List_GVy[t2];
            if (typeof t2 !== "number")
              return t2.$and();
            t2 = (t2 & 1 << (char & 15)) >>> 0 === 0;
          } else
            t2 = true;
          if (t2)
            break;
        }
      return path;
    },
    _Uri__createList() {
      return B._setArrayType([], type$.JSArray_String);
    },
    _Uri__splitQueryStringAll(query) {
      var t1, i, start, equalsIndex, char,
        result = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.List_String),
        parsePair = new A._Uri__splitQueryStringAll_parsePair(query, D.C_Utf8Codec, result);
      for (t1 = query.length, i = 0, start = 0, equalsIndex = -1; i < t1;) {
        char = query.charCodeAt(i);
        if (char === 61) {
          if (equalsIndex < 0)
            equalsIndex = i;
        } else if (char === 38) {
          parsePair.call$3(start, equalsIndex, i);
          start = i + 1;
          equalsIndex = -1;
        }
        ++i;
      }
      parsePair.call$3(start, equalsIndex, i);
      return result;
    },
    _Uri__hexCharPairToByte(s, pos) {
      var t1, byte, i, t2, charCode;
      for (t1 = s.length, byte = 0, i = 0; i < 2; ++i) {
        t2 = pos + i;
        if (!(t2 >= 0 && t2 < t1))
          return B.ioore(s, t2);
        charCode = s.charCodeAt(t2);
        if (48 <= charCode && charCode <= 57)
          byte = byte * 16 + charCode - 48;
        else {
          charCode |= 32;
          if (97 <= charCode && charCode <= 102)
            byte = byte * 16 + charCode - 87;
          else
            throw B.wrapException(B.ArgumentError$("Invalid URL encoding", null));
        }
      }
      return byte;
    },
    _Uri__uriDecode(text, start, end, encoding, plusToSpace) {
      var simple, codeUnit, t2, bytes,
        t1 = text.length,
        i = start;
      while (true) {
        if (!(i < end)) {
          simple = true;
          break;
        }
        if (!(i >= 0 && i < t1))
          return B.ioore(text, i);
        codeUnit = text.charCodeAt(i);
        t2 = true;
        if (codeUnit <= 127)
          if (codeUnit !== 37)
            t2 = plusToSpace && codeUnit === 43;
        if (t2) {
          simple = false;
          break;
        }
        ++i;
      }
      if (simple)
        if (D.C_Utf8Codec === encoding || C.C_Latin1Codec === encoding || C.C_AsciiCodec === encoding)
          return D.JSString_methods.substring$2(text, start, end);
        else
          bytes = J.get$codeUnits$s(D.JSString_methods.substring$2(text, start, end));
      else {
        bytes = B._setArrayType([], type$.JSArray_int);
        for (i = start; i < end; ++i) {
          if (!(i >= 0 && i < t1))
            return B.ioore(text, i);
          codeUnit = text.charCodeAt(i);
          if (codeUnit > 127)
            throw B.wrapException(B.ArgumentError$("Illegal percent encoding in URI", null));
          if (codeUnit === 37) {
            if (i + 3 > t1)
              throw B.wrapException(B.ArgumentError$("Truncated URI", null));
            D.JSArray_methods.add$1(bytes, A._Uri__hexCharPairToByte(text, i + 1));
            i += 2;
          } else if (plusToSpace && codeUnit === 43)
            D.JSArray_methods.add$1(bytes, 32);
          else
            D.JSArray_methods.add$1(bytes, codeUnit);
        }
      }
      return encoding.decode$1(bytes);
    },
    _Uri__isAlphabeticCharacter(codeUnit) {
      var lowerCase = (codeUnit | 32) >>> 0;
      return 97 <= lowerCase && lowerCase <= 122;
    },
    _Uri__isUnreservedChar(char) {
      var t1;
      if (char < 127) {
        t1 = D.JSInt_methods._shrOtherPositive$1(char, 4);
        if (!(t1 < 8))
          return B.ioore(C.List_piR, t1);
        t1 = C.List_piR[t1];
        if (typeof t1 !== "number")
          return t1.$and();
        t1 = (t1 & 1 << (char & 15)) >>> 0 !== 0;
      } else
        t1 = false;
      return t1;
    },
    UriData$_(_text, _separatorIndices, _uriCache) {
      return new A.UriData(_text, _separatorIndices, _uriCache);
    },
    UriData__parse(text, start, sourceUri) {
      var t1, i, slashIndex, char, equalsIndex, lastSeparator, t2, data,
        _s17_ = "Invalid MIME type",
        indices = B._setArrayType([start - 1], type$.JSArray_int);
      for (t1 = text.length, i = start, slashIndex = -1, char = null; i < t1; ++i) {
        if (!(i >= 0))
          return B.ioore(text, i);
        char = text.charCodeAt(i);
        if (char === 44 || char === 59)
          break;
        if (char === 47) {
          if (slashIndex < 0) {
            slashIndex = i;
            continue;
          }
          throw B.wrapException(B.FormatException$(_s17_, text, i));
        }
      }
      if (slashIndex < 0 && i > start)
        throw B.wrapException(B.FormatException$(_s17_, text, i));
      for (; char !== 44;) {
        D.JSArray_methods.add$1(indices, i);
        ++i;
        for (equalsIndex = -1; i < t1; ++i) {
          if (!(i >= 0))
            return B.ioore(text, i);
          char = text.charCodeAt(i);
          if (char === 61) {
            if (equalsIndex < 0)
              equalsIndex = i;
          } else if (char === 59 || char === 44)
            break;
        }
        if (equalsIndex >= 0)
          D.JSArray_methods.add$1(indices, equalsIndex);
        else {
          lastSeparator = D.JSArray_methods.get$last(indices);
          if (char !== 44 || i !== lastSeparator + 7 || !B.boolConversionCheck(D.JSString_methods.startsWith$2(text, "base64", lastSeparator + 1)))
            throw B.wrapException(B.FormatException$("Expecting '='", text, i));
          break;
        }
      }
      D.JSArray_methods.add$1(indices, i);
      t2 = i + 1;
      if (D.JSInt_methods.get$isOdd(indices.length))
        text = C.C_Base64Codec.normalize$3(text, t2, t1);
      else {
        data = A._Uri__normalize(text, t2, t1, C.List_42A, true, false);
        if (data != null)
          text = D.JSString_methods.replaceRange$3(text, t2, t1, data);
      }
      return A.UriData$_(text, indices, sourceUri);
    },
    _createTables() {
      var _i, t1, t2, t3, b,
        _s77_ = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=",
        _s1_ = ".", _s1_0 = ":", _s1_1 = "/", _s1_2 = "\\", _s1_3 = "?", _s1_4 = "#", _s2_ = "/\\",
        tables = J.JSArray_JSArray$allocateGrowable(22, type$.Uint8List);
      for (_i = 0; _i < 22; ++_i)
        D.JSArray_methods.$indexSet(tables, _i, B.NativeUint8List_NativeUint8List(96));
      t1 = new A._createTables_build(tables);
      t2 = new A._createTables_setChars();
      t3 = new A._createTables_setRange();
      b = t1.call$2(0, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_, 14);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 3);
      t2.call$3(b, _s1_2, 227);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(14, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_, 15);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(15, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, "%", 225);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 9);
      t2.call$3(b, _s1_2, 233);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(1, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(2, 235);
      t2.call$3(b, _s77_, 139);
      t2.call$3(b, _s1_1, 131);
      t2.call$3(b, _s1_2, 131);
      t2.call$3(b, _s1_, 146);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(3, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 68);
      t2.call$3(b, _s1_2, 68);
      t2.call$3(b, _s1_, 18);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(4, 229);
      t2.call$3(b, _s77_, 5);
      t3.call$3(b, "AZ", 229);
      t2.call$3(b, _s1_0, 102);
      t2.call$3(b, "@", 68);
      t2.call$3(b, "[", 232);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(5, 229);
      t2.call$3(b, _s77_, 5);
      t3.call$3(b, "AZ", 229);
      t2.call$3(b, _s1_0, 102);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(6, 231);
      t3.call$3(b, "19", 7);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(7, 231);
      t3.call$3(b, "09", 7);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      t2.call$3(t1.call$2(8, 8), "]", 5);
      b = t1.call$2(9, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 16);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(16, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 17);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(17, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 9);
      t2.call$3(b, _s1_2, 233);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(10, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 18);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(18, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 19);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(19, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(11, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(12, 236);
      t2.call$3(b, _s77_, 12);
      t2.call$3(b, _s1_3, 12);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(13, 237);
      t2.call$3(b, _s77_, 13);
      t2.call$3(b, _s1_3, 13);
      t3.call$3(t1.call$2(20, 245), "az", 21);
      b = t1.call$2(21, 245);
      t3.call$3(b, "az", 21);
      t3.call$3(b, "09", 21);
      t2.call$3(b, "+-.", 21);
      return tables;
    },
    _scan(uri, start, end, state, indices) {
      var t1, t2, t3, i, table, char, transition,
        tables = $.$get$_scannerTables();
      for (t1 = J.getInterceptor$ax(indices), t2 = J.getInterceptor$asx(tables), t3 = uri.length, i = start; i < end; ++i) {
        table = t2.$index(tables, state);
        if (!(i >= 0 && i < t3))
          return B.ioore(uri, i);
        char = uri.charCodeAt(i) ^ 96;
        if (char > 95)
          char = 31;
        if (!(char < table.length))
          return B.ioore(table, char);
        transition = table[char];
        state = transition & 31;
        t1.$indexSet(indices, D.JSInt_methods._shrOtherPositive$1(transition, 5), i);
      }
      return state;
    },
    _SimpleUri$(_uri, _schemeEnd, _hostStart, _portStart, _pathStart, _queryStart, _fragmentStart, _schemeCache) {
      return new A._SimpleUri(_uri, _schemeEnd, _hostStart, _portStart, _pathStart, _queryStart, _fragmentStart, _schemeCache);
    },
    _DataUri$(_data, path, query) {
      B.createSentinel(type$.Map_String_String);
      return new A._DataUri("data", "", null, null, path, query, null);
    },
    _startsWithData(text, start) {
      var t3, t4, t5, t6,
        t1 = start + 4,
        t2 = text.length;
      if (!(t1 >= 0 && t1 < t2))
        return B.ioore(text, t1);
      t1 = text.charCodeAt(t1);
      if (start >>> 0 !== start || start >= t2)
        return B.ioore(text, start);
      t3 = text.charCodeAt(start);
      t4 = start + 1;
      if (!(t4 < t2))
        return B.ioore(text, t4);
      t4 = text.charCodeAt(t4);
      t5 = start + 2;
      if (!(t5 < t2))
        return B.ioore(text, t5);
      t5 = text.charCodeAt(t5);
      t6 = start + 3;
      if (!(t6 < t2))
        return B.ioore(text, t6);
      return ((t1 ^ 58) * 3 | t3 ^ 100 | t4 ^ 97 | t5 ^ 116 | text.charCodeAt(t6) ^ 97) >>> 0;
    },
    _stringOrNullLength(s) {
      return s == null ? 0 : s.length;
    },
    _toUnmodifiableStringList(key, list) {
      B._asString(key);
      return B.List_List$unmodifiable(type$.List_String._as(list), type$.String);
    },
    _Uri__makeQueryFromParameters_closure: function _Uri__makeQueryFromParameters_closure(t0) {
      this.params = t0;
    },
    DateTime: function DateTime(t0, t1, t2) {
      this._core$_value = t0;
      this._microsecond = t1;
      this.isUtc = t2;
    },
    Stopwatch: function Stopwatch() {
      this._stop = this._core$_start = 0;
    },
    Uri__parseIPv4Address_error: function Uri__parseIPv4Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_error: function Uri_parseIPv6Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_parseHex: function Uri_parseIPv6Address_parseHex(t0, t1) {
      this.error = t0;
      this.host = t1;
    },
    _Uri: function _Uri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._core$_host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_queryParametersAll_FI = _.___Uri_hashCode_FI = _.___Uri_pathSegments_FI = _.___Uri__text_FI = $;
    },
    _Uri__makePath_closure: function _Uri__makePath_closure() {
    },
    _Uri__makeQueryFromParametersDefault_writeParameter: function _Uri__makeQueryFromParametersDefault_writeParameter(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    _Uri__makeQueryFromParametersDefault_closure: function _Uri__makeQueryFromParametersDefault_closure(t0) {
      this.writeParameter = t0;
    },
    _Uri__splitQueryStringAll_parsePair: function _Uri__splitQueryStringAll_parsePair(t0, t1, t2) {
      this.query = t0;
      this.encoding = t1;
      this.result = t2;
    },
    UriData: function UriData(t0, t1, t2) {
      this._text = t0;
      this._separatorIndices = t1;
      this._uriCache = t2;
    },
    _createTables_build: function _createTables_build(t0) {
      this.tables = t0;
    },
    _createTables_setChars: function _createTables_setChars() {
    },
    _createTables_setRange: function _createTables_setRange() {
    },
    _SimpleUri: function _SimpleUri(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._uri = t0;
      _._schemeEnd = t1;
      _._hostStart = t2;
      _._portStart = t3;
      _._pathStart = t4;
      _._queryStart = t5;
      _._fragmentStart = t6;
      _._schemeCache = t7;
      _._hashCodeCache = null;
    },
    _DataUri: function _DataUri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._core$_host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_queryParametersAll_FI = _.___Uri_hashCode_FI = _.___Uri_pathSegments_FI = _.___Uri__text_FI = $;
    },
    Expando: function Expando(t0, t1) {
      this._jsWeakMap = t0;
      this.$ti = t1;
    },
    _JSPerformance_constructor_(performance) {
      return performance;
    },
    _isDartStreamEnabled() {
      return $.$get$_performance() != null;
    },
    _getNextTaskId() {
      var t1 = $._taskId;
      if (typeof t1 !== "number")
        return t1.$add();
      $._taskId = t1 + 1;
      return t1;
    },
    _isBeginEvent(type) {
      return type === 1 || type === 5;
    },
    _isEndEvent(type) {
      return type === 2 || type === 7;
    },
    _isUnsupportedEvent(type) {
      return type === 9 || type === 11 || type === 10;
    },
    _createEventName(isBeginEvent, isEndEvent, $name, taskId) {
      if (isBeginEvent)
        return B.S(taskId) + "-" + $name + "-begin";
      if (isEndEvent)
        return B.S(taskId) + "-" + $name + "-end";
      return $name;
    },
    _postfixWithCount(eventName) {
      var count = J.$index$asx($._eventNameToCount, eventName);
      if (count == null)
        return eventName;
      return eventName + "-" + B.S(count);
    },
    _incrementEventCount(eventName) {
      var currentCount = J.$index$asx($._eventNameToCount, eventName);
      if (currentCount == null)
        currentCount = 0;
      J.$indexSet$ax($._eventNameToCount, eventName, currentCount + 1);
    },
    _decrementEventCount(eventName) {
      var t1, newCount;
      if (!B.boolConversionCheck($._eventNameToCount.containsKey$1(eventName)))
        return;
      t1 = J.$index$asx($._eventNameToCount, eventName);
      t1.toString;
      if (typeof t1 !== "number")
        return t1.$sub();
      newCount = t1 - 1;
      t1 = $._eventNameToCount;
      if (newCount <= 0)
        J.remove$1$ax(t1, eventName);
      else
        J.$indexSet$ax(t1, eventName, newCount);
    },
    _reportTaskEvent(taskId, flowId, type, $name, argumentsAsJson) {
      var isBeginEvent, isEndEvent, currentEventName, t1, t2, beginEventName;
      if (B.boolConversionCheck(A._isUnsupportedEvent(type)))
        return;
      isBeginEvent = A._isBeginEvent(type);
      isEndEvent = A._isEndEvent(type);
      currentEventName = A._createEventName(isBeginEvent, isEndEvent, $name, taskId);
      if (isBeginEvent) {
        A._incrementEventCount(currentEventName);
        currentEventName = A._postfixWithCount(currentEventName);
      }
      t1 = $.$get$_performance();
      t1.toString;
      t2 = type$.void;
      B._callMethodUnchecked2(t1, "mark", B.StringToJSString_get_toJS(currentEventName), B._callMethodUnchecked1($.$get$_json(), "parse", B.StringToJSString_get_toJS(argumentsAsJson), type$.JSObject), t2);
      if (isEndEvent) {
        beginEventName = A._createEventName(true, false, $name, taskId);
        B._callMethodUnchecked3(t1, "measure", B.StringToJSString_get_toJS($name), B.StringToJSString_get_toJS(A._postfixWithCount(beginEventName)), B.StringToJSString_get_toJS(currentEventName), t2);
        A._decrementEventCount(beginEventName);
      }
    },
    postEvent(eventKind, eventData) {
      var _s9_ = "Extension";
      if (B.boolConversionCheck(D.JSArray_methods.contains$1(B._setArrayType(["VM", "Isolate", "Debug", "GC", "_Echo", "HeapSnapshot", "Logging", "Timeline", "Profiler"], type$.JSArray_String), _s9_)))
        throw B.wrapException(B.ArgumentError$value(_s9_, "stream", "Cannot be a protected stream."));
      else if (B.boolConversionCheck(D.JSString_methods.startsWith$1(_s9_, "_")))
        throw B.wrapException(B.ArgumentError$value(_s9_, "stream", "Cannot start with an underscore."));
      return;
    },
    Timeline_startSync($name, $arguments, flow) {
      var block;
      B.ArgumentError_checkNotNull($name, "name", type$.String);
      if (!B.boolConversionCheck(A._isDartStreamEnabled())) {
        J.add$1$ax($.Timeline__stack, null);
        return;
      }
      block = A._SyncBlock$_($name, A._getNextTaskId(), $arguments, flow);
      J.add$1$ax($.Timeline__stack, block);
      block._startSync$0();
    },
    Timeline_finishSync() {
      var block,
        t1 = J.getInterceptor$asx($.Timeline__stack);
      if (B.boolConversionCheck(t1.get$isEmpty($.Timeline__stack)))
        throw B.wrapException(B.StateError$("Uneven calls to startSync and finishSync"));
      block = t1.removeLast$0($.Timeline__stack);
      if (block == null)
        return;
      block.finish$0();
    },
    TimelineTask$() {
      var t1 = B._setArrayType([], type$.JSArray_nullable__AsyncBlock);
      return new A.TimelineTask(A._getNextTaskId(), t1);
    },
    _AsyncBlock$_($name, _taskId) {
      return new A._AsyncBlock($name, _taskId);
    },
    _SyncBlock$_($name, taskId, $arguments, flow) {
      return new A._SyncBlock($name, taskId, $arguments, flow);
    },
    _argumentsAsJson($arguments) {
      if ($arguments == null || B.boolConversionCheck(J.$eq$($arguments.get$length($arguments), 0)))
        return "{}";
      return D.C_JsonCodec.encode$1($arguments);
    },
    _performance_closure: function _performance_closure() {
    },
    _json_closure: function _json_closure() {
    },
    TimelineTask: function TimelineTask(t0, t1) {
      this._taskId = t0;
      this._stack = t1;
    },
    _AsyncBlock: function _AsyncBlock(t0, t1) {
      this.name = t0;
      this._taskId = t1;
    },
    _SyncBlock: function _SyncBlock(t0, t1, t2, t3) {
      var _ = this;
      _.name = t0;
      _.taskId = t1;
      _.$arguments = t2;
      _.flow = t3;
      _.___SyncBlock__jsonArguments_FI = $;
    },
    _functionToJS2(f) {
      var result;
      if (B.boolConversionCheck(B.isJSFunction(f)))
        throw B.wrapException(B.ArgumentError$("Attempting to rewrap a JS function.", null));
      result = function(_call, f) {
        return function(arg1, arg2) {
          return _call(f, arg1, arg2, arguments.length);
        };
      }(A._callDartFunctionFast2, f);
      result[$.$get$DART_CLOSURE_PROPERTY_NAME()] = f;
      return result;
    },
    _callDartFunctionFast2(callback, arg1, arg2, $length) {
      type$.Function._as(callback);
      B._asInt($length);
      if ($length >= 2)
        return callback.call$2(arg1, arg2);
      if ($length === 1)
        return callback.call$1(arg1);
      return callback.call$0();
    },
    _noJsifyRequired(o) {
      return o == null || B._isBool(o) || typeof o == "number" || typeof o == "string" || type$.Int8List._is(o) || type$.Uint8List._is(o) || type$.Uint8ClampedList._is(o) || type$.Int16List._is(o) || type$.Uint16List._is(o) || type$.Int32List._is(o) || type$.Uint32List._is(o) || type$.Float32List._is(o) || type$.Float64List._is(o) || type$.ByteBuffer._is(o) || type$.ByteData._is(o);
    },
    jsify(object) {
      var t1;
      if (B.boolConversionCheck(A._noJsifyRequired(object)))
        return object;
      t1 = type$.nullable_Object;
      return new A.jsify__convert(E._IdentityHashMap$(t1, t1)).call$1(object);
    },
    globalThis() {
      return globalThis;
    },
    hasProperty(o, $name) {
      return $name in o;
    },
    callMethod(o, method, args, $T) {
      A.assertInteropArgs(args);
      return $T._as(o[method].apply(o, args));
    },
    _callMethodUnchecked4(o, method, arg1, arg2, arg3, arg4, $T) {
      return $T._as(o[method](arg1, arg2, arg3, arg4));
    },
    $instanceof(o, type) {
      return o instanceof type;
    },
    _callConstructorUnchecked0(constr, $T) {
      return $T._as(new constr());
    },
    _callConstructorUnchecked2(constr, arg1, arg2, $T) {
      return $T._as(new constr(arg1, arg2));
    },
    _callConstructorUnchecked3(constr, arg1, arg2, arg3, $T) {
      return $T._as(new constr(arg1, arg2, arg3));
    },
    promiseToFuture(jsPromise, $T) {
      var completer = B.Completer_Completer($T);
      jsPromise.then(B.convertDartClosureToJS(new A.promiseToFuture_closure(completer, $T), 1), B.convertDartClosureToJS(new A.promiseToFuture_closure0(completer), 1));
      return completer.get$future();
    },
    objectKeys(object) {
      return Object.keys(object);
    },
    _isJavaScriptDate(value) {
      return value instanceof Date;
    },
    _isJavaScriptRegExp(value) {
      return value instanceof RegExp;
    },
    isJavaScriptArray(value) {
      return value instanceof Array;
    },
    isJavaScriptSimpleObject(value) {
      var proto = Object.getPrototypeOf(value);
      return proto === Object.prototype || proto === null;
    },
    _isJavaScriptPromise(value) {
      return typeof Promise != "undefined" && value instanceof Promise;
    },
    _dateToDateTime(date) {
      return A.DateTime$fromMillisecondsSinceEpoch(date.getTime(), true);
    },
    _noDartifyRequired(o) {
      return o == null || typeof o === "boolean" || typeof o === "number" || typeof o === "string" || o instanceof Int8Array || o instanceof Uint8Array || o instanceof Uint8ClampedArray || o instanceof Int16Array || o instanceof Uint16Array || o instanceof Int32Array || o instanceof Uint32Array || o instanceof Float32Array || o instanceof Float64Array || o instanceof ArrayBuffer || o instanceof DataView;
    },
    dartify(o) {
      var t1;
      if (B.boolConversionCheck(A._noDartifyRequired(o)))
        return o;
      t1 = type$.nullable_Object;
      return new A.dartify_convert(E._IdentityHashMap$(t1, t1)).call$1(o);
    },
    NullRejectionException$(isUndefined) {
      return new A.NullRejectionException(isUndefined);
    },
    _getConstructor(constructorName) {
      return B.getProperty(A.globalThis(), constructorName, type$.nullable_Object);
    },
    instanceOfString(element, objectType) {
      var $constructor = A._getConstructor(objectType);
      return $constructor != null && B.boolConversionCheck(A.$instanceof(element, $constructor));
    },
    jsify__convert: function jsify__convert(t0) {
      this._convertedObjects = t0;
    },
    promiseToFuture_closure: function promiseToFuture_closure(t0, t1) {
      this.completer = t0;
      this.T = t1;
    },
    promiseToFuture_closure0: function promiseToFuture_closure0(t0) {
      this.completer = t0;
    },
    dartify_convert: function dartify_convert(t0) {
      this._convertedObjects = t0;
    },
    NullRejectionException: function NullRejectionException(t0) {
      this.isUndefined = t0;
    },
    _ChannelCallbackRecord$(_callback) {
      return new A._ChannelCallbackRecord(_callback, B.Zone_current());
    },
    _StoredMessage$(data, _callback) {
      return new A._StoredMessage(data, _callback, B.Zone_current());
    },
    _Channel$(_capacity) {
      return new A._Channel(A.ListQueue$(_capacity, type$._StoredMessage), _capacity);
    },
    ChannelBuffers$() {
      return new A.ChannelBuffers(B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$._Channel));
    },
    SceneBuilder_SceneBuilder() {
      return A.renderer().createSceneBuilder$0();
    },
    Offset$(dx, dy) {
      return new A.Offset(dx, dy);
    },
    Size$(width, height) {
      return new A.Size(width, height);
    },
    Rect$fromLTRB(left, $top, right, bottom) {
      return new A.Rect(left, $top, right, bottom);
    },
    Rect$fromLTWH(left, $top, width, height) {
      return new A.Rect(left, $top, left + width, $top + height);
    },
    Rect$fromCircle(center, radius) {
      var t3, t4, t5,
        t1 = center.get$dx(),
        t2 = radius * 2 / 2;
      if (typeof t1 !== "number")
        return t1.$sub();
      t3 = center.get$dy();
      if (typeof t3 !== "number")
        return t3.$sub();
      t4 = center.get$dx();
      if (typeof t4 !== "number")
        return t4.$add();
      t5 = center.get$dy();
      if (typeof t5 !== "number")
        return t5.$add();
      return new A.Rect(t1 - t2, t3 - t2, t4 + t2, t5 + t2);
    },
    Radius$elliptical(x, y) {
      return new A.Radius(x, y);
    },
    RRect$fromRectAndCorners(rect, bottomLeft, bottomRight, topLeft, topRight) {
      var t1 = rect.top,
        t2 = rect.left,
        t3 = rect.right,
        t4 = rect.bottom,
        t5 = topLeft.x,
        t6 = topLeft.y,
        t7 = topRight.x,
        t8 = topRight.y,
        t9 = bottomLeft.x,
        t10 = bottomLeft.y,
        t11 = bottomRight.x,
        t12 = bottomRight.y,
        t13 = J.getInterceptor$(t5);
      return new A.RRect(t2, t1, t3, t4, t5, t6, t7, t8, t11, t12, t9, t10, B.boolConversionCheck(t13.$eq(t5, t6)) && B.boolConversionCheck(t13.$eq(t5, t7)) && B.boolConversionCheck(t13.$eq(t5, t8)) && B.boolConversionCheck(t13.$eq(t5, t9)) && B.boolConversionCheck(t13.$eq(t5, t10)) && B.boolConversionCheck(t13.$eq(t5, t11)) && B.boolConversionCheck(t13.$eq(t5, t12)));
    },
    RRect$_raw(blRadiusX, blRadiusY, bottom, brRadiusX, brRadiusY, left, right, tlRadiusX, tlRadiusY, $top, trRadiusX, trRadiusY, uniformRadii) {
      return new A.RRect(left, $top, right, bottom, tlRadiusX, tlRadiusY, trRadiusX, trRadiusY, brRadiusX, brRadiusY, blRadiusX, blRadiusY, uniformRadii);
    },
    clampDouble(x, min, max) {
      if (x < min)
        return min;
      if (x > max)
        return max;
      if (B.boolConversionCheck(D.JSNumber_methods.get$isNaN(x)))
        return max;
      return x;
    },
    Color$(value) {
      return new A.Color(value >>> 0);
    },
    Color$fromARGB(a, r, g, b) {
      return new A.Color(((a & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255) >>> 0);
    },
    Color__linearizeColorComponent(component) {
      if (component <= 0.03928)
        return component / 12.92;
      return B._asDouble(A.pow((component + 0.055) / 1.055, 2.4));
    },
    Paint_Paint() {
      return A.renderer().createPaint$0();
    },
    MaskFilter$blur(_style, _sigma) {
      return new A.MaskFilter(_style, _sigma);
    },
    Path_Path() {
      return A.renderer().createPath$0();
    },
    FrameTiming_FrameTiming(buildFinish, buildStart, rasterFinish, rasterFinishWallTime, rasterStart, vsyncStart) {
      return A.FrameTiming$_(B._setArrayType([vsyncStart, buildStart, buildFinish, rasterStart, rasterFinish, rasterFinishWallTime, 0, 0, 0, 0, 1], type$.JSArray_int));
    },
    FrameTiming$_(_data) {
      return new A.FrameTiming(_data);
    },
    Locale$(_languageCode, _countryCode) {
      return new A.Locale(_languageCode, _countryCode);
    },
    SemanticsActionEvent$($arguments, nodeId, type, viewId) {
      return new A.SemanticsActionEvent(type, viewId, nodeId, $arguments);
    },
    PointerData$(buttons, change, device, distance, distanceMax, kind, obscured, onRespond, orientation, physicalDeltaX, physicalDeltaY, physicalX, physicalY, platformData, pointerIdentifier, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, signalKind, size, synthesized, tilt, timeStamp, viewId) {
      return new A.PointerData(viewId, timeStamp, change, kind, signalKind, device, pointerIdentifier, physicalX, physicalY, physicalDeltaX, physicalDeltaY, buttons, obscured, synthesized, pressure, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, platformData, scrollDeltaX, scrollDeltaY, scale, onRespond);
    },
    PointerDataPacket$(data) {
      return new A.PointerDataPacket(data);
    },
    SemanticsAction_values() {
      return J.toList$1$growable$ax(C.Map_guMi7.get$values(), false);
    },
    SemanticsFlag_values() {
      return J.toList$1$growable$ax(C.Map_2r4me.get$values(), false);
    },
    GlyphInfo$(graphemeClusterLayoutBounds, graphemeClusterCodeUnitRange, writingDirection) {
      return new A.GlyphInfo(graphemeClusterLayoutBounds, graphemeClusterCodeUnitRange, writingDirection);
    },
    TextStyle_TextStyle(background, color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, leadingDistribution, letterSpacing, locale, shadows, textBaseline, wordSpacing) {
      return A.renderer().createTextStyle$21$background$color$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontVariations$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$shadows$textBaseline$wordSpacing(background, color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, leadingDistribution, letterSpacing, locale, shadows, textBaseline, wordSpacing);
    },
    ParagraphStyle_ParagraphStyle(ellipsis, fontFamily, fontSize, fontStyle, fontWeight, height, locale, maxLines, strutStyle, textAlign, textDirection, textHeightBehavior) {
      return A.renderer().createParagraphStyle$12$ellipsis$fontFamily$fontSize$fontStyle$fontWeight$height$locale$maxLines$strutStyle$textAlign$textDirection$textHeightBehavior(ellipsis, fontFamily, fontSize, fontStyle, fontWeight, height, locale, maxLines, strutStyle, textAlign, textDirection, textHeightBehavior);
    },
    TextBox$fromLTRBD(left, $top, right, bottom, direction) {
      return new A.TextBox(left, $top, right, bottom, direction);
    },
    TextPosition$(affinity, offset) {
      return new A.TextPosition(offset, affinity);
    },
    TextRange$(end, start) {
      return new A.TextRange(start, end);
    },
    ParagraphConstraints$(width) {
      return new A.ParagraphConstraints(width);
    },
    ParagraphBuilder_ParagraphBuilder(style) {
      return A.renderer().createParagraphBuilder$1(style);
    },
    window() {
      return A.window0();
    },
    ClipOp: function ClipOp(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    PathFillType: function PathFillType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _ChannelCallbackRecord: function _ChannelCallbackRecord(t0, t1) {
      this._callback = t0;
      this._ui$_zone = t1;
    },
    _StoredMessage: function _StoredMessage(t0, t1, t2) {
      this.data = t0;
      this._callback = t1;
      this._ui$_zone = t2;
    },
    _Channel: function _Channel(t0, t1) {
      var _ = this;
      _._queue = t0;
      _._capacity = t1;
      _._draining = false;
      _._channelCallbackRecord = null;
    },
    ChannelBuffers: function ChannelBuffers(t0) {
      this._channels = t0;
    },
    ChannelBuffers_push_closure: function ChannelBuffers_push_closure() {
    },
    ChannelBuffers_setListener_closure: function ChannelBuffers_setListener_closure() {
    },
    OffsetBase: function OffsetBase() {
    },
    Offset: function Offset(t0, t1) {
      this._dx = t0;
      this._dy = t1;
    },
    Size: function Size(t0, t1) {
      this._dx = t0;
      this._dy = t1;
    },
    Rect: function Rect(t0, t1, t2, t3) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
    },
    Radius: function Radius(t0, t1) {
      this.x = t0;
      this.y = t1;
    },
    RRect: function RRect(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
      _.tlRadiusX = t4;
      _.tlRadiusY = t5;
      _.trRadiusX = t6;
      _.trRadiusY = t7;
      _.brRadiusX = t8;
      _.brRadiusY = t9;
      _.blRadiusX = t10;
      _.blRadiusY = t11;
      _.webOnlyUniformRadii = t12;
    },
    Color: function Color(t0) {
      this.value = t0;
    },
    StrokeCap: function StrokeCap(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    StrokeJoin: function StrokeJoin(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    PaintingStyle: function PaintingStyle(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    BlendMode: function BlendMode(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    Clip: function Clip(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    BlurStyle: function BlurStyle(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    MaskFilter: function MaskFilter(t0, t1) {
      this._ui$_style = t0;
      this._sigma = t1;
    },
    FilterQuality: function FilterQuality(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    PlatformDispatcher: function PlatformDispatcher() {
    },
    FramePhase: function FramePhase(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _FrameTimingInfo: function _FrameTimingInfo(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    FrameTiming: function FrameTiming(t0) {
      this._ui$_data = t0;
    },
    AppLifecycleState: function AppLifecycleState(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    AppExitResponse: function AppExitResponse(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    Locale: function Locale(t0, t1) {
      this._languageCode = t0;
      this._countryCode = t1;
    },
    DartPerformanceMode: function DartPerformanceMode(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    SemanticsActionEvent: function SemanticsActionEvent(t0, t1, t2, t3) {
      var _ = this;
      _.type = t0;
      _.viewId = t1;
      _.nodeId = t2;
      _.$arguments = t3;
    },
    ViewFocusState: function ViewFocusState(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    ViewFocusDirection: function ViewFocusDirection(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    PointerChange: function PointerChange(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    PointerDeviceKind: function PointerDeviceKind(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    PointerSignalKind: function PointerSignalKind(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    PointerData: function PointerData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30) {
      var _ = this;
      _.viewId = t0;
      _.timeStamp = t1;
      _.change = t2;
      _.kind = t3;
      _.signalKind = t4;
      _.device = t5;
      _.pointerIdentifier = t6;
      _.physicalX = t7;
      _.physicalY = t8;
      _.physicalDeltaX = t9;
      _.physicalDeltaY = t10;
      _.buttons = t11;
      _.obscured = t12;
      _.synthesized = t13;
      _.pressure = t14;
      _.pressureMin = t15;
      _.pressureMax = t16;
      _.distance = t17;
      _.distanceMax = t18;
      _.size = t19;
      _.radiusMajor = t20;
      _.radiusMinor = t21;
      _.radiusMin = t22;
      _.radiusMax = t23;
      _.orientation = t24;
      _.tilt = t25;
      _.platformData = t26;
      _.scrollDeltaX = t27;
      _.scrollDeltaY = t28;
      _.scale = t29;
      _._onRespond = t30;
    },
    PointerDataPacket: function PointerDataPacket(t0) {
      this.data = t0;
    },
    SemanticsAction: function SemanticsAction(t0, t1) {
      this.index = t0;
      this.name = t1;
    },
    SemanticsFlag: function SemanticsFlag(t0, t1) {
      this.index = t0;
      this.name = t1;
    },
    FontStyle: function FontStyle(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    PlaceholderAlignment: function PlaceholderAlignment(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    GlyphInfo: function GlyphInfo(t0, t1, t2) {
      this.graphemeClusterLayoutBounds = t0;
      this.graphemeClusterCodeUnitRange = t1;
      this.writingDirection = t2;
    },
    TextAlign: function TextAlign(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    TextBaseline: function TextBaseline(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    TextDecoration: function TextDecoration(t0) {
      this._mask = t0;
    },
    TextDecorationStyle: function TextDecorationStyle(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    TextLeadingDistribution: function TextLeadingDistribution(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    TextDirection: function TextDirection(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    TextBox: function TextBox(t0, t1, t2, t3, t4) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
      _.direction = t4;
    },
    TextAffinity: function TextAffinity(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    TextPosition: function TextPosition(t0, t1) {
      this.offset = t0;
      this.affinity = t1;
    },
    TextRange: function TextRange(t0, t1) {
      this.start = t0;
      this.end = t1;
    },
    ParagraphConstraints: function ParagraphConstraints(t0) {
      this.width = t0;
    },
    BoxHeightStyle: function BoxHeightStyle(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    BoxWidthStyle: function BoxWidthStyle(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    TileMode: function TileMode(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    Display: function Display() {
    },
    Brightness: function Brightness(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    GestureSettings: function GestureSettings() {
    },
    assetManager() {
      return A.engineAssetManager();
    },
    BrowserDetection$_() {
      return new A.BrowserDetection();
    },
    debugEmulateFlutterTesterEnvironment() {
      return false;
    },
    BrowserEngine: function BrowserEngine(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    OperatingSystem: function OperatingSystem(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    BrowserDetection: function BrowserDetection() {
      this.__BrowserDetection__operatingSystem_FI = this.__BrowserDetection__browserEngine_FI = this.__BrowserDetection__userAgent_FI = $;
    },
    FlippedCurve$(curve) {
      return new A.FlippedCurve(curve);
    },
    ParametricCurve: function ParametricCurve() {
    },
    Curve: function Curve() {
    },
    Cubic: function Cubic(t0, t1, t2, t3) {
      var _ = this;
      _.a = t0;
      _.b = t1;
      _.c = t2;
      _.d = t3;
    },
    FlippedCurve: function FlippedCurve(t0) {
      this.curve = t0;
    },
    ErrorDescription$(message) {
      var _null = null,
        t1 = B._setArrayType([message], type$.JSArray_Object);
      return new A.ErrorDescription(_null, true, _null, _null, _null, false, t1, _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7);
    },
    ErrorSummary$(message) {
      var _null = null,
        t1 = B._setArrayType([message], type$.JSArray_Object);
      return new A.ErrorSummary(_null, true, _null, _null, _null, false, t1, _null, C.DiagnosticLevel_6, _null, false, false, _null, C.DiagnosticsTreeStyle_7);
    },
    ErrorHint$(message) {
      var _null = null,
        t1 = B._setArrayType([message], type$.JSArray_Object);
      return new A.ErrorHint(_null, true, _null, _null, _null, false, t1, _null, C.DiagnosticLevel_5, _null, false, false, _null, C.DiagnosticsTreeStyle_7);
    },
    ErrorSpacer$() {
      var _null = null;
      return new A.ErrorSpacer("", true, _null, _null, _null, false, _null, C.C__NoDefaultValue, C.DiagnosticLevel_3, "", true, false, _null, C.DiagnosticsTreeStyle_8);
    },
    FlutterErrorDetails$(context, exception, informationCollector, library, silent, stack) {
      return new A.FlutterErrorDetails(exception, stack, library, context, informationCollector, silent);
    },
    FlutterError_FlutterError(message) {
      var lines = B._setArrayType(message.split("\n"), type$.JSArray_String),
        t1 = B._setArrayType([A.ErrorSummary$(D.JSArray_methods.get$first(lines))], type$.JSArray_DiagnosticsNode);
      D.JSArray_methods.addAll$1(t1, J.map$1$1$ax(D.JSArray_methods.skip$1(lines, 1), new A.FlutterError_FlutterError_closure(), type$.DiagnosticsNode));
      return A.FlutterError$fromParts(t1);
    },
    FlutterError$fromParts(diagnostics) {
      return new A.FlutterError(diagnostics);
    },
    FlutterError__defaultStackTraceDemangler(stackTrace) {
      return type$.StackTrace._as(stackTrace);
    },
    FlutterError_dumpErrorToConsole(details, forceReport) {
      var t1;
      type$.FlutterErrorDetails._as(details);
      B._asBool(forceReport);
      t1 = B.boolConversionCheck(details.silent);
      if (t1 && !forceReport)
        return;
      if (B.boolConversionCheck(J.$eq$($.FlutterError__errorCount, 0)) || forceReport)
        A.debugPrintStack(J.toString$0$(details.exception), 100, details.stack);
      else
        A.print__debugPrintThrottled$closure().call$1("Another exception was thrown: " + B.S(details.get$summary()));
      t1 = $.FlutterError__errorCount;
      if (typeof t1 !== "number")
        return t1.$add();
      $.FlutterError__errorCount = t1 + 1;
    },
    FlutterError_defaultStackFilter($frames) {
      var removedPackagesAndClasses, parsedFrames, t1, skipped, index, t2, frame, className, $package, reasons, result, t3, t4, index0, suffix;
      type$.Iterable_String._as($frames);
      removedPackagesAndClasses = B.LinkedHashMap_LinkedHashMap$_literal(["dart:async-patch", 0, "dart:async", 0, "package:stack_trace", 0, "class _AssertionError", 0, "class _FakeAsync", 0, "class _FrameCallbackEntry", 0, "class _Timer", 0, "class _RawReceivePortImpl", 0], type$.String, type$.int);
      parsedFrames = A.StackFrame_fromStackString(J.join$1$ax($frames, "\n"));
      t1 = J.getInterceptor$asx(parsedFrames);
      skipped = 0;
      index = 0;
      while (true) {
        t2 = t1.get$length(parsedFrames);
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (!(index < t2))
          break;
        frame = t1.$index(parsedFrames, index);
        className = "class " + B.S(frame.className);
        $package = B.S(frame.packageScheme) + ":" + B.S(frame.$package);
        if (B.boolConversionCheck(removedPackagesAndClasses.containsKey$1(className))) {
          ++skipped;
          removedPackagesAndClasses.update$2(className, new A.FlutterError_defaultStackFilter_closure());
          t1.removeAt$1(parsedFrames, index);
          --index;
        } else if (B.boolConversionCheck(removedPackagesAndClasses.containsKey$1($package))) {
          ++skipped;
          removedPackagesAndClasses.update$2($package, new A.FlutterError_defaultStackFilter_closure0());
          t1.removeAt$1(parsedFrames, index);
          --index;
        }
        ++index;
      }
      reasons = B.List_List$filled(t1.get$length(parsedFrames), null, false, type$.nullable_String);
      for (t2 = J.get$iterator$ax($.FlutterError__stackFilters); B.boolConversionCheck(t2.moveNext$0());)
        t2.get$current().filter$2(parsedFrames, reasons);
      t2 = type$.JSArray_String;
      result = B._setArrayType([], t2);
      t3 = J.getInterceptor$asx(reasons);
      index = 0;
      while (true) {
        t4 = t1.get$length(parsedFrames);
        if (typeof t4 !== "number")
          return B.iae(t4);
        if (!(index < t4))
          break;
        index0 = index;
        while (true) {
          t4 = t3.get$length(reasons);
          if (typeof t4 !== "number")
            return t4.$sub();
          if (!(index0 < t4 - 1 && t3.$index(reasons, index0) != null && B.boolConversionCheck(J.$eq$(t3.$index(reasons, index0 + 1), t3.$index(reasons, index0)))))
            break;
          ++index0;
        }
        if (t3.$index(reasons, index0) != null)
          suffix = index0 !== index ? " (" + (index0 - index + 2) + " frames)" : " (1 frame)";
        else
          suffix = "";
        t4 = t3.$index(reasons, index0);
        D.JSArray_methods.add$1(result, B.S(t4 == null ? t1.$index(parsedFrames, index0).source : t4) + suffix);
        index = index0 + 1;
      }
      t1 = B._setArrayType([], t2);
      for (t2 = J.get$iterator$ax(removedPackagesAndClasses.get$entries()); B.boolConversionCheck(t2.moveNext$0());) {
        t3 = t2.get$current();
        t4 = t3.value;
        if (typeof t4 !== "number")
          return t4.$gt();
        if (t4 > 0)
          t1.push(t3.key);
      }
      D.JSArray_methods.sort$0(t1);
      if (skipped === 1)
        D.JSArray_methods.add$1(result, "(elided one frame from " + B.S(D.JSArray_methods.get$single(t1)) + ")");
      else if (skipped > 1) {
        t2 = t1.length;
        if (t2 > 1)
          D.JSArray_methods.$indexSet(t1, t2 - 1, "and " + B.S(D.JSArray_methods.get$last(t1)));
        t2 = "(elided " + skipped;
        if (t1.length > 2)
          D.JSArray_methods.add$1(result, t2 + " frames from " + B.S(D.JSArray_methods.join$1(t1, ", ")) + ")");
        else
          D.JSArray_methods.add$1(result, t2 + " frames from " + B.S(D.JSArray_methods.join$1(t1, " ")) + ")");
      }
      return result;
    },
    FlutterError_reportError(details) {
      var t1 = $.FlutterError_onError;
      if (t1 != null)
        t1.call$1(details);
    },
    debugPrintStack(label, maxFrames, stackTrace) {
      var lines, t1, t2;
      if (label != null)
        A.print__debugPrintThrottled$closure().call$1(label);
      lines = J.split$1$s(J.trimRight$0$s(J.toString$0$(stackTrace == null ? B.StackTrace_current() : A.FlutterError__defaultStackTraceDemangler(stackTrace))), "\n");
      t1 = J.getInterceptor$asx(lines);
      t2 = B.boolConversionCheck(t1.get$isNotEmpty(lines));
      if (t2)
        lines = t1.skipWhile$1(lines, new A.debugPrintStack_closure());
      A.print__debugPrintThrottled$closure().call$1(J.join$1$ax(A.FlutterError_defaultStackFilter(maxFrames != null ? J.take$1$ax(lines, maxFrames) : lines), "\n"));
    },
    DiagnosticsStackTrace$($name, stack, stackFilter) {
      var t1 = A.DiagnosticsStackTrace__applyStackFilter(stack, stackFilter);
      return new A.DiagnosticsStackTrace(C.List_empty1, t1, "", true, $name, true, true, null, C.DiagnosticsTreeStyle_7);
    },
    DiagnosticsStackTrace__applyStackFilter(stack, stackFilter) {
      var filter;
      if (stack == null)
        return B._setArrayType([], type$.JSArray_DiagnosticsNode);
      filter = stackFilter == null ? A.assertions_FlutterError_defaultStackFilter$closure() : stackFilter;
      return J.toList$0$ax(J.map$1$1$ax(filter.call$1(J.split$1$s(D.JSString_methods.trimRight$0(B.S(A.FlutterError__defaultStackTraceDemangler(stack))), "\n")), A.assertions_DiagnosticsStackTrace__createStackFrame$closure(), type$.DiagnosticsNode));
    },
    DiagnosticsStackTrace__createStackFrame(frame) {
      return A.DiagnosticsNode_DiagnosticsNode$message(B._asString(frame), false, C.DiagnosticsTreeStyle_8);
    },
    _FlutterErrorDetailsNode$($name, style, value) {
      return new A._FlutterErrorDetailsNode(value, $name, true, true, null, style);
    },
    _ErrorDiagnostic: function _ErrorDiagnostic() {
    },
    ErrorDescription: function ErrorDescription(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _._description = t0;
      _.allowWrap = t1;
      _.ifNull = t2;
      _.ifEmpty = t3;
      _.tooltip = t4;
      _.missingIfNull = t5;
      _._diagnostics$_value = t6;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t7;
      _._defaultLevel = t8;
      _.name = t9;
      _.showSeparator = t10;
      _.showName = t11;
      _.linePrefix = t12;
      _.style = t13;
    },
    ErrorSummary: function ErrorSummary(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _._description = t0;
      _.allowWrap = t1;
      _.ifNull = t2;
      _.ifEmpty = t3;
      _.tooltip = t4;
      _.missingIfNull = t5;
      _._diagnostics$_value = t6;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t7;
      _._defaultLevel = t8;
      _.name = t9;
      _.showSeparator = t10;
      _.showName = t11;
      _.linePrefix = t12;
      _.style = t13;
    },
    ErrorHint: function ErrorHint(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _._description = t0;
      _.allowWrap = t1;
      _.ifNull = t2;
      _.ifEmpty = t3;
      _.tooltip = t4;
      _.missingIfNull = t5;
      _._diagnostics$_value = t6;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t7;
      _._defaultLevel = t8;
      _.name = t9;
      _.showSeparator = t10;
      _.showName = t11;
      _.linePrefix = t12;
      _.style = t13;
    },
    ErrorSpacer: function ErrorSpacer(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _._description = t0;
      _.allowWrap = t1;
      _.ifNull = t2;
      _.ifEmpty = t3;
      _.tooltip = t4;
      _.missingIfNull = t5;
      _._diagnostics$_value = t6;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t7;
      _._defaultLevel = t8;
      _.name = t9;
      _.showSeparator = t10;
      _.showName = t11;
      _.linePrefix = t12;
      _.style = t13;
    },
    FlutterErrorDetails: function FlutterErrorDetails(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.exception = t0;
      _.stack = t1;
      _.library = t2;
      _.context = t3;
      _.informationCollector = t4;
      _.silent = t5;
    },
    FlutterErrorDetails_summary_formatException: function FlutterErrorDetails_summary_formatException(t0) {
      this.$this = t0;
    },
    FlutterErrorDetails_summary_closure: function FlutterErrorDetails_summary_closure() {
    },
    FlutterErrorDetails_summary_closure0: function FlutterErrorDetails_summary_closure0() {
    },
    FlutterErrorDetails_debugFillProperties_closure: function FlutterErrorDetails_debugFillProperties_closure() {
    },
    FlutterError: function FlutterError(t0) {
      this.diagnostics = t0;
    },
    FlutterError_FlutterError_closure: function FlutterError_FlutterError_closure() {
    },
    FlutterError_defaultStackFilter_closure: function FlutterError_defaultStackFilter_closure() {
    },
    FlutterError_defaultStackFilter_closure0: function FlutterError_defaultStackFilter_closure0() {
    },
    FlutterError_toString_closure: function FlutterError_toString_closure(t0) {
      this.renderer = t0;
    },
    debugPrintStack_closure: function debugPrintStack_closure() {
    },
    DiagnosticsStackTrace: function DiagnosticsStackTrace(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._diagnostics$_children = t0;
      _._properties = t1;
      _._description = t2;
      _.allowTruncate = t3;
      _.name = t4;
      _.showSeparator = t5;
      _.showName = t6;
      _.linePrefix = t7;
      _.style = t8;
    },
    _FlutterErrorDetailsNode: function _FlutterErrorDetailsNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.value = t0;
      _.name = t1;
      _.showSeparator = t2;
      _.showName = t3;
      _.linePrefix = t4;
      _.style = t5;
    },
    _FlutterError_Error_DiagnosticableTreeMixin: function _FlutterError_Error_DiagnosticableTreeMixin() {
    },
    _FlutterErrorDetails_Object_Diagnosticable: function _FlutterErrorDetails_Object_Diagnosticable() {
    },
    ChangeNotifier_maybeDispatchObjectCreation(object) {
      var t1 = B.boolConversionCheck(object.get$_creationDispatched());
      if (!t1) {
        $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(B.S(C.Type_ChangeNotifier_JQE), "package:flutter/foundation.dart", object);
        object.set$_creationDispatched(true);
      }
    },
    ValueNotifier$(_value, $T) {
      var t1 = new A.ValueNotifier(_value, $.$get$ChangeNotifier__emptyListeners(), $T._eval$1("ValueNotifier<0>"));
      t1.ValueNotifier$1(_value, $T);
      return t1;
    },
    Listenable: function Listenable() {
    },
    ChangeNotifier: function ChangeNotifier() {
    },
    ChangeNotifier_notifyListeners_closure: function ChangeNotifier_notifyListeners_closure(t0) {
      this.$this = t0;
    },
    ValueNotifier: function ValueNotifier(t0, t1, t2) {
      var _ = this;
      _._change_notifier$_value = t0;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = false;
      _.$ti = t2;
    },
    setEquals(a, b, $T) {
      var t1;
      if (a == null)
        return b == null;
      if (b == null || !B.boolConversionCheck(J.$eq$(a.get$length(a), b.get$length(b))))
        return false;
      if (a === b)
        return true;
      for (t1 = a.get$iterator(a); B.boolConversionCheck(t1.moveNext$0());)
        if (!B.boolConversionCheck(b.contains$1(0, t1.get$current())))
          return false;
      return true;
    },
    listEquals(a, b, $T) {
      var t1, t2, index, t3;
      if (a == null)
        return b == null;
      if (b == null || !B.boolConversionCheck(J.$eq$(J.get$length$asx(a), J.get$length$asx(b))))
        return false;
      if (a === b)
        return true;
      t1 = J.getInterceptor$asx(a);
      t2 = J.getInterceptor$asx(b);
      index = 0;
      while (true) {
        t3 = t1.get$length(a);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(index < t3))
          break;
        if (!B.boolConversionCheck(J.$eq$(t1.$index(a, index), t2.$index(b, index))))
          return false;
        ++index;
      }
      return true;
    },
    mergeSort(list, compare, $T) {
      var middle, secondLength, scratchSpace,
        t1 = J.getInterceptor$asx(list),
        end = t1.get$length(list);
      end = end;
      if (compare == null)
        compare = A._defaultCompare($T);
      if (typeof end !== "number")
        return end.$sub();
      if (end < 2)
        return;
      if (end < 32) {
        A._insertionSort(list, compare, end, 0, $T);
        return;
      }
      middle = D.JSInt_methods._shrOtherPositive$1(end, 1);
      secondLength = end - middle;
      scratchSpace = B.List_List$filled(secondLength, t1.$index(list, 0), false, $T);
      A._mergeSort(list, compare, middle, end, scratchSpace, 0, $T);
      A._mergeSort(list, compare, 0, middle, list, secondLength, $T);
      A._merge(compare, list, secondLength, end, scratchSpace, 0, secondLength, list, 0, $T);
    },
    _defaultCompare($T) {
      return new A._defaultCompare_closure($T);
    },
    _insertionSort(list, compare, end, start, $T) {
      var pos, t1, element, max, min, mid;
      if (compare == null)
        compare = A._defaultCompare($T);
      if (end == null)
        end = J.get$length$asx(list);
      pos = start + 1;
      if (typeof end !== "number")
        return B.iae(end);
      t1 = J.getInterceptor$asx(list);
      for (; pos < end;) {
        element = t1.$index(list, pos);
        for (max = pos, min = start; min < max;) {
          mid = min + D.JSInt_methods._shrOtherPositive$1(max - min, 1);
          if (compare.call$2(element, t1.$index(list, mid)) < 0)
            max = mid;
          else
            min = mid + 1;
        }
        ++pos;
        t1.setRange$4(list, min + 1, pos, list, min);
        t1.$indexSet(list, min, element);
      }
    },
    _movingInsertionSort(list, compare, start, end, target, targetOffset, $T) {
      var t1, t2, i, element, max, max0, min, mid, t3,
        $length = end - start;
      if ($length === 0)
        return;
      t1 = J.getInterceptor$asx(list);
      t2 = J.getInterceptor$ax(target);
      t2.$indexSet(target, targetOffset, t1.$index(list, start));
      for (i = 1; i < $length; ++i) {
        element = t1.$index(list, start + i);
        max = targetOffset + i;
        for (max0 = max, min = targetOffset; min < max0;) {
          mid = min + D.JSInt_methods._shrOtherPositive$1(max0 - min, 1);
          t3 = compare.call$2(element, t2.$index(target, mid));
          if (typeof t3 !== "number")
            return t3.$lt();
          if (t3 < 0)
            max0 = mid;
          else
            min = mid + 1;
        }
        t2.setRange$4(target, min + 1, max + 1, target, min);
        t2.$indexSet(target, min, element);
      }
    },
    _mergeSort(list, compare, start, end, target, targetOffset, $T) {
      var middle, firstLength, targetMiddle,
        $length = end - start;
      if ($length < 32) {
        A._movingInsertionSort(list, compare, start, end, target, targetOffset, $T);
        return;
      }
      middle = start + D.JSInt_methods._shrOtherPositive$1($length, 1);
      firstLength = middle - start;
      targetMiddle = targetOffset + firstLength;
      A._mergeSort(list, compare, middle, end, target, targetMiddle, $T);
      A._mergeSort(list, compare, start, middle, list, middle, $T);
      A._merge(compare, list, middle, middle + firstLength, target, targetMiddle, targetMiddle + (end - middle), target, targetOffset, $T);
    },
    _merge(compare, firstList, firstStart, firstEnd, secondList, secondStart, secondEnd, target, targetOffset, $T) {
      var t3, t4, targetOffset0, cursor10, cursor20,
        cursor1 = firstStart + 1,
        t1 = J.getInterceptor$asx(firstList),
        firstElement = t1.$index(firstList, firstStart),
        cursor2 = secondStart + 1,
        t2 = J.getInterceptor$asx(secondList),
        secondElement = t2.$index(secondList, secondStart);
      for (t3 = J.getInterceptor$ax(target); true; targetOffset = targetOffset0) {
        t4 = compare.call$2(firstElement, secondElement);
        if (typeof t4 !== "number")
          return t4.$le();
        targetOffset0 = targetOffset + 1;
        if (t4 <= 0) {
          t3.$indexSet(target, targetOffset, firstElement);
          if (cursor1 === firstEnd) {
            targetOffset = targetOffset0;
            break;
          }
          cursor10 = cursor1 + 1;
          firstElement = t1.$index(firstList, cursor1);
        } else {
          t3.$indexSet(target, targetOffset, secondElement);
          if (cursor2 !== secondEnd) {
            cursor20 = cursor2 + 1;
            secondElement = t2.$index(secondList, cursor2);
            cursor2 = cursor20;
            continue;
          }
          targetOffset = targetOffset0 + 1;
          t3.$indexSet(target, targetOffset0, firstElement);
          t3.setRange$4(target, targetOffset, targetOffset + (firstEnd - cursor1), firstList, cursor1);
          return;
        }
        cursor1 = cursor10;
      }
      targetOffset0 = targetOffset + 1;
      t3.$indexSet(target, targetOffset, secondElement);
      t3.setRange$4(target, targetOffset0, targetOffset0 + (secondEnd - cursor2), secondList, cursor2);
    },
    _defaultCompare_closure: function _defaultCompare_closure(t0) {
      this.T = t0;
    },
    TextTreeConfiguration$(addBlankLineIfNoChildren, afterDescriptionIfBody, afterName, afterProperties, beforeName, beforeProperties, bodyIndent, footer, isBlankLineBetweenPropertiesAndChildren, isNameOnOwnLine, lineBreak, lineBreakProperties, linkCharacter, mandatoryFooter, prefixLastChildLineOne, prefixLineOne, prefixOtherLines, prefixOtherLinesRootNode, propertyPrefixIfChildren, propertyPrefixNoChildren, propertySeparator, showChildren, suffixLineOne) {
      return new A.TextTreeConfiguration(prefixLineOne, suffixLineOne, prefixOtherLines, prefixLastChildLineOne, prefixOtherLinesRootNode, propertyPrefixIfChildren, propertyPrefixNoChildren, linkCharacter, D.JSString_methods.$mul(" ", linkCharacter.length), lineBreak, lineBreakProperties, beforeName, afterName, afterDescriptionIfBody, beforeProperties, afterProperties, propertySeparator, bodyIndent, showChildren, addBlankLineIfNoChildren, isNameOnOwnLine, footer, mandatoryFooter, isBlankLineBetweenPropertiesAndChildren);
    },
    _PrefixedStringBuilder$(prefixLineOne, prefixOtherLines, wrapWidth) {
      return new A._PrefixedStringBuilder(prefixLineOne, prefixOtherLines, wrapWidth, B.StringBuffer$(""), B.StringBuffer$(""), B._setArrayType([], type$.JSArray_int));
    },
    _PrefixedStringBuilder__wordWrapLine(message, wrapRanges, width, otherLineOffset, startOffset) {
      var wrappedLine, startForLengthCalculations, lastWordStart, noWrap, t2, index, mode, lastWordEnd, start, t3, _box_0 = {},
        t1 = message.length;
      if (t1 + startOffset < width)
        return B._setArrayType([message], type$.JSArray_String);
      wrappedLine = B._setArrayType([], type$.JSArray_String);
      startForLengthCalculations = -startOffset;
      lastWordStart = B._Cell$named("lastWordStart");
      _box_0.currentChunk = 0;
      noWrap = new A._PrefixedStringBuilder__wordWrapLine_noWrap(_box_0, wrapRanges);
      for (t2 = type$.int, index = 0, mode = C._WordWrapParseMode_00, lastWordEnd = null, start = 0; true;)
        switch (mode.index) {
          case 0:
            while (true) {
              if (index < t1) {
                if (!(index >= 0))
                  return B.ioore(message, index);
                t3 = B.boolConversionCheck(J.$eq$(message[index], " "));
              } else
                t3 = false;
              if (!t3)
                break;
              ++index;
            }
            lastWordStart.set$value(index);
            mode = C._WordWrapParseMode_10;
            break;
          case 1:
            while (true) {
              if (index < t1) {
                if (!(index >= 0))
                  return B.ioore(message, index);
                t3 = !B.boolConversionCheck(J.$eq$(message[index], " ")) || B.boolConversionCheck(noWrap.call$1(index));
              } else
                t3 = false;
              if (!t3)
                break;
              ++index;
            }
            mode = C._WordWrapParseMode_20;
            break;
          case 2:
            t3 = index - startForLengthCalculations;
            if (t3 > width || index === t1) {
              if (t3 <= width || lastWordEnd == null)
                lastWordEnd = index;
              D.JSArray_methods.add$1(wrappedLine, D.JSString_methods.substring$2(message, start, lastWordEnd));
              if (lastWordEnd >= t1)
                return wrappedLine;
              if (lastWordEnd === index) {
                while (true) {
                  if (index < t1) {
                    if (!(index >= 0))
                      return B.ioore(message, index);
                    t3 = B.boolConversionCheck(J.$eq$(message[index], " "));
                  } else
                    t3 = false;
                  if (!t3)
                    break;
                  ++index;
                }
                start = index;
                mode = C._WordWrapParseMode_10;
              } else {
                start = lastWordStart.readLocal$1$0(t2);
                mode = C._WordWrapParseMode_20;
              }
              startForLengthCalculations = start - otherLineOffset;
              lastWordEnd = null;
            } else {
              lastWordEnd = index;
              mode = C._WordWrapParseMode_00;
            }
            break;
        }
    },
    _isSingleLine(style) {
      return style === C.DiagnosticsTreeStyle_8;
    },
    TextTreeRenderer$(maxDescendentsTruncatableNode, wrapWidth, wrapWidthProperties) {
      return new A.TextTreeRenderer(wrapWidth, wrapWidthProperties, maxDescendentsTruncatableNode);
    },
    DiagnosticsNode_DiagnosticsNode$message(message, allowWrap, style) {
      var _null = null;
      return A.DiagnosticsProperty$("", _null, allowWrap, C.C__NoDefaultValue, message, _null, _null, C.DiagnosticLevel_3, false, false, true, style, _null, type$.void);
    },
    MessageProperty$($name, message, level) {
      var _null = null;
      return new A.MessageProperty(message, true, _null, _null, _null, false, _null, C.C__NoDefaultValue, level, $name, true, true, _null, C.DiagnosticsTreeStyle_8);
    },
    StringProperty$($name, value, defaultValue, quoted, showName) {
      var _null = null;
      return new A.StringProperty(quoted, _null, true, _null, _null, _null, false, value, defaultValue, C.DiagnosticLevel_3, $name, true, showName, _null, C.DiagnosticsTreeStyle_8);
    },
    DoubleProperty$($name, value, defaultValue, ifNull, level, tooltip, unit) {
      var t1, _null = null;
      if (ifNull == null)
        t1 = _null;
      else
        t1 = ifNull;
      return new A.DoubleProperty(unit, _null, true, t1, _null, tooltip, false, value, defaultValue, level, $name, true, true, _null, C.DiagnosticsTreeStyle_8);
    },
    IntProperty$($name, value, defaultValue, ifNull, level, unit) {
      var t1, _null = null;
      if (ifNull == null)
        t1 = _null;
      else
        t1 = ifNull;
      return new A.IntProperty(unit, _null, true, t1, _null, _null, false, value, defaultValue, level, $name, true, true, _null, C.DiagnosticsTreeStyle_8);
    },
    FlagProperty$($name, defaultValue, ifFalse, ifTrue, level, showName, value) {
      var _null = null;
      return new A.FlagProperty(ifTrue, ifFalse, _null, true, _null, _null, _null, false, value, defaultValue, level, $name, true, showName, _null, C.DiagnosticsTreeStyle_8);
    },
    IterableProperty$($name, value, defaultValue, ifEmpty, level, style, $T) {
      var _null = null;
      return new A.IterableProperty(_null, true, _null, ifEmpty, _null, false, value, defaultValue, level, $name, true, true, _null, style, $T._eval$1("IterableProperty<0>"));
    },
    EnumProperty$($name, value, defaultValue, level, $T) {
      var _null = null;
      return new A.EnumProperty(_null, true, _null, _null, _null, false, value, defaultValue, level, $name, true, true, _null, C.DiagnosticsTreeStyle_8, $T._eval$1("EnumProperty<0>"));
    },
    ObjectFlagProperty$($name, value, ifNull, ifPresent, $T) {
      var t1, _null = null;
      if (ifNull == null)
        t1 = _null;
      else
        t1 = ifNull;
      return new A.ObjectFlagProperty(ifPresent, _null, true, t1, _null, _null, false, value, C.C__NoDefaultValue, C.DiagnosticLevel_3, $name, true, false, _null, C.DiagnosticsTreeStyle_8, $T._eval$1("ObjectFlagProperty<0>"));
    },
    DiagnosticsProperty$($name, value, allowWrap, defaultValue, description, ifEmpty, ifNull, level, missingIfNull, showName, showSeparator, style, tooltip, $T) {
      var t1;
      if (ifNull == null)
        t1 = missingIfNull ? "MISSING" : null;
      else
        t1 = ifNull;
      return new A.DiagnosticsProperty(description, allowWrap, t1, ifEmpty, tooltip, missingIfNull, value, defaultValue, level, $name, showSeparator, showName, null, style, $T._eval$1("DiagnosticsProperty<0>"));
    },
    DiagnosticableNode$($name, style, value, $T) {
      return new A.DiagnosticableNode(value, $name, true, true, null, style, $T._eval$1("DiagnosticableNode<0>"));
    },
    DiagnosticableTreeNode$($name, style, value) {
      return new A.DiagnosticableTreeNode(value, $name, true, true, null, style);
    },
    shortHash(object) {
      return J.padLeft$2$s(J.toRadixString$1$n(J.toUnsigned$1$i(J.get$hashCode$(object), 20), 16), 5, "0");
    },
    describeIdentity(object) {
      return B.S(A.objectRuntimeType(object, "<optimized out>")) + "#" + B.S(A.shortHash(object));
    },
    DiagnosticPropertiesBuilder$() {
      return new A.DiagnosticPropertiesBuilder(B._setArrayType([], type$.JSArray_DiagnosticsNode), C.DiagnosticsTreeStyle_1);
    },
    DiagnosticPropertiesBuilder$fromProperties(properties) {
      return new A.DiagnosticPropertiesBuilder(properties, C.DiagnosticsTreeStyle_1);
    },
    DiagnosticLevel: function DiagnosticLevel(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    DiagnosticsTreeStyle: function DiagnosticsTreeStyle(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    TextTreeConfiguration: function TextTreeConfiguration(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23) {
      var _ = this;
      _.prefixLineOne = t0;
      _.suffixLineOne = t1;
      _.prefixOtherLines = t2;
      _.prefixLastChildLineOne = t3;
      _.prefixOtherLinesRootNode = t4;
      _.propertyPrefixIfChildren = t5;
      _.propertyPrefixNoChildren = t6;
      _.linkCharacter = t7;
      _.childLinkSpace = t8;
      _.lineBreak = t9;
      _.lineBreakProperties = t10;
      _.beforeName = t11;
      _.afterName = t12;
      _.afterDescriptionIfBody = t13;
      _.beforeProperties = t14;
      _.afterProperties = t15;
      _.propertySeparator = t16;
      _.bodyIndent = t17;
      _.showChildren = t18;
      _.addBlankLineIfNoChildren = t19;
      _.isNameOnOwnLine = t20;
      _.footer = t21;
      _.mandatoryFooter = t22;
      _.isBlankLineBetweenPropertiesAndChildren = t23;
    },
    _WordWrapParseMode: function _WordWrapParseMode(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _PrefixedStringBuilder: function _PrefixedStringBuilder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.prefixLineOne = t0;
      _._prefixOtherLines = t1;
      _._nextPrefixOtherLines = null;
      _.wrapWidth = t2;
      _._diagnostics$_buffer = t3;
      _._currentLine = t4;
      _._wrappableRanges = t5;
      _._numLines = 0;
    },
    _PrefixedStringBuilder__wordWrapLine_noWrap: function _PrefixedStringBuilder__wordWrapLine_noWrap(t0, t1) {
      this._box_0 = t0;
      this.wrapRanges = t1;
    },
    _NoDefaultValue: function _NoDefaultValue() {
    },
    TextTreeRenderer: function TextTreeRenderer(t0, t1, t2) {
      this._wrapWidth = t0;
      this._wrapWidthProperties = t1;
      this._maxDescendentsTruncatableNode = t2;
    },
    TextTreeRenderer__debugRender_visitor: function TextTreeRenderer__debugRender_visitor(t0, t1) {
      this._box_0 = t0;
      this.descendants = t1;
    },
    TextTreeRenderer__debugRender_closure: function TextTreeRenderer__debugRender_closure(t0) {
      this.$this = t0;
    },
    DiagnosticsNode: function DiagnosticsNode() {
    },
    MessageProperty: function MessageProperty(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _._description = t0;
      _.allowWrap = t1;
      _.ifNull = t2;
      _.ifEmpty = t3;
      _.tooltip = t4;
      _.missingIfNull = t5;
      _._diagnostics$_value = t6;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t7;
      _._defaultLevel = t8;
      _.name = t9;
      _.showSeparator = t10;
      _.showName = t11;
      _.linePrefix = t12;
      _.style = t13;
    },
    StringProperty: function StringProperty(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.quoted = t0;
      _._description = t1;
      _.allowWrap = t2;
      _.ifNull = t3;
      _.ifEmpty = t4;
      _.tooltip = t5;
      _.missingIfNull = t6;
      _._diagnostics$_value = t7;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _.name = t10;
      _.showSeparator = t11;
      _.showName = t12;
      _.linePrefix = t13;
      _.style = t14;
    },
    _NumProperty: function _NumProperty() {
    },
    DoubleProperty: function DoubleProperty(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.unit = t0;
      _._description = t1;
      _.allowWrap = t2;
      _.ifNull = t3;
      _.ifEmpty = t4;
      _.tooltip = t5;
      _.missingIfNull = t6;
      _._diagnostics$_value = t7;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _.name = t10;
      _.showSeparator = t11;
      _.showName = t12;
      _.linePrefix = t13;
      _.style = t14;
    },
    IntProperty: function IntProperty(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.unit = t0;
      _._description = t1;
      _.allowWrap = t2;
      _.ifNull = t3;
      _.ifEmpty = t4;
      _.tooltip = t5;
      _.missingIfNull = t6;
      _._diagnostics$_value = t7;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _.name = t10;
      _.showSeparator = t11;
      _.showName = t12;
      _.linePrefix = t13;
      _.style = t14;
    },
    FlagProperty: function FlagProperty(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _.ifTrue = t0;
      _.ifFalse = t1;
      _._description = t2;
      _.allowWrap = t3;
      _.ifNull = t4;
      _.ifEmpty = t5;
      _.tooltip = t6;
      _.missingIfNull = t7;
      _._diagnostics$_value = t8;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t9;
      _._defaultLevel = t10;
      _.name = t11;
      _.showSeparator = t12;
      _.showName = t13;
      _.linePrefix = t14;
      _.style = t15;
    },
    IterableProperty: function IterableProperty(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _._description = t0;
      _.allowWrap = t1;
      _.ifNull = t2;
      _.ifEmpty = t3;
      _.tooltip = t4;
      _.missingIfNull = t5;
      _._diagnostics$_value = t6;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t7;
      _._defaultLevel = t8;
      _.name = t9;
      _.showSeparator = t10;
      _.showName = t11;
      _.linePrefix = t12;
      _.style = t13;
      _.$ti = t14;
    },
    IterableProperty_valueToString_closure: function IterableProperty_valueToString_closure(t0) {
      this.$this = t0;
    },
    EnumProperty: function EnumProperty(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _._description = t0;
      _.allowWrap = t1;
      _.ifNull = t2;
      _.ifEmpty = t3;
      _.tooltip = t4;
      _.missingIfNull = t5;
      _._diagnostics$_value = t6;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t7;
      _._defaultLevel = t8;
      _.name = t9;
      _.showSeparator = t10;
      _.showName = t11;
      _.linePrefix = t12;
      _.style = t13;
      _.$ti = t14;
    },
    ObjectFlagProperty: function ObjectFlagProperty(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _.ifPresent = t0;
      _._description = t1;
      _.allowWrap = t2;
      _.ifNull = t3;
      _.ifEmpty = t4;
      _.tooltip = t5;
      _.missingIfNull = t6;
      _._diagnostics$_value = t7;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _.name = t10;
      _.showSeparator = t11;
      _.showName = t12;
      _.linePrefix = t13;
      _.style = t14;
      _.$ti = t15;
    },
    DiagnosticsProperty: function DiagnosticsProperty(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _._description = t0;
      _.allowWrap = t1;
      _.ifNull = t2;
      _.ifEmpty = t3;
      _.tooltip = t4;
      _.missingIfNull = t5;
      _._diagnostics$_value = t6;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t7;
      _._defaultLevel = t8;
      _.name = t9;
      _.showSeparator = t10;
      _.showName = t11;
      _.linePrefix = t12;
      _.style = t13;
      _.$ti = t14;
    },
    DiagnosticableNode: function DiagnosticableNode(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.value = t0;
      _.name = t1;
      _.showSeparator = t2;
      _.showName = t3;
      _.linePrefix = t4;
      _.style = t5;
      _.$ti = t6;
    },
    DiagnosticableTreeNode: function DiagnosticableTreeNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.value = t0;
      _.name = t1;
      _.showSeparator = t2;
      _.showName = t3;
      _.linePrefix = t4;
      _.style = t5;
    },
    DiagnosticPropertiesBuilder: function DiagnosticPropertiesBuilder(t0, t1) {
      this.properties = t0;
      this.defaultDiagnosticsTreeStyle = t1;
      this.emptyBodyDescription = null;
    },
    Diagnosticable: function Diagnosticable() {
    },
    DiagnosticableTree: function DiagnosticableTree() {
    },
    DiagnosticableTreeMixin: function DiagnosticableTreeMixin() {
    },
    DiagnosticsBlock: function DiagnosticsBlock() {
    },
    _DiagnosticableTree_Object_Diagnosticable: function _DiagnosticableTree_Object_Diagnosticable() {
    },
    UniqueKey$() {
      return new A.UniqueKey();
    },
    Key: function Key() {
    },
    LocalKey: function LocalKey() {
    },
    UniqueKey: function UniqueKey() {
    },
    ObjectCreated$(className, library, object) {
      return new A.ObjectCreated(object);
    },
    ObjectDisposed$(object) {
      return new A.ObjectDisposed(object);
    },
    FlutterMemoryAllocations$_() {
      return new A.FlutterMemoryAllocations();
    },
    ObjectEvent: function ObjectEvent() {
    },
    ObjectCreated: function ObjectCreated(t0) {
      this.object = t0;
    },
    ObjectDisposed: function ObjectDisposed(t0) {
      this.object = t0;
    },
    FlutterMemoryAllocations: function FlutterMemoryAllocations() {
      this._memory_allocations$_listeners = null;
      this._activeDispatchLoops = 0;
      this._listenersContainNulls = false;
    },
    FlutterMemoryAllocations__tryDefragmentListeners_closure: function FlutterMemoryAllocations__tryDefragmentListeners_closure() {
    },
    FlutterMemoryAllocations_hasListeners_closure: function FlutterMemoryAllocations_hasListeners_closure() {
    },
    FlutterMemoryAllocations_dispatchObjectEvent_closure: function FlutterMemoryAllocations_dispatchObjectEvent_closure(t0, t1) {
      this.type = t0;
      this.event = t1;
    },
    PersistentHashMap$_(_root, $K, $V) {
      return new A.PersistentHashMap(_root, $K._eval$1("@<0>")._bind$1($V)._eval$1("PersistentHashMap<1,2>"));
    },
    _TrieNode_trieIndex(hash, bitIndex) {
      return D.JSInt_methods.$shru(hash, bitIndex) & 31;
    },
    _FullNode$(descendants) {
      return new A._FullNode(descendants);
    },
    _CompressedNode$(occupiedIndices, keyValuePairs) {
      return new A._CompressedNode(occupiedIndices, keyValuePairs);
    },
    _CompressedNode$_empty() {
      return new A._CompressedNode(0, $.$get$_CompressedNode__emptyArray());
    },
    _CompressedNode__CompressedNode$single(bitIndex, keyHash, node) {
      var bit, keyValuePairs,
        t1 = A._TrieNode_trieIndex(keyHash, bitIndex);
      if (typeof t1 !== "number")
        return B.iae(t1);
      bit = D.JSInt_methods.$shl(1, t1);
      keyValuePairs = A._makeArray(2);
      J.$indexSet$ax(keyValuePairs, 1, node);
      return A._CompressedNode$(bit, keyValuePairs);
    },
    _CompressedNode__resolveCollision(bitIndex, existingKey, existingValue, key, keyHash, value) {
      var existingKeyHash = J.get$hashCode$(existingKey);
      return existingKeyHash === keyHash ? A._HashCollisionNode__HashCollisionNode$fromCollision(keyHash, existingKey, existingValue, key, value) : $.$get$_CompressedNode_empty().put$4(bitIndex, existingKey, existingKeyHash, existingValue).put$4(bitIndex, key, keyHash, value);
    },
    _HashCollisionNode$(hash, keyValuePairs) {
      return new A._HashCollisionNode(hash, keyValuePairs);
    },
    _HashCollisionNode__HashCollisionNode$fromCollision(keyHash, keyA, valueA, keyB, valueB) {
      var list = A._makeArray(4),
        t1 = J.getInterceptor$ax(list);
      t1.$indexSet(list, 0, keyA);
      t1.$indexSet(list, 1, valueA);
      t1.$indexSet(list, 2, keyB);
      t1.$indexSet(list, 3, valueB);
      return A._HashCollisionNode$(keyHash, list);
    },
    _bitCount(n) {
      n -= D.JSInt_methods._shrOtherPositive$1(n, 1) & 1431655765;
      n = (n & 858993459) + (n >>> 2 & 858993459);
      n = n + (n >>> 4) & 252645135;
      n += n >>> 8;
      return n + (n >>> 16) & 63;
    },
    _copy(array) {
      var t3,
        t1 = J.getInterceptor$asx(array),
        clone = A._makeArray(t1.get$length(array)),
        t2 = J.getInterceptor$ax(clone),
        j = 0;
      while (true) {
        t3 = t1.get$length(array);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(j < t3))
          break;
        t2.$indexSet(clone, j, t1.$index(array, j));
        ++j;
      }
      return clone;
    },
    _makeArray($length) {
      return B.List_List$filled($length, null, false, type$.nullable_Object);
    },
    _unsafeCast(o, $T) {
      return o;
    },
    PersistentHashMap: function PersistentHashMap(t0, t1) {
      this._root = t0;
      this.$ti = t1;
    },
    _TrieNode: function _TrieNode() {
    },
    _FullNode: function _FullNode(t0) {
      this.descendants = t0;
    },
    _CompressedNode: function _CompressedNode(t0, t1) {
      this.occupiedIndices = t0;
      this.keyValuePairs = t1;
    },
    _HashCollisionNode: function _HashCollisionNode(t0, t1) {
      this.hash = t0;
      this.keyValuePairs = t1;
    },
    defaultTargetPlatform() {
      return A.defaultTargetPlatform0();
    },
    debugDefaultTargetPlatformOverride() {
      return null;
    },
    TargetPlatform: function TargetPlatform(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    debugPrintThrottled(message, wrapWidth) {
      var messageLines;
      B._asStringQ(message);
      B._asIntQ(wrapWidth);
      messageLines = message == null ? null : B._setArrayType(message.split("\n"), type$.JSArray_String);
      if (messageLines == null)
        messageLines = B._setArrayType(["null"], type$.JSArray_String);
      if (wrapWidth != null)
        J.addAll$1$ax($.$get$_debugPrintBuffer(), D.JSArray_methods.expand$1$1(messageLines, new A.debugPrintThrottled_closure(wrapWidth), type$.String));
      else
        J.addAll$1$ax($.$get$_debugPrintBuffer(), messageLines);
      if (!B.boolConversionCheck($._debugPrintScheduled))
        A._debugPrintTask();
    },
    _debugPrintTask() {
      var line, t3,
        t1 = $._debugPrintScheduled = false,
        t2 = $.$get$_debugPrintStopwatch();
      if (B.boolConversionCheck(J.$gt$n(t2.get$elapsed(), C.Duration_1000000))) {
        t2.stop$0();
        t2.reset$0();
        $._debugPrintedCharacters = 0;
      }
      while (true) {
        t2 = $._debugPrintedCharacters;
        if (typeof t2 !== "number")
          return t2.$lt();
        if (!(t2 < 12288 ? B.boolConversionCheck(J.get$isNotEmpty$asx($.$get$_debugPrintBuffer())) : t1))
          break;
        line = $.$get$_debugPrintBuffer().removeFirst$0();
        t2 = $._debugPrintedCharacters;
        t3 = line.length;
        if (typeof t2 !== "number")
          return t2.$add();
        $._debugPrintedCharacters = t2 + t3;
        B.print(line);
      }
      if (B.boolConversionCheck(J.get$isNotEmpty$asx($.$get$_debugPrintBuffer()))) {
        $._debugPrintScheduled = true;
        $._debugPrintedCharacters = 0;
        A.Timer_Timer(C.Duration_1000000, A.print___debugPrintTask$closure());
        if ($._debugPrintCompleter == null)
          $._debugPrintCompleter = B.Completer_Completer(type$.void);
      } else {
        $.$get$_debugPrintStopwatch().start$0();
        t1 = $._debugPrintCompleter;
        if (t1 != null)
          t1.complete$0();
        $._debugPrintCompleter = null;
      }
    },
    debugWordWrap(message, width) {
      var wrapped, t2, prefix, index, lastWordStart, index0, start, startForLengthCalculations, addPrefix, mode, lastWordEnd, t3,
        t1 = message.length;
      if (t1 < width || B.boolConversionCheck(J.$eq$(J.$index$asx(D.JSString_methods.trimLeft$0(message), 0), "#")))
        return B._setArrayType([message], type$.JSArray_String);
      wrapped = B._setArrayType([], type$.JSArray_String);
      t2 = J.matchAsPrefix$1$s($.$get$_indentPattern(), message);
      t2.toString;
      t2 = t2.group$1(0);
      t2.toString;
      prefix = D.JSString_methods.$add("", D.JSString_methods.$mul(" ", J.get$length$asx(t2)));
      index = prefix.length;
      lastWordStart = B._Cell$named("lastWordStart");
      for (t2 = type$.int, index0 = index, start = 0, startForLengthCalculations = 0, addPrefix = false, mode = C._WordWrapParseMode_0, lastWordEnd = null; true;)
        switch (mode.index) {
          case 0:
            while (true) {
              if (index0 < t1) {
                if (!(index0 >= 0))
                  return B.ioore(message, index0);
                t3 = B.boolConversionCheck(J.$eq$(message[index0], " "));
              } else
                t3 = false;
              if (!t3)
                break;
              ++index0;
            }
            lastWordStart.set$value(index0);
            mode = C._WordWrapParseMode_1;
            break;
          case 1:
            while (true) {
              if (index0 < t1) {
                if (!(index0 >= 0))
                  return B.ioore(message, index0);
                t3 = !B.boolConversionCheck(J.$eq$(message[index0], " "));
              } else
                t3 = false;
              if (!t3)
                break;
              ++index0;
            }
            mode = C._WordWrapParseMode_2;
            break;
          case 2:
            t3 = index0 - startForLengthCalculations;
            if (t3 > width || index0 === t1) {
              if (t3 <= width || lastWordEnd == null)
                lastWordEnd = index0;
              if (addPrefix)
                D.JSArray_methods.add$1(wrapped, D.JSString_methods.$add(prefix, D.JSString_methods.substring$2(message, start, lastWordEnd)));
              else {
                D.JSArray_methods.add$1(wrapped, D.JSString_methods.substring$2(message, start, lastWordEnd));
                addPrefix = true;
              }
              if (lastWordEnd >= t1)
                return wrapped;
              if (lastWordEnd === index0) {
                while (true) {
                  if (index0 < t1) {
                    if (!(index0 >= 0))
                      return B.ioore(message, index0);
                    t3 = B.boolConversionCheck(J.$eq$(message[index0], " "));
                  } else
                    t3 = false;
                  if (!t3)
                    break;
                  ++index0;
                }
                start = index0;
                mode = C._WordWrapParseMode_1;
              } else {
                start = lastWordStart.readLocal$1$0(t2);
                mode = C._WordWrapParseMode_2;
              }
              startForLengthCalculations = start - index;
              lastWordEnd = null;
            } else {
              lastWordEnd = index0;
              mode = C._WordWrapParseMode_0;
            }
            break;
        }
    },
    debugPrintThrottled_closure: function debugPrintThrottled_closure(t0) {
      this.wrapWidth = t0;
    },
    _WordWrapParseMode0: function _WordWrapParseMode0(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    WriteBuffer_WriteBuffer(startCapacity) {
      var eightBytes = A.NativeByteData_NativeByteData(8),
        eightBytesAsList = J.asUint8List$0$x(D.NativeByteData_methods.get$buffer(eightBytes));
      return A.WriteBuffer$_(B.NativeUint8List_NativeUint8List(startCapacity), eightBytes, eightBytesAsList);
    },
    WriteBuffer$_(_buffer, _eightBytes, _eightBytesAsList) {
      return new A.WriteBuffer(_buffer, _eightBytes, _eightBytesAsList);
    },
    ReadBuffer$(data) {
      return new A.ReadBuffer(data);
    },
    WriteBuffer: function WriteBuffer(t0, t1, t2) {
      var _ = this;
      _._serialization$_buffer = t0;
      _._currentSize = 0;
      _._serialization$_isDone = false;
      _._eightBytes = t1;
      _._eightBytesAsList = t2;
    },
    ReadBuffer: function ReadBuffer(t0) {
      this.data = t0;
      this._serialization$_position = 0;
    },
    StackFrame$(className, column, isConstructor, line, method, number, $package, packagePath, packageScheme, source) {
      return new A.StackFrame(source, number, packageScheme, $package, packagePath, line, column, className, method);
    },
    StackFrame_fromStackTrace(stack) {
      return A.StackFrame_fromStackString(stack.toString$0(0));
    },
    StackFrame_fromStackString(stack) {
      return J.toList$0$ax(J.whereType$1$0$ax(J.map$1$1$ax(J.where$1$ax(J.split$1$s(D.JSString_methods.trim$0(stack), "\n"), new A.StackFrame_fromStackString_closure()), A.stack_frame_StackFrame_fromStackTraceLine$closure(), type$.nullable_StackFrame), type$.StackFrame));
    },
    StackFrame__tryParseWebFrame(line) {
      return A.StackFrame__tryParseWebDebugFrame(line);
    },
    StackFrame__tryParseWebDebugFrame(line) {
      var t1, packageUri, $package, packagePath, packageScheme, t2, t3,
        _s9_ = "<unknown>",
        hasPackage = D.JSString_methods.startsWith$1(line, "package"),
        match = (hasPackage ? B.RegExp_RegExp("^(package.+) (\\d+):(\\d+)\\s+(.+)$", true, false) : B.RegExp_RegExp("^(.+) (\\d+):(\\d+)\\s+(.+)$", true, false)).firstMatch$1(line);
      if (match == null)
        return null;
      if (hasPackage) {
        t1 = match.group$1(1);
        t1.toString;
        packageUri = A.Uri_parse(t1);
        $package = J.$index$asx(packageUri.get$pathSegments(), 0);
        packagePath = J.replaceFirst$2$s(packageUri.get$path(), B.S(J.$index$asx(packageUri.get$pathSegments(), 0)) + "/", "");
        packageScheme = "package";
      } else {
        packagePath = _s9_;
        packageScheme = packagePath;
        $package = packageScheme;
      }
      t1 = match.group$1(2);
      t1.toString;
      t1 = A.int_parse(t1, null);
      t2 = match.group$1(3);
      t2.toString;
      t2 = A.int_parse(t2, null);
      t3 = match.group$1(4);
      t3.toString;
      return A.StackFrame$(_s9_, t2, false, t1, t3, -1, $package, packagePath, packageScheme, line);
    },
    StackFrame_fromStackTraceLine(line) {
      var match, t1, method, isConstructor, t2, className, parts, packageUri, packagePath, $package, t3, t4,
        _s9_ = "<unknown>";
      B._asString(line);
      if (line === "<asynchronous suspension>")
        return C.StackFrame_DV7;
      else if (line === "...")
        return C.StackFrame_cg9;
      if (!B.boolConversionCheck(D.JSString_methods.startsWith$1(line, "#")))
        return A.StackFrame__tryParseWebFrame(line);
      match = B.RegExp_RegExp("^#(\\d+) +(.+) \\((.+?):?(\\d+){0,1}:?(\\d+){0,1}\\)$", true, false).firstMatch$1(line);
      t1 = match.group$1(2);
      t1.toString;
      method = J.replaceAll$2$s(t1, ".<anonymous closure>", "");
      isConstructor = B.boolConversionCheck(D.JSString_methods.startsWith$1(method, "new"));
      if (isConstructor) {
        t1 = type$.JSArray_String;
        if (B._setArrayType(method.split(" "), t1).length > 1) {
          t2 = B._setArrayType(method.split(" "), t1);
          if (1 >= t2.length)
            return B.ioore(t2, 1);
          className = t2[1];
        } else
          className = _s9_;
        if (B.boolConversionCheck(D.JSString_methods.contains$1(className, "."))) {
          parts = B._setArrayType(className.split("."), t1);
          t1 = parts.length;
          if (0 >= t1)
            return B.ioore(parts, 0);
          className = parts[0];
          if (1 >= t1)
            return B.ioore(parts, 1);
          method = parts[1];
        } else
          method = "";
      } else if (B.boolConversionCheck(D.JSString_methods.contains$1(method, "."))) {
        parts = B._setArrayType(method.split("."), type$.JSArray_String);
        t1 = parts.length;
        if (0 >= t1)
          return B.ioore(parts, 0);
        className = parts[0];
        if (1 >= t1)
          return B.ioore(parts, 1);
        method = parts[1];
      } else
        className = "";
      t1 = match.group$1(3);
      t1.toString;
      packageUri = A.Uri_parse(t1);
      packagePath = packageUri.get$path();
      if (B.boolConversionCheck(J.$eq$(packageUri.get$scheme(), "dart")) || B.boolConversionCheck(J.$eq$(packageUri.get$scheme(), "package"))) {
        $package = J.$index$asx(packageUri.get$pathSegments(), 0);
        packagePath = J.replaceFirst$2$s(packageUri.get$path(), B.S(J.$index$asx(packageUri.get$pathSegments(), 0)) + "/", "");
      } else
        $package = _s9_;
      t1 = match.group$1(1);
      t1.toString;
      t1 = A.int_parse(t1, null);
      t2 = packageUri.get$scheme();
      if (match.group$1(4) == null)
        t3 = -1;
      else {
        t3 = match.group$1(4);
        t3.toString;
        t3 = A.int_parse(t3, null);
      }
      if (match.group$1(5) == null)
        t4 = -1;
      else {
        t4 = match.group$1(5);
        t4.toString;
        t4 = A.int_parse(t4, null);
      }
      return A.StackFrame$(className, t4, isConstructor, t3, method, t1, $package, packagePath, t2, line);
    },
    StackFrame: function StackFrame(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.source = t0;
      _.number = t1;
      _.packageScheme = t2;
      _.$package = t3;
      _.packagePath = t4;
      _.line = t5;
      _.column = t6;
      _.className = t7;
      _.method = t8;
    },
    StackFrame_fromStackString_closure: function StackFrame_fromStackString_closure() {
    },
    SynchronousFuture$(_value, $T) {
      return new A.SynchronousFuture(_value, $T._eval$1("SynchronousFuture<0>"));
    },
    SynchronousFuture: function SynchronousFuture(t0, t1) {
      this._synchronous_future$_value = t0;
      this.$ti = t1;
    },
    SynchronousFuture_whenComplete_closure: function SynchronousFuture_whenComplete_closure(t0) {
      this.$this = t0;
    },
    GestureDisposition: function GestureDisposition(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    HitTestEntry$(target, $T) {
      return new A.HitTestEntry(target, $T._eval$1("HitTestEntry<0>"));
    },
    HitTestEntry: function HitTestEntry(t0, t1) {
      this.target = t0;
      this._transform = null;
      this.$ti = t1;
    },
    axisDirectionToAxis(axisDirection) {
      var t1;
      $label0$0: {
        if (C.AxisDirection_0 === axisDirection || C.AxisDirection_2 === axisDirection) {
          t1 = C.Axis_1;
          break $label0$0;
        }
        if (C.AxisDirection_3 === axisDirection || C.AxisDirection_1 === axisDirection) {
          t1 = C.Axis_0;
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    },
    Axis: function Axis(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    AxisDirection: function AxisDirection(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    ClipContext: function ClipContext() {
    },
    ClipContext_clipPathAndPaint_closure: function ClipContext_clipPathAndPaint_closure(t0, t1) {
      this.$this = t0;
      this.path = t1;
    },
    ClipContext_clipRRectAndPaint_closure: function ClipContext_clipRRectAndPaint_closure(t0, t1) {
      this.$this = t0;
      this.rrect = t1;
    },
    ClipContext_clipRectAndPaint_closure: function ClipContext_clipRectAndPaint_closure(t0, t1) {
      this.$this = t0;
      this.rect = t1;
    },
    EdgeInsets$fromLTRB(left, $top, right, bottom) {
      return new A.EdgeInsets(left, $top, right, bottom);
    },
    _MixedEdgeInsets$fromLRSETB(_left, _right, _start, _end, _top, _bottom) {
      return new A._MixedEdgeInsets(_left, _right, _start, _end, _top, _bottom);
    },
    EdgeInsetsGeometry: function EdgeInsetsGeometry() {
    },
    EdgeInsets: function EdgeInsets(t0, t1, t2, t3) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
    },
    _MixedEdgeInsets: function _MixedEdgeInsets(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._left = t0;
      _._right = t1;
      _._edge_insets$_start = t2;
      _._edge_insets$_end = t3;
      _._top = t4;
      _._bottom = t5;
    },
    MatrixUtils_getAsTranslation(transform) {
      var t2,
        values = transform.get$storage(),
        t1 = values.length;
      if (0 >= t1)
        return B.ioore(values, 0);
      t2 = false;
      if (B.boolConversionCheck(J.$eq$(values[0], 1))) {
        if (1 >= t1)
          return B.ioore(values, 1);
        if (B.boolConversionCheck(J.$eq$(values[1], 0))) {
          if (2 >= t1)
            return B.ioore(values, 2);
          if (B.boolConversionCheck(J.$eq$(values[2], 0))) {
            if (3 >= t1)
              return B.ioore(values, 3);
            if (B.boolConversionCheck(J.$eq$(values[3], 0))) {
              if (4 >= t1)
                return B.ioore(values, 4);
              if (B.boolConversionCheck(J.$eq$(values[4], 0))) {
                if (5 >= t1)
                  return B.ioore(values, 5);
                if (B.boolConversionCheck(J.$eq$(values[5], 1))) {
                  if (6 >= t1)
                    return B.ioore(values, 6);
                  if (B.boolConversionCheck(J.$eq$(values[6], 0))) {
                    if (7 >= t1)
                      return B.ioore(values, 7);
                    if (B.boolConversionCheck(J.$eq$(values[7], 0))) {
                      if (8 >= t1)
                        return B.ioore(values, 8);
                      if (B.boolConversionCheck(J.$eq$(values[8], 0))) {
                        if (9 >= t1)
                          return B.ioore(values, 9);
                        if (B.boolConversionCheck(J.$eq$(values[9], 0))) {
                          if (10 >= t1)
                            return B.ioore(values, 10);
                          if (B.boolConversionCheck(J.$eq$(values[10], 1))) {
                            if (11 >= t1)
                              return B.ioore(values, 11);
                            if (B.boolConversionCheck(J.$eq$(values[11], 0))) {
                              if (14 >= t1)
                                return B.ioore(values, 14);
                              if (B.boolConversionCheck(J.$eq$(values[14], 0))) {
                                if (15 >= t1)
                                  return B.ioore(values, 15);
                                t2 = B.boolConversionCheck(J.$eq$(values[15], 1));
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      if (t2) {
        if (12 >= t1)
          return B.ioore(values, 12);
        t2 = values[12];
        if (13 >= t1)
          return B.ioore(values, 13);
        return A.Offset$(t2, values[13]);
      }
      return null;
    },
    MatrixUtils_getAsScale(transform) {
      var t2,
        values = transform.get$storage(),
        t1 = values.length;
      if (1 >= t1)
        return B.ioore(values, 1);
      t2 = false;
      if (B.boolConversionCheck(J.$eq$(values[1], 0))) {
        if (2 >= t1)
          return B.ioore(values, 2);
        if (B.boolConversionCheck(J.$eq$(values[2], 0))) {
          if (3 >= t1)
            return B.ioore(values, 3);
          if (B.boolConversionCheck(J.$eq$(values[3], 0))) {
            if (4 >= t1)
              return B.ioore(values, 4);
            if (B.boolConversionCheck(J.$eq$(values[4], 0))) {
              if (6 >= t1)
                return B.ioore(values, 6);
              if (B.boolConversionCheck(J.$eq$(values[6], 0))) {
                if (7 >= t1)
                  return B.ioore(values, 7);
                if (B.boolConversionCheck(J.$eq$(values[7], 0))) {
                  if (8 >= t1)
                    return B.ioore(values, 8);
                  if (B.boolConversionCheck(J.$eq$(values[8], 0))) {
                    if (9 >= t1)
                      return B.ioore(values, 9);
                    if (B.boolConversionCheck(J.$eq$(values[9], 0))) {
                      if (10 >= t1)
                        return B.ioore(values, 10);
                      if (B.boolConversionCheck(J.$eq$(values[10], 1))) {
                        if (11 >= t1)
                          return B.ioore(values, 11);
                        if (B.boolConversionCheck(J.$eq$(values[11], 0))) {
                          if (12 >= t1)
                            return B.ioore(values, 12);
                          if (B.boolConversionCheck(J.$eq$(values[12], 0))) {
                            if (13 >= t1)
                              return B.ioore(values, 13);
                            if (B.boolConversionCheck(J.$eq$(values[13], 0))) {
                              if (14 >= t1)
                                return B.ioore(values, 14);
                              if (B.boolConversionCheck(J.$eq$(values[14], 0))) {
                                if (15 >= t1)
                                  return B.ioore(values, 15);
                                t1 = B.boolConversionCheck(J.$eq$(values[15], 1)) && B.boolConversionCheck(J.$eq$(values[0], values[5]));
                              } else
                                t1 = t2;
                            } else
                              t1 = t2;
                          } else
                            t1 = t2;
                        } else
                          t1 = t2;
                      } else
                        t1 = t2;
                    } else
                      t1 = t2;
                  } else
                    t1 = t2;
                } else
                  t1 = t2;
              } else
                t1 = t2;
            } else
              t1 = t2;
          } else
            t1 = t2;
        } else
          t1 = t2;
      } else
        t1 = t2;
      if (t1)
        return values[0];
      return null;
    },
    MatrixUtils_matrixEquals(a, b) {
      if (a == b)
        return true;
      if (a == null) {
        b.toString;
        return A.MatrixUtils_isIdentity(b);
      }
      if (b == null)
        return A.MatrixUtils_isIdentity(a);
      return B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 0), J.$index$asx(b.get$storage(), 0))) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 1), J.$index$asx(b.get$storage(), 1))) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 2), J.$index$asx(b.get$storage(), 2))) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 3), J.$index$asx(b.get$storage(), 3))) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 4), J.$index$asx(b.get$storage(), 4))) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 5), J.$index$asx(b.get$storage(), 5))) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 6), J.$index$asx(b.get$storage(), 6))) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 7), J.$index$asx(b.get$storage(), 7))) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 8), J.$index$asx(b.get$storage(), 8))) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 9), J.$index$asx(b.get$storage(), 9))) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 10), J.$index$asx(b.get$storage(), 10))) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 11), J.$index$asx(b.get$storage(), 11))) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 12), J.$index$asx(b.get$storage(), 12))) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 13), J.$index$asx(b.get$storage(), 13))) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 14), J.$index$asx(b.get$storage(), 14))) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 15), J.$index$asx(b.get$storage(), 15)));
    },
    MatrixUtils_isIdentity(a) {
      return B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 0), 1)) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 1), 0)) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 2), 0)) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 3), 0)) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 4), 0)) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 5), 1)) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 6), 0)) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 7), 0)) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 8), 0)) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 9), 0)) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 10), 1)) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 11), 0)) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 12), 0)) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 13), 0)) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 14), 0)) && B.boolConversionCheck(J.$eq$(J.$index$asx(a.get$storage(), 15), 1));
    },
    MatrixUtils_transformPoint(transform, point) {
      var t2, t3, t4, rx, ry, rw,
        storage = transform.get$storage(),
        x = point.get$dx(),
        y = point.get$dy(),
        t1 = storage.length;
      if (0 >= t1)
        return B.ioore(storage, 0);
      t2 = storage[0];
      if (typeof t2 !== "number")
        return t2.$mul();
      if (4 >= t1)
        return B.ioore(storage, 4);
      t3 = storage[4];
      if (typeof t3 !== "number")
        return t3.$mul();
      if (12 >= t1)
        return B.ioore(storage, 12);
      t4 = storage[12];
      if (typeof t4 !== "number")
        return B.iae(t4);
      rx = t2 * x + t3 * y + t4;
      t4 = storage[1];
      if (typeof t4 !== "number")
        return t4.$mul();
      t3 = storage[5];
      if (typeof t3 !== "number")
        return t3.$mul();
      if (13 >= t1)
        return B.ioore(storage, 13);
      t2 = storage[13];
      if (typeof t2 !== "number")
        return B.iae(t2);
      ry = t4 * x + t3 * y + t2;
      t2 = storage[3];
      if (typeof t2 !== "number")
        return t2.$mul();
      t3 = storage[7];
      if (typeof t3 !== "number")
        return t3.$mul();
      if (15 >= t1)
        return B.ioore(storage, 15);
      t1 = storage[15];
      if (typeof t1 !== "number")
        return B.iae(t1);
      rw = t2 * x + t3 * y + t1;
      if (rw === 1)
        return A.Offset$(rx, ry);
      else
        return A.Offset$(rx / rw, ry / rw);
    },
    MatrixUtils__safeTransformRect(transform, rect) {
      var isAffine, t2, t3,
        storage = transform.get$storage(),
        t1 = storage.length;
      if (3 >= t1)
        return B.ioore(storage, 3);
      isAffine = false;
      if (B.boolConversionCheck(J.$eq$(storage[3], 0))) {
        if (7 >= t1)
          return B.ioore(storage, 7);
        if (B.boolConversionCheck(J.$eq$(storage[7], 0))) {
          if (15 >= t1)
            return B.ioore(storage, 15);
          t1 = B.boolConversionCheck(J.$eq$(storage[15], 1));
          isAffine = t1;
        }
      }
      t1 = rect.left;
      t2 = rect.top;
      A.MatrixUtils__accumulate(storage, t1, t2, true, isAffine);
      t3 = rect.right;
      A.MatrixUtils__accumulate(storage, t3, t2, false, isAffine);
      t2 = rect.bottom;
      A.MatrixUtils__accumulate(storage, t1, t2, false, isAffine);
      A.MatrixUtils__accumulate(storage, t3, t2, false, isAffine);
      t2 = $.$get$MatrixUtils__minMax();
      t3 = J.getInterceptor$asx(t2);
      return A.Rect$fromLTRB(t3.$index(t2, 0), t3.$index(t2, 1), t3.$index(t2, 2), t3.$index(t2, 3));
    },
    MatrixUtils__accumulate(m, x, y, first, isAffine) {
      var w, t1, t2, t3, t4, tx, ty;
      if (isAffine)
        w = 1;
      else {
        t1 = m.length;
        if (3 >= t1)
          return B.ioore(m, 3);
        t2 = m[3];
        if (typeof t2 !== "number")
          return t2.$mul();
        if (7 >= t1)
          return B.ioore(m, 7);
        t3 = m[7];
        if (typeof t3 !== "number")
          return t3.$mul();
        if (15 >= t1)
          return B.ioore(m, 15);
        t1 = m[15];
        if (typeof t1 !== "number")
          return B.iae(t1);
        w = 1 / (t2 * x + t3 * y + t1);
      }
      t1 = m.length;
      if (0 >= t1)
        return B.ioore(m, 0);
      t2 = m[0];
      if (typeof t2 !== "number")
        return t2.$mul();
      if (4 >= t1)
        return B.ioore(m, 4);
      t3 = m[4];
      if (typeof t3 !== "number")
        return t3.$mul();
      if (12 >= t1)
        return B.ioore(m, 12);
      t4 = m[12];
      if (typeof t4 !== "number")
        return B.iae(t4);
      tx = (t2 * x + t3 * y + t4) * w;
      t4 = m[1];
      if (typeof t4 !== "number")
        return t4.$mul();
      t3 = m[5];
      if (typeof t3 !== "number")
        return t3.$mul();
      if (13 >= t1)
        return B.ioore(m, 13);
      t1 = m[13];
      if (typeof t1 !== "number")
        return B.iae(t1);
      ty = (t4 * x + t3 * y + t1) * w;
      if (first) {
        t1 = $.$get$MatrixUtils__minMax();
        t2 = J.getInterceptor$ax(t1);
        t2.$indexSet(t1, 2, tx);
        t2.$indexSet(t1, 0, tx);
        t2.$indexSet(t1, 3, ty);
        t2.$indexSet(t1, 1, ty);
      } else {
        t1 = $.$get$MatrixUtils__minMax();
        t2 = J.getInterceptor$asx(t1);
        t3 = t2.$index(t1, 0);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (tx < t3)
          J.$indexSet$ax(t1, 0, tx);
        t3 = t2.$index(t1, 1);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (ty < t3)
          J.$indexSet$ax(t1, 1, ty);
        t3 = t2.$index(t1, 2);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (tx > t3)
          J.$indexSet$ax(t1, 2, tx);
        t2 = t2.$index(t1, 3);
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (ty > t2)
          J.$indexSet$ax(t1, 3, ty);
      }
    },
    MatrixUtils_transformRect(transform, rect) {
      var w, h, t2, wx, t3, hx, t4, rx, wy, hy, ry, left, right, $top, bottom, hw, rw, ulx, uly, urx, ury, llx, lly, lrx, lry,
        storage = transform.get$storage(),
        x = rect.left,
        y = rect.top,
        t1 = rect.right;
      if (typeof t1 !== "number")
        return t1.$sub();
      w = t1 - x;
      t1 = rect.bottom;
      if (typeof t1 !== "number")
        return t1.$sub();
      h = t1 - y;
      if (!B.boolConversionCheck(D.JSNumber_methods.get$isFinite(w)) || !B.boolConversionCheck(D.JSNumber_methods.get$isFinite(h)))
        return A.MatrixUtils__safeTransformRect(transform, rect);
      t1 = storage.length;
      if (0 >= t1)
        return B.ioore(storage, 0);
      t2 = storage[0];
      if (typeof t2 !== "number")
        return t2.$mul();
      wx = t2 * w;
      if (4 >= t1)
        return B.ioore(storage, 4);
      t3 = storage[4];
      if (typeof t3 !== "number")
        return t3.$mul();
      hx = t3 * h;
      if (12 >= t1)
        return B.ioore(storage, 12);
      t4 = storage[12];
      if (typeof t4 !== "number")
        return B.iae(t4);
      rx = t2 * x + t3 * y + t4;
      t4 = storage[1];
      if (typeof t4 !== "number")
        return t4.$mul();
      wy = t4 * w;
      t3 = storage[5];
      if (typeof t3 !== "number")
        return t3.$mul();
      hy = t3 * h;
      if (13 >= t1)
        return B.ioore(storage, 13);
      t2 = storage[13];
      if (typeof t2 !== "number")
        return B.iae(t2);
      ry = t4 * x + t3 * y + t2;
      t2 = false;
      if (B.boolConversionCheck(J.$eq$(storage[3], 0)))
        if (B.boolConversionCheck(J.$eq$(storage[7], 0))) {
          if (15 >= t1)
            return B.ioore(storage, 15);
          t2 = B.boolConversionCheck(J.$eq$(storage[15], 1));
        }
      if (t2) {
        left = rx + wx;
        if (wx < 0)
          right = rx;
        else {
          right = left;
          left = rx;
        }
        if (hx < 0)
          left += hx;
        else
          right += hx;
        $top = ry + wy;
        if (wy < 0)
          bottom = ry;
        else {
          bottom = $top;
          $top = ry;
        }
        if (hy < 0)
          $top += hy;
        else
          bottom += hy;
        return A.Rect$fromLTRB(left, $top, right, bottom);
      } else {
        t2 = storage[3];
        if (typeof t2 !== "number")
          return t2.$mul();
        t3 = storage[7];
        if (typeof t3 !== "number")
          return t3.$mul();
        hw = t3 * h;
        if (15 >= t1)
          return B.ioore(storage, 15);
        t1 = storage[15];
        if (typeof t1 !== "number")
          return B.iae(t1);
        rw = t2 * x + t3 * y + t1;
        ulx = rx / rw;
        uly = ry / rw;
        t1 = rx + wx;
        t2 = rw + t2 * w;
        urx = t1 / t2;
        t3 = ry + wy;
        ury = t3 / t2;
        t4 = rw + hw;
        llx = (rx + hx) / t4;
        lly = (ry + hy) / t4;
        t2 += hw;
        lrx = (t1 + hx) / t2;
        lry = (t3 + hy) / t2;
        return A.Rect$fromLTRB(A.MatrixUtils__min4(ulx, urx, llx, lrx), A.MatrixUtils__min4(uly, ury, lly, lry), A.MatrixUtils__max4(ulx, urx, llx, lrx), A.MatrixUtils__max4(uly, ury, lly, lry));
      }
    },
    MatrixUtils__min4(a, b, c, d) {
      var e = a < b ? a : b,
        f = c < d ? c : d;
      return e < f ? e : f;
    },
    MatrixUtils__max4(a, b, c, d) {
      var e = a > b ? a : b,
        f = c > d ? c : d;
      return e > f ? e : f;
    },
    MatrixUtils_inverseTransformRect(transform, rect) {
      if (B.boolConversionCheck(A.MatrixUtils_isIdentity(transform)))
        return rect;
      transform = A.Matrix4_Matrix4$copy0(transform);
      transform.invert$0();
      return A.MatrixUtils_transformRect(transform, rect);
    },
    debugDescribeTransform(transform) {
      if (transform == null)
        return C.List_null;
      return B._setArrayType(["[0] " + B.S(A.debugFormatDouble(transform.entry$2(0, 0))) + "," + B.S(A.debugFormatDouble(transform.entry$2(0, 1))) + "," + B.S(A.debugFormatDouble(transform.entry$2(0, 2))) + "," + B.S(A.debugFormatDouble(transform.entry$2(0, 3))), "[1] " + B.S(A.debugFormatDouble(transform.entry$2(1, 0))) + "," + B.S(A.debugFormatDouble(transform.entry$2(1, 1))) + "," + B.S(A.debugFormatDouble(transform.entry$2(1, 2))) + "," + B.S(A.debugFormatDouble(transform.entry$2(1, 3))), "[2] " + B.S(A.debugFormatDouble(transform.entry$2(2, 0))) + "," + B.S(A.debugFormatDouble(transform.entry$2(2, 1))) + "," + B.S(A.debugFormatDouble(transform.entry$2(2, 2))) + "," + B.S(A.debugFormatDouble(transform.entry$2(2, 3))), "[3] " + B.S(A.debugFormatDouble(transform.entry$2(3, 0))) + "," + B.S(A.debugFormatDouble(transform.entry$2(3, 1))) + "," + B.S(A.debugFormatDouble(transform.entry$2(3, 2))) + "," + B.S(A.debugFormatDouble(transform.entry$2(3, 3)))], type$.JSArray_String);
    },
    TransformProperty$($name, value, defaultValue, showName) {
      var _null = null;
      return new A.TransformProperty(_null, true, _null, _null, _null, false, value, defaultValue, C.DiagnosticLevel_3, $name, true, showName, _null, C.DiagnosticsTreeStyle_8);
    },
    TransformProperty: function TransformProperty(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _._description = t0;
      _.allowWrap = t1;
      _.ifNull = t2;
      _.ifEmpty = t3;
      _.tooltip = t4;
      _.missingIfNull = t5;
      _._diagnostics$_value = t6;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t7;
      _._defaultLevel = t8;
      _.name = t9;
      _.showSeparator = t10;
      _.showName = t11;
      _.linePrefix = t12;
      _.style = t13;
    },
    _LinearTextScaler$(textScaleFactor) {
      return new A._LinearTextScaler(textScaleFactor);
    },
    _LinearTextScaler: function _LinearTextScaler(t0) {
      this.textScaleFactor = t0;
    },
    BoxConstraints$(maxHeight, maxWidth, minHeight, minWidth) {
      return new A.BoxConstraints(minWidth, maxWidth, minHeight, maxHeight);
    },
    BoxConstraints$tightFor(height, width) {
      var t3, t4,
        t1 = width == null,
        t2 = t1 ? 0 : width;
      t1 = t1 ? 1 / 0 : width;
      t3 = height == null;
      t4 = t3 ? 0 : height;
      return new A.BoxConstraints(t2, t1, t4, t3 ? 1 / 0 : height);
    },
    BoxHitTestEntry$(target, localPosition) {
      return new A.BoxHitTestEntry(localPosition, target);
    },
    BoxParentData$() {
      return new A.BoxParentData(C.Offset_0_0);
    },
    BaselineOffset_constructor_(offset) {
      return offset;
    },
    _LayoutCacheStorage$() {
      return new A._LayoutCacheStorage();
    },
    BoxConstraints: function BoxConstraints(t0, t1, t2, t3) {
      var _ = this;
      _.minWidth = t0;
      _.maxWidth = t1;
      _.minHeight = t2;
      _.maxHeight = t3;
    },
    BoxConstraints_toString_describe: function BoxConstraints_toString_describe() {
    },
    BoxHitTestEntry: function BoxHitTestEntry(t0, t1) {
      this.localPosition = t0;
      this.target = t1;
      this._transform = null;
    },
    BoxParentData: function BoxParentData(t0) {
      this.offset = t0;
    },
    _DryLayout: function _DryLayout() {
    },
    _DryLayout_memoize_closure: function _DryLayout_memoize_closure(t0, t1) {
      this.computer = t0;
      this.input = t1;
    },
    _Baseline: function _Baseline() {
    },
    _Baseline_memoize_ifAbsent: function _Baseline_memoize_ifAbsent(t0, t1) {
      this.computer = t0;
      this.input = t1;
    },
    _LayoutCacheStorage: function _LayoutCacheStorage() {
      this._cachedIdeoBaseline = this._cachedAlphabeticBaseline = this._cachedDryLayoutSizes = null;
    },
    RenderBox: function RenderBox() {
    },
    RenderBox_getDistanceToActualBaseline_closure: function RenderBox_getDistanceToActualBaseline_closure(t0) {
      this.$this = t0;
    },
    RenderErrorBox$(message) {
      var t1 = new A.RenderErrorBox(message, A._LayoutCacheStorage$(), A.LayerHandle$(type$.ContainerLayer_2));
      t1.RenderObject$0();
      t1.RenderErrorBox$1(message);
      return t1;
    },
    RenderErrorBox__initBackgroundColor() {
      return C.Color_4039164096;
    },
    RenderErrorBox__initTextStyle() {
      var _null = null;
      return A.TextStyle_TextStyle(_null, C.Color_4281348144, _null, _null, _null, _null, "sans-serif", _null, _null, 18, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    RenderErrorBox: function RenderErrorBox(t0, t1, t2) {
      var _ = this;
      _.message = t0;
      _.__RenderErrorBox__paragraph_F = $;
      _._layoutCacheStorage = t1;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    AnnotationResult$($T) {
      return new A.AnnotationResult(B._setArrayType([], $T._eval$1("JSArray<AnnotationEntry<0>>")), $T._eval$1("AnnotationResult<0>"));
    },
    LayerHandle$($T) {
      var t1 = new A.LayerHandle($T._eval$1("LayerHandle<0>"));
      t1.LayerHandle$1(null, $T);
      return t1;
    },
    PictureLayer$(canvasBounds) {
      var t1 = new A.PictureLayer(canvasBounds, B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), A.LayerHandle$(type$.Layer_2));
      t1.Layer$0();
      return t1;
    },
    OffsetLayer$(offset) {
      var t1 = new A.OffsetLayer(offset, B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), A.LayerHandle$(type$.Layer_2));
      t1.Layer$0();
      return t1;
    },
    ClipRectLayer$() {
      var t1 = new A.ClipRectLayer(C.Clip_1, B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), A.LayerHandle$(type$.Layer_2));
      t1.Layer$0();
      return t1;
    },
    ClipRRectLayer$() {
      var t1 = new A.ClipRRectLayer(C.Clip_2, B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), A.LayerHandle$(type$.Layer_2));
      t1.Layer$0();
      return t1;
    },
    ClipPathLayer$() {
      var t1 = new A.ClipPathLayer(C.Clip_2, B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), A.LayerHandle$(type$.Layer_2));
      t1.Layer$0();
      return t1;
    },
    TransformLayer$(transform) {
      var t1 = new A.TransformLayer(transform, C.Offset_0_0, B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), A.LayerHandle$(type$.Layer_2));
      t1.Layer$0();
      return t1;
    },
    OpacityLayer$() {
      var t1 = new A.OpacityLayer(C.Offset_0_0, B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), A.LayerHandle$(type$.Layer_2));
      t1.Layer$0();
      return t1;
    },
    AnnotationResult: function AnnotationResult(t0, t1) {
      this._entries = t0;
      this.$ti = t1;
    },
    Layer0: function Layer0() {
    },
    LayerHandle: function LayerHandle(t0) {
      this._layer = null;
      this.$ti = t0;
    },
    PictureLayer: function PictureLayer(t0, t1, t2) {
      var _ = this;
      _.canvasBounds = t0;
      _._picture = null;
      _._willChangeHint = _._isComplexHint = false;
      _._callbacks = t1;
      _._compositionCallbackCount = 0;
      _._parentHandle = t2;
      _._refCount = 0;
      _._layer$_parent = null;
      _._needsAddToScene = true;
      _._layer$_owner = _._engineLayer = null;
      _._layer$_depth = 0;
      _._previousSibling = _._nextSibling = null;
    },
    ContainerLayer0: function ContainerLayer0() {
    },
    OffsetLayer: function OffsetLayer(t0, t1, t2) {
      var _ = this;
      _._layer$_offset = t0;
      _._layer$_lastChild = _._firstChild = null;
      _._callbacks = t1;
      _._compositionCallbackCount = 0;
      _._parentHandle = t2;
      _._refCount = 0;
      _._layer$_parent = null;
      _._needsAddToScene = true;
      _._layer$_owner = _._engineLayer = null;
      _._layer$_depth = 0;
      _._previousSibling = _._nextSibling = null;
    },
    ClipRectLayer: function ClipRectLayer(t0, t1, t2) {
      var _ = this;
      _._layer$_clipRect = null;
      _._layer$_clipBehavior = t0;
      _._layer$_lastChild = _._firstChild = null;
      _._callbacks = t1;
      _._compositionCallbackCount = 0;
      _._parentHandle = t2;
      _._refCount = 0;
      _._layer$_parent = null;
      _._needsAddToScene = true;
      _._layer$_owner = _._engineLayer = null;
      _._layer$_depth = 0;
      _._previousSibling = _._nextSibling = null;
    },
    ClipRRectLayer: function ClipRRectLayer(t0, t1, t2) {
      var _ = this;
      _._layer$_clipRRect = null;
      _._layer$_clipBehavior = t0;
      _._layer$_lastChild = _._firstChild = null;
      _._callbacks = t1;
      _._compositionCallbackCount = 0;
      _._parentHandle = t2;
      _._refCount = 0;
      _._layer$_parent = null;
      _._needsAddToScene = true;
      _._layer$_owner = _._engineLayer = null;
      _._layer$_depth = 0;
      _._previousSibling = _._nextSibling = null;
    },
    ClipPathLayer: function ClipPathLayer(t0, t1, t2) {
      var _ = this;
      _._layer$_clipPath = null;
      _._layer$_clipBehavior = t0;
      _._layer$_lastChild = _._firstChild = null;
      _._callbacks = t1;
      _._compositionCallbackCount = 0;
      _._parentHandle = t2;
      _._refCount = 0;
      _._layer$_parent = null;
      _._needsAddToScene = true;
      _._layer$_owner = _._engineLayer = null;
      _._layer$_depth = 0;
      _._previousSibling = _._nextSibling = null;
    },
    TransformLayer: function TransformLayer(t0, t1, t2, t3) {
      var _ = this;
      _._layer$_transform = t0;
      _._invertedTransform = _._lastEffectiveTransform = null;
      _._inverseDirty = true;
      _._layer$_offset = t1;
      _._layer$_lastChild = _._firstChild = null;
      _._callbacks = t2;
      _._compositionCallbackCount = 0;
      _._parentHandle = t3;
      _._refCount = 0;
      _._layer$_parent = null;
      _._needsAddToScene = true;
      _._layer$_owner = _._engineLayer = null;
      _._layer$_depth = 0;
      _._previousSibling = _._nextSibling = null;
    },
    OpacityLayer: function OpacityLayer(t0, t1, t2) {
      var _ = this;
      _._layer$_alpha = null;
      _._layer$_offset = t0;
      _._layer$_lastChild = _._firstChild = null;
      _._callbacks = t1;
      _._compositionCallbackCount = 0;
      _._parentHandle = t2;
      _._refCount = 0;
      _._layer$_parent = null;
      _._needsAddToScene = true;
      _._layer$_owner = _._engineLayer = null;
      _._layer$_depth = 0;
      _._previousSibling = _._nextSibling = null;
    },
    _Layer_Object_DiagnosticableTreeMixin: function _Layer_Object_DiagnosticableTreeMixin() {
    },
    ParentData$() {
      return new A.ParentData();
    },
    PaintingContext$(_containerLayer, estimatedBounds) {
      return new A.PaintingContext(_containerLayer, estimatedBounds);
    },
    PaintingContext_repaintCompositedChild(child, debugAlsoPaintedParent) {
      A.PaintingContext__repaintCompositedChild(child, debugAlsoPaintedParent);
    },
    PaintingContext__repaintCompositedChild(child, debugAlsoPaintedParent) {
      var layer, childContext,
        t1 = child._layerHandle,
        childLayer = type$.nullable_OffsetLayer._as(t1.get$layer());
      if (childLayer == null) {
        layer = child.updateCompositedLayer$1$oldLayer(null);
        t1.set$layer(layer);
        childLayer = layer;
      } else {
        childLayer.removeAllChildren$0();
        child.updateCompositedLayer$1$oldLayer(childLayer);
      }
      child._needsCompositedLayerUpdate = false;
      childContext = A.PaintingContext$(childLayer, child.get$paintBounds());
      child._paintWithContext$2(childContext, C.Offset_0_0);
      childContext.stopRecordingIfNeeded$0();
    },
    PaintingContext_updateLayerProperties(child) {
      var t1 = child._layerHandle.get$layer();
      t1.toString;
      child.updateCompositedLayer$1$oldLayer(type$.OffsetLayer._as(t1));
      child._needsCompositedLayerUpdate = false;
    },
    RenderObject__withDebugActiveLayoutCleared(inner, $T) {
      return inner.call$0();
    },
    RenderObject__cleanChildRelayoutBoundary(child) {
      type$.RenderObject._as(child);
      if (!B.boolConversionCheck(J.$eq$(child._relayoutBoundary, child))) {
        child.visitChildren$1(A.object_RenderObject__cleanChildRelayoutBoundary$closure());
        child._relayoutBoundary = null;
      }
    },
    RenderObject__propagateRelayoutBoundaryToChild(child) {
      var t1, parentRelayoutBoundary;
      type$.RenderObject._as(child);
      if (B.boolConversionCheck(J.$eq$(child._relayoutBoundary, child)))
        return;
      t1 = child.get$parent();
      parentRelayoutBoundary = t1 == null ? null : t1._relayoutBoundary;
      parentRelayoutBoundary.toString;
      child._setRelayoutBoundary$1(parentRelayoutBoundary);
    },
    _ContainerSemanticsFragment$(dropsSemanticsOfPreviousSiblings, siblingMergeGroups) {
      return new A._ContainerSemanticsFragment(siblingMergeGroups, B._setArrayType([], type$.JSArray__InterestingSemanticsFragment), dropsSemanticsOfPreviousSiblings);
    },
    _RootSemanticsFragment$(dropsSemanticsOfPreviousSiblings, owner) {
      return new A._RootSemanticsFragment(B._setArrayType([], type$.JSArray__InterestingSemanticsFragment), B._setArrayType([owner], type$.JSArray_RenderObject), dropsSemanticsOfPreviousSiblings);
    },
    _IncompleteSemanticsFragment$(config, owner) {
      return new A._IncompleteSemanticsFragment(config, B._setArrayType([owner], type$.JSArray_RenderObject), false);
    },
    _SwitchableSemanticsFragment$(blockUserActions, config, dropsSemanticsOfPreviousSiblings, mergeIntoParent, owner, siblingMergeGroups) {
      var t1 = new A._SwitchableSemanticsFragment(mergeIntoParent, config, siblingMergeGroups, B._setArrayType([], type$.JSArray__InterestingSemanticsFragment), B._setArrayType([owner], type$.JSArray_RenderObject), dropsSemanticsOfPreviousSiblings);
      t1._SwitchableSemanticsFragment$6$blockUserActions$config$dropsSemanticsOfPreviousSiblings$mergeIntoParent$owner$siblingMergeGroups(blockUserActions, config, dropsSemanticsOfPreviousSiblings, mergeIntoParent, owner, siblingMergeGroups);
      return t1;
    },
    _SemanticsGeometry$(ancestors, parentPaintClipRect, parentSemanticsClipRect) {
      var t1 = new A._SemanticsGeometry();
      t1._SemanticsGeometry$3$ancestors$parentPaintClipRect$parentSemanticsClipRect(ancestors, parentPaintClipRect, parentSemanticsClipRect);
      return t1;
    },
    _SemanticsGeometry__transformRect(rect, transform) {
      if (rect == null)
        return null;
      if (B.boolConversionCheck(rect.get$isEmpty(0)) || B.boolConversionCheck(transform.isZero$0()))
        return C.Rect_0_0_0_0;
      return A.MatrixUtils_inverseTransformRect(transform, rect);
    },
    _SemanticsGeometry__applyIntermediatePaintTransforms(parentFragmentOwner, childFragmentOwner, transform) {
      var to, from, parentToCommonAncestorTransform, fromDepth, toDepth, t1, t2;
      for (to = parentFragmentOwner, from = childFragmentOwner, parentToCommonAncestorTransform = null; from !== to;) {
        fromDepth = from.get$depth();
        toDepth = to.get$depth();
        if (fromDepth >= toDepth) {
          t1 = from.get$parent();
          t1.toString;
          t1.applyPaintTransform$2(from, transform);
          from = t1;
        }
        if (fromDepth <= toDepth) {
          t1 = to.get$parent();
          t1.toString;
          if (parentToCommonAncestorTransform == null) {
            parentToCommonAncestorTransform = A.Matrix4_Matrix4$identity();
            t2 = parentToCommonAncestorTransform;
          } else
            t2 = parentToCommonAncestorTransform;
          t1.applyPaintTransform$2(to, t2);
          to = t1;
        }
      }
      if (parentToCommonAncestorTransform != null)
        if (!B.boolConversionCheck(J.$eq$(parentToCommonAncestorTransform.invert$0(), 0)))
          transform.multiply$1(parentToCommonAncestorTransform);
        else
          transform.setZero$0();
    },
    _SemanticsGeometry__intersectRects(a, b) {
      var t1;
      if (b == null)
        return a;
      t1 = a == null ? null : a.intersect$1(b);
      return t1 == null ? b : t1;
    },
    DiagnosticsDebugCreator$(value) {
      var _null = null;
      return new A.DiagnosticsDebugCreator(_null, true, _null, _null, _null, false, value, C.C__NoDefaultValue, C.DiagnosticLevel_0, "debugCreator", true, true, _null, C.DiagnosticsTreeStyle_8);
    },
    ParentData: function ParentData() {
    },
    PaintingContext: function PaintingContext(t0, t1) {
      var _ = this;
      _._containerLayer = t0;
      _.estimatedBounds = t1;
      _._canvas = _._recorder = _._currentLayer = null;
    },
    PaintingContext_pushClipRect_closure: function PaintingContext_pushClipRect_closure(t0, t1, t2) {
      this.$this = t0;
      this.painter = t1;
      this.offset = t2;
    },
    PaintingContext_pushClipRRect_closure: function PaintingContext_pushClipRRect_closure(t0, t1, t2) {
      this.$this = t0;
      this.painter = t1;
      this.offset = t2;
    },
    PaintingContext_pushClipPath_closure: function PaintingContext_pushClipPath_closure(t0, t1, t2) {
      this.$this = t0;
      this.painter = t1;
      this.offset = t2;
    },
    Constraints: function Constraints() {
    },
    RenderObject: function RenderObject() {
    },
    RenderObject__reportException_closure: function RenderObject__reportException_closure(t0) {
      this.$this = t0;
    },
    RenderObject__updateCompositingBits_closure: function RenderObject__updateCompositingBits_closure(t0) {
      this.$this = t0;
    },
    RenderObject_clearSemantics_closure: function RenderObject_clearSemantics_closure() {
    },
    RenderObject__getSemanticsForParent_closure: function RenderObject__getSemanticsForParent_closure(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.childrenMergeIntoParent = t2;
      _.blockChildInteractions = t3;
      _.childConfigurations = t4;
      _.mergeUpFragments = t5;
      _.siblingMergeFragmentGroups = t6;
      _.config = t7;
      _.hasTags = t8;
      _.childConfigurationsDelegate = t9;
      _.configToFragment = t10;
    },
    RenderObject__getSemanticsForParent_closure0: function RenderObject__getSemanticsForParent_closure0(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.configToFragment = t2;
    },
    RenderObject__getSemanticsForParent_closure1: function RenderObject__getSemanticsForParent_closure1(t0, t1) {
      this.$this = t0;
      this.configToFragment = t1;
    },
    RenderObject_toStringDeep_closure: function RenderObject_toStringDeep_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.prefixLineOne = t1;
      _.prefixOtherLines = t2;
      _.minLevel = t3;
    },
    RenderObjectWithChildMixin: function RenderObjectWithChildMixin() {
    },
    _SemanticsFragment: function _SemanticsFragment() {
    },
    _ContainerSemanticsFragment: function _ContainerSemanticsFragment(t0, t1, t2) {
      this.siblingMergeGroups = t0;
      this.mergeUpFragments = t1;
      this.dropsSemanticsOfPreviousSiblings = t2;
    },
    _InterestingSemanticsFragment: function _InterestingSemanticsFragment() {
    },
    _RootSemanticsFragment: function _RootSemanticsFragment(t0, t1, t2) {
      var _ = this;
      _._object$_children = t0;
      _._ancestorChain = t1;
      _._object$_tagsForChildren = null;
      _.dropsSemanticsOfPreviousSiblings = t2;
    },
    _IncompleteSemanticsFragment: function _IncompleteSemanticsFragment(t0, t1, t2) {
      var _ = this;
      _.config = t0;
      _._ancestorChain = t1;
      _._object$_tagsForChildren = null;
      _.dropsSemanticsOfPreviousSiblings = t2;
    },
    _SwitchableSemanticsFragment: function _SwitchableSemanticsFragment(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._mergeIntoParent = t0;
      _._config = t1;
      _._mergesToSibling = _._isConfigWritable = false;
      _._siblingMergeGroups = t2;
      _._object$_children = t3;
      _._isExplicit = false;
      _._ancestorChain = t4;
      _._object$_tagsForChildren = null;
      _.dropsSemanticsOfPreviousSiblings = t5;
    },
    _SemanticsGeometry: function _SemanticsGeometry() {
      var _ = this;
      _._semanticsClipRect = _._paintClipRect = null;
      _.___SemanticsGeometry__rect_A = _.___SemanticsGeometry__transform_A = $;
      _._markAsHidden = false;
    },
    DiagnosticsDebugCreator: function DiagnosticsDebugCreator(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _._description = t0;
      _.allowWrap = t1;
      _.ifNull = t2;
      _.ifEmpty = t3;
      _.tooltip = t4;
      _.missingIfNull = t5;
      _._diagnostics$_value = t6;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t7;
      _._defaultLevel = t8;
      _.name = t9;
      _.showSeparator = t10;
      _.showName = t11;
      _.linePrefix = t12;
      _.style = t13;
    },
    _RenderObject_Object_DiagnosticableTreeMixin: function _RenderObject_Object_DiagnosticableTreeMixin() {
    },
    RenderConstrainedBox$(additionalConstraints) {
      var t1 = new A.RenderConstrainedBox(additionalConstraints, null, A._LayoutCacheStorage$(), A.LayerHandle$(type$.ContainerLayer_2));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    RenderSemanticsAnnotations$(blockUserActions, container, excludeSemantics, explicitChildNodes, properties, textDirection) {
      var t1 = new A.RenderSemanticsAnnotations(properties, container, explicitChildNodes, excludeSemantics, blockUserActions, textDirection, null, A._LayoutCacheStorage$(), A.LayerHandle$(type$.ContainerLayer_2));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      t1.RenderSemanticsAnnotations$7$blockUserActions$child$container$excludeSemantics$explicitChildNodes$properties$textDirection(blockUserActions, null, container, excludeSemantics, explicitChildNodes, properties, textDirection);
      return t1;
    },
    RenderProxyBox: function RenderProxyBox() {
    },
    RenderProxyBoxMixin: function RenderProxyBoxMixin() {
    },
    RenderConstrainedBox: function RenderConstrainedBox(t0, t1, t2, t3) {
      var _ = this;
      _._proxy_box$_additionalConstraints = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._layoutCacheStorage = t2;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderSemanticsAnnotations: function RenderSemanticsAnnotations(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._proxy_box$_properties = t0;
      _._container = t1;
      _._explicitChildNodes = t2;
      _._excludeSemantics = t3;
      _._blockUserActions = t4;
      _._proxy_box$_attributedHint = _._proxy_box$_attributedDecreasedValue = _._proxy_box$_attributedIncreasedValue = _._proxy_box$_attributedValue = _._proxy_box$_attributedLabel = null;
      _._proxy_box$_textDirection = t5;
      _.RenderObjectWithChildMixin__child = t6;
      _._layoutCacheStorage = t7;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t8;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    _RenderProxyBox_RenderBox_RenderObjectWithChildMixin: function _RenderProxyBox_RenderBox_RenderObjectWithChildMixin() {
    },
    _RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin: function _RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin() {
    },
    SchedulerBinding_instance() {
      return A.BindingBase_checkInstance($.SchedulerBinding__instance, type$.SchedulerBinding);
    },
    SchedulerPhase: function SchedulerPhase(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    CustomSemanticsAction$overridingAction(action, hint) {
      return new A.CustomSemanticsAction(hint, action);
    },
    CustomSemanticsAction_getIdentifier(action) {
      var t1 = J.getInterceptor$asx($.CustomSemanticsAction__ids),
        result = t1.$index($.CustomSemanticsAction__ids, action);
      if (result == null) {
        result = $.CustomSemanticsAction__nextId;
        if (typeof result !== "number")
          return result.$add();
        $.CustomSemanticsAction__nextId = result + 1;
        t1.$indexSet($.CustomSemanticsAction__ids, action, result);
        J.$indexSet$ax($.CustomSemanticsAction__actions, result, action);
      }
      return result;
    },
    CustomSemanticsAction_getAction(id) {
      return J.$index$asx($.CustomSemanticsAction__actions, id);
    },
    AttributedString$(string, attributes) {
      return new A.AttributedString(string, attributes);
    },
    AttributedStringProperty$($name, value, defaultValue) {
      var _null = null;
      return new A.AttributedStringProperty(_null, true, _null, _null, _null, false, value, defaultValue, C.DiagnosticLevel_3, $name, true, true, _null, C.DiagnosticsTreeStyle_8);
    },
    SemanticsData$(actions, attributedDecreasedValue, attributedHint, attributedIncreasedValue, attributedLabel, attributedValue, currentValueLength, customSemanticsActionIds, elevation, flags, headingLevel, identifier, maxValueLength, platformViewId, rect, scrollChildCount, scrollExtentMax, scrollExtentMin, scrollIndex, scrollPosition, tags, textDirection, textSelection, thickness, tooltip, transform) {
      return new A.SemanticsData(flags, actions, identifier, attributedLabel, attributedValue, attributedIncreasedValue, attributedDecreasedValue, attributedHint, tooltip, headingLevel, textDirection, textSelection, scrollChildCount, scrollIndex, scrollPosition, scrollExtentMax, scrollExtentMin, platformViewId, maxValueLength, currentValueLength, rect, tags, transform, elevation, thickness, customSemanticsActionIds);
    },
    SemanticsData__sortedListsEqual(left, right) {
      var t2, i, t3,
        t1 = left == null;
      if (t1 && right == null)
        return true;
      if (!t1 && right != null) {
        t1 = J.getInterceptor$asx(left);
        t2 = J.getInterceptor$asx(right);
        if (!B.boolConversionCheck(J.$eq$(t1.get$length(left), t2.get$length(right))))
          return false;
        i = 0;
        while (true) {
          t3 = t1.get$length(left);
          if (typeof t3 !== "number")
            return B.iae(t3);
          if (!(i < t3))
            break;
          if (!B.boolConversionCheck(J.$eq$(t1.$index(left, i), t2.$index(right, i))))
            return false;
          ++i;
        }
        return true;
      }
      return false;
    },
    _SemanticsDiagnosticableNode$(childOrder, $name, style, value) {
      return new A._SemanticsDiagnosticableNode(childOrder, value, $name, true, true, null, style);
    },
    SemanticsHintOverrides$(onLongPressHint, onTapHint) {
      return new A.SemanticsHintOverrides(onTapHint, onLongPressHint);
    },
    SemanticsProperties$(attributedDecreasedValue, attributedHint, attributedIncreasedValue, attributedLabel, attributedValue, button, checked, currentValueLength, customSemanticsActions, decreasedValue, enabled, expanded, focusable, focused, header, headingLevel, hidden, hint, hintOverrides, identifier, image, inMutuallyExclusiveGroup, increasedValue, keyboardKey, label, link, liveRegion, maxValueLength, mixed, multiline, namesRoute, obscured, onCopy, onCut, onDecrease, onDidGainAccessibilityFocus, onDidLoseAccessibilityFocus, onDismiss, onFocus, onIncrease, onLongPress, onMoveCursorBackwardByCharacter, onMoveCursorForwardByCharacter, onPaste, onScrollDown, onScrollLeft, onScrollRight, onScrollUp, onSetSelection, onSetText, onTap, readOnly, scopesRoute, selected, slider, sortKey, tagForChildren, textDirection, textField, toggled, tooltip, value) {
      return new A.SemanticsProperties(enabled, checked, mixed, expanded, toggled, selected, button, link, header, textField, slider, keyboardKey, readOnly, focusable, focused, inMutuallyExclusiveGroup, hidden, obscured, multiline, scopesRoute, namesRoute, image, liveRegion, maxValueLength, currentValueLength, identifier, label, attributedLabel, value, attributedValue, increasedValue, attributedIncreasedValue, decreasedValue, attributedDecreasedValue, hint, attributedHint, tooltip, headingLevel, hintOverrides, textDirection, sortKey, tagForChildren, onTap, onLongPress, onScrollLeft, onScrollRight, onScrollUp, onScrollDown, onIncrease, onDecrease, onCopy, onCut, onPaste, onMoveCursorForwardByCharacter, onMoveCursorBackwardByCharacter, onSetSelection, onSetText, onDidGainAccessibilityFocus, onDidLoseAccessibilityFocus, onFocus, onDismiss, customSemanticsActions);
    },
    SemanticsNode$(key, showOnScreen) {
      var t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16,
        t1 = $.$get$SemanticsNode__kEmptyConfig(),
        t2 = t1.get$isMergingSemanticsOfDescendants();
      B.createSentinel(type$.List_SemanticsNode);
      t3 = t1._actions;
      t4 = t1._customSemanticsActions;
      t5 = t1._actionsAsBits;
      t6 = t1._flags;
      t7 = t1.get$identifier();
      t8 = t1.get$attributedLabel();
      t9 = t1.get$attributedValue();
      t10 = t1.get$attributedIncreasedValue();
      t11 = t1.get$attributedDecreasedValue();
      t12 = t1.get$attributedHint();
      t13 = t1.get$tooltip();
      t14 = t1.get$elevation();
      t15 = t1.get$thickness();
      t16 = t1.get$textDirection();
      t1 = t1._headingLevel;
      return new A.SemanticsNode(key, A.SemanticsNode__generateNewId(), showOnScreen, C.Rect_0_0_0_0, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t1);
    },
    SemanticsNode$root(owner, showOnScreen) {
      var t1 = $.$get$SemanticsNode__kEmptyConfig(),
        t2 = t1.get$isMergingSemanticsOfDescendants();
      B.createSentinel(type$.List_SemanticsNode);
      t1 = new A.SemanticsNode(null, 0, showOnScreen, C.Rect_0_0_0_0, t2, t1._actions, t1._customSemanticsActions, t1._actionsAsBits, t1._flags, t1.get$identifier(), t1.get$attributedLabel(), t1.get$attributedValue(), t1.get$attributedIncreasedValue(), t1.get$attributedDecreasedValue(), t1.get$attributedHint(), t1.get$tooltip(), t1.get$elevation(), t1.get$thickness(), t1.get$textDirection(), t1._headingLevel);
      t1.SemanticsNode$root$3$key$owner$showOnScreen(null, owner, showOnScreen);
      return t1;
    },
    SemanticsNode__generateNewId() {
      var t1 = $.SemanticsNode__lastIdentifier;
      if (typeof t1 !== "number")
        return t1.$add();
      return $.SemanticsNode__lastIdentifier = D.JSNumber_methods.$mod(t1 + 1, 65535);
    },
    SemanticsNode__initIdentityTransform() {
      return A.Matrix4_Matrix4$identity().get$storage();
    },
    _BoxEdge$(isLeadingEdge, node, offset) {
      return new A._BoxEdge(isLeadingEdge, offset, node);
    },
    _SemanticsSortGroup$(startOffset, textDirection) {
      return new A._SemanticsSortGroup(startOffset, textDirection, B._setArrayType([], type$.JSArray_SemanticsNode));
    },
    _pointInParentCoordinates(node, point) {
      var vector;
      if (node.get$transform() == null)
        return point;
      vector = A.Vector3_Vector3(point.get$dx(), point.get$dy(), 0);
      node.get$transform().transform3$1(vector);
      return A.Offset$(vector.get$x(), vector.get$y());
    },
    _childrenInDefaultOrder(children, textDirection) {
      var t1, t2, childRect, verticalGroups, group, depth,
        edges = B._setArrayType([], type$.JSArray__BoxEdge);
      for (t1 = J.get$iterator$ax(children); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        childRect = t2.get$rect().deflate$1(0.1);
        D.JSArray_methods.add$1(edges, A._BoxEdge$(true, t2, A._pointInParentCoordinates(t2, childRect.get$topLeft()).get$dy()));
        D.JSArray_methods.add$1(edges, A._BoxEdge$(false, t2, A._pointInParentCoordinates(t2, childRect.get$bottomRight()).get$dy()));
      }
      D.JSArray_methods.sort$0(edges);
      verticalGroups = B._setArrayType([], type$.JSArray__SemanticsSortGroup);
      for (t1 = D.JSArray_methods.get$iterator(edges), group = null, depth = 0; B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        if (B.boolConversionCheck(t2.isLeadingEdge)) {
          ++depth;
          if (group == null)
            group = A._SemanticsSortGroup$(t2.offset, textDirection);
          J.add$1$ax(group.nodes, t2.node);
        } else
          --depth;
        if (depth === 0) {
          group.toString;
          D.JSArray_methods.add$1(verticalGroups, group);
          group = null;
        }
      }
      D.JSArray_methods.sort$0(verticalGroups);
      return J.toList$0$ax(D.JSArray_methods.expand$1$1(verticalGroups, new A._childrenInDefaultOrder_closure(), type$.SemanticsNode));
    },
    _TraversalSortNode$(node, position, sortKey) {
      return new A._TraversalSortNode(node, sortKey, position);
    },
    SemanticsConfiguration$() {
      return new A.SemanticsConfiguration(B.LinkedHashMap_LinkedHashMap$_empty(type$.SemanticsAction, type$.void_Function_nullable_Object), B.LinkedHashMap_LinkedHashMap$_empty(type$.CustomSemanticsAction, type$.void_Function), A.AttributedString$("", C.List_empty2), A.AttributedString$("", C.List_empty2), A.AttributedString$("", C.List_empty2), A.AttributedString$("", C.List_empty2), A.AttributedString$("", C.List_empty2));
    },
    _concatAttributedString(otherAttributedString, otherTextDirection, thisAttributedString, thisTextDirection) {
      var t1;
      if (B.boolConversionCheck(J.get$isEmpty$asx(otherAttributedString.string)))
        return thisAttributedString;
      if (thisTextDirection != otherTextDirection && otherTextDirection != null) {
        switch (otherTextDirection.index) {
          case 0:
            t1 = A.AttributedString$("\u202b", C.List_empty2);
            break;
          case 1:
            t1 = A.AttributedString$("\u202a", C.List_empty2);
            break;
          default:
            t1 = null;
        }
        otherAttributedString = J.$add$ansx(t1.$add(0, otherAttributedString), A.AttributedString$("\u202c", C.List_empty2));
      }
      if (B.boolConversionCheck(J.get$isEmpty$asx(thisAttributedString.string)))
        return otherAttributedString;
      return J.$add$ansx(thisAttributedString.$add(0, A.AttributedString$("\n", C.List_empty2)), otherAttributedString);
    },
    CustomSemanticsAction: function CustomSemanticsAction(t0, t1) {
      this.hint = t0;
      this.action = t1;
    },
    AttributedString: function AttributedString(t0, t1) {
      this.string = t0;
      this.attributes = t1;
    },
    AttributedStringProperty: function AttributedStringProperty(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _._description = t0;
      _.allowWrap = t1;
      _.ifNull = t2;
      _.ifEmpty = t3;
      _.tooltip = t4;
      _.missingIfNull = t5;
      _._diagnostics$_value = t6;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t7;
      _._defaultLevel = t8;
      _.name = t9;
      _.showSeparator = t10;
      _.showName = t11;
      _.linePrefix = t12;
      _.style = t13;
    },
    SemanticsData: function SemanticsData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25) {
      var _ = this;
      _.flags = t0;
      _.actions = t1;
      _.identifier = t2;
      _.attributedLabel = t3;
      _.attributedValue = t4;
      _.attributedIncreasedValue = t5;
      _.attributedDecreasedValue = t6;
      _.attributedHint = t7;
      _.tooltip = t8;
      _.headingLevel = t9;
      _.textDirection = t10;
      _.textSelection = t11;
      _.scrollChildCount = t12;
      _.scrollIndex = t13;
      _.scrollPosition = t14;
      _.scrollExtentMax = t15;
      _.scrollExtentMin = t16;
      _.platformViewId = t17;
      _.maxValueLength = t18;
      _.currentValueLength = t19;
      _.rect = t20;
      _.tags = t21;
      _.transform = t22;
      _.elevation = t23;
      _.thickness = t24;
      _.customSemanticsActionIds = t25;
    },
    SemanticsData_debugFillProperties_closure: function SemanticsData_debugFillProperties_closure() {
    },
    _SemanticsDiagnosticableNode: function _SemanticsDiagnosticableNode(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.childOrder = t0;
      _.value = t1;
      _.name = t2;
      _.showSeparator = t3;
      _.showName = t4;
      _.linePrefix = t5;
      _.style = t6;
    },
    SemanticsHintOverrides: function SemanticsHintOverrides(t0, t1) {
      this.onTapHint = t0;
      this.onLongPressHint = t1;
    },
    SemanticsProperties: function SemanticsProperties(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61) {
      var _ = this;
      _.enabled = t0;
      _.checked = t1;
      _.mixed = t2;
      _.expanded = t3;
      _.toggled = t4;
      _.selected = t5;
      _.button = t6;
      _.link = t7;
      _.header = t8;
      _.textField = t9;
      _.slider = t10;
      _.keyboardKey = t11;
      _.readOnly = t12;
      _.focusable = t13;
      _.focused = t14;
      _.inMutuallyExclusiveGroup = t15;
      _.hidden = t16;
      _.obscured = t17;
      _.multiline = t18;
      _.scopesRoute = t19;
      _.namesRoute = t20;
      _.image = t21;
      _.liveRegion = t22;
      _.maxValueLength = t23;
      _.currentValueLength = t24;
      _.identifier = t25;
      _.label = t26;
      _.attributedLabel = t27;
      _.value = t28;
      _.attributedValue = t29;
      _.increasedValue = t30;
      _.attributedIncreasedValue = t31;
      _.decreasedValue = t32;
      _.attributedDecreasedValue = t33;
      _.hint = t34;
      _.attributedHint = t35;
      _.tooltip = t36;
      _.headingLevel = t37;
      _.hintOverrides = t38;
      _.textDirection = t39;
      _.sortKey = t40;
      _.tagForChildren = t41;
      _.onTap = t42;
      _.onLongPress = t43;
      _.onScrollLeft = t44;
      _.onScrollRight = t45;
      _.onScrollUp = t46;
      _.onScrollDown = t47;
      _.onIncrease = t48;
      _.onDecrease = t49;
      _.onCopy = t50;
      _.onCut = t51;
      _.onPaste = t52;
      _.onMoveCursorForwardByCharacter = t53;
      _.onMoveCursorBackwardByCharacter = t54;
      _.onSetSelection = t55;
      _.onSetText = t56;
      _.onDidGainAccessibilityFocus = t57;
      _.onDidLoseAccessibilityFocus = t58;
      _.onFocus = t59;
      _.onDismiss = t60;
      _.customSemanticsActions = t61;
    },
    SemanticsNode: function SemanticsNode(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19) {
      var _ = this;
      _.key = t0;
      _._id = t1;
      _._showOnScreen = t2;
      _._semantics$_transform = null;
      _._semantics$_rect = t3;
      _.indexInParent = _.elevationAdjustment = _.parentPaintClipRect = _.parentSemanticsClipRect = null;
      _._areUserActionsBlocked = _._isMergedIntoParent = false;
      _._mergeAllDescendantsIntoThisNode = t4;
      _._semantics$_children = null;
      _._dead = false;
      _._semantics$_parent = _._semantics$_owner = null;
      _._semantics$_depth = 0;
      _._semantics$_dirty = false;
      _._actions = t5;
      _._customSemanticsActions = t6;
      _._actionsAsBits = t7;
      _.tags = null;
      _._flags = t8;
      _._identifier = t9;
      _._attributedLabel = t10;
      _._attributedValue = t11;
      _._attributedIncreasedValue = t12;
      _._attributedDecreasedValue = t13;
      _._attributedHint = t14;
      _._tooltip = t15;
      _._elevation = t16;
      _._thickness = t17;
      _._hintOverrides = null;
      _._textDirection = t18;
      _._currentValueLength = _._maxValueLength = _._platformViewId = _._scrollExtentMin = _._scrollExtentMax = _._scrollPosition = _._scrollIndex = _._scrollChildCount = _._textSelection = _._sortKey = null;
      _._headingLevel = t19;
    },
    SemanticsNode_getSemanticsData_closure: function SemanticsNode_getSemanticsData_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.customSemanticsActionIds = t2;
    },
    SemanticsNode__childrenInTraversalOrder_closure: function SemanticsNode__childrenInTraversalOrder_closure() {
    },
    SemanticsNode_debugFillProperties_closure: function SemanticsNode_debugFillProperties_closure() {
    },
    SemanticsNode_debugFillProperties_closure0: function SemanticsNode_debugFillProperties_closure0() {
    },
    SemanticsNode_debugFillProperties_closure1: function SemanticsNode_debugFillProperties_closure1(t0) {
      this.$this = t0;
    },
    SemanticsNode_debugFillProperties_closure2: function SemanticsNode_debugFillProperties_closure2() {
    },
    SemanticsNode_debugFillProperties_closure3: function SemanticsNode_debugFillProperties_closure3(t0) {
      this.$this = t0;
    },
    SemanticsNode_debugFillProperties_closure4: function SemanticsNode_debugFillProperties_closure4() {
    },
    SemanticsNode_debugDescribeChildren_closure: function SemanticsNode_debugDescribeChildren_closure(t0) {
      this.childOrder = t0;
    },
    _BoxEdge: function _BoxEdge(t0, t1, t2) {
      this.isLeadingEdge = t0;
      this.offset = t1;
      this.node = t2;
    },
    _SemanticsSortGroup: function _SemanticsSortGroup(t0, t1, t2) {
      this.startOffset = t0;
      this.textDirection = t1;
      this.nodes = t2;
    },
    _SemanticsSortGroup_sortedWithinVerticalGroup_closure: function _SemanticsSortGroup_sortedWithinVerticalGroup_closure() {
    },
    _SemanticsSortGroup_sortedWithinKnot_closure: function _SemanticsSortGroup_sortedWithinKnot_closure() {
    },
    _SemanticsSortGroup_sortedWithinKnot_search: function _SemanticsSortGroup_sortedWithinKnot_search(t0, t1, t2) {
      this.visitedIds = t0;
      this.edges = t1;
      this.sortedIds = t2;
    },
    _SemanticsSortGroup_sortedWithinKnot_closure0: function _SemanticsSortGroup_sortedWithinKnot_closure0() {
    },
    _SemanticsSortGroup_sortedWithinKnot_closure1: function _SemanticsSortGroup_sortedWithinKnot_closure1(t0) {
      this.nodeMap = t0;
    },
    _childrenInDefaultOrder_closure: function _childrenInDefaultOrder_closure() {
    },
    _TraversalSortNode: function _TraversalSortNode(t0, t1, t2) {
      this.node = t0;
      this.sortKey = t1;
      this.position = t2;
    },
    SemanticsConfiguration: function SemanticsConfiguration(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._hasBeenAnnotated = _.isBlockingSemanticsOfPreviouslyPaintedNodes = _.explicitChildNodes = _.isBlockingUserActions = _._isSemanticBoundary = false;
      _._actions = t0;
      _._actionsAsBits = 0;
      _._currentValueLength = _._maxValueLength = _._platformViewId = _._scrollIndex = _._scrollChildCount = _._indexInParent = _._sortKey = _._childConfigurationsDelegate = null;
      _._isMergingSemanticsOfDescendants = false;
      _._customSemanticsActions = t1;
      _._identifier = "";
      _._attributedLabel = t2;
      _._attributedValue = t3;
      _._attributedIncreasedValue = t4;
      _._attributedDecreasedValue = t5;
      _._attributedHint = t6;
      _._tooltip = "";
      _._hintOverrides = null;
      _._thickness = _._elevation = 0;
      _._textDirection = null;
      _._headingLevel = 0;
      _._tagsForChildren = _._scrollExtentMin = _._scrollExtentMax = _._scrollPosition = _._textSelection = null;
      _._flags = 0;
    },
    SemanticsConfiguration__addArgumentlessAction_closure: function SemanticsConfiguration__addArgumentlessAction_closure(t0) {
      this.handler = t0;
    },
    SemanticsConfiguration_onMoveCursorForwardByCharacter_closure: function SemanticsConfiguration_onMoveCursorForwardByCharacter_closure(t0) {
      this.value = t0;
    },
    SemanticsConfiguration_onMoveCursorBackwardByCharacter_closure: function SemanticsConfiguration_onMoveCursorBackwardByCharacter_closure(t0) {
      this.value = t0;
    },
    SemanticsConfiguration_onSetSelection_closure: function SemanticsConfiguration_onSetSelection_closure(t0) {
      this.value = t0;
    },
    SemanticsConfiguration_onSetText_closure: function SemanticsConfiguration_onSetText_closure(t0) {
      this.value = t0;
    },
    SemanticsConfiguration_absorb_closure: function SemanticsConfiguration_absorb_closure(t0) {
      this.$this = t0;
    },
    DebugSemanticsDumpOrder: function DebugSemanticsDumpOrder(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _SemanticsData_Object_Diagnosticable: function _SemanticsData_Object_Diagnosticable() {
    },
    _SemanticsNode_Object_DiagnosticableTreeMixin: function _SemanticsNode_Object_DiagnosticableTreeMixin() {
    },
    PlatformAssetBundle$() {
      var t1 = type$.String,
        t2 = type$.Future_dynamic;
      return new A.PlatformAssetBundle(B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Future_String), B.LinkedHashMap_LinkedHashMap$_empty(t1, t2), B.LinkedHashMap_LinkedHashMap$_empty(t1, t2));
    },
    _initRootBundle() {
      return A.PlatformAssetBundle$();
    },
    _errorSummaryWithKey(key) {
      return A.ErrorSummary$('Unable to load asset: "' + key + '".');
    },
    AssetBundle: function AssetBundle() {
    },
    CachingAssetBundle: function CachingAssetBundle() {
    },
    CachingAssetBundle_loadString_closure: function CachingAssetBundle_loadString_closure(t0, t1) {
      this.$this = t0;
      this.key = t1;
    },
    PlatformAssetBundle: function PlatformAssetBundle(t0, t1, t2) {
      this._stringCache = t0;
      this._structuredDataCache = t1;
      this._structuredBinaryDataCache = t2;
    },
    PlatformAssetBundle_load_closure: function PlatformAssetBundle_load_closure(t0) {
      this.key = t0;
    },
    KeyboardLockMode: function KeyboardLockMode(t0, t1, t2) {
      this.logicalKey = t0;
      this.index = t1;
      this._core$_name = t2;
    },
    LogicalKeyboardKey__nonValueBits(n) {
      var t1 = D.JSNumber_methods.floor$0(n / 4294967296);
      if (typeof t1 !== "number")
        return t1.$and();
      return t1 & 1048575;
    },
    LogicalKeyboardKey__unicodeKeyLabel(keyId) {
      if (B.boolConversionCheck(J.$eq$(A.LogicalKeyboardKey__nonValueBits(keyId), 0)))
        return J.toUpperCase$0$s(B.String_String$fromCharCode(keyId));
      return null;
    },
    KeyboardKey: function KeyboardKey() {
    },
    LogicalKeyboardKey: function LogicalKeyboardKey(t0) {
      this.keyId = t0;
    },
    _KeyboardKey_Object_Diagnosticable: function _KeyboardKey_Object_Diagnosticable() {
    },
    MethodCall$(method, $arguments) {
      return new A.MethodCall(method, $arguments);
    },
    PlatformException$(code, details, message, stacktrace) {
      return new A.PlatformException(code, message, details, stacktrace);
    },
    MissingPluginException$(message) {
      return new A.MissingPluginException(message);
    },
    MethodCall: function MethodCall(t0, t1) {
      this.method = t0;
      this.$arguments = t1;
    },
    PlatformException: function PlatformException(t0, t1, t2, t3) {
      var _ = this;
      _.code = t0;
      _.message = t1;
      _.details = t2;
      _.stacktrace = t3;
    },
    MissingPluginException: function MissingPluginException(t0) {
      this.message = t0;
    },
    StringCodec0: function StringCodec0() {
    },
    JSONMessageCodec0: function JSONMessageCodec0() {
    },
    JSONMethodCodec0: function JSONMethodCodec0() {
    },
    StandardMessageCodec0: function StandardMessageCodec0() {
    },
    StandardMessageCodec_writeValue_closure: function StandardMessageCodec_writeValue_closure(t0, t1) {
      this.$this = t0;
      this.buffer = t1;
    },
    StandardMethodCodec0: function StandardMethodCodec0() {
    },
    _SystemMouseCursorSession$(cursor, device) {
      return new A._SystemMouseCursorSession(cursor, device);
    },
    MouseCursorSession: function MouseCursorSession() {
    },
    MouseCursor0: function MouseCursor0() {
    },
    _DeferringMouseCursor: function _DeferringMouseCursor() {
    },
    _SystemMouseCursorSession: function _SystemMouseCursorSession(t0, t1) {
      this.cursor = t0;
      this.device = t1;
    },
    SystemMouseCursor: function SystemMouseCursor(t0) {
      this.kind = t0;
    },
    _MouseCursor_Object_Diagnosticable: function _MouseCursor_Object_Diagnosticable() {
    },
    shouldProfilePlatformChannels() {
      var t1 = B.boolConversionCheck($.debugProfilePlatformChannels);
      return t1;
    },
    _ProfiledBinaryMessenger$(proxy, channelTypeName, codecTypeName) {
      return new A._ProfiledBinaryMessenger(proxy, channelTypeName, codecTypeName);
    },
    _PlatformChannelStats$(channel, codec, type) {
      return new A._PlatformChannelStats(channel, codec, type);
    },
    _debugLaunchProfilePlatformChannels() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        log, allStats, t1, t2;
      var $async$_debugLaunchProfilePlatformChannels = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = !B.boolConversionCheck($._profilePlatformChannelsIsRunning) ? 2 : 3;
              break;
            case 2:
              // then
              $._profilePlatformChannelsIsRunning = true;
              $async$goto = 4;
              return B._asyncAwait(A.Future_Future$delayed(C.Duration_1000000, null, type$.dynamic), $async$_debugLaunchProfilePlatformChannels);
            case 4:
              // returning from await.
              $._profilePlatformChannelsIsRunning = false;
              log = B.StringBuffer$("");
              log.writeln$1("Platform Channel Stats:");
              allStats = J.toList$0$ax($._profilePlatformChannelsStats.get$values());
              t1 = J.getInterceptor$ax(allStats);
              t1.sort$1(allStats, new A._debugLaunchProfilePlatformChannels_closure());
              for (t1 = t1.get$iterator(allStats); B.boolConversionCheck(t1.moveNext$0());) {
                t2 = t1.get$current();
                log.writeln$1('  (name:"' + B.S(t2.channel) + '" type:"' + B.S(t2.type) + '" codec:"' + B.S(t2.codec) + '" upBytes:' + B.S(t2.get$upBytes()) + " upBytes_avg:" + B.S(J.toStringAsFixed$1$n(t2.get$averageUpPayload(), 1)) + " downBytes:" + B.S(t2.get$downBytes()) + " downBytes_avg:" + B.S(J.toStringAsFixed$1$n(t2.get$averageDownPayload(), 1)) + ")");
              }
              A.print__debugPrintThrottled$closure().call$1(log.toString$0(0));
              J.clear$0$ax($._profilePlatformChannelsStats);
            case 3:
              // join
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$_debugLaunchProfilePlatformChannels, $async$completer);
    },
    _debugRecordUpStream(channelTypeName, $name, codecTypeName, bytes) {
      var t1 = J.getInterceptor$asx($._profilePlatformChannelsStats),
        stats = t1.$index($._profilePlatformChannelsStats, $name);
      if (stats == null) {
        stats = A._PlatformChannelStats$($name, codecTypeName, channelTypeName);
        t1.$indexSet($._profilePlatformChannelsStats, $name, stats);
      }
      t1 = bytes == null ? null : D.NativeByteData_methods.get$lengthInBytes(bytes);
      stats.addUpStream$1(t1 == null ? 0 : t1);
      A._debugLaunchProfilePlatformChannels();
    },
    _debugRecordDownStream(channelTypeName, $name, codecTypeName, bytes) {
      var t1 = J.getInterceptor$asx($._profilePlatformChannelsStats),
        stats = t1.$index($._profilePlatformChannelsStats, $name);
      if (stats == null) {
        stats = A._PlatformChannelStats$($name, codecTypeName, channelTypeName);
        t1.$indexSet($._profilePlatformChannelsStats, $name, stats);
      }
      t1 = bytes == null ? null : D.NativeByteData_methods.get$lengthInBytes(bytes);
      stats.addDownStream$1(t1 == null ? 0 : t1);
      A._debugLaunchProfilePlatformChannels();
    },
    _findBinaryMessenger() {
      return A.ServicesBinding_instance().get$defaultBinaryMessenger();
    },
    _ProfiledBinaryMessenger: function _ProfiledBinaryMessenger(t0, t1, t2) {
      this.proxy = t0;
      this.channelTypeName = t1;
      this.codecTypeName = t2;
    },
    _PlatformChannelStats: function _PlatformChannelStats(t0, t1, t2) {
      var _ = this;
      _.channel = t0;
      _.codec = t1;
      _.type = t2;
      _._downBytes = _._downCount = _._upBytes = _._upCount = 0;
    },
    _debugLaunchProfilePlatformChannels_closure: function _debugLaunchProfilePlatformChannels_closure() {
    },
    BasicMessageChannel: function BasicMessageChannel(t0, t1, t2) {
      this.name = t0;
      this.codec = t1;
      this.$ti = t2;
    },
    BasicMessageChannel_setMessageHandler_closure: function BasicMessageChannel_setMessageHandler_closure(t0, t1) {
      this.$this = t0;
      this.handler = t1;
    },
    MethodChannel: function MethodChannel(t0, t1) {
      this.name = t0;
      this.codec = t1;
    },
    MethodChannel_setMethodCallHandler_closure: function MethodChannel_setMethodCallHandler_closure(t0, t1) {
      this.$this = t0;
      this.handler = t1;
    },
    OptionalMethodChannel: function OptionalMethodChannel(t0, t1) {
      this.name = t0;
      this.codec = t1;
    },
    TextSelection$(affinity, baseOffset, extentOffset, isDirectional) {
      var t1 = baseOffset < extentOffset,
        t2 = t1 ? baseOffset : extentOffset;
      return new A.TextSelection(baseOffset, extentOffset, affinity, isDirectional, t2, t1 ? extentOffset : baseOffset);
    },
    TextSelection: function TextSelection(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.baseOffset = t0;
      _.extentOffset = t1;
      _.affinity = t2;
      _.isDirectional = t3;
      _.start = t4;
      _.end = t5;
    },
    _getParent(context) {
      var $parent = B._Cell$named("parent");
      context.visitAncestorElements$1(new A._getParent_closure($parent));
      return $parent.readLocal$1$0(type$.BuildContext);
    },
    Actions__visitActionsAncestors(context, visitor) {
      var t1, actionsElement, t2;
      if (!B.boolConversionCheck(context.get$mounted()))
        return false;
      t1 = type$._ActionsScope;
      actionsElement = context.getElementForInheritedWidgetOfExactType$1$0(t1);
      for (; t2 = actionsElement != null, t2;) {
        if (B.boolConversionCheck(visitor.call$1(actionsElement)))
          break;
        actionsElement = A._getParent(actionsElement).getElementForInheritedWidgetOfExactType$1$0(t1);
      }
      return t2;
    },
    Actions__findDispatcher(context) {
      var t1 = {};
      t1.dispatcher = null;
      A.Actions__visitActionsAncestors(context, new A.Actions__findDispatcher_closure(t1));
      return C.C_ActionDispatcher;
    },
    Actions__castAction(actionsMarker, intent, $T) {
      var t1 = actionsMarker.actions,
        t2 = intent == null ? null : J.get$runtimeType$(intent),
        mappedAction = J.$index$asx(t1, t2 == null ? B.createRuntimeType($T) : t2);
      if ($T._eval$1("Action<0>?")._is(mappedAction))
        return mappedAction;
      else
        return null;
    },
    _getParent_closure: function _getParent_closure(t0) {
      this.parent = t0;
    },
    ActionDispatcher: function ActionDispatcher() {
    },
    Actions__findDispatcher_closure: function Actions__findDispatcher_closure(t0) {
      this._box_0 = t0;
    },
    _ActionDispatcher_Object_Diagnosticable: function _ActionDispatcher_Object_Diagnosticable() {
    },
    Directionality_maybeOf(context) {
      var widget = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      return widget == null ? null : widget.textDirection;
    },
    Semantics$(button, child, container, enabled, explicitChildNodes, focusable, focused, label, onDismiss, onFocus, onLongPress, onTap, onTapHint, scopesRoute, selected, sortKey, tagForChildren, textDirection, tooltip) {
      var _null = null;
      return new A.Semantics(A.SemanticsProperties$(_null, _null, _null, _null, _null, button, _null, _null, _null, _null, enabled, _null, focusable, focused, _null, _null, _null, _null, onTapHint != null ? A.SemanticsHintOverrides$(_null, onTapHint) : _null, _null, _null, _null, _null, _null, label, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, onDismiss, onFocus, _null, onLongPress, _null, _null, _null, _null, _null, _null, _null, _null, _null, onTap, _null, scopesRoute, selected, _null, sortKey, tagForChildren, textDirection, _null, _null, tooltip, _null), container, explicitChildNodes, false, false, child, _null);
    },
    SizedBox: function SizedBox(t0, t1, t2, t3) {
      var _ = this;
      _.width = t0;
      _.height = t1;
      _.child = t2;
      _.key = t3;
    },
    Semantics: function Semantics(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.properties = t0;
      _.container = t1;
      _.explicitChildNodes = t2;
      _.excludeSemantics = t3;
      _.blockUserActions = t4;
      _.child = t5;
      _.key = t6;
    },
    WidgetsBinding_instance() {
      return A.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding);
    },
    WidgetsBindingObserver: function WidgetsBindingObserver() {
    },
    _Autofocus$(autofocusNode, scope) {
      return new A._Autofocus(scope, autofocusNode);
    },
    FocusAttachment$_(_node) {
      return new A.FocusAttachment(_node);
    },
    FocusNode$(canRequestFocus, debugLabel, descendantsAreFocusable, descendantsAreTraversable, onKey, onKeyEvent, skipTraversal) {
      var t1 = new A.FocusNode(skipTraversal, canRequestFocus, descendantsAreFocusable, descendantsAreTraversable, onKey, onKeyEvent, B._setArrayType([], type$.JSArray_FocusNode), $.$get$ChangeNotifier__emptyListeners());
      t1.FocusNode$7$canRequestFocus$debugLabel$descendantsAreFocusable$descendantsAreTraversable$onKey$onKeyEvent$skipTraversal(canRequestFocus, debugLabel, descendantsAreFocusable, descendantsAreTraversable, onKey, onKeyEvent, skipTraversal);
      return t1;
    },
    FocusNode__allowDescendantsToBeFocused(ancestor) {
      return type$.FocusNode._as(ancestor).get$descendantsAreFocusable();
    },
    FocusScopeNode$(canRequestFocus, debugLabel, skipTraversal) {
      var _null = null,
        t1 = type$.JSArray_FocusNode;
      t1 = new A.FocusScopeNode(C.TraversalEdgeBehavior_0, B._setArrayType([], t1), skipTraversal, canRequestFocus, true, true, _null, _null, B._setArrayType([], t1), $.$get$ChangeNotifier__emptyListeners());
      t1.FocusNode$7$canRequestFocus$debugLabel$descendantsAreFocusable$descendantsAreTraversable$onKey$onKeyEvent$skipTraversal(canRequestFocus, debugLabel, true, true, _null, _null, skipTraversal);
      return t1;
    },
    FocusManager_instance() {
      return A.WidgetsBinding_instance().get$focusManager();
    },
    primaryFocus() {
      return A.WidgetsBinding_instance().get$focusManager().get$primaryFocus();
    },
    KeyEventResult: function KeyEventResult(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _Autofocus: function _Autofocus(t0, t1) {
      this.scope = t0;
      this.autofocusNode = t1;
    },
    FocusAttachment: function FocusAttachment(t0) {
      this._node = t0;
    },
    UnfocusDisposition: function UnfocusDisposition(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    FocusNode: function FocusNode(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._skipTraversal = t0;
      _._canRequestFocus = t1;
      _._descendantsAreFocusable = t2;
      _._descendantsAreTraversable = t3;
      _._focus_manager$_context = null;
      _.onKey = t4;
      _.onKeyEvent = t5;
      _._focus_manager$_parent = _._descendants = _._ancestors = _._manager = null;
      _._focus_manager$_children = t6;
      _._enclosingScope = _._attachment = null;
      _._requestFocusWhenReparented = false;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t7;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = false;
    },
    FocusNode_traversalDescendants_closure: function FocusNode_traversalDescendants_closure() {
    },
    FocusNode__removeChild_closure: function FocusNode__removeChild_closure(t0) {
      this.nodeScope = t0;
    },
    FocusNode_debugDescribeChildren_closure: function FocusNode_debugDescribeChildren_closure(t0) {
      this._box_0 = t0;
    },
    FocusScopeNode: function FocusScopeNode(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.traversalEdgeBehavior = t0;
      _._focusedChildren = t1;
      _._skipTraversal = t2;
      _._canRequestFocus = t3;
      _._descendantsAreFocusable = t4;
      _._descendantsAreTraversable = t5;
      _._focus_manager$_context = null;
      _.onKey = t6;
      _.onKeyEvent = t7;
      _._focus_manager$_parent = _._descendants = _._ancestors = _._manager = null;
      _._focus_manager$_children = t8;
      _._enclosingScope = _._attachment = null;
      _._requestFocusWhenReparented = false;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t9;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = false;
    },
    FocusScopeNode_debugFillProperties_closure: function FocusScopeNode_debugFillProperties_closure() {
    },
    FocusHighlightMode: function FocusHighlightMode(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _FocusNode_Object_DiagnosticableTreeMixin: function _FocusNode_Object_DiagnosticableTreeMixin() {
    },
    _FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier: function _FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier() {
    },
    Focus$(autofocus, canRequestFocus, child, debugLabel, descendantsAreFocusable, descendantsAreTraversable, focusNode, includeSemantics, key, onFocusChange, onKey, onKeyEvent, parentNode, skipTraversal) {
      return new A.Focus(parentNode, child, focusNode, autofocus, onFocusChange, onKeyEvent, onKey, canRequestFocus, skipTraversal, descendantsAreFocusable, descendantsAreTraversable, includeSemantics, debugLabel, key);
    },
    Focus_maybeOf(context, createDependency, scopeOk) {
      var t1 = type$._FocusInheritedScope,
        scope = createDependency ? context.dependOnInheritedWidgetOfExactType$1$0(t1) : context.getInheritedWidgetOfExactType$1$0(t1),
        node = scope == null ? null : scope.notifier;
      if (node == null)
        return null;
      if (!scopeOk && node instanceof A.FocusScopeNode)
        return null;
      return node;
    },
    _FocusState$() {
      return new A._FocusState();
    },
    FocusScope$(autofocus, child, debugLabel, includeSemantics, key, node, onFocusChange, parentNode) {
      var _null = null;
      return new A.FocusScope(parentNode, child, node, autofocus, onFocusChange, _null, _null, _null, _null, _null, _null, includeSemantics, debugLabel, key);
    },
    FocusScope_of(context) {
      var t1 = A.Focus_maybeOf(context, true, true);
      t1 = t1 == null ? null : t1.get$nearestScope();
      return t1 == null ? context.get$owner().focusManager.rootScope : t1;
    },
    _FocusScopeWithExternalFocusNode$(child, focusScopeNode, includeSemantics) {
      var _null = null;
      return new A._FocusScopeWithExternalFocusNode(_null, child, focusScopeNode, false, _null, _null, _null, _null, _null, _null, _null, includeSemantics, _null, _null);
    },
    _FocusScopeState$() {
      return new A._FocusScopeState();
    },
    _FocusInheritedScope$(child, node) {
      return new A._FocusInheritedScope(node, child, null);
    },
    Focus: function Focus(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.parentNode = t0;
      _.child = t1;
      _.focusNode = t2;
      _.autofocus = t3;
      _.onFocusChange = t4;
      _._onKeyEvent = t5;
      _._onKey = t6;
      _._focus_scope$_canRequestFocus = t7;
      _._focus_scope$_skipTraversal = t8;
      _._focus_scope$_descendantsAreFocusable = t9;
      _._focus_scope$_descendantsAreTraversable = t10;
      _.includeSemantics = t11;
      _._debugLabel = t12;
      _.key = t13;
    },
    _FocusState: function _FocusState() {
      var _ = this;
      _._internalNode = null;
      _.___FocusState__descendantsWereTraversable_A = _.___FocusState__descendantsWereFocusable_A = _.___FocusState__couldRequestFocus_A = _.___FocusState__hadPrimaryFocus_A = $;
      _._didAutofocus = false;
      _._framework0$_element = _._widget = _._focusAttachment = null;
    },
    _FocusState__handleFocusChanged_closure: function _FocusState__handleFocusChanged_closure(t0, t1) {
      this.$this = t0;
      this.hasPrimaryFocus = t1;
    },
    _FocusState__handleFocusChanged_closure0: function _FocusState__handleFocusChanged_closure0(t0, t1) {
      this.$this = t0;
      this.canRequestFocus = t1;
    },
    _FocusState__handleFocusChanged_closure1: function _FocusState__handleFocusChanged_closure1(t0, t1) {
      this.$this = t0;
      this.descendantsAreFocusable = t1;
    },
    _FocusState__handleFocusChanged_closure2: function _FocusState__handleFocusChanged_closure2(t0, t1) {
      this.$this = t0;
      this.descendantsAreTraversable = t1;
    },
    FocusScope: function FocusScope(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.parentNode = t0;
      _.child = t1;
      _.focusNode = t2;
      _.autofocus = t3;
      _.onFocusChange = t4;
      _._onKeyEvent = t5;
      _._onKey = t6;
      _._focus_scope$_canRequestFocus = t7;
      _._focus_scope$_skipTraversal = t8;
      _._focus_scope$_descendantsAreFocusable = t9;
      _._focus_scope$_descendantsAreTraversable = t10;
      _.includeSemantics = t11;
      _._debugLabel = t12;
      _.key = t13;
    },
    _FocusScopeWithExternalFocusNode: function _FocusScopeWithExternalFocusNode(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.parentNode = t0;
      _.child = t1;
      _.focusNode = t2;
      _.autofocus = t3;
      _.onFocusChange = t4;
      _._onKeyEvent = t5;
      _._onKey = t6;
      _._focus_scope$_canRequestFocus = t7;
      _._focus_scope$_skipTraversal = t8;
      _._focus_scope$_descendantsAreFocusable = t9;
      _._focus_scope$_descendantsAreTraversable = t10;
      _.includeSemantics = t11;
      _._debugLabel = t12;
      _.key = t13;
    },
    _FocusScopeState: function _FocusScopeState() {
      var _ = this;
      _._internalNode = null;
      _.___FocusState__descendantsWereTraversable_A = _.___FocusState__descendantsWereFocusable_A = _.___FocusState__couldRequestFocus_A = _.___FocusState__hadPrimaryFocus_A = $;
      _._didAutofocus = false;
      _._framework0$_element = _._widget = _._focusAttachment = null;
    },
    _FocusInheritedScope: function _FocusInheritedScope(t0, t1, t2) {
      this.notifier = t0;
      this.child = t1;
      this.key = t2;
    },
    _getAncestor(context) {
      var count, t1 = {};
      t1.count = count;
      t1.count = 1;
      t1.target = null;
      context.visitAncestorElements$1(new A._getAncestor_closure(t1));
      return t1.target;
    },
    _FocusTraversalGroupInfo$(group, defaultPolicy, members) {
      var t1 = group == null ? null : group.policy;
      if (t1 == null)
        t1 = defaultPolicy;
      if (t1 == null)
        t1 = A.ReadingOrderTraversalPolicy$();
      return new A._FocusTraversalGroupInfo(t1, members == null ? B._setArrayType([], type$.JSArray_FocusNode) : members);
    },
    FocusTraversalPolicy_defaultTraversalRequestFocusCallback(node, alignment, alignmentPolicy, curve, duration) {
      var t1, t2, t3, t4;
      type$.FocusNode._as(node);
      type$.nullable_ScrollPositionAlignmentPolicy._as(alignmentPolicy);
      B._asDoubleQ(alignment);
      type$.nullable_Duration._as(duration);
      type$.nullable_Curve._as(curve);
      node.requestFocus$0();
      t1 = node.get$context();
      t1.toString;
      t2 = alignment == null ? 1 : alignment;
      t3 = alignmentPolicy == null ? C.ScrollPositionAlignmentPolicy_0 : alignmentPolicy;
      t4 = duration == null ? D.Duration_0 : duration;
      A.Scrollable_ensureVisible(t1, t2, t3, curve == null ? C.Cubic_WKj : curve, t4);
    },
    FocusTraversalPolicy__canRequestTraversalFocus(node) {
      return B.boolConversionCheck(node.get$canRequestFocus()) && !B.boolConversionCheck(node.get$skipTraversal());
    },
    FocusTraversalPolicy__getDescendantsWithoutExpandingScope(node) {
      var t1, t2,
        result = B._setArrayType([], type$.JSArray_FocusNode);
      for (t1 = J.get$iterator$ax(node.get$children()); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        D.JSArray_methods.add$1(result, t2);
        if (!(t2 instanceof A.FocusScopeNode))
          D.JSArray_methods.addAll$1(result, A.FocusTraversalPolicy__getDescendantsWithoutExpandingScope(t2));
      }
      return result;
    },
    FocusTraversalPolicy__findGroups(scope, scopeGroupNode, currentNode) {
      var groups, t1, t2, t3, groupNode, parentGroup, t4,
        defaultPolicy = scopeGroupNode == null ? null : scopeGroupNode.policy;
      if (defaultPolicy == null)
        defaultPolicy = A.ReadingOrderTraversalPolicy$();
      groups = B.LinkedHashMap_LinkedHashMap$_empty(type$.nullable_FocusNode, type$._FocusTraversalGroupInfo);
      for (t1 = J.get$iterator$ax(A.FocusTraversalPolicy__getDescendantsWithoutExpandingScope(scope)), t2 = type$.JSArray_FocusNode; B.boolConversionCheck(t1.moveNext$0());) {
        t3 = t1.get$current();
        groupNode = A.FocusTraversalGroup__getGroupNode(t3);
        if (t3 === groupNode) {
          t3 = groupNode.get$parent();
          t3.toString;
          parentGroup = A.FocusTraversalGroup__getGroupNode(t3);
          if (groups.$index(0, parentGroup) == null)
            groups.$indexSet(0, parentGroup, A._FocusTraversalGroupInfo$(parentGroup, defaultPolicy, B._setArrayType([], t2)));
          J.add$1$ax(groups.$index(0, parentGroup).members, groupNode);
          continue;
        }
        if (t3 !== currentNode)
          t4 = B.boolConversionCheck(t3.get$canRequestFocus()) && !B.boolConversionCheck(t3.get$skipTraversal());
        else
          t4 = true;
        if (t4) {
          if (groups.$index(0, groupNode) == null)
            groups.$indexSet(0, groupNode, A._FocusTraversalGroupInfo$(groupNode, defaultPolicy, B._setArrayType([], t2)));
          J.add$1$ax(groups.$index(0, groupNode).members, t3);
        }
      }
      return groups;
    },
    FocusTraversalPolicy__sortAllDescendants(scope, currentNode) {
      var t1, t2, sortedMembers, sortedDescendants,
        scopeGroupNode = A.FocusTraversalGroup__getGroupNode(scope),
        groups = A.FocusTraversalPolicy__findGroups(scope, scopeGroupNode, currentNode);
      for (t1 = J.get$iterator$ax(groups.get$keys()); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        sortedMembers = J.toList$0$ax(groups.$index(0, t2).policy.sortDescendants$2(groups.$index(0, t2).members, currentNode));
        J.clear$0$ax(groups.$index(0, t2).members);
        J.addAll$1$ax(groups.$index(0, t2).members, sortedMembers);
      }
      sortedDescendants = B._setArrayType([], type$.JSArray_FocusNode);
      if (B.boolConversionCheck(groups.get$isNotEmpty(groups)) && B.boolConversionCheck(groups.containsKey$1(scopeGroupNode))) {
        t1 = groups.$index(0, scopeGroupNode);
        t1.toString;
        new A.FocusTraversalPolicy__sortAllDescendants_visitGroups(groups, sortedDescendants).call$1(t1);
      }
      D.JSArray_methods.removeWhere$1(sortedDescendants, new A.FocusTraversalPolicy__sortAllDescendants_closure(currentNode));
      return sortedDescendants;
    },
    _DirectionalPolicyDataEntry$(direction, node) {
      return new A._DirectionalPolicyDataEntry(direction, node);
    },
    _DirectionalPolicyData$($history) {
      return new A._DirectionalPolicyData($history);
    },
    DirectionalFocusTraversalPolicyMixin__verticalCompare(target, a, b) {
      var t3, t4,
        t1 = a.get$dy(),
        t2 = target.get$dy();
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = b.get$dy();
      t4 = target.get$dy();
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return D.JSNumber_methods.compareTo$1(Math.abs(t1 - t2), Math.abs(t3 - t4));
    },
    DirectionalFocusTraversalPolicyMixin__horizontalCompare(target, a, b) {
      var t3, t4,
        t1 = a.get$dx(),
        t2 = target.get$dx();
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = b.get$dx();
      t4 = target.get$dx();
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return D.JSNumber_methods.compareTo$1(Math.abs(t1 - t2), Math.abs(t3 - t4));
    },
    DirectionalFocusTraversalPolicyMixin__sortByDistancePreferVertical(target, nodes) {
      var sorted = J.toList$0$ax(nodes);
      A.mergeSort(sorted, new A.DirectionalFocusTraversalPolicyMixin__sortByDistancePreferVertical_closure(target), type$.FocusNode);
      return sorted;
    },
    DirectionalFocusTraversalPolicyMixin__sortByDistancePreferHorizontal(target, nodes) {
      var sorted = J.toList$0$ax(nodes);
      A.mergeSort(sorted, new A.DirectionalFocusTraversalPolicyMixin__sortByDistancePreferHorizontal_closure(target), type$.FocusNode);
      return sorted;
    },
    DirectionalFocusTraversalPolicyMixin__verticalCompareClosestEdge(target, a, b) {
      var t3, t4, aCoord, bCoord,
        t1 = a.top,
        t2 = target.get$dy();
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = a.bottom;
      t4 = target.get$dy();
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t4 !== "number")
        return B.iae(t4);
      if (Math.abs(t1 - t2) < Math.abs(t3 - t4))
        aCoord = t1;
      else
        aCoord = t3;
      t1 = b.top;
      t2 = target.get$dy();
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = b.bottom;
      t4 = target.get$dy();
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t4 !== "number")
        return B.iae(t4);
      if (Math.abs(t1 - t2) < Math.abs(t3 - t4))
        bCoord = t1;
      else
        bCoord = t3;
      t1 = target.get$dy();
      if (typeof t1 !== "number")
        return B.iae(t1);
      t2 = target.get$dy();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return D.JSNumber_methods.compareTo$1(Math.abs(aCoord - t1), Math.abs(bCoord - t2));
    },
    DirectionalFocusTraversalPolicyMixin__horizontalCompareClosestEdge(target, a, b) {
      var t3, t4, aCoord, bCoord,
        t1 = a.left,
        t2 = target.get$dx();
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = a.right;
      t4 = target.get$dx();
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t4 !== "number")
        return B.iae(t4);
      if (Math.abs(t1 - t2) < Math.abs(t3 - t4))
        aCoord = t1;
      else
        aCoord = t3;
      t1 = b.left;
      t2 = target.get$dx();
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = b.right;
      t4 = target.get$dx();
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t4 !== "number")
        return B.iae(t4);
      if (Math.abs(t1 - t2) < Math.abs(t3 - t4))
        bCoord = t1;
      else
        bCoord = t3;
      t1 = target.get$dx();
      if (typeof t1 !== "number")
        return B.iae(t1);
      t2 = target.get$dx();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return D.JSNumber_methods.compareTo$1(Math.abs(aCoord - t1), Math.abs(bCoord - t2));
    },
    DirectionalFocusTraversalPolicyMixin__sortClosestEdgesByDistancePreferHorizontal(target, nodes) {
      var sorted = J.toList$0$ax(nodes);
      A.mergeSort(sorted, new A.DirectionalFocusTraversalPolicyMixin__sortClosestEdgesByDistancePreferHorizontal_closure(target), type$.FocusNode);
      return sorted;
    },
    DirectionalFocusTraversalPolicyMixin__sortClosestEdgesByDistancePreferVertical(target, nodes) {
      var sorted = J.toList$0$ax(nodes);
      A.mergeSort(sorted, new A.DirectionalFocusTraversalPolicyMixin__sortClosestEdgesByDistancePreferVertical_closure(target), type$.FocusNode);
      return sorted;
    },
    _ReadingOrderSortData$(node) {
      var t1 = node.get$rect(),
        t2 = node.get$context();
      t2.toString;
      return new A._ReadingOrderSortData(A._ReadingOrderSortData__findDirectionality(t2), t1, node);
    },
    _ReadingOrderSortData__findDirectionality(context) {
      var t1 = context.getInheritedWidgetOfExactType$1$0(type$.Directionality);
      return t1 == null ? null : t1.textDirection;
    },
    _ReadingOrderSortData_commonDirectionalityOf(list) {
      var t2, common, common0,
        t1 = J.getInterceptor$ax(list);
      for (t2 = J.get$iterator$ax(t1.map$1$1(list, new A._ReadingOrderSortData_commonDirectionalityOf_closure(), type$.Set_Directionality)), common = null; B.boolConversionCheck(t2.moveNext$0());) {
        common0 = t2.get$current();
        common = (common == null ? common0 : common).intersection$1(common0);
      }
      if (B.boolConversionCheck(common.get$isEmpty(common)))
        return t1.get$first(list).directionality;
      return J.firstWhere$1$ax(t1.get$first(list).get$directionalAncestors(), common.get$contains(common)).textDirection;
    },
    _ReadingOrderSortData_sortWithDirectionality(list, directionality) {
      A.mergeSort(list, new A._ReadingOrderSortData_sortWithDirectionality_closure(directionality), type$._ReadingOrderSortData);
    },
    _ReadingOrderDirectionalGroupData$(members) {
      return new A._ReadingOrderDirectionalGroupData(members);
    },
    _ReadingOrderDirectionalGroupData_sortWithDirectionality(list, directionality) {
      A.mergeSort(list, new A._ReadingOrderDirectionalGroupData_sortWithDirectionality_closure(directionality), type$._ReadingOrderDirectionalGroupData);
    },
    ReadingOrderTraversalPolicy$() {
      var t1 = B.LinkedHashMap_LinkedHashMap$_empty(type$.FocusScopeNode, type$._DirectionalPolicyData);
      return new A.ReadingOrderTraversalPolicy(t1, A.focus_traversal_FocusTraversalPolicy_defaultTraversalRequestFocusCallback$closure());
    },
    FocusTraversalGroup$(child, policy) {
      return new A.FocusTraversalGroup(policy == null ? A.ReadingOrderTraversalPolicy$() : policy, child, null);
    },
    FocusTraversalGroup_maybeOfNode(node) {
      var t1 = A.FocusTraversalGroup__getGroupNode(node);
      return t1 == null ? null : t1.policy;
    },
    FocusTraversalGroup__getGroupNode(node) {
      var t1;
      for (; node.get$parent() != null; node = t1) {
        if (node.get$context() == null)
          return null;
        if (node instanceof A._FocusTraversalGroupNode)
          return node;
        t1 = node.get$parent();
        t1.toString;
      }
      return null;
    },
    FocusTraversalGroup_of(context) {
      var policy = A.FocusTraversalGroup_maybeOf(context);
      policy.toString;
      return policy;
    },
    FocusTraversalGroup_maybeOf(context) {
      var node = A.Focus_maybeOf(context, false, true);
      if (node == null)
        return null;
      return A.FocusTraversalGroup_maybeOfNode(node);
    },
    _FocusTraversalGroupNode$(debugLabel, policy) {
      var _null = null,
        t1 = new A._FocusTraversalGroupNode(policy, false, true, true, true, _null, _null, B._setArrayType([], type$.JSArray_FocusNode), $.$get$ChangeNotifier__emptyListeners());
      t1.FocusNode$7$canRequestFocus$debugLabel$descendantsAreFocusable$descendantsAreTraversable$onKey$onKeyEvent$skipTraversal(true, debugLabel, true, true, _null, _null, false);
      t1._FocusTraversalGroupNode$2$debugLabel$policy(debugLabel, policy);
      return t1;
    },
    _FocusTraversalGroupState$() {
      return new A._FocusTraversalGroupState();
    },
    _getAncestor_closure: function _getAncestor_closure(t0) {
      this._box_0 = t0;
    },
    _FocusTraversalGroupInfo: function _FocusTraversalGroupInfo(t0, t1) {
      this.policy = t0;
      this.members = t1;
    },
    TraversalDirection: function TraversalDirection(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    TraversalEdgeBehavior: function TraversalEdgeBehavior(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    FocusTraversalPolicy: function FocusTraversalPolicy() {
    },
    FocusTraversalPolicy__findInitialFocus_closure: function FocusTraversalPolicy__findInitialFocus_closure() {
    },
    FocusTraversalPolicy__sortAllDescendants_visitGroups: function FocusTraversalPolicy__sortAllDescendants_visitGroups(t0, t1) {
      this.groups = t0;
      this.sortedDescendants = t1;
    },
    FocusTraversalPolicy__sortAllDescendants_closure: function FocusTraversalPolicy__sortAllDescendants_closure(t0) {
      this.currentNode = t0;
    },
    _DirectionalPolicyDataEntry: function _DirectionalPolicyDataEntry(t0, t1) {
      this.direction = t0;
      this.node = t1;
    },
    _DirectionalPolicyData: function _DirectionalPolicyData(t0) {
      this.history = t0;
    },
    DirectionalFocusTraversalPolicyMixin: function DirectionalFocusTraversalPolicyMixin() {
    },
    _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure: function _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure(t0) {
      this.node = t0;
    },
    DirectionalFocusTraversalPolicyMixin_findFirstFocusInDirection_closure: function DirectionalFocusTraversalPolicyMixin_findFirstFocusInDirection_closure(t0) {
      this._box_0 = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortByDistancePreferVertical_closure: function DirectionalFocusTraversalPolicyMixin__sortByDistancePreferVertical_closure(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortByDistancePreferHorizontal_closure: function DirectionalFocusTraversalPolicyMixin__sortByDistancePreferHorizontal_closure(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortClosestEdgesByDistancePreferHorizontal_closure: function DirectionalFocusTraversalPolicyMixin__sortClosestEdgesByDistancePreferHorizontal_closure(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortClosestEdgesByDistancePreferVertical_closure: function DirectionalFocusTraversalPolicyMixin__sortClosestEdgesByDistancePreferVertical_closure(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure: function DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0: function DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1: function DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1() {
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure: function DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0: function DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1: function DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1() {
    },
    DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate: function DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate(t0, t1, t2) {
      this.$this = t0;
      this.policyData = t1;
      this.nearestScope = t2;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure: function DirectionalFocusTraversalPolicyMixin_inDirection_closure(t0) {
      this.band = t0;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure0: function DirectionalFocusTraversalPolicyMixin_inDirection_closure0(t0) {
      this.band = t0;
    },
    _ReadingOrderSortData: function _ReadingOrderSortData(t0, t1, t2) {
      var _ = this;
      _.directionality = t0;
      _.rect = t1;
      _.node = t2;
      _._directionalAncestors = null;
    },
    _ReadingOrderSortData_commonDirectionalityOf_closure: function _ReadingOrderSortData_commonDirectionalityOf_closure() {
    },
    _ReadingOrderSortData_sortWithDirectionality_closure: function _ReadingOrderSortData_sortWithDirectionality_closure(t0) {
      this.directionality = t0;
    },
    _ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors: function _ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors() {
    },
    _ReadingOrderDirectionalGroupData: function _ReadingOrderDirectionalGroupData(t0) {
      this.members = t0;
      this._focus_traversal$_rect = null;
    },
    _ReadingOrderDirectionalGroupData_rect_closure: function _ReadingOrderDirectionalGroupData_rect_closure() {
    },
    _ReadingOrderDirectionalGroupData_sortWithDirectionality_closure: function _ReadingOrderDirectionalGroupData_sortWithDirectionality_closure(t0) {
      this.directionality = t0;
    },
    _ReadingOrderDirectionalGroupData_debugFillProperties_closure: function _ReadingOrderDirectionalGroupData_debugFillProperties_closure() {
    },
    ReadingOrderTraversalPolicy: function ReadingOrderTraversalPolicy(t0, t1) {
      this.DirectionalFocusTraversalPolicyMixin__policyData = t0;
      this.requestFocusCallback = t1;
    },
    ReadingOrderTraversalPolicy__pickNext_closure: function ReadingOrderTraversalPolicy__pickNext_closure() {
    },
    ReadingOrderTraversalPolicy__pickNext_inBand: function ReadingOrderTraversalPolicy__pickNext_inBand() {
    },
    ReadingOrderTraversalPolicy__pickNext_inBand_closure: function ReadingOrderTraversalPolicy__pickNext_inBand_closure(t0) {
      this.band = t0;
    },
    FocusTraversalGroup: function FocusTraversalGroup(t0, t1, t2) {
      this.policy = t0;
      this.child = t1;
      this.key = t2;
    },
    _FocusTraversalGroupNode: function _FocusTraversalGroupNode(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.policy = t0;
      _._skipTraversal = t1;
      _._canRequestFocus = t2;
      _._descendantsAreFocusable = t3;
      _._descendantsAreTraversable = t4;
      _._focus_manager$_context = null;
      _.onKey = t5;
      _.onKeyEvent = t6;
      _._focus_manager$_parent = _._descendants = _._ancestors = _._manager = null;
      _._focus_manager$_children = t7;
      _._enclosingScope = _._attachment = null;
      _._requestFocusWhenReparented = false;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t8;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = false;
    },
    _FocusTraversalGroupState: function _FocusTraversalGroupState() {
      this.___FocusTraversalGroupState_focusNode_FI = $;
      this._framework0$_element = this._widget = null;
    },
    _FocusTraversalPolicy_Object_Diagnosticable: function _FocusTraversalPolicy_Object_Diagnosticable() {
    },
    _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin: function _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin() {
    },
    __ReadingOrderDirectionalGroupData_Object_Diagnosticable: function __ReadingOrderDirectionalGroupData_Object_Diagnosticable() {
    },
    __ReadingOrderSortData_Object_Diagnosticable: function __ReadingOrderSortData_Object_Diagnosticable() {
    },
    Widget_canUpdate(oldWidget, newWidget) {
      return B.boolConversionCheck(J.$eq$(oldWidget.get$runtimeType(0), newWidget.get$runtimeType(0))) && B.boolConversionCheck(J.$eq$(oldWidget.key, newWidget.key));
    },
    _isProfileBuildsEnabledFor(widget) {
      var t1;
      if (!B.boolConversionCheck($.debugProfileBuildsEnabled))
        t1 = B.boolConversionCheck($.debugProfileBuildsEnabledUserWidgets) && B.boolConversionCheck(A.debugIsWidgetLocalCreation(widget));
      else
        t1 = true;
      return t1;
    },
    Element__activateRecursively(element) {
      type$.Element._as(element);
      element.activate$0();
      element.visitChildren$1(A.framework0_Element__activateRecursively$closure());
    },
    _ElementDiagnosticableTreeNode$($name, stateful, style, value) {
      return new A._ElementDiagnosticableTreeNode(value, $name, true, true, null, style);
    },
    ErrorWidget$withDetails(error, message) {
      return new A.ErrorWidget(message, error, A.UniqueKey$());
    },
    ErrorWidget__defaultErrorWidgetBuilder(details) {
      var exception = type$.FlutterErrorDetails._as(details).exception;
      return A.ErrorWidget$withDetails(exception instanceof A.FlutterError ? exception : null, "");
    },
    StatelessElement$0(widget) {
      var t1 = new A.StatelessElement0(widget, C._ElementLifecycle_00, B.HashSet_HashSet(type$.Element));
      t1.Element$1(widget);
      return t1;
    },
    StatefulElement$0(widget) {
      var t1 = new A.StatefulElement0(widget.createState$0(), widget, C._ElementLifecycle_00, B.HashSet_HashSet(type$.Element));
      t1.Element$1(widget);
      t1.StatefulElement$10(widget);
      return t1;
    },
    InheritedElement$(widget) {
      var t1 = type$.Element;
      t1 = new A.InheritedElement(E.HashMap_HashMap(null, null, null, t1, type$.nullable_Object), widget, C._ElementLifecycle_00, B.HashSet_HashSet(t1));
      t1.Element$1(widget);
      return t1;
    },
    LeafRenderObjectElement$(widget) {
      var t1 = new A.LeafRenderObjectElement(widget, C._ElementLifecycle_00, B.HashSet_HashSet(type$.Element));
      t1.Element$1(widget);
      return t1;
    },
    SingleChildRenderObjectElement$(widget) {
      var t1 = new A.SingleChildRenderObjectElement(widget, C._ElementLifecycle_00, B.HashSet_HashSet(type$.Element));
      t1.Element$1(widget);
      return t1;
    },
    DebugCreator$(element) {
      return new A.DebugCreator(element);
    },
    _reportException(context, exception, stack, informationCollector) {
      var details = A.FlutterErrorDetails$(context, exception, informationCollector, "widgets library", false, stack);
      A.FlutterError_reportError(details);
      return details;
    },
    IndexedSlot$(index, value, $T) {
      return new A.IndexedSlot(value, index, $T._eval$1("IndexedSlot<0>"));
    },
    _NullElement$() {
      var t1 = new A._NullElement(C._NullWidget_null, C._ElementLifecycle_00, B.HashSet_HashSet(type$.Element));
      t1.Element$1(C._NullWidget_null);
      return t1;
    },
    GlobalKey: function GlobalKey() {
    },
    Widget: function Widget() {
    },
    StatelessWidget: function StatelessWidget() {
    },
    StatefulWidget: function StatefulWidget() {
    },
    State0: function State0() {
    },
    ProxyWidget: function ProxyWidget() {
    },
    InheritedWidget: function InheritedWidget() {
    },
    RenderObjectWidget: function RenderObjectWidget() {
    },
    LeafRenderObjectWidget: function LeafRenderObjectWidget() {
    },
    SingleChildRenderObjectWidget: function SingleChildRenderObjectWidget() {
    },
    _ElementLifecycle: function _ElementLifecycle(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    Element0: function Element0() {
    },
    Element_renderObjectAttachingChild_closure: function Element_renderObjectAttachingChild_closure(t0) {
      this._box_0 = t0;
    },
    Element_updateChildren_replaceWithNullIfForgotten0: function Element_updateChildren_replaceWithNullIfForgotten0(t0) {
      this.forgottenChildren = t0;
    },
    Element_updateChildren_slotFor: function Element_updateChildren_slotFor(t0) {
      this.slots = t0;
    },
    Element_updateSlotForChild_visit: function Element_updateSlotForChild_visit(t0) {
      this.newSlot = t0;
    },
    Element__updateDepth_closure: function Element__updateDepth_closure(t0) {
      this.expectedDepth = t0;
    },
    Element__updateBuildScopeRecursively_closure: function Element__updateBuildScopeRecursively_closure() {
    },
    Element_detachRenderObject_closure0: function Element_detachRenderObject_closure0() {
    },
    Element_attachRenderObject_closure: function Element_attachRenderObject_closure(t0) {
      this.newSlot = t0;
    },
    Element_debugFillProperties_closure: function Element_debugFillProperties_closure() {
    },
    Element_debugFillProperties_closure0: function Element_debugFillProperties_closure0() {
    },
    Element_debugDescribeChildren_closure: function Element_debugDescribeChildren_closure(t0) {
      this.children = t0;
    },
    _ElementDiagnosticableTreeNode: function _ElementDiagnosticableTreeNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.value = t0;
      _.name = t1;
      _.showSeparator = t2;
      _.showName = t3;
      _.linePrefix = t4;
      _.style = t5;
    },
    ErrorWidget: function ErrorWidget(t0, t1, t2) {
      this.message = t0;
      this._flutterError = t1;
      this.key = t2;
    },
    ComponentElement: function ComponentElement() {
    },
    ComponentElement_performRebuild_closure: function ComponentElement_performRebuild_closure(t0) {
      this.$this = t0;
    },
    ComponentElement_performRebuild_closure0: function ComponentElement_performRebuild_closure0(t0) {
      this.$this = t0;
    },
    StatelessElement0: function StatelessElement0(t0, t1, t2) {
      var _ = this;
      _._slot = _._framework0$_notificationTree = _._framework0$_parent = _._framework0$_child = null;
      _.__Element__depth_A = $;
      _._widget = t0;
      _._parentBuildScope = _._framework0$_owner = null;
      _._framework0$_lifecycleState = t1;
      _._debugForgottenChildrenWithGlobalKey = t2;
      _._framework0$_dependencies = _._framework0$_inheritedElements = null;
      _._framework0$_hadUnsatisfiedDependencies = false;
      _._framework0$_dirty = true;
      _._framework0$_inDirtyList = false;
    },
    StatefulElement0: function StatefulElement0(t0, t1, t2, t3) {
      var _ = this;
      _._framework0$_state = t0;
      _._framework0$_didChangeDependencies = false;
      _._slot = _._framework0$_notificationTree = _._framework0$_parent = _._framework0$_child = null;
      _.__Element__depth_A = $;
      _._widget = t1;
      _._parentBuildScope = _._framework0$_owner = null;
      _._framework0$_lifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._framework0$_dependencies = _._framework0$_inheritedElements = null;
      _._framework0$_hadUnsatisfiedDependencies = false;
      _._framework0$_dirty = true;
      _._framework0$_inDirtyList = false;
    },
    ProxyElement0: function ProxyElement0() {
    },
    InheritedElement: function InheritedElement(t0, t1, t2, t3) {
      var _ = this;
      _._dependents = t0;
      _._slot = _._framework0$_notificationTree = _._framework0$_parent = _._framework0$_child = null;
      _.__Element__depth_A = $;
      _._widget = t1;
      _._parentBuildScope = _._framework0$_owner = null;
      _._framework0$_lifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._framework0$_dependencies = _._framework0$_inheritedElements = null;
      _._framework0$_hadUnsatisfiedDependencies = false;
      _._framework0$_dirty = true;
      _._framework0$_inDirtyList = false;
    },
    RenderObjectElement: function RenderObjectElement() {
    },
    LeafRenderObjectElement: function LeafRenderObjectElement(t0, t1, t2) {
      var _ = this;
      _._slot = _._framework0$_notificationTree = _._framework0$_parent = _._ancestorRenderObjectElement = _._framework0$_renderObject = null;
      _.__Element__depth_A = $;
      _._widget = t0;
      _._parentBuildScope = _._framework0$_owner = null;
      _._framework0$_lifecycleState = t1;
      _._debugForgottenChildrenWithGlobalKey = t2;
      _._framework0$_dependencies = _._framework0$_inheritedElements = null;
      _._framework0$_hadUnsatisfiedDependencies = false;
      _._framework0$_dirty = true;
      _._framework0$_inDirtyList = false;
    },
    SingleChildRenderObjectElement: function SingleChildRenderObjectElement(t0, t1, t2) {
      var _ = this;
      _._slot = _._framework0$_notificationTree = _._framework0$_parent = _._ancestorRenderObjectElement = _._framework0$_renderObject = _._framework0$_child = null;
      _.__Element__depth_A = $;
      _._widget = t0;
      _._parentBuildScope = _._framework0$_owner = null;
      _._framework0$_lifecycleState = t1;
      _._debugForgottenChildrenWithGlobalKey = t2;
      _._framework0$_dependencies = _._framework0$_inheritedElements = null;
      _._framework0$_hadUnsatisfiedDependencies = false;
      _._framework0$_dirty = true;
      _._framework0$_inDirtyList = false;
    },
    DebugCreator: function DebugCreator(t0) {
      this.element = t0;
    },
    IndexedSlot: function IndexedSlot(t0, t1, t2) {
      this.value = t0;
      this.index = t1;
      this.$ti = t2;
    },
    _NullElement: function _NullElement(t0, t1, t2) {
      var _ = this;
      _._slot = _._framework0$_notificationTree = _._framework0$_parent = null;
      _.__Element__depth_A = $;
      _._widget = t0;
      _._parentBuildScope = _._framework0$_owner = null;
      _._framework0$_lifecycleState = t1;
      _._debugForgottenChildrenWithGlobalKey = t2;
      _._framework0$_dependencies = _._framework0$_inheritedElements = null;
      _._framework0$_hadUnsatisfiedDependencies = false;
      _._framework0$_dirty = true;
      _._framework0$_inDirtyList = false;
    },
    _NullWidget: function _NullWidget(t0) {
      this.key = t0;
    },
    _State_Object_Diagnosticable: function _State_Object_Diagnosticable() {
    },
    InheritedModel__findModels(context, aspect, results, $T) {
      var t1 = {},
        model = context.getElementForInheritedWidgetOfExactType$1$0($T);
      if (model == null)
        return;
      J.add$1$ax(results, model);
      if (B.boolConversionCheck($T._as(model.get$widget()).isSupportedAspect$1(aspect)))
        return;
      t1.modelParent = null;
      model.visitAncestorElements$1(new A.InheritedModel__findModels_closure(t1));
      t1 = t1.modelParent;
      if (t1 == null)
        return;
      A.InheritedModel__findModels(t1, aspect, results, $T);
    },
    InheritedModel_inheritFrom(context, aspect, $T) {
      var models, lastModel, t1, t2, value;
      if (aspect == null)
        return context.dependOnInheritedWidgetOfExactType$1$0($T);
      models = B._setArrayType([], type$.JSArray_InheritedElement);
      A.InheritedModel__findModels(context, aspect, models, $T);
      if (B.boolConversionCheck(D.JSArray_methods.get$isEmpty(models)))
        return null;
      lastModel = D.JSArray_methods.get$last(models);
      for (t1 = D.JSArray_methods.get$iterator(models); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        value = $T._as(context.dependOnInheritedElement$2$aspect(t2, aspect));
        if (B.boolConversionCheck(t2.$eq(0, lastModel)))
          return value;
      }
      return null;
    },
    InheritedModelElement$(widget, $T) {
      var t1 = type$.Element;
      t1 = new A.InheritedModelElement(E.HashMap_HashMap(null, null, null, t1, type$.nullable_Object), widget, C._ElementLifecycle_00, B.HashSet_HashSet(t1), $T._eval$1("InheritedModelElement<0>"));
      t1.Element$1(widget);
      return t1;
    },
    InheritedModel: function InheritedModel() {
    },
    InheritedModel__findModels_closure: function InheritedModel__findModels_closure(t0) {
      this._box_0 = t0;
    },
    InheritedModelElement: function InheritedModelElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _._dependents = t0;
      _._slot = _._framework0$_notificationTree = _._framework0$_parent = _._framework0$_child = null;
      _.__Element__depth_A = $;
      _._widget = t1;
      _._parentBuildScope = _._framework0$_owner = null;
      _._framework0$_lifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._framework0$_dependencies = _._framework0$_inheritedElements = null;
      _._framework0$_hadUnsatisfiedDependencies = false;
      _._framework0$_dirty = true;
      _._framework0$_inDirtyList = false;
      _.$ti = t4;
    },
    _InheritedNotifierElement$(widget, $T) {
      var t1 = type$.Element;
      t1 = new A._InheritedNotifierElement(E.HashMap_HashMap(null, null, null, t1, type$.nullable_Object), widget, C._ElementLifecycle_00, B.HashSet_HashSet(t1), $T._eval$1("_InheritedNotifierElement<0>"));
      t1.Element$1(widget);
      t1._InheritedNotifierElement$1(widget, $T);
      return t1;
    },
    InheritedNotifier: function InheritedNotifier() {
    },
    _InheritedNotifierElement: function _InheritedNotifierElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _._inherited_notifier$_dirty = false;
      _._dependents = t0;
      _._slot = _._framework0$_notificationTree = _._framework0$_parent = _._framework0$_child = null;
      _.__Element__depth_A = $;
      _._widget = t1;
      _._parentBuildScope = _._framework0$_owner = null;
      _._framework0$_lifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._framework0$_dependencies = _._framework0$_inheritedElements = null;
      _._framework0$_hadUnsatisfiedDependencies = false;
      _._framework0$_dirty = true;
      _._framework0$_inDirtyList = false;
      _.$ti = t4;
    },
    MediaQuery$(child, data) {
      return new A.MediaQuery(data, child, null);
    },
    MediaQuery_maybeOf(context) {
      return A.MediaQuery__maybeOf(context, null);
    },
    MediaQuery__maybeOf(context, aspect) {
      var t1 = A.InheritedModel_inheritFrom(context, aspect, type$.MediaQuery);
      return t1 == null ? null : t1.data;
    },
    _MediaQueryAspect: function _MediaQueryAspect(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    MediaQuery: function MediaQuery(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    MediaQuery_updateShouldNotifyDependent_closure: function MediaQuery_updateShouldNotifyDependent_closure(t0, t1) {
      this.$this = t0;
      this.oldWidget = t1;
    },
    NavigationMode: function NavigationMode(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    RouteInformation$(state, uri) {
      return new A.RouteInformation(uri, state);
    },
    RouteInformation: function RouteInformation(t0, t1) {
      this._router$_uri = t0;
      this.state = t1;
    },
    ScrollPositionAlignmentPolicy: function ScrollPositionAlignmentPolicy(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    Scrollable_maybeOf(context) {
      var t2, scrollable,
        t1 = type$._ScrollableScope,
        element = context.getElementForInheritedWidgetOfExactType$1$0(t1);
      for (t2 = element != null; t2;) {
        scrollable = t1._as(element.get$widget()).get$scrollable();
        context.dependOnInheritedElement$1(element);
        return scrollable;
      }
      return null;
    },
    Scrollable_ensureVisible(context, alignment, alignmentPolicy, curve, duration) {
      var targetRenderObject, t1, _0_0, newFutures,
        futures = B._setArrayType([], type$.JSArray_Future_void),
        scrollable = A.Scrollable_maybeOf(context);
      for (targetRenderObject = null; false;) {
        t1 = context.findRenderObject$0();
        t1.toString;
        _0_0 = scrollable._performEnsureVisible$6$alignment$alignmentPolicy$curve$duration$targetRenderObject(t1, alignment, alignmentPolicy, curve, duration, targetRenderObject);
        newFutures = _0_0._0;
        scrollable = _0_0._1;
        D.JSArray_methods.addAll$1(futures, newFutures);
        if (targetRenderObject == null)
          targetRenderObject = context.findRenderObject$0();
        context = scrollable.get$context();
        scrollable = A.Scrollable_maybeOf(context);
      }
      if (B.boolConversionCheck(D.JSArray_methods.get$isEmpty(futures)) || B.boolConversionCheck(duration.$eq(0, D.Duration_0)))
        return B.Future_Future$value(null, type$.void);
      if (futures.length === 1)
        return D.JSArray_methods.get$single(futures);
      t1 = type$.void;
      return B.Future_wait(futures, t1).then$1$1(new A.Scrollable_ensureVisible_closure(), t1);
    },
    Scrollable_ensureVisible_closure: function Scrollable_ensureVisible_closure() {
    },
    Matrix4_tryInvert0(other) {
      var r = A.Matrix4$zero();
      if (r.copyInverse$1(other) === 0)
        return null;
      return r;
    },
    Matrix4$zero() {
      return new A.Matrix40(A.NativeFloat64List_NativeFloat64List(16));
    },
    Matrix4_Matrix4$identity() {
      var t1 = A.Matrix4$zero();
      t1.setIdentity$0();
      return t1;
    },
    Matrix4_Matrix4$copy0(other) {
      var t1 = A.Matrix4$zero();
      t1.setFrom$1(other);
      return t1;
    },
    Matrix4_Matrix4$translationValues0(x, y, z) {
      var t1 = A.Matrix4$zero();
      t1.setIdentity$0();
      t1.setTranslationRaw$3(x, y, z);
      return t1;
    },
    Matrix4_Matrix4$diagonal3Values(x, y, z) {
      var t1 = A.Matrix4$zero(),
        t2 = t1._vector_math_64$_m4storage,
        t3 = J.getInterceptor$ax(t2);
      t3.$indexSet(t2, 15, 1);
      t3.$indexSet(t2, 10, z);
      t3.$indexSet(t2, 5, y);
      t3.$indexSet(t2, 0, x);
      return t1;
    },
    Vector3_Vector3(x, y, z) {
      var t1 = A.Vector3$zero();
      t1.setValues$3(x, y, z);
      return t1;
    },
    Vector3$zero() {
      return new A.Vector3(A.NativeFloat64List_NativeFloat64List(3));
    },
    Vector3_Vector3$copy(other) {
      var t1 = A.Vector3$zero();
      t1.setFrom$1(other);
      return t1;
    },
    Vector4_Vector4(x, y, z, w) {
      var t1 = A.Vector4$zero();
      t1.setValues$4(x, y, z, w);
      return t1;
    },
    Vector4$zero() {
      return new A.Vector4(A.NativeFloat64List_NativeFloat64List(4));
    },
    Vector4_Vector4$copy(other) {
      var t1 = A.Vector4$zero();
      t1.setFrom$1(other);
      return t1;
    },
    Matrix40: function Matrix40(t0) {
      this._vector_math_64$_m4storage = t0;
    },
    Vector3: function Vector3(t0) {
      this._v3storage = t0;
    },
    Vector4: function Vector4(t0) {
      this._v4storage = t0;
    },
    BindingBase_checkInstance(instance, $T) {
      instance.toString;
      return instance;
    },
    FlutterTimeline_startSync($name, $arguments) {
      A.Timeline_startSync($name, $arguments, null);
    },
    FlutterTimeline_finishSync() {
      A.Timeline_finishSync();
    },
    GestureBinding_instance() {
      return A.BindingBase_checkInstance($.GestureBinding__instance, type$.GestureBinding);
    },
    PointerEvent_transformPosition(transform, position) {
      var transformed3;
      if (transform == null)
        return position;
      transformed3 = transform.perspectiveTransform$1(A.Vector3_Vector3(position.get$dx(), position.get$dy(), 0));
      return A.Offset$(transformed3.get$x(), transformed3.get$y());
    },
    PointerEvent_transformDeltaViaPositions(transform, transformedEndPosition, untransformedDelta, untransformedEndPosition) {
      if (transform == null)
        return untransformedDelta;
      if (transformedEndPosition == null)
        transformedEndPosition = A.PointerEvent_transformPosition(transform, untransformedEndPosition);
      return transformedEndPosition.$sub(0, A.PointerEvent_transformPosition(transform, untransformedEndPosition.$sub(0, untransformedDelta)));
    },
    PointerEvent_removePerspectiveTransform(transform) {
      var vector = A.Vector4_Vector4(0, 0, 1, 0),
        t1 = transform.clone$0();
      t1.setColumn$2(2, vector);
      t1.setRow$2(2, vector);
      return t1;
    },
    RendererBinding_instance() {
      return A.BindingBase_checkInstance($.RendererBinding__instance, type$.RendererBinding);
    },
    SemanticsBinding_instance() {
      return A.BindingBase_checkInstance($.SemanticsBinding__instance, type$.SemanticsBinding);
    },
    ServicesBinding_instance() {
      return A.BindingBase_checkInstance($.ServicesBinding__instance, type$.ServicesBinding);
    },
    View_pipelineOwnerOf(context) {
      var t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$._PipelineOwnerScope);
      t1 = t1 == null ? null : t1.pipelineOwner;
      return t1 == null ? A.RendererBinding_instance().get$rootPipelineOwner() : t1;
    },
    debugIsWidgetLocalCreation(widget) {
      A._getObjectCreationLocation(widget);
      return false;
    },
    _getObjectCreationLocation(object) {
      return null;
    },
    _ensureNativeList(list) {
      var t1, result, t2, i, t3;
      if (type$.JSIndexable_dynamic._is(list))
        return list;
      t1 = J.getInterceptor$asx(list);
      result = B.List_List$filled(t1.get$length(list), null, false, type$.dynamic);
      t2 = J.getInterceptor$ax(result);
      i = 0;
      while (true) {
        t3 = t1.get$length(list);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i < t3))
          break;
        t2.$indexSet(result, i, t1.$index(list, i));
        ++i;
      }
      return result;
    },
    NativeByteData_NativeByteData($length) {
      return A.NativeByteData__create1(B._checkLength($length));
    },
    NativeByteData__create1(arg) {
      return new DataView(new ArrayBuffer(arg));
    },
    NativeFloat32List_NativeFloat32List($length) {
      return A.NativeFloat32List__createLength(B._checkLength($length));
    },
    NativeFloat32List_NativeFloat32List$fromList(elements) {
      return B.NativeFloat32List__create1(A._ensureNativeList(elements));
    },
    NativeFloat32List__createLength(arg) {
      return new Float32Array(arg);
    },
    NativeFloat64List_NativeFloat64List($length) {
      return A.NativeFloat64List__createLength(B._checkLength($length));
    },
    NativeFloat64List__createLength(arg) {
      return new Float64Array(arg);
    },
    NativeInt32List_NativeInt32List($length) {
      return A.NativeInt32List__createLength(B._checkLength($length));
    },
    NativeInt32List_NativeInt32List$fromList(elements) {
      return B.NativeInt32List__create1(A._ensureNativeList(elements));
    },
    NativeInt32List__createLength(arg) {
      return new Int32Array(arg);
    },
    NativeInt8List_NativeInt8List$fromList(elements) {
      return B.NativeInt8List__create1(A._ensureNativeList(elements));
    },
    NativeUint16List_NativeUint16List$fromList(list) {
      return B.NativeUint16List__create1(A._ensureNativeList(list));
    },
    NativeUint32List_NativeUint32List($length) {
      return A.NativeUint32List__createLength(B._checkLength($length));
    },
    NativeUint32List_NativeUint32List$fromList(elements) {
      return B.NativeUint32List__create1(A._ensureNativeList(elements));
    },
    NativeUint32List__createLength(arg) {
      return new Uint32Array(arg);
    },
    ExternalDartReferenceToObject_get_toDartObject(_this, $T) {
      return _this;
    },
    ObjectToExternalDartReference_get_toExternalReference(_this, $T) {
      return A.ExternalDartReference_constructor__(_this, $T);
    },
    JSPromiseToFuture_get_toDart(_this, $T) {
      return A.promiseToFuture(_this, $T);
    },
    ByteBufferToJSArrayBuffer_get_toJS(_this) {
      return _this;
    },
    JSUint8ArrayToUint8List_get_toDart(_this) {
      return _this;
    },
    Uint8ListToJSUint8Array_get_toJS(_this) {
      return _this;
    },
    JSUint16ArrayToInt16List_get_toDart(_this) {
      return _this;
    },
    Uint32ListToJSUint32Array_get_toJS(_this) {
      return _this;
    },
    JSFloat32ArrayToFloat32List_get_toDart(_this) {
      return _this;
    },
    Float32ListToJSFloat32Array_get_toJS(_this) {
      return _this;
    },
    JSArrayToList_get_toDart(_this, $T) {
      return $T._eval$1("List<0>")._is(_this) ? _this : D.JSArray_methods.cast$1$0(_this, $T);
    },
    ListToJSArray_get_toJS(_this, $T) {
      return type$.JSArray_nullable_Object._as(_this);
    },
    JSNumberToNumber_get_toDartDouble(_this) {
      return _this;
    },
    JSNumberToNumber_get_toDartInt(_this) {
      return B._asInt(_this);
    },
    DoubleToJSNumber_get_toJS(_this) {
      return A.JSNumber_constructor__(_this);
    },
    JSBooleanToBool_get_toDart(_this) {
      return _this;
    },
    JSStringToString_get_toDart(_this) {
      return _this;
    },
    importModule(moduleName) {
      return import(moduleName);
    },
    JSNumber_constructor__(_jsNumber) {
      return _jsNumber;
    },
    ExternalDartReference_constructor__(_externalDartReference, $T) {
      return _externalDartReference;
    },
    NumToJSExtension_get_toJS(_this) {
      return A.DoubleToJSNumber_get_toJS(D.JSNumber_methods.toDouble$0(_this));
    },
    min(a, b, $T) {
      return Math.min(A.checkNum(a), A.checkNum(b));
    },
    max(a, b, $T) {
      return Math.max(A.checkNum(a), A.checkNum(b));
    },
    sqrt(x) {
      return Math.sqrt(x);
    },
    atan2(a, b) {
      return Math.atan2(a, b);
    },
    exp(x) {
      return Math.exp(x);
    },
    pow(x, exponent) {
      return Math.pow(x, exponent);
    },
    ByteData_ByteData$view(buffer) {
      return D.NativeByteBuffer_methods.asByteData$2(buffer, 0, null);
    },
    ByteData_ByteData$sublistView(data) {
      var end,
        t1 = J.getInterceptor$x(data),
        elementSize = t1.get$elementSizeInBytes(data),
        t2 = t1.get$lengthInBytes(data);
      if (typeof t2 !== "number")
        return t2.$tdiv();
      end = B.RangeError_checkValidRange(0, null, D.JSNumber_methods.$tdiv(t2, elementSize), null, null);
      t2 = t1.get$buffer(data);
      t1 = t1.get$offsetInBytes(data);
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof end !== "number")
        return end.$sub();
      return J.asByteData$2$x(t2, t1 + 0 * elementSize, end * elementSize);
    },
    Uint8List_Uint8List$view(buffer, offsetInBytes, $length) {
      return D.NativeByteBuffer_methods.asUint8List$2(buffer, offsetInBytes, $length);
    },
    Uint8List_Uint8List$sublistView(data, start, end) {
      var t1 = J.getInterceptor$x(data),
        elementSize = t1.get$elementSizeInBytes(data),
        t2 = t1.get$lengthInBytes(data);
      if (typeof t2 !== "number")
        return t2.$tdiv();
      end = B.RangeError_checkValidRange(start, end, D.JSNumber_methods.$tdiv(t2, elementSize), null, null);
      t2 = t1.get$buffer(data);
      t1 = t1.get$offsetInBytes(data);
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof end !== "number")
        return end.$sub();
      return J.asUint8List$2$x(t2, t1 + start * elementSize, (end - start) * elementSize);
    },
    compute0(callback, message, debugLabel, $M, $R) {
      return A.compute$body(callback, message, debugLabel, $M, $R, $R);
    },
    compute$body(callback, message, debugLabel, $M, $R, $async$type) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter($async$type),
        $async$returnValue;
      var $async$compute0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return B._asyncAwait(A._wrapAwaitedExpression(null, type$.Null), $async$compute0);
            case 3:
              // returning from await.
              $async$returnValue = callback.call$1(message);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$compute0, $async$completer);
    },
    defaultTargetPlatform0() {
      var t1 = A.debugDefaultTargetPlatformOverride();
      if (t1 == null)
        t1 = A._testPlatform();
      return t1 == null ? $.$get$_browserPlatform() : t1;
    },
    _testPlatform() {
      return null;
    },
    _operatingSystemToTargetPlatform(os) {
      var t1;
      switch (os.index) {
        case 1:
          t1 = C.TargetPlatform_0;
          break;
        case 0:
          t1 = C.TargetPlatform_2;
          break;
        case 2:
          t1 = C.TargetPlatform_3;
          break;
        case 4:
          t1 = C.TargetPlatform_4;
          break;
        case 3:
          t1 = C.TargetPlatform_5;
          break;
        case 5:
          t1 = C.TargetPlatform_0;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    debugFormatDouble(value) {
      if (value == null)
        return "null";
      return D.JSNumber_methods.toStringAsFixed$1(value, 1);
    },
    compute(callback, message, debugLabel, $M, $R) {
      return A.compute0(callback, message, debugLabel, $M, $R);
    },
    objectRuntimeType(object, optimizedValue) {
      return optimizedValue;
    },
    debugWidgetBuilderValue(widget, built) {
    }
  },
  C, F, E;
  J = holdersList[1];
  B = holdersList[0];
  D = holdersList[2];
  A = hunkHelpers.updateHolder(holdersList[9], A);
  C = holdersList[14];
  F = holdersList[11];
  E = holdersList[12];
  A.AlarmClock.prototype = {
    set$datetime(value) {
      var now, _this = this;
      type$.nullable_DateTime._as(value);
      if (B.boolConversionCheck(J.$eq$(value, _this._datetime)))
        return;
      if (value == null) {
        _this._cancelTimer$0();
        _this._datetime = null;
        return;
      }
      now = _this._timestampFunction.call$0();
      if (B.boolConversionCheck(value.isBefore$1(now))) {
        _this._cancelTimer$0();
        _this._datetime = value;
        return;
      }
      if (_this._timer == null)
        _this.set$_timer(A.Timer_Timer(value.difference$1(now), _this.get$_timerDidFire()));
      else if (B.boolConversionCheck(_this._datetime.isAfter$1(value))) {
        _this._cancelTimer$0();
        _this.set$_timer(A.Timer_Timer(value.difference$1(now), _this.get$_timerDidFire()));
      }
      _this._datetime = value;
    },
    _cancelTimer$0() {
      var t1 = this._timer;
      if (t1 != null)
        t1.cancel$0();
      this._timer = null;
    },
    _timerDidFire$0() {
      var _this = this,
        now = _this._timestampFunction.call$0(),
        t1 = _this._datetime;
      t1.toString;
      if (!B.boolConversionCheck(now.isBefore$1(t1))) {
        _this._timer = null;
        t1 = _this.callback;
        if (t1 != null)
          t1.call$0();
      } else
        _this.set$_timer(A.Timer_Timer(_this._datetime.difference$1(now), _this.get$_timerDidFire()));
    },
    set$_timer(_timer) {
      this._timer = type$.nullable_Timer._as(_timer);
    },
    set$callback(callback) {
      this.callback = type$.nullable_void_Function._as(callback);
    }
  };
  A.CanvasPool.prototype = {
    mount$1(rootElement) {
      this._rootElement = type$.JavaScriptObject._as(rootElement);
    },
    set$initialTransform(transform) {
      type$.Offset._as(transform);
      this.translate$2(transform.get$dx(), transform.get$dy());
    },
    get$context() {
      var ctx = this._context;
      if (ctx == null) {
        this._createCanvas$0();
        ctx = this._context;
      }
      ctx.toString;
      return ctx;
    },
    get$contextHandle() {
      if (this.__engine$_canvas == null)
        this._createCanvas$0();
      var t1 = this._contextHandle;
      t1.toString;
      return t1;
    },
    get$hasCanvas() {
      return this.__engine$_canvas != null;
    },
    closeCanvas$0() {
      var t1, t2, _this = this;
      if (_this.__engine$_canvas != null) {
        _this._restoreContextSave$0();
        _this._contextHandle.reset$0();
        if (_this._activeCanvasList == null)
          _this.set$_activeCanvasList(B._setArrayType([], type$.JSArray_JavaScriptObject));
        t1 = _this._activeCanvasList;
        t1.toString;
        t2 = _this.__engine$_canvas;
        t2.toString;
        J.add$1$ax(t1, t2);
        _this._contextHandle = _this._context = _this.__engine$_canvas = null;
      }
    },
    _createCanvas$0() {
      var requiresClearRect, canvas0, t2, t3, t4, t5, exception, _this = this,
        reused = false,
        canvas = null,
        t1 = _this.__engine$_canvas;
      if (t1 != null) {
        A.DomCanvasElementExtension_set_width(t1, 0);
        A.DomCanvasElementExtension_set_height(t1, 0);
        _this.__engine$_canvas = null;
      }
      t1 = _this._reusablePool;
      requiresClearRect = t1 != null && B.boolConversionCheck(J.get$isNotEmpty$asx(t1));
      if (requiresClearRect) {
        t1 = _this._reusablePool;
        t1.toString;
        canvas0 = J.removeAt$1$ax(t1, 0);
        _this.set$__engine$_canvas(canvas0);
        canvas = canvas0;
        reused = true;
      } else {
        t1 = _this._widthInBitmapPixels;
        t2 = A.EngineFlutterDisplay_instance().get$browserDevicePixelRatio();
        if (typeof t1 !== "number")
          return t1.$div();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t3 = _this._heightInBitmapPixels;
        t4 = A.EngineFlutterDisplay_instance().get$browserDevicePixelRatio();
        if (typeof t3 !== "number")
          return t3.$div();
        if (typeof t4 !== "number")
          return B.iae(t4);
        canvas = _this._allocCanvas$2(t1, t3);
        _this.set$__engine$_canvas(canvas);
        if (_this.__engine$_canvas == null) {
          A.reduceCanvasMemoryUsage();
          canvas = _this._allocCanvas$2(t1, t3);
        }
        t5 = canvas;
        t5.toString;
        t5 = B.getProperty(t5, "style", type$.JavaScriptObject);
        A.DomCSSStyleDeclarationExtension_set_position(t5, "absolute");
        A.DomCSSStyleDeclarationExtension_set_width(t5, B.S(t1 / t2) + "px");
        A.DomCSSStyleDeclarationExtension_set_height(t5, B.S(t3 / t4) + "px");
      }
      t1 = _this._rootElement;
      t1.toString;
      if (!B.boolConversionCheck(J.$eq$(B.getProperty(t1, "lastChild", type$.nullable_JavaScriptObject), canvas))) {
        t1 = _this._rootElement;
        t1.toString;
        B._callMethodUnchecked1(t1, "append", canvas, type$.void);
      }
      try {
        if (B.boolConversionCheck(reused))
          A.DomCSSStyleDeclarationExtension_removeProperty(B.getProperty(canvas, "style", type$.JavaScriptObject), "z-index");
        _this.set$_context(A.DomCanvasElementExtension_get_context2D(canvas));
      } catch (exception) {
      }
      if (_this._context == null) {
        A.reduceCanvasMemoryUsage();
        _this.set$_context(A.DomCanvasElementExtension_get_context2D(canvas));
      }
      t1 = _this._context;
      if (t1 == null) {
        t1 = _this.__engine$_canvas;
        t2 = t1 == null;
        if (!t2)
          A.DomCanvasElementExtension_set_width(t1, 0);
        if (!t2)
          A.DomCanvasElementExtension_set_height(t1, 0);
        _this.__engine$_canvas = null;
        return;
      }
      _this._contextHandle = A.ContextStateHandle$(_this, t1, _this._density);
      _this._initializeViewport$1(requiresClearRect);
      _this._replayClipStack$0();
    },
    _allocCanvas$2(width, height) {
      var t1;
      B._asInt(width);
      B._asInt(height);
      t1 = this._density;
      if (typeof t1 !== "number")
        return B.iae(t1);
      return A.tryCreateCanvasElement(D.JSNumber_methods.ceil$0(width * t1), D.JSNumber_methods.ceil$0(height * t1));
    },
    clear$0(_) {
      var ctx, e, exception, _this = this;
      _this.super$_SaveStackTracking$clear(0);
      if (_this.__engine$_canvas != null) {
        ctx = _this._context;
        if (ctx != null)
          try {
            A.DomCanvasRenderingContext2DExtension_set_font(ctx, "");
          } catch (exception) {
            e = B.unwrapException(exception);
            if (!B.boolConversionCheck(A.isNsErrorFailureException(e)))
              throw exception;
          }
      }
      _this.reuse$0();
    },
    _replaySingleSaveEntry$4(clipDepth, prevTransform, transform, clipStack) {
      var t1, ctx, clipCount, t2, clipEntry, clipTimeTransform, ratio, t3, _this = this;
      B._asInt(clipDepth);
      t1 = type$.Matrix4;
      t1._as(prevTransform);
      t1._as(transform);
      type$.nullable_List_SaveClipEntry._as(clipStack);
      ctx = _this.get$context();
      if (clipStack != null)
        for (t1 = J.getInterceptor$asx(clipStack), clipCount = t1.get$length(clipStack), t2 = type$.SurfacePath; clipDepth < clipCount; ++clipDepth) {
          clipEntry = t1.$index(clipStack, clipDepth);
          clipTimeTransform = clipEntry.currentTransform;
          if (!B.boolConversionCheck(J.$eq$(clipTimeTransform.$index(0, 0), prevTransform.$index(0, 0))) || !B.boolConversionCheck(J.$eq$(clipTimeTransform.$index(0, 1), prevTransform.$index(0, 1))) || !B.boolConversionCheck(J.$eq$(clipTimeTransform.$index(0, 4), prevTransform.$index(0, 4))) || !B.boolConversionCheck(J.$eq$(clipTimeTransform.$index(0, 5), prevTransform.$index(0, 5))) || !B.boolConversionCheck(J.$eq$(clipTimeTransform.$index(0, 12), prevTransform.$index(0, 12))) || !B.boolConversionCheck(J.$eq$(clipTimeTransform.$index(0, 13), prevTransform.$index(0, 13)))) {
            ratio = _this.get$dpi();
            A.DomCanvasRenderingContext2DExtension_setTransform(ctx, ratio, 0, 0, ratio, 0, 0);
            A.DomCanvasRenderingContext2DExtension_transform(ctx, clipTimeTransform.$index(0, 0), clipTimeTransform.$index(0, 1), clipTimeTransform.$index(0, 4), clipTimeTransform.$index(0, 5), clipTimeTransform.$index(0, 12), clipTimeTransform.$index(0, 13));
            prevTransform = clipTimeTransform;
          }
          t3 = clipEntry.rect;
          if (t3 != null)
            _this._clipRect$2(ctx, t3);
          else {
            t3 = clipEntry.rrect;
            if (t3 != null)
              _this._clipRRect$2(ctx, t3);
            else {
              t3 = clipEntry.path;
              if (t3 != null) {
                t2._as(t3);
                _this._runPath$2(ctx, t3);
                if (B.boolConversionCheck(J.$eq$(t3.get$fillType(), C.PathFillType_0)))
                  A.DomCanvasRenderingContext2DExtension_clip(ctx, null);
                else
                  A.DomCanvasRenderingContext2DExtension_clip(ctx, "evenodd");
              }
            }
          }
        }
      if (!B.boolConversionCheck(J.$eq$(transform.$index(0, 0), prevTransform.$index(0, 0))) || !B.boolConversionCheck(J.$eq$(transform.$index(0, 1), prevTransform.$index(0, 1))) || !B.boolConversionCheck(J.$eq$(transform.$index(0, 4), prevTransform.$index(0, 4))) || !B.boolConversionCheck(J.$eq$(transform.$index(0, 5), prevTransform.$index(0, 5))) || !B.boolConversionCheck(J.$eq$(transform.$index(0, 12), prevTransform.$index(0, 12))) || !B.boolConversionCheck(J.$eq$(transform.$index(0, 13), prevTransform.$index(0, 13)))) {
        ratio = _this.get$dpi();
        A.DomCanvasRenderingContext2DExtension_setTransform(ctx, ratio, 0, 0, ratio, 0, 0);
        A.DomCanvasRenderingContext2DExtension_transform(ctx, transform.$index(0, 0), transform.$index(0, 1), transform.$index(0, 4), transform.$index(0, 5), transform.$index(0, 12), transform.$index(0, 13));
      }
      return clipDepth;
    },
    _replayClipStack$0() {
      var t3, clipDepth, saveStackIndex, saveEntry, prevTransform0, t4, _this = this,
        ctx = _this.get$context(),
        prevTransform = A.Matrix4$identity(),
        t1 = _this._saveStack,
        t2 = J.getInterceptor$asx(t1),
        len = t2.get$length(t1);
      for (t3 = type$.void, clipDepth = 0, saveStackIndex = 0; saveStackIndex < len; ++saveStackIndex, prevTransform = prevTransform0) {
        saveEntry = t2.$index(t1, saveStackIndex);
        prevTransform0 = saveEntry.transform;
        clipDepth = _this._replaySingleSaveEntry$4(clipDepth, prevTransform, prevTransform0, saveEntry.clipStack);
        B._callMethodUnchecked0(ctx, "save", t3);
        t4 = _this._saveContextCount;
        if (typeof t4 !== "number")
          return t4.$add();
        _this.set$_saveContextCount(t4 + 1);
      }
      _this._replaySingleSaveEntry$4(clipDepth, prevTransform, _this._currentTransform, _this.clipStack);
    },
    reuse$0() {
      var t1, t2, _this = this;
      if (_this.__engine$_canvas != null) {
        _this._restoreContextSave$0();
        _this._contextHandle.reset$0();
        if (_this._activeCanvasList == null)
          _this.set$_activeCanvasList(B._setArrayType([], type$.JSArray_JavaScriptObject));
        t1 = _this._activeCanvasList;
        t1.toString;
        t2 = _this.__engine$_canvas;
        t2.toString;
        J.add$1$ax(t1, t2);
        _this._contextHandle = _this._context = null;
      }
      _this.set$_reusablePool(_this._activeCanvasList);
      _this.set$_activeCanvasList(null);
      _this._contextHandle = _this._context = _this.__engine$_canvas = null;
      _this._resetTransform$0();
    },
    endOfPaint$0() {
      var t2, t3,
        t1 = this._reusablePool;
      if (t1 != null) {
        for (t1 = J.get$iterator$ax(t1), t2 = type$.void; B.boolConversionCheck(t1.moveNext$0());) {
          t3 = t1.get$current();
          if (B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_1))) {
            A.DomCanvasElementExtension_set_height(t3, 0);
            A.DomCanvasElementExtension_set_width(t3, 0);
          }
          B._callMethodUnchecked0(t3, "remove", t2);
        }
        this.set$_reusablePool(null);
      }
      this._restoreContextSave$0();
    },
    _restoreContextSave$0() {
      var t1, t2, _this = this;
      for (t1 = type$.void; !B.boolConversionCheck(J.$eq$(_this._saveContextCount, 0));) {
        t2 = _this._context;
        t2.toString;
        B._callMethodUnchecked0(t2, "restore", t1);
        t2 = _this._saveContextCount;
        if (typeof t2 !== "number")
          return t2.$sub();
        _this.set$_saveContextCount(t2 - 1);
      }
    },
    _initializeViewport$1(clearCanvas) {
      var ctx, t1, t2, t3, _this = this;
      B._asBool(clearCanvas);
      ctx = _this.get$context();
      B._callMethodUnchecked0(ctx, "save", type$.void);
      t1 = _this._saveContextCount;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_saveContextCount(t1 + 1);
      A.DomCanvasRenderingContext2DExtension_setTransform(ctx, 1, 0, 0, 1, 0, 0);
      if (clearCanvas) {
        t1 = _this._widthInBitmapPixels;
        t2 = _this._density;
        if (typeof t1 !== "number")
          return t1.$mul();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t3 = _this._heightInBitmapPixels;
        if (typeof t3 !== "number")
          return t3.$mul();
        A.DomCanvasRenderingContext2DExtension_clearRect(ctx, 0, 0, t1 * t2, t3 * t2);
      }
      A.DomCanvasRenderingContext2DExtension_scale(ctx, _this.get$dpi(), _this.get$dpi());
    },
    get$dpi() {
      var t1 = A.EngineFlutterDisplay_instance().get$browserDevicePixelRatio(),
        t2 = this._density;
      if (typeof t1 !== "number")
        return t1.$mul();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 * t2;
    },
    _resetTransform$0() {
      var t1,
        canvas = this.__engine$_canvas;
      if (canvas != null) {
        t1 = type$.JavaScriptObject;
        A.DomCSSStyleDeclarationExtension_set_transformOrigin(B.getProperty(canvas, "style", t1), "");
        A.DomCSSStyleDeclarationExtension_set_transform(B.getProperty(canvas, "style", t1), "");
      }
    },
    save$0() {
      var t1, _this = this;
      _this.super$_SaveStackTracking$save();
      if (_this.__engine$_canvas != null) {
        B._callMethodUnchecked0(_this.get$context(), "save", type$.void);
        t1 = _this._saveContextCount;
        if (typeof t1 !== "number")
          return t1.$add();
        _this.set$_saveContextCount(t1 + 1);
      }
    },
    restore$0() {
      var t1, _this = this;
      _this.super$_SaveStackTracking$restore();
      if (_this.__engine$_canvas != null) {
        B._callMethodUnchecked0(_this.get$context(), "restore", type$.void);
        _this.get$contextHandle().reset$0();
        t1 = _this._saveContextCount;
        if (typeof t1 !== "number")
          return t1.$sub();
        _this.set$_saveContextCount(t1 - 1);
      }
    },
    translate$2(dx, dy) {
      B._asDouble(dx);
      B._asDouble(dy);
      this.super$_SaveStackTracking$translate(dx, dy);
      if (this.__engine$_canvas != null)
        A.DomCanvasRenderingContext2DExtension_translate(this.get$context(), dx, dy);
    },
    scale$2(sx, sy) {
      B._asDouble(sx);
      B._asDouble(sy);
      this.super$_SaveStackTracking$scale(sx, sy);
      if (this.__engine$_canvas != null)
        A.DomCanvasRenderingContext2DExtension_scale(this.get$context(), sx, sy);
    },
    transform$1(matrix4) {
      var t1, t2, t3, t4, t5, t6, t7;
      type$.Float32List._as(matrix4);
      this.super$_SaveStackTracking$transform(matrix4);
      if (this.__engine$_canvas != null) {
        t1 = this.get$context();
        t2 = matrix4.length;
        if (0 >= t2)
          return B.ioore(matrix4, 0);
        t3 = matrix4[0];
        if (1 >= t2)
          return B.ioore(matrix4, 1);
        t4 = matrix4[1];
        if (4 >= t2)
          return B.ioore(matrix4, 4);
        t5 = matrix4[4];
        if (5 >= t2)
          return B.ioore(matrix4, 5);
        t6 = matrix4[5];
        if (12 >= t2)
          return B.ioore(matrix4, 12);
        t7 = matrix4[12];
        if (13 >= t2)
          return B.ioore(matrix4, 13);
        A.DomCanvasRenderingContext2DExtension_transform(t1, t3, t4, t5, t6, t7, matrix4[13]);
      }
    },
    clipRect$1(rect) {
      var _this = this;
      type$.Rect._as(rect);
      _this.super$_SaveStackTracking$clipRect(rect);
      if (_this.__engine$_canvas != null)
        _this._clipRect$2(_this.get$context(), rect);
    },
    _clipRect$2(ctx, rect) {
      type$.JavaScriptObject._as(ctx);
      type$.Rect._as(rect);
      B._callMethodUnchecked0(ctx, "beginPath", type$.void);
      A.DomCanvasRenderingContext2DExtension_rect(ctx, rect.left, rect.top, rect.get$width(), rect.get$height());
      A.DomCanvasRenderingContext2DExtension_clip(ctx, null);
    },
    clipRRect$1(rrect) {
      var _this = this;
      type$.RRect._as(rrect);
      _this.super$_SaveStackTracking$clipRRect(rrect);
      if (_this.__engine$_canvas != null)
        _this._clipRRect$2(_this.get$context(), rrect);
    },
    _clipRRect$2(ctx, rrect) {
      var path;
      type$.JavaScriptObject._as(ctx);
      type$.RRect._as(rrect);
      path = A.Path_Path();
      path.addRRect$1(rrect);
      this._runPath$2(ctx, type$.SurfacePath._as(path));
      A.DomCanvasRenderingContext2DExtension_clip(ctx, null);
    },
    clipPath$1(path) {
      var ctx, _this = this;
      type$.Path._as(path);
      _this.super$_SaveStackTracking$clipPath(path);
      if (_this.__engine$_canvas != null) {
        ctx = _this.get$context();
        type$.SurfacePath._as(path);
        _this._runPath$2(ctx, path);
        if (B.boolConversionCheck(J.$eq$(path.get$fillType(), C.PathFillType_0)))
          A.DomCanvasRenderingContext2DExtension_clip(ctx, null);
        else
          A.DomCanvasRenderingContext2DExtension_clip(ctx, "evenodd");
      }
    },
    fill$0() {
      var ctx = this.get$context();
      B._callMethodUnchecked0(ctx, "beginPath", type$.void);
      A.DomCanvasRenderingContext2DExtension_fillRect(ctx, -10000, -10000, 20000, 20000);
    },
    _runPath$2(ctx, path) {
      var t1, p, iter, t2, verb, t3, t4, t5, t6, t7, w, points, len, i;
      type$.JavaScriptObject._as(ctx);
      type$.SurfacePath._as(path);
      t1 = type$.void;
      B._callMethodUnchecked0(ctx, "beginPath", t1);
      p = $.$get$CanvasPool__runBuffer();
      iter = A.PathRefIterator$(path.pathRef);
      for (t2 = p.length; verb = iter.next$1(p), verb !== 6;)
        switch (verb) {
          case 0:
            if (0 >= t2)
              return B.ioore(p, 0);
            t3 = p[0];
            if (1 >= t2)
              return B.ioore(p, 1);
            A.DomCanvasRenderingContext2DExtension_moveTo(ctx, t3, p[1]);
            break;
          case 1:
            if (2 >= t2)
              return B.ioore(p, 2);
            t3 = p[2];
            if (3 >= t2)
              return B.ioore(p, 3);
            A.DomCanvasRenderingContext2DExtension_lineTo(ctx, t3, p[3]);
            break;
          case 4:
            if (2 >= t2)
              return B.ioore(p, 2);
            t3 = p[2];
            if (3 >= t2)
              return B.ioore(p, 3);
            t4 = p[3];
            if (4 >= t2)
              return B.ioore(p, 4);
            t5 = p[4];
            if (5 >= t2)
              return B.ioore(p, 5);
            t6 = p[5];
            if (6 >= t2)
              return B.ioore(p, 6);
            t7 = p[6];
            if (7 >= t2)
              return B.ioore(p, 7);
            A.DomCanvasRenderingContext2DExtension_bezierCurveTo(ctx, t3, t4, t5, t6, t7, p[7]);
            break;
          case 2:
            if (2 >= t2)
              return B.ioore(p, 2);
            t3 = p[2];
            if (3 >= t2)
              return B.ioore(p, 3);
            t4 = p[3];
            if (4 >= t2)
              return B.ioore(p, 4);
            t5 = p[4];
            if (5 >= t2)
              return B.ioore(p, 5);
            A.DomCanvasRenderingContext2DExtension_quadraticCurveTo(ctx, t3, t4, t5, p[5]);
            break;
          case 3:
            w = iter.get$conicWeight();
            if (0 >= t2)
              return B.ioore(p, 0);
            t3 = p[0];
            if (1 >= t2)
              return B.ioore(p, 1);
            t4 = p[1];
            if (2 >= t2)
              return B.ioore(p, 2);
            t5 = p[2];
            if (3 >= t2)
              return B.ioore(p, 3);
            t6 = p[3];
            if (4 >= t2)
              return B.ioore(p, 4);
            t7 = p[4];
            if (5 >= t2)
              return B.ioore(p, 5);
            points = A.Conic$(t3, t4, t5, t6, t7, p[5], w).toQuads$0();
            t7 = J.getInterceptor$asx(points);
            len = t7.get$length(points);
            for (i = 1; i < len; i += 2) {
              t3 = i + 1;
              A.DomCanvasRenderingContext2DExtension_quadraticCurveTo(ctx, t7.$index(points, i).get$dx(), t7.$index(points, i).get$dy(), t7.$index(points, t3).get$dx(), t7.$index(points, t3).get$dy());
            }
            break;
          case 5:
            B._callMethodUnchecked0(ctx, "closePath", t1);
            break;
          default:
            throw B.wrapException(B.UnimplementedError$("Unknown path verb " + B.S(verb)));
        }
    },
    drawRect$2(rect, style) {
      var shaderBounds, t1, t2, t3, t4, t5, _this = this;
      type$.Rect._as(rect);
      type$.nullable_PaintingStyle._as(style);
      B._callMethodUnchecked0(_this.get$context(), "beginPath", type$.void);
      shaderBounds = _this.get$contextHandle()._shaderBounds;
      t1 = rect.left;
      t2 = rect.top;
      if (shaderBounds == null)
        A.DomCanvasRenderingContext2DExtension_rect(_this.get$context(), t1, t2, rect.get$width(), rect.get$height());
      else {
        t3 = _this.get$context();
        t4 = shaderBounds.left;
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t4 !== "number")
          return B.iae(t4);
        t5 = shaderBounds.top;
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t5 !== "number")
          return B.iae(t5);
        A.DomCanvasRenderingContext2DExtension_rect(t3, t1 - t4, t2 - t5, rect.get$width(), rect.get$height());
      }
      _this.get$contextHandle().paint$1(style);
    },
    _runPathWithOffset$4(ctx, path, offsetX, offsetY) {
      var t1, p, iter, t2, verb, t3, t4, t5, t6, t7, t8, w, points, len, i;
      type$.JavaScriptObject._as(ctx);
      type$.SurfacePath._as(path);
      B._asDouble(offsetX);
      B._asDouble(offsetY);
      t1 = type$.void;
      B._callMethodUnchecked0(ctx, "beginPath", t1);
      p = $.$get$CanvasPool__runBuffer();
      iter = A.PathRefIterator$(path.pathRef);
      for (t2 = p.length; verb = iter.next$1(p), verb !== 6;)
        switch (verb) {
          case 0:
            if (0 >= t2)
              return B.ioore(p, 0);
            t3 = p[0];
            if (typeof t3 !== "number")
              return t3.$add();
            if (1 >= t2)
              return B.ioore(p, 1);
            t4 = p[1];
            if (typeof t4 !== "number")
              return t4.$add();
            A.DomCanvasRenderingContext2DExtension_moveTo(ctx, t3 + offsetX, t4 + offsetY);
            break;
          case 1:
            if (2 >= t2)
              return B.ioore(p, 2);
            t3 = p[2];
            if (typeof t3 !== "number")
              return t3.$add();
            if (3 >= t2)
              return B.ioore(p, 3);
            t4 = p[3];
            if (typeof t4 !== "number")
              return t4.$add();
            A.DomCanvasRenderingContext2DExtension_lineTo(ctx, t3 + offsetX, t4 + offsetY);
            break;
          case 4:
            if (2 >= t2)
              return B.ioore(p, 2);
            t3 = p[2];
            if (typeof t3 !== "number")
              return t3.$add();
            if (3 >= t2)
              return B.ioore(p, 3);
            t4 = p[3];
            if (typeof t4 !== "number")
              return t4.$add();
            if (4 >= t2)
              return B.ioore(p, 4);
            t5 = p[4];
            if (typeof t5 !== "number")
              return t5.$add();
            if (5 >= t2)
              return B.ioore(p, 5);
            t6 = p[5];
            if (typeof t6 !== "number")
              return t6.$add();
            if (6 >= t2)
              return B.ioore(p, 6);
            t7 = p[6];
            if (typeof t7 !== "number")
              return t7.$add();
            if (7 >= t2)
              return B.ioore(p, 7);
            t8 = p[7];
            if (typeof t8 !== "number")
              return t8.$add();
            A.DomCanvasRenderingContext2DExtension_bezierCurveTo(ctx, t3 + offsetX, t4 + offsetY, t5 + offsetX, t6 + offsetY, t7 + offsetX, t8 + offsetY);
            break;
          case 2:
            if (2 >= t2)
              return B.ioore(p, 2);
            t3 = p[2];
            if (typeof t3 !== "number")
              return t3.$add();
            if (3 >= t2)
              return B.ioore(p, 3);
            t4 = p[3];
            if (typeof t4 !== "number")
              return t4.$add();
            if (4 >= t2)
              return B.ioore(p, 4);
            t5 = p[4];
            if (typeof t5 !== "number")
              return t5.$add();
            if (5 >= t2)
              return B.ioore(p, 5);
            t6 = p[5];
            if (typeof t6 !== "number")
              return t6.$add();
            A.DomCanvasRenderingContext2DExtension_quadraticCurveTo(ctx, t3 + offsetX, t4 + offsetY, t5 + offsetX, t6 + offsetY);
            break;
          case 3:
            w = iter.get$conicWeight();
            if (0 >= t2)
              return B.ioore(p, 0);
            t3 = p[0];
            if (1 >= t2)
              return B.ioore(p, 1);
            t4 = p[1];
            if (2 >= t2)
              return B.ioore(p, 2);
            t5 = p[2];
            if (3 >= t2)
              return B.ioore(p, 3);
            t6 = p[3];
            if (4 >= t2)
              return B.ioore(p, 4);
            t7 = p[4];
            if (5 >= t2)
              return B.ioore(p, 5);
            points = A.Conic$(t3, t4, t5, t6, t7, p[5], w).toQuads$0();
            t7 = J.getInterceptor$asx(points);
            len = t7.get$length(points);
            for (i = 1; i < len; i += 2) {
              t3 = i + 1;
              A.DomCanvasRenderingContext2DExtension_quadraticCurveTo(ctx, t7.$index(points, i).get$dx() + offsetX, t7.$index(points, i).get$dy() + offsetY, t7.$index(points, t3).get$dx() + offsetX, t7.$index(points, t3).get$dy() + offsetY);
            }
            break;
          case 5:
            B._callMethodUnchecked0(ctx, "closePath", t1);
            break;
          default:
            throw B.wrapException(B.UnimplementedError$("Unknown path verb " + B.S(verb)));
        }
    },
    drawRRect$2(roundRect, style) {
      var shaderBounds, t1;
      type$.RRect._as(roundRect);
      type$.nullable_PaintingStyle._as(style);
      shaderBounds = this.get$contextHandle()._shaderBounds;
      t1 = A.RRectToCanvasRenderer$(this.get$context());
      t1.render$1(shaderBounds == null ? roundRect : roundRect.shift$1(A.Offset$(J.$negate$in(shaderBounds.left), J.$negate$in(shaderBounds.top))));
      this.get$contextHandle().paint$1(style);
    },
    drawOval$2(rect, style) {
      var shaderBounds, t1, cx, t2, t3, cy, _this = this;
      type$.Rect._as(rect);
      type$.nullable_PaintingStyle._as(style);
      B._callMethodUnchecked0(_this.get$context(), "beginPath", type$.void);
      shaderBounds = _this.get$contextHandle()._shaderBounds;
      t1 = shaderBounds == null;
      if (t1)
        cx = rect.get$center().get$dx();
      else {
        t2 = rect.get$center().get$dx();
        t3 = shaderBounds.left;
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t3 !== "number")
          return B.iae(t3);
        cx = t2 - t3;
      }
      if (t1)
        cy = rect.get$center().get$dy();
      else {
        t1 = rect.get$center().get$dy();
        t2 = shaderBounds.top;
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return B.iae(t2);
        cy = t1 - t2;
      }
      t1 = _this.get$context();
      t2 = rect.get$width();
      if (typeof t2 !== "number")
        return t2.$div();
      t3 = rect.get$height();
      if (typeof t3 !== "number")
        return t3.$div();
      A.drawEllipse(t1, cx, cy, t2 / 2, t3 / 2, 0, 0, 6.283185307179586, false);
      _this.get$contextHandle().paint$1(style);
    },
    drawCircle$3(c, radius, style) {
      var shaderBounds, t1, cx, t2, t3, cy, _this = this;
      type$.Offset._as(c);
      B._asDouble(radius);
      type$.nullable_PaintingStyle._as(style);
      B._callMethodUnchecked0(_this.get$context(), "beginPath", type$.void);
      shaderBounds = _this.get$contextHandle()._shaderBounds;
      t1 = shaderBounds == null;
      if (t1)
        cx = c.get$dx();
      else {
        t2 = c.get$dx();
        t3 = shaderBounds.left;
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t3 !== "number")
          return B.iae(t3);
        cx = t2 - t3;
      }
      if (t1)
        cy = c.get$dy();
      else {
        t1 = c.get$dy();
        t2 = shaderBounds.top;
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return B.iae(t2);
        cy = t1 - t2;
      }
      A.drawEllipse(_this.get$context(), cx, cy, radius, radius, 0, 0, 6.283185307179586, false);
      _this.get$contextHandle().paint$1(style);
    },
    drawPath$2(path, style) {
      var shaderBounds, t1, _this = this;
      type$.Path._as(path);
      type$.nullable_PaintingStyle._as(style);
      shaderBounds = _this.get$contextHandle()._shaderBounds;
      t1 = type$.SurfacePath;
      if (shaderBounds == null)
        _this._runPath$2(_this.get$context(), t1._as(path));
      else
        _this._runPathWithOffset$4(_this.get$context(), t1._as(path), J.$negate$in(shaderBounds.left), J.$negate$in(shaderBounds.top));
      _this.get$contextHandle().paintPath$2(style, path.get$fillType());
    },
    drawShadow$4(path, color, elevation, transparentOccluder) {
      var shadow, shadowColor, t1, solidColor, t2, t3, t4, _this = this;
      type$.Path._as(path);
      type$.Color._as(color);
      B._asDouble(elevation);
      B._asBool(transparentOccluder);
      shadow = A.computeShadow(path.getBounds$0(), elevation);
      if (shadow != null) {
        shadowColor = A.toShadowColor(color);
        t1 = shadowColor.get$alpha();
        if (typeof t1 !== "number")
          return t1.$div();
        solidColor = A.colorComponentsToCssString(shadowColor.get$red(), shadowColor.get$green(), shadowColor.get$blue(), 255);
        t2 = type$.void;
        B._callMethodUnchecked0(_this.get$context(), "save", t2);
        A.DomCanvasRenderingContext2DExtension_set_globalAlpha(_this.get$context(), t1 / 255);
        t1 = transparentOccluder && !B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_1));
        t3 = shadow.offset;
        t4 = shadow.blurWidth;
        if (t1) {
          A.DomCanvasRenderingContext2DExtension_translate(_this.get$context(), t3.get$dx(), t3.get$dy());
          A.DomCanvasRenderingContext2DExtension_set_filter(_this.get$context(), A.maskFilterToCanvasFilter(A.MaskFilter$blur(C.BlurStyle_0, t4)));
          A.DomCanvasRenderingContext2DExtension_set_strokeStyle(_this.get$context(), "");
          A.DomCanvasRenderingContext2DExtension_set_fillStyle(_this.get$context(), solidColor);
        } else {
          A.DomCanvasRenderingContext2DExtension_set_filter(_this.get$context(), "none");
          A.DomCanvasRenderingContext2DExtension_set_strokeStyle(_this.get$context(), "");
          A.DomCanvasRenderingContext2DExtension_set_fillStyle(_this.get$context(), solidColor);
          A.DomCanvasRenderingContext2DExtension_set_shadowBlur(_this.get$context(), t4);
          A.DomCanvasRenderingContext2DExtension_set_shadowColor(_this.get$context(), solidColor);
          A.DomCanvasRenderingContext2DExtension_set_shadowOffsetX(_this.get$context(), t3.get$dx());
          A.DomCanvasRenderingContext2DExtension_set_shadowOffsetY(_this.get$context(), t3.get$dy());
        }
        _this._runPath$2(_this.get$context(), type$.SurfacePath._as(path));
        A.DomCanvasRenderingContext2DExtension_fill(_this.get$context(), null);
        B._callMethodUnchecked0(_this.get$context(), "restore", t2);
      }
    },
    dispose$0() {
      if (B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_1)) && this.__engine$_canvas != null) {
        var t1 = this.__engine$_canvas;
        t1.toString;
        A.DomCanvasElementExtension_set_height(t1, 0);
        A.DomCanvasElementExtension_set_width(t1, 0);
      }
      this._clearActiveCanvasList$0();
    },
    _clearActiveCanvasList$0() {
      var t2, t3,
        t1 = this._activeCanvasList;
      if (t1 != null)
        for (t1 = J.get$iterator$ax(t1), t2 = type$.void; B.boolConversionCheck(t1.moveNext$0());) {
          t3 = t1.get$current();
          if (B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_1))) {
            A.DomCanvasElementExtension_set_height(t3, 0);
            A.DomCanvasElementExtension_set_width(t3, 0);
          }
          B._callMethodUnchecked0(t3, "remove", t2);
        }
      this.set$_activeCanvasList(null);
    },
    set$_context(_context) {
      this._context = type$.nullable_JavaScriptObject._as(_context);
    },
    set$_activeCanvasList(_activeCanvasList) {
      this._activeCanvasList = type$.nullable_List_JavaScriptObject._as(_activeCanvasList);
    },
    set$_reusablePool(_reusablePool) {
      this._reusablePool = type$.nullable_List_JavaScriptObject._as(_reusablePool);
    },
    set$__engine$_canvas(_canvas) {
      this.__engine$_canvas = type$.nullable_JavaScriptObject._as(_canvas);
    },
    set$_saveContextCount(_saveContextCount) {
      this._saveContextCount = B._asInt(_saveContextCount);
    }
  };
  A.ContextStateHandle.prototype = {
    set$blendMode(blendMode) {
      var t1;
      type$.nullable_BlendMode._as(blendMode);
      t1 = this._currentBlendMode;
      if (blendMode == null ? t1 != null : blendMode !== t1) {
        this._currentBlendMode = blendMode;
        t1 = A.blendModeToCssMixBlendMode(blendMode);
        if (t1 == null)
          t1 = "source-over";
        A.DomCanvasRenderingContext2DExtension_set_globalCompositeOperation(this.context, t1);
      }
    },
    set$strokeCap(strokeCap) {
      var t1;
      type$.nullable_StrokeCap._as(strokeCap);
      if (strokeCap == null)
        strokeCap = C.StrokeCap_0;
      if (strokeCap !== this._currentStrokeCap) {
        this._currentStrokeCap = strokeCap;
        t1 = A.stringForStrokeCap(strokeCap);
        t1.toString;
        A.DomCanvasRenderingContext2DExtension_set_lineCap(this.context, t1);
      }
    },
    set$lineWidth(lineWidth) {
      B._asDouble(lineWidth);
      if (lineWidth !== this._currentLineWidth) {
        this._currentLineWidth = lineWidth;
        A.DomCanvasRenderingContext2DExtension_set_lineWidth(this.context, lineWidth);
      }
    },
    set$strokeJoin(strokeJoin) {
      type$.nullable_StrokeJoin._as(strokeJoin);
      if (strokeJoin == null)
        strokeJoin = C.StrokeJoin_0;
      if (strokeJoin !== this._currentStrokeJoin) {
        this._currentStrokeJoin = strokeJoin;
        A.DomCanvasRenderingContext2DExtension_set_lineJoin(this.context, A.stringForStrokeJoin(strokeJoin));
      }
    },
    set$fillStyle(colorOrGradient) {
      var t1 = this._currentFillStyle;
      if (colorOrGradient == null ? t1 != null : colorOrGradient !== t1) {
        this._currentFillStyle = colorOrGradient;
        A.DomCanvasRenderingContext2DExtension_set_fillStyle(this.context, colorOrGradient);
      }
    },
    set$strokeStyle(colorOrGradient) {
      var t1 = this._currentStrokeStyle;
      if (colorOrGradient == null ? t1 != null : colorOrGradient !== t1) {
        this._currentStrokeStyle = colorOrGradient;
        A.DomCanvasRenderingContext2DExtension_set_strokeStyle(this.context, colorOrGradient);
      }
    },
    get$_renderMaskFilterForWebkit() {
      var t1 = B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_1));
      return t1;
    },
    setUpPaint$2(paint, shaderBounds) {
      var t1, paintStyle, colorString, maskFilter, tempVector, t2, t3, shadowOffsetX, shadowOffsetY, _this = this;
      type$.SurfacePaintData._as(paint);
      type$.nullable_Rect._as(shaderBounds);
      _this._lastUsedPaint = paint;
      t1 = paint.strokeWidth;
      _this.set$lineWidth(t1 == null ? 1 : t1);
      _this.set$blendMode(paint.blendMode);
      _this.set$strokeCap(paint.strokeCap);
      _this.set$strokeJoin(paint.strokeJoin);
      t1 = paint.shader;
      if (t1 != null) {
        if (t1 instanceof A.GradientLinear) {
          paintStyle = t1.createPaintStyle$3(_this._canvasPool.get$context(), shaderBounds, _this.density);
          _this.set$fillStyle(paintStyle);
          _this.set$strokeStyle(paintStyle);
          _this._shaderBounds = shaderBounds;
          A.DomCanvasRenderingContext2DExtension_translate(_this.context, shaderBounds.left, shaderBounds.top);
        }
      } else {
        colorString = A.colorValueToCssString(paint.color);
        _this.set$fillStyle(colorString);
        _this.set$strokeStyle(colorString);
      }
      maskFilter = paint.maskFilter;
      if (!B.boolConversionCheck(_this.get$_renderMaskFilterForWebkit())) {
        if (!B.boolConversionCheck(J.$eq$(_this._currentFilter, maskFilter))) {
          _this._currentFilter = maskFilter;
          A.DomCanvasRenderingContext2DExtension_set_filter(_this.context, A.maskFilterToCanvasFilter(maskFilter));
        }
      } else if (maskFilter != null) {
        t1 = _this.context;
        B._callMethodUnchecked0(t1, "save", type$.void);
        A.DomCanvasRenderingContext2DExtension_set_shadowBlur(t1, A.convertSigmaToRadius(maskFilter.get$webOnlySigma()));
        A.DomCanvasRenderingContext2DExtension_set_shadowColor(t1, A.CssColor_toCssString(A.Color$(paint.color).withAlpha$1(255)));
        A.DomCanvasRenderingContext2DExtension_translate(t1, -50000, 0);
        tempVector = A.NativeFloat32List_NativeFloat32List(2);
        t2 = A.EngineFlutterDisplay_instance().get$devicePixelRatio();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t3 = tempVector.length;
        if (0 >= t3)
          return B.ioore(tempVector, 0);
        tempVector[0] = 50000 * t2;
        t2 = _this._canvasPool;
        t2.get$currentTransform().transform2$1(tempVector);
        shadowOffsetX = tempVector[0];
        if (1 >= t3)
          return B.ioore(tempVector, 1);
        shadowOffsetY = tempVector[1];
        tempVector[1] = 0;
        tempVector[0] = 0;
        t2.get$currentTransform().transform2$1(tempVector);
        t2 = tempVector[0];
        if (typeof t2 !== "number")
          return B.iae(t2);
        A.DomCanvasRenderingContext2DExtension_set_shadowOffsetX(t1, shadowOffsetX - t2);
        t2 = tempVector[1];
        if (typeof t2 !== "number")
          return B.iae(t2);
        A.DomCanvasRenderingContext2DExtension_set_shadowOffsetY(t1, shadowOffsetY - t2);
      }
    },
    tearDownPaint$0() {
      var _this = this,
        t1 = _this._lastUsedPaint;
      if ((t1 == null ? null : t1.maskFilter) != null && B.boolConversionCheck(_this.get$_renderMaskFilterForWebkit()))
        B._callMethodUnchecked0(_this.context, "restore", type$.void);
      t1 = _this._shaderBounds;
      if (t1 != null) {
        A.DomCanvasRenderingContext2DExtension_translate(_this.context, J.$negate$in(t1.left), J.$negate$in(_this._shaderBounds.top));
        _this._shaderBounds = null;
      }
    },
    paint$1(style) {
      var t1 = this.context;
      if (type$.nullable_PaintingStyle._as(style) === C.PaintingStyle_1)
        B._callMethodUnchecked0(t1, "stroke", type$.void);
      else
        A.DomCanvasRenderingContext2DExtension_fill(t1, null);
    },
    paintPath$2(style, pathFillType) {
      var t1;
      type$.nullable_PaintingStyle._as(style);
      type$.PathFillType._as(pathFillType);
      if (style === C.PaintingStyle_1)
        B._callMethodUnchecked0(this.context, "stroke", type$.void);
      else {
        t1 = this.context;
        if (pathFillType === C.PathFillType_0)
          A.DomCanvasRenderingContext2DExtension_fill(t1, null);
        else
          A.DomCanvasRenderingContext2DExtension_fill(t1, "evenodd");
      }
    },
    reset$0() {
      var _this = this,
        t1 = _this.context;
      A.DomCanvasRenderingContext2DExtension_set_fillStyle(t1, "");
      _this._currentFillStyle = A.DomCanvasRenderingContext2DExtension_get_fillStyle(t1);
      A.DomCanvasRenderingContext2DExtension_set_strokeStyle(t1, "");
      _this._currentStrokeStyle = A.DomCanvasRenderingContext2DExtension_get_strokeStyle(t1);
      A.DomCanvasRenderingContext2DExtension_set_shadowBlur(t1, 0);
      A.DomCanvasRenderingContext2DExtension_set_shadowColor(t1, "none");
      A.DomCanvasRenderingContext2DExtension_set_shadowOffsetX(t1, 0);
      A.DomCanvasRenderingContext2DExtension_set_shadowOffsetY(t1, 0);
      A.DomCanvasRenderingContext2DExtension_set_globalCompositeOperation(t1, "source-over");
      _this._currentBlendMode = C.BlendMode_3;
      A.DomCanvasRenderingContext2DExtension_set_lineWidth(t1, 1);
      _this._currentLineWidth = 1;
      A.DomCanvasRenderingContext2DExtension_set_lineCap(t1, "butt");
      _this._currentStrokeCap = C.StrokeCap_0;
      A.DomCanvasRenderingContext2DExtension_set_lineJoin(t1, "miter");
      _this._currentStrokeJoin = C.StrokeJoin_0;
      _this._shaderBounds = null;
    }
  };
  A._SaveStackTracking.prototype = {
    get$isClipped() {
      return this.clipStack != null;
    },
    clear$0(_) {
      J.clear$0$ax(this._saveStack);
      this.set$clipStack(null);
      this._currentTransform = A.Matrix4$identity();
    },
    get$currentTransform() {
      return this._currentTransform;
    },
    save$0() {
      var t1 = this._currentTransform.clone$0(),
        t2 = this.clipStack;
      J.add$1$ax(this._saveStack, A.SaveStackEntry$(t2 == null ? null : B.List_List$from(t2, true, type$.SaveClipEntry), t1));
    },
    restore$0() {
      var entry,
        t1 = this._saveStack,
        t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t2.get$isEmpty(t1)))
        return;
      entry = t2.removeLast$0(t1);
      this.set$_currentTransform(entry.transform);
      this.set$clipStack(entry.clipStack);
    },
    translate$2(dx, dy) {
      B._asDouble(dx);
      B._asDouble(dy);
      this._currentTransform.translate$2(dx, dy);
    },
    scale$2(sx, sy) {
      B._asDouble(sx);
      B._asDouble(sy);
      this._currentTransform.scale$2(sx, sy);
    },
    transform$1(matrix4) {
      type$.Float32List._as(matrix4);
      this._currentTransform.multiply$1(A.Matrix4$fromFloat32List(matrix4));
    },
    clipRect$1(rect) {
      var t1, _this = this;
      type$.Rect._as(rect);
      if (_this.clipStack == null)
        _this.set$clipStack(B._setArrayType([], type$.JSArray_SaveClipEntry));
      t1 = _this.clipStack;
      t1.toString;
      J.add$1$ax(t1, A.SaveClipEntry$rect(rect, _this._currentTransform.clone$0()));
    },
    clipRRect$1(rrect) {
      var t1, _this = this;
      type$.RRect._as(rrect);
      if (_this.clipStack == null)
        _this.set$clipStack(B._setArrayType([], type$.JSArray_SaveClipEntry));
      t1 = _this.clipStack;
      t1.toString;
      J.add$1$ax(t1, A.SaveClipEntry$rrect(rrect, _this._currentTransform.clone$0()));
    },
    clipPath$1(path) {
      var t1, _this = this;
      type$.Path._as(path);
      if (_this.clipStack == null)
        _this.set$clipStack(B._setArrayType([], type$.JSArray_SaveClipEntry));
      t1 = _this.clipStack;
      t1.toString;
      J.add$1$ax(t1, A.SaveClipEntry$path(path, _this._currentTransform.clone$0()));
    },
    set$clipStack(clipStack) {
      this.clipStack = type$.nullable_List_SaveClipEntry._as(clipStack);
    },
    set$_currentTransform(_currentTransform) {
      this._currentTransform = type$.Matrix4._as(_currentTransform);
    }
  };
  A.CkCanvas.prototype = {
    clear$1(_, color) {
      A.SkCanvasExtension_clear(this.skCanvas, A.toSharedSkColor1(type$.Color._as(color)));
    },
    clipPath$2(path, doAntiAlias) {
      type$.CkPath._as(path);
      B._asBool(doAntiAlias);
      A.SkCanvasExtension_clipPath(this.skCanvas, path.get$skiaObject(), $.$get$_clipOpIntersect(), doAntiAlias);
    },
    clipRRect$2(rrect, doAntiAlias) {
      type$.RRect._as(rrect);
      B._asBool(doAntiAlias);
      A.SkCanvasExtension_clipRRect(this.skCanvas, A.toSkRRect(rrect), $.$get$_clipOpIntersect(), doAntiAlias);
    },
    clipRect$3(rect, clipOp, doAntiAlias) {
      type$.Rect._as(rect);
      type$.ClipOp._as(clipOp);
      B._asBool(doAntiAlias);
      A.SkCanvasExtension_clipRect(this.skCanvas, A.toSkRect(rect), A.toSkClipOp(clipOp), doAntiAlias);
    },
    drawCircle$3(c, radius, paint) {
      type$.Offset._as(c);
      B._asDouble(radius);
      type$.CkPaint._as(paint);
      A.SkCanvasExtension_drawCircle(this.skCanvas, c.get$dx(), c.get$dy(), radius, paint.skiaObject);
    },
    drawDRRect$3(outer, inner, paint) {
      var t1 = type$.RRect;
      t1._as(outer);
      t1._as(inner);
      type$.CkPaint._as(paint);
      A.SkCanvasExtension_drawDRRect(this.skCanvas, A.toSkRRect(outer), A.toSkRRect(inner), paint.skiaObject);
    },
    drawImageRect$4(image, src, dst, paint) {
      var t1, filterQuality, t2;
      type$.CkImage._as(image);
      t1 = type$.Rect;
      t1._as(src);
      t1._as(dst);
      type$.CkPaint._as(paint);
      filterQuality = paint.get$filterQuality();
      t1 = this.skCanvas;
      t2 = paint.skiaObject;
      if (filterQuality === C.FilterQuality_3)
        A.SkCanvasExtension_drawImageRectCubic(t1, image.get$skImage(), A.toSkRect(src), A.toSkRect(dst), 0.3333333333333333, 0.3333333333333333, t2);
      else
        A.SkCanvasExtension_drawImageRectOptions(t1, image.get$skImage(), A.toSkRect(src), A.toSkRect(dst), A.toSkFilterMode(filterQuality), A.toSkMipmapMode(filterQuality), t2);
    },
    drawOval$2(rect, paint) {
      type$.Rect._as(rect);
      type$.CkPaint._as(paint);
      A.SkCanvasExtension_drawOval(this.skCanvas, A.toSkRect(rect), paint.skiaObject);
    },
    drawPaint$1(paint) {
      B._callMethodUnchecked1(this.skCanvas, "drawPaint", type$.CkPaint._as(paint).skiaObject, type$.void);
    },
    drawParagraph$2(paragraph, offset) {
      type$.CkParagraph._as(paragraph);
      type$.Offset._as(offset);
      A.SkCanvasExtension_drawParagraph(this.skCanvas, paragraph.get$skiaObject(), offset.get$dx(), offset.get$dy());
    },
    drawPath$2(path, paint) {
      type$.CkPath._as(path);
      type$.CkPaint._as(paint);
      B._callMethodUnchecked2(this.skCanvas, "drawPath", path.get$skiaObject(), paint.skiaObject, type$.void);
    },
    drawPicture$1(picture) {
      B._callMethodUnchecked1(this.skCanvas, "drawPicture", type$.CkPicture._as(picture).get$skiaObject(), type$.void);
    },
    drawRRect$2(rrect, paint) {
      type$.RRect._as(rrect);
      type$.CkPaint._as(paint);
      A.SkCanvasExtension_drawRRect(this.skCanvas, A.toSkRRect(rrect), paint.skiaObject);
    },
    drawRect$2(rect, paint) {
      type$.Rect._as(rect);
      type$.CkPaint._as(paint);
      A.SkCanvasExtension_drawRect(this.skCanvas, A.toSkRect(rect), paint.skiaObject);
    },
    drawShadow$4(path, color, elevation, transparentOccluder) {
      A.drawSkShadow(this.skCanvas, type$.CkPath._as(path), type$.Color._as(color), B._asDouble(elevation), B._asBool(transparentOccluder), A.EngineFlutterDisplay_instance().get$devicePixelRatio());
    },
    restore$0() {
      B._callMethodUnchecked0(this.skCanvas, "restore", type$.void);
    },
    save$0() {
      return J.toInt$0$n(A.SkCanvasExtension_save(this.skCanvas));
    },
    saveLayer$2(bounds, paint) {
      var t1;
      type$.Rect._as(bounds);
      type$.nullable_CkPaint._as(paint);
      t1 = paint == null ? null : paint.skiaObject;
      A.SkCanvasExtension_saveLayer(this.skCanvas, t1, A.toSkRect(bounds), null, null);
    },
    saveLayerWithoutBounds$1(paint) {
      var t1, _null = null;
      type$.nullable_CkPaint._as(paint);
      t1 = paint == null ? _null : paint.skiaObject;
      A.SkCanvasExtension_saveLayer(this.skCanvas, t1, _null, _null, _null);
    },
    scale$2(sx, sy) {
      A.SkCanvasExtension_scale(this.skCanvas, B._asDouble(sx), B._asDouble(sy));
    },
    transform$1(matrix4) {
      A.SkCanvasExtension_concat(this.skCanvas, A.toSkM44FromFloat32(type$.Float32List._as(matrix4)));
    },
    translate$2(dx, dy) {
      A.SkCanvasExtension_translate(this.skCanvas, B._asDouble(dx), B._asDouble(dy));
    }
  };
  A.CanvasKitCanvas.prototype = {
    save$0() {
      this.__engine$_canvas.save$0();
    },
    saveLayer$2(bounds, paint) {
      type$.nullable_Rect._as(bounds);
      type$.Paint._as(paint);
      if (bounds == null)
        this._saveLayerWithoutBounds$1(paint);
      else
        this._saveLayer$2(bounds, paint);
    },
    _saveLayerWithoutBounds$1(paint) {
      this.__engine$_canvas.saveLayerWithoutBounds$1(type$.CkPaint._as(type$.Paint._as(paint)));
    },
    _saveLayer$2(bounds, paint) {
      this.__engine$_canvas.saveLayer$2(type$.Rect._as(bounds), type$.CkPaint._as(type$.Paint._as(paint)));
    },
    restore$0() {
      this.__engine$_canvas.restore$0();
    },
    translate$2(dx, dy) {
      this.__engine$_canvas.translate$2(B._asDouble(dx), B._asDouble(dy));
    },
    scale$2(sx, sy) {
      B._asDouble(sx);
      B._asDoubleQ(sy);
      return this._scale$2(sx, sy == null ? sx : sy);
    },
    _scale$2(sx, sy) {
      this.__engine$_canvas.scale$2(B._asDouble(sx), B._asDouble(sy));
    },
    transform$1(matrix4) {
      type$.Float64List._as(matrix4);
      if (matrix4.length !== 16)
        throw B.wrapException(B.ArgumentError$('"matrix4" must have 16 entries.', null));
      this.__engine$_transform$1(A.toMatrix32(matrix4));
    },
    __engine$_transform$1(matrix4) {
      this.__engine$_canvas.transform$1(type$.Float32List._as(matrix4));
    },
    clipRect$2$doAntiAlias(rect, doAntiAlias) {
      this._clipRect$3(type$.Rect._as(rect), C.ClipOp_1, B._asBool(doAntiAlias));
    },
    clipRect$1(rect) {
      return this.clipRect$2$doAntiAlias(rect, true);
    },
    _clipRect$3(rect, clipOp, doAntiAlias) {
      this.__engine$_canvas.clipRect$3(type$.Rect._as(rect), type$.ClipOp._as(clipOp), B._asBool(doAntiAlias));
    },
    clipRRect$2$doAntiAlias(rrect, doAntiAlias) {
      this._clipRRect$2(type$.RRect._as(rrect), B._asBool(doAntiAlias));
    },
    clipRRect$1(rrect) {
      return this.clipRRect$2$doAntiAlias(rrect, true);
    },
    _clipRRect$2(rrect, doAntiAlias) {
      this.__engine$_canvas.clipRRect$2(type$.RRect._as(rrect), B._asBool(doAntiAlias));
    },
    clipPath$2$doAntiAlias(path, doAntiAlias) {
      type$.Path._as(path);
      B._asBool(doAntiAlias);
      this.__engine$_canvas.clipPath$2(type$.CkPath._as(path), doAntiAlias);
    },
    clipPath$1(path) {
      return this.clipPath$2$doAntiAlias(path, true);
    },
    drawPaint$1(paint) {
      this._drawPaint$1(type$.Paint._as(paint));
    },
    _drawPaint$1(paint) {
      this.__engine$_canvas.drawPaint$1(type$.CkPaint._as(type$.Paint._as(paint)));
    },
    drawRect$2(rect, paint) {
      this._drawRect$2(type$.Rect._as(rect), type$.Paint._as(paint));
    },
    _drawRect$2(rect, paint) {
      this.__engine$_canvas.drawRect$2(type$.Rect._as(rect), type$.CkPaint._as(type$.Paint._as(paint)));
    },
    drawRRect$2(rrect, paint) {
      this._drawRRect$2(type$.RRect._as(rrect), type$.Paint._as(paint));
    },
    _drawRRect$2(rrect, paint) {
      this.__engine$_canvas.drawRRect$2(type$.RRect._as(rrect), type$.CkPaint._as(type$.Paint._as(paint)));
    },
    drawDRRect$3(outer, inner, paint) {
      var t1 = type$.RRect;
      this._drawDRRect$3(t1._as(outer), t1._as(inner), type$.Paint._as(paint));
    },
    _drawDRRect$3(outer, inner, paint) {
      var t1 = type$.RRect;
      this.__engine$_canvas.drawDRRect$3(t1._as(outer), t1._as(inner), type$.CkPaint._as(type$.Paint._as(paint)));
    },
    drawOval$2(rect, paint) {
      this._drawOval$2(type$.Rect._as(rect), type$.Paint._as(paint));
    },
    _drawOval$2(rect, paint) {
      this.__engine$_canvas.drawOval$2(type$.Rect._as(rect), type$.CkPaint._as(type$.Paint._as(paint)));
    },
    drawCircle$3(c, radius, paint) {
      this._drawCircle$3(type$.Offset._as(c), B._asDouble(radius), type$.Paint._as(paint));
    },
    _drawCircle$3(c, radius, paint) {
      this.__engine$_canvas.drawCircle$3(type$.Offset._as(c), B._asDouble(radius), type$.CkPaint._as(type$.Paint._as(paint)));
    },
    drawPath$2(path, paint) {
      type$.Path._as(path);
      type$.Paint._as(paint);
      this.__engine$_canvas.drawPath$2(type$.CkPath._as(path), type$.CkPaint._as(paint));
    },
    drawImageRect$4(image, src, dst, paint) {
      var t1 = type$.Rect;
      this.__engine$_canvas.drawImageRect$4(type$.Image._as(image), t1._as(src), t1._as(dst), type$.CkPaint._as(type$.Paint._as(paint)));
    },
    drawParagraph$2(paragraph, offset) {
      this._drawParagraph$2(type$.Paragraph._as(paragraph), type$.Offset._as(offset));
    },
    _drawParagraph$2(paragraph, offset) {
      type$.Paragraph._as(paragraph);
      type$.Offset._as(offset);
      this.__engine$_canvas.drawParagraph$2(type$.CkParagraph._as(paragraph), offset);
    },
    drawShadow$4(path, color, elevation, transparentOccluder) {
      this._drawShadow$4(type$.Path._as(path), type$.Color._as(color), B._asDouble(elevation), B._asBool(transparentOccluder));
    },
    _drawShadow$4(path, color, elevation, transparentOccluder) {
      type$.Path._as(path);
      type$.Color._as(color);
      B._asDouble(elevation);
      B._asBool(transparentOccluder);
      this.__engine$_canvas.drawShadow$4(type$.CkPath._as(path), color, elevation, transparentOccluder);
    },
    $isCanvas: 1
  };
  A.DisplayCanvasFactory.prototype = {
    get$baseCanvas() {
      var result, _this = this,
        value = _this.__DisplayCanvasFactory_baseCanvas_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = _this.createCanvas.call$0();
        result.initialize$0();
        _this.__DisplayCanvasFactory_baseCanvas_FI !== $ && B.throwLateFieldADI("baseCanvas");
        _this.set$__DisplayCanvasFactory_baseCanvas_FI(result);
        value = result;
      }
      return value;
    },
    getCanvas$0() {
      var canvas,
        t1 = this._cache,
        t2 = J.getInterceptor$asx(t1),
        t3 = this._liveCanvases,
        t4 = J.getInterceptor$ax(t3);
      if (B.boolConversionCheck(t2.get$isNotEmpty(t1))) {
        canvas = t2.removeLast$0(t1);
        t4.add$1(t3, canvas);
        return canvas;
      } else {
        canvas = this.createCanvas.call$0();
        canvas.initialize$0();
        t4.add$1(t3, canvas);
        return canvas;
      }
    },
    forEachCanvas$1(callback) {
      var _this = this;
      _this.$ti._eval$1("~(1)")._as(callback);
      callback.call$1(_this.get$baseCanvas());
      J.forEach$1$ax(_this._cache, callback);
      J.forEach$1$ax(_this._liveCanvases, callback);
    },
    releaseCanvas$1(canvas) {
      this.$ti._precomputed1._as(canvas);
      B._callMethodUnchecked0(canvas.get$hostElement(), "remove", type$.void);
      J.remove$1$ax(this._liveCanvases, canvas);
      J.add$1$ax(this._cache, canvas);
    },
    dispose$0() {
      var t1, t2, t3, t4, t5;
      for (t1 = this._cache, t2 = J.getInterceptor$ax(t1), t3 = t2.get$iterator(t1); B.boolConversionCheck(t3.moveNext$0());)
        t3.get$current().dispose$0();
      for (t3 = this._liveCanvases, t4 = J.getInterceptor$ax(t3), t5 = t4.get$iterator(t3); B.boolConversionCheck(t5.moveNext$0());)
        t5.get$current().dispose$0();
      this.get$baseCanvas().dispose$0();
      t4.clear$0(t3);
      t2.clear$0(t1);
    },
    set$__DisplayCanvasFactory_baseCanvas_FI(__DisplayCanvasFactory_baseCanvas_FI) {
      this.__DisplayCanvasFactory_baseCanvas_FI = this.$ti._precomputed1._as(__DisplayCanvasFactory_baseCanvas_FI);
    }
  };
  A.HtmlViewEmbedder.prototype = {
    set$_frameSize(value) {
      this.__HtmlViewEmbedder__frameSize_A = type$.BitmapSize._as(value);
    },
    set$frameSize(size) {
      this.set$_frameSize(type$.BitmapSize._as(size));
    },
    getOverlayCanvases$0() {
      return J.map$1$1$ax(this._context.pictureRecordersCreatedDuringPreroll, new A.HtmlViewEmbedder_getOverlayCanvases_closure(), type$.CkCanvas);
    },
    _cleanUpClipDefs$1(viewId) {
      var t1, t2, nodesToRemove, t3, t4, t5;
      B._asInt(viewId);
      t1 = this._svgClipDefs;
      if (B.boolConversionCheck(t1.containsKey$1(viewId))) {
        null.toString;
        t2 = A.DomElementExtension_querySelector(null, "#sk_path_defs");
        t2.toString;
        nodesToRemove = B._setArrayType([], type$.JSArray_JavaScriptObject);
        t3 = J.getInterceptor$asx(t1);
        t4 = t3.$index(t1, viewId);
        t4.toString;
        for (t2 = J.get$iterator$ax(A.DomElementExtension_get_children(t2)); B.boolConversionCheck(t2.moveNext$0());) {
          t5 = t2.get$current();
          if (B.boolConversionCheck(t4.contains$1(0, A.DomElementExtension_get_id(t5))))
            D.JSArray_methods.add$1(nodesToRemove, t5);
        }
        for (t2 = D.JSArray_methods.get$iterator(nodesToRemove), t4 = type$.void; B.boolConversionCheck(t2.moveNext$0());)
          B._callMethodUnchecked0(t2.get$current(), "remove", t4);
        t1 = t3.$index(t1, viewId);
        t1.toString;
        J.clear$0$ax(t1);
      }
    },
    submitFrame$1(basePicture) {
      return this.submitFrame$body$HtmlViewEmbedder(type$.CkPicture._as(basePicture));
    },
    submitFrame$body$HtmlViewEmbedder(basePicture) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, rendering, i, t2, t3, t4, t5, unusedViews, viewId, pictures;
      var $async$submitFrame$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                pictures = B._setArrayType([basePicture], type$.JSArray_CkPicture);
                for (t1 = J.get$iterator$ax($async$self._context.pictureRecorders); B.boolConversionCheck(t1.moveNext$0());)
                  D.JSArray_methods.add$1(pictures, t1.get$current().endRecording$0());
                t1 = $async$self._compositionOrder;
                rendering = $async$self._modifyRenderingForMaxCanvases$1(A.createOptimizedRendering(pictures, t1, $async$self._currentCompositionParams));
                $async$self._updateDomForNewRendering$1(rendering);
                if (B.boolConversionCheck(rendering.equalsForRendering$1($async$self._activeRendering))) {
                  i = 0;
                  while (true) {
                    t2 = J.get$length$asx(rendering.get$canvases());
                    if (typeof t2 !== "number") {
                      $async$returnValue = B.iae(t2);
                      // goto return
                      $async$goto = 1;
                      break $async$outer;
                    }
                    if (!(i < t2))
                      break;
                    J.$index$asx(rendering.get$canvases(), i).set$displayCanvas(J.$index$asx($async$self._activeRendering.get$canvases(), i).displayCanvas);
                    J.$index$asx($async$self._activeRendering.get$canvases(), i).displayCanvas = null;
                    ++i;
                  }
                }
                $async$self._activeRendering = rendering;
                t2 = J.get$iterator$ax(rendering.get$canvases()), t3 = $async$self.rasterizer;
              case 3:
                // for condition
                if (!B.boolConversionCheck(t2.moveNext$0())) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                t4 = t2.get$current();
                t5 = t4.displayCanvas;
                t5.toString;
                $async$goto = 5;
                return B._asyncAwait(t3.rasterizeToCanvas$2(t5, t4.pictures), $async$submitFrame$1);
              case 5:
                // returning from await.
                // goto for condition
                $async$goto = 3;
                break;
              case 4:
                // after for
                for (t2 = J.get$iterator$ax($async$self._context.pictureRecordersCreatedDuringPreroll); B.boolConversionCheck(t2.moveNext$0());) {
                  t3 = t2.get$current();
                  if (B.boolConversionCheck(t3.get$isRecording()))
                    t3.endRecording$0();
                }
                $async$self._context = A.EmbedderFrameContext$();
                t2 = $async$self._activeCompositionOrder;
                t3 = type$.int;
                if (B.boolConversionCheck(A.listEquals0(t1, t2, t3))) {
                  J.clear$0$ax(t1);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                unusedViews = B.LinkedHashSet_LinkedHashSet$from(t2, t3);
                t3 = J.getInterceptor$ax(t2);
                t3.clear$0(t2);
                t4 = J.getInterceptor$asx(t1);
                i = 0;
                while (true) {
                  t5 = t4.get$length(t1);
                  if (typeof t5 !== "number") {
                    $async$returnValue = B.iae(t5);
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  }
                  if (!(i < t5))
                    break;
                  c$0: {
                    viewId = t4.$index(t1, i);
                    t3.add$1(t2, viewId);
                    unusedViews.remove$1(0, viewId);
                  }
                  ++i;
                }
                t4.clear$0(t1);
                unusedViews.forEach$1(0, $async$self.get$disposeView());
              case 1:
                // return
                return B._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return B._asyncStartSync($async$submitFrame$1, $async$completer);
    },
    disposeView$1(viewId) {
      var _this = this;
      B._asInt(viewId);
      J.remove$1$ax(_this._viewClipChains, viewId);
      J.remove$1$ax(_this._currentCompositionParams, viewId);
      J.remove$1$ax(_this._viewsToRecomposite, viewId);
      _this._cleanUpClipDefs$1(viewId);
      J.remove$1$ax(_this._svgClipDefs, viewId);
    },
    _modifyRenderingForMaxCanvases$1(rendering) {
      var result, numCanvases, t1, numCanvasesToDelete, picturesForLastCanvas, modifiedEntities, i, sawLastCanvas, entity, t2;
      type$.Rendering._as(rendering);
      result = A.Rendering$();
      numCanvases = J.get$length$asx(rendering.get$canvases());
      t1 = A.HtmlViewEmbedder_maximumCanvases();
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (numCanvases <= t1)
        return rendering;
      t1 = A.HtmlViewEmbedder_maximumCanvases();
      if (typeof t1 !== "number")
        return B.iae(t1);
      numCanvasesToDelete = numCanvases - t1;
      picturesForLastCanvas = B._setArrayType([], type$.JSArray_CkPicture);
      t1 = rendering.entities;
      modifiedEntities = B.List_List$from(t1, true, type$.RenderingEntity);
      t1 = J.get$length$asx(t1);
      if (typeof t1 !== "number")
        return t1.$sub();
      i = t1 - 1;
      t1 = J.getInterceptor$asx(modifiedEntities);
      sawLastCanvas = false;
      for (; i >= 0; --i) {
        entity = t1.$index(modifiedEntities, i);
        if (entity instanceof A.RenderingRenderCanvas) {
          if (!sawLastCanvas) {
            sawLastCanvas = true;
            continue;
          }
          t1.removeAt$1(modifiedEntities, i);
          D.JSArray_methods.insertAll$2(picturesForLastCanvas, 0, entity.pictures);
          --numCanvasesToDelete;
          if (numCanvasesToDelete === 0)
            break;
        }
      }
      sawLastCanvas = J.$eq$(A.HtmlViewEmbedder_maximumCanvases(), 1);
      t2 = t1.get$length(modifiedEntities);
      if (typeof t2 !== "number")
        return t2.$sub();
      i = t2 - 1;
      for (; i > 0; --i) {
        entity = t1.$index(modifiedEntities, i);
        if (entity instanceof A.RenderingRenderCanvas) {
          if (sawLastCanvas) {
            J.addAll$1$ax(entity.pictures, picturesForLastCanvas);
            break;
          }
          sawLastCanvas = true;
        }
      }
      J.addAll$1$ax(result.entities, modifiedEntities);
      return result;
    },
    _updateDomForNewRendering$1(rendering) {
      var indexMap, t1, existingIndexMap, staticElements, t2, t3, i, t4, entity, updateRenderCanvasWithDisplay, t5, t6, t7, staticElementIndex, nextRenderingIndex, t8, staticElementIndexInActiveRendering, staticDomElement, nextEntity, _this = this;
      type$.Rendering._as(rendering);
      if (B.boolConversionCheck(rendering.equalsForRendering$1(_this._activeRendering)))
        return;
      indexMap = _this._getIndexMapFromPreviousRendering$2(_this._activeRendering, rendering);
      t1 = J.getInterceptor$ax(indexMap);
      existingIndexMap = J.toList$0$ax(t1.where$1(indexMap, new A.HtmlViewEmbedder__updateDomForNewRendering_closure()));
      staticElements = A.longestIncreasingSubsequence(existingIndexMap);
      t2 = J.getInterceptor$asx(staticElements);
      t3 = J.getInterceptor$asx(existingIndexMap);
      i = 0;
      while (true) {
        t4 = t2.get$length(staticElements);
        if (typeof t4 !== "number")
          return B.iae(t4);
        if (!(i < t4))
          break;
        t2.$indexSet(staticElements, i, t3.$index(existingIndexMap, t2.$index(staticElements, i)));
        ++i;
      }
      t3 = _this.rasterizer;
      i = 0;
      while (true) {
        t4 = J.get$length$asx(_this._activeRendering.entities);
        if (typeof t4 !== "number")
          return B.iae(t4);
        if (!(i < t4))
          break;
        c$0: {
          if (B.boolConversionCheck(t1.contains$1(indexMap, i)))
            break c$0;
          entity = J.$index$asx(_this._activeRendering.entities, i);
          if (entity instanceof A.RenderingPlatformView)
            _this.disposeView$1(entity.viewId);
          else if (entity instanceof A.RenderingRenderCanvas) {
            t4 = entity.displayCanvas;
            t4.toString;
            t3.releaseOverlay$1(t4);
            entity.displayCanvas = null;
          }
        }
        ++i;
      }
      updateRenderCanvasWithDisplay = new A.HtmlViewEmbedder__updateDomForNewRendering_updateRenderCanvasWithDisplay(_this, indexMap);
      t3 = rendering.entities;
      t4 = J.getInterceptor$asx(t3);
      t5 = _this.sceneHost;
      t6 = type$.JavaScriptObject;
      t7 = type$.RenderingRenderCanvas;
      staticElementIndex = 0;
      nextRenderingIndex = 0;
      while (true) {
        t8 = t2.get$length(staticElements);
        if (typeof t8 !== "number")
          return B.iae(t8);
        if (!(staticElementIndex < t8))
          break;
        staticElementIndexInActiveRendering = t2.$index(staticElements, staticElementIndex);
        staticDomElement = _this._getElement$1(J.$index$asx(_this._activeRendering.entities, staticElementIndexInActiveRendering));
        for (; !B.boolConversionCheck(J.$eq$(t1.$index(indexMap, nextRenderingIndex), staticElementIndexInActiveRendering));) {
          nextEntity = t4.$index(t3, nextRenderingIndex);
          if (nextEntity instanceof A.RenderingRenderCanvas)
            updateRenderCanvasWithDisplay.call$2(nextEntity, nextRenderingIndex);
          B._callMethodUnchecked2(t5, "insertBefore", _this._getElement$1(nextEntity), staticDomElement, t6);
          ++nextRenderingIndex;
        }
        if (t4.$index(t3, nextRenderingIndex) instanceof A.RenderingRenderCanvas)
          updateRenderCanvasWithDisplay.call$2(t7._as(t4.$index(t3, nextRenderingIndex)), nextRenderingIndex);
        ++nextRenderingIndex;
        ++staticElementIndex;
      }
      t1 = type$.void;
      while (true) {
        t2 = t4.get$length(t3);
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (!(nextRenderingIndex < t2))
          break;
        nextEntity = t4.$index(t3, nextRenderingIndex);
        if (nextEntity instanceof A.RenderingRenderCanvas)
          updateRenderCanvasWithDisplay.call$2(nextEntity, nextRenderingIndex);
        B._callMethodUnchecked1(t5, "append", _this._getElement$1(nextEntity), t1);
        ++nextRenderingIndex;
      }
    },
    _getElement$1(entity) {
      type$.RenderingEntity._as(entity);
      if (entity instanceof A.RenderingRenderCanvas)
        return entity.displayCanvas.get$hostElement();
      if (entity instanceof A.RenderingPlatformView)
        return J.$index$asx(this._viewClipChains, entity.viewId).get$root();
    },
    _getIndexMapFromPreviousRendering$2(previous, next) {
      var result, t2, t3, t4, t5, maxUnchangedLength, alreadyClaimedCanvases, index, foundForIndex, oldIndex,
        t1 = type$.Rendering;
      t1._as(previous);
      t1._as(next);
      result = B._setArrayType([], type$.JSArray_int);
      t1 = previous.entities;
      t2 = J.getInterceptor$asx(t1);
      t3 = next.entities;
      t4 = J.getInterceptor$asx(t3);
      t5 = type$.int;
      maxUnchangedLength = A.min(t2.get$length(t1), t4.get$length(t3), t5);
      alreadyClaimedCanvases = B.LinkedHashSet_LinkedHashSet$_empty(t5);
      index = 0;
      while (true) {
        if (!(index < maxUnchangedLength && B.boolConversionCheck(t2.$index(t1, index).equalsForRendering$1(t4.$index(t3, index)))))
          break;
        D.JSArray_methods.add$1(result, index);
        if (t2.$index(t1, index) instanceof A.RenderingRenderCanvas)
          alreadyClaimedCanvases.add$1(0, index);
        ++index;
      }
      while (true) {
        t5 = t4.get$length(t3);
        if (typeof t5 !== "number")
          return B.iae(t5);
        if (!(index < t5))
          break;
        oldIndex = 0;
        while (true) {
          t5 = t2.get$length(t1);
          if (typeof t5 !== "number")
            return B.iae(t5);
          if (!(oldIndex < t5)) {
            foundForIndex = false;
            break;
          }
          if (B.boolConversionCheck(t2.$index(t1, oldIndex).equalsForRendering$1(t4.$index(t3, index))) && !B.boolConversionCheck(alreadyClaimedCanvases.contains$1(0, oldIndex))) {
            D.JSArray_methods.add$1(result, oldIndex);
            if (t2.$index(t1, oldIndex) instanceof A.RenderingRenderCanvas)
              alreadyClaimedCanvases.add$1(0, oldIndex);
            foundForIndex = true;
            break;
          }
          ++oldIndex;
        }
        if (!foundForIndex)
          D.JSArray_methods.add$1(result, -1);
        ++index;
      }
      return result;
    },
    debugCleanupSvgClipPaths$0() {
      J.clear$0$ax(this._svgClipDefs);
    },
    dispose$0() {
      var t2, t3, _this = this,
        t1 = _this._viewClipChains;
      J.forEach$1$ax(J.toList$0$ax(t1.get$keys()), _this.get$disposeView());
      _this._context = A.EmbedderFrameContext$();
      t2 = _this._currentCompositionParams;
      t3 = J.getInterceptor$ax(t2);
      t3.clear$0(t2);
      _this.debugCleanupSvgClipPaths$0();
      t3.clear$0(t2);
      J.clear$0$ax(t1);
      J.clear$0$ax(_this._viewsToRecomposite);
      J.clear$0$ax(_this._activeCompositionOrder);
      J.clear$0$ax(_this._compositionOrder);
      _this._activeRendering = A.Rendering$();
    }
  };
  A.MutatorType.prototype = {
    _enumToString$0() {
      return "MutatorType." + B.S(this._core$_name);
    }
  };
  A.Mutator.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!(other instanceof A.Mutator))
        return false;
      t1 = _this.type;
      if (!B.boolConversionCheck(J.$eq$(t1, other.type)))
        return false;
      switch (t1) {
        case C.MutatorType_0:
          return J.$eq$(_this.rect, other.rect);
        case C.MutatorType_1:
          return J.$eq$(_this.rrect, other.rrect);
        case C.MutatorType_2:
          return J.$eq$(_this.path, other.path);
        case C.MutatorType_3:
          return J.$eq$(_this.matrix, other.matrix);
        case C.MutatorType_4:
          return J.$eq$(_this.alpha, other.alpha);
        default:
          return false;
      }
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.type, _this.rect, _this.rrect, _this.path, _this.matrix, _this.alpha, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    }
  };
  A.MutatorsStack.prototype = {
    pushClipRect$1(rect) {
      J.add$1$ax(this._mutators, A.Mutator$clipRect(type$.Rect._as(rect)));
    },
    pushClipRRect$1(rrect) {
      J.add$1$ax(this._mutators, A.Mutator$clipRRect(type$.RRect._as(rrect)));
    },
    pushClipPath$1(path) {
      J.add$1$ax(this._mutators, A.Mutator$clipPath(type$.Path._as(path)));
    },
    pushTransform$1(matrix) {
      J.add$1$ax(this._mutators, A.Mutator$transform(type$.Matrix4._as(matrix)));
    },
    pushOpacity$1(alpha) {
      J.add$1$ax(this._mutators, A.Mutator$opacity(B._asInt(alpha)));
    },
    pop$0() {
      J.removeLast$0$ax(this._mutators);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (other === this)
        return true;
      return other instanceof A.MutatorsStack && B.boolConversionCheck(A.listEquals0(other._mutators, this._mutators, type$.Mutator));
    },
    get$hashCode(_) {
      return B.Object_hashAll(this._mutators);
    },
    get$iterator(_) {
      return J.get$iterator$ax(J.get$reversed$ax(this._mutators));
    },
    get$reversed(_) {
      return this._mutators;
    }
  };
  A.EmbedderFrameContext.prototype = {};
  A.SkiaFontCollection.prototype = {
    get$fontFallbackManager() {
      var value = this.__SkiaFontCollection_fontFallbackManager_AI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        value = A.FontFallbackManager_FontFallbackManager(A.SkiaFallbackRegistry$(this));
        this.set$__SkiaFontCollection_fontFallbackManager_AI(value);
      }
      return value;
    },
    _registerWithFontProvider$0() {
      var t2, t3, t4, t5, t6, t7, t8, _this = this,
        _s16_ = "flutterCanvasKit",
        t1 = _this._fontProvider;
      if (t1 != null) {
        t2 = type$.void;
        B._callMethodUnchecked0(t1, "delete", t2);
        _this._fontProvider = null;
        t1 = _this.skFontCollection;
        if (t1 != null)
          B._callMethodUnchecked0(t1, "delete", t2);
        _this.skFontCollection = null;
      }
      t1 = type$.JavaScriptObject;
      _this.set$_fontProvider(B._callMethodUnchecked0(B.getProperty(A.canvasKit(), "TypefaceFontProvider", t1), "Make", t1));
      _this.set$skFontCollection(B._callMethodUnchecked0(B.getProperty(A.canvasKit(), "FontCollection", t1), "Make", t1));
      t2 = _this.skFontCollection;
      t2.toString;
      t3 = type$.void;
      B._callMethodUnchecked0(t2, "enableFontFallback", t3);
      B._callMethodUnchecked1(t2, "setDefaultFontManager", _this._fontProvider, t3);
      t3 = _this.familyToFontMap;
      J.clear$0$ax(t3);
      for (t2 = J.get$iterator$ax(_this._registeredFonts), t4 = type$.Object; B.boolConversionCheck(t2.moveNext$0());) {
        t5 = t2.get$current();
        t6 = _this._fontProvider;
        t6.toString;
        t7 = t5.bytes;
        t8 = t5.family;
        A.TypefaceFontProviderExtension_registerFont(t6, t7, t8);
        J.add$1$ax(t3.putIfAbsent$2(t8, new A.SkiaFontCollection__registerWithFontProvider_closure()), B._callConstructorUnchecked1(B._getPropertyTrustType(B._getPropertyTrustType(B._getPropertyTrustType(B.staticInteropGlobalContext(), "window", t4), _s16_, t4), "Font", t4), t5.typeface, t1));
      }
      for (t2 = J.get$iterator$ax(_this.registeredFallbackFonts); B.boolConversionCheck(t2.moveNext$0());) {
        t5 = t2.get$current();
        t6 = _this._fontProvider;
        t6.toString;
        t7 = t5.bytes;
        t8 = t5.family;
        A.TypefaceFontProviderExtension_registerFont(t6, t7, t8);
        J.add$1$ax(t3.putIfAbsent$2(t8, new A.SkiaFontCollection__registerWithFontProvider_closure0()), B._callConstructorUnchecked1(B._getPropertyTrustType(B._getPropertyTrustType(B._getPropertyTrustType(B.staticInteropGlobalContext(), "window", t4), _s16_, t4), "Font", t4), t5.typeface, t1));
      }
    },
    loadFontFromList$2$fontFamily(list, fontFamily) {
      return this.loadFontFromList$body$SkiaFontCollection(type$.Uint8List._as(list), B._asStringQ(fontFamily));
    },
    loadFontFromList$body$SkiaFontCollection(list, fontFamily) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, typeface;
      var $async$loadFontFromList$2$fontFamily = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (fontFamily == null) {
                fontFamily = $async$self._readActualFamilyName$1(list);
                if (fontFamily == null) {
                  $.$get$printWarning().call$1("Failed to read font family name. Aborting font load.");
                  $async$returnValue = false;
                  // goto return
                  $async$goto = 1;
                  break;
                }
              }
              $async$goto = 3;
              return B._asyncAwait(A._wrapAwaitedExpression(A.renderer().initialize$0(), type$.void), $async$loadFontFromList$2$fontFamily);
            case 3:
              // returning from await.
              typeface = A.SkTypefaceFactoryExtension_MakeFreeTypeFaceFromData(B.getProperty(A.canvasKit(), "Typeface", type$.JavaScriptObject), D.NativeUint8List_methods.get$buffer(list));
              if (typeface != null) {
                J.add$1$ax($async$self._registeredFonts, A.RegisteredFont$(list, fontFamily, typeface));
                $async$self._registerWithFontProvider$0();
              } else {
                $.$get$printWarning().call$1('Failed to parse font family "' + fontFamily + '"');
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$loadFontFromList$2$fontFamily, $async$completer);
    },
    loadAssetFonts$1(manifest) {
      return this.loadAssetFonts$body$SkiaFontCollection(type$.FontManifest._as(manifest));
    },
    loadAssetFonts$body$SkiaFontCollection(manifest) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.AssetFontsResult),
        $async$returnValue, $async$self = this, t1, loadedRoboto, t2, t3, t4, t5, fontFailures, downloadedFonts, loadedFonts, _0_1, t6, unregisteredFont, t7, _0_2, assetName, bytes, typeface, pendingDownloads, $async$temp1;
      var $async$loadAssetFonts$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              pendingDownloads = B._setArrayType([], type$.JSArray_Future_FontDownloadResult);
              for (t1 = J.get$iterator$ax(manifest.families), loadedRoboto = false; B.boolConversionCheck(t1.moveNext$0());) {
                t2 = t1.get$current();
                t3 = t2.name;
                if (B.boolConversionCheck(J.$eq$(t3, "Roboto")))
                  loadedRoboto = true;
                for (t2 = J.get$iterator$ax(t2.fontAssets); B.boolConversionCheck(t2.moveNext$0());) {
                  t4 = t2.get$current();
                  t5 = A.assetManager();
                  t4 = t4.asset;
                  D.JSArray_methods.add$1(pendingDownloads, $async$self._downloadFont$3(t4, t5.getAssetUrl$1(t4), t3));
                }
              }
              if (!loadedRoboto)
                D.JSArray_methods.add$1(pendingDownloads, $async$self._downloadFont$3("Roboto", $.$get$_robotoUrl(), "Roboto"));
              fontFailures = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.FontLoadError);
              downloadedFonts = B._setArrayType([], type$.JSArray_Record_2_String_and_UnregisteredFont);
              $async$temp1 = J;
              $async$goto = 3;
              return B._asyncAwait(B.Future_wait(pendingDownloads, type$.FontDownloadResult), $async$loadAssetFonts$1);
            case 3:
              // returning from await.
              t1 = $async$temp1.get$iterator$ax($async$result);
            case 4:
              // for condition
              if (!B.boolConversionCheck(t1.moveNext$0())) {
                // goto after for
                $async$goto = 5;
                break;
              }
              t2 = t1.get$current();
              t3 = t2.font;
              t4 = t2.assetName;
              if (t3 != null)
                D.JSArray_methods.add$1(downloadedFonts, new B._Record_2(t4, t3));
              else {
                t2 = t2.error;
                t2.toString;
                fontFailures.$indexSet(0, t4, t2);
              }
              // goto for condition
              $async$goto = 4;
              break;
            case 5:
              // after for
              $async$goto = 6;
              return B._asyncAwait(A._wrapAwaitedExpression(A.renderer().initialize$0(), type$.void), $async$loadAssetFonts$1);
            case 6:
              // returning from await.
              loadedFonts = B._setArrayType([], type$.JSArray_String);
              for (t1 = D.JSArray_methods.get$iterator(downloadedFonts), t2 = type$.JavaScriptObject, t3 = $async$self._registeredFonts, t4 = J.getInterceptor$ax(t3); B.boolConversionCheck(t1.moveNext$0());) {
                t5 = t1.get$current();
                _0_1 = t5._0;
                t6 = _0_1;
                unregisteredFont = null;
                t7 = false;
                if (typeof t6 == "string") {
                  _0_2 = t5._1;
                  t5 = _0_2;
                  t5 = t5 instanceof A.UnregisteredFont;
                  if (t5)
                    unregisteredFont = _0_2;
                  assetName = _0_1;
                } else {
                  t5 = t7;
                  assetName = null;
                }
                if (!t5)
                  throw B.wrapException(B.StateError$("Pattern matching error"));
                bytes = J.asUint8List$0$x(unregisteredFont.bytes);
                typeface = A.SkTypefaceFactoryExtension_MakeFreeTypeFaceFromData(B.getProperty(A.canvasKit(), "Typeface", t2), D.NativeUint8List_methods.get$buffer(bytes));
                t5 = unregisteredFont.family;
                if (typeface != null) {
                  D.JSArray_methods.add$1(loadedFonts, assetName);
                  t4.add$1(t3, A.RegisteredFont$(bytes, t5, typeface));
                } else {
                  t6 = $.$get$printWarning();
                  t5 = B.S(t5);
                  t7 = unregisteredFont.url;
                  t6.call$1("Failed to load font " + t5 + " at " + B.S(t7));
                  $.$get$printWarning().call$1("Verify that " + B.S(t7) + " contains a valid font.");
                  fontFailures.$indexSet(0, assetName, A.FontInvalidDataError$(t7));
                }
              }
              $async$self.registerDownloadedFonts$0();
              $async$returnValue = A.AssetFontsResult$(loadedFonts, fontFailures);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$loadAssetFonts$1, $async$completer);
    },
    registerDownloadedFonts$0() {
      var t1, t2, t3, t4, t5, t6, registeredFont,
        makeRegisterFont = new A.SkiaFontCollection_registerDownloadedFonts_makeRegisterFont();
      for (t1 = this._unregisteredFonts, t2 = J.getInterceptor$ax(t1), t3 = t2.get$iterator(t1), t4 = this._registeredFonts, t5 = J.getInterceptor$ax(t4); B.boolConversionCheck(t3.moveNext$0());) {
        t6 = t3.get$current();
        registeredFont = makeRegisterFont.call$3(t6.bytes, t6.url, t6.family);
        if (registeredFont != null)
          t5.add$1(t4, registeredFont);
      }
      t2.clear$0(t1);
      this._registerWithFontProvider$0();
    },
    _downloadFont$3(assetName, url, fontFamily) {
      return this._downloadFont$body$SkiaFontCollection(B._asString(assetName), B._asString(url), B._asString(fontFamily));
    },
    _downloadFont$body$SkiaFontCollection(assetName, url, fontFamily) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.FontDownloadResult),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, response, e, t1, exception, fontData, $async$exception;
      var $async$_downloadFont$3 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              fontData = null;
              $async$handler = 4;
              $async$goto = 7;
              return B._asyncAwait(A.httpFetch(url), $async$_downloadFont$3);
            case 7:
              // returning from await.
              response = $async$result;
              if (!B.boolConversionCheck(response.get$hasPayload())) {
                $.$get$printWarning().call$1("Font family " + fontFamily + " not found (404) at " + url);
                t1 = A.FontDownloadResult$fromError(assetName, A.FontNotFoundError$(url));
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 8;
              return B._asyncAwait(A.HttpFetchResponseExtension_asByteBuffer(response), $async$_downloadFont$3);
            case 8:
              // returning from await.
              fontData = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              e = B.unwrapException($async$exception);
              $.$get$printWarning().call$1("Failed to load font " + fontFamily + " at " + url);
              $.$get$printWarning().call$1(J.toString$0$(e));
              t1 = A.FontDownloadResult$fromError(assetName, A.FontDownloadError$(url, e));
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              J.add$1$ax($async$self._downloadedFontFamilies, fontFamily);
              $async$returnValue = A.FontDownloadResult$fromFont(assetName, A.UnregisteredFont$(fontData, url, fontFamily));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return B._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return B._asyncStartSync($async$_downloadFont$3, $async$completer);
    },
    _readActualFamilyName$1(bytes) {
      var t1, actualFamily;
      type$.Uint8List._as(bytes);
      t1 = A.SkFontMgrNamespaceExtension_FromData(B.getProperty(A.canvasKit(), "FontMgr", type$.JavaScriptObject), B._setArrayType([bytes], type$.JSArray_Uint8List));
      t1.toString;
      actualFamily = A.SkFontMgrExtension_getFamilyName(t1, 0);
      B._callMethodUnchecked0(t1, "delete", type$.void);
      return actualFamily;
    },
    clear$0(_) {
    },
    set$__SkiaFontCollection_fontFallbackManager_AI(__SkiaFontCollection_fontFallbackManager_AI) {
      this.__SkiaFontCollection_fontFallbackManager_AI = type$.FontFallbackManager._as(__SkiaFontCollection_fontFallbackManager_AI);
    },
    set$_fontProvider(_fontProvider) {
      this._fontProvider = type$.nullable_JavaScriptObject._as(_fontProvider);
    },
    set$skFontCollection(skFontCollection) {
      this.skFontCollection = type$.nullable_JavaScriptObject._as(skFontCollection);
    },
    $isFlutterFontCollection: 1
  };
  A.RegisteredFont.prototype = {
    RegisteredFont$3(bytes, family, typeface) {
      var t1 = type$.Object;
      A.SkFontExtension_getGlyphBounds(B._callConstructorUnchecked1(B._getPropertyTrustType(B._getPropertyTrustType(B._getPropertyTrustType(B.staticInteropGlobalContext(), "window", t1), "flutterCanvasKit", t1), "Font", t1), this.typeface, type$.JavaScriptObject), B._setArrayType([0], type$.JSArray_int), null, null);
    }
  };
  A.UnregisteredFont.prototype = {};
  A.FontDownloadResult.prototype = {};
  A.SkiaFallbackRegistry.prototype = {
    getMissingCodePoints$2(codeUnits, fontFamilies) {
      var fonts, t1, t2, t3, typefacesForFamily, codePointsSupported, testString, glyphs, t4, i, missingCodeUnits;
      type$.List_int._as(codeUnits);
      type$.List_String._as(fontFamilies);
      fonts = B._setArrayType([], type$.JSArray_JavaScriptObject);
      for (t1 = J.get$iterator$ax(fontFamilies), t2 = this.fontCollection; B.boolConversionCheck(t1.moveNext$0());) {
        t3 = t1.get$current();
        typefacesForFamily = J.$index$asx(t2.familyToFontMap, t3);
        if (typefacesForFamily != null)
          D.JSArray_methods.addAll$1(fonts, typefacesForFamily);
      }
      t1 = J.getInterceptor$asx(codeUnits);
      codePointsSupported = B.List_List$filled(t1.get$length(codeUnits), false, false, type$.bool);
      testString = B.String_String$fromCharCodes(codeUnits, 0, null);
      for (t2 = D.JSArray_methods.get$iterator(fonts), t3 = J.getInterceptor$asx(codePointsSupported); B.boolConversionCheck(t2.moveNext$0());) {
        glyphs = A.SkFontExtension_getGlyphIDs(t2.get$current(), testString);
        for (t4 = glyphs.length, i = 0; i < t4; ++i)
          t3.$indexSet(codePointsSupported, i, J.$or$bn(t3.$index(codePointsSupported, i), !B.boolConversionCheck(J.$eq$(glyphs[i], 0))));
      }
      missingCodeUnits = B._setArrayType([], type$.JSArray_int);
      i = 0;
      while (true) {
        t2 = t3.get$length(codePointsSupported);
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (!(i < t2))
          break;
        if (!B.boolConversionCheck(t3.$index(codePointsSupported, i)))
          D.JSArray_methods.add$1(missingCodeUnits, t1.$index(codeUnits, i));
        ++i;
      }
      return missingCodeUnits;
    },
    loadFallbackFont$2(familyName, url) {
      return this.loadFallbackFont$body$SkiaFallbackRegistry(B._asString(familyName), B._asString(url));
    },
    loadFallbackFont$body$SkiaFallbackRegistry(familyName, url) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, buffer, typeface;
      var $async$loadFallbackFont$2 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return B._asyncAwait(A.httpFetchByteBuffer(url), $async$loadFallbackFont$2);
            case 3:
              // returning from await.
              buffer = $async$result;
              typeface = A.SkTypefaceFactoryExtension_MakeFreeTypeFaceFromData(B.getProperty(A.canvasKit(), "Typeface", type$.JavaScriptObject), buffer);
              if (typeface == null) {
                $.$get$printWarning().call$1("Failed to parse fallback font " + familyName + " as a font.");
                // goto return
                $async$goto = 1;
                break;
              }
              J.add$1$ax($async$self.fontCollection.registeredFallbackFonts, A.RegisteredFont$(D.NativeByteBuffer_methods.asUint8List$0(buffer), familyName, typeface));
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$loadFallbackFont$2, $async$completer);
    },
    updateFallbackFontFamilies$1(families) {
      type$.List_String._as(families);
      this.fontCollection.registerDownloadedFonts$0();
    },
    $isFallbackFontRegistry: 1
  };
  A.CkImage.prototype = {
    CkImage$2$videoFrame(skImage, videoFrame) {
      this.set$box(A.CountedRef$(skImage, this, "SkImage", type$.CkImage, type$.JavaScriptObject));
      this._init$0();
    },
    _init$0() {
      var t1 = $.Image_onCreate;
      if (t1 != null)
        t1.call$1(this);
    },
    get$box() {
      return this.__CkImage_box_F;
    },
    set$box(value) {
      type$.CountedRef_CkImage_JavaScriptObject._as(value);
      this.__CkImage_box_F !== $ && B.throwLateFieldAI("box");
      this.set$__CkImage_box_F(value);
    },
    get$skImage() {
      return this.get$box().get$nativeObject();
    },
    dispose$0() {
      var t1 = $.Image_onDispose;
      if (t1 != null)
        t1.call$1(this);
      this.get$box().unref$1(this);
    },
    get$width() {
      return J.toInt$0$n(A.SkImageExtension_width(this.get$skImage()));
    },
    get$height() {
      return J.toInt$0$n(A.SkImageExtension_height(this.get$skImage()));
    },
    toString$0(_) {
      return "[" + B.S(this.get$width()) + "\xd7" + B.S(this.get$height()) + "]";
    },
    set$__CkImage_box_F(__CkImage_box_F) {
      this.__CkImage_box_F = type$.CountedRef_CkImage_JavaScriptObject._as(__CkImage_box_F);
    },
    $isStackTraceDebugger: 1,
    $isImage: 1
  };
  A.Layer.prototype = {
    get$needsPainting() {
      return !B.boolConversionCheck(J.get$isEmpty$asx(this.paintBounds));
    },
    dispose$0() {
    },
    set$paintBounds(paintBounds) {
      this.paintBounds = type$.Rect._as(paintBounds);
    },
    $isEngineLayer: 1
  };
  A.PrerollContext.prototype = {};
  A.PaintContext.prototype = {};
  A.ContainerLayer.prototype = {
    add$1(_, child) {
      type$.Layer._as(child);
      child.parent = this;
      J.add$1$ax(this._layers, child);
    },
    preroll$2(prerollContext, matrix) {
      this.set$paintBounds(this.prerollChildren$2(type$.PrerollContext._as(prerollContext), type$.Matrix4._as(matrix)));
    },
    prerollChildren$2(context, childMatrix) {
      var t1, childPaintBounds, t2;
      type$.PrerollContext._as(context);
      type$.Matrix4._as(childMatrix);
      for (t1 = J.get$iterator$ax(this._layers), childPaintBounds = C.Rect_0_0_0_0; B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        t2.preroll$2(context, childMatrix);
        if (B.boolConversionCheck(childPaintBounds.get$isEmpty(0)))
          childPaintBounds = t2.paintBounds;
        else if (!B.boolConversionCheck(J.get$isEmpty$asx(t2.paintBounds)))
          childPaintBounds = childPaintBounds.expandToInclude$1(t2.paintBounds);
      }
      return childPaintBounds;
    },
    paintChildren$1(context) {
      var t1, t2;
      type$.PaintContext._as(context);
      for (t1 = J.get$iterator$ax(this._layers); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        if (B.boolConversionCheck(t2.get$needsPainting()))
          t2.paint$1(context);
      }
    }
  };
  A.RootLayer.prototype = {
    paint$1(paintContext) {
      this.paintChildren$1(type$.PaintContext._as(paintContext));
    }
  };
  A.ClipPathEngineLayer.prototype = {
    preroll$2(prerollContext, matrix) {
      var t1, t2, childPaintBounds, clipBounds;
      type$.PrerollContext._as(prerollContext);
      type$.Matrix4._as(matrix);
      t1 = prerollContext.mutatorsStack;
      t2 = this._clipPath;
      t1.pushClipPath$1(t2);
      childPaintBounds = this.prerollChildren$2(prerollContext, matrix);
      clipBounds = t2.getBounds$0();
      if (B.boolConversionCheck(childPaintBounds.overlaps$1(clipBounds)))
        this.set$paintBounds(childPaintBounds.intersect$1(clipBounds));
      t1.pop$0();
    },
    paint$1(paintContext) {
      var t1, t2, t3, _this = this;
      type$.PaintContext._as(paintContext);
      t1 = paintContext.internalNodesCanvas;
      t1.save$0();
      t2 = _this.__engine$_clipBehavior;
      t3 = J.getInterceptor$(t2);
      t1.clipPath$2(_this._clipPath, !B.boolConversionCheck(t3.$eq(t2, C.Clip_1)));
      if (B.boolConversionCheck(t3.$eq(t2, C.Clip_3)))
        t1.saveLayer$2(_this.paintBounds, null);
      _this.paintChildren$1(paintContext);
      if (B.boolConversionCheck(t3.$eq(t2, C.Clip_3)))
        t1.restore$0();
      t1.restore$0();
    },
    $isClipPathEngineLayer0: 1
  };
  A.ClipRectEngineLayer.prototype = {
    preroll$2(prerollContext, matrix) {
      var t1, t2, childPaintBounds;
      type$.PrerollContext._as(prerollContext);
      type$.Matrix4._as(matrix);
      t1 = prerollContext.mutatorsStack;
      t2 = this._clipRect;
      t1.pushClipRect$1(t2);
      childPaintBounds = this.prerollChildren$2(prerollContext, matrix);
      if (B.boolConversionCheck(childPaintBounds.overlaps$1(t2)))
        this.set$paintBounds(childPaintBounds.intersect$1(t2));
      t1.pop$0();
    },
    paint$1(paintContext) {
      var t1, t2, t3, t4;
      type$.PaintContext._as(paintContext);
      t1 = paintContext.internalNodesCanvas;
      t1.save$0();
      t2 = this._clipRect;
      t3 = this.__engine$_clipBehavior;
      t4 = J.getInterceptor$(t3);
      t1.clipRect$3(t2, C.ClipOp_1, !B.boolConversionCheck(t4.$eq(t3, C.Clip_1)));
      if (B.boolConversionCheck(t4.$eq(t3, C.Clip_3)))
        t1.saveLayer$2(t2, null);
      this.paintChildren$1(paintContext);
      if (B.boolConversionCheck(t4.$eq(t3, C.Clip_3)))
        t1.restore$0();
      t1.restore$0();
    },
    $isClipRectEngineLayer0: 1
  };
  A.ClipRRectEngineLayer.prototype = {
    preroll$2(prerollContext, matrix) {
      var t1, t2, childPaintBounds;
      type$.PrerollContext._as(prerollContext);
      type$.Matrix4._as(matrix);
      t1 = prerollContext.mutatorsStack;
      t2 = this._clipRRect;
      t1.pushClipRRect$1(t2);
      childPaintBounds = this.prerollChildren$2(prerollContext, matrix);
      if (B.boolConversionCheck(childPaintBounds.overlaps$1(t2.get$outerRect())))
        this.set$paintBounds(childPaintBounds.intersect$1(t2.get$outerRect()));
      t1.pop$0();
    },
    paint$1(paintContext) {
      var t1, t2, t3, _this = this;
      type$.PaintContext._as(paintContext);
      t1 = paintContext.internalNodesCanvas;
      t1.save$0();
      t2 = _this.__engine$_clipBehavior;
      t3 = J.getInterceptor$(t2);
      t1.clipRRect$2(_this._clipRRect, !B.boolConversionCheck(t3.$eq(t2, C.Clip_1)));
      if (B.boolConversionCheck(t3.$eq(t2, C.Clip_3)))
        t1.saveLayer$2(_this.paintBounds, null);
      _this.paintChildren$1(paintContext);
      if (B.boolConversionCheck(t3.$eq(t2, C.Clip_3)))
        t1.restore$0();
      t1.restore$0();
    },
    $isClipRRectEngineLayer0: 1
  };
  A.OpacityEngineLayer.prototype = {
    preroll$2(prerollContext, matrix) {
      var childMatrix, t1, t2, _this = this;
      type$.PrerollContext._as(prerollContext);
      childMatrix = A.Matrix4_Matrix4$copy(type$.Matrix4._as(matrix));
      t1 = _this.__engine$_offset;
      childMatrix.translate$2(t1.get$dx(), t1.get$dy());
      t2 = prerollContext.mutatorsStack;
      t2.pushTransform$1(A.Matrix4_Matrix4$translationValues(t1.get$dx(), t1.get$dy(), 0));
      t2.pushOpacity$1(_this.__engine$_alpha);
      _this.super$ContainerLayer$preroll(prerollContext, childMatrix);
      t2.pop$0();
      t2.pop$0();
      _this.set$paintBounds(_this.paintBounds.translate$2(t1.get$dx(), t1.get$dy()));
    },
    paint$1(paintContext) {
      var paint, t1, t2, _this = this;
      type$.PaintContext._as(paintContext);
      paint = A.CkPaint$();
      paint.set$color(A.Color$fromARGB(_this.__engine$_alpha, 0, 0, 0));
      t1 = paintContext.internalNodesCanvas;
      t1.save$0();
      t2 = _this.__engine$_offset;
      t1.translate$2(t2.get$dx(), t2.get$dy());
      t1.saveLayer$2(_this.paintBounds.shift$1(J.$negate$in(t2)), paint);
      paint.dispose$0();
      _this.paintChildren$1(paintContext);
      t1.restore$0();
      t1.restore$0();
    },
    $isOpacityEngineLayer0: 1
  };
  A.TransformEngineLayer.prototype = {
    preroll$2(prerollContext, matrix) {
      var t1, childMatrix, t2;
      type$.PrerollContext._as(prerollContext);
      t1 = this.__engine$_transform;
      childMatrix = type$.Matrix4._as(matrix).multiplied$1(t1);
      t2 = prerollContext.mutatorsStack;
      t2.pushTransform$1(t1);
      this.set$paintBounds(t1.transformRect$1(this.prerollChildren$2(prerollContext, childMatrix)));
      t2.pop$0();
    },
    paint$1(paintContext) {
      var t1;
      type$.PaintContext._as(paintContext);
      t1 = paintContext.internalNodesCanvas;
      t1.save$0();
      t1.transform$1(this.__engine$_transform.get$storage());
      this.paintChildren$1(paintContext);
      t1.restore$0();
    },
    $isTransformEngineLayer0: 1
  };
  A.OffsetEngineLayer.prototype = {$isOffsetEngineLayer0: 1};
  A.PictureLayer0.prototype = {
    preroll$2(prerollContext, matrix) {
      type$.PrerollContext._as(prerollContext);
      type$.Matrix4._as(matrix);
      this.set$paintBounds(this.picture.get$cullRect().shift$1(this.offset));
    },
    paint$1(paintContext) {
      var t2,
        t1 = type$.PaintContext._as(paintContext).leafNodesCanvas;
      t1.save$0();
      t2 = this.offset;
      t1.translate$2(t2.get$dx(), t2.get$dy());
      t1.drawPicture$1(this.picture);
      t1.restore$0();
    }
  };
  A.LayerScene.prototype = {
    dispose$0() {
    },
    toImageSync$2(width, height) {
      B._asInt(width);
      B._asInt(height);
      return this.layerTree.flatten$1(A.Size$(D.JSInt_methods.toDouble$0(width), D.JSInt_methods.toDouble$0(height))).toImageSync$2(width, height);
    },
    $isScene: 1
  };
  A.LayerSceneBuilder.prototype = {
    LayerSceneBuilder$0() {
      this.set$currentLayer(this.rootLayer);
    },
    get$currentLayer() {
      return this.__LayerSceneBuilder_currentLayer_A;
    },
    set$currentLayer(value) {
      this.__LayerSceneBuilder_currentLayer_A = type$.ContainerLayer._as(value);
    },
    addPerformanceOverlay$2(enabledOptions, bounds) {
      B._asInt(enabledOptions);
      type$.Rect._as(bounds);
      throw B.wrapException(B.UnimplementedError$(null));
    },
    addPicture$4$isComplexHint$willChangeHint(offset, picture, isComplexHint, willChangeHint) {
      type$.Offset._as(offset);
      type$.Picture._as(picture);
      B._asBool(isComplexHint);
      B._asBool(willChangeHint);
      J.add$1$ax(this.get$currentLayer(), A.PictureLayer$0(type$.CkPicture._as(picture), offset, isComplexHint, willChangeHint));
    },
    addRetained$1(retainedLayer) {
      type$.EngineLayer._as(retainedLayer);
      J.add$1$ax(this.get$currentLayer(), type$.Layer._as(retainedLayer));
    },
    build$0() {
      return A.LayerScene$(this.rootLayer);
    },
    pop$0() {
      var t1, _this = this;
      if (B.boolConversionCheck(J.$eq$(_this.get$currentLayer(), _this.rootLayer)))
        return;
      t1 = _this.get$currentLayer().parent;
      t1.toString;
      _this.set$currentLayer(t1);
    },
    pushClipPath$3$clipBehavior$oldLayer(path, clipBehavior, oldLayer) {
      type$.Path._as(path);
      type$.Clip._as(clipBehavior);
      type$.nullable_EngineLayer._as(oldLayer);
      return this.pushLayer$1$1(A.ClipPathEngineLayer$(type$.CkPath._as(path), clipBehavior), type$.ClipPathEngineLayer);
    },
    pushClipRRect$3$clipBehavior$oldLayer(rrect, clipBehavior, oldLayer) {
      type$.RRect._as(rrect);
      type$.nullable_Clip._as(clipBehavior);
      type$.nullable_EngineLayer._as(oldLayer);
      return this.pushLayer$1$1(A.ClipRRectEngineLayer$(rrect, clipBehavior), type$.ClipRRectEngineLayer);
    },
    pushClipRect$3$clipBehavior$oldLayer(rect, clipBehavior, oldLayer) {
      type$.Rect._as(rect);
      type$.Clip._as(clipBehavior);
      type$.nullable_EngineLayer._as(oldLayer);
      return this.pushLayer$1$1(A.ClipRectEngineLayer$(rect, clipBehavior), type$.ClipRectEngineLayer);
    },
    pushOffset$3$oldLayer(dx, dy, oldLayer) {
      B._asDouble(dx);
      B._asDouble(dy);
      type$.nullable_EngineLayer._as(oldLayer);
      return this.pushLayer$1$1(A.OffsetEngineLayer$(dx, dy), type$.OffsetEngineLayer);
    },
    pushOpacity$3$offset$oldLayer(alpha, offset, oldLayer) {
      B._asInt(alpha);
      type$.nullable_EngineLayer._as(oldLayer);
      return this.pushLayer$1$1(A.OpacityEngineLayer$(alpha, type$.Offset._as(offset)), type$.OpacityEngineLayer);
    },
    pushTransform$2$oldLayer(matrix4, oldLayer) {
      type$.Float64List._as(matrix4);
      type$.nullable_EngineLayer._as(oldLayer);
      return this.pushLayer$1$1(A.TransformEngineLayer$(A.Matrix4$fromFloat32List(A.toMatrix32(matrix4))), type$.TransformEngineLayer);
    },
    pushTransform$1(matrix4) {
      return this.pushTransform$2$oldLayer(matrix4, null);
    },
    pushLayer$1$1(layer, $T) {
      B.checkTypeBound($T, type$.ContainerLayer, "T", "pushLayer");
      $T._as(layer);
      J.add$1$ax(this.get$currentLayer(), layer);
      this.set$currentLayer(layer);
      return layer;
    },
    $isSceneBuilder: 1
  };
  A.LayerTree.prototype = {
    preroll$2$ignoreRasterCache(frame, ignoreRasterCache) {
      var t1;
      type$.Frame._as(frame);
      t1 = B._asBool(ignoreRasterCache) ? null : frame.rasterCache;
      this.rootLayer.preroll$2(A.PrerollContext$(t1, frame.viewEmbedder), A.Matrix4$identity());
    },
    paint$2$ignoreRasterCache(frame, ignoreRasterCache) {
      var internalNodesCanvas, t1, t2, context;
      type$.Frame._as(frame);
      B._asBool(ignoreRasterCache);
      internalNodesCanvas = A.CkNWayCanvas$();
      t1 = frame.canvas;
      internalNodesCanvas.addCanvas$1(t1);
      t2 = frame.viewEmbedder;
      J.forEach$1$ax(t2.getOverlayCanvases$0(), internalNodesCanvas.get$addCanvas());
      context = A.PaintContext$(internalNodesCanvas, t1, ignoreRasterCache ? null : frame.rasterCache, t2);
      t1 = this.rootLayer;
      if (B.boolConversionCheck(t1.get$needsPainting()))
        t1.paint$1(context);
    },
    flatten$1(size) {
      var recorder, canvas, t1, internalNodesCanvas, paintContext, _null = null;
      type$.Size._as(size);
      recorder = A.CkPictureRecorder$();
      canvas = recorder.beginRecording$1(C.Offset_0_0.$and(0, size));
      t1 = this.rootLayer;
      t1.preroll$2(A.PrerollContext$(_null, _null), A.Matrix4$identity());
      internalNodesCanvas = A.CkNWayCanvas$();
      internalNodesCanvas.addCanvas$1(canvas);
      paintContext = A.PaintContext$(internalNodesCanvas, canvas, _null, _null);
      if (B.boolConversionCheck(t1.get$needsPainting()))
        t1.paint$1(paintContext);
      return recorder.endRecording$0();
    }
  };
  A.Frame.prototype = {
    raster$2$ignoreRasterCache(layerTree, ignoreRasterCache) {
      var t1;
      type$.LayerTree._as(layerTree);
      B._asBool(ignoreRasterCache);
      t1 = type$.void;
      A.timeAction("preroll_frame", new A.Frame_raster_closure(this, layerTree, ignoreRasterCache), t1);
      A.timeAction("apply_frame", new A.Frame_raster_closure0(this, layerTree, ignoreRasterCache), t1);
      return true;
    }
  };
  A.CompositorContext.prototype = {
    acquireFrame$2(canvas, viewEmbedder) {
      return A.Frame$(type$.CkCanvas._as(canvas), null, type$.nullable_HtmlViewEmbedder._as(viewEmbedder));
    }
  };
  A.MultiSurfaceRasterizer.prototype = {
    createViewRasterizer$1(view) {
      type$.EngineFlutterView._as(view);
      return this._viewRasterizers.putIfAbsent$2(view, new A.MultiSurfaceRasterizer_createViewRasterizer_closure(this, view));
    },
    setResourceCacheMaxBytes$1(bytes) {
      var t1;
      B._asInt(bytes);
      for (t1 = J.get$iterator$ax(this._viewRasterizers.get$values()); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().displayFactory.forEachCanvas$1(new A.MultiSurfaceRasterizer_setResourceCacheMaxBytes_closure(bytes));
    }
  };
  A.MultiSurfaceViewRasterizer.prototype = {
    prepareToDraw$0() {
      this.displayFactory.get$baseCanvas().createOrUpdateSurface$1(this.currentFrameSize);
    },
    rasterizeToCanvas$2(canvas, pictures) {
      var skCanvas;
      type$.DisplayCanvas._as(canvas);
      type$.List_CkPicture._as(pictures);
      type$.Surface._as(canvas);
      canvas.createOrUpdateSurface$1(this.currentFrameSize);
      canvas.positionToShowFrame$1(this.currentFrameSize);
      skCanvas = canvas.getCanvas$0();
      skCanvas.clear$1(0, C.Color_0);
      J.forEach$1$ax(pictures, skCanvas.get$drawPicture());
      canvas.flush$0();
      return B.Future_Future$value(null, type$.void);
    },
    get$displayFactory() {
      return this.displayFactory;
    }
  };
  A.CkNWayCanvas.prototype = {
    addCanvas$1(canvas) {
      J.add$1$ax(this._canvases, type$.CkCanvas._as(canvas));
    },
    save$0() {
      var t3,
        t1 = this._canvases,
        t2 = J.getInterceptor$asx(t1),
        saveCount = 0, i = 0;
      while (true) {
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i < t3))
          break;
        saveCount = t2.$index(t1, i).save$0();
        ++i;
      }
      return saveCount;
    },
    saveLayer$2(bounds, paint) {
      var t1, t2, i, t3;
      type$.Rect._as(bounds);
      type$.nullable_CkPaint._as(paint);
      t1 = this._canvases;
      t2 = J.getInterceptor$asx(t1);
      i = 0;
      while (true) {
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i < t3))
          break;
        t2.$index(t1, i).saveLayer$2(bounds, paint);
        ++i;
      }
    },
    restore$0() {
      var t3,
        t1 = this._canvases,
        t2 = J.getInterceptor$asx(t1),
        i = 0;
      while (true) {
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i < t3))
          break;
        t2.$index(t1, i).restore$0();
        ++i;
      }
    },
    translate$2(dx, dy) {
      var t1, t2, i, t3;
      B._asDouble(dx);
      B._asDouble(dy);
      t1 = this._canvases;
      t2 = J.getInterceptor$asx(t1);
      i = 0;
      while (true) {
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i < t3))
          break;
        t2.$index(t1, i).translate$2(dx, dy);
        ++i;
      }
    },
    transform$1(matrix) {
      var t1, t2, i, t3;
      type$.Float32List._as(matrix);
      t1 = this._canvases;
      t2 = J.getInterceptor$asx(t1);
      i = 0;
      while (true) {
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i < t3))
          break;
        t2.$index(t1, i).transform$1(matrix);
        ++i;
      }
    },
    clipPath$2(path, doAntiAlias) {
      var t1, t2, i, t3;
      type$.CkPath._as(path);
      B._asBool(doAntiAlias);
      t1 = this._canvases;
      t2 = J.getInterceptor$asx(t1);
      i = 0;
      while (true) {
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i < t3))
          break;
        t2.$index(t1, i).clipPath$2(path, doAntiAlias);
        ++i;
      }
    },
    clipRect$3(rect, clipOp, doAntiAlias) {
      var t1, t2, i, t3;
      type$.Rect._as(rect);
      type$.ClipOp._as(clipOp);
      B._asBool(doAntiAlias);
      t1 = this._canvases;
      t2 = J.getInterceptor$asx(t1);
      i = 0;
      while (true) {
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i < t3))
          break;
        t2.$index(t1, i).clipRect$3(rect, clipOp, doAntiAlias);
        ++i;
      }
    },
    clipRRect$2(rrect, doAntiAlias) {
      var t1, t2, i, t3;
      type$.RRect._as(rrect);
      B._asBool(doAntiAlias);
      t1 = this._canvases;
      t2 = J.getInterceptor$asx(t1);
      i = 0;
      while (true) {
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i < t3))
          break;
        t2.$index(t1, i).clipRRect$2(rrect, doAntiAlias);
        ++i;
      }
    }
  };
  A.NativeMemoryFinalizationRegistry.prototype = {
    register$2(owner, ref) {
      var t2,
        t1 = type$.Object;
      t1._as(owner);
      t2 = type$.UniqueRef_Object;
      t2._as(ref);
      if (B.boolConversionCheck($.$get$browserSupportsFinalizationRegistry()))
        B._callMethodUnchecked2($.$get$_finalizationRegistry(), "register", A.ObjectToExternalDartReference_get_toExternalReference(owner, t1), A.ObjectToExternalDartReference_get_toExternalReference(ref, t2), type$.void);
    }
  };
  A.UniqueRef.prototype = {
    UniqueRef$3(owner, nativeObject, _debugOwnerLabel, $T) {
      this.set$_nativeObject(nativeObject);
      if (B.boolConversionCheck(A.Instrumentation_enabled()))
        A.Instrumentation_instance().incrementCounter$1(B.S(this._debugOwnerLabel) + " Created");
      $.$get$nativeMemoryFinalizationRegistry().register$2(owner, this);
    },
    get$nativeObject() {
      var t1 = this._nativeObject;
      t1.toString;
      return t1;
    },
    get$isDisposed() {
      return this._nativeObject == null;
    },
    dispose$0() {
      if (B.boolConversionCheck(A.Instrumentation_enabled()))
        A.Instrumentation_instance().incrementCounter$1(B.S(this._debugOwnerLabel) + " Deleted");
      var object = type$.JavaScriptObject._as(this.get$nativeObject());
      if (!B.boolConversionCheck(A.SkDeletableExtension_isDeleted(object)))
        B._callMethodUnchecked0(object, "delete", type$.void);
      this.set$_nativeObject(null);
    },
    collect$0() {
      if (!B.boolConversionCheck(this.get$isDisposed())) {
        if (B.boolConversionCheck(A.Instrumentation_enabled()))
          A.Instrumentation_instance().incrementCounter$1(B.S(this._debugOwnerLabel) + " Leaked");
        this.dispose$0();
      }
    },
    set$_nativeObject(_nativeObject) {
      this._nativeObject = this.$ti._eval$1("1?")._as(_nativeObject);
    }
  };
  A.CountedRef.prototype = {
    CountedRef$3(nativeObject, debugReferrer, debugLabel, $R, $T) {
      this.set$_ref(A.UniqueRef$(this, nativeObject, debugLabel, $T));
    },
    get$_ref() {
      return this.__CountedRef__ref_F;
    },
    set$_ref(value) {
      this.$ti._eval$1("UniqueRef<2>")._as(value);
      this.__CountedRef__ref_F !== $ && B.throwLateFieldAI("_ref");
      this.set$__CountedRef__ref_F(value);
    },
    get$nativeObject() {
      return this.get$_ref().get$nativeObject();
    },
    unref$1(debugReferrer) {
      var t1, _this = this;
      _this.$ti._precomputed1._as(debugReferrer);
      t1 = _this.__engine$_refCount;
      if (typeof t1 !== "number")
        return t1.$sub();
      _this.set$__engine$_refCount(t1 - 1);
      if (B.boolConversionCheck(J.$eq$(_this.__engine$_refCount, 0)))
        _this.get$_ref().dispose$0();
    },
    set$__CountedRef__ref_F(__CountedRef__ref_F) {
      this.__CountedRef__ref_F = this.$ti._eval$1("UniqueRef<2>")._as(__CountedRef__ref_F);
    },
    set$__engine$_refCount(_refCount) {
      this.__engine$_refCount = B._asInt(_refCount);
    }
  };
  A.OffscreenCanvasRasterizer.prototype = {
    createViewRasterizer$1(view) {
      type$.EngineFlutterView._as(view);
      return this._viewRasterizers.putIfAbsent$2(view, new A.OffscreenCanvasRasterizer_createViewRasterizer_closure(this, view));
    },
    setResourceCacheMaxBytes$1(bytes) {
      this.offscreenSurface.setSkiaResourceCacheMaxBytes$1(B._asInt(bytes));
    }
  };
  A.OffscreenCanvasViewRasterizer.prototype = {
    rasterizeToCanvas$2(canvas, pictures) {
      return this.rasterizeToCanvas$body$OffscreenCanvasViewRasterizer(type$.DisplayCanvas._as(canvas), type$.List_CkPicture._as(pictures));
    },
    rasterizeToCanvas$body$OffscreenCanvasViewRasterizer(canvas, pictures) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$rasterizeToCanvas$2 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return B._asyncAwait($async$self.rasterizer.offscreenSurface.rasterizeToCanvas$3($async$self.currentFrameSize, type$.RenderCanvas._as(canvas), pictures), $async$rasterizeToCanvas$2);
            case 2:
              // returning from await.
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$rasterizeToCanvas$2, $async$completer);
    },
    prepareToDraw$0() {
      this.rasterizer.offscreenSurface.createOrUpdateSurface$1(this.currentFrameSize);
    },
    get$displayFactory() {
      return this.displayFactory;
    }
  };
  A.Rendering.prototype = {
    add$1(_, entity) {
      J.add$1$ax(this.entities, type$.RenderingEntity._as(entity));
    },
    equalsForRendering$1(other) {
      var i, t5,
        t1 = type$.Rendering._as(other).entities,
        t2 = J.getInterceptor$asx(t1),
        t3 = this.entities,
        t4 = J.getInterceptor$asx(t3);
      if (!B.boolConversionCheck(J.$eq$(t2.get$length(t1), t4.get$length(t3))))
        return false;
      i = 0;
      while (true) {
        t5 = t4.get$length(t3);
        if (typeof t5 !== "number")
          return B.iae(t5);
        if (!(i < t5))
          break;
        if (!B.boolConversionCheck(t4.$index(t3, i).equalsForRendering$1(t2.$index(t1, i))))
          return false;
        ++i;
      }
      return true;
    },
    get$canvases() {
      return J.toList$0$ax(J.whereType$1$0$ax(this.entities, type$.RenderingRenderCanvas));
    },
    toString$0(_) {
      return J.toString$0$(this.entities);
    }
  };
  A.RenderingEntity.prototype = {};
  A.RenderingRenderCanvas.prototype = {
    add$1(_, picture) {
      J.add$1$ax(this.pictures, type$.CkPicture._as(picture));
    },
    equalsForRendering$1(other) {
      return type$.RenderingEntity._as(other) instanceof A.RenderingRenderCanvas;
    },
    toString$0(_) {
      return B.S(C.Type_RenderingRenderCanvas_gsm) + "(" + B.S(J.get$length$asx(this.pictures)) + " pictures)";
    },
    set$displayCanvas(displayCanvas) {
      this.displayCanvas = type$.nullable_DisplayCanvas._as(displayCanvas);
    }
  };
  A.RenderingPlatformView.prototype = {
    equalsForRendering$1(other) {
      type$.RenderingEntity._as(other);
      return other instanceof A.RenderingPlatformView && B.boolConversionCheck(J.$eq$(other.viewId, this.viewId));
    },
    toString$0(_) {
      return B.S(C.Type_RenderingPlatformView_IIV) + "(" + B.S(this.viewId) + ")";
    }
  };
  A.CkPaint.prototype = {
    CkPaint$0() {
      var t1 = this.skiaObject;
      A.SkPaintExtension_setAntiAlias(t1, true);
      A.SkPaintExtension_setColorInt(t1, 4278190080);
      this.set$_ref(A.UniqueRef$(this, t1, "Paint", type$.JavaScriptObject));
    },
    get$_ref() {
      return this.__CkPaint__ref_F;
    },
    set$_ref(value) {
      type$.UniqueRef_JavaScriptObject._as(value);
      this.__CkPaint__ref_F !== $ && B.throwLateFieldAI("_ref");
      this.set$__CkPaint__ref_F(value);
    },
    set$blendMode(value) {
      type$.BlendMode._as(value);
      if (B.boolConversionCheck(J.$eq$(this._blendMode, value)))
        return;
      this._blendMode = value;
      B._callMethodUnchecked1(this.skiaObject, "setBlendMode", A.toSkBlendMode(value), type$.void);
    },
    get$style() {
      return this._style;
    },
    set$style(value) {
      type$.PaintingStyle._as(value);
      if (B.boolConversionCheck(J.$eq$(this._style, value)))
        return;
      this._style = value;
      B._callMethodUnchecked1(this.skiaObject, "setStyle", A.toSkPaintStyle(value), type$.void);
    },
    get$strokeWidth() {
      return this._strokeWidth;
    },
    set$strokeWidth(value) {
      B._asDouble(value);
      if (B.boolConversionCheck(J.$eq$(this._strokeWidth, value)))
        return;
      this._strokeWidth = value;
      A.SkPaintExtension_setStrokeWidth(this.skiaObject, value);
    },
    get$color() {
      return A.Color$(this._color);
    },
    set$color(value) {
      type$.Color._as(value);
      if (B.boolConversionCheck(J.$eq$(this._color, value.get$value())))
        return;
      this.set$_color(value.get$value());
      A.SkPaintExtension_setColorInt(this.skiaObject, value.get$value());
    },
    set$shader(value) {
      var t1, _this = this;
      type$.nullable_Shader._as(value);
      if (B.boolConversionCheck(J.$eq$(_this._shader, value)))
        return;
      type$.nullable_CkShader._as(value);
      _this._shader = value;
      t1 = value == null ? null : value.getSkShader$1(_this._filterQuality);
      B._callMethodUnchecked1(_this.skiaObject, "setShader", t1, type$.void);
    },
    get$filterQuality() {
      return this._filterQuality;
    },
    set$filterQuality(value) {
      var t1, _this = this;
      type$.FilterQuality._as(value);
      if (B.boolConversionCheck(J.$eq$(_this._filterQuality, value)))
        return;
      _this._filterQuality = value;
      t1 = _this._shader;
      t1 = t1 == null ? null : t1.getSkShader$1(value);
      B._callMethodUnchecked1(_this.skiaObject, "setShader", t1, type$.void);
    },
    dispose$0() {
      this.get$_ref().dispose$0();
    },
    toString$0(_) {
      return "Paint()";
    },
    set$__CkPaint__ref_F(__CkPaint__ref_F) {
      this.__CkPaint__ref_F = type$.UniqueRef_JavaScriptObject._as(__CkPaint__ref_F);
    },
    set$_color(_color) {
      this._color = B._asInt(_color);
    },
    $isPaint: 1
  };
  A.CkPath.prototype = {
    CkPath$_$2(nativeObject, _fillType) {
      this.set$_ref(A.UniqueRef$(this, nativeObject, "Path", type$.JavaScriptObject));
    },
    get$_ref() {
      return this.__CkPath__ref_F;
    },
    set$_ref(value) {
      type$.UniqueRef_JavaScriptObject._as(value);
      this.__CkPath__ref_F !== $ && B.throwLateFieldAI("_ref");
      this.set$__CkPath__ref_F(value);
    },
    get$skiaObject() {
      return this.get$_ref().get$nativeObject();
    },
    get$fillType() {
      return this._fillType;
    },
    set$fillType(newFillType) {
      type$.PathFillType._as(newFillType);
      if (B.boolConversionCheck(J.$eq$(this._fillType, newFillType)))
        return;
      this._fillType = newFillType;
      B._callMethodUnchecked1(this.get$skiaObject(), "setFillType", A.toSkFillType(newFillType), type$.void);
    },
    addOval$1(oval) {
      type$.Rect._as(oval);
      A.SkPathExtension_addOval(this.get$skiaObject(), A.toSkRect(oval), false, 1);
    },
    addRRect$1(rrect) {
      type$.RRect._as(rrect);
      A.SkPathExtension_addRRect(this.get$skiaObject(), A.toSkRRect(rrect), false);
    },
    addRect$1(rect) {
      type$.Rect._as(rect);
      A.SkPathExtension_addRect(this.get$skiaObject(), A.toSkRect(rect));
    },
    close$0() {
      B._callMethodUnchecked0(this.get$skiaObject(), "close", type$.void);
    },
    contains$1(_, point) {
      type$.Offset._as(point);
      return A.SkPathExtension_contains(this.get$skiaObject(), point.get$dx(), point.get$dy());
    },
    getBounds$0() {
      return A.fromSkRect(A.SkPathExtension_getBounds(this.get$skiaObject()));
    },
    shift$1(offset) {
      var shiftedPath;
      type$.Offset._as(offset);
      shiftedPath = B._callMethodUnchecked0(this.get$skiaObject(), "copy", type$.JavaScriptObject);
      A.SkPathExtension_transform(shiftedPath, 1, 0, offset.get$dx(), 0, 1, offset.get$dy(), 0, 0, 1);
      return A.CkPath_CkPath$fromSkPath(shiftedPath, this._fillType);
    },
    set$__CkPath__ref_F(__CkPath__ref_F) {
      this.__CkPath__ref_F = type$.UniqueRef_JavaScriptObject._as(__CkPath__ref_F);
    },
    $isPath: 1
  };
  A.CkPicture.prototype = {
    CkPicture$1(skPicture) {
      this.set$_ref(A.UniqueRef$(this, skPicture, "Picture", type$.JavaScriptObject));
    },
    get$_ref() {
      return this.__CkPicture__ref_F;
    },
    set$_ref(value) {
      type$.UniqueRef_JavaScriptObject._as(value);
      this.__CkPicture__ref_F !== $ && B.throwLateFieldAI("_ref");
      this.set$__CkPicture__ref_F(value);
    },
    get$skiaObject() {
      return this.get$_ref().get$nativeObject();
    },
    get$cullRect() {
      return A.fromSkRect(A.SkPictureExtension_cullRect(this.get$skiaObject()));
    },
    dispose$0() {
      var t1 = $.Picture_onDispose;
      if (t1 != null)
        t1.call$1(this);
      this.get$_ref().dispose$0();
    },
    toImageSync$2(width, height) {
      var ckSurface, ckCanvas, t1, skImage, t2, t3, t4, imageInfo, pixels, rasterImage;
      B._asInt(width);
      B._asInt(height);
      ckSurface = A.CanvasKitRenderer_instance().pictureToImageSurface.createOrUpdateSurface$1(A.BitmapSize$(width, height));
      ckCanvas = ckSurface.getCanvas$0();
      ckCanvas.clear$1(0, C.Color_0);
      ckCanvas.drawPicture$1(this);
      t1 = type$.JavaScriptObject;
      skImage = B._callMethodUnchecked0(ckSurface.surface, "makeImageSnapshot", t1);
      t2 = B.getProperty(B.getProperty(A.canvasKit(), "AlphaType", t1), "Premul", t1);
      t1 = B.getProperty(B.getProperty(A.canvasKit(), "ColorType", t1), "RGBA_8888", t1);
      t3 = self.window.flutterCanvasKit.ColorSpace.SRGB;
      t4 = D.JSInt_methods.toDouble$0(width);
      imageInfo = A.SkImageInfo__staticInteropFactoryStub(t2, t3, t1, D.JSInt_methods.toDouble$0(height), t4);
      pixels = A.SkImageExtension_readPixels(skImage, 0, 0, imageInfo);
      rasterImage = A.CanvasKitExtension_MakeImage(A.canvasKit(), imageInfo, pixels, D.JSInt_methods.toDouble$0(4 * width));
      if (rasterImage == null)
        throw B.wrapException(B.StateError$("Unable to convert image pixels into SkImage."));
      return A.CkImage$(rasterImage);
    },
    set$__CkPicture__ref_F(__CkPicture__ref_F) {
      this.__CkPicture__ref_F = type$.UniqueRef_JavaScriptObject._as(__CkPicture__ref_F);
    },
    $isScenePicture: 1,
    $isPicture: 1
  };
  A.CkPictureRecorder.prototype = {
    beginRecording$1(bounds) {
      var t1, recorder;
      type$.Rect._as(bounds);
      t1 = type$.Object;
      recorder = A._callConstructorUnchecked0(B._getPropertyTrustType(B._getPropertyTrustType(B._getPropertyTrustType(B.staticInteropGlobalContext(), "window", t1), "flutterCanvasKit", t1), "PictureRecorder", t1), type$.JavaScriptObject);
      this.set$_skRecorder(recorder);
      return this._recordingCanvas = A.CkCanvas$(A.SkPictureRecorderExtension_beginRecording(recorder, A.toSkRect(bounds)));
    },
    get$recordingCanvas() {
      return this._recordingCanvas;
    },
    endRecording$0() {
      var skPicture, result, t1,
        recorder = this._skRecorder;
      if (recorder == null)
        throw B.wrapException(B.StateError$("PictureRecorder is not recording"));
      skPicture = B._callMethodUnchecked0(recorder, "finishRecordingAsPicture", type$.JavaScriptObject);
      B._callMethodUnchecked0(recorder, "delete", type$.void);
      this._skRecorder = null;
      result = A.CkPicture$(skPicture);
      t1 = $.Picture_onCreate;
      if (t1 != null)
        t1.call$1(result);
      return result;
    },
    get$isRecording() {
      return this._skRecorder != null;
    },
    set$_skRecorder(_skRecorder) {
      this._skRecorder = type$.nullable_JavaScriptObject._as(_skRecorder);
    },
    $isPictureRecorder: 1
  };
  A.Rasterizer.prototype = {};
  A.ViewRasterizer.prototype = {
    get$viewEmbedder() {
      var result, _this = this,
        value = _this.__ViewRasterizer_viewEmbedder_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.HtmlViewEmbedder$(_this.get$sceneHost(), _this);
        _this.__ViewRasterizer_viewEmbedder_FI !== $ && B.throwLateFieldADI("viewEmbedder");
        _this.__ViewRasterizer_viewEmbedder_FI = result;
        value = result;
      }
      return value;
    },
    get$sceneHost() {
      return this.view.get$dom().sceneHost;
    },
    draw$1(layerTree) {
      return this.draw$body$ViewRasterizer(type$.LayerTree._as(layerTree));
    },
    draw$body$ViewRasterizer(layerTree) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, pictureRecorder, t1, frameSize;
      var $async$draw$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              frameSize = $async$self.view.get$physicalSize();
              if (B.boolConversionCheck(frameSize.get$isEmpty(0))) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self.currentFrameSize = A.BitmapSize$fromSize(frameSize);
              $async$self.prepareToDraw$0();
              $async$self.get$viewEmbedder().set$frameSize($async$self.currentFrameSize);
              pictureRecorder = A.CkPictureRecorder$();
              pictureRecorder.beginRecording$1(C.Offset_0_0.$and(0, $async$self.currentFrameSize.toSize$0()));
              t1 = pictureRecorder.get$recordingCanvas();
              t1.toString;
              $async$self.context.acquireFrame$2(t1, $async$self.get$viewEmbedder()).raster$2$ignoreRasterCache(layerTree, true);
              $async$goto = 3;
              return B._asyncAwait($async$self.get$viewEmbedder().submitFrame$1(pictureRecorder.endRecording$0()), $async$draw$1);
            case 3:
              // returning from await.
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$draw$1, $async$completer);
    },
    getOverlay$0() {
      return this.get$displayFactory().getCanvas$0();
    },
    releaseOverlay$1(overlay) {
      type$.DisplayCanvas._as(overlay);
      this.get$displayFactory().releaseCanvas$1(overlay);
    },
    dispose$0() {
      this.get$viewEmbedder().dispose$0();
      this.get$displayFactory().dispose$0();
    }
  };
  A.DisplayCanvas.prototype = {};
  A.RenderQueue.prototype = {
    set$current(current) {
      this.current = type$.nullable_Record_3_Completer_void_completer_and_nullable_FrameTimingRecorder_recorder_and_Scene_scene._as(current);
    }
  };
  A.RenderCanvas.prototype = {
    RenderCanvas$0() {
      var t1 = this.canvasElement;
      A.DomElementExtension_setAttribute(t1, "aria-hidden", "true");
      A.DomCSSStyleDeclarationExtension_set_position(B.getProperty(t1, "style", type$.JavaScriptObject), "absolute");
      this._updateLogicalHtmlCanvasSize$0();
      B._callMethodUnchecked1(this.hostElement, "append", t1, type$.void);
    },
    get$renderContext() {
      var result,
        value = this.__RenderCanvas_renderContext_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.DomCanvasElementExtension_get_contextBitmapRenderer(this.canvasElement);
        value !== $ && B.throwLateFieldADI("renderContext");
        this.__RenderCanvas_renderContext_FI = result;
        value = result;
      }
      return value;
    },
    get$renderContext2d() {
      var result,
        value = this.__RenderCanvas_renderContext2d_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.DomCanvasElementExtension_get_context2D(this.canvasElement);
        value !== $ && B.throwLateFieldADI("renderContext2d");
        this.__RenderCanvas_renderContext2d_FI = result;
        value = result;
      }
      return value;
    },
    _updateLogicalHtmlCanvasSize$0() {
      var t2, style, _this = this,
        devicePixelRatio = A.EngineFlutterDisplay_instance().get$devicePixelRatio(),
        t1 = _this._pixelWidth;
      if (typeof t1 !== "number")
        return t1.$div();
      t2 = _this._pixelHeight;
      if (typeof t2 !== "number")
        return t2.$div();
      style = B.getProperty(_this.canvasElement, "style", type$.JavaScriptObject);
      A.DomCSSStyleDeclarationExtension_set_width(style, B.S(t1 / devicePixelRatio) + "px");
      A.DomCSSStyleDeclarationExtension_set_height(style, B.S(t2 / devicePixelRatio) + "px");
      _this._currentDevicePixelRatio = devicePixelRatio;
    },
    render$1(bitmap) {
      var t1;
      type$.JavaScriptObject._as(bitmap);
      t1 = type$.double;
      this._ensureSize$1(A.BitmapSize$(A.JSNumberToNumber_get_toDartInt(B.getProperty(bitmap, "width", t1)), A.JSNumberToNumber_get_toDartInt(B.getProperty(bitmap, "height", t1))));
      B._callMethodUnchecked1(this.get$renderContext(), "transferFromImageBitmap", bitmap, type$.void);
    },
    renderWithNoBitmapSupport$3(imageSource, sourceHeight, size) {
      var t1, t2, t3;
      type$.JavaScriptObject._as(imageSource);
      B._asInt(sourceHeight);
      type$.BitmapSize._as(size);
      this._ensureSize$1(size);
      t1 = this.get$renderContext2d();
      t2 = size.height;
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = size.width;
      A.DomCanvasRenderingContext2DExtension_drawImage(t1, imageSource, 0, sourceHeight - t2, t3, t2, 0, 0, t3, t2);
    },
    _ensureSize$1(size) {
      var t1, _this = this;
      type$.BitmapSize._as(size);
      t1 = size.width;
      if (B.boolConversionCheck(J.$eq$(t1, _this._pixelWidth)) && B.boolConversionCheck(J.$eq$(size.height, _this._pixelHeight))) {
        if (!B.boolConversionCheck(J.$eq$(A.EngineFlutterDisplay_instance().get$devicePixelRatio(), _this._currentDevicePixelRatio)))
          _this._updateLogicalHtmlCanvasSize$0();
        return;
      }
      _this.set$_pixelWidth(t1);
      _this.set$_pixelHeight(size.height);
      t1 = _this.canvasElement;
      A.DomCanvasElementExtension_set_width(t1, J.toDouble$0$n(_this._pixelWidth));
      A.DomCanvasElementExtension_set_height(t1, J.toDouble$0$n(_this._pixelHeight));
      _this._updateLogicalHtmlCanvasSize$0();
    },
    initialize$0() {
    },
    dispose$0() {
      B._callMethodUnchecked0(this.hostElement, "remove", type$.void);
    },
    set$_pixelWidth(_pixelWidth) {
      this._pixelWidth = B._asInt(_pixelWidth);
    },
    set$_pixelHeight(_pixelHeight) {
      this._pixelHeight = B._asInt(_pixelHeight);
    },
    get$hostElement() {
      return this.hostElement;
    }
  };
  A.CanvasKitVariant.prototype = {
    _enumToString$0() {
      return "CanvasKitVariant." + B.S(this._core$_name);
    }
  };
  A.CanvasKitRenderer.prototype = {
    get$rendererTag() {
      return "canvaskit";
    },
    get$_fontCollection() {
      var result,
        value = this.__CanvasKitRenderer__fontCollection_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.SkiaFontCollection$();
        value !== $ && B.throwLateFieldADI("_fontCollection");
        this.__CanvasKitRenderer__fontCollection_FI = result;
        value = result;
      }
      return value;
    },
    get$fontCollection() {
      return this.get$_fontCollection();
    },
    set$resourceCacheMaxBytes(bytes) {
      this._rasterizer.setResourceCacheMaxBytes$1(B._asInt(bytes));
    },
    initialize$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this;
      var $async$initialize$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._initialized == null)
                $async$self.set$_initialized(new A.CanvasKitRenderer_initialize_closure($async$self).call$0());
              $async$returnValue = $async$self._initialized;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$initialize$0, $async$completer);
    },
    createPaint$0() {
      return A.CkPaint$();
    },
    createCanvas$2(recorder, cullRect) {
      return A.CanvasKitCanvas_CanvasKitCanvas(type$.PictureRecorder._as(recorder), type$.nullable_Rect._as(cullRect));
    },
    createLinearGradient$6(from, to, colors, colorStops, tileMode, matrix4) {
      var t1 = type$.Offset;
      return A.CkGradientLinear$(t1._as(from), t1._as(to), type$.List_Color._as(colors), type$.nullable_List_double._as(colorStops), type$.TileMode._as(tileMode), type$.nullable_Float32List._as(matrix4));
    },
    createPictureRecorder$0() {
      return A.CkPictureRecorder$();
    },
    createSceneBuilder$0() {
      return A.LayerSceneBuilder$();
    },
    createPath$0() {
      return A.CkPath_CkPath();
    },
    createTextStyle$21$background$color$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontVariations$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$shadows$textBaseline$wordSpacing(background, color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, leadingDistribution, letterSpacing, locale, shadows, textBaseline, wordSpacing) {
      var t1 = type$.nullable_Color;
      t1._as(color);
      type$.nullable_TextDecoration._as(decoration);
      t1._as(decorationColor);
      type$.nullable_TextDecorationStyle._as(decorationStyle);
      B._asDoubleQ(decorationThickness);
      type$.nullable_FontWeight._as(fontWeight);
      type$.nullable_FontStyle._as(fontStyle);
      type$.nullable_TextBaseline._as(textBaseline);
      B._asStringQ(fontFamily);
      type$.nullable_List_String._as(fontFamilyFallback);
      B._asDoubleQ(fontSize);
      B._asDoubleQ(letterSpacing);
      B._asDoubleQ(wordSpacing);
      B._asDoubleQ(height);
      type$.nullable_TextLeadingDistribution._as(leadingDistribution);
      type$.nullable_Locale._as(locale);
      t1 = type$.nullable_Paint;
      t1._as(background);
      t1._as(foreground);
      type$.nullable_List_Shadow._as(shadows);
      type$.nullable_List_FontFeature._as(fontFeatures);
      type$.nullable_List_FontVariation._as(fontVariations);
      t1 = type$.nullable_CkPaint;
      return A.CkTextStyle_CkTextStyle(t1._as(background), color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, t1._as(foreground), height, leadingDistribution, letterSpacing, locale, shadows, textBaseline, wordSpacing);
    },
    createParagraphStyle$12$ellipsis$fontFamily$fontSize$fontStyle$fontWeight$height$locale$maxLines$strutStyle$textAlign$textDirection$textHeightBehavior(ellipsis, fontFamily, fontSize, fontStyle, fontWeight, height, locale, maxLines, strutStyle, textAlign, textDirection, textHeightBehavior) {
      type$.nullable_TextAlign._as(textAlign);
      type$.nullable_TextDirection._as(textDirection);
      B._asIntQ(maxLines);
      B._asStringQ(fontFamily);
      B._asDoubleQ(fontSize);
      B._asDoubleQ(height);
      type$.nullable_TextHeightBehavior._as(textHeightBehavior);
      type$.nullable_FontWeight._as(fontWeight);
      type$.nullable_FontStyle._as(fontStyle);
      type$.nullable_StrutStyle._as(strutStyle);
      return A.CkParagraphStyle$(B._asStringQ(ellipsis), fontFamily, fontSize, fontStyle, fontWeight, height, type$.nullable_Locale._as(locale), maxLines, strutStyle, textAlign, textDirection, textHeightBehavior);
    },
    createParagraphBuilder$1(style) {
      return A.CkParagraphBuilder$(type$.ParagraphStyle._as(style));
    },
    renderScene$2(scene, view) {
      return this.renderScene$body$CanvasKitRenderer(type$.Scene._as(scene), type$.FlutterView._as(view));
    },
    renderScene$body$CanvasKitRenderer(scene, view) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, renderQueue, recorder, completer, t1;
      var $async$renderScene$2 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = J.$index$asx($async$self._rasterizers, view.viewId);
              t1.toString;
              renderQueue = t1.queue;
              recorder = B.boolConversionCheck(A.FrameTimingRecorder_frameTimingsEnabled()) ? A.FrameTimingRecorder$() : null;
              if (renderQueue.current != null) {
                t1 = renderQueue.next;
                if (t1 != null)
                  t1._0.complete$0();
                completer = B.Completer_Completer(type$.void);
                renderQueue.next = new B._Record_3_completer_recorder_scene(completer, recorder, scene);
                $async$returnValue = completer.get$future();
                // goto return
                $async$goto = 1;
                break;
              }
              completer = B.Completer_Completer(type$.void);
              renderQueue.current = new B._Record_3_completer_recorder_scene(completer, recorder, scene);
              B.unawaited($async$self._kickRenderLoop$1(t1));
              $async$returnValue = completer.get$future();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$renderScene$2, $async$completer);
    },
    _kickRenderLoop$1(rasterizer) {
      return this._kickRenderLoop$body$CanvasKitRenderer(type$.ViewRasterizer._as(rasterizer));
    },
    _kickRenderLoop$body$CanvasKitRenderer(rasterizer) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, current, error, stackTrace, exception, renderQueue, t1, $async$exception;
      var $async$_kickRenderLoop$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              renderQueue = rasterizer.queue;
              t1 = renderQueue.current;
              t1.toString;
              current = t1;
              $async$handler = 4;
              $async$goto = 7;
              return B._asyncAwait($async$self._renderScene$3(current._2, rasterizer, current._1), $async$_kickRenderLoop$1);
            case 7:
              // returning from await.
              current._0.complete$0();
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              error = B.unwrapException($async$exception);
              stackTrace = B.getTraceFromException($async$exception);
              current._0.completeError$2(error, stackTrace);
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              renderQueue.set$current(renderQueue.next);
              renderQueue.next = null;
              if (renderQueue.current == null) {
                // goto return
                $async$goto = 1;
                break;
              } else {
                $async$returnValue = $async$self._kickRenderLoop$1(rasterizer);
                // goto return
                $async$goto = 1;
                break;
              }
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return B._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return B._asyncStartSync($async$_kickRenderLoop$1, $async$completer);
    },
    _renderScene$3(scene, rasterizer, recorder) {
      return this._renderScene$body$CanvasKitRenderer(type$.Scene._as(scene), type$.ViewRasterizer._as(rasterizer), type$.nullable_FrameTimingRecorder._as(recorder));
    },
    _renderScene$body$CanvasKitRenderer(scene, rasterizer, recorder) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        t1;
      var $async$_renderScene$3 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = recorder == null;
              if (!t1)
                recorder.recordBuildFinish$0();
              if (!t1)
                recorder.recordRasterStart$0();
              $async$goto = 2;
              return B._asyncAwait(rasterizer.draw$1(type$.LayerScene._as(scene).layerTree), $async$_renderScene$3);
            case 2:
              // returning from await.
              if (!t1)
                recorder.recordRasterFinish$0();
              if (!t1)
                recorder.submitTimings$0();
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$_renderScene$3, $async$completer);
    },
    _onViewCreated$1(viewId) {
      var t1;
      B._asInt(viewId);
      t1 = J.$index$asx(A.EnginePlatformDispatcher_instance().get$viewManager(), viewId);
      t1.toString;
      J.$indexSet$ax(this._rasterizers, t1.viewId, this._rasterizer.createViewRasterizer$1(t1));
    },
    _onViewDisposed$1(viewId) {
      var t1;
      B._asInt(viewId);
      t1 = this._rasterizers;
      if (!B.boolConversionCheck(t1.containsKey$1(viewId)))
        return;
      t1 = J.remove$1$ax(t1, viewId);
      t1.toString;
      t1.dispose$0();
    },
    clearFragmentProgramCache$0() {
      J.clear$0$ax($.CanvasKitRenderer__programs);
    },
    createLineMetrics$9$ascent$baseline$descent$hardBreak$height$left$lineNumber$unscaledAscent$width(ascent, baseline, descent, hardBreak, height, left, lineNumber, unscaledAscent, width) {
      B._asBool(hardBreak);
      B._asDouble(ascent);
      B._asDouble(descent);
      B._asDouble(unscaledAscent);
      B._asDouble(height);
      B._asDouble(width);
      B._asDouble(left);
      return A.EngineLineMetrics$(ascent, B._asDouble(baseline), descent, hardBreak, height, left, B._asInt(lineNumber), unscaledAscent, width);
    },
    set$_initialized(_initialized) {
      this._initialized = type$.nullable_Future_void._as(_initialized);
    },
    set$_onViewCreatedListener(_onViewCreatedListener) {
      this._onViewCreatedListener = type$.nullable_StreamSubscription_int._as(_onViewCreatedListener);
    },
    set$_onViewDisposedListener(_onViewDisposedListener) {
      this._onViewDisposedListener = type$.nullable_StreamSubscription_int._as(_onViewDisposedListener);
    },
    $isRenderer: 1
  };
  A.SimpleCkShader.prototype = {
    SimpleCkShader$0() {
      var _this = this;
      _this.set$_ref(A.UniqueRef$(_this, _this.createSkiaObject$0(), _this.get$debugOwnerLabel(), type$.JavaScriptObject));
    },
    get$_ref() {
      return this.__SimpleCkShader__ref_F;
    },
    set$_ref(value) {
      type$.UniqueRef_JavaScriptObject._as(value);
      this.__SimpleCkShader__ref_F !== $ && B.throwLateFieldAI("_ref");
      this.set$__SimpleCkShader__ref_F(value);
    },
    getSkShader$1(contextualQuality) {
      type$.FilterQuality._as(contextualQuality);
      return this.get$_ref().get$nativeObject();
    },
    toString$0(_) {
      return "Gradient()";
    },
    set$__SimpleCkShader__ref_F(__SimpleCkShader__ref_F) {
      this.__SimpleCkShader__ref_F = type$.UniqueRef_JavaScriptObject._as(__SimpleCkShader__ref_F);
    },
    $isCkShader: 1,
    $isShader: 1
  };
  A.CkGradientLinear.prototype = {
    get$debugOwnerLabel() {
      return "Gradient.linear";
    },
    createSkiaObject$0() {
      var _this = this,
        t1 = B.getProperty(A.canvasKit(), "Shader", type$.JavaScriptObject),
        t2 = A.toSkPoint(_this.from),
        t3 = A.toSkPoint(_this.to),
        t4 = A.toFlatColors(_this.colors),
        t5 = A.toSkColorStops(_this.colorStops),
        t6 = A.toSkTileMode(_this.tileMode),
        t7 = _this.matrix4;
      return A.SkShaderNamespaceExtension_MakeLinearGradient(t1, t2, t3, t4, t5, t6, t7 != null ? A.toSkMatrixFromFloat32(t7) : null);
    },
    toString$0(_) {
      return "Gradient()";
    },
    $isGradient: 1
  };
  A.Surface.prototype = {
    setSkiaResourceCacheMaxBytes$1(bytes) {
      this._skiaCacheBytes = B._asInt(bytes);
      this._syncCacheBytes$0();
    },
    _syncCacheBytes$0() {
      var t2,
        t1 = this._skiaCacheBytes;
      if (t1 != null) {
        t2 = this._grContext;
        if (t2 != null)
          A.SkGrContextExtension_setResourceCacheLimitBytes(t2, J.toDouble$0$n(t1));
      }
    },
    getCanvas$0() {
      return this._surface.getCanvas$0();
    },
    flush$0() {
      this._surface.flush$0();
    },
    rasterizeToCanvas$3(bitmapSize, canvas, pictures) {
      return this.rasterizeToCanvas$body$Surface(type$.BitmapSize._as(bitmapSize), type$.RenderCanvas._as(canvas), type$.List_CkPicture._as(pictures));
    },
    rasterizeToCanvas$body$Surface(bitmapSize, canvas, pictures) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, bitmapSource, t2, imageSource, skCanvas, $async$temp1;
      var $async$rasterizeToCanvas$3 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              skCanvas = $async$self.getCanvas$0();
              skCanvas.clear$1(0, C.Color_0);
              J.forEach$1$ax(pictures, skCanvas.get$drawPicture());
              $async$self.flush$0();
              $async$goto = B.boolConversionCheck(A.browserSupportsCreateImageBitmap()) ? 3 : 5;
              break;
            case 3:
              // then
              if (B.boolConversionCheck($async$self.useOffscreenCanvas)) {
                t1 = $async$self._offscreenCanvas;
                t1.toString;
                bitmapSource = t1;
              } else {
                t1 = $async$self._canvasElement;
                t1.toString;
                bitmapSource = t1;
              }
              t1 = $async$self._pixelHeight;
              t2 = bitmapSize.height;
              if (typeof t1 !== "number") {
                $async$returnValue = t1.$sub();
                // goto return
                $async$goto = 1;
                break;
              }
              if (typeof t2 !== "number") {
                $async$returnValue = B.iae(t2);
                // goto return
                $async$goto = 1;
                break;
              }
              $async$temp1 = canvas;
              $async$goto = 6;
              return B._asyncAwait(A.createImageBitmap(bitmapSource, new B._Record_4_height_width_x78_y([t2, bitmapSize.width, 0, t1 - t2])), $async$rasterizeToCanvas$3);
            case 6:
              // returning from await.
              $async$temp1.render$1($async$result);
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              if (B.boolConversionCheck($async$self.useOffscreenCanvas)) {
                t1 = $async$self._offscreenCanvas;
                t1.toString;
                imageSource = t1;
              } else {
                t1 = $async$self._canvasElement;
                t1.toString;
                imageSource = t1;
              }
              canvas.renderWithNoBitmapSupport$3(imageSource, $async$self._pixelHeight, bitmapSize);
            case 4:
              // join
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$rasterizeToCanvas$3, $async$completer);
    },
    _updateLogicalHtmlCanvasSize$0() {
      var t2, t3, style, _this = this,
        devicePixelRatio = A.EngineFlutterDisplay_instance().get$devicePixelRatio(),
        t1 = _this._pixelWidth;
      if (typeof t1 !== "number")
        return t1.$div();
      t2 = _this._pixelHeight;
      if (typeof t2 !== "number")
        return t2.$div();
      t3 = _this._canvasElement;
      t3.toString;
      style = B.getProperty(t3, "style", type$.JavaScriptObject);
      A.DomCSSStyleDeclarationExtension_set_width(style, B.S(t1 / devicePixelRatio) + "px");
      A.DomCSSStyleDeclarationExtension_set_height(style, B.S(t2 / devicePixelRatio) + "px");
      _this._currentDevicePixelRatio = devicePixelRatio;
    },
    positionToShowFrame$1(frameSize) {
      var devicePixelRatio, t1, t2, t3;
      type$.BitmapSize._as(frameSize);
      devicePixelRatio = A.EngineFlutterDisplay_instance().get$devicePixelRatio();
      t1 = this._pixelHeight;
      if (typeof t1 !== "number")
        return t1.$div();
      t2 = frameSize.height;
      if (typeof t2 !== "number")
        return t2.$div();
      t3 = this._canvasElement;
      t3.toString;
      A.DomCSSStyleDeclarationExtension_set_transform(B.getProperty(t3, "style", type$.JavaScriptObject), "translate(0px, " + B.S(t2 / devicePixelRatio - t1 / devicePixelRatio) + "px)");
    },
    ensureSurface$0() {
      if (this._surface != null)
        return;
      this.createOrUpdateSurface$1(C.BitmapSize_1_1);
    },
    createOrUpdateSurface$1(size) {
      var previousSurfaceSize, devicePixelRatio, t1, previousCanvasSize, t2, newSize, t3, _this = this;
      type$.BitmapSize._as(size);
      if (B.boolConversionCheck(size.get$isEmpty(0)))
        throw B.wrapException(A.CanvasKitError$("Cannot create surfaces of empty size."));
      if (!B.boolConversionCheck(_this._forceNewContext)) {
        previousSurfaceSize = _this._currentSurfaceSize;
        if (previousSurfaceSize != null && B.boolConversionCheck(J.$eq$(size.width, previousSurfaceSize.width)) && B.boolConversionCheck(J.$eq$(size.height, previousSurfaceSize.height))) {
          devicePixelRatio = A.EngineFlutterDisplay_instance().get$devicePixelRatio();
          if (B.boolConversionCheck(_this.isDisplayCanvas) && devicePixelRatio !== _this._currentDevicePixelRatio)
            _this._updateLogicalHtmlCanvasSize$0();
          t1 = _this._surface;
          t1.toString;
          return t1;
        }
        previousCanvasSize = _this._currentCanvasPhysicalSize;
        if (previousCanvasSize != null) {
          t1 = size.width;
          t2 = previousCanvasSize.width;
          if (typeof t1 !== "number")
            return t1.$gt();
          if (typeof t2 !== "number")
            return B.iae(t2);
          if (!(t1 > t2)) {
            t1 = size.height;
            t2 = previousCanvasSize.height;
            if (typeof t1 !== "number")
              return t1.$gt();
            if (typeof t2 !== "number")
              return B.iae(t2);
            t2 = t1 > t2;
            t1 = t2;
          } else
            t1 = true;
        } else
          t1 = false;
        if (t1) {
          newSize = A.BitmapSize$fromSize(J.$mul$ns(size.toSize$0(), 1.4));
          t1 = _this._surface;
          if (t1 != null)
            t1.dispose$0();
          _this._surface = null;
          _this.set$_pixelWidth(newSize.width);
          _this.set$_pixelHeight(newSize.height);
          t1 = B.boolConversionCheck(_this.useOffscreenCanvas);
          t2 = _this._pixelWidth;
          t3 = J.getInterceptor$n(t2);
          if (t1) {
            t1 = _this._offscreenCanvas;
            t1.toString;
            A.DomOffscreenCanvasExtension_set_width(t1, t3.toDouble$0(t2));
            t2 = _this._offscreenCanvas;
            t2.toString;
            A.DomOffscreenCanvasExtension_set_height(t2, J.toDouble$0$n(_this._pixelHeight));
          } else {
            t1 = _this._canvasElement;
            t1.toString;
            A.DomCanvasElementExtension_set_width(t1, t3.toDouble$0(t2));
            t2 = _this._canvasElement;
            t2.toString;
            A.DomCanvasElementExtension_set_height(t2, J.toDouble$0$n(_this._pixelHeight));
          }
          _this._currentCanvasPhysicalSize = A.BitmapSize$(_this._pixelWidth, _this._pixelHeight);
          if (B.boolConversionCheck(_this.isDisplayCanvas))
            _this._updateLogicalHtmlCanvasSize$0();
        }
      }
      if (B.boolConversionCheck(_this._forceNewContext) || _this._currentCanvasPhysicalSize == null) {
        t1 = _this._surface;
        if (t1 != null)
          t1.dispose$0();
        _this._surface = null;
        t1 = _this._grContext;
        t2 = t1 == null;
        if (!t2)
          B._callMethodUnchecked0(t1, "releaseResourcesAndAbandonContext", type$.void);
        if (!t2)
          B._callMethodUnchecked0(t1, "delete", type$.void);
        _this._grContext = null;
        _this._createNewCanvas$1(size);
        _this._currentCanvasPhysicalSize = size;
      }
      _this._currentSurfaceSize = size;
      t1 = _this._surface;
      if (t1 != null)
        t1.dispose$0();
      _this.set$_surface(_this._createNewSurface$1(size));
      t1 = _this._surface;
      t1.toString;
      return t1;
    },
    _contextRestoredListener$1($event) {
      var t1;
      type$.JavaScriptObject._as($event);
      A.EnginePlatformDispatcher_instance().invokeOnMetricsChanged$0();
      t1 = type$.void;
      B._callMethodUnchecked0($event, "stopPropagation", t1);
      B._callMethodUnchecked0($event, "preventDefault", t1);
    },
    _contextLostListener$1($event) {
      type$.JavaScriptObject._as($event);
      this._forceNewContext = true;
      B._callMethodUnchecked0($event, "preventDefault", type$.void);
    },
    _createNewCanvas$1(physicalSize) {
      var t1, t2, t3, htmlCanvas, canvas, options, glContext, _this = this,
        _s20_ = "webglcontextrestored",
        _s16_ = "webglcontextlost";
      type$.BitmapSize._as(physicalSize);
      t1 = _this._offscreenCanvas;
      if (t1 != null) {
        A.DomEventTargetExtension_removeEventListener(t1, _s20_, _this._cachedContextRestoredListener, false);
        A.DomEventTargetExtension_removeEventListener(t1, _s16_, _this._cachedContextLostListener, false);
        _this._cachedContextLostListener = _this._cachedContextRestoredListener = _this._offscreenCanvas = null;
      } else {
        t1 = _this._canvasElement;
        if (t1 != null) {
          A.DomEventTargetExtension_removeEventListener(t1, _s20_, _this._cachedContextRestoredListener, false);
          A.DomEventTargetExtension_removeEventListener(t1, _s16_, _this._cachedContextLostListener, false);
          B._callMethodUnchecked0(t1, "remove", type$.void);
          _this._cachedContextLostListener = _this._cachedContextRestoredListener = _this._canvasElement = null;
        }
      }
      _this.set$_pixelWidth(physicalSize.width);
      _this.set$_pixelHeight(physicalSize.height);
      t1 = B.boolConversionCheck(_this.useOffscreenCanvas);
      t2 = _this._pixelWidth;
      t3 = _this._pixelHeight;
      if (t1) {
        htmlCanvas = _this._offscreenCanvas = A.createDomOffscreenCanvas(t2, t3);
        _this._canvasElement = null;
      } else {
        canvas = _this._canvasElement = A.createDomCanvasElement(t3, t2);
        _this._offscreenCanvas = null;
        if (B.boolConversionCheck(_this.isDisplayCanvas)) {
          A.DomElementExtension_setAttribute(canvas, "aria-hidden", "true");
          A.DomCSSStyleDeclarationExtension_set_position(B.getProperty(canvas, "style", type$.JavaScriptObject), "absolute");
          B._callMethodUnchecked1(_this.hostElement, "append", canvas, type$.void);
          _this._updateLogicalHtmlCanvasSize$0();
        }
        htmlCanvas = canvas;
      }
      _this.set$_cachedContextRestoredListener(A.createDomEventListener(_this.get$_contextRestoredListener()));
      _this.set$_cachedContextLostListener(A.createDomEventListener(_this.get$_contextLostListener()));
      A.DomEventTargetExtension_addEventListener(htmlCanvas, _s16_, _this._cachedContextLostListener, false);
      A.DomEventTargetExtension_addEventListener(htmlCanvas, _s20_, _this._cachedContextRestoredListener, false);
      t2 = _this._forceNewContext = false;
      if (!B.boolConversionCheck(J.$eq$(A.webGLVersion(), -1)) ? !B.boolConversionCheck(A.configuration().get$canvasKitForceCpuOnly()) : t2) {
        options = A.SkWebGLContextOptions__staticInteropFactoryStub(0, J.toDouble$0$n(A.webGLVersion()));
        if (t1) {
          t1 = A.canvasKit();
          t2 = _this._offscreenCanvas;
          t2.toString;
          glContext = J.toInt$0$n(A.CanvasKitExtension_GetOffscreenWebGLContext(t1, t2, options));
        } else {
          t1 = A.canvasKit();
          t2 = _this._canvasElement;
          t2.toString;
          glContext = J.toInt$0$n(A.CanvasKitExtension_GetWebGLContext(t1, t2, options));
        }
        _this._glContext = glContext;
        if (glContext !== 0) {
          _this.set$_grContext(A.CanvasKitExtension_MakeGrContext(A.canvasKit(), D.JSInt_methods.toDouble$0(glContext)));
          if (_this._grContext == null)
            throw B.wrapException(A.CanvasKitError$("Failed to initialize CanvasKit. CanvasKit.MakeGrContext returned null."));
          if (B.boolConversionCheck(J.$eq$(_this._sampleCount, -1)) || B.boolConversionCheck(J.$eq$(_this._stencilBits, -1)))
            _this._initWebglParams$0();
          _this._syncCacheBytes$0();
        }
      }
    },
    _initWebglParams$0() {
      var t1, gl, _this = this;
      if (B.boolConversionCheck(_this.useOffscreenCanvas)) {
        t1 = _this._offscreenCanvas;
        t1.toString;
        gl = A.DomOffscreenCanvasExtension_getGlContext(t1, A.webGLVersion());
      } else {
        t1 = _this._canvasElement;
        t1.toString;
        gl = A.DomCanvasElementExtension_getGlContext(t1, A.webGLVersion());
      }
      _this.set$_sampleCount(A.WebGLContextExtension_getParameter(gl, A.WebGLContextExtension_get_samples(gl)));
      _this.set$_stencilBits(A.WebGLContextExtension_getParameter(gl, A.WebGLContextExtension_get_stencilBits(gl)));
    },
    _createNewSurface$1(size) {
      var t1, t2, skSurface, _this = this;
      type$.BitmapSize._as(size);
      if (B.boolConversionCheck(J.$eq$(A.webGLVersion(), -1)))
        return _this._makeSoftwareCanvasSurface$1("WebGL support not detected");
      else if (B.boolConversionCheck(A.configuration().get$canvasKitForceCpuOnly()))
        return _this._makeSoftwareCanvasSurface$1("CPU rendering forced by application");
      else if (B.boolConversionCheck(J.$eq$(_this._glContext, 0)))
        return _this._makeSoftwareCanvasSurface$1("Failed to initialize WebGL context");
      else {
        t1 = A.canvasKit();
        t2 = _this._grContext;
        t2.toString;
        skSurface = A.CanvasKitExtension_MakeOnScreenGLSurface(t1, t2, J.toDouble$0$n(size.width), J.toDouble$0$n(size.height), self.window.flutterCanvasKit.ColorSpace.SRGB, _this._sampleCount, _this._stencilBits);
        if (skSurface == null)
          return _this._makeSoftwareCanvasSurface$1("Failed to initialize WebGL surface");
        return A.CkSurface$(skSurface, _this._glContext);
      }
    },
    _makeSoftwareCanvasSurface$1(reason) {
      var t1, t2, t3, surface,
        _s19_ = "MakeSWCanvasSurface";
      B._asString(reason);
      if (!B.boolConversionCheck($.Surface__didWarnAboutWebGlInitializationFailure)) {
        $.$get$printWarning().call$1("WARNING: Falling back to CPU-only rendering. " + reason + ".");
        $.Surface__didWarnAboutWebGlInitializationFailure = true;
      }
      t1 = type$.JavaScriptObject;
      if (B.boolConversionCheck(this.useOffscreenCanvas)) {
        t2 = A.canvasKit();
        t3 = this._offscreenCanvas;
        t3.toString;
        surface = B._callMethodUnchecked1(t2, _s19_, t3, t1);
      } else {
        t2 = A.canvasKit();
        t3 = this._canvasElement;
        t3.toString;
        surface = B._callMethodUnchecked1(t2, _s19_, t3, t1);
      }
      return A.CkSurface$(surface, null);
    },
    initialize$0() {
      this.ensureSurface$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this._offscreenCanvas,
        t2 = t1 == null;
      if (!t2)
        A.DomEventTargetExtension_removeEventListener(t1, "webglcontextlost", _this._cachedContextLostListener, false);
      if (!t2)
        A.DomEventTargetExtension_removeEventListener(t1, "webglcontextrestored", _this._cachedContextRestoredListener, false);
      _this._cachedContextRestoredListener = _this._cachedContextLostListener = null;
      t1 = _this._surface;
      if (t1 != null)
        t1.dispose$0();
    },
    set$_surface(_surface) {
      this._surface = type$.nullable_CkSurface._as(_surface);
    },
    set$_cachedContextLostListener(_cachedContextLostListener) {
      this._cachedContextLostListener = type$.nullable_JavaScriptObject._as(_cachedContextLostListener);
    },
    set$_cachedContextRestoredListener(_cachedContextRestoredListener) {
      this._cachedContextRestoredListener = type$.nullable_JavaScriptObject._as(_cachedContextRestoredListener);
    },
    set$_grContext(_grContext) {
      this._grContext = type$.nullable_JavaScriptObject._as(_grContext);
    },
    set$_pixelWidth(_pixelWidth) {
      this._pixelWidth = B._asInt(_pixelWidth);
    },
    set$_pixelHeight(_pixelHeight) {
      this._pixelHeight = B._asInt(_pixelHeight);
    },
    set$_sampleCount(_sampleCount) {
      this._sampleCount = B._asInt(_sampleCount);
    },
    set$_stencilBits(_stencilBits) {
      this._stencilBits = B._asInt(_stencilBits);
    },
    get$hostElement() {
      return this.hostElement;
    }
  };
  A.CkSurface.prototype = {
    getCanvas$0() {
      return A.CkCanvas$(B._callMethodUnchecked0(this.surface, "getCanvas", type$.JavaScriptObject));
    },
    flush$0() {
      B._callMethodUnchecked0(this.surface, "flush", type$.void);
    },
    dispose$0() {
      if (B.boolConversionCheck(this._isDisposed))
        return;
      B._callMethodUnchecked0(this.surface, "dispose", type$.void);
      this._isDisposed = true;
    }
  };
  A.CkParagraphStyle.prototype = {
    getTextStyle$0() {
      var _this = this, _null = null,
        t1 = _this._textHeightBehavior;
      t1 = t1 == null ? _null : t1.leadingDistribution;
      return A.CkTextStyle$_(_null, _null, _null, _null, _null, _null, _this._effectiveFontFamily, _null, _null, _this._fontSize, _this._fontStyle, _null, _this._fontWeight, _null, _this._height, t1, _null, _null, _this._originalFontFamily, _null, _null, _null, _null);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.CkParagraphStyle && B.boolConversionCheck(J.$eq$(other._textAlign, _this._textAlign)) && B.boolConversionCheck(J.$eq$(other.__engine$_textDirection, _this.__engine$_textDirection)) && B.boolConversionCheck(J.$eq$(other._fontWeight, _this._fontWeight)) && B.boolConversionCheck(J.$eq$(other._fontStyle, _this._fontStyle)) && B.boolConversionCheck(J.$eq$(other._maxLines, _this._maxLines)) && B.boolConversionCheck(J.$eq$(other._originalFontFamily, _this._originalFontFamily)) && B.boolConversionCheck(J.$eq$(other._fontSize, _this._fontSize)) && B.boolConversionCheck(J.$eq$(other._height, _this._height)) && B.boolConversionCheck(J.$eq$(other._textHeightBehavior, _this._textHeightBehavior)) && B.boolConversionCheck(J.$eq$(other._strutStyle, _this._strutStyle)) && B.boolConversionCheck(J.$eq$(other._ellipsis, _this._ellipsis)) && B.boolConversionCheck(J.$eq$(other._locale, _this._locale));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this._textAlign, _this.__engine$_textDirection, _this._fontWeight, _this._fontStyle, _this._maxLines, _this._originalFontFamily, _this._fontSize, _this._height, _this._textHeightBehavior, _this._strutStyle, _this._ellipsis, _this._locale, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    },
    $isParagraphStyle: 1
  };
  A.CkTextStyle.prototype = {
    mergeWith$1(other) {
      var t1, textHeight, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, _this = this;
      type$.CkTextStyle._as(other);
      t1 = other.height;
      if (B.boolConversionCheck(J.$eq$(t1, 0)))
        textHeight = null;
      else
        textHeight = t1 == null ? _this.height : t1;
      t1 = other.color;
      if (t1 == null)
        t1 = _this.color;
      t2 = other.decoration;
      if (t2 == null)
        t2 = _this.decoration;
      t3 = other.decorationColor;
      if (t3 == null)
        t3 = _this.decorationColor;
      t4 = other.decorationStyle;
      if (t4 == null)
        t4 = _this.decorationStyle;
      t5 = other.decorationThickness;
      if (t5 == null)
        t5 = _this.decorationThickness;
      t6 = other.fontWeight;
      if (t6 == null)
        t6 = _this.fontWeight;
      t7 = other.fontStyle;
      if (t7 == null)
        t7 = _this.fontStyle;
      t8 = other.textBaseline;
      if (t8 == null)
        t8 = _this.textBaseline;
      t9 = other.originalFontFamily;
      if (t9 == null)
        t9 = _this.originalFontFamily;
      t10 = other.effectiveFontFamily;
      if (t10 == null)
        t10 = _this.effectiveFontFamily;
      t11 = other.originalFontFamilyFallback;
      if (t11 == null)
        t11 = _this.originalFontFamilyFallback;
      t12 = other.effectiveFontFamilyFallback;
      if (t12 == null)
        t12 = _this.effectiveFontFamilyFallback;
      t13 = other.fontSize;
      if (t13 == null)
        t13 = _this.fontSize;
      t14 = other.letterSpacing;
      if (t14 == null)
        t14 = _this.letterSpacing;
      t15 = other.wordSpacing;
      if (t15 == null)
        t15 = _this.wordSpacing;
      t16 = other.leadingDistribution;
      if (t16 == null)
        t16 = _this.leadingDistribution;
      t17 = other.locale;
      if (t17 == null)
        t17 = _this.locale;
      t18 = other.background;
      if (t18 == null)
        t18 = _this.background;
      t19 = other.foreground;
      if (t19 == null)
        t19 = _this.foreground;
      t20 = other.shadows;
      if (t20 == null)
        t20 = _this.shadows;
      t21 = other.fontFeatures;
      if (t21 == null)
        t21 = _this.fontFeatures;
      t22 = other.fontVariations;
      return A.CkTextStyle$_(t18, t1, t2, t3, t4, t5, t10, t12, t21, t13, t7, t22 == null ? _this.fontVariations : t22, t6, t19, textHeight, t16, t14, t17, t9, t11, t20, t8, t15);
    },
    get$combinedFontFamilies() {
      var result, _this = this,
        value = _this.__CkTextStyle_combinedFontFamilies_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A._computeCombinedFontFamilies(_this.effectiveFontFamily, _this.effectiveFontFamilyFallback);
        value !== $ && B.throwLateFieldADI("combinedFontFamilies");
        _this.set$__CkTextStyle_combinedFontFamilies_FI(result);
        value = result;
      }
      return value;
    },
    get$skTextStyle() {
      var result, _this = this,
        value = _this.__CkTextStyle_skTextStyle_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = new A.CkTextStyle_skTextStyle_closure(_this).call$0();
        _this.__CkTextStyle_skTextStyle_FI !== $ && B.throwLateFieldADI("skTextStyle");
        _this.__CkTextStyle_skTextStyle_FI = result;
        value = result;
      }
      return value;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      return other instanceof A.CkTextStyle && B.boolConversionCheck(J.$eq$(other.color, _this.color)) && B.boolConversionCheck(J.$eq$(other.decoration, _this.decoration)) && B.boolConversionCheck(J.$eq$(other.decorationColor, _this.decorationColor)) && B.boolConversionCheck(J.$eq$(other.decorationStyle, _this.decorationStyle)) && B.boolConversionCheck(J.$eq$(other.fontWeight, _this.fontWeight)) && B.boolConversionCheck(J.$eq$(other.fontStyle, _this.fontStyle)) && B.boolConversionCheck(J.$eq$(other.textBaseline, _this.textBaseline)) && B.boolConversionCheck(J.$eq$(other.leadingDistribution, _this.leadingDistribution)) && B.boolConversionCheck(J.$eq$(other.originalFontFamily, _this.originalFontFamily)) && B.boolConversionCheck(J.$eq$(other.fontSize, _this.fontSize)) && B.boolConversionCheck(J.$eq$(other.letterSpacing, _this.letterSpacing)) && B.boolConversionCheck(J.$eq$(other.wordSpacing, _this.wordSpacing)) && B.boolConversionCheck(J.$eq$(other.height, _this.height)) && B.boolConversionCheck(J.$eq$(other.decorationThickness, _this.decorationThickness)) && B.boolConversionCheck(J.$eq$(other.locale, _this.locale)) && B.boolConversionCheck(J.$eq$(other.background, _this.background)) && B.boolConversionCheck(J.$eq$(other.foreground, _this.foreground)) && B.boolConversionCheck(A.listEquals0(other.shadows, _this.shadows, type$.Shadow)) && B.boolConversionCheck(A.listEquals0(other.originalFontFamilyFallback, _this.originalFontFamilyFallback, type$.String)) && B.boolConversionCheck(A.listEquals0(other.fontFeatures, _this.fontFeatures, type$.FontFeature)) && B.boolConversionCheck(A.listEquals0(other.fontVariations, _this.fontVariations, type$.FontVariation));
    },
    get$hashCode(_) {
      var _this = this, _null = null,
        shadows = _this.shadows,
        fontFeatures = _this.fontFeatures,
        fontVariations = _this.fontVariations,
        fontFamilyFallback = _this.originalFontFamilyFallback,
        t1 = fontFamilyFallback == null ? _null : B.Object_hashAll(fontFamilyFallback),
        t2 = shadows == null ? _null : B.Object_hashAll(shadows),
        t3 = fontFeatures == null ? _null : B.Object_hashAll(fontFeatures);
      return B.Object_hash(_this.color, _this.decoration, _this.decorationColor, _this.decorationStyle, _this.fontWeight, _this.fontStyle, _this.textBaseline, _this.leadingDistribution, _this.originalFontFamily, t1, _this.fontSize, _this.letterSpacing, _this.wordSpacing, _this.height, _this.locale, _this.background, _this.foreground, t2, _this.decorationThickness, B.Object_hash(t3, fontVariations == null ? _null : B.Object_hashAll(fontVariations), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue));
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    },
    set$__CkTextStyle_combinedFontFamilies_FI(__CkTextStyle_combinedFontFamilies_FI) {
      this.__CkTextStyle_combinedFontFamilies_FI = type$.List_String._as(__CkTextStyle_combinedFontFamilies_FI);
    },
    $isTextStyle0: 1
  };
  A.CkParagraph.prototype = {
    CkParagraph$2(skParagraph, _paragraphStyle) {
      this.set$_ref(A.UniqueRef$(this, skParagraph, "Paragraph", type$.JavaScriptObject));
    },
    get$_ref() {
      return this.__CkParagraph__ref_F;
    },
    set$_ref(value) {
      type$.UniqueRef_JavaScriptObject._as(value);
      this.__CkParagraph__ref_F !== $ && B.throwLateFieldAI("_ref");
      this.set$__CkParagraph__ref_F(value);
    },
    get$skiaObject() {
      return this.get$_ref().get$nativeObject();
    },
    get$alphabeticBaseline() {
      return this._alphabeticBaseline;
    },
    get$didExceedMaxLines() {
      return this._didExceedMaxLines;
    },
    get$height() {
      return this._height;
    },
    get$ideographicBaseline() {
      return this._ideographicBaseline;
    },
    get$longestLine() {
      return this._longestLine;
    },
    get$maxIntrinsicWidth() {
      return this._maxIntrinsicWidth;
    },
    get$width() {
      return this._width;
    },
    getBoxesForPlaceholders$0() {
      return this.get$_boxesForPlaceholders();
    },
    get$_boxesForPlaceholders() {
      return this.__CkParagraph__boxesForPlaceholders_A;
    },
    set$_boxesForPlaceholders(value) {
      this.set$__CkParagraph__boxesForPlaceholders_A(type$.List_TextBox._as(value));
    },
    getBoxesForRange$4$boxHeightStyle$boxWidthStyle(start, end, boxHeightStyle, boxWidthStyle) {
      B._asInt(start);
      B._asInt(end);
      type$.BoxHeightStyle._as(boxHeightStyle);
      type$.BoxWidthStyle._as(boxWidthStyle);
      if (start < 0 || end < 0)
        return C.List_empty7;
      return this.skRectsToTextBoxes$1(A.SkParagraphExtension_getRectsForRange(this.get$skiaObject(), D.JSInt_methods.toDouble$0(start), D.JSInt_methods.toDouble$0(end), A.toSkRectHeightStyle(boxHeightStyle), A.toSkRectWidthStyle(boxWidthStyle)));
    },
    getBoxesForRange$3$boxHeightStyle(start, end, boxHeightStyle) {
      return this.getBoxesForRange$4$boxHeightStyle$boxWidthStyle(start, end, boxHeightStyle, C.BoxWidthStyle_0);
    },
    skRectsToTextBoxes$1(skRects) {
      var result, t1, t2, i, t3, skRect, rect, skTextDirection, t4, t5, t6;
      type$.List_JavaScriptObject._as(skRects);
      result = B._setArrayType([], type$.JSArray_TextBox);
      t1 = J.getInterceptor$asx(skRects);
      t2 = type$.JavaScriptObject;
      i = 0;
      while (true) {
        t3 = t1.get$length(skRects);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i < t3))
          break;
        skRect = t1.$index(skRects, i);
        rect = A.SkRectWithDirectionExtension_get_rect(skRect);
        skTextDirection = J.toInt$0$n(A.SkTextDirectionExtension_get_value(B.getProperty(skRect, "dir", t2)));
        t3 = rect.length;
        if (0 >= t3)
          return B.ioore(rect, 0);
        t4 = rect[0];
        if (1 >= t3)
          return B.ioore(rect, 1);
        t5 = rect[1];
        if (2 >= t3)
          return B.ioore(rect, 2);
        t6 = rect[2];
        if (3 >= t3)
          return B.ioore(rect, 3);
        t3 = rect[3];
        if (skTextDirection >>> 0 !== skTextDirection || skTextDirection >= 2)
          return B.ioore(C.List_TextDirection_0_TextDirection_1, skTextDirection);
        D.JSArray_methods.add$1(result, A.TextBox$fromLTRBD(t4, t5, t6, t3, C.List_TextDirection_0_TextDirection_1[skTextDirection]));
        ++i;
      }
      return result;
    },
    getPositionForOffset$1(offset) {
      type$.Offset._as(offset);
      return A.fromPositionWithAffinity(A.SkParagraphExtension_getGlyphPositionAtCoordinate(this.get$skiaObject(), offset.get$dx(), offset.get$dy()));
    },
    getClosestGlyphInfoForOffset$1(offset) {
      type$.Offset._as(offset);
      return A.SkParagraphExtension_getClosestGlyphInfoAt(this.get$skiaObject(), offset.get$dx(), offset.get$dy());
    },
    getGlyphInfoAt$1(codeUnitOffset) {
      B._asInt(codeUnitOffset);
      return A.SkParagraphExtension_getGlyphInfoAt(this.get$skiaObject(), D.JSInt_methods.toDouble$0(codeUnitOffset));
    },
    getWordBoundary$1(position) {
      var t1, characterPosition, skRange;
      type$.TextPosition._as(position);
      switch (position.affinity) {
        case C.TextAffinity_0:
          t1 = position.offset;
          if (typeof t1 !== "number")
            return t1.$sub();
          characterPosition = t1 - 1;
          break;
        case C.TextAffinity_1:
          characterPosition = position.offset;
          break;
        default:
          characterPosition = null;
      }
      skRange = A.SkParagraphExtension_getWordBoundary(this.get$skiaObject(), J.toDouble$0$n(characterPosition));
      t1 = J.toInt$0$n(A.SkTextRangeExtension_get_start(skRange));
      return A.TextRange$(J.toInt$0$n(A.SkTextRangeExtension_get_end(skRange)), t1);
    },
    layout$1(constraints) {
      var paragraph, e, exception, _this = this,
        t1 = type$.ParagraphConstraints._as(constraints).width;
      if (B.boolConversionCheck(J.$eq$(_this._lastLayoutConstraints, t1)))
        return;
      _this.set$_lastLayoutConstraints(t1);
      try {
        paragraph = _this.get$skiaObject();
        A.SkParagraphExtension_layout(paragraph, t1);
        _this.set$_alphabeticBaseline(A.SkParagraphExtension_getAlphabeticBaseline(paragraph));
        _this.set$_didExceedMaxLines(A.SkParagraphExtension_didExceedMaxLines(paragraph));
        _this.set$_height(A.SkParagraphExtension_getHeight(paragraph));
        _this.set$_ideographicBaseline(A.SkParagraphExtension_getIdeographicBaseline(paragraph));
        _this.set$_longestLine(A.SkParagraphExtension_getLongestLine(paragraph));
        _this.set$_maxIntrinsicWidth(A.SkParagraphExtension_getMaxIntrinsicWidth(paragraph));
        _this.set$_minIntrinsicWidth(A.SkParagraphExtension_getMinIntrinsicWidth(paragraph));
        _this.set$_width(A.SkParagraphExtension_getMaxWidth(paragraph));
        _this.set$_boxesForPlaceholders(_this.skRectsToTextBoxes$1(A.SkParagraphExtension_getRectsForPlaceholders(paragraph)));
      } catch (exception) {
        e = B.unwrapException(exception);
        $.$get$printWarning().call$1('CanvasKit threw an exception while laying out the paragraph. The font was "' + B.S(_this._paragraphStyle._originalFontFamily) + '". Exception:\n' + B.S(e));
        throw exception;
      }
    },
    getLineBoundary$1(position) {
      var t1, t2, t3,
        offset = type$.TextPosition._as(position).offset;
      for (t1 = J.get$iterator$ax(A.SkParagraphExtension_getLineMetrics(this.get$skiaObject())); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        t3 = A.SkLineMetricsExtension_get_startIndex(t2);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (offset >= t3) {
          t3 = A.SkLineMetricsExtension_get_endIndex(t2);
          if (typeof t3 !== "number")
            return B.iae(t3);
          t3 = offset <= t3;
        } else
          t3 = false;
        if (t3) {
          t1 = J.toInt$0$n(A.SkLineMetricsExtension_get_startIndex(t2));
          return A.TextRange$(J.toInt$0$n(A.SkLineMetricsExtension_get_endIndex(t2)), t1);
        }
      }
      return C.TextRange_m1_m1;
    },
    computeLineMetrics$0() {
      var t1,
        skLineMetrics = A.SkParagraphExtension_getLineMetrics(this.get$skiaObject()),
        result = B._setArrayType([], type$.JSArray_LineMetrics);
      for (t1 = J.get$iterator$ax(skLineMetrics); B.boolConversionCheck(t1.moveNext$0());)
        D.JSArray_methods.add$1(result, A.CkLineMetrics$_(t1.get$current()));
      return result;
    },
    getLineMetricsAt$1(lineNumber) {
      var metrics;
      B._asInt(lineNumber);
      metrics = A.SkParagraphExtension_getLineMetricsAt(this.get$skiaObject(), D.JSInt_methods.toDouble$0(lineNumber));
      return metrics == null ? null : A.CkLineMetrics$_(metrics);
    },
    get$numberOfLines() {
      return J.toInt$0$n(A.SkParagraphExtension_getNumberOfLines(this.get$skiaObject()));
    },
    dispose$0() {
      this.get$_ref().dispose$0();
    },
    set$__CkParagraph__ref_F(__CkParagraph__ref_F) {
      this.__CkParagraph__ref_F = type$.UniqueRef_JavaScriptObject._as(__CkParagraph__ref_F);
    },
    set$_lastLayoutConstraints(_lastLayoutConstraints) {
      this._lastLayoutConstraints = B._asDouble(_lastLayoutConstraints);
    },
    set$_alphabeticBaseline(_alphabeticBaseline) {
      this._alphabeticBaseline = B._asDouble(_alphabeticBaseline);
    },
    set$_didExceedMaxLines(_didExceedMaxLines) {
      this._didExceedMaxLines = B._asBool(_didExceedMaxLines);
    },
    set$_height(_height) {
      this._height = B._asDouble(_height);
    },
    set$_ideographicBaseline(_ideographicBaseline) {
      this._ideographicBaseline = B._asDouble(_ideographicBaseline);
    },
    set$_longestLine(_longestLine) {
      this._longestLine = B._asDouble(_longestLine);
    },
    set$_maxIntrinsicWidth(_maxIntrinsicWidth) {
      this._maxIntrinsicWidth = B._asDouble(_maxIntrinsicWidth);
    },
    set$_minIntrinsicWidth(_minIntrinsicWidth) {
      B._asDouble(_minIntrinsicWidth);
    },
    set$_width(_width) {
      this._width = B._asDouble(_width);
    },
    set$__CkParagraph__boxesForPlaceholders_A(__CkParagraph__boxesForPlaceholders_A) {
      this.__CkParagraph__boxesForPlaceholders_A = type$.List_TextBox._as(__CkParagraph__boxesForPlaceholders_A);
    },
    $isParagraph: 1
  };
  A.CkLineMetrics.prototype = {
    get$ascent() {
      return A.SkLineMetricsExtension_get_ascent(this.skLineMetrics);
    },
    get$descent() {
      return A.SkLineMetricsExtension_get_descent(this.skLineMetrics);
    },
    get$unscaledAscent() {
      return A.SkLineMetricsExtension_get_ascent(this.skLineMetrics);
    },
    get$hardBreak() {
      return A.SkLineMetricsExtension_get_isHardBreak(this.skLineMetrics);
    },
    get$baseline() {
      return A.SkLineMetricsExtension_get_baseline(this.skLineMetrics);
    },
    get$height() {
      var t1 = this.skLineMetrics,
        t2 = A.SkLineMetricsExtension_get_ascent(t1);
      t1 = A.SkLineMetricsExtension_get_descent(t1);
      if (typeof t2 !== "number")
        return t2.$add();
      if (typeof t1 !== "number")
        return B.iae(t1);
      return J.toDouble$0$n(D.JSNumber_methods.round$0(t2 + t1));
    },
    get$left() {
      return A.SkLineMetricsExtension_get_left(this.skLineMetrics);
    },
    get$width() {
      return A.SkLineMetricsExtension_get_width(this.skLineMetrics);
    },
    get$lineNumber() {
      return J.toInt$0$n(A.SkLineMetricsExtension_get_lineNumber(this.skLineMetrics));
    },
    $isLineMetrics: 1
  };
  A.CkParagraphBuilder.prototype = {
    CkParagraphBuilder$1(style) {
      J.add$1$ax(this._styleStack, this._style.getTextStyle$0());
    },
    addText$1(text) {
      var fontFamilies, style, t1;
      B._asString(text);
      fontFamilies = B._setArrayType([], type$.JSArray_String);
      style = this._peekStyle$0();
      t1 = style.effectiveFontFamily;
      if (t1 != null)
        D.JSArray_methods.add$1(fontFamilies, t1);
      t1 = style.effectiveFontFamilyFallback;
      if (t1 != null)
        D.JSArray_methods.addAll$1(fontFamilies, t1);
      A.renderer().get$fontCollection().get$fontFallbackManager().ensureFontsSupportText$2(text, fontFamilies);
      A.SkParagraphBuilderExtension_addText(this._paragraphBuilder, text);
    },
    build$0() {
      return A.CkParagraph$(this._buildSkParagraph$0(), this._style);
    },
    _buildSkParagraph$0() {
      var t1, result;
      if (B.boolConversionCheck($.$get$_ckRequiresClientICU()))
        A.injectClientICU(this._paragraphBuilder);
      t1 = this._paragraphBuilder;
      result = B._callMethodUnchecked0(t1, "build", type$.JavaScriptObject);
      B._callMethodUnchecked0(t1, "delete", type$.void);
      return result;
    },
    pop$0() {
      var t1 = this._styleStack,
        t2 = J.getInterceptor$asx(t1),
        t3 = t2.get$length(t1);
      if (typeof t3 !== "number")
        return t3.$le();
      if (t3 <= 1)
        return;
      t2.removeLast$0(t1);
      B._callMethodUnchecked0(this._paragraphBuilder, "pop", type$.void);
    },
    _peekStyle$0() {
      return J.get$last$ax(this._styleStack);
    },
    pushStyle$1(style) {
      var skStyle, t1, t2, foreground, background, _this = this;
      type$.TextStyle._as(style);
      skStyle = _this._peekStyle$0().mergeWith$1(type$.CkTextStyle._as(style));
      J.add$1$ax(_this._styleStack, skStyle);
      t1 = skStyle.foreground;
      t2 = t1 == null;
      if (!t2 || skStyle.background != null) {
        foreground = t2 ? null : t1.skiaObject;
        if (foreground == null) {
          foreground = $.$get$CkParagraphBuilder__defaultTextForeground();
          t1 = skStyle.color;
          t1 = t1 == null ? null : t1.get$value();
          A.SkPaintExtension_setColorInt(foreground, t1 == null ? 4278190080 : t1);
        }
        t1 = skStyle.background;
        background = t1 == null ? null : t1.skiaObject;
        if (background == null)
          background = $.$get$CkParagraphBuilder__defaultTextBackground();
        B._callMethodUnchecked3(_this._paragraphBuilder, "pushPaintStyle", skStyle.get$skTextStyle(), foreground, background, type$.void);
      } else
        B._callMethodUnchecked1(_this._paragraphBuilder, "pushStyle", skStyle.get$skTextStyle(), type$.void);
    },
    $isParagraphBuilder: 1
  };
  A.IntlSegmenterGranularity.prototype = {
    _enumToString$0() {
      return "IntlSegmenterGranularity." + B.S(this._core$_name);
    }
  };
  A.CanvasKitError.prototype = {
    toString$0(_) {
      return "CanvasKitError: " + B.S(this.message);
    }
  };
  A.ClipboardMessageHandler.prototype = {
    setDataMethodCall$2(methodCall, callback) {
      var t1 = {};
      type$.MethodCall._as(methodCall);
      type$.nullable_void_Function_nullable_ByteData._as(callback);
      t1.errorEnvelopeEncoded = false;
      this._copyToClipboardStrategy.setData$1(B._asStringQ(type$.Map_of_String_and_nullable_Object._as(methodCall.$arguments).$index(0, "text"))).then$1$1(new A.ClipboardMessageHandler_setDataMethodCall_closure(t1, callback), type$.Null).catchError$1(new A.ClipboardMessageHandler_setDataMethodCall_closure0(t1, callback));
    },
    getDataMethodCall$1(callback) {
      type$.nullable_void_Function_nullable_ByteData._as(callback);
      this._pasteFromClipboardStrategy.getData$0().then$1$1(new A.ClipboardMessageHandler_getDataMethodCall_closure(callback), type$.Null).catchError$1(new A.ClipboardMessageHandler_getDataMethodCall_closure0(this, callback));
    },
    hasStringsMethodCall$1(callback) {
      type$.nullable_void_Function_nullable_ByteData._as(callback);
      this._pasteFromClipboardStrategy.getData$0().then$1$1(new A.ClipboardMessageHandler_hasStringsMethodCall_closure(callback), type$.Null).catchError$1(new A.ClipboardMessageHandler_hasStringsMethodCall_closure0(callback));
    },
    _reportGetDataFailure$3(callback, codec, error) {
      type$.nullable_void_Function_nullable_ByteData._as(callback);
      type$.MethodCodec._as(codec);
      B.print("Could not get text from clipboard: " + B.S(error));
      callback.toString;
      callback.call$1(codec.encodeErrorEnvelope$2$code$message("paste_fail", "Clipboard.getData failed"));
    }
  };
  A.ClipboardAPICopyStrategy.prototype = {
    setData$1(text) {
      return this.setData$body$ClipboardAPICopyStrategy(B._asStringQ(text));
    },
    setData$body$ClipboardAPICopyStrategy(text) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$handler = 2, $async$currentError, error, t1, exception, $async$exception;
      var $async$setData$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              t1 = B.getProperty(B.getProperty(self.window, "navigator", type$.JavaScriptObject), "clipboard", type$.nullable_JavaScriptObject);
              t1.toString;
              text.toString;
              $async$goto = 7;
              return B._asyncAwait(A.DomClipboardExtension_writeText(t1, text), $async$setData$1);
            case 7:
              // returning from await.
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              error = B.unwrapException($async$exception);
              B.print("copy is not successful " + B.S(error));
              t1 = B.Future_Future$value(false, type$.bool);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              $async$returnValue = B.Future_Future$value(true, type$.bool);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return B._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return B._asyncStartSync($async$setData$1, $async$completer);
    },
    $isCopyToClipboardStrategy: 1
  };
  A.ClipboardAPIPasteStrategy.prototype = {
    getData$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, t1;
      var $async$getData$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = B.getProperty(B.getProperty(self.window, "navigator", type$.JavaScriptObject), "clipboard", type$.nullable_JavaScriptObject);
              t1.toString;
              $async$returnValue = A.DomClipboardExtension_readText(t1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$getData$0, $async$completer);
    },
    $isPasteFromClipboardStrategy: 1
  };
  A.ExecCommandCopyStrategy.prototype = {
    setData$1(text) {
      return B.Future_Future$value(this._setDataSync$1(B._asStringQ(text)), type$.bool);
    },
    _setDataSync$1(text) {
      var tempTextArea, result, error, exception;
      B._asStringQ(text);
      tempTextArea = this._appendTemporaryTextArea$0();
      A.DomHTMLTextAreaElementExtension_set_value(tempTextArea, text);
      A.DomElementExtension_focus(tempTextArea, null);
      B._callMethodUnchecked0(tempTextArea, "select", type$.void);
      result = false;
      try {
        result = A.DomDocumentExtension_execCommand(self.document, "copy");
        if (!B.boolConversionCheck(result))
          B.print("copy is not successful");
      } catch (exception) {
        error = B.unwrapException(exception);
        B.print("copy is not successful " + B.S(error));
      } finally {
        this._removeTemporaryTextArea$1(tempTextArea);
      }
      return result;
    },
    _appendTemporaryTextArea$0() {
      var t1,
        _s8_ = "-99999px",
        _s11_ = "transparent",
        tempElement = A.createDomHTMLTextAreaElement(),
        elementStyle = B.getProperty(tempElement, "style", type$.JavaScriptObject);
      A.DomCSSStyleDeclarationExtension_set_position(elementStyle, "absolute");
      A.DomCSSStyleDeclarationExtension_set_top(elementStyle, _s8_);
      A.DomCSSStyleDeclarationExtension_set_left(elementStyle, _s8_);
      A.DomCSSStyleDeclarationExtension_set_opacity(elementStyle, "0");
      A.DomCSSStyleDeclarationExtension_set_color(elementStyle, _s11_);
      A.DomCSSStyleDeclarationExtension_set_backgroundColor(elementStyle, _s11_);
      A.DomCSSStyleDeclarationExtension_set_background(elementStyle, _s11_);
      t1 = B.getProperty(self.document, "body", type$.nullable_JavaScriptObject);
      t1.toString;
      B._callMethodUnchecked1(t1, "append", tempElement, type$.void);
      return tempElement;
    },
    _removeTemporaryTextArea$1(element) {
      B._callMethodUnchecked0(type$.JavaScriptObject._as(element), "remove", type$.void);
    },
    $isCopyToClipboardStrategy: 1
  };
  A.ExecCommandPasteStrategy.prototype = {
    getData$0() {
      return B.Future_Future$error(B.UnimplementedError$("Paste is not implemented for this browser."), null, type$.String);
    },
    $isPasteFromClipboardStrategy: 1
  };
  A.FlutterConfiguration.prototype = {
    FlutterConfiguration$legacy$1(config) {
      if (config != null)
        this._configuration = config;
    },
    setUserConfiguration$1(configuration) {
      type$.nullable_JavaScriptObject._as(configuration);
      if (configuration != null)
        this._configuration = configuration;
    },
    get$assetBase() {
      var t1 = this._configuration;
      return t1 == null ? null : A.JsFlutterConfigurationExtension_get_assetBase(t1);
    },
    get$canvasKitBaseUrl() {
      var t1 = this._configuration;
      t1 = t1 == null ? null : A.JsFlutterConfigurationExtension_get_canvasKitBaseUrl(t1);
      return t1 == null ? "canvaskit/" : t1;
    },
    get$canvasKitVariant() {
      var t1 = this._configuration,
        variant = t1 == null ? null : A.JsFlutterConfigurationExtension_get_canvasKitVariant(t1);
      if (variant == null)
        variant = "auto";
      return A.EnumByName_byName(C.List_mfb, variant, type$.CanvasKitVariant);
    },
    get$canvasKitForceCpuOnly() {
      var t1 = this._configuration;
      t1 = t1 == null ? null : A.JsFlutterConfigurationExtension_get_canvasKitForceCpuOnly(t1);
      return t1 == null ? false : t1;
    },
    get$canvasKitMaximumSurfaces() {
      var maxSurfaces,
        t1 = this._configuration;
      if (t1 == null)
        maxSurfaces = null;
      else {
        t1 = A.JsFlutterConfigurationExtension_get_canvasKitMaximumSurfaces(t1);
        t1 = t1 == null ? null : J.toInt$0$n(t1);
        maxSurfaces = t1;
      }
      if (maxSurfaces == null)
        maxSurfaces = 8;
      if (maxSurfaces < 1)
        return 1;
      return maxSurfaces;
    },
    get$debugShowSemanticsNodes() {
      var t1 = this._configuration;
      t1 = t1 == null ? null : A.JsFlutterConfigurationExtension_get_debugShowSemanticsNodes(t1);
      return t1 == null ? false : t1;
    },
    get$hostElement() {
      var t1 = this._configuration;
      return t1 == null ? null : B.getProperty(t1, "hostElement", type$.nullable_JavaScriptObject);
    },
    get$multiViewEnabled() {
      var t1 = this._configuration;
      t1 = t1 == null ? null : A.JsFlutterConfigurationExtension_get_multiViewEnabled(t1);
      return t1 == null ? false : t1;
    },
    get$nonce() {
      var t1 = this._configuration;
      return t1 == null ? null : A.JsFlutterConfigurationExtension_get_nonce(t1);
    },
    get$requestedRendererType() {
      var t1 = this._configuration;
      t1 = t1 == null ? null : A.JsFlutterConfigurationExtension_get_renderer(t1);
      return t1 == null ? A._requestedRendererType() : t1;
    },
    get$fontFallbackBaseUrl() {
      var t1 = this._configuration;
      t1 = t1 == null ? null : A.JsFlutterConfigurationExtension_get_fontFallbackBaseUrl(t1);
      return t1 == null ? "https://fonts.gstatic.com/s/" : t1;
    },
    get$useColorEmoji() {
      var t1 = this._configuration;
      t1 = t1 == null ? null : A.JsFlutterConfigurationExtension_get_useColorEmoji(t1);
      return t1 == null ? false : t1;
    }
  };
  A.EngineFlutterDisplay.prototype = {
    get$devicePixelRatio() {
      var t1 = this._debugDevicePixelRatioOverride;
      return t1 == null ? this.get$browserDevicePixelRatio() : t1;
    },
    get$browserDevicePixelRatio() {
      var ratio = A.DomWindowExtension_get_devicePixelRatio(self.window);
      return ratio === 0 ? 1 : ratio;
    },
    debugOverrideDevicePixelRatio$1(value) {
      this._debugDevicePixelRatioOverride = B._asDoubleQ(value);
    }
  };
  A.ScreenOrientation.prototype = {
    setPreferredOrientation$1(orientations) {
      return this.setPreferredOrientation$body$ScreenOrientation(type$.List_dynamic._as(orientations));
    },
    setPreferredOrientation$body$ScreenOrientation(orientations) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$handler = 2, $async$currentError, screenOrientation, lockType, exception, t1, $screen, $async$exception;
      var $async$setPreferredOrientation$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.nullable_JavaScriptObject;
              $screen = B.getProperty(self.window, "screen", t1);
              $async$goto = $screen != null ? 3 : 4;
              break;
            case 3:
              // then
              screenOrientation = B.getProperty($screen, "orientation", t1);
              $async$goto = screenOrientation != null ? 5 : 6;
              break;
            case 5:
              // then
              t1 = J.getInterceptor$asx(orientations);
              $async$goto = B.boolConversionCheck(t1.get$isEmpty(orientations)) ? 7 : 9;
              break;
            case 7:
              // then
              B._callMethodUnchecked0(screenOrientation, "unlock", type$.void);
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 8;
              break;
            case 9:
              // else
              lockType = A.ScreenOrientation__deviceOrientationToLockType(B._asStringQ(t1.get$first(orientations)));
              $async$goto = lockType != null ? 10 : 11;
              break;
            case 10:
              // then
              $async$handler = 13;
              $async$goto = 16;
              return B._asyncAwait(A.DomScreenOrientationExtension_lock(screenOrientation, lockType), $async$setPreferredOrientation$1);
            case 16:
              // returning from await.
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 15;
              break;
            case 13:
              // catch
              $async$handler = 12;
              $async$exception = $async$currentError;
              t1 = B.Future_Future$value(false, type$.bool);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 15;
              break;
            case 12:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 15:
              // after finally
            case 11:
              // join
            case 8:
              // join
            case 6:
              // join
            case 4:
              // join
              $async$returnValue = false;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return B._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return B._asyncStartSync($async$setPreferredOrientation$1, $async$completer);
    }
  };
  A.HttpFetchResponseImpl.prototype = {
    get$status() {
      return A.DomResponseExtension_get_status(this._domResponse);
    },
    get$hasPayload() {
      var accepted, fileUri, notModified, unknownRedirect, _this = this,
        t1 = _this.get$status();
      if (typeof t1 !== "number")
        return t1.$ge();
      if (t1 >= 200) {
        t1 = _this.get$status();
        if (typeof t1 !== "number")
          return t1.$lt();
        accepted = t1 < 300;
      } else
        accepted = false;
      fileUri = J.$eq$(_this.get$status(), 0);
      notModified = J.$eq$(_this.get$status(), 304);
      t1 = _this.get$status();
      if (typeof t1 !== "number")
        return t1.$gt();
      if (t1 > 307) {
        t1 = _this.get$status();
        if (typeof t1 !== "number")
          return t1.$lt();
        unknownRedirect = t1 < 400;
      } else
        unknownRedirect = false;
      return accepted || fileUri || notModified || unknownRedirect;
    },
    get$payload() {
      var _this = this;
      if (!B.boolConversionCheck(_this.get$hasPayload()))
        throw B.wrapException(A.HttpFetchNoPayloadError$(_this.url, _this.get$status()));
      return A.HttpFetchPayloadImpl$_(_this._domResponse);
    },
    $isHttpFetchResponse: 1
  };
  A.HttpFetchPayloadImpl.prototype = {
    read$1$1(callback, $T) {
      return this.read$body$HttpFetchPayloadImpl($T._eval$1("~(0)")._as(callback), $T);
    },
    read$body$HttpFetchPayloadImpl(callback, $T) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, chunk, t1, reader;
      var $async$read$1$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.JavaScriptObject;
              reader = B._callMethodUnchecked0(B.getProperty($async$self._domResponse, "body", t1), "getReader", t1);
              t1 = type$.nullable_Object;
            case 2:
              // for condition
              // trivial condition
              $async$goto = 4;
              return B._asyncAwait(A._DomStreamReaderExtension_read(reader), $async$read$1$1);
            case 4:
              // returning from await.
              chunk = $async$result;
              if (B.boolConversionCheck(A._DomStreamChunkExtension_get_done(chunk))) {
                // goto after for
                $async$goto = 3;
                break;
              }
              callback.call$1($T._as(B.getProperty(chunk, "value", t1)));
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$read$1$1, $async$completer);
    },
    asByteBuffer$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.ByteBuffer),
        $async$returnValue, $async$self = this, t1;
      var $async$asByteBuffer$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return B._asyncAwait(A.DomResponseExtension_arrayBuffer($async$self._domResponse), $async$asByteBuffer$0);
            case 3:
              // returning from await.
              t1 = $async$result;
              t1.toString;
              $async$returnValue = type$.ByteBuffer._as(t1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$asByteBuffer$0, $async$completer);
    },
    $isHttpFetchPayload: 1
  };
  A.HttpFetchNoPayloadError.prototype = {
    toString$0(_) {
      return 'Flutter Web engine failed to fetch "' + B.S(this.url) + '". HTTP request succeeded, but the server responded with HTTP status ' + B.S(this.status) + ".";
    },
    $isException: 1
  };
  A.HttpFetchError.prototype = {
    toString$0(_) {
      return 'Flutter Web engine failed to complete HTTP request to fetch "' + B.S(this.url) + '": ' + B.S(this.requestError);
    },
    $isException: 1
  };
  A.DomSubscription.prototype = {
    DomSubscription$3(target, typeString, dartListener) {
      B._callMethodUnchecked2(this.target, "addEventListener", this.type, this.listener, type$.void);
    },
    cancel$0() {
      return B._callMethodUnchecked2(this.target, "removeEventListener", this.type, this.listener, type$.void);
    }
  };
  A.DomPoint.prototype = {};
  A._DomListIterator.prototype = {
    moveNext$0() {
      var t2, t3, _this = this,
        t1 = _this.index;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$index(t1 + 1);
      t1 = _this.index;
      t2 = _this.list;
      t3 = A.DomListExtension_get_length(t2);
      if (typeof t1 !== "number")
        return t1.$gt();
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (t1 > t3)
        throw B.wrapException(B.StateError$("Iterator out of bounds"));
      t2 = A.DomListExtension_get_length(t2);
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 < t2;
    },
    get$current() {
      return this.$ti._precomputed1._as(A.DomListExtension_item(this.list, this.index));
    },
    set$index(index) {
      this.index = B._asInt(index);
    },
    $isIterator: 1
  };
  A._DomListWrapper.prototype = {
    get$iterator(_) {
      return A._DomListIterator$(this.list, this.$ti._precomputed1);
    },
    get$length(_) {
      return J.toInt$0$n(A.DomListExtension_get_length(this.list));
    }
  };
  A._DomTouchListIterator.prototype = {
    moveNext$0() {
      var t2, t3, _this = this,
        t1 = _this.index;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$index(t1 + 1);
      t1 = _this.index;
      t2 = _this.list;
      t3 = A.DomTouchListExtension_get_length(t2);
      if (typeof t1 !== "number")
        return t1.$gt();
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (t1 > t3)
        throw B.wrapException(B.StateError$("Iterator out of bounds"));
      t2 = A.DomTouchListExtension_get_length(t2);
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 < t2;
    },
    get$current() {
      return this.$ti._precomputed1._as(A.DomTouchListExtension_item(this.list, this.index));
    },
    set$index(index) {
      this.index = B._asInt(index);
    },
    $isIterator: 1
  };
  A._DomTouchListWrapper.prototype = {
    get$iterator(_) {
      return A._DomTouchListIterator$(this.list, this.$ti._precomputed1);
    },
    get$length(_) {
      return J.toInt$0$n(A.DomTouchListExtension_get_length(this.list));
    }
  };
  A.DomIteratorWrapper.prototype = {
    get$__engine$_current() {
      return this.__DomIteratorWrapper__current_A;
    },
    set$__engine$_current(value) {
      this.set$__DomIteratorWrapper__current_A(this.$ti._precomputed1._as(value));
    },
    get$current() {
      return this.get$__engine$_current();
    },
    moveNext$0() {
      var result = B._callMethodUnchecked0(this.__engine$_iterator, "next", type$.JavaScriptObject);
      if (B.boolConversionCheck(A.DomIteratorResultExtension_get_done(result)))
        return false;
      this.set$__engine$_current(this.$ti._precomputed1._as(B.getProperty(result, "value", type$.Object)));
      return true;
    },
    set$__DomIteratorWrapper__current_A(__DomIteratorWrapper__current_A) {
      this.__DomIteratorWrapper__current_A = this.$ti._precomputed1._as(__DomIteratorWrapper__current_A);
    },
    $isIterator: 1
  };
  A.EngineCanvas.prototype = {};
  A.SaveStackEntry.prototype = {};
  A.SaveClipEntry.prototype = {};
  A._SaveElementStackEntry.prototype = {};
  A.SaveElementStackTracking.prototype = {
    get$currentElement() {
      var t1 = this.SaveElementStackTracking__elementStack,
        t2 = J.getInterceptor$asx(t1);
      return B.boolConversionCheck(t2.get$isEmpty(t1)) ? this.rootElement : t2.get$last(t1);
    },
    get$currentTransform() {
      return this.SaveElementStackTracking__currentTransform;
    },
    save$0() {
      J.add$1$ax(this.SaveElementStackTracking__saveStack, A._SaveElementStackEntry$(this.get$currentElement(), this.SaveElementStackTracking__currentTransform.clone$0()));
    },
    restore$0() {
      var entry, t3, _this = this,
        t1 = _this.SaveElementStackTracking__saveStack,
        t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t2.get$isEmpty(t1)))
        return;
      entry = t2.removeLast$0(t1);
      _this.set$_currentTransform(entry.transform);
      for (t1 = entry.savedElement, t2 = _this.SaveElementStackTracking__elementStack, t3 = J.getInterceptor$ax(t2); !B.boolConversionCheck(J.$eq$(_this.get$currentElement(), t1));)
        t3.removeLast$0(t2);
    },
    translate$2(dx, dy) {
      B._asDouble(dx);
      B._asDouble(dy);
      this.SaveElementStackTracking__currentTransform.translate$2(dx, dy);
    },
    scale$2(sx, sy) {
      B._asDouble(sx);
      B._asDouble(sy);
      this.SaveElementStackTracking__currentTransform.scale$2(sx, sy);
    },
    transform$1(matrix4) {
      type$.Float32List._as(matrix4);
      this.SaveElementStackTracking__currentTransform.multiply$1(A.Matrix4$fromFloat32List(matrix4));
    },
    set$_currentTransform(_currentTransform) {
      this.SaveElementStackTracking__currentTransform = type$.Matrix4._as(_currentTransform);
    },
    $isEngineCanvas: 1
  };
  A.FontFallbackManager.prototype = {
    FontFallbackManager$_$2(registry, fallbackFonts) {
      this.set$downloadQueue(A.FallbackFontDownloadQueue$(this));
    },
    get$downloadQueue() {
      return this.__FontFallbackManager_downloadQueue_F;
    },
    set$downloadQueue(value) {
      type$.FallbackFontDownloadQueue._as(value);
      this.__FontFallbackManager_downloadQueue_F !== $ && B.throwLateFieldAI("downloadQueue");
      this.__FontFallbackManager_downloadQueue_F = value;
    },
    ensureFontsSupportText$2(text, fontFamilies) {
      var runesToCheck, t1, t2, t3, t4, t5, t6, codePoints, _this = this;
      B._asString(text);
      type$.List_String._as(fontFamilies);
      if (B.boolConversionCheck(A.debugDisableFontFallbacks()))
        return;
      runesToCheck = B.LinkedHashSet_LinkedHashSet$_empty(type$.int);
      for (t1 = J.get$iterator$ax(D.JSString_methods.get$runes(text)), t2 = _this.knownCoveredCodePoints, t3 = J.getInterceptor$asx(t2), t4 = _this.codePointsWithNoKnownFont, t5 = J.getInterceptor$asx(t4); B.boolConversionCheck(t1.moveNext$0());) {
        t6 = t1.get$current();
        if (!(t6 < 160 || B.boolConversionCheck(t3.contains$1(t2, t6)) || B.boolConversionCheck(t5.contains$1(t4, t6))))
          runesToCheck.add$1(0, t6);
      }
      if (B.boolConversionCheck(runesToCheck.get$isEmpty(0)))
        return;
      codePoints = runesToCheck.toList$0(0);
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(_this.registry.getMissingCodePoints$2(codePoints, fontFamilies))))
        _this.addMissingCodePoints$1(codePoints);
    },
    addMissingCodePoints$1(codePoints) {
      var _this = this;
      J.addAll$1$ax(_this._codePointsToCheckAgainstFallbackFonts, type$.List_int._as(codePoints));
      if (!B.boolConversionCheck(_this._scheduledCodePointCheck)) {
        _this._scheduledCodePointCheck = true;
        _this.set$_idleFuture(A.Future_Future$delayed(D.Duration_0, new A.FontFallbackManager_addMissingCodePoints_closure(_this), type$.void));
      }
    },
    _ensureFallbackFonts$0() {
      var t1, t2, codePoints;
      this._scheduledCodePointCheck = false;
      t1 = this._codePointsToCheckAgainstFallbackFonts;
      t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t2.get$isEmpty(t1)))
        return;
      codePoints = t2.toList$0(t1);
      t2.clear$0(t1);
      this.findFontsForMissingCodePoints$1(codePoints);
    },
    registerFallbackFont$1(family) {
      var t1, t2;
      B._asString(family);
      if (family === "Noto Color Emoji" || family === "Noto Emoji") {
        t1 = this.globalFontFallbacks;
        t2 = J.getInterceptor$ax(t1);
        if (B.boolConversionCheck(J.$eq$(t2.get$first(t1), "Roboto")))
          t2.insert$2(t1, 1, family);
        else
          t2.insert$2(t1, 0, family);
      } else
        J.add$1$ax(this.globalFontFallbacks, family);
    },
    findFontsForMissingCodePoints$1(codePoints) {
      var missingCodePoints, requiredComponents, t1, candidateFonts, t2, t3, component, t4, t5, t6, t7, selectedFonts, selectedFont, _this = this;
      type$.List_int._as(codePoints);
      missingCodePoints = B._setArrayType([], type$.JSArray_int);
      requiredComponents = B._setArrayType([], type$.JSArray_FallbackFontComponent);
      t1 = type$.JSArray_NotoFont;
      candidateFonts = B._setArrayType([], t1);
      for (t2 = J.get$iterator$ax(codePoints); B.boolConversionCheck(t2.moveNext$0());) {
        t3 = t2.get$current();
        component = _this.get$codePointToComponents().lookup$1(t3);
        if (B.boolConversionCheck(J.get$isEmpty$asx(component.get$fonts())))
          D.JSArray_methods.add$1(missingCodePoints, t3);
        else {
          if (B.boolConversionCheck(J.$eq$(component.coverCount, 0)))
            D.JSArray_methods.add$1(requiredComponents, component);
          t3 = component.coverCount;
          if (typeof t3 !== "number")
            return t3.$add();
          component.set$coverCount(t3 + 1);
        }
      }
      for (t2 = D.JSArray_methods.get$iterator(requiredComponents); B.boolConversionCheck(t2.moveNext$0());) {
        t3 = t2.get$current();
        for (t4 = J.get$iterator$ax(t3.get$fonts()); B.boolConversionCheck(t4.moveNext$0());) {
          t5 = t4.get$current();
          if (B.boolConversionCheck(J.$eq$(t5.coverCount, 0)))
            D.JSArray_methods.add$1(candidateFonts, t5);
          t6 = t5.coverCount;
          t7 = t3.coverCount;
          if (typeof t6 !== "number")
            return t6.$add();
          if (typeof t7 !== "number")
            return B.iae(t7);
          t5.set$coverCount(t6 + t7);
          J.add$1$ax(t5.coverComponents, t3);
        }
      }
      selectedFonts = B._setArrayType([], t1);
      for (t1 = type$.FallbackFontComponent; B.boolConversionCheck(D.JSArray_methods.get$isNotEmpty(candidateFonts));) {
        selectedFont = _this._selectFont$1(candidateFonts);
        D.JSArray_methods.add$1(selectedFonts, selectedFont);
        for (t2 = J.get$iterator$ax(B.List_List$of(selectedFont.coverComponents, true, t1)); B.boolConversionCheck(t2.moveNext$0());) {
          t3 = t2.get$current();
          for (t4 = J.get$iterator$ax(t3.get$fonts()); B.boolConversionCheck(t4.moveNext$0());) {
            t5 = t4.get$current();
            t6 = t5.coverCount;
            t7 = t3.coverCount;
            if (typeof t6 !== "number")
              return t6.$sub();
            if (typeof t7 !== "number")
              return B.iae(t7);
            t5.set$coverCount(t6 - t7);
            J.remove$1$ax(t5.coverComponents, t3);
          }
          t3.coverCount = 0;
        }
        D.JSArray_methods.removeWhere$1(candidateFonts, new A.FontFallbackManager_findFontsForMissingCodePoints_closure());
      }
      D.JSArray_methods.forEach$1(selectedFonts, J.get$add$ax(_this.get$downloadQueue()));
      if (B.boolConversionCheck(D.JSArray_methods.get$isNotEmpty(missingCodePoints)))
        if (!B.boolConversionCheck(_this.get$downloadQueue().get$isPending())) {
          $.$get$printWarning().call$1("Could not find a set of Noto fonts to display all missing characters. Please add a font asset for the missing characters. See: https://flutter.dev/docs/cookbook/design/fonts");
          J.addAll$1$ax(_this.codePointsWithNoKnownFont, missingCodePoints);
        }
    },
    _selectFont$1(fonts) {
      var bestFonts, t1, maxCodePointsCovered, bestFont, bestFont0, t2, t3, language, _this = this;
      type$.List_NotoFont._as(fonts);
      bestFonts = B._setArrayType([], type$.JSArray_NotoFont);
      for (t1 = J.get$iterator$ax(fonts), maxCodePointsCovered = -1, bestFont = null; B.boolConversionCheck(t1.moveNext$0());) {
        bestFont0 = t1.get$current();
        t2 = bestFont0.coverCount;
        if (typeof t2 !== "number")
          return t2.$gt();
        if (t2 > maxCodePointsCovered) {
          D.JSArray_methods.clear$0(bestFonts);
          D.JSArray_methods.add$1(bestFonts, bestFont0);
          maxCodePointsCovered = bestFont0.coverCount;
          bestFont = bestFont0;
        } else if (t2 === maxCodePointsCovered) {
          D.JSArray_methods.add$1(bestFonts, bestFont0);
          t2 = bestFont0.index;
          t3 = bestFont.index;
          if (typeof t2 !== "number")
            return t2.$lt();
          if (typeof t3 !== "number")
            return B.iae(t3);
          if (t2 < t3)
            bestFont = bestFont0;
        }
      }
      if (bestFonts.length > 1)
        if (B.boolConversionCheck(D.JSArray_methods.every$1(bestFonts, new A.FontFallbackManager__selectFont_closure(_this)))) {
          language = A.DomNavigatorExtension_get_language(B.getProperty(self.window, "navigator", type$.JavaScriptObject));
          if (language === "zh-Hans" || language === "zh-CN" || language === "zh-SG" || language === "zh-MY") {
            bestFont0 = _this._notoSansSC;
            if (B.boolConversionCheck(D.JSArray_methods.contains$1(bestFonts, bestFont0)))
              bestFont = bestFont0;
          } else if (language === "zh-Hant" || language === "zh-TW" || language === "zh-MO") {
            bestFont0 = _this._notoSansTC;
            if (B.boolConversionCheck(D.JSArray_methods.contains$1(bestFonts, bestFont0)))
              bestFont = bestFont0;
          } else if (language === "zh-HK") {
            bestFont0 = _this._notoSansHK;
            if (B.boolConversionCheck(D.JSArray_methods.contains$1(bestFonts, bestFont0)))
              bestFont = bestFont0;
          } else if (language === "ja") {
            bestFont0 = _this._notoSansJP;
            if (B.boolConversionCheck(D.JSArray_methods.contains$1(bestFonts, bestFont0)))
              bestFont = bestFont0;
          } else if (language === "ko") {
            bestFont0 = _this._notoSansKR;
            if (B.boolConversionCheck(D.JSArray_methods.contains$1(bestFonts, bestFont0)))
              bestFont = bestFont0;
          } else {
            bestFont0 = _this._notoSansSC;
            if (B.boolConversionCheck(D.JSArray_methods.contains$1(bestFonts, bestFont0)))
              bestFont = bestFont0;
          }
        } else {
          bestFont0 = _this._notoSymbols;
          if (B.boolConversionCheck(D.JSArray_methods.contains$1(bestFonts, bestFont0)))
            bestFont = bestFont0;
          else {
            bestFont0 = _this._notoSansSC;
            if (B.boolConversionCheck(D.JSArray_methods.contains$1(bestFonts, bestFont0)))
              bestFont = bestFont0;
          }
        }
      bestFont.toString;
      return bestFont;
    },
    get$fontComponents() {
      var result, _this = this,
        value = _this.__FontFallbackManager_fontComponents_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = _this._decodeFontComponents$1("1rhb2gl,1r2ql,1rh2il,4i,,1z2i,1r3c,1z,1rj2gl,1zb2g,2b2g,a,f,bac,2x,ba,1zb,2b,a1qhb2gl,e,1rhbv1kl,1j,acaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaabaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,f1lhb2gl,1rh2u,acaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaabbaaaaaaaaaaaabaaaaaabaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaabaaaaaaaaaabaaaaaaaaaaaaaaaaaaa,i,e1mhb2gl,a2w,bab,5b,p,1n,1q,acaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,bac1lhb2gl,1o,3x,2d,4n,5d,az,2j,ba1ohb2gl,1e,1k,1rhb2s,1u,bab1mhb2gl,1rhb2g,2f,2n,a1qhbv1kl,f1lhbv1kl,po,1l,1rj2s,2s,2w,e2s,1c,1n3n,1p,3e,5o,a1d,a1e,f2r,j,1f,2l,3g,4a,4y,acaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,acaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,a1g,a1k,d,i4v,q,y,1b,1e3f,1rhb,1rhb1cfxlr,2g,3h,3k,aaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaabaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,acaaaabaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaabaaaaaabbaaaaaaaaaaaabaaaaaabaaaaaaaabaaaaaaaaaaaaaabaaaabaaabaaaaaaaaaabaaaaaaaaaaaaaaaaaaa,af1khb2gl,a4s,g,i2z1kk,i4k,r,u,z,1a,1ei,1rhb1c1dl,1rhb1ixlr,1rhb2glr,1t,2a,2k,2m,2v,3a,3b,3c,3f,3p,4f,4t,4w,5g,aaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,acaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaabaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,acaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,acaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaabbaaaaaaaaaaaabaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaabaaaaaaaaaabaaaaaaaaaaaaaaaaaaa,acaaaabaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaabaaaaaaaabaaaaaaaaaaaaaabaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,af,afb,a1gjhbv1kl,a1j,a1qhb2glg,a5f,ea,e1mhbv1kl,i1n,k,l,m,n,o,poip,s,w,x,1c1ja,1g,1rhb1cfselco,1rhb1ixl,1rhb2belr,1v,1x,1y,1zb2gl,2c,2e,2h,2i,2o,2q,2t,2u,3d,3ey,3i,3j,3l,3m,3q,3t,3y,3z,4e,4g,4il,4j,4m,4p,4r,4v,4x,4z,5a,5c,5f,5h,5i,5k,5l,5m,aaa,aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,aaafbacabaadafbgaaabbfbaaaaaaaaafaaafcacabadgaccbacabadaabaaaaaabaaaadc,aaa1ohb1c1dl,aaa1ohb2gl,acaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,acaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaabaaaaaaaaaaaaaabaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,acaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,acaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,acaaaabaaaaaaaaaaaabaabaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaabaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,acaaaabaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaabaaaaaabbaaaaaaaaaaaabaaaaaabaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaabaaaaaaaaaabaaaaaaaaaaaaaaaaaaa,acaaababaaaaaaaaabaabdaaabbaaaaaaabeaaaaaaaaaaaaccaaaaaacbaacabagbcabcbaaaaabaabaaaaaaabaabaaaacca,acabacaaabababbbbaaaabbcababaaaaaabdacaaaaaacaababaabababaaaaaaaaaaaaaabaaaabaaabaaaaaaababaaaabadaaaaaaaa,ad,afadbbabadbbbiadbaaaabbcdcbacbbabaabcacdabaaaaacaaaababacbaaabbbaaiaaaaab,afy3n,agaccaaaaakjbbhbabacaaghgpfccddacaaaabbaai,ahafkdeadbacebaaaaahd1ekgbabgbbi,ahbacabaadafaagaaabaafbaaaaaaaaafaaafcacabalccbacabaacaabaaaaaabaaaadc,ah1ihb2gjb,ah1l,ah1l1nupk,ai,aj,aooiabmecfadjqpehabd,aooiabmo1rqbd,aoojbmohni1db,aoolx1i1h,ao1aahbbcl1ekeggb,at2j,av,avcfg3gla,avd,avdk,ayae1kb1olm,ayf3n,ay1x1v,azgda1k,a1di,a1dxo,a1d1y,a1elhb2gl,a1i,a1jghb2gl,a1k2g,a1qhb1c1dl,a1qhb2bel,a1t,a2d1c,a2i,a2n,a2tmv,a3an,a3h,a3k,a3o,a3og,a3r,a3w,a3x,a4r,a5a,a5e,baba,bab1a,bab1mhbv1kl,bab5j,bacz,bac2r,ba1ohbv1kl,ba2u,c,da1mhbv1kl,da1mhb2gl,e1alhb2gl,e1l,e4o,fu,f2r2a,f2s,gb2ka1kie,gb2z1kk,h,ir,i1n2wk,i2z1v,i4kk,j1a,ph3u,poip2zd,poy,p4r,s1h,t,ty3ca,v,x2j1p,1d,1eip,1ejbladaiak1wg,1ejbladail1wg,1ejbleail1wg,1eyo2ib,1e3w,1h,1i,1j1n,1m,1os,1q1p,1rhbmpfselco,1rhb1cfxl,1rhb1cyelr,1rhb2bel,1r2q,1s,1w,2p,2r,2xu,2z,3n,3o,3r,3s,3u,3v,3w,4b,4c,4d,4h,4k,4l,4o,4q,4s,5e,5j,5n");
        _this.__FontFallbackManager_fontComponents_FI !== $ && B.throwLateFieldADI("fontComponents");
        _this.set$__FontFallbackManager_fontComponents_FI(result);
        value = result;
      }
      return value;
    },
    get$codePointToComponents() {
      var result, _this = this,
        value = _this.__FontFallbackManager_codePointToComponents_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A._UnicodePropertyLookup__UnicodePropertyLookup$fromPackedData("", _this.get$fontComponents(), type$.FallbackFontComponent);
        _this.__FontFallbackManager_codePointToComponents_FI !== $ && B.throwLateFieldADI("codePointToComponents");
        _this.set$__FontFallbackManager_codePointToComponents_FI(result);
        value = result;
      }
      return value;
    },
    _decodeFontComponents$1(data) {
      var t1, t2;
      B._asString(data);
      t1 = B._setArrayType([], type$.JSArray_FallbackFontComponent);
      for (t2 = D.JSArray_methods.get$iterator(B._setArrayType(data.split(","), type$.JSArray_String)); B.boolConversionCheck(t2.moveNext$0());)
        t1.push(A.FallbackFontComponent$(this._decodeFontSet$1(t2.get$current())));
      return t1;
    },
    _decodeFontSet$1(data) {
      var result, t1, t2, t3, previousIndex, prefix, i, code, index;
      B._asString(data);
      result = B._setArrayType([], type$.JSArray_NotoFont);
      for (t1 = data.length, t2 = this.fallbackFonts, t3 = J.getInterceptor$asx(t2), previousIndex = -1, prefix = 0, i = 0; i < t1; ++i) {
        code = data.charCodeAt(i);
        if (97 <= code && code < 123) {
          index = previousIndex + (prefix * 26 + (code - 97)) + 1;
          D.JSArray_methods.add$1(result, t3.$index(t2, index));
          previousIndex = index;
          prefix = 0;
        } else if (48 <= code && code < 58)
          prefix = prefix * 10 + (code - 48);
        else
          throw B.wrapException(B.StateError$("Unreachable"));
      }
      return result;
    },
    set$_idleFuture(_idleFuture) {
      this._idleFuture = type$.Future_void._as(_idleFuture);
    },
    set$__FontFallbackManager_fontComponents_FI(__FontFallbackManager_fontComponents_FI) {
      this.__FontFallbackManager_fontComponents_FI = type$.List_FallbackFontComponent._as(__FontFallbackManager_fontComponents_FI);
    },
    set$__FontFallbackManager_codePointToComponents_FI(__FontFallbackManager_codePointToComponents_FI) {
      this.__FontFallbackManager_codePointToComponents_FI = type$._UnicodePropertyLookup_FallbackFontComponent._as(__FontFallbackManager_codePointToComponents_FI);
    }
  };
  A._UnicodePropertyLookup.prototype = {
    get$length(_) {
      return J.get$length$asx(this._boundaries);
    },
    lookup$1(value) {
      var t1, t2, end, start, mid, t3;
      B._asInt(value);
      t1 = this._boundaries;
      t2 = J.getInterceptor$asx(t1);
      end = t2.get$length(t1);
      for (start = 0; true;) {
        if (start === end)
          return J.$index$asx(this.__engine$_values, start);
        mid = start + D.JSInt_methods._tdivFast$1(end - start, 2);
        t3 = t2.$index(t1, mid);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (value >= t3)
          start = mid + 1;
        else
          end = mid;
      }
    }
  };
  A.FallbackFontDownloadQueue.prototype = {
    get$fallbackFontUrlPrefix() {
      return A.configuration().get$fontFallbackBaseUrl();
    },
    get$isPending() {
      return J.get$isNotEmpty$asx(this.pendingFonts);
    },
    waitForIdle$0() {
      var t1 = this._idleCompleter;
      if (t1 == null)
        return B.Future_Future$value(null, type$.void);
      else
        return t1.get$future();
    },
    add$1(_, font) {
      var t1, t2, firstInBatch, _this = this;
      type$.NotoFont._as(font);
      if (B.boolConversionCheck(J.contains$1$asx(_this.downloadedFonts, font)) || B.boolConversionCheck(_this.pendingFonts.containsKey$1(font.url)))
        return;
      t1 = _this.pendingFonts;
      t2 = J.getInterceptor$asx(t1);
      firstInBatch = t2.get$isEmpty(t1);
      t2.$indexSet(t1, font.url, font);
      if (_this._idleCompleter == null)
        _this.set$_idleCompleter(B.Completer_Completer(type$.void));
      if (firstInBatch)
        A.Timer_run(_this.get$startDownloads());
    },
    startDownloads$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, t2, t3, t4, t5, downloads, downloadedFontFamilies;
      var $async$startDownloads$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              downloads = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Future_void);
              downloadedFontFamilies = B._setArrayType([], type$.JSArray_String);
              for (t1 = $async$self.pendingFonts, t2 = J.get$iterator$ax(t1.get$values()), t3 = type$.void; B.boolConversionCheck(t2.moveNext$0());) {
                t4 = t2.get$current();
                downloads.$indexSet(0, t4.url, A.Future_Future(new A.FallbackFontDownloadQueue_startDownloads_closure($async$self, t4, downloadedFontFamilies), t3));
              }
              $async$goto = 2;
              return B._asyncAwait(B.Future_wait(downloads.get$values(), t3), $async$startDownloads$0);
            case 2:
              // returning from await.
              D.JSArray_methods.sort$0(downloadedFontFamilies);
              for (t2 = D.JSArray_methods.get$iterator(downloadedFontFamilies), t3 = J.getInterceptor$asx(t1), t4 = $async$self.fallbackManager; B.boolConversionCheck(t2.moveNext$0());) {
                t5 = t3.remove$1(t1, t2.get$current());
                t5.toString;
                t4.registerFallbackFont$1(t5.name);
              }
              $async$goto = B.boolConversionCheck(t3.get$isEmpty(t1)) ? 3 : 5;
              break;
            case 3:
              // then
              t4.registry.updateFallbackFontFamilies$1(t4.globalFontFallbacks);
              A.sendFontChangeMessage();
              t1 = $async$self._idleCompleter;
              t1.toString;
              $async$self._idleCompleter = null;
              t1.complete$0();
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$goto = 6;
              return B._asyncAwait($async$self.startDownloads$0(), $async$startDownloads$0);
            case 6:
              // returning from await.
            case 4:
              // join
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$startDownloads$0, $async$completer);
    },
    set$_idleCompleter(_idleCompleter) {
      this._idleCompleter = type$.nullable_Completer_void._as(_idleCompleter);
    }
  };
  A.FontLoadError.prototype = {};
  A.FontNotFoundError.prototype = {};
  A.FontDownloadError.prototype = {};
  A.FontInvalidDataError.prototype = {};
  A.AssetFontsResult.prototype = {};
  A.FrameReference.prototype = {
    FrameReference$1(value, $V) {
      J.add$1$ax($.frameReferences, this);
    },
    set$value(value) {
      this.value = this.$ti._eval$1("1?")._as(value);
    }
  };
  A.CrossFrameCache.prototype = {
    commitFrame$0() {
      var t2, _this = this,
        t1 = _this._reusablePool;
      if (t1 != null)
        for (t1 = J.get$iterator$ax(t1.get$values()); B.boolConversionCheck(t1.moveNext$0());)
          for (t2 = J.get$iterator$ax(t1.get$current()); B.boolConversionCheck(t2.moveNext$0());)
            t2.get$current().evict$0();
      _this.set$_reusablePool(_this._cache);
      _this.set$_cache(null);
    },
    cache$3(key, value, callback) {
      var t1 = this.$ti,
        t2 = t1._precomputed1;
      this._addToCache$2(B._asString(key), A._CrossFrameCacheItem$(t2._as(value), t1._eval$1("~(1)?")._as(callback), t2));
    },
    _addToCache$2(key, item) {
      var t1, t2, t3, t4, _this = this;
      B._asString(key);
      t1 = _this.$ti;
      t1._eval$1("_CrossFrameCacheItem<1>")._as(item);
      if (_this._cache == null)
        _this.set$_cache(B.LinkedHashMap_LinkedHashMap$_empty(type$.String, t1._eval$1("List<_CrossFrameCacheItem<1>>")));
      t2 = _this._cache;
      t2.toString;
      t3 = J.getInterceptor$asx(t2);
      t4 = t3.$index(t2, key);
      if (t4 == null) {
        t1 = B._setArrayType([], t1._eval$1("JSArray<_CrossFrameCacheItem<1>>"));
        t3.$indexSet(t2, key, t1);
      } else
        t1 = t4;
      J.add$1$ax(t1, item);
    },
    reuse$1(key) {
      var t1, items, item;
      B._asString(key);
      t1 = this._reusablePool;
      if (t1 == null)
        return null;
      items = J.$index$asx(t1, key);
      if (items == null || B.boolConversionCheck(J.get$isEmpty$asx(items)))
        return null;
      item = J.removeAt$1$ax(items, 0);
      this._addToCache$2(key, item);
      return item.value;
    },
    set$_cache(_cache) {
      this._cache = this.$ti._eval$1("Map<String,List<_CrossFrameCacheItem<1>>>?")._as(_cache);
    },
    set$_reusablePool(_reusablePool) {
      this._reusablePool = this.$ti._eval$1("Map<String,List<_CrossFrameCacheItem<1>>>?")._as(_reusablePool);
    }
  };
  A._CrossFrameCacheItem.prototype = {
    evict$0() {
      var t1 = this.evictCallback;
      if (t1 != null)
        t1.call$1(this.value);
    }
  };
  A.FrameTimingRecorder.prototype = {
    recordBuildFinish$0() {
      var t1 = A.FrameTimingRecorder__nowMicros();
      this.set$_buildFinishMicros(t1);
    },
    recordRasterStart$0() {
      var t1 = A.FrameTimingRecorder__nowMicros();
      this.set$_rasterStartMicros(t1);
    },
    recordRasterFinish$0() {
      var t1 = A.FrameTimingRecorder__nowMicros();
      this.set$_rasterFinishMicros(t1);
    },
    submitTimings$0() {
      var t2, t3, timing, now, _this = this,
        t1 = _this._buildFinishMicros;
      t1.toString;
      t2 = _this._rasterStartMicros;
      t2.toString;
      t3 = _this._rasterFinishMicros;
      t3.toString;
      timing = A.FrameTiming_FrameTiming(t1, _this._buildStartMicros, t3, t3, t2, _this._vsyncStartMicros);
      J.add$1$ax($.FrameTimingRecorder__frameTimings, timing);
      now = A.FrameTimingRecorder__nowMicros();
      t1 = $.$get$FrameTimingRecorder__frameTimingsLastSubmitTime();
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (now - t1 > 100000) {
        $.FrameTimingRecorder__frameTimingsLastSubmitTime = now;
        A.EnginePlatformDispatcher_instance().invokeOnReportTimings$1($.FrameTimingRecorder__frameTimings);
        $.FrameTimingRecorder__frameTimings = B._setArrayType([], type$.JSArray_FrameTiming);
      }
    },
    set$_buildFinishMicros(_buildFinishMicros) {
      this._buildFinishMicros = B._asIntQ(_buildFinishMicros);
    },
    set$_rasterStartMicros(_rasterStartMicros) {
      this._rasterStartMicros = B._asIntQ(_rasterStartMicros);
    },
    set$_rasterFinishMicros(_rasterFinishMicros) {
      this._rasterFinishMicros = B._asIntQ(_rasterFinishMicros);
    }
  };
  A.BitmapCanvas.prototype = {
    BitmapCanvas$3$density(_bounds, renderStrategy, density) {
      var t2, _this = this,
        t1 = _this.rootElement;
      A.DomCSSStyleDeclarationExtension_set_position(B.getProperty(t1, "style", type$.JavaScriptObject), "absolute");
      t2 = J.floor$0$n(_this._bounds.left);
      if (typeof t2 !== "number")
        return t2.$sub();
      _this.set$_canvasPositionX(t2 - 1);
      t2 = J.floor$0$n(_this._bounds.top);
      if (typeof t2 !== "number")
        return t2.$sub();
      _this.set$_canvasPositionY(t2 - 1);
      _this._updateRootElementTransform$0();
      _this._canvasPool.mount$1(t1);
      _this._setupInitialTransform$0();
    },
    set$bounds(newValue) {
      var t1, newCanvasPositionX, newCanvasPositionY, _this = this;
      type$.Rect._as(newValue);
      _this._bounds = newValue;
      t1 = J.floor$0$n(newValue.left);
      if (typeof t1 !== "number")
        return t1.$sub();
      newCanvasPositionX = t1 - 1;
      t1 = J.floor$0$n(_this._bounds.top);
      if (typeof t1 !== "number")
        return t1.$sub();
      newCanvasPositionY = t1 - 1;
      if (!B.boolConversionCheck(J.$eq$(_this._canvasPositionX, newCanvasPositionX)) || !B.boolConversionCheck(J.$eq$(_this._canvasPositionY, newCanvasPositionY))) {
        _this._canvasPositionX = newCanvasPositionX;
        _this._canvasPositionY = newCanvasPositionY;
        _this._updateRootElementTransform$0();
      }
    },
    get$size() {
      return this._bounds.get$size();
    },
    get$density() {
      return this._density;
    },
    setElementCache$1(cache) {
      this.set$_elementCache(type$.nullable_CrossFrameCache_JavaScriptObject._as(cache));
    },
    _updateRootElementTransform$0() {
      A.DomCSSStyleDeclarationExtension_set_transform(B.getProperty(this.rootElement, "style", type$.JavaScriptObject), "translate(" + B.S(this._canvasPositionX) + "px, " + B.S(this._canvasPositionY) + "px)");
    },
    _setupInitialTransform$0() {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this._bounds.left;
      if (typeof t1 !== "number")
        return t1.$sub();
      t2 = _this._canvasPositionX;
      t2.toString;
      t2 = J.toDouble$0$n(t2);
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = _this._bounds.top;
      if (typeof t3 !== "number")
        return t3.$sub();
      t4 = _this._canvasPositionY;
      t4.toString;
      t4 = J.toDouble$0$n(t4);
      if (typeof t4 !== "number")
        return B.iae(t4);
      t5 = J.$negate$in(_this._bounds.left);
      if (typeof t5 !== "number")
        return t5.$add();
      t6 = J.$negate$in(_this._bounds.top);
      if (typeof t6 !== "number")
        return t6.$add();
      _this._canvasPool.set$initialTransform(A.Offset$(t5 + (t1 - 1 - t2) + 1, t6 + (t3 - 1 - t4) + 1));
    },
    doesFitBounds$2(newBounds, newDensity) {
      var t1, t2;
      type$.Rect._as(newBounds);
      B._asDouble(newDensity);
      t1 = this.widthInBitmapPixels;
      t2 = A.BitmapCanvas_widthToPhysical(newBounds.get$width());
      if (typeof t1 !== "number")
        return t1.$ge();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (t1 >= t2) {
        t1 = this.heightInBitmapPixels;
        t2 = A.BitmapCanvas_heightToPhysical(newBounds.get$height());
        if (typeof t1 !== "number")
          return t1.$ge();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t1 = t1 >= t2 && B.boolConversionCheck(J.$eq$(this._density, newDensity));
      } else
        t1 = false;
      return t1;
    },
    dispose$0() {
      this._canvasPool.dispose$0();
    },
    clear$0(_) {
      var t1, t2, len, t3, t4, t5, i, child, _this = this;
      _this._contains3dTransform = false;
      J.clear$0$ax(_this._canvasPool);
      t1 = _this.__engine$_children;
      t2 = J.getInterceptor$asx(t1);
      len = t2.get$length(t1);
      for (t3 = type$.nullable_JavaScriptObject, t4 = _this.rootElement, t5 = type$.void, i = 0; i < len; ++i) {
        child = t2.$index(t1, i);
        if (B.boolConversionCheck(J.$eq$(B.getProperty(child, "parentNode", t3), t4)))
          B._callMethodUnchecked0(child, "remove", t5);
      }
      t2.clear$0(t1);
      _this._childOverdraw = false;
      _this._cachedLastCssFont = null;
      _this._setupInitialTransform$0();
    },
    isReusable$0() {
      return J.$eq$(this._devicePixelRatio, A.EngineFlutterDisplay_instance().get$browserDevicePixelRatio());
    },
    setUpPaint$2(paint, shaderBounds) {
      type$.SurfacePaintData._as(paint);
      type$.nullable_Rect._as(shaderBounds);
      this._canvasPool.get$contextHandle().setUpPaint$2(paint, shaderBounds);
    },
    tearDownPaint$0() {
      this._canvasPool.get$contextHandle().tearDownPaint$0();
    },
    save$0() {
      this._canvasPool.save$0();
      var t1 = this._saveCount;
      if (typeof t1 !== "number")
        return t1.$add();
      this.set$_saveCount(t1 + 1);
      return t1;
    },
    restore$0() {
      var t1, _this = this;
      _this._canvasPool.restore$0();
      t1 = _this._saveCount;
      if (typeof t1 !== "number")
        return t1.$sub();
      _this.set$_saveCount(t1 - 1);
      _this._cachedLastCssFont = null;
    },
    translate$2(dx, dy) {
      this._canvasPool.translate$2(B._asDouble(dx), B._asDouble(dy));
    },
    scale$2(sx, sy) {
      this._canvasPool.scale$2(B._asDouble(sx), B._asDouble(sy));
    },
    transform$1(matrix4) {
      type$.Float32List._as(matrix4);
      if (A.transformKindOf(matrix4) === C.TransformKind_2)
        this._contains3dTransform = true;
      this._canvasPool.transform$1(matrix4);
    },
    clipRect$2(rect, clipOp) {
      var t1, path;
      type$.Rect._as(rect);
      t1 = this._canvasPool;
      if (type$.ClipOp._as(clipOp) === C.ClipOp_0) {
        path = A.SurfacePath$();
        path.set$fillType(C.PathFillType_1);
        path.addRect$1(A.Rect$fromLTWH(0, 0, this._bounds.get$width(), this._bounds.get$height()));
        path.addRect$1(rect);
        t1.clipPath$1(path);
      } else
        t1.clipRect$1(rect);
    },
    clipRRect$1(rrect) {
      this._canvasPool.clipRRect$1(type$.RRect._as(rrect));
    },
    clipPath$1(path) {
      this._canvasPool.clipPath$1(type$.Path._as(path));
    },
    _useDomForRenderingFill$1(paint) {
      var t1, _this = this;
      type$.SurfacePaintData._as(paint);
      t1 = true;
      if (!B.boolConversionCheck(_this._renderStrategy.isInsideSvgFilterTree))
        if (!B.boolConversionCheck(_this._contains3dTransform))
          t1 = B.boolConversionCheck(_this._childOverdraw) && !B.boolConversionCheck(_this._canvasPool.get$hasCanvas()) && paint.maskFilter == null && paint.shader == null && !B.boolConversionCheck(J.$eq$(paint.style, C.PaintingStyle_1));
      return t1;
    },
    _useDomForRenderingFillAndStroke$1(paint) {
      var t1, t2, _this = this;
      type$.SurfacePaintData._as(paint);
      t1 = _this._renderStrategy;
      t2 = true;
      if (!B.boolConversionCheck(t1.isInsideSvgFilterTree))
        if (!B.boolConversionCheck(_this._contains3dTransform))
          t1 = (B.boolConversionCheck(_this._childOverdraw) || B.boolConversionCheck(t1.hasImageElements) || B.boolConversionCheck(t1.hasParagraphs)) && !B.boolConversionCheck(_this._canvasPool.get$hasCanvas()) && paint.maskFilter == null && paint.shader == null;
        else
          t1 = t2;
      else
        t1 = t2;
      return t1;
    },
    drawPaint$1(paint) {
      var _this = this;
      type$.SurfacePaintData._as(paint);
      if (B.boolConversionCheck(_this._useDomForRenderingFill$1(paint)))
        _this.drawRect$2(_this._computeScreenBounds$1(_this._canvasPool.get$currentTransform()), paint);
      else {
        _this.setUpPaint$2(paint, paint.shader != null ? _this._computePictureBounds$0() : null);
        _this._canvasPool.fill$0();
        _this.tearDownPaint$0();
      }
    },
    drawRect$2(rect, paint) {
      var t1, _this = this;
      type$.Rect._as(rect);
      type$.SurfacePaintData._as(paint);
      t1 = _this._canvasPool;
      if (B.boolConversionCheck(_this._useDomForRenderingFillAndStroke$1(paint))) {
        rect = A.adjustRectForDom(rect, paint);
        _this._drawElement$3(A.buildDrawRectElement(rect, paint, "draw-rect", t1.get$currentTransform()), rect.get$topLeft(), paint);
      } else {
        _this.setUpPaint$2(paint, rect);
        t1.drawRect$2(rect, paint.style);
        _this.tearDownPaint$0();
      }
    },
    _drawElement$3(element, offset, paint) {
      var t2, t3, t4, t5, t6, t7, blendMode, _this = this,
        t1 = type$.JavaScriptObject;
      t1._as(element);
      type$.Offset._as(offset);
      type$.SurfacePaintData._as(paint);
      t2 = _this._canvasPool;
      if (B.boolConversionCheck(t2.get$isClipped())) {
        t3 = t2.clipStack;
        t3.toString;
        for (t2 = J.get$iterator$ax(A._clipContent(t3, element, C.Offset_0_0, A.transformWithOffset(t2.get$currentTransform(), offset))), t3 = _this.rootElement, t4 = type$.void, t5 = _this.__engine$_children, t6 = J.getInterceptor$ax(t5); B.boolConversionCheck(t2.moveNext$0());) {
          t7 = t2.get$current();
          B._callMethodUnchecked1(t3, "append", t7, t4);
          t6.add$1(t5, t7);
        }
      } else {
        B._callMethodUnchecked1(_this.rootElement, "append", element, type$.void);
        J.add$1$ax(_this.__engine$_children, element);
      }
      blendMode = paint.blendMode;
      if (blendMode != null) {
        t1 = B.getProperty(element, "style", t1);
        t2 = A.blendModeToCssMixBlendMode(blendMode);
        A.DomCSSStyleDeclarationExtension_set_mixBlendMode(t1, t2 == null ? "" : t2);
      }
      _this._closeCanvas$0();
    },
    drawRRect$2(rrect, paint) {
      var t1, rect, element, _this = this;
      type$.RRect._as(rrect);
      type$.SurfacePaintData._as(paint);
      t1 = _this._canvasPool;
      if (B.boolConversionCheck(_this._useDomForRenderingFillAndStroke$1(paint))) {
        rect = A.adjustRectForDom(rrect.get$outerRect(), paint);
        element = A.buildDrawRectElement(rect, paint, "draw-rrect", t1.get$currentTransform());
        A.applyRRectBorderRadius(B.getProperty(element, "style", type$.JavaScriptObject), rrect);
        _this._drawElement$3(element, rect.get$topLeft(), paint);
      } else {
        _this.setUpPaint$2(paint, rrect.get$outerRect());
        t1.drawRRect$2(rrect, paint.style);
        _this.tearDownPaint$0();
      }
    },
    drawOval$2(rect, paint) {
      var t1, element, t2, t3, _this = this;
      type$.Rect._as(rect);
      type$.SurfacePaintData._as(paint);
      t1 = _this._canvasPool;
      if (B.boolConversionCheck(_this._useDomForRenderingFill$1(paint))) {
        rect = A.adjustRectForDom(rect, paint);
        element = A.buildDrawRectElement(rect, paint, "draw-oval", t1.get$currentTransform());
        _this._drawElement$3(element, rect.get$topLeft(), paint);
        t1 = B.getProperty(element, "style", type$.JavaScriptObject);
        t2 = rect.get$width();
        if (typeof t2 !== "number")
          return t2.$div();
        t3 = rect.get$height();
        if (typeof t3 !== "number")
          return t3.$div();
        A.DomCSSStyleDeclarationExtension_set_borderRadius(t1, B.S(t2 / 2) + "px / " + B.S(t3 / 2) + "px");
      } else {
        _this.setUpPaint$2(paint, rect);
        t1.drawOval$2(rect, paint.style);
        _this.tearDownPaint$0();
      }
    },
    drawCircle$3(c, radius, paint) {
      var rect, element, _this = this;
      type$.Offset._as(c);
      B._asDouble(radius);
      type$.SurfacePaintData._as(paint);
      if (B.boolConversionCheck(_this._useDomForRenderingFillAndStroke$1(paint))) {
        rect = A.adjustRectForDom(A.Rect$fromCircle(c, radius), paint);
        element = A.buildDrawRectElement(rect, paint, "draw-circle", _this._canvasPool.get$currentTransform());
        _this._drawElement$3(element, rect.get$topLeft(), paint);
        A.DomCSSStyleDeclarationExtension_set_borderRadius(B.getProperty(element, "style", type$.JavaScriptObject), "50%");
      } else {
        _this.setUpPaint$2(paint, paint.shader != null ? A.Rect$fromCircle(c, radius) : null);
        _this._canvasPool.drawCircle$3(c, radius, paint.style);
        _this.tearDownPaint$0();
      }
    },
    drawPath$2(path, paint) {
      var t1, transform, pathAsRect, pathAsRRect, svgElm, style, t2, t3, _this = this;
      type$.Path._as(path);
      type$.SurfacePaintData._as(paint);
      if (B.boolConversionCheck(_this._useDomForRenderingFill$1(paint))) {
        t1 = _this._canvasPool;
        transform = t1.get$currentTransform();
        type$.SurfacePath._as(path);
        pathAsRect = path.toRect$0();
        if (pathAsRect != null) {
          _this.drawRect$2(pathAsRect, paint);
          return;
        }
        pathAsRRect = path.toRoundedRect$0();
        if (pathAsRRect != null) {
          _this.drawRRect$2(pathAsRRect, paint);
          return;
        }
        svgElm = A.pathToSvgElement(path, paint);
        if (!B.boolConversionCheck(t1.get$isClipped())) {
          style = B.getProperty(svgElm, "style", type$.JavaScriptObject);
          A.DomCSSStyleDeclarationExtension_set_position(style, "absolute");
          if (!B.boolConversionCheck(transform.isIdentity$0())) {
            A.DomCSSStyleDeclarationExtension_set_transform(style, A.matrix4ToCssTransform(transform));
            A.DomCSSStyleDeclarationExtension_set_transformOrigin(style, "0 0 0");
          }
        }
        _this._applyFilter$2(svgElm, paint);
        _this._drawElement$3(svgElm, C.Offset_0_0, paint);
      } else {
        _this.setUpPaint$2(paint, paint.shader != null ? path.getBounds$0() : null);
        t1 = paint.style;
        t2 = t1 == null && paint.strokeWidth != null;
        t3 = _this._canvasPool;
        if (t2)
          t3.drawPath$2(path, C.PaintingStyle_1);
        else
          t3.drawPath$2(path, t1);
        _this.tearDownPaint$0();
      }
    },
    _applyFilter$2(element, paint) {
      var isStroke, cssColor, sigma,
        t1 = type$.JavaScriptObject;
      t1._as(element);
      type$.SurfacePaintData._as(paint);
      if (paint.maskFilter != null) {
        isStroke = J.$eq$(paint.style, C.PaintingStyle_1);
        cssColor = A.colorValueToCssString(paint.color);
        sigma = paint.maskFilter.get$webOnlySigma();
        if (B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_1)) && !isStroke)
          A.DomCSSStyleDeclarationExtension_set_boxShadow(B.getProperty(element, "style", t1), "0px 0px " + B.S(sigma * 2) + "px " + cssColor);
        else
          A.DomCSSStyleDeclarationExtension_set_filter(B.getProperty(element, "style", t1), "blur(" + B.S(sigma) + "px)");
      }
    },
    drawShadow$4(path, color, elevation, transparentOccluder) {
      this._canvasPool.drawShadow$4(type$.Path._as(path), type$.Color._as(color), B._asDouble(elevation), B._asBool(transparentOccluder));
    },
    _reuseOrCreateImage$1(htmlImage) {
      var t1, t2, imageElement, newImageElement;
      type$.HtmlImage._as(htmlImage);
      t1 = A.DomHTMLImageElementExtension_get_src(htmlImage.get$imgElement());
      t1.toString;
      t2 = this._elementCache;
      if (t2 != null) {
        imageElement = t2.reuse$1(t1);
        if (imageElement != null)
          return imageElement;
      }
      newImageElement = htmlImage.cloneImageElement$0();
      t2 = this._elementCache;
      if (t2 != null)
        t2.cache$3(t1, newImageElement, A._engine_BitmapCanvas__onEvictElement$closure());
      return newImageElement;
    },
    _drawImage$3(image, p, paint) {
      var blendMode, colorFilter, imgElement, t1, t2, t3, t4, t5, t6, cssTransform, _this = this, _s5_ = "style";
      type$.Image._as(image);
      type$.Offset._as(p);
      type$.SurfacePaintData._as(paint);
      type$.HtmlImage._as(image);
      blendMode = paint.blendMode;
      colorFilter = A.createHtmlColorFilter(paint.colorFilter);
      if (colorFilter instanceof A.ModeHtmlColorFilter)
        imgElement = _this._createImageElementWithBlend$4(image, colorFilter.color, colorFilter.blendMode, paint);
      else
        imgElement = colorFilter instanceof A.MatrixHtmlColorFilter ? _this._createImageElementWithSvgColorMatrixFilter$3(image, colorFilter.matrix, paint) : _this._reuseOrCreateImage$1(image);
      t1 = type$.JavaScriptObject;
      t2 = B.getProperty(imgElement, _s5_, t1);
      t3 = A.blendModeToCssMixBlendMode(blendMode);
      A.DomCSSStyleDeclarationExtension_set_mixBlendMode(t2, t3 == null ? "" : t3);
      t2 = _this._canvasPool;
      if (B.boolConversionCheck(t2.get$isClipped())) {
        t1 = B.getProperty(imgElement, _s5_, t1);
        A.DomCSSStyleDeclarationExtension_removeProperty(t1, "width");
        A.DomCSSStyleDeclarationExtension_removeProperty(t1, "height");
        t1 = t2.clipStack;
        t1.toString;
        for (t1 = J.get$iterator$ax(A._clipContent(t1, imgElement, p, t2.get$currentTransform())), t2 = _this.rootElement, t3 = type$.void, t4 = _this.__engine$_children, t5 = J.getInterceptor$ax(t4); B.boolConversionCheck(t1.moveNext$0());) {
          t6 = t1.get$current();
          B._callMethodUnchecked1(t2, "append", t6, t3);
          t5.add$1(t4, t6);
        }
      } else {
        cssTransform = A.float64ListToCssTransform(A.transformWithOffset(t2.get$currentTransform(), p).get$storage());
        t1 = B.getProperty(imgElement, _s5_, t1);
        A.DomCSSStyleDeclarationExtension_set_transformOrigin(t1, "0 0 0");
        A.DomCSSStyleDeclarationExtension_set_transform(t1, cssTransform);
        A.DomCSSStyleDeclarationExtension_removeProperty(t1, "width");
        A.DomCSSStyleDeclarationExtension_removeProperty(t1, "height");
        B._callMethodUnchecked1(_this.rootElement, "append", imgElement, type$.void);
        J.add$1$ax(_this.__engine$_children, imgElement);
      }
      return imgElement;
    },
    _createImageElementWithBlend$4(image, color, blendMode, paint) {
      type$.HtmlImage._as(image);
      type$.Color._as(color);
      type$.BlendMode._as(blendMode);
      type$.SurfacePaintData._as(paint);
      switch (blendMode.index) {
        case 19:
        case 18:
        case 25:
        case 13:
        case 15:
        case 12:
        case 5:
        case 9:
        case 7:
        case 26:
        case 27:
        case 28:
        case 11:
        case 10:
          return this._createImageElementWithSvgBlendFilter$4(image, color, blendMode, paint);
        default:
          return this._createBackgroundImageWithBlend$4(image, color, blendMode, paint);
      }
    },
    drawImageRect$4(image, src, dst, paint) {
      var t1, t2, requiresClipping, targetLeft, targetTop, t3, imgElement, targetWidth, targetHeight, _this = this;
      type$.Image._as(image);
      t1 = type$.Rect;
      t1._as(src);
      t1._as(dst);
      type$.SurfacePaintData._as(paint);
      t1 = src.left;
      t2 = J.getInterceptor$(t1);
      requiresClipping = !B.boolConversionCheck(t2.$eq(t1, 0)) || !B.boolConversionCheck(J.$eq$(src.top, 0)) || !B.boolConversionCheck(J.$eq$(src.get$width(), image.get$width())) || !B.boolConversionCheck(J.$eq$(src.get$height(), image.get$height()));
      if (B.boolConversionCheck(J.$eq$(dst.get$width(), image.get$width())) && B.boolConversionCheck(J.$eq$(dst.get$height(), image.get$height())) && !requiresClipping && paint.colorFilter == null)
        _this._drawImage$3(image, dst.get$topLeft(), paint);
      else {
        if (requiresClipping) {
          _this.save$0();
          _this.clipRect$2(dst, C.ClipOp_1);
        }
        targetLeft = dst.left;
        targetTop = dst.top;
        if (requiresClipping) {
          if (!B.boolConversionCheck(J.$eq$(src.get$width(), image.get$width()))) {
            t1 = t2.$negate(t1);
            t2 = dst.get$width();
            t3 = src.get$width();
            if (typeof t2 !== "number")
              return t2.$div();
            if (typeof t3 !== "number")
              return B.iae(t3);
            if (typeof t1 !== "number")
              return t1.$mul();
            targetLeft += t1 * (t2 / t3);
          }
          if (!B.boolConversionCheck(J.$eq$(src.get$height(), image.get$height()))) {
            t1 = J.$negate$in(src.top);
            t2 = dst.get$height();
            t3 = src.get$height();
            if (typeof t2 !== "number")
              return t2.$div();
            if (typeof t3 !== "number")
              return B.iae(t3);
            if (typeof t1 !== "number")
              return t1.$mul();
            targetTop += t1 * (t2 / t3);
          }
        }
        imgElement = _this._drawImage$3(image, A.Offset$(targetLeft, targetTop), paint);
        targetWidth = dst.get$width();
        targetHeight = dst.get$height();
        if (requiresClipping) {
          t1 = image.get$width();
          t2 = src.get$width();
          if (typeof t1 !== "number")
            return t1.$div();
          if (typeof t2 !== "number")
            return B.iae(t2);
          targetWidth *= t1 / t2;
          t2 = image.get$height();
          t1 = src.get$height();
          if (typeof t2 !== "number")
            return t2.$div();
          if (typeof t1 !== "number")
            return B.iae(t1);
          targetHeight *= t2 / t1;
        }
        _this._applyTargetSize$3(imgElement, targetWidth, targetHeight);
        if (requiresClipping)
          _this.restore$0();
      }
      _this._closeCanvas$0();
    },
    _applyTargetSize$3(imageElement, targetWidth, targetHeight) {
      var imageStyle, widthPx, heightPx,
        t1 = type$.JavaScriptObject;
      t1._as(imageElement);
      B._asDouble(targetWidth);
      B._asDouble(targetHeight);
      imageStyle = B.getProperty(imageElement, "style", t1);
      widthPx = B.S(D.JSNumber_methods.toStringAsFixed$1(targetWidth, 2)) + "px";
      heightPx = B.S(D.JSNumber_methods.toStringAsFixed$1(targetHeight, 2)) + "px";
      A.DomCSSStyleDeclarationExtension_set_left(imageStyle, "0px");
      A.DomCSSStyleDeclarationExtension_set_top(imageStyle, "0px");
      A.DomCSSStyleDeclarationExtension_set_width(imageStyle, widthPx);
      A.DomCSSStyleDeclarationExtension_set_height(imageStyle, heightPx);
      if (!B.boolConversionCheck(A.domInstanceOfString(imageElement, "HTMLImageElement")))
        A.DomCSSStyleDeclarationExtension_set_backgroundSize(B.getProperty(imageElement, "style", t1), widthPx + " " + heightPx);
    },
    _createBackgroundImageWithBlend$4(image, filterColor, colorFilterBlendMode, paint) {
      var imgElement, style, t1,
        _s8_ = "absolute";
      type$.HtmlImage._as(image);
      type$.nullable_Color._as(filterColor);
      type$.BlendMode._as(colorFilterBlendMode);
      type$.SurfacePaintData._as(paint);
      imgElement = A.createDomHTMLDivElement();
      style = B.getProperty(imgElement, "style", type$.JavaScriptObject);
      switch (colorFilterBlendMode.index) {
        case 0:
        case 8:
          A.DomCSSStyleDeclarationExtension_set_position(style, _s8_);
          break;
        case 1:
        case 3:
          A.DomCSSStyleDeclarationExtension_set_position(style, _s8_);
          filterColor.toString;
          A.DomCSSStyleDeclarationExtension_set_backgroundColor(style, A.CssColor_toCssString(filterColor));
          break;
        case 2:
        case 6:
          A.DomCSSStyleDeclarationExtension_set_position(style, _s8_);
          A.DomCSSStyleDeclarationExtension_set_backgroundImage(style, "url('" + B.S(A.DomHTMLImageElementExtension_get_src(image.get$imgElement())) + "')");
          break;
        default:
          A.DomCSSStyleDeclarationExtension_set_position(style, _s8_);
          A.DomCSSStyleDeclarationExtension_set_backgroundImage(style, "url('" + B.S(A.DomHTMLImageElementExtension_get_src(image.get$imgElement())) + "')");
          t1 = A.blendModeToCssMixBlendMode(colorFilterBlendMode);
          A.DomCSSStyleDeclarationExtension_set_backgroundBlendMode(style, t1 == null ? "" : t1);
          filterColor.toString;
          A.DomCSSStyleDeclarationExtension_set_backgroundColor(style, A.CssColor_toCssString(filterColor));
          break;
      }
      return imgElement;
    },
    _createImageElementWithSvgBlendFilter$4(image, filterColor, colorFilterBlendMode, paint) {
      var svgFilter, t1, imgElement;
      type$.HtmlImage._as(image);
      type$.nullable_Color._as(filterColor);
      type$.BlendMode._as(colorFilterBlendMode);
      type$.SurfacePaintData._as(paint);
      svgFilter = A.svgFilterFromBlendMode(filterColor, colorFilterBlendMode);
      t1 = svgFilter.element;
      B._callMethodUnchecked1(this.rootElement, "append", t1, type$.void);
      J.add$1$ax(this.__engine$_children, t1);
      imgElement = this._reuseOrCreateImage$1(image);
      t1 = type$.JavaScriptObject;
      A.DomCSSStyleDeclarationExtension_set_filter(B.getProperty(imgElement, "style", t1), "url(#" + B.S(svgFilter.id) + ")");
      if (colorFilterBlendMode === C.BlendMode_26) {
        t1 = B.getProperty(imgElement, "style", t1);
        filterColor.toString;
        A.DomCSSStyleDeclarationExtension_set_backgroundColor(t1, A.CssColor_toCssString(filterColor));
      }
      return imgElement;
    },
    _createImageElementWithSvgColorMatrixFilter$3(image, matrix, paint) {
      var svgFilter, t1, imgElement;
      type$.HtmlImage._as(image);
      type$.List_double._as(matrix);
      type$.SurfacePaintData._as(paint);
      svgFilter = A.svgFilterFromColorMatrix(matrix);
      t1 = svgFilter.element;
      B._callMethodUnchecked1(this.rootElement, "append", t1, type$.void);
      J.add$1$ax(this.__engine$_children, t1);
      imgElement = this._reuseOrCreateImage$1(image);
      A.DomCSSStyleDeclarationExtension_set_filter(B.getProperty(imgElement, "style", type$.JavaScriptObject), "url(#" + B.S(svgFilter.id) + ")");
      return imgElement;
    },
    _closeCanvas$0() {
      this._canvasPool.closeCanvas$0();
      this._childOverdraw = true;
      this._cachedLastCssFont = null;
    },
    setCssFont$2(cssFont, textDirection) {
      var ctx;
      B._asString(cssFont);
      type$.TextDirection._as(textDirection);
      ctx = this._canvasPool.get$context();
      A.DomCanvasRenderingContext2DExtension_set_direction(ctx, textDirection === C.TextDirection_1 ? "ltr" : "rtl");
      if (cssFont !== this._cachedLastCssFont) {
        A.DomCanvasRenderingContext2DExtension_set_font(ctx, cssFont);
        this._cachedLastCssFont = cssFont;
      }
    },
    drawText$5$shadows$style(text, x, y, shadows, style) {
      var ctx, t1, t2, t3, t4;
      B._asString(text);
      B._asDouble(x);
      B._asDouble(y);
      type$.nullable_PaintingStyle._as(style);
      type$.nullable_List_Shadow._as(shadows);
      ctx = this._canvasPool.get$context();
      if (shadows != null) {
        t1 = type$.void;
        B._callMethodUnchecked0(ctx, "save", t1);
        for (t2 = J.get$iterator$ax(shadows), t3 = style === C.PaintingStyle_1; B.boolConversionCheck(t2.moveNext$0());) {
          t4 = t2.get$current();
          A.DomCanvasRenderingContext2DExtension_set_shadowColor(ctx, A.CssColor_toCssString(t4.color));
          A.DomCanvasRenderingContext2DExtension_set_shadowBlur(ctx, t4.blurRadius);
          t4 = t4.offset;
          A.DomCanvasRenderingContext2DExtension_set_shadowOffsetX(ctx, t4.get$dx());
          A.DomCanvasRenderingContext2DExtension_set_shadowOffsetY(ctx, t4.get$dy());
          if (t3)
            A.DomCanvasRenderingContext2DExtension_strokeText(ctx, text, x, y);
          else
            A.DomCanvasRenderingContext2DExtension_fillText(ctx, text, x, y);
        }
        B._callMethodUnchecked0(ctx, "restore", t1);
      }
      if (style === C.PaintingStyle_1)
        A.DomCanvasRenderingContext2DExtension_strokeText(ctx, text, x, y);
      else
        A.DomCanvasRenderingContext2DExtension_fillText(ctx, text, x, y);
    },
    drawParagraph$2(paragraph, offset) {
      var paragraphElement, t1, t2, t3, t4, t5, t6, _this = this;
      type$.CanvasParagraph._as(paragraph);
      type$.Offset._as(offset);
      if (B.boolConversionCheck(paragraph.canDrawOnCanvas) && B.boolConversionCheck(_this._canvasPool.get$hasCanvas()) && !B.boolConversionCheck(_this._childOverdraw) && !B.boolConversionCheck(_this._renderStrategy.isInsideSvgFilterTree)) {
        paragraph.paint$2(_this, offset);
        return;
      }
      paragraphElement = A.drawParagraphElement(paragraph, offset, null);
      t1 = _this._canvasPool;
      if (B.boolConversionCheck(t1.get$isClipped())) {
        t2 = t1.clipStack;
        t2.toString;
        for (t1 = J.get$iterator$ax(A._clipContent(t2, paragraphElement, offset, t1.get$currentTransform())), t2 = _this.rootElement, t3 = type$.void, t4 = _this.__engine$_children, t5 = J.getInterceptor$ax(t4); B.boolConversionCheck(t1.moveNext$0());) {
          t6 = t1.get$current();
          B._callMethodUnchecked1(t2, "append", t6, t3);
          t5.add$1(t4, t6);
        }
      } else {
        A.setElementTransform(paragraphElement, A.transformWithOffset(t1.get$currentTransform(), offset).get$storage());
        B._callMethodUnchecked1(_this.rootElement, "append", paragraphElement, type$.void);
      }
      J.add$1$ax(_this.__engine$_children, paragraphElement);
      t1 = B.getProperty(paragraphElement, "style", type$.JavaScriptObject);
      A.DomCSSStyleDeclarationExtension_set_left(t1, "0px");
      A.DomCSSStyleDeclarationExtension_set_top(t1, "0px");
      _this._closeCanvas$0();
    },
    endOfPaint$0() {
      var t1, t2, t3, t4, t5, t6, t7, paintOrderElement, firstChild, _this = this;
      _this._canvasPool.endOfPaint$0();
      t1 = _this._elementCache;
      if (t1 != null)
        t1.commitFrame$0();
      if (B.boolConversionCheck(_this._contains3dTransform) && B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_1))) {
        t1 = _this.rootElement;
        for (t2 = J.get$iterator$ax(J.toList$0$ax(A.DomElementExtension_get_children(t1))), t3 = type$.JavaScriptObject, t4 = type$.void, t5 = _this.__engine$_children, t6 = J.getInterceptor$ax(t5); B.boolConversionCheck(t2.moveNext$0());) {
          t7 = t2.get$current();
          paintOrderElement = A.createDomHTMLDivElement();
          A.DomCSSStyleDeclarationExtension_set_transform(B.getProperty(paintOrderElement, "style", t3), "translate3d(0,0,0)");
          B._callMethodUnchecked1(paintOrderElement, "append", t7, t4);
          B._callMethodUnchecked1(t1, "append", paintOrderElement, t4);
          t6.add$1(t5, paintOrderElement);
        }
      }
      firstChild = B.getProperty(_this.rootElement, "firstChild", type$.nullable_JavaScriptObject);
      if (firstChild != null)
        if (B.boolConversionCheck(A.domInstanceOfString(firstChild, "HTMLElement")))
          if (B.boolConversionCheck(J.$eq$(J.toLowerCase$0$s(A.DomElementExtension_get_tagName(firstChild)), "canvas")))
            A.DomCSSStyleDeclarationExtension_set_zIndex(B.getProperty(firstChild, "style", type$.JavaScriptObject), "-1");
    },
    _computeScreenBounds$1(targetTransform) {
      var dpr, t1, width, height, topLeft, topRight, bottomRight, bottomLeft, t2, t3, t4, t5, t6, t7, t8, t9, t10,
        inverted = type$.Matrix4._as(targetTransform).clone$0();
      inverted.invert$0();
      dpr = A.EngineFlutterDisplay_instance().get$devicePixelRatio();
      t1 = A.window().get$physicalSize().get$width();
      if (typeof t1 !== "number")
        return t1.$mul();
      width = t1 * dpr;
      t1 = A.window().get$physicalSize().get$height();
      if (typeof t1 !== "number")
        return t1.$mul();
      height = t1 * dpr;
      topLeft = inverted.perspectiveTransform$3$x$y$z(0, 0, 0);
      topRight = inverted.perspectiveTransform$3$x$y$z(width, 0, 0);
      bottomRight = inverted.perspectiveTransform$3$x$y$z(width, height, 0);
      bottomLeft = inverted.perspectiveTransform$3$x$y$z(0, height, 0);
      t1 = topLeft._0;
      t2 = topRight._0;
      t3 = bottomRight._0;
      t4 = bottomLeft._0;
      t5 = type$.double;
      t6 = A.min(t1, A.min(t2, A.min(t3, t4, t5), t5), t5);
      t7 = topLeft._1;
      t8 = topRight._1;
      t9 = bottomRight._1;
      t10 = bottomLeft._1;
      return A.Rect$fromLTRB(t6, A.min(t7, A.min(t8, A.min(t9, t10, t5), t5), t5), A.max(t1, A.max(t2, A.max(t3, t4, t5), t5), t5), A.max(t7, A.max(t8, A.max(t9, t10, t5), t5), t5));
    },
    _computePictureBounds$0() {
      return A.Rect$fromLTRB(0, 0, this._bounds.get$width(), this._bounds.get$height());
    },
    set$_elementCache(_elementCache) {
      this._elementCache = type$.nullable_CrossFrameCache_JavaScriptObject._as(_elementCache);
    },
    set$_saveCount(_saveCount) {
      this._saveCount = B._asInt(_saveCount);
    },
    set$_canvasPositionX(_canvasPositionX) {
      this._canvasPositionX = B._asIntQ(_canvasPositionX);
    },
    set$_canvasPositionY(_canvasPositionY) {
      this._canvasPositionY = B._asIntQ(_canvasPositionY);
    }
  };
  A.SvgBlendMode.prototype = {};
  A.SurfaceCanvas.prototype = {
    save$0() {
      this.__engine$_canvas.save$0();
    },
    saveLayer$2(bounds, paint) {
      type$.nullable_Rect._as(bounds);
      type$.Paint._as(paint);
      if (bounds == null)
        this._saveLayerWithoutBounds$1(paint);
      else
        this._saveLayer$2(bounds, paint);
    },
    _saveLayerWithoutBounds$1(paint) {
      this.__engine$_canvas.saveLayerWithoutBounds$1(type$.SurfacePaint._as(type$.Paint._as(paint)));
    },
    _saveLayer$2(bounds, paint) {
      this.__engine$_canvas.saveLayer$2(type$.Rect._as(bounds), type$.SurfacePaint._as(type$.Paint._as(paint)));
    },
    restore$0() {
      this.__engine$_canvas.restore$0();
    },
    translate$2(dx, dy) {
      this.__engine$_canvas.translate$2(B._asDouble(dx), B._asDouble(dy));
    },
    scale$2(sx, sy) {
      B._asDouble(sx);
      B._asDoubleQ(sy);
      return this._scale$2(sx, sy == null ? sx : sy);
    },
    _scale$2(sx, sy) {
      this.__engine$_canvas.scale$2(B._asDouble(sx), B._asDouble(sy));
    },
    transform$1(matrix4) {
      type$.Float64List._as(matrix4);
      if (matrix4.length !== 16)
        throw B.wrapException(B.ArgumentError$('"matrix4" must have 16 entries.', null));
      this.__engine$_transform$1(A.toMatrix32(matrix4));
    },
    __engine$_transform$1(matrix4) {
      this.__engine$_canvas.transform$1(type$.Float32List._as(matrix4));
    },
    clipRect$2$doAntiAlias(rect, doAntiAlias) {
      this._clipRect$3(type$.Rect._as(rect), C.ClipOp_1, B._asBool(doAntiAlias));
    },
    clipRect$1(rect) {
      return this.clipRect$2$doAntiAlias(rect, true);
    },
    _clipRect$3(rect, clipOp, doAntiAlias) {
      type$.Rect._as(rect);
      type$.ClipOp._as(clipOp);
      B._asBool(doAntiAlias);
      this.__engine$_canvas.clipRect$2(rect, clipOp);
    },
    clipRRect$2$doAntiAlias(rrect, doAntiAlias) {
      this._clipRRect$2(type$.RRect._as(rrect), B._asBool(doAntiAlias));
    },
    clipRRect$1(rrect) {
      return this.clipRRect$2$doAntiAlias(rrect, true);
    },
    _clipRRect$2(rrect, doAntiAlias) {
      type$.RRect._as(rrect);
      B._asBool(doAntiAlias);
      this.__engine$_canvas.clipRRect$1(rrect);
    },
    clipPath$2$doAntiAlias(path, doAntiAlias) {
      this._clipPath$2(type$.Path._as(path), B._asBool(doAntiAlias));
    },
    clipPath$1(path) {
      return this.clipPath$2$doAntiAlias(path, true);
    },
    _clipPath$2(path, doAntiAlias) {
      this.__engine$_canvas.clipPath$2$doAntiAlias(type$.Path._as(path), B._asBool(doAntiAlias));
    },
    drawPaint$1(paint) {
      this._drawPaint$1(type$.Paint._as(paint));
    },
    _drawPaint$1(paint) {
      this.__engine$_canvas.drawPaint$1(type$.SurfacePaint._as(type$.Paint._as(paint)));
    },
    drawRect$2(rect, paint) {
      this._drawRect$2(type$.Rect._as(rect), type$.Paint._as(paint));
    },
    _drawRect$2(rect, paint) {
      this.__engine$_canvas.drawRect$2(type$.Rect._as(rect), type$.SurfacePaint._as(type$.Paint._as(paint)));
    },
    drawRRect$2(rrect, paint) {
      this._drawRRect$2(type$.RRect._as(rrect), type$.Paint._as(paint));
    },
    _drawRRect$2(rrect, paint) {
      this.__engine$_canvas.drawRRect$2(type$.RRect._as(rrect), type$.SurfacePaint._as(type$.Paint._as(paint)));
    },
    drawDRRect$3(outer, inner, paint) {
      var t1 = type$.RRect;
      this._drawDRRect$3(t1._as(outer), t1._as(inner), type$.Paint._as(paint));
    },
    _drawDRRect$3(outer, inner, paint) {
      var t1 = type$.RRect;
      this.__engine$_canvas.drawDRRect$3(t1._as(outer), t1._as(inner), type$.SurfacePaint._as(type$.Paint._as(paint)));
    },
    drawOval$2(rect, paint) {
      this._drawOval$2(type$.Rect._as(rect), type$.Paint._as(paint));
    },
    _drawOval$2(rect, paint) {
      this.__engine$_canvas.drawOval$2(type$.Rect._as(rect), type$.SurfacePaint._as(type$.Paint._as(paint)));
    },
    drawCircle$3(c, radius, paint) {
      this._drawCircle$3(type$.Offset._as(c), B._asDouble(radius), type$.Paint._as(paint));
    },
    _drawCircle$3(c, radius, paint) {
      this.__engine$_canvas.drawCircle$3(type$.Offset._as(c), B._asDouble(radius), type$.SurfacePaint._as(type$.Paint._as(paint)));
    },
    drawPath$2(path, paint) {
      this._drawPath$2(type$.Path._as(path), type$.Paint._as(paint));
    },
    _drawPath$2(path, paint) {
      this.__engine$_canvas.drawPath$2(type$.Path._as(path), type$.SurfacePaint._as(type$.Paint._as(paint)));
    },
    drawImageRect$4(image, src, dst, paint) {
      var t1 = type$.Rect;
      this._drawImageRect$4(type$.Image._as(image), t1._as(src), t1._as(dst), type$.Paint._as(paint));
    },
    _drawImageRect$4(image, src, dst, paint) {
      var t1 = type$.Rect;
      this.__engine$_canvas.drawImageRect$4(type$.Image._as(image), t1._as(src), t1._as(dst), type$.SurfacePaint._as(type$.Paint._as(paint)));
    },
    drawParagraph$2(paragraph, offset) {
      this._drawParagraph$2(type$.Paragraph._as(paragraph), type$.Offset._as(offset));
    },
    _drawParagraph$2(paragraph, offset) {
      this.__engine$_canvas.drawParagraph$2(type$.Paragraph._as(paragraph), type$.Offset._as(offset));
    },
    drawShadow$4(path, color, elevation, transparentOccluder) {
      this.__engine$_canvas.drawShadow$4(type$.Path._as(path), type$.Color._as(color), B._asDouble(elevation), B._asBool(transparentOccluder));
    },
    $isCanvas: 1
  };
  A._DomClip.prototype = {
    get$childContainer() {
      return this._DomClip__childContainer;
    },
    createElement$0() {
      var t1,
        element = this.defaultCreateElement$1("flt-clip");
      this.set$_childContainer(A.createDomElement("flt-clip-interior"));
      t1 = this._DomClip__childContainer;
      t1.toString;
      A.DomCSSStyleDeclarationExtension_set_position(B.getProperty(t1, "style", type$.JavaScriptObject), "absolute");
      B._callMethodUnchecked1(element, "append", t1, type$.void);
      return element;
    },
    applyOverflow$2(element, clipBehaviour) {
      var t1 = type$.JavaScriptObject;
      t1._as(element);
      type$.nullable_Clip._as(clipBehaviour);
      if (clipBehaviour !== C.Clip_0) {
        t1 = B.getProperty(element, "style", t1);
        A.DomCSSStyleDeclarationExtension_set_overflow(t1, "hidden");
        A.DomCSSStyleDeclarationExtension_set_zIndex(t1, "0");
      }
    },
    set$_childContainer(_childContainer) {
      this._DomClip__childContainer = type$.nullable_JavaScriptObject._as(_childContainer);
    },
    $isPersistedSurface: 1,
    $isPersistedContainerSurface: 1,
    $isEngineLayer: 1
  };
  A.PersistedClipRect.prototype = {
    recomputeTransformAndClip$0() {
      var _this = this;
      _this.set$transform(_this.parent.transform);
      if (!B.boolConversionCheck(J.$eq$(_this.clipBehavior, C.Clip_0)))
        _this.set$localClipBounds(_this.rect);
      else
        _this.localClipBounds = null;
      _this.projectedClip = null;
    },
    createElement$0() {
      var t1 = this.super$_DomClip$createElement();
      A.DomElementExtension_setAttribute(t1, "clip-type", "rect");
      return t1;
    },
    apply$0() {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this.rootElement;
      t1.toString;
      t2 = type$.JavaScriptObject;
      t1 = B.getProperty(t1, "style", t2);
      t3 = _this.rect;
      t4 = t3.left;
      A.DomCSSStyleDeclarationExtension_set_left(t1, B.S(t4) + "px");
      t5 = t3.top;
      A.DomCSSStyleDeclarationExtension_set_top(t1, B.S(t5) + "px");
      t6 = t3.right;
      if (typeof t6 !== "number")
        return t6.$sub();
      if (typeof t4 !== "number")
        return B.iae(t4);
      A.DomCSSStyleDeclarationExtension_set_width(t1, B.S(t6 - t4) + "px");
      t3 = t3.bottom;
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t5 !== "number")
        return B.iae(t5);
      A.DomCSSStyleDeclarationExtension_set_height(t1, B.S(t3 - t5) + "px");
      t3 = _this.rootElement;
      t3.toString;
      _this.applyOverflow$2(t3, _this.clipBehavior);
      t3 = _this.get$childContainer();
      t3.toString;
      t2 = B.getProperty(t3, "style", t2);
      A.DomCSSStyleDeclarationExtension_set_left(t2, B.S(-t4) + "px");
      A.DomCSSStyleDeclarationExtension_set_top(t2, B.S(-t5) + "px");
    },
    update$1(oldSurface) {
      var _this = this;
      type$.PersistedClipRect._as(oldSurface);
      _this.super$PersistedContainerSurface$update(oldSurface);
      if (!B.boolConversionCheck(J.$eq$(_this.rect, oldSurface.rect)) || !B.boolConversionCheck(J.$eq$(_this.clipBehavior, oldSurface.clipBehavior))) {
        _this.localClipBounds = null;
        _this.apply$0();
      }
    },
    $is_DomClip: 1,
    $isClipRectEngineLayer0: 1
  };
  A.PersistedClipRRect.prototype = {
    recomputeTransformAndClip$0() {
      var _this = this;
      _this.set$transform(_this.parent.transform);
      if (!B.boolConversionCheck(J.$eq$(_this.clipBehavior, C.Clip_0)))
        _this.set$localClipBounds(_this.rrect.get$outerRect());
      else
        _this.localClipBounds = null;
      _this.projectedClip = null;
    },
    createElement$0() {
      var t1 = this.super$_DomClip$createElement();
      A.DomElementExtension_setAttribute(t1, "clip-type", "rrect");
      return t1;
    },
    apply$0() {
      var t2, style, t3, t4, _this = this,
        t1 = _this.rootElement;
      t1.toString;
      t2 = type$.JavaScriptObject;
      style = B.getProperty(t1, "style", t2);
      t1 = _this.rrect;
      t3 = t1.left;
      A.DomCSSStyleDeclarationExtension_set_left(style, B.S(t3) + "px");
      t4 = t1.top;
      A.DomCSSStyleDeclarationExtension_set_top(style, B.S(t4) + "px");
      A.DomCSSStyleDeclarationExtension_set_width(style, B.S(t1.get$width()) + "px");
      A.DomCSSStyleDeclarationExtension_set_height(style, B.S(t1.get$height()) + "px");
      A.DomCSSStyleDeclarationExtension_set_borderTopLeftRadius(style, B.S(t1.tlRadiusX) + "px");
      A.DomCSSStyleDeclarationExtension_set_borderTopRightRadius(style, B.S(t1.trRadiusX) + "px");
      A.DomCSSStyleDeclarationExtension_set_borderBottomRightRadius(style, B.S(t1.brRadiusX) + "px");
      A.DomCSSStyleDeclarationExtension_set_borderBottomLeftRadius(style, B.S(t1.blRadiusX) + "px");
      t1 = _this.rootElement;
      t1.toString;
      _this.applyOverflow$2(t1, _this.clipBehavior);
      t1 = _this.get$childContainer();
      t1.toString;
      t2 = B.getProperty(t1, "style", t2);
      A.DomCSSStyleDeclarationExtension_set_left(t2, B.S(J.$negate$in(t3)) + "px");
      A.DomCSSStyleDeclarationExtension_set_top(t2, B.S(J.$negate$in(t4)) + "px");
    },
    update$1(oldSurface) {
      var _this = this;
      type$.PersistedClipRRect._as(oldSurface);
      _this.super$PersistedContainerSurface$update(oldSurface);
      if (!B.boolConversionCheck(J.$eq$(_this.rrect, oldSurface.rrect)) || !B.boolConversionCheck(J.$eq$(_this.clipBehavior, oldSurface.clipBehavior))) {
        _this.localClipBounds = null;
        _this.apply$0();
      }
    },
    $is_DomClip: 1,
    $isClipRRectEngineLayer0: 1
  };
  A.PersistedClipPath.prototype = {
    createElement$0() {
      return this.defaultCreateElement$1("flt-clippath");
    },
    recomputeTransformAndClip$0() {
      var _this = this;
      _this.super$PersistedContainerSurface$recomputeTransformAndClip();
      if (!B.boolConversionCheck(J.$eq$(_this.clipBehavior, C.Clip_0))) {
        if (_this.localClipBounds == null)
          _this.set$localClipBounds(_this.clipPath.getBounds$0());
      } else
        _this.localClipBounds = null;
    },
    apply$0() {
      var t2, _this = this,
        t1 = _this._clipElement;
      if (t1 != null)
        B._callMethodUnchecked0(t1, "remove", type$.void);
      t1 = _this.get$childContainer();
      t1.toString;
      _this.set$_clipElement(A.createSvgClipDef(t1, _this.clipPath));
      t1 = _this.get$childContainer();
      t1.toString;
      t2 = _this._clipElement;
      t2.toString;
      B._callMethodUnchecked1(t1, "append", t2, type$.void);
    },
    update$1(oldSurface) {
      var t1, _this = this;
      type$.PersistedClipPath._as(oldSurface);
      _this.super$PersistedContainerSurface$update(oldSurface);
      if (!B.boolConversionCheck(J.$eq$(oldSurface.clipPath, _this.clipPath))) {
        _this.localClipBounds = null;
        t1 = oldSurface._clipElement;
        if (t1 != null)
          B._callMethodUnchecked0(t1, "remove", type$.void);
        _this.apply$0();
      } else
        _this.set$_clipElement(oldSurface._clipElement);
      oldSurface._clipElement = null;
    },
    discard$0() {
      var t1 = this._clipElement;
      if (t1 != null)
        B._callMethodUnchecked0(t1, "remove", type$.void);
      this._clipElement = null;
      this.super$PersistedContainerSurface$discard();
    },
    set$_clipElement(_clipElement) {
      this._clipElement = type$.nullable_JavaScriptObject._as(_clipElement);
    },
    $isClipPathEngineLayer0: 1
  };
  A.SvgFilterBuilder.prototype = {
    SvgFilterBuilder$0() {
      var t2, t3,
        _s7_ = "baseVal",
        t1 = this.filter;
      A.DomElementExtension_set_id(t1, this.id);
      t2 = type$.nullable_JavaScriptObject;
      t3 = B.getProperty(t1, "filterUnits", t2);
      t3.toString;
      A.SVGAnimatedEnumerationExtenson_set_baseVal(t3, 2);
      t3 = B.getProperty(t1, "x", t2);
      t3.toString;
      t3 = B.getProperty(t3, _s7_, t2);
      t3.toString;
      A.SVGLengthExtension_set_valueAsString(t3, "0%");
      t3 = B.getProperty(t1, "y", t2);
      t3.toString;
      t3 = B.getProperty(t3, _s7_, t2);
      t3.toString;
      A.SVGLengthExtension_set_valueAsString(t3, "0%");
      t3 = B.getProperty(t1, "width", t2);
      t3.toString;
      t3 = B.getProperty(t3, _s7_, t2);
      t3.toString;
      A.SVGLengthExtension_set_valueAsString(t3, "100%");
      t1 = B.getProperty(t1, "height", t2);
      t1.toString;
      t2 = B.getProperty(t1, _s7_, t2);
      t2.toString;
      A.SVGLengthExtension_set_valueAsString(t2, "100%");
    },
    set$colorInterpolationFilters(filters) {
      A.DomElementExtension_setAttribute(this.filter, "color-interpolation-filters", B._asString(filters));
    },
    setFeColorMatrix$2$result(matrix, result) {
      var element, t1, t2, t3, t4, i, t5;
      type$.List_double._as(matrix);
      B._asString(result);
      element = A.createSVGFEColorMatrixElement();
      t1 = type$.nullable_JavaScriptObject;
      t2 = B.getProperty(element, "type", t1);
      t2.toString;
      A.SVGAnimatedEnumerationExtenson_set_baseVal(t2, 1);
      t2 = B.getProperty(element, "result", t1);
      t2.toString;
      A.SVGAnimatedStringExtension_set_baseVal(t2, result);
      t2 = B.getProperty(element, "values", t1);
      t2.toString;
      t1 = B.getProperty(t2, "baseVal", t1);
      t1.toString;
      t2 = J.getInterceptor$asx(matrix);
      t3 = this.root;
      t4 = type$.JavaScriptObject;
      i = 0;
      while (true) {
        t5 = t2.get$length(matrix);
        if (typeof t5 !== "number")
          return B.iae(t5);
        if (!(i < t5))
          break;
        t5 = B._callMethodUnchecked0(t3, "createSVGNumber", t4);
        A.SVGNumberExtension_set_value(t5, t2.$index(matrix, i));
        B._callMethodUnchecked1(t1, "appendItem", t5, t4);
        ++i;
      }
      B._callMethodUnchecked1(this.filter, "append", element, type$.void);
    },
    setFeFlood$3$floodColor$floodOpacity$result(floodColor, floodOpacity, result) {
      var element, t1;
      B._asString(floodColor);
      B._asString(floodOpacity);
      B._asString(result);
      element = A.createSVGFEFloodElement();
      A.DomElementExtension_setAttribute(element, "flood-color", floodColor);
      A.DomElementExtension_setAttribute(element, "flood-opacity", floodOpacity);
      t1 = B.getProperty(element, "result", type$.nullable_JavaScriptObject);
      t1.toString;
      A.SVGAnimatedStringExtension_set_baseVal(t1, result);
      B._callMethodUnchecked1(this.filter, "append", element, type$.void);
    },
    setFeBlend$3$in1$in2$mode(in1, in2, mode) {
      var element, t1, t2;
      B._asString(in1);
      B._asString(in2);
      B._asInt(mode);
      element = A.createSVGFEBlendElement();
      t1 = type$.nullable_JavaScriptObject;
      t2 = B.getProperty(element, "in1", t1);
      t2.toString;
      A.SVGAnimatedStringExtension_set_baseVal(t2, in1);
      t2 = B.getProperty(element, "in2", t1);
      t2.toString;
      A.SVGAnimatedStringExtension_set_baseVal(t2, in2);
      t1 = B.getProperty(element, "mode", t1);
      t1.toString;
      A.SVGAnimatedEnumerationExtenson_set_baseVal(t1, mode);
      B._callMethodUnchecked1(this.filter, "append", element, type$.void);
    },
    setFeComposite$8$in1$in2$k1$k2$k3$k4$operator$result(in1, in2, k1, k2, k3, k4, operator, result) {
      var element, t1, t2;
      B._asString(in1);
      B._asString(in2);
      B._asInt(operator);
      B._asNumQ(k1);
      B._asNumQ(k2);
      B._asNumQ(k3);
      B._asNumQ(k4);
      B._asString(result);
      element = A.createSVGFECompositeElement();
      t1 = type$.nullable_JavaScriptObject;
      t2 = B.getProperty(element, "in1", t1);
      t2.toString;
      A.SVGAnimatedStringExtension_set_baseVal(t2, in1);
      t2 = B.getProperty(element, "in2", t1);
      t2.toString;
      A.SVGAnimatedStringExtension_set_baseVal(t2, in2);
      t2 = B.getProperty(element, "operator", t1);
      t2.toString;
      A.SVGAnimatedEnumerationExtenson_set_baseVal(t2, operator);
      if (k1 != null) {
        t2 = B.getProperty(element, "k1", t1);
        t2.toString;
        A.SVGAnimatedNumberExtension_set_baseVal(t2, k1);
      }
      if (k2 != null) {
        t2 = B.getProperty(element, "k2", t1);
        t2.toString;
        A.SVGAnimatedNumberExtension_set_baseVal(t2, k2);
      }
      if (k3 != null) {
        t2 = B.getProperty(element, "k3", t1);
        t2.toString;
        A.SVGAnimatedNumberExtension_set_baseVal(t2, k3);
      }
      if (k4 != null) {
        t2 = B.getProperty(element, "k4", t1);
        t2.toString;
        A.SVGAnimatedNumberExtension_set_baseVal(t2, k4);
      }
      t1 = B.getProperty(element, "result", t1);
      t1.toString;
      A.SVGAnimatedStringExtension_set_baseVal(t1, result);
      B._callMethodUnchecked1(this.filter, "append", element, type$.void);
    },
    setFeComposite$4$in1$in2$operator$result(in1, in2, operator, result) {
      var _null = null;
      return this.setFeComposite$8$in1$in2$k1$k2$k3$k4$operator$result(in1, in2, _null, _null, _null, _null, operator, result);
    },
    build$0() {
      var t1 = this.root;
      B._callMethodUnchecked1(t1, "append", this.filter, type$.void);
      return A.SvgFilter$_(this.id, t1);
    }
  };
  A.SvgFilter.prototype = {};
  A.DomCanvas.prototype = {
    clipRect$2(rect, clipOp) {
      type$.Rect._as(rect);
      type$.ClipOp._as(clipOp);
      throw B.wrapException(B.UnimplementedError$(null));
    },
    clipRRect$1(rrect) {
      type$.RRect._as(rrect);
      throw B.wrapException(B.UnimplementedError$(null));
    },
    clipPath$1(path) {
      type$.Path._as(path);
      throw B.wrapException(B.UnimplementedError$(null));
    },
    drawPaint$1(paint) {
      type$.SurfacePaintData._as(paint);
      throw B.wrapException(B.UnimplementedError$(null));
    },
    drawRect$2(rect, paint) {
      type$.Rect._as(rect);
      type$.SurfacePaintData._as(paint);
      rect = A.adjustRectForDom(rect, paint);
      B._callMethodUnchecked1(this.get$currentElement(), "append", A.buildDrawRectElement(rect, paint, "draw-rect", this.get$currentTransform()), type$.void);
    },
    drawRRect$2(rrect, paint) {
      var element;
      type$.RRect._as(rrect);
      type$.SurfacePaintData._as(paint);
      element = A.buildDrawRectElement(A.adjustRectForDom(rrect.get$outerRect(), paint), paint, "draw-rrect", this.get$currentTransform());
      A.applyRRectBorderRadius(B.getProperty(element, "style", type$.JavaScriptObject), rrect);
      B._callMethodUnchecked1(this.get$currentElement(), "append", element, type$.void);
    },
    drawOval$2(rect, paint) {
      type$.Rect._as(rect);
      type$.SurfacePaintData._as(paint);
      throw B.wrapException(B.UnimplementedError$(null));
    },
    drawCircle$3(c, radius, paint) {
      type$.Offset._as(c);
      B._asDouble(radius);
      type$.SurfacePaintData._as(paint);
      throw B.wrapException(B.UnimplementedError$(null));
    },
    drawPath$2(path, paint) {
      type$.Path._as(path);
      type$.SurfacePaintData._as(paint);
      throw B.wrapException(B.UnimplementedError$(null));
    },
    drawShadow$4(path, color, elevation, transparentOccluder) {
      type$.Path._as(path);
      type$.Color._as(color);
      B._asDouble(elevation);
      B._asBool(transparentOccluder);
      throw B.wrapException(B.UnimplementedError$(null));
    },
    drawImageRect$4(image, src, dst, paint) {
      var t1;
      type$.Image._as(image);
      t1 = type$.Rect;
      t1._as(src);
      t1._as(dst);
      type$.SurfacePaintData._as(paint);
      throw B.wrapException(B.UnimplementedError$(null));
    },
    drawParagraph$2(paragraph, offset) {
      var paragraphElement;
      type$.Paragraph._as(paragraph);
      type$.Offset._as(offset);
      paragraphElement = A.drawParagraphElement(type$.CanvasParagraph._as(paragraph), offset, this.get$currentTransform());
      B._callMethodUnchecked1(this.get$currentElement(), "append", paragraphElement, type$.void);
    },
    endOfPaint$0() {
    },
    $isSaveElementStackTracking: 1
  };
  A.PersistedOffset.prototype = {
    recomputeTransformAndClip$0() {
      var t1, _this = this;
      _this.set$transform(_this.parent.transform);
      t1 = _this.dx;
      if (!B.boolConversionCheck(J.$eq$(t1, 0)) || !B.boolConversionCheck(J.$eq$(_this.dy, 0))) {
        _this.set$transform(_this.transform.clone$0());
        _this.transform.translate$2(t1, _this.dy);
      }
      _this.projectedClip = null;
    },
    get$localTransformInverse() {
      var _this = this,
        t1 = _this._localTransformInverse;
      if (t1 == null) {
        t1 = A.Matrix4_Matrix4$translationValues(J.$negate$in(_this.dx), J.$negate$in(_this.dy), 0);
        _this.set$_localTransformInverse(t1);
      }
      return t1;
    },
    createElement$0() {
      var element = A.DomDocumentExtension_createElement(self.document, "flt-offset");
      A.setElementStyle(element, "position", "absolute");
      A.setElementStyle(element, "transform-origin", "0 0 0");
      return element;
    },
    apply$0() {
      var t1 = this.rootElement;
      t1.toString;
      A.DomCSSStyleDeclarationExtension_set_transform(B.getProperty(t1, "style", type$.JavaScriptObject), "translate(" + B.S(this.dx) + "px, " + B.S(this.dy) + "px)");
    },
    update$1(oldSurface) {
      var _this = this;
      type$.PersistedOffset._as(oldSurface);
      _this.super$PersistedContainerSurface$update(oldSurface);
      if (!B.boolConversionCheck(J.$eq$(oldSurface.dx, _this.dx)) || !B.boolConversionCheck(J.$eq$(oldSurface.dy, _this.dy)))
        _this.apply$0();
    },
    set$_localTransformInverse(_localTransformInverse) {
      this._localTransformInverse = type$.nullable_Matrix4._as(_localTransformInverse);
    },
    $isOffsetEngineLayer0: 1
  };
  A.PersistedOpacity.prototype = {
    recomputeTransformAndClip$0() {
      var t1, dx, dy, _this = this;
      _this.set$transform(_this.parent.transform);
      t1 = _this.offset;
      dx = t1.get$dx();
      dy = t1.get$dy();
      if (dx !== 0 || dy !== 0) {
        _this.set$transform(_this.transform.clone$0());
        _this.transform.translate$2(dx, dy);
      }
      _this.projectedClip = null;
    },
    get$localTransformInverse() {
      var t1 = this._localTransformInverse;
      if (t1 == null) {
        t1 = this.offset;
        t1 = A.Matrix4_Matrix4$translationValues(J.$negate$in(t1.get$dx()), J.$negate$in(t1.get$dy()), 0);
        this.set$_localTransformInverse(t1);
      }
      return t1;
    },
    createElement$0() {
      var element = A.DomDocumentExtension_createElement(self.document, "flt-opacity");
      A.setElementStyle(element, "position", "absolute");
      A.setElementStyle(element, "transform-origin", "0 0 0");
      return element;
    },
    apply$0() {
      var t2,
        t1 = this.rootElement;
      t1.toString;
      t2 = this.alpha;
      if (typeof t2 !== "number")
        return t2.$div();
      A.setElementStyle(t1, "opacity", B.S(t2 / 255));
      t2 = this.offset;
      A.DomCSSStyleDeclarationExtension_set_transform(B.getProperty(t1, "style", type$.JavaScriptObject), "translate(" + B.S(t2.get$dx()) + "px, " + B.S(t2.get$dy()) + "px)");
    },
    update$1(oldSurface) {
      var _this = this;
      type$.PersistedOpacity._as(oldSurface);
      _this.super$PersistedContainerSurface$update(oldSurface);
      if (!B.boolConversionCheck(J.$eq$(_this.alpha, oldSurface.alpha)) || !B.boolConversionCheck(J.$eq$(_this.offset, oldSurface.offset)))
        _this.apply$0();
    },
    set$_localTransformInverse(_localTransformInverse) {
      this._localTransformInverse = type$.nullable_Matrix4._as(_localTransformInverse);
    },
    $isOpacityEngineLayer0: 1
  };
  A.SurfacePaint.prototype = {
    set$blendMode(value) {
      var _this = this;
      type$.BlendMode._as(value);
      if (B.boolConversionCheck(_this._frozen)) {
        _this.set$_paintData(_this._paintData.clone$0());
        _this._frozen = false;
      }
      _this._paintData.blendMode = value;
    },
    get$style() {
      var t1 = this._paintData.style;
      return t1 == null ? C.PaintingStyle_0 : t1;
    },
    set$style(value) {
      var _this = this;
      type$.PaintingStyle._as(value);
      if (B.boolConversionCheck(_this._frozen)) {
        _this.set$_paintData(_this._paintData.clone$0());
        _this._frozen = false;
      }
      _this._paintData.style = value;
    },
    get$strokeWidth() {
      var t1 = this._paintData.strokeWidth;
      return t1 == null ? 0 : t1;
    },
    set$strokeWidth(value) {
      var _this = this;
      B._asDouble(value);
      if (B.boolConversionCheck(_this._frozen)) {
        _this.set$_paintData(_this._paintData.clone$0());
        _this._frozen = false;
      }
      _this._paintData.strokeWidth = value;
    },
    get$color() {
      return A.Color$(this._paintData.color);
    },
    set$color(value) {
      var _this = this;
      type$.Color._as(value);
      if (B.boolConversionCheck(_this._frozen)) {
        _this.set$_paintData(_this._paintData.clone$0());
        _this._frozen = false;
      }
      _this._paintData.set$color(value.get$value());
    },
    get$shader() {
      return this._paintData.shader;
    },
    set$shader(value) {
      var _this = this;
      type$.nullable_Shader._as(value);
      if (B.boolConversionCheck(_this._frozen)) {
        _this.set$_paintData(_this._paintData.clone$0());
        _this._frozen = false;
      }
      _this._paintData.shader = value;
    },
    get$maskFilter() {
      return this._paintData.maskFilter;
    },
    set$filterQuality(value) {
      var _this = this;
      type$.FilterQuality._as(value);
      if (B.boolConversionCheck(_this._frozen)) {
        _this.set$_paintData(_this._paintData.clone$0());
        _this._frozen = false;
      }
      _this._paintData.filterQuality = value;
    },
    get$paintData() {
      this._frozen = true;
      return this._paintData;
    },
    toString$0(_) {
      return "Paint()";
    },
    set$_paintData(_paintData) {
      this._paintData = type$.SurfacePaintData._as(_paintData);
    },
    $isPaint: 1
  };
  A.SurfacePaintData.prototype = {
    clone$0() {
      var _this = this,
        t1 = A.SurfacePaintData$();
      t1.set$blendMode(_this.blendMode);
      t1.set$filterQuality(_this.filterQuality);
      t1.set$maskFilter(_this.maskFilter);
      t1.set$shader(_this.shader);
      t1.set$isAntiAlias(_this.isAntiAlias);
      t1.set$color(_this.color);
      t1.set$colorFilter(_this.colorFilter);
      t1.set$strokeWidth(_this.strokeWidth);
      t1.set$style(_this.style);
      t1.set$strokeJoin(_this.strokeJoin);
      t1.set$strokeCap(_this.strokeCap);
      return t1;
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    },
    set$blendMode(blendMode) {
      this.blendMode = type$.nullable_BlendMode._as(blendMode);
    },
    set$style(style) {
      this.style = type$.nullable_PaintingStyle._as(style);
    },
    set$strokeWidth(strokeWidth) {
      this.strokeWidth = B._asDoubleQ(strokeWidth);
    },
    set$strokeCap(strokeCap) {
      this.strokeCap = type$.nullable_StrokeCap._as(strokeCap);
    },
    set$strokeJoin(strokeJoin) {
      this.strokeJoin = type$.nullable_StrokeJoin._as(strokeJoin);
    },
    set$isAntiAlias(isAntiAlias) {
      this.isAntiAlias = B._asBool(isAntiAlias);
    },
    set$color(color) {
      this.color = B._asInt(color);
    },
    set$shader(shader) {
      this.shader = type$.nullable_Shader._as(shader);
    },
    set$maskFilter(maskFilter) {
      this.maskFilter = type$.nullable_MaskFilter._as(maskFilter);
    },
    set$filterQuality(filterQuality) {
      this.filterQuality = type$.nullable_FilterQuality._as(filterQuality);
    },
    set$colorFilter(colorFilter) {
      this.colorFilter = type$.nullable_EngineColorFilter._as(colorFilter);
    }
  };
  A.Conic.prototype = {
    toQuads$0() {
      var dst, t1, t2, t3, skipSubdivide, controlPointOffset, pointCount, hasNonFinitePoints, p, _this = this,
        pointList = B._setArrayType([], type$.JSArray_Offset),
        subdivideCount = _this._computeSubdivisionCount$1(0.25),
        quadCount = D.JSInt_methods.$shl(1, subdivideCount);
      D.JSArray_methods.add$1(pointList, A.Offset$(_this.p0x, _this.p0y));
      if (subdivideCount === 5) {
        dst = A._ConicPair$();
        _this._chop$1(dst);
        t1 = dst.first;
        t1.toString;
        t2 = dst.second;
        t2.toString;
        t3 = t1.p1x;
        skipSubdivide = B.boolConversionCheck(J.$eq$(t3, t1.p2x)) && B.boolConversionCheck(J.$eq$(t1.p1y, t1.p2y)) && B.boolConversionCheck(J.$eq$(t2.p0x, t2.p1x)) && B.boolConversionCheck(J.$eq$(t2.p0y, t2.p1y));
        if (skipSubdivide) {
          controlPointOffset = A.Offset$(t3, t1.p1y);
          D.JSArray_methods.add$1(pointList, controlPointOffset);
          D.JSArray_methods.add$1(pointList, controlPointOffset);
          D.JSArray_methods.add$1(pointList, controlPointOffset);
          D.JSArray_methods.add$1(pointList, A.Offset$(t2.p2x, t2.p2y));
          quadCount = 2;
        }
      } else
        skipSubdivide = false;
      if (!skipSubdivide)
        A.Conic__subdivide(_this, subdivideCount, pointList);
      pointCount = 2 * quadCount + 1;
      p = 0;
      while (true) {
        if (!(p < pointCount)) {
          hasNonFinitePoints = false;
          break;
        }
        if (!(p < pointList.length))
          return B.ioore(pointList, p);
        if (!B.boolConversionCheck(J.get$isNaN$n(pointList[p].get$dx()))) {
          if (!(p < pointList.length))
            return B.ioore(pointList, p);
          t1 = B.boolConversionCheck(J.get$isNaN$n(pointList[p].get$dy()));
        } else
          t1 = true;
        if (t1) {
          hasNonFinitePoints = true;
          break;
        }
        ++p;
      }
      if (hasNonFinitePoints)
        for (t1 = pointCount - 1, t2 = _this.p1x, p = 1; p < t1; ++p)
          D.JSArray_methods.$indexSet(pointList, p, A.Offset$(t2, _this.p1y));
      return pointList;
    },
    _chop$1(pair) {
      var t1, scale, newW, t2, t3, wp1, t4, t5, t6, t7, t8, m, w2, scaleHalf, _this = this;
      type$._ConicPair._as(pair);
      t1 = _this.fW;
      if (typeof t1 !== "number")
        return B.iae(t1);
      scale = 1 / (1 + t1);
      newW = A.Conic__subdivideWeightValue(t1);
      t2 = _this.p1x;
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = _this.p1y;
      if (typeof t3 !== "number")
        return B.iae(t3);
      wp1 = A.Offset$(t1 * t2, t1 * t3);
      t3 = _this.p0x;
      t4 = wp1.get$dx();
      if (typeof t4 !== "number")
        return B.iae(t4);
      if (typeof t3 !== "number")
        return t3.$add();
      t5 = _this.p2x;
      if (typeof t5 !== "number")
        return B.iae(t5);
      t6 = _this.p0y;
      t7 = wp1.get$dy();
      if (typeof t7 !== "number")
        return B.iae(t7);
      if (typeof t6 !== "number")
        return t6.$add();
      t8 = _this.p2y;
      if (typeof t8 !== "number")
        return B.iae(t8);
      m = A.Offset$((t3 + 2 * t4 + t5) * scale * 0.5, (t6 + 2 * t7 + t8) * scale * 0.5);
      if (B.boolConversionCheck(J.get$isNaN$n(m.get$dx())) || B.boolConversionCheck(J.get$isNaN$n(m.get$dy()))) {
        w2 = t1 * 2;
        scaleHalf = scale * 0.5;
        t1 = _this.p0y;
        t4 = _this.p1y;
        if (typeof t4 !== "number")
          return B.iae(t4);
        if (typeof t1 !== "number")
          return t1.$add();
        t6 = _this.p2y;
        if (typeof t6 !== "number")
          return B.iae(t6);
        m = A.Offset$((t3 + w2 * t2 + t5) * scaleHalf, (t1 + w2 * t4 + t6) * scaleHalf);
      }
      t1 = _this.p0y;
      t2 = wp1.get$dx();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t4 = _this.p0y;
      t6 = wp1.get$dy();
      if (typeof t4 !== "number")
        return t4.$add();
      if (typeof t6 !== "number")
        return B.iae(t6);
      pair.first = A.Conic$(t3, t1, (t3 + t2) * scale, (t4 + t6) * scale, m.get$dx(), m.get$dy(), newW);
      t6 = m.get$dx();
      t4 = m.get$dy();
      t2 = wp1.get$dx();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = _this.p2y;
      t1 = wp1.get$dy();
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t1 !== "number")
        return B.iae(t1);
      pair.second = A.Conic$(t6, t4, (t5 + t2) * scale, (t3 + t1) * scale, t5, _this.p2y, newW);
    },
    chopAtYExtrema$1(dst) {
      var t, _this = this;
      type$.List_Conic._as(dst);
      t = _this._findYExtrema$0();
      if (t == null) {
        J.add$1$ax(dst, _this);
        return;
      }
      if (!B.boolConversionCheck(_this._chopAt$3$cleanupMiddle(t, dst, true))) {
        J.add$1$ax(dst, _this);
        return;
      }
    },
    _findYExtrema$0() {
      var p20, t3, wP10, quadRoots, _this = this,
        t1 = _this.p2y,
        t2 = _this.p0y;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      p20 = t1 - t2;
      t1 = _this.p1y;
      if (typeof t1 !== "number")
        return t1.$sub();
      t3 = _this.fW;
      if (typeof t3 !== "number")
        return t3.$mul();
      wP10 = t3 * (t1 - t2);
      quadRoots = A.QuadRoots$();
      if (quadRoots.findRoots$3(t3 * p20 - p20, p20 - 2 * wP10, wP10) === 1)
        return quadRoots.root0;
      return null;
    },
    _chopAt$3$cleanupMiddle(t, dst, cleanupMiddle) {
      var tx0, ty0, t1, t2, tx1, ty1, tx2, ty2, dx0, dx2, dy0, dy2, dz0, dz2, dz1, root, chopPointX, chopPointY, cp0y, cp1y, conic0, conic1, _this = this;
      B._asDouble(t);
      type$.List_Conic._as(dst);
      B._asBool(cleanupMiddle);
      tx0 = _this.p0x;
      ty0 = _this.p0y;
      t1 = _this.p1x;
      t2 = _this.fW;
      if (typeof t1 !== "number")
        return t1.$mul();
      if (typeof t2 !== "number")
        return B.iae(t2);
      tx1 = t1 * t2;
      t1 = _this.p1y;
      if (typeof t1 !== "number")
        return t1.$mul();
      ty1 = t1 * t2;
      tx2 = _this.p2x;
      ty2 = _this.p2y;
      dx0 = tx0 + (tx1 - tx0) * t;
      dx2 = tx1 + (tx2 - tx1) * t;
      dy0 = ty0 + (ty1 - ty0) * t;
      dy2 = ty1 + (ty2 - ty1) * t;
      dz0 = 1 + (t2 - 1) * t;
      dz2 = t2 + (1 - t2) * t;
      dz1 = dz0 + (dz2 - dz0) * t;
      root = A.sqrt(dz1);
      if (B.boolConversionCheck(A.SPath_nearlyEqual(root, 0)))
        return false;
      if (B.boolConversionCheck(A.SPath_nearlyEqual(dz0, 0)) || B.boolConversionCheck(A.SPath_nearlyEqual(dz1, 0)) || B.boolConversionCheck(A.SPath_nearlyEqual(dz2, 0)))
        return false;
      chopPointX = (dx0 + (dx2 - dx0) * t) / dz1;
      chopPointY = (dy0 + (dy2 - dy0) * t) / dz1;
      cp0y = dy0 / dz0;
      cp1y = dy2 / dz2;
      if (cleanupMiddle) {
        cp1y = chopPointY;
        cp0y = cp1y;
      }
      conic0 = A.Conic$(tx0, ty0, dx0 / dz0, cp0y, chopPointX, chopPointY, dz0 / root);
      conic1 = A.Conic$(chopPointX, chopPointY, dx2 / dz2, cp1y, tx2, ty2, dz2 / root);
      t1 = J.getInterceptor$ax(dst);
      t1.add$1(dst, conic0);
      t1.add$1(dst, conic1);
      return true;
    },
    _computeSubdivisionCount$1(tolerance) {
      var t1, a, k, t2, t3, x, y, error, pow2, _this = this;
      B._asDouble(tolerance);
      if (tolerance < 0)
        return 0;
      t1 = _this.fW;
      if (typeof t1 !== "number")
        return t1.$sub();
      a = t1 - 1;
      k = a / (4 * (2 + a));
      t1 = _this.p0x;
      t2 = _this.p1x;
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (typeof t1 !== "number")
        return t1.$sub();
      t3 = _this.p2x;
      if (typeof t3 !== "number")
        return B.iae(t3);
      x = k * (t1 - 2 * t2 + t3);
      t3 = _this.p0y;
      t2 = _this.p1y;
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (typeof t3 !== "number")
        return t3.$sub();
      t1 = _this.p2y;
      if (typeof t1 !== "number")
        return B.iae(t1);
      y = k * (t3 - 2 * t2 + t1);
      error = A.sqrt(x * x + y * y);
      for (pow2 = 0; pow2 < 5; ++pow2) {
        if (error <= tolerance)
          break;
        error *= 0.25;
      }
      return pow2;
    },
    evalTangentAt$1(t) {
      var t1, t2, t3, t4, p20x, p20y, t5, cx, cy, quadC, _this = this;
      B._asDouble(t);
      if (!(t === 0 && B.boolConversionCheck(J.$eq$(_this.p0x, _this.p1x)) && B.boolConversionCheck(J.$eq$(_this.p0y, _this.p1y))))
        t1 = t === 1 && B.boolConversionCheck(J.$eq$(_this.p1x, _this.p2x)) && B.boolConversionCheck(J.$eq$(_this.p1y, _this.p2y));
      else
        t1 = true;
      if (t1) {
        t1 = _this.p2x;
        t2 = _this.p0x;
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t3 = _this.p2y;
        t4 = _this.p0y;
        if (typeof t3 !== "number")
          return t3.$sub();
        if (typeof t4 !== "number")
          return B.iae(t4);
        return A.Offset$(t1 - t2, t3 - t4);
      }
      t1 = _this.p2x;
      t2 = _this.p0x;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      p20x = t1 - t2;
      t1 = _this.p2y;
      t3 = _this.p0y;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t3 !== "number")
        return B.iae(t3);
      p20y = t1 - t3;
      t1 = _this.p1x;
      if (typeof t1 !== "number")
        return t1.$sub();
      t4 = _this.p1y;
      if (typeof t4 !== "number")
        return t4.$sub();
      t5 = _this.fW;
      if (typeof t5 !== "number")
        return t5.$mul();
      cx = t5 * (t1 - t2);
      cy = t5 * (t4 - t3);
      quadC = A.SkQuadCoefficients$(t5 * p20x - p20x, t5 * p20y - p20y, p20x - cx - cx, p20y - cy - cy, cx, cy);
      return A.Offset$(quadC.evalX$1(t), quadC.evalY$1(t));
    }
  };
  A.QuadBounds.prototype = {
    calculateBounds$2(points, pointIndex) {
      var pointIndex0, t1, x1, y1, cpX, cpY, x2, y2, denom, t10, tprime, t2, t3, extremaX, extremaY, tprime2, t4, extrema2X, extrema2Y, _this = this;
      type$.Float32List._as(points);
      B._asInt(pointIndex);
      pointIndex0 = pointIndex + 1;
      t1 = points.length;
      if (!(pointIndex >= 0 && pointIndex < t1))
        return B.ioore(points, pointIndex);
      x1 = points[pointIndex];
      pointIndex = pointIndex0 + 1;
      if (!(pointIndex0 >= 0 && pointIndex0 < t1))
        return B.ioore(points, pointIndex0);
      y1 = points[pointIndex0];
      pointIndex0 = pointIndex + 1;
      if (!(pointIndex >= 0 && pointIndex < t1))
        return B.ioore(points, pointIndex);
      cpX = points[pointIndex];
      pointIndex = pointIndex0 + 1;
      if (!(pointIndex0 >= 0 && pointIndex0 < t1))
        return B.ioore(points, pointIndex0);
      cpY = points[pointIndex0];
      pointIndex0 = pointIndex + 1;
      if (!(pointIndex >= 0 && pointIndex < t1))
        return B.ioore(points, pointIndex);
      x2 = points[pointIndex];
      if (!(pointIndex0 >= 0 && pointIndex0 < t1))
        return B.ioore(points, pointIndex0);
      y2 = points[pointIndex0];
      t1 = type$.double;
      _this.set$minX(A.min(x1, x2, t1));
      _this.set$minY(A.min(y1, y2, t1));
      _this.set$maxX(A.max(x1, x2, t1));
      _this.set$maxY(A.max(y1, y2, t1));
      denom = x1 - 2 * cpX + x2;
      if (Math.abs(denom) > 0.000244140625) {
        t10 = (x1 - cpX) / denom;
        if (t10 >= 0 && t10 <= 1) {
          tprime = 1 - t10;
          t2 = tprime * tprime;
          t3 = 2 * t10 * tprime;
          t10 *= t10;
          extremaX = t2 * x1 + t3 * cpX + t10 * x2;
          extremaY = t2 * y1 + t3 * cpY + t10 * y2;
          _this.set$minX(A.min(_this.minX, extremaX, t1));
          _this.set$maxX(A.max(_this.maxX, extremaX, t1));
          _this.set$minY(A.min(_this.minY, extremaY, t1));
          _this.set$maxY(A.max(_this.maxY, extremaY, t1));
        }
      }
      denom = y1 - 2 * cpY + y2;
      if (Math.abs(denom) > 0.000244140625) {
        t2 = (y1 - cpY) / denom;
        if (t2 >= 0 && t2 <= 1) {
          tprime2 = 1 - t2;
          t3 = tprime2 * tprime2;
          t4 = 2 * t2 * tprime2;
          t2 *= t2;
          extrema2X = t3 * x1 + t4 * cpX + t2 * x2;
          extrema2Y = t3 * y1 + t4 * cpY + t2 * y2;
          _this.set$minX(A.min(_this.minX, extrema2X, t1));
          _this.set$maxX(A.max(_this.maxX, extrema2X, t1));
          _this.set$minY(A.min(_this.minY, extrema2Y, t1));
          _this.set$maxY(A.max(_this.maxY, extrema2Y, t1));
        }
      }
    },
    set$minX(minX) {
      this.minX = B._asDouble(minX);
    },
    set$minY(minY) {
      this.minY = B._asDouble(minY);
    },
    set$maxX(maxX) {
      this.maxX = B._asDouble(maxX);
    },
    set$maxY(maxY) {
      this.maxY = B._asDouble(maxY);
    }
  };
  A.ConicBounds.prototype = {
    calculateBounds$3(points, w, pointIndex) {
      var pointIndex0, t1, x1, y1, cpX, cpY, x2, y2, roots, p20x, wP10x, t2, denom, extremaX, extremaY, p20y, wP10y, extrema2X, extrema2Y, _this = this;
      type$.Float32List._as(points);
      B._asDouble(w);
      B._asInt(pointIndex);
      pointIndex0 = pointIndex + 1;
      t1 = points.length;
      if (!(pointIndex >= 0 && pointIndex < t1))
        return B.ioore(points, pointIndex);
      x1 = points[pointIndex];
      pointIndex = pointIndex0 + 1;
      if (!(pointIndex0 >= 0 && pointIndex0 < t1))
        return B.ioore(points, pointIndex0);
      y1 = points[pointIndex0];
      pointIndex0 = pointIndex + 1;
      if (!(pointIndex >= 0 && pointIndex < t1))
        return B.ioore(points, pointIndex);
      cpX = points[pointIndex];
      pointIndex = pointIndex0 + 1;
      if (!(pointIndex0 >= 0 && pointIndex0 < t1))
        return B.ioore(points, pointIndex0);
      cpY = points[pointIndex0];
      pointIndex0 = pointIndex + 1;
      if (!(pointIndex >= 0 && pointIndex < t1))
        return B.ioore(points, pointIndex);
      x2 = points[pointIndex];
      if (!(pointIndex0 >= 0 && pointIndex0 < t1))
        return B.ioore(points, pointIndex0);
      y2 = points[pointIndex0];
      t1 = type$.double;
      _this.set$minX(A.min(x1, x2, t1));
      _this.set$minY(A.min(y1, y2, t1));
      _this.set$maxX(A.max(x1, x2, t1));
      _this.set$maxY(A.max(y1, y2, t1));
      roots = A.QuadRoots$();
      p20x = x2 - x1;
      wP10x = w * (cpX - x1);
      if (roots.findRoots$3(w * p20x - p20x, p20x - 2 * wP10x, wP10x) !== 0) {
        t2 = roots.root0;
        t2.toString;
        if (t2 >= 0 && t2 <= 1) {
          denom = A.Conic_evalDenominator(w, t2);
          extremaX = A.Conic_evalNumerator(x1, cpX, x2, w, t2) / denom;
          extremaY = A.Conic_evalNumerator(y1, cpY, y2, w, t2) / denom;
          _this.set$minX(A.min(_this.minX, extremaX, t1));
          _this.set$maxX(A.max(_this.maxX, extremaX, t1));
          _this.set$minY(A.min(_this.minY, extremaY, t1));
          _this.set$maxY(A.max(_this.maxY, extremaY, t1));
        }
      }
      p20y = y2 - y1;
      wP10y = w * (cpY - y1);
      if (roots.findRoots$3(w * p20y - p20y, p20y - 2 * wP10y, wP10y) !== 0) {
        t2 = roots.root0;
        t2.toString;
        if (t2 >= 0 && t2 <= 1) {
          denom = A.Conic_evalDenominator(w, t2);
          extrema2X = A.Conic_evalNumerator(x1, cpX, x2, w, t2) / denom;
          extrema2Y = A.Conic_evalNumerator(y1, cpY, y2, w, t2) / denom;
          _this.set$minX(A.min(_this.minX, extrema2X, t1));
          _this.set$maxX(A.max(_this.maxX, extrema2X, t1));
          _this.set$minY(A.min(_this.minY, extrema2Y, t1));
          _this.set$maxY(A.max(_this.maxY, extrema2Y, t1));
        }
      }
    },
    set$minX(minX) {
      this.minX = B._asDouble(minX);
    },
    set$minY(minY) {
      this.minY = B._asDouble(minY);
    },
    set$maxX(maxX) {
      this.maxX = B._asDouble(maxX);
    },
    set$maxY(maxY) {
      this.maxY = B._asDouble(maxY);
    }
  };
  A._ConicPair.prototype = {};
  A.CubicBounds.prototype = {
    calculateBounds$2(points, pointIndex) {
      var pointIndex0, t1, startX, startY, cpX1, cpY1, cpX2, cpY2, endX, endY, t2, a, b, s, t3, t, tprime, extremaX, t4, extremaY, tprime2, _this = this;
      type$.Float32List._as(points);
      B._asInt(pointIndex);
      pointIndex0 = pointIndex + 1;
      t1 = points.length;
      if (!(pointIndex >= 0 && pointIndex < t1))
        return B.ioore(points, pointIndex);
      startX = points[pointIndex];
      pointIndex = pointIndex0 + 1;
      if (!(pointIndex0 >= 0 && pointIndex0 < t1))
        return B.ioore(points, pointIndex0);
      startY = points[pointIndex0];
      pointIndex0 = pointIndex + 1;
      if (!(pointIndex >= 0 && pointIndex < t1))
        return B.ioore(points, pointIndex);
      cpX1 = points[pointIndex];
      pointIndex = pointIndex0 + 1;
      if (!(pointIndex0 >= 0 && pointIndex0 < t1))
        return B.ioore(points, pointIndex0);
      cpY1 = points[pointIndex0];
      pointIndex0 = pointIndex + 1;
      if (!(pointIndex >= 0 && pointIndex < t1))
        return B.ioore(points, pointIndex);
      cpX2 = points[pointIndex];
      pointIndex = pointIndex0 + 1;
      if (!(pointIndex0 >= 0 && pointIndex0 < t1))
        return B.ioore(points, pointIndex0);
      cpY2 = points[pointIndex0];
      pointIndex0 = pointIndex + 1;
      if (!(pointIndex >= 0 && pointIndex < t1))
        return B.ioore(points, pointIndex);
      endX = points[pointIndex];
      if (!(pointIndex0 >= 0 && pointIndex0 < t1))
        return B.ioore(points, pointIndex0);
      endY = points[pointIndex0];
      t1 = type$.double;
      _this.set$minX(A.min(startX, endX, t1));
      _this.set$minY(A.min(startY, endY, t1));
      _this.set$maxX(A.max(startX, endX, t1));
      _this.set$maxY(A.max(startY, endY, t1));
      if (!(startX < cpX1 && cpX1 < cpX2 && cpX2 < endX))
        t2 = startX > cpX1 && cpX1 > cpX2 && cpX2 > endX;
      else
        t2 = true;
      if (!t2) {
        t2 = -startX;
        a = t2 + 3 * (cpX1 - cpX2) + endX;
        b = 2 * (startX - 2 * cpX1 + cpX2);
        s = b * b - 4 * a * (t2 + cpX1);
        if (s >= 0 && Math.abs(a) > 0.000244140625) {
          t2 = -b;
          t3 = 2 * a;
          if (s === 0) {
            t = t2 / t3;
            tprime = 1 - t;
            if (t >= 0 && t <= 1) {
              t2 = 3 * tprime;
              extremaX = tprime * tprime * tprime * startX + t2 * tprime * t * cpX1 + t2 * t * t * cpX2 + t * t * t * endX;
              _this.set$minX(A.min(extremaX, _this.minX, t1));
              _this.set$maxX(A.max(extremaX, _this.maxX, t1));
            }
          } else {
            s = A.sqrt(s);
            t = (t2 - s) / t3;
            tprime = 1 - t;
            if (t >= 0 && t <= 1) {
              t4 = 3 * tprime;
              extremaX = tprime * tprime * tprime * startX + t4 * tprime * t * cpX1 + t4 * t * t * cpX2 + t * t * t * endX;
              _this.set$minX(A.min(extremaX, _this.minX, t1));
              _this.set$maxX(A.max(extremaX, _this.maxX, t1));
            }
            t = (t2 + s) / t3;
            tprime = 1 - t;
            if (t >= 0 && t <= 1) {
              t2 = 3 * tprime;
              extremaX = tprime * tprime * tprime * startX + t2 * tprime * t * cpX1 + t2 * t * t * cpX2 + t * t * t * endX;
              _this.set$minX(A.min(extremaX, _this.minX, t1));
              _this.set$maxX(A.max(extremaX, _this.maxX, t1));
            }
          }
        }
      }
      if (!(startY < cpY1 && cpY1 < cpY2 && cpY2 < endY))
        t2 = startY > cpY1 && cpY1 > cpY2 && cpY2 > endY;
      else
        t2 = true;
      if (!t2) {
        t2 = -startY;
        a = t2 + 3 * (cpY1 - cpY2) + endY;
        b = 2 * (startY - 2 * cpY1 + cpY2);
        s = b * b - 4 * a * (t2 + cpY1);
        if (s >= 0 && Math.abs(a) > 0.000244140625) {
          t2 = -b;
          t3 = 2 * a;
          if (s === 0) {
            t = t2 / t3;
            tprime = 1 - t;
            if (t >= 0 && t <= 1) {
              t2 = 3 * tprime;
              extremaY = tprime * tprime * tprime * startY + t2 * tprime * t * cpY1 + t2 * t * t * cpY2 + t * t * t * endY;
              _this.set$minY(A.min(extremaY, _this.minY, t1));
              _this.set$maxY(A.max(extremaY, _this.maxY, t1));
            }
          } else {
            s = A.sqrt(s);
            t = (t2 - s) / t3;
            tprime = 1 - t;
            if (t >= 0 && t <= 1) {
              t4 = 3 * tprime;
              extremaY = tprime * tprime * tprime * startY + t4 * tprime * t * cpY1 + t4 * t * t * cpY2 + t * t * t * endY;
              _this.set$minY(A.min(extremaY, _this.minY, t1));
              _this.set$maxY(A.max(extremaY, _this.maxY, t1));
            }
            t2 = (t2 + s) / t3;
            tprime2 = 1 - t2;
            if (t2 >= 0 && t2 <= 1) {
              t3 = 3 * tprime2;
              extremaY = tprime2 * tprime2 * tprime2 * startY + t3 * tprime2 * t2 * cpY1 + t3 * t2 * t2 * cpY2 + t2 * t2 * t2 * endY;
              _this.set$minY(A.min(extremaY, _this.minY, t1));
              _this.set$maxY(A.max(extremaY, _this.maxY, t1));
            }
          }
        }
      }
    },
    set$minX(minX) {
      this.minX = B._asDouble(minX);
    },
    set$maxX(maxX) {
      this.maxX = B._asDouble(maxX);
    },
    set$minY(minY) {
      this.minY = B._asDouble(minY);
    },
    set$maxY(maxY) {
      this.maxY = B._asDouble(maxY);
    }
  };
  A.SurfacePath.prototype = {
    SurfacePath$0() {
      this._resetFields$0();
    },
    SurfacePath$shiftedFrom$3(source, offsetX, offsetY) {
      this._copyFields$1(source);
    },
    SurfacePath$shallowCopy$1(source) {
      this._copyFields$1(source);
    },
    _resetFields$0() {
      this.fLastMoveToIndex = 0;
      this._fillType = C.PathFillType_0;
      this._resetAfterEdit$0();
    },
    _resetAfterEdit$0() {
      this._firstDirection = this._convexityType = -1;
    },
    _copyFields$1(source) {
      var _this = this;
      type$.SurfacePath._as(source);
      _this.set$_fillType(source._fillType);
      _this.set$fLastMoveToIndex(source.fLastMoveToIndex);
      _this.set$_convexityType(source._convexityType);
      _this.set$_firstDirection(source._firstDirection);
    },
    get$fillType() {
      return this._fillType;
    },
    set$fillType(value) {
      this._fillType = type$.PathFillType._as(value);
    },
    _debugValidate$0() {
    },
    moveTo$2(x, y) {
      var pointIndex, _this = this;
      B._asDouble(x);
      B._asDouble(y);
      pointIndex = _this.pathRef.growForVerb$2(0, 0);
      _this.fLastMoveToIndex = pointIndex + 1;
      _this.pathRef.setPoint$3(pointIndex, x, y);
      _this._resetAfterEdit$0();
    },
    _injectMoveToIfNeeded$0() {
      var x, y, pointIndex, _this = this,
        t1 = _this.fLastMoveToIndex;
      if (typeof t1 !== "number")
        return t1.$le();
      if (t1 <= 0) {
        if (B.boolConversionCheck(J.$eq$(_this.pathRef.countPoints$0(), 0))) {
          x = 0;
          y = 0;
        } else {
          t1 = J.$negate$in(_this.fLastMoveToIndex);
          if (typeof t1 !== "number")
            return t1.$sub();
          pointIndex = 2 * (t1 - 1);
          x = J.$index$asx(_this.pathRef.get$points(), pointIndex);
          y = J.$index$asx(_this.pathRef.get$points(), pointIndex + 1);
        }
        _this.moveTo$2(x, y);
      }
    },
    lineTo$2(x, y) {
      var t1, pointIndex, _this = this;
      B._asDouble(x);
      B._asDouble(y);
      t1 = _this.fLastMoveToIndex;
      if (typeof t1 !== "number")
        return t1.$le();
      if (t1 <= 0)
        _this._injectMoveToIfNeeded$0();
      pointIndex = _this.pathRef.growForVerb$2(1, 0);
      _this.pathRef.setPoint$3(pointIndex, x, y);
      _this._resetAfterEdit$0();
    },
    conicTo$5(x1, y1, x2, y2, w) {
      var pointIndex, _this = this;
      B._asDouble(x1);
      B._asDouble(y1);
      B._asDouble(x2);
      B._asDouble(y2);
      B._asDouble(w);
      _this._injectMoveToIfNeeded$0();
      pointIndex = _this.pathRef.growForVerb$2(3, w);
      _this.pathRef.setPoint$3(pointIndex, x1, y1);
      _this.pathRef.setPoint$3(pointIndex + 1, x2, y2);
      _this._resetAfterEdit$0();
    },
    close$0() {
      var verbCount, t1, _this = this;
      _this._debugValidate$0();
      verbCount = _this.pathRef.countVerbs$0();
      if (verbCount !== 0 && !B.boolConversionCheck(J.$eq$(_this.pathRef.atVerb$1(verbCount - 1), 5)))
        _this.pathRef.growForVerb$2(5, 0);
      t1 = _this.fLastMoveToIndex;
      if (typeof t1 !== "number")
        return t1.$ge();
      if (t1 >= 0)
        _this.set$fLastMoveToIndex(-t1);
      _this._resetAfterEdit$0();
    },
    addRect$1(rect) {
      this.addRectWithDirection$3(type$.Rect._as(rect), 0, 0);
    },
    _hasOnlyMoveTos$0() {
      var i,
        verbCount = this.pathRef.countVerbs$0();
      for (i = 0; i < verbCount; ++i)
        switch (this.pathRef.atVerb$1(i)) {
          case 1:
          case 2:
          case 3:
          case 4:
            return false;
        }
      return true;
    },
    addRectWithDirection$3(rect, direction, startIndex) {
      var isRect, finalDirection, pointIndex0, pointIndex1, pointIndex2, pointIndex3, t1, t2, t3, t4, t5, _this = this;
      type$.Rect._as(rect);
      B._asInt(direction);
      B._asInt(startIndex);
      isRect = _this._hasOnlyMoveTos$0();
      finalDirection = B.boolConversionCheck(_this._hasOnlyMoveTos$0()) ? direction : -1;
      pointIndex0 = _this.pathRef.growForVerb$2(0, 0);
      _this.fLastMoveToIndex = pointIndex0 + 1;
      pointIndex1 = _this.pathRef.growForVerb$2(1, 0);
      pointIndex2 = _this.pathRef.growForVerb$2(1, 0);
      pointIndex3 = _this.pathRef.growForVerb$2(1, 0);
      _this.pathRef.growForVerb$2(5, 0);
      t1 = _this.pathRef;
      t2 = rect.left;
      t3 = rect.top;
      t4 = rect.right;
      t5 = rect.bottom;
      if (direction === 0) {
        t1.setPoint$3(pointIndex0, t2, t3);
        _this.pathRef.setPoint$3(pointIndex1, t4, t3);
        _this.pathRef.setPoint$3(pointIndex2, t4, t5);
        _this.pathRef.setPoint$3(pointIndex3, t2, t5);
      } else {
        t1.setPoint$3(pointIndex3, t2, t5);
        _this.pathRef.setPoint$3(pointIndex2, t4, t5);
        _this.pathRef.setPoint$3(pointIndex1, t4, t3);
        _this.pathRef.setPoint$3(pointIndex0, t2, t3);
      }
      _this.pathRef.setIsRect$3(isRect, direction === 1, 0);
      _this._resetAfterEdit$0();
      _this._firstDirection = finalDirection;
    },
    addOval$1(oval) {
      this._addOval$3(type$.Rect._as(oval), 0, 0);
    },
    _addOval$3(oval, direction, startIndex) {
      var isOval, left, right, centerX, $top, bottom, centerY, _this = this;
      type$.Rect._as(oval);
      B._asInt(direction);
      B._asInt(startIndex);
      isOval = _this._hasOnlyMoveTos$0();
      left = oval.left;
      right = oval.right;
      centerX = (left + right) / 2;
      $top = oval.top;
      bottom = oval.bottom;
      centerY = ($top + bottom) / 2;
      if (direction === 0) {
        _this.moveTo$2(right, centerY);
        _this.conicTo$5(right, bottom, centerX, bottom, 0.707106781);
        _this.conicTo$5(left, bottom, left, centerY, 0.707106781);
        _this.conicTo$5(left, $top, centerX, $top, 0.707106781);
        _this.conicTo$5(right, $top, right, centerY, 0.707106781);
      } else {
        _this.moveTo$2(right, centerY);
        _this.conicTo$5(right, $top, centerX, $top, 0.707106781);
        _this.conicTo$5(left, $top, left, centerY, 0.707106781);
        _this.conicTo$5(left, bottom, centerX, bottom, 0.707106781);
        _this.conicTo$5(right, bottom, right, centerY, 0.707106781);
      }
      _this.close$0();
      _this.pathRef.setIsOval$3(isOval, direction === 1, 0);
      _this._resetAfterEdit$0();
      if (isOval)
        _this._firstDirection = direction;
      else
        _this._firstDirection = -1;
    },
    addRRect$1(rrect) {
      this._addRRect$3(type$.RRect._as(rrect), 0, 6);
    },
    _addRRect$3(rrect, direction, startIndex) {
      var isRRect, bounds, left, right, $top, bottom, width, height, t1, tlRadiusX, trRadiusX, blRadiusX, brRadiusX, tlRadiusY, trRadiusY, blRadiusY, brRadiusY, scale, _this = this;
      type$.RRect._as(rrect);
      B._asInt(direction);
      B._asInt(startIndex);
      isRRect = _this._hasOnlyMoveTos$0();
      bounds = rrect.get$outerRect();
      if (B.boolConversionCheck(rrect.get$isRect()) || B.boolConversionCheck(rrect.get$isEmpty(0)))
        _this.addRectWithDirection$3(bounds, direction, D.JSInt_methods._tdivFast$1(startIndex + 1, 2));
      else if (B.boolConversionCheck(A.isRRectOval(rrect)))
        _this._addOval$3(bounds, direction, D.JSInt_methods._tdivFast$1(startIndex, 2));
      else {
        left = bounds.left;
        right = bounds.right;
        $top = bounds.top;
        bottom = bounds.bottom;
        width = right - left;
        height = bottom - $top;
        t1 = type$.double;
        tlRadiusX = A.max(0, rrect.tlRadiusX, t1);
        trRadiusX = A.max(0, rrect.trRadiusX, t1);
        blRadiusX = A.max(0, rrect.blRadiusX, t1);
        brRadiusX = A.max(0, rrect.brRadiusX, t1);
        tlRadiusY = A.max(0, rrect.tlRadiusY, t1);
        trRadiusY = A.max(0, rrect.trRadiusY, t1);
        blRadiusY = A.max(0, rrect.blRadiusY, t1);
        brRadiusY = A.max(0, rrect.brRadiusY, t1);
        scale = A._computeMinScale(blRadiusY, brRadiusY, height, A._computeMinScale(tlRadiusY, trRadiusY, height, A._computeMinScale(blRadiusX, brRadiusX, width, A._computeMinScale(tlRadiusX, trRadiusX, width, 1))));
        t1 = bottom - scale * blRadiusY;
        _this.moveTo$2(left, t1);
        _this.lineTo$2(left, $top + scale * tlRadiusY);
        _this.conicTo$5(left, $top, left + scale * tlRadiusX, $top, 0.707106781);
        _this.lineTo$2(right - scale * trRadiusX, $top);
        _this.conicTo$5(right, $top, right, $top + scale * trRadiusY, 0.707106781);
        _this.lineTo$2(right, bottom - scale * brRadiusY);
        _this.conicTo$5(right, bottom, right - scale * brRadiusX, bottom, 0.707106781);
        _this.lineTo$2(left + scale * blRadiusX, bottom);
        _this.conicTo$5(left, bottom, left, t1, 0.707106781);
        _this.close$0();
        _this._firstDirection = isRRect ? direction : -1;
        _this.pathRef.setIsRRect$4(isRRect, direction === 1, D.JSInt_methods.$mod(startIndex, 8), rrect);
      }
      _this._debugValidate$0();
    },
    contains$1(_, point) {
      var bounds, x, y, t1, t2, windings, evenOddFill, w, onCurveCount, iter, buffer, tangents, done, oldCount, last, tangent, index, test, t3, t4, t5, offset, _this = this;
      type$.Offset._as(point);
      if (B.boolConversionCheck(J.get$isEmpty$asx(_this.pathRef)))
        return false;
      bounds = _this.getBounds$0();
      x = point.get$dx();
      y = point.get$dy();
      t1 = bounds.left;
      if (typeof t1 !== "number")
        return B.iae(t1);
      t2 = true;
      if (!(x < t1)) {
        t1 = bounds.top;
        if (typeof t1 !== "number")
          return B.iae(t1);
        if (!(y < t1)) {
          t1 = bounds.right;
          if (typeof t1 !== "number")
            return B.iae(t1);
          if (!(x > t1)) {
            t1 = bounds.bottom;
            if (typeof t1 !== "number")
              return B.iae(t1);
            t1 = y > t1;
          } else
            t1 = t2;
        } else
          t1 = t2;
      } else
        t1 = t2;
      if (t1)
        return false;
      windings = A.PathWinding$(_this.pathRef, point.get$dx(), point.get$dy());
      evenOddFill = C.PathFillType_1 === _this._fillType;
      w = windings.get$w();
      if ((evenOddFill ? w & 1 : w) !== 0)
        return true;
      onCurveCount = windings.get$onCurveCount();
      if (onCurveCount <= 1)
        return onCurveCount !== 0;
      t1 = (onCurveCount & 1) === 0;
      if (!t1 || evenOddFill)
        return !t1;
      iter = A.PathIterator$(_this.pathRef, true);
      buffer = A.NativeFloat32List_NativeFloat32List(18);
      tangents = B._setArrayType([], type$.JSArray_Offset);
      done = false;
      do {
        oldCount = tangents.length;
        switch (iter.next$1(buffer)) {
          case 0:
          case 5:
            break;
          case 1:
            A.tangentLine(buffer, x, y, tangents);
            break;
          case 2:
            A.tangentQuad(buffer, x, y, tangents);
            break;
          case 3:
            A.tangentConic(buffer, x, y, iter.get$conicWeight(), tangents);
            break;
          case 4:
            A.tangentCubic(buffer, x, y, tangents);
            break;
          case 6:
            done = true;
            break;
        }
        t1 = tangents.length;
        if (t1 > oldCount) {
          last = t1 - 1;
          tangent = tangents[last];
          if (B.boolConversionCheck(A.SPath_nearlyEqual(A.lengthSquaredOffset(tangent), 0)))
            D.JSArray_methods.removeAt$1(tangents, last);
          else
            for (index = 0; index < last; ++index) {
              if (!(index < tangents.length))
                return B.ioore(tangents, index);
              test = tangents[index];
              t1 = test.get$dx();
              t2 = tangent.get$dy();
              if (typeof t1 !== "number")
                return t1.$mul();
              if (typeof t2 !== "number")
                return B.iae(t2);
              t3 = test.get$dy();
              t4 = tangent.get$dx();
              if (typeof t3 !== "number")
                return t3.$mul();
              if (typeof t4 !== "number")
                return B.iae(t4);
              t5 = false;
              if (B.boolConversionCheck(A.SPath_nearlyEqual(t1 * t2 - t3 * t4, 0))) {
                t1 = tangent.get$dx();
                t2 = test.get$dx();
                if (typeof t1 !== "number")
                  return t1.$mul();
                if (typeof t2 !== "number")
                  return B.iae(t2);
                t2 = A.SPath_scalarSignedAsInt(t1 * t2);
                if (typeof t2 !== "number")
                  return t2.$le();
                if (t2 <= 0) {
                  t1 = tangent.get$dy();
                  t2 = test.get$dy();
                  if (typeof t1 !== "number")
                    return t1.$mul();
                  if (typeof t2 !== "number")
                    return B.iae(t2);
                  t2 = A.SPath_scalarSignedAsInt(t1 * t2);
                  if (typeof t2 !== "number")
                    return t2.$le();
                  t2 = t2 <= 0;
                  t1 = t2;
                } else
                  t1 = t5;
              } else
                t1 = t5;
              if (t1) {
                offset = D.JSArray_methods.removeAt$1(tangents, last);
                if (index !== tangents.length)
                  D.JSArray_methods.$indexSet(tangents, index, offset);
                break;
              }
            }
        }
      } while (!done);
      return D.JSArray_methods.get$isNotEmpty(tangents);
    },
    shift$1(offset) {
      type$.Offset._as(offset);
      return A.SurfacePath$shiftedFrom(this, offset.get$dx(), offset.get$dy());
    },
    getBounds$0() {
      var t1, iter, points, t2, ltrbInitialized, left, $top, right, bottom, minX, maxX, minY, maxY, cubicBounds, quadBounds, conicBounds, verb, pIndex, t3, newBounds, _this = this;
      if (!B.boolConversionCheck(J.$eq$(_this.pathRef.get$isRRect(), -1)) || !B.boolConversionCheck(J.$eq$(_this.pathRef.get$isOval(), -1)))
        return _this.pathRef.getBounds$0();
      t1 = _this.pathRef;
      if (!B.boolConversionCheck(t1.fBoundsIsDirty) && t1.cachedBounds != null) {
        t1 = t1.cachedBounds;
        t1.toString;
        return t1;
      }
      iter = A.PathRefIterator$(t1);
      points = t1.get$points();
      for (t1 = type$.double, t2 = points.length, ltrbInitialized = false, left = 0, $top = 0, right = 0, bottom = 0, minX = 0, maxX = 0, minY = 0, maxY = 0, cubicBounds = null, quadBounds = null, conicBounds = null; verb = iter.nextIndex$0(), verb !== 6;) {
        pIndex = iter.iterIndex;
        switch (verb) {
          case 0:
            if (pIndex >>> 0 !== pIndex || pIndex >= t2)
              return B.ioore(points, pIndex);
            maxX = points[pIndex];
            t3 = pIndex + 1;
            if (!(t3 < t2))
              return B.ioore(points, t3);
            maxY = points[t3];
            minY = maxY;
            minX = maxX;
            break;
          case 1:
            t3 = pIndex + 2;
            if (!(t3 >= 0 && t3 < t2))
              return B.ioore(points, t3);
            maxX = points[t3];
            t3 = pIndex + 3;
            if (!(t3 >= 0 && t3 < t2))
              return B.ioore(points, t3);
            maxY = points[t3];
            minY = maxY;
            minX = maxX;
            break;
          case 2:
            if (quadBounds == null)
              quadBounds = A.QuadBounds$();
            quadBounds.calculateBounds$2(points, pIndex);
            minX = quadBounds.minX;
            minY = quadBounds.minY;
            maxX = quadBounds.maxX;
            maxY = quadBounds.maxY;
            break;
          case 3:
            if (conicBounds == null)
              conicBounds = A.ConicBounds$();
            conicBounds.calculateBounds$3(points, iter.get$conicWeight(), pIndex);
            minX = conicBounds.minX;
            minY = conicBounds.minY;
            maxX = conicBounds.maxX;
            maxY = conicBounds.maxY;
            break;
          case 4:
            if (cubicBounds == null)
              cubicBounds = A.CubicBounds$();
            cubicBounds.calculateBounds$2(points, pIndex);
            minX = cubicBounds.minX;
            minY = cubicBounds.minY;
            maxX = cubicBounds.maxX;
            maxY = cubicBounds.maxY;
            break;
        }
        if (!ltrbInitialized) {
          bottom = maxY;
          right = maxX;
          $top = minY;
          left = minX;
          ltrbInitialized = true;
        } else {
          left = A.min(left, minX, t1);
          right = A.max(right, maxX, t1);
          $top = A.min($top, minY, t1);
          bottom = A.max(bottom, maxY, t1);
        }
      }
      newBounds = ltrbInitialized ? A.Rect$fromLTRB(left, $top, right, bottom) : C.Rect_0_0_0_0;
      _this.pathRef.getBounds$0();
      return _this.pathRef.cachedBounds = newBounds;
    },
    toRoundedRect$0() {
      return this.pathRef.getRRect$0();
    },
    toRect$0() {
      return this.pathRef.getRect$0();
    },
    toStraightLine$0() {
      return this.pathRef.getStraightLine$0();
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    },
    set$_fillType(_fillType) {
      this._fillType = type$.PathFillType._as(_fillType);
    },
    set$fLastMoveToIndex(fLastMoveToIndex) {
      this.fLastMoveToIndex = B._asInt(fLastMoveToIndex);
    },
    set$_convexityType(_convexityType) {
      this._convexityType = B._asInt(_convexityType);
    },
    set$_firstDirection(_firstDirection) {
      this._firstDirection = B._asInt(_firstDirection);
    },
    $isPath: 1
  };
  A.PathIterator.prototype = {
    PathIterator$2(pathRef, forceClose) {
      var t1;
      this._pointIndex = 0;
      t1 = this.pathRef;
      if (!B.boolConversionCheck(J.get$isFinite$n(t1)))
        this.set$_verbIndex(t1.countVerbs$0());
    },
    get$conicWeightIndex() {
      return this._conicWeightIndex;
    },
    _autoClose$1(outPts) {
      var _this = this;
      type$.Float32List._as(outPts);
      if (!B.boolConversionCheck(J.$eq$(_this._lastPointX, _this._moveToX)) || !B.boolConversionCheck(J.$eq$(_this._lastPointY, _this._moveToY))) {
        if (B.boolConversionCheck(J.get$isNaN$n(_this._lastPointX)) || B.boolConversionCheck(J.get$isNaN$n(_this._lastPointY)) || B.boolConversionCheck(J.get$isNaN$n(_this._moveToX)) || B.boolConversionCheck(J.get$isNaN$n(_this._moveToY)))
          return 5;
        D.NativeFloat32List_methods.$indexSet(outPts, 0, _this._lastPointX);
        D.NativeFloat32List_methods.$indexSet(outPts, 1, _this._lastPointY);
        D.NativeFloat32List_methods.$indexSet(outPts, 2, _this._moveToX);
        D.NativeFloat32List_methods.$indexSet(outPts, 3, _this._moveToY);
        _this.set$_lastPointX(_this._moveToX);
        _this.set$_lastPointY(_this._moveToY);
        return 1;
      } else {
        D.NativeFloat32List_methods.$indexSet(outPts, 0, _this._moveToX);
        D.NativeFloat32List_methods.$indexSet(outPts, 1, _this._moveToY);
        return 5;
      }
    },
    _constructMoveTo$0() {
      var t1, t2, t3, _this = this;
      if (B.boolConversionCheck(J.$eq$(_this._segmentState, 1))) {
        _this._segmentState = 2;
        return A.Offset$(_this._moveToX, _this._moveToY);
      }
      t1 = _this.pathRef;
      t2 = t1.get$points();
      t3 = _this._pointIndex;
      if (typeof t3 !== "number")
        return t3.$sub();
      t3 = J.$index$asx(t2, t3 - 2);
      t1 = t1.get$points();
      t2 = _this._pointIndex;
      if (typeof t2 !== "number")
        return t2.$sub();
      return A.Offset$(t3, J.$index$asx(t1, t2 - 1));
    },
    next$1(outPts) {
      var t1, t2, verb, autoVerb, t3, offsetX, offsetY, start, _this = this;
      type$.Float32List._as(outPts);
      t1 = _this.pathRef;
      if (B.boolConversionCheck(J.$eq$(_this._verbIndex, t1.countVerbs$0()))) {
        if (B.boolConversionCheck(_this._needClose) && B.boolConversionCheck(J.$eq$(_this._segmentState, 2))) {
          if (1 === _this._autoClose$1(outPts))
            return 1;
          _this._needClose = false;
          return 5;
        }
        return 6;
      }
      t2 = _this._verbIndex;
      if (typeof t2 !== "number")
        return t2.$add();
      _this.set$_verbIndex(t2 + 1);
      verb = t1.atVerb$1(t2);
      switch (verb) {
        case 0:
          if (B.boolConversionCheck(_this._needClose)) {
            t1 = _this._verbIndex;
            if (typeof t1 !== "number")
              return t1.$sub();
            _this.set$_verbIndex(t1 - 1);
            autoVerb = _this._autoClose$1(outPts);
            if (autoVerb === 5)
              _this._needClose = false;
            return autoVerb;
          }
          if (B.boolConversionCheck(J.$eq$(_this._verbIndex, _this._verbCount)))
            return 6;
          t2 = t1.get$points();
          t3 = _this._pointIndex;
          if (typeof t3 !== "number")
            return t3.$add();
          _this.set$_pointIndex(t3 + 1);
          offsetX = J.$index$asx(t2, t3);
          t1 = t1.get$points();
          t3 = _this._pointIndex;
          if (typeof t3 !== "number")
            return t3.$add();
          _this.set$_pointIndex(t3 + 1);
          offsetY = J.$index$asx(t1, t3);
          _this._moveToX = offsetX;
          _this._moveToY = offsetY;
          t3 = outPts.length;
          if (0 >= t3)
            return B.ioore(outPts, 0);
          outPts[0] = offsetX;
          if (1 >= t3)
            return B.ioore(outPts, 1);
          outPts[1] = offsetY;
          _this._segmentState = 1;
          _this._lastPointX = offsetX;
          _this.set$_lastPointY(_this._moveToY);
          _this.set$_needClose(_this._forceClose);
          break;
        case 1:
          start = _this._constructMoveTo$0();
          t2 = t1.get$points();
          t3 = _this._pointIndex;
          if (typeof t3 !== "number")
            return t3.$add();
          _this.set$_pointIndex(t3 + 1);
          offsetX = J.$index$asx(t2, t3);
          t1 = t1.get$points();
          t3 = _this._pointIndex;
          if (typeof t3 !== "number")
            return t3.$add();
          _this.set$_pointIndex(t3 + 1);
          offsetY = J.$index$asx(t1, t3);
          D.NativeFloat32List_methods.$indexSet(outPts, 0, start.get$dx());
          D.NativeFloat32List_methods.$indexSet(outPts, 1, start.get$dy());
          t3 = outPts.length;
          if (2 >= t3)
            return B.ioore(outPts, 2);
          outPts[2] = offsetX;
          if (3 >= t3)
            return B.ioore(outPts, 3);
          outPts[3] = offsetY;
          _this._lastPointX = offsetX;
          _this._lastPointY = offsetY;
          break;
        case 3:
          t2 = _this._conicWeightIndex;
          if (typeof t2 !== "number")
            return t2.$add();
          _this.set$_conicWeightIndex(t2 + 1);
          start = _this._constructMoveTo$0();
          D.NativeFloat32List_methods.$indexSet(outPts, 0, start.get$dx());
          D.NativeFloat32List_methods.$indexSet(outPts, 1, start.get$dy());
          t2 = t1.get$points();
          t3 = _this._pointIndex;
          if (typeof t3 !== "number")
            return t3.$add();
          _this.set$_pointIndex(t3 + 1);
          D.NativeFloat32List_methods.$indexSet(outPts, 2, J.$index$asx(t2, t3));
          t3 = t1.get$points();
          t2 = _this._pointIndex;
          if (typeof t2 !== "number")
            return t2.$add();
          _this.set$_pointIndex(t2 + 1);
          D.NativeFloat32List_methods.$indexSet(outPts, 3, J.$index$asx(t3, t2));
          t2 = t1.get$points();
          t3 = _this._pointIndex;
          if (typeof t3 !== "number")
            return t3.$add();
          _this.set$_pointIndex(t3 + 1);
          t3 = J.$index$asx(t2, t3);
          D.NativeFloat32List_methods.$indexSet(outPts, 4, t3);
          _this.set$_lastPointX(t3);
          t1 = t1.get$points();
          t3 = _this._pointIndex;
          if (typeof t3 !== "number")
            return t3.$add();
          _this.set$_pointIndex(t3 + 1);
          t3 = J.$index$asx(t1, t3);
          D.NativeFloat32List_methods.$indexSet(outPts, 5, t3);
          _this.set$_lastPointY(t3);
          break;
        case 2:
          start = _this._constructMoveTo$0();
          D.NativeFloat32List_methods.$indexSet(outPts, 0, start.get$dx());
          D.NativeFloat32List_methods.$indexSet(outPts, 1, start.get$dy());
          t2 = t1.get$points();
          t3 = _this._pointIndex;
          if (typeof t3 !== "number")
            return t3.$add();
          _this.set$_pointIndex(t3 + 1);
          D.NativeFloat32List_methods.$indexSet(outPts, 2, J.$index$asx(t2, t3));
          t3 = t1.get$points();
          t2 = _this._pointIndex;
          if (typeof t2 !== "number")
            return t2.$add();
          _this.set$_pointIndex(t2 + 1);
          D.NativeFloat32List_methods.$indexSet(outPts, 3, J.$index$asx(t3, t2));
          t2 = t1.get$points();
          t3 = _this._pointIndex;
          if (typeof t3 !== "number")
            return t3.$add();
          _this.set$_pointIndex(t3 + 1);
          t3 = J.$index$asx(t2, t3);
          D.NativeFloat32List_methods.$indexSet(outPts, 4, t3);
          _this.set$_lastPointX(t3);
          t1 = t1.get$points();
          t3 = _this._pointIndex;
          if (typeof t3 !== "number")
            return t3.$add();
          _this.set$_pointIndex(t3 + 1);
          t3 = J.$index$asx(t1, t3);
          D.NativeFloat32List_methods.$indexSet(outPts, 5, t3);
          _this.set$_lastPointY(t3);
          break;
        case 4:
          start = _this._constructMoveTo$0();
          D.NativeFloat32List_methods.$indexSet(outPts, 0, start.get$dx());
          D.NativeFloat32List_methods.$indexSet(outPts, 1, start.get$dy());
          t2 = t1.get$points();
          t3 = _this._pointIndex;
          if (typeof t3 !== "number")
            return t3.$add();
          _this.set$_pointIndex(t3 + 1);
          D.NativeFloat32List_methods.$indexSet(outPts, 2, J.$index$asx(t2, t3));
          t3 = t1.get$points();
          t2 = _this._pointIndex;
          if (typeof t2 !== "number")
            return t2.$add();
          _this.set$_pointIndex(t2 + 1);
          D.NativeFloat32List_methods.$indexSet(outPts, 3, J.$index$asx(t3, t2));
          t2 = t1.get$points();
          t3 = _this._pointIndex;
          if (typeof t3 !== "number")
            return t3.$add();
          _this.set$_pointIndex(t3 + 1);
          D.NativeFloat32List_methods.$indexSet(outPts, 4, J.$index$asx(t2, t3));
          t3 = t1.get$points();
          t2 = _this._pointIndex;
          if (typeof t2 !== "number")
            return t2.$add();
          _this.set$_pointIndex(t2 + 1);
          D.NativeFloat32List_methods.$indexSet(outPts, 5, J.$index$asx(t3, t2));
          t2 = t1.get$points();
          t3 = _this._pointIndex;
          if (typeof t3 !== "number")
            return t3.$add();
          _this.set$_pointIndex(t3 + 1);
          t3 = J.$index$asx(t2, t3);
          D.NativeFloat32List_methods.$indexSet(outPts, 6, t3);
          _this.set$_lastPointX(t3);
          t1 = t1.get$points();
          t3 = _this._pointIndex;
          if (typeof t3 !== "number")
            return t3.$add();
          _this.set$_pointIndex(t3 + 1);
          t3 = J.$index$asx(t1, t3);
          D.NativeFloat32List_methods.$indexSet(outPts, 7, t3);
          _this.set$_lastPointY(t3);
          break;
        case 5:
          verb = _this._autoClose$1(outPts);
          if (verb === 1) {
            t1 = _this._verbIndex;
            if (typeof t1 !== "number")
              return t1.$sub();
            _this.set$_verbIndex(t1 - 1);
          } else {
            _this._needClose = false;
            _this._segmentState = 0;
          }
          _this.set$_lastPointX(_this._moveToX);
          _this.set$_lastPointY(_this._moveToY);
          break;
        case 6:
          break;
        default:
          throw B.wrapException(B.FormatException$("Unsupport Path verb " + B.S(verb), null, null));
      }
      return verb;
    },
    get$conicWeight() {
      return this.pathRef.atWeight$1(this._conicWeightIndex);
    },
    set$_needClose(_needClose) {
      this._needClose = B._asBool(_needClose);
    },
    set$_conicWeightIndex(_conicWeightIndex) {
      this._conicWeightIndex = B._asInt(_conicWeightIndex);
    },
    set$_lastPointX(_lastPointX) {
      this._lastPointX = B._asDouble(_lastPointX);
    },
    set$_lastPointY(_lastPointY) {
      this._lastPointY = B._asDouble(_lastPointY);
    },
    set$_verbIndex(_verbIndex) {
      this._verbIndex = B._asInt(_verbIndex);
    },
    set$_pointIndex(_pointIndex) {
      this._pointIndex = B._asInt(_pointIndex);
    }
  };
  A.PathRef.prototype = {
    PathRef$0() {
      this._fVerbsCapacity = this._fPointsCapacity = 8;
      this._resetFields$0();
    },
    PathRef$shallowCopy$1(ref) {
      var _this = this;
      _this.set$_fVerbsCapacity(ref._fVerbsCapacity);
      _this.set$_fVerbsLength(ref._fVerbsLength);
      _this.set$_fPointsCapacity(ref._fPointsCapacity);
      _this.set$_fPointsLength(ref._fPointsLength);
      _this.set$_conicWeightsCapacity(ref._conicWeightsCapacity);
      _this.set$_conicWeightsLength(ref._conicWeightsLength);
      _this.set$_conicWeights(ref._conicWeights);
      _this.set$fBoundsIsDirty(ref.fBoundsIsDirty);
      if (!B.boolConversionCheck(_this.fBoundsIsDirty)) {
        _this.set$fBounds(ref.fBounds);
        _this.set$cachedBounds(ref.cachedBounds);
        _this.set$fIsFinite(ref.fIsFinite);
      }
      _this.set$fSegmentMask(ref.fSegmentMask);
      _this.set$fIsOval(ref.fIsOval);
      _this.set$fIsRRect(ref.fIsRRect);
      _this.set$fIsRect(ref.fIsRect);
      _this.set$fRRectOrOvalIsCCW(ref.fRRectOrOvalIsCCW);
      _this.set$fRRectOrOvalStartIdx(ref.fRRectOrOvalStartIdx);
      _this.debugValidate$0();
    },
    PathRef$shiftedFrom$3(source, offsetX, offsetY) {
      var t1, t2, _this = this;
      _this.set$_conicWeightsCapacity(source._conicWeightsCapacity);
      _this.set$_conicWeightsLength(source._conicWeightsLength);
      if (source._conicWeights != null) {
        _this.set$_conicWeights(A.NativeFloat32List_NativeFloat32List(_this._conicWeightsCapacity));
        t1 = _this._conicWeights;
        t1.toString;
        t2 = source._conicWeights;
        t2.toString;
        J.setAll$2$ax(t1, 0, t2);
      }
      _this.set$_fVerbsCapacity(source._fVerbsCapacity);
      _this.set$_fVerbsLength(source._fVerbsLength);
      _this.set$_fPointsCapacity(source._fPointsCapacity);
      _this.set$_fPointsLength(source._fPointsLength);
      _this.set$fBoundsIsDirty(source.fBoundsIsDirty);
      if (!B.boolConversionCheck(_this.fBoundsIsDirty)) {
        _this.set$fBounds(source.fBounds.translate$2(offsetX, offsetY));
        t1 = source.cachedBounds;
        _this.set$cachedBounds(t1 == null ? null : t1.translate$2(offsetX, offsetY));
        _this.set$fIsFinite(source.fIsFinite);
      }
      _this.set$fSegmentMask(source.fSegmentMask);
      _this.set$fIsOval(source.fIsOval);
      _this.set$fIsRRect(source.fIsRRect);
      _this.set$fIsRect(source.fIsRect);
      _this.set$fRRectOrOvalIsCCW(source.fRRectOrOvalIsCCW);
      _this.set$fRRectOrOvalStartIdx(source.fRRectOrOvalStartIdx);
      _this.debugValidate$0();
    },
    _resetFields$0() {
      var _this = this;
      _this.fBoundsIsDirty = true;
      _this.fSegmentMask = 0;
      _this.fRRectOrOvalIsCCW = _this.fIsRect = _this.fIsRRect = _this.fIsOval = false;
      _this.fRRectOrOvalStartIdx = 172;
    },
    setPoint$3(pointIndex, x, y) {
      var index;
      B._asInt(pointIndex);
      B._asDouble(x);
      B._asDouble(y);
      index = pointIndex * 2;
      J.$indexSet$ax(this.fPoints, index, x);
      J.$indexSet$ax(this.fPoints, index + 1, y);
    },
    get$points() {
      return this.fPoints;
    },
    get$conicWeights() {
      return this._conicWeights;
    },
    countPoints$0() {
      return this._fPointsLength;
    },
    countVerbs$0() {
      return this._fVerbsLength;
    },
    countWeights$0() {
      return this._conicWeightsLength;
    },
    atVerb$1(index) {
      B._asInt(index);
      return J.$index$asx(this._fVerbs, index);
    },
    atPoint$1(index) {
      var t1 = B._asInt(index) * 2;
      return A.Offset$(J.$index$asx(this.fPoints, t1), J.$index$asx(this.fPoints, t1 + 1));
    },
    atWeight$1(index) {
      var t1;
      B._asInt(index);
      t1 = this._conicWeights;
      t1.toString;
      return J.$index$asx(t1, index);
    },
    get$isFinite(_) {
      if (B.boolConversionCheck(this.fBoundsIsDirty))
        this._computeBounds$0();
      return this.fIsFinite;
    },
    get$isOval() {
      return B.boolConversionCheck(this.fIsOval) ? this.fRRectOrOvalStartIdx : -1;
    },
    get$isRRect() {
      return B.boolConversionCheck(this.fIsRRect) ? this.fRRectOrOvalStartIdx : -1;
    },
    getRRect$0() {
      return B.boolConversionCheck(this.fIsRRect) ? this._getRRect$0() : null;
    },
    getRect$0() {
      var _this = this;
      if (B.boolConversionCheck(_this.fIsRect))
        return A.Rect$fromLTRB(_this.atPoint$1(0).get$dx(), _this.atPoint$1(0).get$dy(), _this.atPoint$1(1).get$dx(), _this.atPoint$1(2).get$dy());
      else
        return B.boolConversionCheck(J.$eq$(_this._fVerbsLength, 4)) ? _this._detectRect$0() : null;
    },
    getBounds$0() {
      if (B.boolConversionCheck(this.fBoundsIsDirty))
        this._computeBounds$0();
      var t1 = this.fBounds;
      t1.toString;
      return t1;
    },
    _detectRect$0() {
      var width, x2, y2, height, x3, y3, t1, _this = this, _null = null,
        x0 = _this.atPoint$1(0).get$dx(),
        y0 = _this.atPoint$1(0).get$dy(),
        x1 = _this.atPoint$1(1).get$dx(),
        y1 = _this.atPoint$1(1).get$dy();
      if (!B.boolConversionCheck(J.$eq$(J.$index$asx(_this._fVerbs, 1), 1)) || y1 !== y0)
        return _null;
      width = x1 - x0;
      x2 = _this.atPoint$1(2).get$dx();
      y2 = _this.atPoint$1(2).get$dy();
      if (!B.boolConversionCheck(J.$eq$(J.$index$asx(_this._fVerbs, 2), 1)) || x2 !== x1)
        return _null;
      height = y2 - y1;
      x3 = _this.atPoint$1(3).get$dx();
      y3 = _this.atPoint$1(3).get$dy();
      if (!B.boolConversionCheck(J.$eq$(J.$index$asx(_this._fVerbs, 3), 1)) || y3 !== y2)
        return _null;
      if (x2 - x3 !== width || y3 - y0 !== height)
        return _null;
      t1 = type$.double;
      return A.Rect$fromLTWH(A.min(x0, x1, t1), A.min(y0, y2, t1), Math.abs(width), Math.abs(height));
    },
    getStraightLine$0() {
      var x0, y0, x1, y1, _this = this;
      if (!B.boolConversionCheck(J.$eq$(_this._fVerbsLength, 2)) || !B.boolConversionCheck(J.$eq$(J.$index$asx(_this._fVerbs, 0), 0)) || !B.boolConversionCheck(J.$eq$(J.$index$asx(_this._fVerbs, 1), 1)))
        return null;
      x0 = J.$index$asx(_this.fPoints, 0);
      y0 = J.$index$asx(_this.fPoints, 1);
      x1 = J.$index$asx(_this.fPoints, 2);
      y1 = J.$index$asx(_this.fPoints, 3);
      if (y0 === y1 || x0 === x1)
        return A.Rect$fromLTRB(x0, y0, x1, y1);
      return null;
    },
    _getRRect$0() {
      var t1, cornerIndex, verb, controlPx, controlPy, t2, vector1_0x, vector1_0y, t3, dx, dy, t4,
        bounds = this.getBounds$0(),
        radii = B._setArrayType([], type$.JSArray_Radius),
        iter = A.PathRefIterator$(this),
        pts = A.NativeFloat32List_NativeFloat32List(8);
      iter.next$1(pts);
      for (t1 = pts.length, cornerIndex = 0; verb = iter.next$1(pts), verb !== 6;)
        if (3 === verb) {
          if (2 >= t1)
            return B.ioore(pts, 2);
          controlPx = pts[2];
          if (3 >= t1)
            return B.ioore(pts, 3);
          controlPy = pts[3];
          t2 = pts[0];
          if (typeof t2 !== "number")
            return B.iae(t2);
          vector1_0x = controlPx - t2;
          t2 = pts[1];
          if (typeof t2 !== "number")
            return B.iae(t2);
          vector1_0y = controlPy - t2;
          if (4 >= t1)
            return B.ioore(pts, 4);
          t2 = pts[4];
          if (typeof t2 !== "number")
            return t2.$sub();
          if (5 >= t1)
            return B.ioore(pts, 5);
          t3 = pts[5];
          if (typeof t3 !== "number")
            return t3.$sub();
          if (vector1_0x !== 0) {
            dx = Math.abs(vector1_0x);
            dy = Math.abs(t3 - controlPy);
          } else {
            dy = Math.abs(vector1_0y);
            dx = vector1_0y !== 0 ? Math.abs(t2 - controlPx) : Math.abs(vector1_0x);
          }
          D.JSArray_methods.add$1(radii, A.Radius$elliptical(dx, dy));
          ++cornerIndex;
        }
      t1 = radii.length;
      if (0 >= t1)
        return B.ioore(radii, 0);
      t2 = radii[0];
      if (1 >= t1)
        return B.ioore(radii, 1);
      t3 = radii[1];
      if (2 >= t1)
        return B.ioore(radii, 2);
      t4 = radii[2];
      if (3 >= t1)
        return B.ioore(radii, 3);
      return A.RRect$fromRectAndCorners(bounds, radii[3], t4, t2, t3);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.PathRef && B.boolConversionCheck(this.equals$1(other));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.fSegmentMask, _this.fPoints, _this._conicWeights, _this._fVerbs, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    equals$1(ref) {
      var pointCount, len, i, t1, weightCount, t2, verbCount, _this = this;
      type$.PathRef._as(ref);
      if (!B.boolConversionCheck(J.$eq$(_this.fSegmentMask, ref.fSegmentMask)))
        return false;
      pointCount = _this.countPoints$0();
      if (pointCount !== ref.countPoints$0())
        return false;
      len = pointCount * 2;
      for (i = 0; i < len; ++i)
        if (!B.boolConversionCheck(J.$eq$(J.$index$asx(_this.fPoints, i), J.$index$asx(ref.fPoints, i))))
          return false;
      t1 = _this._conicWeights;
      if (t1 == null) {
        if (ref._conicWeights != null)
          return false;
      } else {
        if (ref._conicWeights == null)
          return false;
        weightCount = J.get$length$asx(t1);
        t1 = ref._conicWeights;
        t1.toString;
        if (!B.boolConversionCheck(J.$eq$(J.get$length$asx(t1), weightCount)))
          return false;
        for (i = 0; i < weightCount; ++i) {
          t1 = _this._conicWeights;
          t1.toString;
          t1 = J.$index$asx(t1, i);
          t2 = ref._conicWeights;
          t2.toString;
          if (!B.boolConversionCheck(J.$eq$(t1, J.$index$asx(t2, i))))
            return false;
        }
      }
      verbCount = _this.countVerbs$0();
      if (verbCount !== ref.countVerbs$0())
        return false;
      for (i = 0; i < verbCount; ++i)
        if (!B.boolConversionCheck(J.$eq$(J.$index$asx(_this._fVerbs, i), J.$index$asx(ref._fVerbs, i))))
          return false;
      B.boolConversionCheck(J.$eq$(ref.countVerbs$0(), 0));
      return true;
    },
    _resizePoints$1(newLength) {
      var t1, newPoints, _this = this;
      B._asInt(newLength);
      t1 = _this._fPointsCapacity;
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (newLength > t1) {
        t1 = newLength + 10;
        _this._fPointsCapacity = t1;
        newPoints = A.NativeFloat32List_NativeFloat32List(t1 * 2);
        D.NativeFloat32List_methods.setAll$2(newPoints, 0, _this.fPoints);
        _this.fPoints = newPoints;
      }
      _this._fPointsLength = newLength;
    },
    _resizeVerbs$1(newLength) {
      var t1, newVerbs, _this = this;
      B._asInt(newLength);
      t1 = _this._fVerbsCapacity;
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (newLength > t1) {
        t1 = newLength + 8;
        _this._fVerbsCapacity = t1;
        newVerbs = B.NativeUint8List_NativeUint8List(t1);
        D.NativeUint8List_methods.setAll$2(newVerbs, 0, _this._fVerbs);
        _this._fVerbs = newVerbs;
      }
      _this._fVerbsLength = newLength;
    },
    _resizeConicWeights$1(newLength) {
      var t1, newWeights, _this = this;
      B._asInt(newLength);
      t1 = _this._conicWeightsCapacity;
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (newLength > t1) {
        t1 = newLength + 4;
        _this._conicWeightsCapacity = t1;
        newWeights = A.NativeFloat32List_NativeFloat32List(t1);
        t1 = _this._conicWeights;
        if (t1 != null)
          D.NativeFloat32List_methods.setAll$2(newWeights, 0, t1);
        _this._conicWeights = newWeights;
      }
      _this._conicWeightsLength = newLength;
    },
    _computeBounds$0() {
      var pointCount, maxX, maxY, accum, len, t1, minY, minX, i, x, y, _this = this;
      _this.debugValidate$0();
      pointCount = _this.countPoints$0();
      _this.fBoundsIsDirty = false;
      _this.cachedBounds = null;
      if (pointCount === 0) {
        _this.fBounds = C.Rect_0_0_0_0;
        _this.fIsFinite = true;
      } else {
        maxX = J.$index$asx(_this.fPoints, 0);
        maxY = J.$index$asx(_this.fPoints, 1);
        accum = 0 * maxX * maxY;
        len = 2 * pointCount;
        for (t1 = type$.double, minY = maxY, minX = maxX, i = 2; i < len; i += 2) {
          x = J.$index$asx(_this.fPoints, i);
          y = J.$index$asx(_this.fPoints, i + 1);
          accum = accum * x * y;
          minX = A.min(minX, x, t1);
          minY = A.min(minY, y, t1);
          maxX = A.max(maxX, x, t1);
          maxY = A.max(maxY, y, t1);
        }
        if (accum * 0 === 0) {
          _this.fBounds = A.Rect$fromLTRB(minX, minY, maxX, maxY);
          _this.fIsFinite = true;
        } else {
          _this.fBounds = C.Rect_0_0_0_0;
          _this.fIsFinite = false;
        }
      }
    },
    growForVerb$2(verb, weight) {
      var pCnt, mask, t1, verbCount, weightCount, ptsIndex, _this = this;
      B._asInt(verb);
      B._asDouble(weight);
      _this.debugValidate$0();
      pCnt = 0;
      mask = 0;
      switch (verb) {
        case 0:
          pCnt = 1;
          break;
        case 1:
          pCnt = 1;
          mask = 1;
          break;
        case 2:
          pCnt = 2;
          mask = 2;
          break;
        case 3:
          pCnt = 2;
          mask = 4;
          break;
        case 4:
          pCnt = 3;
          mask = 8;
          break;
        case 5:
          break;
        case 6:
          break;
      }
      t1 = _this.fSegmentMask;
      if (typeof t1 !== "number")
        return t1.$or();
      _this.fSegmentMask = (t1 | mask) >>> 0;
      _this.fBoundsIsDirty = true;
      _this.startEdit$0();
      verbCount = _this.countVerbs$0();
      _this._resizeVerbs$1(verbCount + 1);
      J.$indexSet$ax(_this._fVerbs, verbCount, verb);
      if (3 === verb) {
        weightCount = _this.countWeights$0();
        _this._resizeConicWeights$1(weightCount + 1);
        t1 = _this._conicWeights;
        t1.toString;
        J.$indexSet$ax(t1, weightCount, weight);
      }
      ptsIndex = _this._fPointsLength;
      _this._resizePoints$1(ptsIndex + pCnt);
      _this.debugValidate$0();
      return ptsIndex;
    },
    startEdit$0() {
      var _this = this;
      _this.fIsRect = _this.fIsRRect = _this.fIsOval = false;
      _this.cachedBounds = null;
      _this.fBoundsIsDirty = true;
    },
    setIsOval$3(isOval, isCCW, start) {
      B._asBool(isOval);
      B._asBool(isCCW);
      B._asInt(start);
      this.fIsOval = isOval;
      this.fRRectOrOvalIsCCW = isCCW;
      this.fRRectOrOvalStartIdx = start;
    },
    setIsRRect$4(isRRect, isCCW, start, rrect) {
      B._asBool(isRRect);
      B._asBool(isCCW);
      B._asInt(start);
      type$.RRect._as(rrect);
      this.fIsRRect = isRRect;
      this.fRRectOrOvalIsCCW = isCCW;
      this.fRRectOrOvalStartIdx = start;
    },
    setIsRect$3(isRect, isCCW, start) {
      B._asBool(isRect);
      B._asBool(isCCW);
      B._asInt(start);
      this.fIsRect = isRect;
      this.fRRectOrOvalIsCCW = isCCW;
      this.fRRectOrOvalStartIdx = start;
    },
    get$isEmpty(_) {
      return J.$eq$(this.countVerbs$0(), 0);
    },
    debugValidate$0() {
    },
    set$fBounds(fBounds) {
      this.fBounds = type$.nullable_Rect._as(fBounds);
    },
    set$cachedBounds(cachedBounds) {
      this.cachedBounds = type$.nullable_Rect._as(cachedBounds);
    },
    set$_fPointsCapacity(_fPointsCapacity) {
      this._fPointsCapacity = B._asInt(_fPointsCapacity);
    },
    set$_fPointsLength(_fPointsLength) {
      this._fPointsLength = B._asInt(_fPointsLength);
    },
    set$_fVerbsCapacity(_fVerbsCapacity) {
      this._fVerbsCapacity = B._asInt(_fVerbsCapacity);
    },
    set$_fVerbsLength(_fVerbsLength) {
      this._fVerbsLength = B._asInt(_fVerbsLength);
    },
    set$_conicWeightsCapacity(_conicWeightsCapacity) {
      this._conicWeightsCapacity = B._asInt(_conicWeightsCapacity);
    },
    set$_conicWeights(_conicWeights) {
      this._conicWeights = type$.nullable_Float32List._as(_conicWeights);
    },
    set$_conicWeightsLength(_conicWeightsLength) {
      this._conicWeightsLength = B._asInt(_conicWeightsLength);
    },
    set$fBoundsIsDirty(fBoundsIsDirty) {
      this.fBoundsIsDirty = B._asBool(fBoundsIsDirty);
    },
    set$fIsFinite(fIsFinite) {
      this.fIsFinite = B._asBool(fIsFinite);
    },
    set$fIsOval(fIsOval) {
      this.fIsOval = B._asBool(fIsOval);
    },
    set$fIsRRect(fIsRRect) {
      this.fIsRRect = B._asBool(fIsRRect);
    },
    set$fIsRect(fIsRect) {
      this.fIsRect = B._asBool(fIsRect);
    },
    set$fRRectOrOvalIsCCW(fRRectOrOvalIsCCW) {
      this.fRRectOrOvalIsCCW = B._asBool(fRRectOrOvalIsCCW);
    },
    set$fRRectOrOvalStartIdx(fRRectOrOvalStartIdx) {
      this.fRRectOrOvalStartIdx = B._asInt(fRRectOrOvalStartIdx);
    },
    set$fSegmentMask(fSegmentMask) {
      this.fSegmentMask = B._asInt(fSegmentMask);
    }
  };
  A.PathRefIterator.prototype = {
    PathRefIterator$1(pathRef) {
      var t1;
      this._pointIndex = 0;
      t1 = this.pathRef;
      if (!B.boolConversionCheck(J.get$isFinite$n(t1)))
        this.set$_verbIndex(t1.countVerbs$0());
    },
    nextIndex$0() {
      var t2, verb, _this = this,
        t1 = _this.pathRef;
      if (B.boolConversionCheck(J.$eq$(_this._verbIndex, t1.countVerbs$0())))
        return 6;
      t1 = t1._fVerbs;
      t2 = _this._verbIndex;
      if (typeof t2 !== "number")
        return t2.$add();
      _this.set$_verbIndex(t2 + 1);
      verb = J.$index$asx(t1, t2);
      switch (verb) {
        case 0:
          _this.set$iterIndex(_this._pointIndex);
          t1 = _this._pointIndex;
          if (typeof t1 !== "number")
            return t1.$add();
          _this.set$_pointIndex(t1 + 2);
          break;
        case 1:
          t1 = _this._pointIndex;
          if (typeof t1 !== "number")
            return t1.$sub();
          _this.set$iterIndex(t1 - 2);
          t1 = _this._pointIndex;
          if (typeof t1 !== "number")
            return t1.$add();
          _this.set$_pointIndex(t1 + 2);
          break;
        case 3:
          t1 = _this._conicWeightIndex;
          if (typeof t1 !== "number")
            return t1.$add();
          _this.set$_conicWeightIndex(t1 + 1);
          t1 = _this._pointIndex;
          if (typeof t1 !== "number")
            return t1.$sub();
          _this.set$iterIndex(t1 - 2);
          t1 = _this._pointIndex;
          if (typeof t1 !== "number")
            return t1.$add();
          _this.set$_pointIndex(t1 + 4);
          break;
        case 2:
          t1 = _this._pointIndex;
          if (typeof t1 !== "number")
            return t1.$sub();
          _this.set$iterIndex(t1 - 2);
          t1 = _this._pointIndex;
          if (typeof t1 !== "number")
            return t1.$add();
          _this.set$_pointIndex(t1 + 4);
          break;
        case 4:
          t1 = _this._pointIndex;
          if (typeof t1 !== "number")
            return t1.$sub();
          _this.set$iterIndex(t1 - 2);
          t1 = _this._pointIndex;
          if (typeof t1 !== "number")
            return t1.$add();
          _this.set$_pointIndex(t1 + 6);
          break;
        case 5:
          break;
        case 6:
          break;
        default:
          throw B.wrapException(B.FormatException$("Unsupport Path verb " + B.S(verb), null, null));
      }
      return verb;
    },
    next$1(outPts) {
      var t1, t2, t3, verb, points, pointIndex, pointIndex0, _this = this;
      type$.Float32List._as(outPts);
      t1 = _this.pathRef;
      if (B.boolConversionCheck(J.$eq$(_this._verbIndex, t1.countVerbs$0())))
        return 6;
      t2 = t1._fVerbs;
      t3 = _this._verbIndex;
      if (typeof t3 !== "number")
        return t3.$add();
      _this.set$_verbIndex(t3 + 1);
      verb = J.$index$asx(t2, t3);
      points = t1.get$points();
      pointIndex = _this._pointIndex;
      switch (verb) {
        case 0:
          pointIndex0 = pointIndex + 1;
          t1 = points.length;
          if (pointIndex >>> 0 !== pointIndex || pointIndex >= t1)
            return B.ioore(points, pointIndex);
          D.NativeFloat32List_methods.$indexSet(outPts, 0, points[pointIndex]);
          pointIndex = pointIndex0 + 1;
          if (!(pointIndex0 >= 0 && pointIndex0 < t1))
            return B.ioore(points, pointIndex0);
          D.NativeFloat32List_methods.$indexSet(outPts, 1, points[pointIndex0]);
          break;
        case 1:
          t1 = pointIndex - 2;
          t2 = points.length;
          if (!(t1 >= 0 && t1 < t2))
            return B.ioore(points, t1);
          D.NativeFloat32List_methods.$indexSet(outPts, 0, points[t1]);
          t1 = pointIndex - 1;
          if (!(t1 >= 0 && t1 < t2))
            return B.ioore(points, t1);
          D.NativeFloat32List_methods.$indexSet(outPts, 1, points[t1]);
          pointIndex0 = pointIndex + 1;
          if (pointIndex >>> 0 !== pointIndex || pointIndex >= t2)
            return B.ioore(points, pointIndex);
          D.NativeFloat32List_methods.$indexSet(outPts, 2, points[pointIndex]);
          pointIndex = pointIndex0 + 1;
          if (!(pointIndex0 >= 0 && pointIndex0 < t2))
            return B.ioore(points, pointIndex0);
          D.NativeFloat32List_methods.$indexSet(outPts, 3, points[pointIndex0]);
          break;
        case 3:
          t1 = _this._conicWeightIndex;
          if (typeof t1 !== "number")
            return t1.$add();
          _this.set$_conicWeightIndex(t1 + 1);
          t1 = pointIndex - 2;
          t2 = points.length;
          if (!(t1 >= 0 && t1 < t2))
            return B.ioore(points, t1);
          D.NativeFloat32List_methods.$indexSet(outPts, 0, points[t1]);
          t1 = pointIndex - 1;
          if (!(t1 >= 0 && t1 < t2))
            return B.ioore(points, t1);
          D.NativeFloat32List_methods.$indexSet(outPts, 1, points[t1]);
          pointIndex0 = pointIndex + 1;
          if (pointIndex >>> 0 !== pointIndex || pointIndex >= t2)
            return B.ioore(points, pointIndex);
          D.NativeFloat32List_methods.$indexSet(outPts, 2, points[pointIndex]);
          pointIndex = pointIndex0 + 1;
          if (!(pointIndex0 >= 0 && pointIndex0 < t2))
            return B.ioore(points, pointIndex0);
          D.NativeFloat32List_methods.$indexSet(outPts, 3, points[pointIndex0]);
          pointIndex0 = pointIndex + 1;
          if (!(pointIndex >= 0 && pointIndex < t2))
            return B.ioore(points, pointIndex);
          D.NativeFloat32List_methods.$indexSet(outPts, 4, points[pointIndex]);
          pointIndex = pointIndex0 + 1;
          if (!(pointIndex0 >= 0 && pointIndex0 < t2))
            return B.ioore(points, pointIndex0);
          D.NativeFloat32List_methods.$indexSet(outPts, 5, points[pointIndex0]);
          break;
        case 2:
          t1 = pointIndex - 2;
          t2 = points.length;
          if (!(t1 >= 0 && t1 < t2))
            return B.ioore(points, t1);
          D.NativeFloat32List_methods.$indexSet(outPts, 0, points[t1]);
          t1 = pointIndex - 1;
          if (!(t1 >= 0 && t1 < t2))
            return B.ioore(points, t1);
          D.NativeFloat32List_methods.$indexSet(outPts, 1, points[t1]);
          pointIndex0 = pointIndex + 1;
          if (pointIndex >>> 0 !== pointIndex || pointIndex >= t2)
            return B.ioore(points, pointIndex);
          D.NativeFloat32List_methods.$indexSet(outPts, 2, points[pointIndex]);
          pointIndex = pointIndex0 + 1;
          if (!(pointIndex0 >= 0 && pointIndex0 < t2))
            return B.ioore(points, pointIndex0);
          D.NativeFloat32List_methods.$indexSet(outPts, 3, points[pointIndex0]);
          pointIndex0 = pointIndex + 1;
          if (!(pointIndex >= 0 && pointIndex < t2))
            return B.ioore(points, pointIndex);
          D.NativeFloat32List_methods.$indexSet(outPts, 4, points[pointIndex]);
          pointIndex = pointIndex0 + 1;
          if (!(pointIndex0 >= 0 && pointIndex0 < t2))
            return B.ioore(points, pointIndex0);
          D.NativeFloat32List_methods.$indexSet(outPts, 5, points[pointIndex0]);
          break;
        case 4:
          t1 = pointIndex - 2;
          t2 = points.length;
          if (!(t1 >= 0 && t1 < t2))
            return B.ioore(points, t1);
          D.NativeFloat32List_methods.$indexSet(outPts, 0, points[t1]);
          t1 = pointIndex - 1;
          if (!(t1 >= 0 && t1 < t2))
            return B.ioore(points, t1);
          D.NativeFloat32List_methods.$indexSet(outPts, 1, points[t1]);
          pointIndex0 = pointIndex + 1;
          if (pointIndex >>> 0 !== pointIndex || pointIndex >= t2)
            return B.ioore(points, pointIndex);
          D.NativeFloat32List_methods.$indexSet(outPts, 2, points[pointIndex]);
          pointIndex = pointIndex0 + 1;
          if (!(pointIndex0 >= 0 && pointIndex0 < t2))
            return B.ioore(points, pointIndex0);
          D.NativeFloat32List_methods.$indexSet(outPts, 3, points[pointIndex0]);
          pointIndex0 = pointIndex + 1;
          if (!(pointIndex >= 0 && pointIndex < t2))
            return B.ioore(points, pointIndex);
          D.NativeFloat32List_methods.$indexSet(outPts, 4, points[pointIndex]);
          pointIndex = pointIndex0 + 1;
          if (!(pointIndex0 >= 0 && pointIndex0 < t2))
            return B.ioore(points, pointIndex0);
          D.NativeFloat32List_methods.$indexSet(outPts, 5, points[pointIndex0]);
          pointIndex0 = pointIndex + 1;
          if (!(pointIndex >= 0 && pointIndex < t2))
            return B.ioore(points, pointIndex);
          D.NativeFloat32List_methods.$indexSet(outPts, 6, points[pointIndex]);
          pointIndex = pointIndex0 + 1;
          if (!(pointIndex0 >= 0 && pointIndex0 < t2))
            return B.ioore(points, pointIndex0);
          D.NativeFloat32List_methods.$indexSet(outPts, 7, points[pointIndex0]);
          break;
        case 5:
          break;
        case 6:
          break;
        default:
          throw B.wrapException(B.FormatException$("Unsupport Path verb " + B.S(verb), null, null));
      }
      _this._pointIndex = pointIndex;
      return verb;
    },
    get$conicWeight() {
      var t1 = this.pathRef._conicWeights;
      t1.toString;
      return J.$index$asx(t1, this._conicWeightIndex);
    },
    set$_conicWeightIndex(_conicWeightIndex) {
      this._conicWeightIndex = B._asInt(_conicWeightIndex);
    },
    set$_verbIndex(_verbIndex) {
      this._verbIndex = B._asInt(_verbIndex);
    },
    set$_pointIndex(_pointIndex) {
      this._pointIndex = B._asInt(_pointIndex);
    },
    set$iterIndex(iterIndex) {
      this.iterIndex = B._asInt(iterIndex);
    }
  };
  A.QuadRoots.prototype = {
    get$roots() {
      var t2, t3,
        t1 = this.root0;
      if (t1 == null)
        t1 = B._setArrayType([], type$.JSArray_double);
      else {
        t2 = this.root1;
        t3 = type$.JSArray_double;
        t1 = t2 == null ? B._setArrayType([t1], t3) : B._setArrayType([t1, t2], t3);
      }
      return t1;
    },
    findRoots$3(a, b, c) {
      var dr, q, res, rootCount, rootCount0, t1, t2, _this = this;
      B._asDouble(a);
      B._asDouble(b);
      B._asDouble(c);
      if (a === 0) {
        _this.set$root0(A.validUnitDivide(-c, b));
        return _this.root0 == null ? 0 : 1;
      }
      dr = b * b - 4 * a * c;
      if (dr < 0)
        return 0;
      dr = A.sqrt(dr);
      if (!B.boolConversionCheck(D.JSNumber_methods.get$isFinite(dr)))
        return 0;
      q = b < 0 ? -(b - dr) / 2 : -(b + dr) / 2;
      res = A.validUnitDivide(q, a);
      if (res != null) {
        _this.root0 = res;
        rootCount = 1;
      } else
        rootCount = 0;
      res = A.validUnitDivide(c, q);
      if (res != null) {
        rootCount0 = rootCount + 1;
        if (rootCount === 0)
          _this.root0 = res;
        else
          _this.root1 = res;
        rootCount = rootCount0;
      }
      if (rootCount === 2) {
        t1 = _this.root0;
        t1.toString;
        t2 = _this.root1;
        t2.toString;
        if (typeof t1 !== "number")
          return t1.$gt();
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (t1 > t2) {
          _this.root0 = t2;
          _this.root1 = t1;
        } else if (t1 === t2)
          return 1;
      }
      return rootCount;
    },
    set$root0(root0) {
      this.root0 = B._asDoubleQ(root0);
    }
  };
  A.SkQuadCoefficients.prototype = {
    evalX$1(t) {
      var t1, t2, t3;
      B._asDouble(t);
      t1 = this.ax;
      if (typeof t1 !== "number")
        return t1.$mul();
      t2 = this.bx;
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = this.cx;
      if (typeof t3 !== "number")
        return B.iae(t3);
      return (t1 * t + t2) * t + t3;
    },
    evalY$1(t) {
      var t1, t2, t3;
      B._asDouble(t);
      t1 = this.ay;
      if (typeof t1 !== "number")
        return t1.$mul();
      t2 = this.by;
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = this.cy;
      if (typeof t3 !== "number")
        return B.iae(t3);
      return (t1 * t + t2) * t + t3;
    }
  };
  A.PathWinding.prototype = {
    PathWinding$3(pathRef, x, y) {
      this._walkPath$0();
    },
    get$w() {
      return this._w;
    },
    get$onCurveCount() {
      return this._onCurveCount;
    },
    _walkPath$0() {
      var t2, verb, t3, _this = this,
        t1 = _this.pathRef,
        iter = A.PathIterator$(t1, true);
      for (t2 = _this.__engine$_buffer; verb = iter.next$1(t2), verb !== 6;)
        switch (verb) {
          case 0:
          case 5:
            break;
          case 1:
            _this._computeLineWinding$0();
            break;
          case 2:
            _this._computeQuadWinding$0();
            break;
          case 3:
            t3 = t1.get$conicWeights();
            t3.toString;
            _this._computeConicWinding$1(J.$index$asx(t3, iter.get$conicWeightIndex()));
            break;
          case 4:
            _this._computeCubicWinding$0();
            break;
        }
    },
    _computeLineWinding$0() {
      var y1, y0, dir, crossProduct, _this = this,
        t1 = _this.__engine$_buffer,
        t2 = J.getInterceptor$asx(t1),
        x0 = t2.$index(t1, 0),
        startY = t2.$index(t1, 1),
        x1 = t2.$index(t1, 2),
        endY = t2.$index(t1, 3);
      if (startY > endY) {
        y1 = startY;
        y0 = endY;
        dir = -1;
      } else {
        y1 = endY;
        y0 = startY;
        dir = 1;
      }
      t1 = _this.y;
      if (typeof t1 !== "number")
        return t1.$lt();
      if (t1 < y0 || t1 > y1)
        return;
      t2 = _this.x;
      if (B.boolConversionCheck(A.PathWinding__checkOnCurve(t2, t1, x0, startY, x1, endY))) {
        t1 = _this._onCurveCount;
        if (typeof t1 !== "number")
          return t1.$add();
        _this.set$_onCurveCount(t1 + 1);
        return;
      }
      if (t1 === y1)
        return;
      if (typeof t2 !== "number")
        return t2.$sub();
      crossProduct = (x1 - x0) * (t1 - startY) - (endY - startY) * (t2 - x0);
      if (crossProduct === 0) {
        if (t2 !== x1 || t1 !== endY) {
          t1 = _this._onCurveCount;
          if (typeof t1 !== "number")
            return t1.$add();
          _this.set$_onCurveCount(t1 + 1);
        }
        dir = 0;
      } else if (B.boolConversionCheck(J.$eq$(A.SPath_scalarSignedAsInt(crossProduct), dir)))
        dir = 0;
      t1 = _this._w;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_w(t1 + dir);
    },
    _computeQuadWinding$0() {
      var _this = this,
        t1 = _this.__engine$_buffer,
        n = !B.boolConversionCheck(A.PathWinding__isQuadMonotonic(t1)) ? A.PathWinding__chopQuadAtExtrema(t1) : 0,
        t2 = J.getInterceptor$asx(t1),
        winding = _this._computeMonoQuadWinding$6(t2.$index(t1, 0), t2.$index(t1, 1), t2.$index(t1, 2), t2.$index(t1, 3), t2.$index(t1, 4), t2.$index(t1, 5));
      if (n > 0) {
        t1 = _this._computeMonoQuadWinding$6(t2.$index(t1, 4), t2.$index(t1, 5), t2.$index(t1, 6), t2.$index(t1, 7), t2.$index(t1, 8), t2.$index(t1, 9));
        if (typeof t1 !== "number")
          return B.iae(t1);
        winding += t1;
      }
      t1 = _this._w;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_w(t1 + winding);
    },
    _computeMonoQuadWinding$6(x0, y0, x1, y1, x2, y2) {
      var y20, y00, dir, t1, t2, quadRoots, xt, t3, _this = this;
      B._asDouble(x0);
      B._asDouble(y0);
      B._asDouble(x1);
      B._asDouble(y1);
      B._asDouble(x2);
      B._asDouble(y2);
      if (y0 > y2) {
        y20 = y0;
        y00 = y2;
        dir = -1;
      } else {
        y20 = y2;
        y00 = y0;
        dir = 1;
      }
      t1 = _this.y;
      if (typeof t1 !== "number")
        return t1.$lt();
      if (t1 < y00 || t1 > y20)
        return 0;
      t2 = _this.x;
      if (B.boolConversionCheck(A.PathWinding__checkOnCurve(t2, t1, x0, y0, x2, y2))) {
        t1 = _this._onCurveCount;
        if (typeof t1 !== "number")
          return t1.$add();
        _this.set$_onCurveCount(t1 + 1);
        return 0;
      }
      if (t1 === y20)
        return 0;
      quadRoots = A.QuadRoots$();
      if (0 === quadRoots.findRoots$3(y0 - 2 * y1 + y2, 2 * (y1 - y0), y0 - t1))
        xt = dir === 1 ? x0 : x2;
      else {
        t3 = quadRoots.root0;
        t3.toString;
        xt = A.polyEval(x2 - 2 * x1 + x0, 2 * (x1 - x0), x0, t3);
      }
      if (B.boolConversionCheck(A.SPath_nearlyEqual(xt, t2)))
        if (!B.boolConversionCheck(J.$eq$(t2, x2)) || t1 !== y2) {
          t1 = _this._onCurveCount;
          if (typeof t1 !== "number")
            return t1.$add();
          _this.set$_onCurveCount(t1 + 1);
          return 0;
        }
      if (typeof t2 !== "number")
        return B.iae(t2);
      return xt < t2 ? dir : 0;
    },
    _computeConicWinding$1(weight) {
      var t1, t2, conic, isMono, conics;
      B._asDouble(weight);
      t1 = this.__engine$_buffer;
      t2 = J.getInterceptor$asx(t1);
      conic = A.Conic$(t2.$index(t1, 0), t2.$index(t1, 1), t2.$index(t1, 2), t2.$index(t1, 3), t2.$index(t1, 4), t2.$index(t1, 5), weight);
      isMono = A.PathWinding__isQuadMonotonic(t1);
      conics = B._setArrayType([], type$.JSArray_Conic);
      conic.chopAtYExtrema$1(conics);
      if (0 >= conics.length)
        return B.ioore(conics, 0);
      this._computeMonoConicWinding$1(conics[0]);
      if (!isMono && conics.length === 2) {
        if (1 >= conics.length)
          return B.ioore(conics, 1);
        this._computeMonoConicWinding$1(conics[1]);
      }
    },
    _computeMonoConicWinding$1(conic) {
      var y0, y2, y20, y00, dir, t1, t2, xt, xt0, $A, t3, t4, $B, $C, quadRoots, t5, _this = this;
      type$.Conic._as(conic);
      y0 = conic.p0y;
      y2 = conic.p2y;
      if (y0 > y2) {
        y20 = y0;
        y00 = y2;
        dir = -1;
      } else {
        y20 = y2;
        y00 = y0;
        dir = 1;
      }
      t1 = _this.y;
      if (typeof t1 !== "number")
        return t1.$lt();
      if (t1 < y00 || t1 > y20)
        return;
      t2 = _this.x;
      xt = conic.p0x;
      xt0 = conic.p2x;
      if (B.boolConversionCheck(A.PathWinding__checkOnCurve(t2, t1, xt, y0, xt0, y2))) {
        t1 = _this._onCurveCount;
        if (typeof t1 !== "number")
          return t1.$add();
        _this.set$_onCurveCount(t1 + 1);
        return;
      }
      if (t1 === y20)
        return;
      $A = conic.p2y;
      t3 = conic.p1y;
      t4 = conic.fW;
      if (typeof t3 !== "number")
        return t3.$mul();
      if (typeof t4 !== "number")
        return B.iae(t4);
      $B = t3 * t4 - t1 * t4 + t1;
      $C = conic.p0y;
      quadRoots = A.QuadRoots$();
      if (0 === quadRoots.findRoots$3($A + ($C - 2 * $B), 2 * ($B - $C), $C - t1))
        xt = dir === 1 ? xt : xt0;
      else {
        t3 = quadRoots.root0;
        t3.toString;
        t5 = A.Conic_evalNumerator(xt, conic.p1x, xt0, t4, t3);
        t3 = A.Conic_evalDenominator(t4, t3);
        if (typeof t5 !== "number")
          return t5.$div();
        if (typeof t3 !== "number")
          return B.iae(t3);
        xt = t5 / t3;
      }
      if (B.boolConversionCheck(A.SPath_nearlyEqual(xt, t2)))
        if (!B.boolConversionCheck(J.$eq$(t2, xt0)) || t1 !== conic.p2y) {
          t1 = _this._onCurveCount;
          if (typeof t1 !== "number")
            return t1.$add();
          _this.set$_onCurveCount(t1 + 1);
          return;
        }
      t1 = _this._w;
      if (typeof t2 !== "number")
        return B.iae(t2);
      t2 = xt < t2 ? dir : 0;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_w(t1 + t2);
    },
    _computeCubicWinding$0() {
      var i,
        t1 = this.__engine$_buffer,
        n = A.chopCubicAtYExtrema(t1, t1);
      for (i = 0; i <= n; ++i)
        this._windingMonoCubic$1(i * 3 * 2);
    },
    _windingMonoCubic$1(bufferIndex) {
      var t1, bufferIndex0, t2, px0, bufferIndex1, py0, px1, px2, px3, py3, y3, y0, dir, t3, t4, min, max, t, xt, _this = this;
      B._asInt(bufferIndex);
      t1 = _this.__engine$_buffer;
      bufferIndex0 = bufferIndex + 1;
      t2 = J.getInterceptor$asx(t1);
      px0 = t2.$index(t1, bufferIndex);
      bufferIndex1 = bufferIndex0 + 1;
      py0 = t2.$index(t1, bufferIndex0);
      px1 = t2.$index(t1, bufferIndex1);
      bufferIndex0 = bufferIndex1 + 1 + 1;
      px2 = t2.$index(t1, bufferIndex0);
      bufferIndex0 = bufferIndex0 + 1 + 1;
      px3 = t2.$index(t1, bufferIndex0);
      py3 = t2.$index(t1, bufferIndex0 + 1);
      if (py0 > py3) {
        y3 = py0;
        y0 = py3;
        dir = -1;
      } else {
        y3 = py3;
        y0 = py0;
        dir = 1;
      }
      t2 = _this.y;
      if (typeof t2 !== "number")
        return t2.$lt();
      if (t2 < y0 || t2 > y3)
        return;
      t3 = _this.x;
      if (B.boolConversionCheck(A.PathWinding__checkOnCurve(t3, t2, px0, py0, px3, py3))) {
        t1 = _this._onCurveCount;
        if (typeof t1 !== "number")
          return t1.$add();
        _this.set$_onCurveCount(t1 + 1);
        return;
      }
      if (t2 === y3)
        return;
      t4 = type$.double;
      min = A.min(px0, A.min(px1, A.min(px2, px3, t4), t4), t4);
      max = A.max(px0, A.max(px1, A.max(px2, px3, t4), t4), t4);
      if (typeof t3 !== "number")
        return t3.$lt();
      if (t3 < min)
        return;
      if (t3 > max) {
        t1 = _this._w;
        if (typeof t1 !== "number")
          return t1.$add();
        _this.set$_w(t1 + dir);
        return;
      }
      t = A.chopMonoAtY(t1, bufferIndex, t2);
      if (t == null)
        return;
      xt = A.evalCubicPts(px0, px1, px2, px3, t);
      if (B.boolConversionCheck(A.SPath_nearlyEqual(xt, t3)))
        if (t3 !== px3 || t2 !== py3) {
          t1 = _this._onCurveCount;
          if (typeof t1 !== "number")
            return t1.$add();
          _this.set$_onCurveCount(t1 + 1);
          return;
        }
      t1 = _this._w;
      t2 = xt < t3 ? dir : 0;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_w(t1 + t2);
    },
    set$_w(_w) {
      this._w = B._asInt(_w);
    },
    set$_onCurveCount(_onCurveCount) {
      this._onCurveCount = B._asInt(_onCurveCount);
    }
  };
  A.EnginePictureRecorder.prototype = {
    get$cullRect() {
      return this.__EnginePictureRecorder_cullRect_A;
    },
    set$cullRect(value) {
      this.__EnginePictureRecorder_cullRect_A = type$.Rect._as(value);
    },
    beginRecording$1(bounds) {
      var _this = this;
      _this.set$cullRect(type$.Rect._as(bounds));
      _this.__engine$_isRecording = true;
      return _this.__engine$_canvas = A.RecordingCanvas$(_this.get$cullRect());
    },
    get$isRecording() {
      return this.__engine$_isRecording;
    },
    endRecording$0() {
      var result, t1, _this = this;
      if (!B.boolConversionCheck(_this.__engine$_isRecording))
        _this.beginRecording$1(C.Rect_tsf);
      _this.__engine$_isRecording = false;
      _this.__engine$_canvas.endRecording$0();
      result = A.EnginePicture$(_this.__engine$_canvas, _this.get$cullRect());
      t1 = $.Picture_onCreate;
      if (t1 != null)
        t1.call$1(result);
      return result;
    },
    $isPictureRecorder: 1
  };
  A.EnginePicture.prototype = {
    toImageSync$2(width, height) {
      B._asInt(width);
      B._asInt(height);
      throw B.wrapException(B.UnsupportedError$("toImageSync is not supported on the HTML backend. Use drawPicture instead, or toImage."));
    },
    dispose$0() {
      var t1 = $.Picture_onDispose;
      if (t1 != null)
        t1.call$1(this);
    },
    $isPicture: 1
  };
  A.PaintRequest.prototype = {
    paintCallback$0() {
      return this.paintCallback.call$0();
    }
  };
  A.PersistedPicture.prototype = {
    createElement$0() {
      var element = this.defaultCreateElement$1("flt-picture");
      A.DomElementExtension_setAttribute(element, "aria-hidden", "true");
      return element;
    },
    preroll$1(prerollContext) {
      type$.PrerollSurfaceContext._as(prerollContext);
      this.super$PersistedSurface$preroll(prerollContext);
    },
    recomputeTransformAndClip$0() {
      var t1, paintWidth, paintHeight, newDensity, _this = this;
      _this.set$transform(_this.parent.transform);
      t1 = _this.dx;
      if (!B.boolConversionCheck(J.$eq$(t1, 0)) || !B.boolConversionCheck(J.$eq$(_this.dy, 0))) {
        _this.set$transform(_this.transform.clone$0());
        _this.transform.translate$2(t1, _this.dy);
      }
      t1 = _this.localPaintBounds;
      paintWidth = t1.get$width();
      paintHeight = t1.get$height();
      newDensity = paintWidth === 0 || paintHeight === 0 ? 1 : A._computePixelDensity(_this.transform, paintWidth, paintHeight);
      if (newDensity !== _this._density) {
        _this._density = newDensity;
        _this._requiresRepaint = true;
      }
      _this._computeExactCullRects$0();
    },
    _computeExactCullRects$0() {
      var clipTransform, bounds, localClipBounds, localInverse, t1, t2, _this = this,
        parentSurface = _this.parent;
      if (parentSurface.projectedClip == null) {
        clipTransform = A.Matrix4$identity();
        for (bounds = null; parentSurface != null;) {
          localClipBounds = parentSurface.localClipBounds;
          if (localClipBounds != null)
            bounds = bounds == null ? clipTransform.transformRect$1(localClipBounds) : bounds.intersect$1(clipTransform.transformRect$1(localClipBounds));
          localInverse = parentSurface.get$localTransformInverse();
          if (localInverse != null && !B.boolConversionCheck(localInverse.isIdentity$0()))
            clipTransform.multiply$1(localInverse);
          parentSurface = parentSurface.parent;
        }
        if (bounds != null) {
          t1 = bounds.get$width();
          if (typeof t1 !== "number")
            return t1.$le();
          if (!(t1 <= 0)) {
            t1 = bounds.get$height();
            if (typeof t1 !== "number")
              return t1.$le();
            t1 = t1 <= 0;
          } else
            t1 = true;
        } else
          t1 = false;
        if (t1)
          bounds = C.Rect_0_0_0_0;
        t1 = _this.parent;
        t1.projectedClip = bounds;
      } else
        t1 = parentSurface;
      t1 = t1.projectedClip;
      t2 = _this.localPaintBounds;
      if (t1 == null)
        _this.set$_exactLocalCullRect(t2);
      else
        _this.set$_exactLocalCullRect(t2.intersect$1(t1));
      t1 = _this._exactLocalCullRect.get$width();
      if (typeof t1 !== "number")
        return t1.$le();
      if (!(t1 <= 0)) {
        t1 = _this._exactLocalCullRect.get$height();
        if (typeof t1 !== "number")
          return t1.$le();
        t1 = t1 <= 0;
      } else
        t1 = true;
      if (t1)
        _this._exactLocalCullRect = C.Rect_0_0_0_0;
    },
    _computeOptimalCullRect$1(oldSurface) {
      var oldOptimalLocalCullRect, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, newLocalCullRect, _this = this;
      type$.nullable_PersistedPicture._as(oldSurface);
      if (oldSurface == null || !B.boolConversionCheck(oldSurface.picture.recordingCanvas.get$didDraw())) {
        _this.set$_optimalLocalCullRect(_this._exactLocalCullRect);
        _this._requiresRepaint = true;
        return;
      }
      oldOptimalLocalCullRect = oldSurface === _this ? _this._optimalLocalCullRect : oldSurface._optimalLocalCullRect;
      if (B.boolConversionCheck(J.$eq$(_this._exactLocalCullRect, C.Rect_0_0_0_0))) {
        _this._optimalLocalCullRect = C.Rect_0_0_0_0;
        if (!B.boolConversionCheck(J.$eq$(oldOptimalLocalCullRect, C.Rect_0_0_0_0)))
          _this._requiresRepaint = true;
        return;
      }
      oldOptimalLocalCullRect.toString;
      t1 = _this._exactLocalCullRect;
      t1.toString;
      if (B.boolConversionCheck(A.rectContainsOther(oldOptimalLocalCullRect, t1))) {
        _this._optimalLocalCullRect = oldOptimalLocalCullRect;
        return;
      }
      t2 = oldOptimalLocalCullRect.left;
      t3 = t1.left;
      if (typeof t2 !== "number")
        return t2.$sub();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t4 = oldOptimalLocalCullRect.top;
      t5 = t1.top;
      if (typeof t4 !== "number")
        return t4.$sub();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t6 = t1.right;
      t7 = oldOptimalLocalCullRect.right;
      if (typeof t6 !== "number")
        return t6.$sub();
      if (typeof t7 !== "number")
        return B.iae(t7);
      t8 = t1.bottom;
      t9 = oldOptimalLocalCullRect.bottom;
      if (typeof t8 !== "number")
        return t8.$sub();
      if (typeof t9 !== "number")
        return B.iae(t9);
      t1 = A.PersistedPicture__predictTrend(t2 - t3, t1.get$width());
      if (typeof t1 !== "number")
        return B.iae(t1);
      t2 = _this._exactLocalCullRect;
      t10 = t2.top;
      t2 = A.PersistedPicture__predictTrend(t4 - t5, t2.get$height());
      if (typeof t10 !== "number")
        return t10.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t5 = _this._exactLocalCullRect;
      t4 = t5.right;
      t5 = A.PersistedPicture__predictTrend(t6 - t7, t5.get$width());
      if (typeof t4 !== "number")
        return t4.$add();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t7 = _this._exactLocalCullRect;
      t6 = t7.bottom;
      t7 = A.PersistedPicture__predictTrend(t8 - t9, t7.get$height());
      if (typeof t6 !== "number")
        return t6.$add();
      if (typeof t7 !== "number")
        return B.iae(t7);
      t7 = A.Rect$fromLTRB(t3 - t1, t10 - t2, t4 + t5, t6 + t7);
      t6 = _this.localPaintBounds;
      t6.toString;
      newLocalCullRect = t7.intersect$1(t6);
      _this._requiresRepaint = !B.boolConversionCheck(J.$eq$(_this._optimalLocalCullRect, newLocalCullRect));
      _this._optimalLocalCullRect = newLocalCullRect;
    },
    _applyPaint$1(oldSurface) {
      var t1, oldCanvas, t2, t3, _this = this;
      type$.nullable_PersistedPicture._as(oldSurface);
      t1 = oldSurface == null;
      oldCanvas = t1 ? null : oldSurface.__engine$_canvas;
      t2 = _this._requiresRepaint = false;
      if (B.boolConversionCheck(_this.picture.recordingCanvas.get$didDraw())) {
        t3 = _this._optimalLocalCullRect;
        t3.toString;
        t3 = B.boolConversionCheck(J.get$isEmpty$asx(t3));
      } else
        t3 = true;
      if (t3) {
        A._recycleCanvas(oldCanvas);
        if (!t1)
          oldSurface.__engine$_canvas = null;
        t1 = _this.rootElement;
        if (t1 != null)
          A.removeAllChildren(t1);
        t1 = _this.__engine$_canvas;
        if (t1 != null ? !B.boolConversionCheck(J.$eq$(t1, oldCanvas)) : t2)
          A._recycleCanvas(_this.__engine$_canvas);
        _this.__engine$_canvas = null;
        return;
      }
      _this.applyPaint$1(oldCanvas);
    },
    matchForUpdate$1(existingSurface) {
      var t1, t2, didRequireBitmap, requiresBitmap, oldCanvas, t3, t4, oldPixelCount, _this = this;
      type$.PersistedPicture._as(existingSurface);
      t1 = existingSurface.picture;
      t2 = _this.picture;
      if (B.boolConversionCheck(J.$eq$(t1, t2)))
        return 0;
      t1 = t1.recordingCanvas;
      if (!B.boolConversionCheck(t1.get$didDraw()))
        return 1;
      didRequireBitmap = t1.renderStrategy.hasArbitraryPaint;
      requiresBitmap = t2.recordingCanvas.renderStrategy.hasArbitraryPaint;
      if (didRequireBitmap !== requiresBitmap)
        return 1;
      else if (!requiresBitmap)
        return 1;
      else {
        oldCanvas = type$.nullable_BitmapCanvas._as(existingSurface.__engine$_canvas);
        if (oldCanvas == null)
          return 1;
        else {
          t1 = _this._exactLocalCullRect;
          t1.toString;
          if (!B.boolConversionCheck(oldCanvas.doesFitBounds$2(t1, _this._density)))
            return 1;
          else {
            t1 = A.BitmapCanvas_widthToPhysical(_this._exactLocalCullRect.get$width());
            t2 = A.BitmapCanvas_heightToPhysical(_this._exactLocalCullRect.get$height());
            if (typeof t1 !== "number")
              return t1.$mul();
            if (typeof t2 !== "number")
              return B.iae(t2);
            t3 = oldCanvas.widthInBitmapPixels;
            t4 = oldCanvas.heightInBitmapPixels;
            if (typeof t3 !== "number")
              return t3.$mul();
            if (typeof t4 !== "number")
              return B.iae(t4);
            oldPixelCount = t3 * t4;
            if (oldPixelCount === 0)
              return 1;
            return 1 - t1 * t2 / oldPixelCount;
          }
        }
      }
    },
    applyPaint$1(oldCanvas) {
      type$.nullable_EngineCanvas._as(oldCanvas);
      if (B.boolConversionCheck(this.picture.recordingCanvas.renderStrategy.hasArbitraryPaint))
        this._applyBitmapPaint$1(oldCanvas);
      else
        this._applyDomPaint$1(oldCanvas);
    },
    _applyDomPaint$1(oldCanvas) {
      var t1, domCanvas, t2, _this = this;
      type$.nullable_EngineCanvas._as(oldCanvas);
      A._recycleCanvas(_this.__engine$_canvas);
      t1 = _this.rootElement;
      t1.toString;
      domCanvas = A.DomCanvas$(t1);
      _this.__engine$_canvas = domCanvas;
      A.removeAllChildren(t1);
      t1 = _this.picture.recordingCanvas;
      t1.toString;
      t2 = _this._optimalLocalCullRect;
      t2.toString;
      t1.apply$2(domCanvas, t2);
    },
    _applyBitmapPaint$1(oldCanvas) {
      var t1, t2, _this = this;
      type$.nullable_EngineCanvas._as(oldCanvas);
      if (oldCanvas instanceof A.BitmapCanvas) {
        t1 = _this._optimalLocalCullRect;
        t1.toString;
        t1 = B.boolConversionCheck(oldCanvas.doesFitBounds$2(t1, _this._density)) && B.boolConversionCheck(oldCanvas.isReusable$0());
      } else
        t1 = false;
      if (t1) {
        t1 = _this._optimalLocalCullRect;
        t1.toString;
        oldCanvas.set$bounds(t1);
        _this.__engine$_canvas = oldCanvas;
        oldCanvas.setElementCache$1(_this._elementCache);
        oldCanvas.clear$0(0);
        t1 = _this.picture.recordingCanvas;
        t1.toString;
        t2 = _this._optimalLocalCullRect;
        t2.toString;
        t1.apply$2(oldCanvas, t2);
      } else {
        A._recycleCanvas(oldCanvas);
        t1 = _this.__engine$_canvas;
        if (t1 instanceof A.BitmapCanvas)
          t1.setElementCache$1(null);
        _this.__engine$_canvas = null;
        J.add$1$ax($.paintQueue, A.PaintRequest$(_this._optimalLocalCullRect.get$size(), new A.PersistedPicture__applyBitmapPaint_closure(_this)));
      }
    },
    _findOrCreateCanvas$1(bounds) {
      var canvasSize, t1, bestRecycledCanvas, lastPixelCount, i, t2, candidate, candidateSize, t3, candidatePixelCount, isSmaller, requestedPixelCount, canvas, _this = this;
      type$.Rect._as(bounds);
      canvasSize = bounds.get$size();
      t1 = J.getInterceptor$asx($._recycledCanvases);
      bestRecycledCanvas = null;
      lastPixelCount = 1 / 0;
      i = 0;
      while (true) {
        t2 = t1.get$length($._recycledCanvases);
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (!(i < t2))
          break;
        c$0: {
          candidate = t1.$index($._recycledCanvases, i);
          if (!B.boolConversionCheck(candidate.isReusable$0()))
            break c$0;
          candidateSize = candidate.get$size();
          t2 = candidateSize.get$width();
          t3 = candidateSize.get$height();
          if (typeof t2 !== "number")
            return t2.$mul();
          if (typeof t3 !== "number")
            return B.iae(t3);
          candidatePixelCount = t2 * t3;
          isSmaller = candidatePixelCount < lastPixelCount;
          if (candidate.doesFitBounds$2(bounds, _this._density) && isSmaller) {
            t2 = bounds.get$width();
            t3 = bounds.get$height();
            if (typeof t2 !== "number")
              return t2.$mul();
            if (typeof t3 !== "number")
              return B.iae(t3);
            requestedPixelCount = t2 * t3;
            if (!(isSmaller && requestedPixelCount > 1 && candidatePixelCount / requestedPixelCount > 4)) {
              if (B.boolConversionCheck(J.$eq$(candidateSize.get$width(), canvasSize.get$width())) && B.boolConversionCheck(J.$eq$(candidateSize.get$height(), canvasSize.get$height()))) {
                bestRecycledCanvas = candidate;
                break;
              }
              lastPixelCount = candidatePixelCount;
              bestRecycledCanvas = candidate;
            }
          }
        }
        ++i;
      }
      if (bestRecycledCanvas != null) {
        t1.remove$1($._recycledCanvases, bestRecycledCanvas);
        bestRecycledCanvas.set$bounds(bounds);
        bestRecycledCanvas.setElementCache$1(_this._elementCache);
        return bestRecycledCanvas;
      }
      canvas = A.BitmapCanvas$(bounds, _this.picture.recordingCanvas.renderStrategy, _this._density);
      canvas.setElementCache$1(_this._elementCache);
      return canvas;
    },
    _applyTranslate$0() {
      var t1 = this.rootElement;
      t1.toString;
      A.DomCSSStyleDeclarationExtension_set_transform(B.getProperty(t1, "style", type$.JavaScriptObject), "translate(" + B.S(this.dx) + "px, " + B.S(this.dy) + "px)");
    },
    apply$0() {
      this._applyTranslate$0();
      this._applyPaint$1(null);
    },
    build$0() {
      this._computeOptimalCullRect$1(null);
      this._requiresRepaint = true;
      this.super$PersistedSurface$build();
    },
    update$1(oldSurface) {
      var t1, t2, densityChanged, _this = this;
      type$.PersistedPicture._as(oldSurface);
      _this.super$PersistedSurface$update(oldSurface);
      _this.set$_elementCache(oldSurface._elementCache);
      if (oldSurface !== _this)
        oldSurface.set$_elementCache(null);
      if (!B.boolConversionCheck(J.$eq$(_this.dx, oldSurface.dx)) || !B.boolConversionCheck(J.$eq$(_this.dy, oldSurface.dy)))
        _this._applyTranslate$0();
      _this._computeOptimalCullRect$1(oldSurface);
      t1 = _this.picture;
      t2 = oldSurface.picture;
      if (t1 == null ? t2 == null : t1 === t2) {
        t1 = _this.__engine$_canvas;
        densityChanged = t1 instanceof A.BitmapCanvas && !B.boolConversionCheck(J.$eq$(_this._density, t1.get$density()));
        if (B.boolConversionCheck(_this._requiresRepaint) || densityChanged)
          _this._applyPaint$1(oldSurface);
        else
          _this.set$__engine$_canvas(oldSurface.__engine$_canvas);
      } else
        _this._applyPaint$1(oldSurface);
    },
    retain$0() {
      var _this = this;
      _this.super$PersistedSurface$retain();
      _this._computeOptimalCullRect$1(_this);
      if (B.boolConversionCheck(_this._requiresRepaint))
        _this._applyPaint$1(_this);
    },
    discard$0() {
      A._recycleCanvas(this.__engine$_canvas);
      this.__engine$_canvas = null;
      this.super$PersistedSurface$discard();
    },
    set$__engine$_canvas(_canvas) {
      this.__engine$_canvas = type$.nullable_EngineCanvas._as(_canvas);
    },
    set$_elementCache(_elementCache) {
      this._elementCache = type$.nullable_CrossFrameCache_JavaScriptObject._as(_elementCache);
    },
    set$_optimalLocalCullRect(_optimalLocalCullRect) {
      this._optimalLocalCullRect = type$.nullable_Rect._as(_optimalLocalCullRect);
    },
    set$_exactLocalCullRect(_exactLocalCullRect) {
      this._exactLocalCullRect = type$.nullable_Rect._as(_exactLocalCullRect);
    }
  };
  A.RecordingCanvas.prototype = {
    get$pictureBounds() {
      return this._pictureBounds;
    },
    get$didDraw() {
      return this._didDraw;
    },
    endRecording$0() {
      this.set$_pictureBounds(this._paintBounds.computeBounds$0());
      this._recordingEnded = true;
    },
    apply$2(engineCanvas, clipRect) {
      type$.EngineCanvas._as(engineCanvas);
      this.applyCommands$2(engineCanvas, type$.Rect._as(clipRect));
      engineCanvas.endOfPaint$0();
    },
    applyCommands$2(engineCanvas, clipRect) {
      var len, i, len0, i0, command, e, t1, t2, t3, t4, exception;
      type$.EngineCanvas._as(engineCanvas);
      type$.Rect._as(clipRect);
      try {
        t1 = this._pictureBounds;
        t1.toString;
        t2 = this._commands;
        t3 = J.getInterceptor$asx(t2);
        if (B.boolConversionCheck(A.rectContainsOther(clipRect, t1))) {
          len = t3.get$length(t2);
          i = 0;
          while (true) {
            t1 = i;
            t4 = len;
            if (typeof t1 !== "number")
              return t1.$lt();
            if (typeof t4 !== "number")
              return B.iae(t4);
            if (!(t1 < t4))
              break;
            t3.$index(t2, i).apply$1(engineCanvas);
            t1 = i;
            if (typeof t1 !== "number")
              return t1.$add();
            i = t1 + 1;
          }
        } else {
          len0 = t3.get$length(t2);
          i0 = 0;
          while (true) {
            t1 = i0;
            t4 = len0;
            if (typeof t1 !== "number")
              return t1.$lt();
            if (typeof t4 !== "number")
              return B.iae(t4);
            if (!(t1 < t4))
              break;
            c$0: {
              command = t3.$index(t2, i0);
              if (command instanceof A.DrawCommand)
                if (B.boolConversionCheck(command.isInvisible$1(clipRect)))
                  break c$0;
              command.apply$1(engineCanvas);
            }
            t1 = i0;
            if (typeof t1 !== "number")
              return t1.$add();
            i0 = t1 + 1;
          }
        }
      } catch (exception) {
        e = B.unwrapException(exception);
        if (!B.boolConversionCheck(A.isNsErrorFailureException(e)))
          throw exception;
      }
    },
    save$0() {
      var t1, _this = this;
      _this._paintBounds.saveTransformsAndClip$0();
      J.add$1$ax(_this._commands, C.C_PaintSave);
      t1 = _this._saveCount;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_saveCount(t1 + 1);
    },
    saveLayerWithoutBounds$1(paint) {
      var t1, _this = this;
      type$.SurfacePaint._as(paint);
      _this.renderStrategy.hasArbitraryPaint = true;
      J.add$1$ax(_this._commands, C.C_PaintSave);
      _this._paintBounds.saveTransformsAndClip$0();
      t1 = _this._saveCount;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_saveCount(t1 + 1);
    },
    saveLayer$2(bounds, paint) {
      var t1, _this = this;
      type$.Rect._as(bounds);
      type$.SurfacePaint._as(paint);
      _this.renderStrategy.hasArbitraryPaint = true;
      J.add$1$ax(_this._commands, C.C_PaintSave);
      _this._paintBounds.saveTransformsAndClip$0();
      t1 = _this._saveCount;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_saveCount(t1 + 1);
    },
    restore$0() {
      var t1, t2, _this = this;
      if (!B.boolConversionCheck(_this._recordingEnded)) {
        t1 = _this._saveCount;
        if (typeof t1 !== "number")
          return t1.$gt();
        t1 = t1 > 1;
      } else
        t1 = false;
      if (t1)
        _this._paintBounds.restoreTransformsAndClip$0();
      t1 = _this._commands;
      t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t2.get$isNotEmpty(t1)) && t2.get$last(t1) instanceof A.PaintSave)
        t2.removeLast$0(t1);
      else
        t2.add$1(t1, C.C_PaintRestore);
      t1 = _this._saveCount;
      if (typeof t1 !== "number")
        return t1.$sub();
      _this.set$_saveCount(t1 - 1);
    },
    translate$2(dx, dy) {
      B._asDouble(dx);
      B._asDouble(dy);
      this._paintBounds.translate$2(dx, dy);
      J.add$1$ax(this._commands, A.PaintTranslate$(dx, dy));
    },
    scale$2(sx, sy) {
      B._asDouble(sx);
      B._asDouble(sy);
      this._paintBounds.scale$2(sx, sy);
      J.add$1$ax(this._commands, A.PaintScale$(sx, sy));
    },
    transform$1(matrix4) {
      type$.Float32List._as(matrix4);
      this._paintBounds.transform$1(matrix4);
      J.add$1$ax(this._commands, A.PaintTransform$(matrix4));
    },
    clipRect$2(rect, clipOp) {
      var command;
      type$.Rect._as(rect);
      type$.ClipOp._as(clipOp);
      command = A.PaintClipRect$(rect, clipOp);
      switch (clipOp.index) {
        case 1:
          this._paintBounds.clipRect$2(rect, command);
          break;
        case 0:
          break;
      }
      this.renderStrategy.hasArbitraryPaint = true;
      J.add$1$ax(this._commands, command);
    },
    clipRRect$1(roundedRect) {
      var command;
      type$.RRect._as(roundedRect);
      command = A.PaintClipRRect$(roundedRect);
      this._paintBounds.clipRect$2(roundedRect.get$outerRect(), command);
      this.renderStrategy.hasArbitraryPaint = true;
      J.add$1$ax(this._commands, command);
    },
    clipPath$2$doAntiAlias(path, doAntiAlias) {
      var command;
      type$.Path._as(path);
      B._asBool(doAntiAlias);
      type$.SurfacePath._as(path);
      command = A.PaintClipPath$(path);
      this._paintBounds.clipRect$2(path.getBounds$0(), command);
      this.renderStrategy.hasArbitraryPaint = true;
      J.add$1$ax(this._commands, command);
    },
    drawPaint$1(paint) {
      var command, t1, _this = this;
      type$.SurfacePaint._as(paint);
      _this._didDraw = _this.renderStrategy.hasArbitraryPaint = true;
      command = A.PaintDrawPaint$(paint.get$paintData());
      t1 = _this._paintBounds;
      t1.grow$2(t1.maxPaintBounds, command);
      J.add$1$ax(_this._commands, command);
    },
    drawRect$2(rect, paint) {
      var paintSpread, command, t1, _this = this;
      type$.Rect._as(rect);
      type$.SurfacePaint._as(paint);
      if (paint.get$shader() != null)
        _this.renderStrategy.hasArbitraryPaint = true;
      _this._didDraw = true;
      paintSpread = A._getPaintSpread(paint);
      command = A.PaintDrawRect$(rect, paint.get$paintData());
      t1 = _this._paintBounds;
      if (paintSpread !== 0)
        t1.grow$2(rect.inflate$1(paintSpread), command);
      else
        t1.grow$2(rect, command);
      J.add$1$ax(_this._commands, command);
    },
    drawRRect$2(rrect, paint) {
      var paintSpread, t1, t2, t3, t4, t5, t6, t7, command, _this = this;
      type$.RRect._as(rrect);
      type$.SurfacePaint._as(paint);
      if (paint.get$shader() != null || !B.boolConversionCheck(rrect.webOnlyUniformRadii))
        _this.renderStrategy.hasArbitraryPaint = true;
      _this._didDraw = true;
      paintSpread = A._getPaintSpread(paint);
      t1 = rrect.left;
      t2 = rrect.right;
      t3 = type$.double;
      t4 = A.min(t1, t2, t3);
      if (typeof t4 !== "number")
        return t4.$sub();
      t5 = rrect.top;
      t6 = rrect.bottom;
      t7 = A.min(t5, t6, t3);
      if (typeof t7 !== "number")
        return t7.$sub();
      t2 = A.max(t1, t2, t3);
      if (typeof t2 !== "number")
        return t2.$add();
      t3 = A.max(t5, t6, t3);
      if (typeof t3 !== "number")
        return t3.$add();
      command = A.PaintDrawRRect$(rrect, paint.get$paintData());
      _this._paintBounds.growLTRB$5(t4 - paintSpread, t7 - paintSpread, t2 + paintSpread, t3 + paintSpread, command);
      J.add$1$ax(_this._commands, command);
    },
    drawDRRect$3(outer, inner, paint) {
      var innerRect, outerRect, scaledOuter, scaledInner, outerTl, outerTr, outerBl, outerBr, innerTl, innerTr, innerBl, innerBr, paintSpread, command, t2, t3, left, right, _this = this,
        t1 = type$.RRect;
      t1._as(outer);
      t1._as(inner);
      type$.SurfacePaint._as(paint);
      innerRect = inner.get$outerRect();
      outerRect = outer.get$outerRect();
      if (B.boolConversionCheck(outerRect.$eq(0, innerRect)) || !B.boolConversionCheck(J.$eq$(outerRect.intersect$1(innerRect), innerRect)))
        return;
      scaledOuter = outer.scaleRadii$0();
      scaledInner = inner.scaleRadii$0();
      outerTl = A._measureBorderRadius(scaledOuter.tlRadiusX, scaledOuter.tlRadiusY);
      outerTr = A._measureBorderRadius(scaledOuter.trRadiusX, scaledOuter.trRadiusY);
      outerBl = A._measureBorderRadius(scaledOuter.blRadiusX, scaledOuter.blRadiusY);
      outerBr = A._measureBorderRadius(scaledOuter.brRadiusX, scaledOuter.brRadiusY);
      innerTl = A._measureBorderRadius(scaledInner.tlRadiusX, scaledInner.tlRadiusY);
      innerTr = A._measureBorderRadius(scaledInner.trRadiusX, scaledInner.trRadiusY);
      innerBl = A._measureBorderRadius(scaledInner.blRadiusX, scaledInner.blRadiusY);
      innerBr = A._measureBorderRadius(scaledInner.brRadiusX, scaledInner.brRadiusY);
      if (innerTl > outerTl || innerTr > outerTr || innerBl > outerBl || innerBr > outerBr)
        return;
      _this._didDraw = _this.renderStrategy.hasArbitraryPaint = true;
      paintSpread = A._getPaintSpread(paint);
      command = A.PaintDrawDRRect$(outer, inner, paint.get$paintData());
      t1 = outer.left;
      t2 = outer.right;
      t3 = type$.double;
      left = A.min(t1, t2, t3);
      right = A.max(t1, t2, t3);
      t2 = outer.top;
      t1 = outer.bottom;
      _this._paintBounds.growLTRB$5(left - paintSpread, A.min(t2, t1, t3) - paintSpread, right + paintSpread, A.max(t2, t1, t3) + paintSpread, command);
      J.add$1$ax(_this._commands, command);
    },
    drawOval$2(rect, paint) {
      var paintSpread, command, t1, _this = this;
      type$.Rect._as(rect);
      type$.SurfacePaint._as(paint);
      _this._didDraw = _this.renderStrategy.hasArbitraryPaint = true;
      paintSpread = A._getPaintSpread(paint);
      command = A.PaintDrawOval$(rect, paint.get$paintData());
      t1 = _this._paintBounds;
      if (paintSpread !== 0)
        t1.grow$2(rect.inflate$1(paintSpread), command);
      else
        t1.grow$2(rect, command);
      J.add$1$ax(_this._commands, command);
    },
    drawCircle$3(c, radius, paint) {
      var paintSpread, command, distance, t1, t2, t3, t4, _this = this;
      type$.Offset._as(c);
      B._asDouble(radius);
      type$.SurfacePaint._as(paint);
      _this._didDraw = _this.renderStrategy.hasArbitraryPaint = true;
      paintSpread = A._getPaintSpread(paint);
      command = A.PaintDrawCircle$(c, radius, paint.get$paintData());
      distance = radius + paintSpread;
      t1 = c.get$dx();
      if (typeof t1 !== "number")
        return t1.$sub();
      t2 = c.get$dy();
      if (typeof t2 !== "number")
        return t2.$sub();
      t3 = c.get$dx();
      if (typeof t3 !== "number")
        return t3.$add();
      t4 = c.get$dy();
      if (typeof t4 !== "number")
        return t4.$add();
      _this._paintBounds.growLTRB$5(t1 - distance, t2 - distance, t3 + distance, t4 + distance, command);
      J.add$1$ax(_this._commands, command);
    },
    drawPath$2(path, paint) {
      var rect, rrect, line, t1, left, $top, width, height, inflatedHeight, inflatedSize, pathBounds, paintSpread, clone, command, _this = this;
      type$.Path._as(path);
      type$.SurfacePaint._as(paint);
      if (paint.get$shader() == null) {
        type$.SurfacePath._as(path);
        rect = path.toRect$0();
        if (rect != null) {
          _this.drawRect$2(rect, paint);
          return;
        }
        rrect = path.toRoundedRect$0();
        if (rrect != null) {
          _this.drawRRect$2(rrect, paint);
          return;
        }
        line = path.toStraightLine$0();
        if (line != null && B.boolConversionCheck(J.$eq$(paint.get$strokeWidth(), 0))) {
          t1 = type$.double;
          left = A.min(line.left, line.right, t1);
          $top = A.min(line.top, line.bottom, t1);
          width = J.abs$0$in(line.get$width());
          height = J.abs$0$in(line.get$height());
          inflatedHeight = B.boolConversionCheck(J.$eq$(line.get$height(), 0)) ? 1 : height;
          inflatedSize = A.Size$(B.boolConversionCheck(J.$eq$(line.get$width(), 0)) ? 1 : width, inflatedHeight);
          paint.set$style(C.PaintingStyle_0);
          _this.drawRect$2(A.Offset$(left, $top).$and(0, inflatedSize), paint);
          return;
        }
      }
      type$.SurfacePath._as(path);
      if (!B.boolConversionCheck(J.get$isEmpty$asx(path.pathRef))) {
        _this._didDraw = _this.renderStrategy.hasArbitraryPaint = true;
        pathBounds = path.getBounds$0();
        paintSpread = A._getPaintSpread(paint);
        if (paintSpread !== 0)
          pathBounds = pathBounds.inflate$1(paintSpread);
        clone = A.SurfacePath$shallowCopy(path);
        command = A.PaintDrawPath$(clone, paint.get$paintData());
        _this._paintBounds.grow$2(pathBounds, command);
        clone.set$fillType(path.get$fillType());
        J.add$1$ax(_this._commands, command);
      }
    },
    drawImageRect$4(image, src, dst, paint) {
      var t1, command, _this = this;
      type$.Image._as(image);
      t1 = type$.Rect;
      t1._as(src);
      t1._as(dst);
      type$.SurfacePaint._as(paint);
      t1 = _this.renderStrategy;
      _this._didDraw = t1.hasImageElements = t1.hasArbitraryPaint = true;
      command = A.PaintDrawImageRect$(image, src, dst, paint.get$paintData());
      _this._paintBounds.grow$2(dst, command);
      J.add$1$ax(_this._commands, command);
    },
    drawParagraph$2(paragraph, offset) {
      var command, paragraphBounds, t1, t2, t3, t4, t5, t6, t7, t8, _this = this;
      type$.Paragraph._as(paragraph);
      type$.Offset._as(offset);
      type$.CanvasParagraph._as(paragraph);
      if (!B.boolConversionCheck(paragraph.isLaidOut))
        return;
      _this._didDraw = true;
      if (B.boolConversionCheck(paragraph.get$hasArbitraryPaint()))
        _this.renderStrategy.hasArbitraryPaint = true;
      _this.renderStrategy.hasParagraphs = true;
      command = A.PaintDrawParagraph$(paragraph, offset);
      paragraphBounds = paragraph.get$paintBounds();
      t1 = offset.get$dx();
      t2 = paragraphBounds.left;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = offset.get$dy();
      t4 = paragraphBounds.top;
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t5 = offset.get$dx();
      t6 = paragraphBounds.right;
      if (typeof t5 !== "number")
        return t5.$add();
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = offset.get$dy();
      t8 = paragraphBounds.bottom;
      if (typeof t7 !== "number")
        return t7.$add();
      if (typeof t8 !== "number")
        return B.iae(t8);
      _this._paintBounds.growLTRB$5(t1 + t2, t3 + t4, t5 + t6, t7 + t8, command);
      J.add$1$ax(_this._commands, command);
    },
    drawShadow$4(path, color, elevation, transparentOccluder) {
      var shadowRect, command, _this = this;
      type$.Path._as(path);
      type$.Color._as(color);
      B._asDouble(elevation);
      B._asBool(transparentOccluder);
      _this._didDraw = _this.renderStrategy.hasArbitraryPaint = true;
      shadowRect = A.computePenumbraBounds(path.getBounds$0(), elevation);
      command = A.PaintDrawShadow$(type$.SurfacePath._as(path), color, elevation, transparentOccluder);
      _this._paintBounds.grow$2(shadowRect, command);
      J.add$1$ax(_this._commands, command);
    },
    set$_pictureBounds(_pictureBounds) {
      this._pictureBounds = type$.nullable_Rect._as(_pictureBounds);
    },
    set$_saveCount(_saveCount) {
      this._saveCount = B._asInt(_saveCount);
    }
  };
  A.PaintCommand.prototype = {};
  A.DrawCommand.prototype = {
    isInvisible$1(clipRect) {
      var t1, t2, t3, _this = this;
      type$.Rect._as(clipRect);
      if (B.boolConversionCheck(_this.isClippedOut))
        return true;
      t1 = _this.bottomBound;
      t2 = clipRect.top;
      if (typeof t1 !== "number")
        return t1.$lt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = true;
      if (!(t1 < t2)) {
        t1 = _this.topBound;
        t2 = clipRect.bottom;
        if (typeof t1 !== "number")
          return t1.$gt();
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (!(t1 > t2)) {
          t1 = _this.rightBound;
          t2 = clipRect.left;
          if (typeof t1 !== "number")
            return t1.$lt();
          if (typeof t2 !== "number")
            return B.iae(t2);
          if (!(t1 < t2)) {
            t1 = _this.leftBound;
            t2 = clipRect.right;
            if (typeof t1 !== "number")
              return t1.$gt();
            if (typeof t2 !== "number")
              return B.iae(t2);
            t2 = t1 > t2;
            t1 = t2;
          } else
            t1 = t3;
        } else
          t1 = t3;
      } else
        t1 = t3;
      return t1;
    },
    set$topBound(topBound) {
      this.topBound = B._asDouble(topBound);
    },
    set$rightBound(rightBound) {
      this.rightBound = B._asDouble(rightBound);
    },
    set$bottomBound(bottomBound) {
      this.bottomBound = B._asDouble(bottomBound);
    }
  };
  A.PaintSave.prototype = {
    apply$1(canvas) {
      type$.EngineCanvas._as(canvas).save$0();
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.PaintRestore.prototype = {
    apply$1(canvas) {
      type$.EngineCanvas._as(canvas).restore$0();
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.PaintTranslate.prototype = {
    apply$1(canvas) {
      type$.EngineCanvas._as(canvas).translate$2(this.dx, this.dy);
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.PaintScale.prototype = {
    apply$1(canvas) {
      type$.EngineCanvas._as(canvas).scale$2(this.sx, this.sy);
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.PaintTransform.prototype = {
    apply$1(canvas) {
      type$.EngineCanvas._as(canvas).transform$1(this.matrix4);
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.PaintClipRect.prototype = {
    apply$1(canvas) {
      type$.EngineCanvas._as(canvas).clipRect$2(this.rect, this.clipOp);
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.PaintClipRRect.prototype = {
    apply$1(canvas) {
      type$.EngineCanvas._as(canvas).clipRRect$1(this.rrect);
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.PaintClipPath.prototype = {
    apply$1(canvas) {
      type$.EngineCanvas._as(canvas).clipPath$1(this.path);
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.PaintDrawPaint.prototype = {
    apply$1(canvas) {
      type$.EngineCanvas._as(canvas).drawPaint$1(this.paint);
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.PaintDrawRect.prototype = {
    apply$1(canvas) {
      type$.EngineCanvas._as(canvas).drawRect$2(this.rect, this.paint);
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.PaintDrawRRect.prototype = {
    apply$1(canvas) {
      type$.EngineCanvas._as(canvas).drawRRect$2(this.rrect, this.paint);
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.PaintDrawDRRect.prototype = {
    PaintDrawDRRect$3(outer, inner, paint) {
      var t1 = A.Path_Path();
      t1.set$fillType(C.PathFillType_1);
      t1.addRRect$1(this.outer);
      t1.addRRect$1(this.inner);
      t1.close$0();
      this.set$path(t1);
    },
    apply$1(canvas) {
      var t1, t2;
      type$.EngineCanvas._as(canvas);
      t1 = this.paint;
      if (t1.style == null)
        t1.style = C.PaintingStyle_0;
      t2 = this.path;
      t2.toString;
      canvas.drawPath$2(t2, t1);
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    },
    set$path(path) {
      this.path = type$.nullable_Path._as(path);
    }
  };
  A.PaintDrawOval.prototype = {
    apply$1(canvas) {
      type$.EngineCanvas._as(canvas).drawOval$2(this.rect, this.paint);
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.PaintDrawCircle.prototype = {
    apply$1(canvas) {
      type$.EngineCanvas._as(canvas).drawCircle$3(this.c, this.radius, this.paint);
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.PaintDrawPath.prototype = {
    apply$1(canvas) {
      type$.EngineCanvas._as(canvas).drawPath$2(this.path, this.paint);
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.PaintDrawShadow.prototype = {
    apply$1(canvas) {
      var _this = this;
      type$.EngineCanvas._as(canvas).drawShadow$4(_this.path, _this.color, _this.elevation, _this.transparentOccluder);
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.PaintDrawImageRect.prototype = {
    apply$1(canvas) {
      var _this = this;
      type$.EngineCanvas._as(canvas).drawImageRect$4(_this.image, _this.src, _this.dst, _this.paint);
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.PaintDrawParagraph.prototype = {
    apply$1(canvas) {
      type$.EngineCanvas._as(canvas).drawParagraph$2(this.paragraph, this.offset);
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A._PaintBounds.prototype = {
    translate$2(dx, dy) {
      B._asDouble(dx);
      B._asDouble(dy);
      if (dx !== 0 || dy !== 0)
        this._currentMatrixIsIdentity = false;
      this._currentMatrix.translate$2(dx, dy);
    },
    scale$2(sx, sy) {
      B._asDouble(sx);
      B._asDouble(sy);
      if (sx !== 1 || sy !== 1)
        this._currentMatrixIsIdentity = false;
      this._currentMatrix.scale$3(sx, sy, 1);
    },
    transform$1(matrix4) {
      var m4 = A.Matrix4$fromFloat32List(type$.Float32List._as(matrix4));
      this._currentMatrix.multiply$1(m4);
      this.set$_currentMatrixIsIdentity(this._currentMatrix.isIdentity$0());
    },
    clipRect$2(rect, command) {
      var left, $top, right, bottom, t1, t2, t4, t3, _this = this;
      type$.Rect._as(rect);
      type$.DrawCommand._as(command);
      left = rect.left;
      $top = rect.top;
      right = rect.right;
      bottom = rect.bottom;
      if (!B.boolConversionCheck(_this._currentMatrixIsIdentity)) {
        t1 = $.$get$_PaintBounds__tempRectData();
        t2 = J.getInterceptor$ax(t1);
        t2.$indexSet(t1, 0, left);
        t2.$indexSet(t1, 1, $top);
        t2.$indexSet(t1, 2, right);
        t2.$indexSet(t1, 3, bottom);
        A.transformLTRB(_this._currentMatrix, t1);
        t2 = J.getInterceptor$asx(t1);
        left = t2.$index(t1, 0);
        $top = t2.$index(t1, 1);
        right = t2.$index(t1, 2);
        bottom = t2.$index(t1, 3);
      }
      if (!B.boolConversionCheck(_this._clipRectInitialized)) {
        _this._currentClipLeft = left;
        _this._currentClipTop = $top;
        _this._currentClipRight = right;
        _this._currentClipBottom = bottom;
        _this._clipRectInitialized = true;
        t4 = bottom;
        t3 = right;
        t2 = $top;
        t1 = left;
      } else {
        t1 = _this._currentClipLeft;
        if (typeof t1 !== "number")
          return B.iae(t1);
        if (left > t1) {
          _this._currentClipLeft = left;
          t1 = left;
        }
        t2 = _this._currentClipTop;
        if (typeof t2 !== "number")
          return B.iae(t2);
        if ($top > t2) {
          _this._currentClipTop = $top;
          t2 = $top;
        }
        t3 = _this._currentClipRight;
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (right < t3) {
          _this._currentClipRight = right;
          t3 = right;
        }
        t4 = _this._currentClipBottom;
        if (typeof t4 !== "number")
          return B.iae(t4);
        if (bottom < t4) {
          _this._currentClipBottom = bottom;
          t4 = bottom;
        }
      }
      if (t1 >= t3 || t2 >= t4)
        command.isClippedOut = true;
      else {
        command.leftBound = t1;
        command.set$topBound(_this._currentClipTop);
        command.set$rightBound(_this._currentClipRight);
        command.set$bottomBound(_this._currentClipBottom);
      }
    },
    grow$2(r, command) {
      type$.Rect._as(r);
      this.growLTRB$5(r.left, r.top, r.right, r.bottom, type$.DrawCommand._as(command));
    },
    growLTRB$5(left, $top, right, bottom, command) {
      var t1, t2, transformedPointLeft, transformedPointTop, transformedPointRight, transformedPointBottom, t3, t4, _this = this;
      B._asDouble(left);
      B._asDouble($top);
      B._asDouble(right);
      B._asDouble(bottom);
      type$.DrawCommand._as(command);
      if (left === right || $top === bottom) {
        command.isClippedOut = true;
        return;
      }
      if (!B.boolConversionCheck(_this._currentMatrixIsIdentity)) {
        t1 = $.$get$_PaintBounds__tempRectData();
        t2 = J.getInterceptor$ax(t1);
        t2.$indexSet(t1, 0, left);
        t2.$indexSet(t1, 1, $top);
        t2.$indexSet(t1, 2, right);
        t2.$indexSet(t1, 3, bottom);
        A.transformLTRB(_this._currentMatrix, t1);
        t2 = J.getInterceptor$asx(t1);
        transformedPointLeft = t2.$index(t1, 0);
        transformedPointTop = t2.$index(t1, 1);
        transformedPointRight = t2.$index(t1, 2);
        transformedPointBottom = t2.$index(t1, 3);
      } else {
        transformedPointBottom = bottom;
        transformedPointRight = right;
        transformedPointTop = $top;
        transformedPointLeft = left;
      }
      if (B.boolConversionCheck(_this._clipRectInitialized)) {
        t1 = _this._currentClipRight;
        if (typeof t1 !== "number")
          return B.iae(t1);
        if (transformedPointLeft >= t1) {
          command.isClippedOut = true;
          return;
        }
        t2 = _this._currentClipLeft;
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (transformedPointRight <= t2) {
          command.isClippedOut = true;
          return;
        }
        t3 = _this._currentClipBottom;
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (transformedPointTop >= t3) {
          command.isClippedOut = true;
          return;
        }
        t4 = _this._currentClipTop;
        if (typeof t4 !== "number")
          return B.iae(t4);
        if (transformedPointBottom <= t4) {
          command.isClippedOut = true;
          return;
        }
        if (transformedPointLeft < t2)
          transformedPointLeft = t2;
        if (transformedPointRight > t1)
          transformedPointRight = t1;
        if (transformedPointTop < t4)
          transformedPointTop = t4;
        if (transformedPointBottom > t3)
          transformedPointBottom = t3;
      }
      command.leftBound = transformedPointLeft;
      command.topBound = transformedPointTop;
      command.rightBound = transformedPointRight;
      command.bottomBound = transformedPointBottom;
      t1 = type$.double;
      if (B.boolConversionCheck(_this._didPaintInsideClipArea)) {
        _this.set$__engine$_left(A.min(A.min(_this.__engine$_left, transformedPointLeft, t1), transformedPointRight, t1));
        _this.set$__engine$_right(A.max(A.max(_this.__engine$_right, transformedPointLeft, t1), transformedPointRight, t1));
        _this.set$__engine$_top(A.min(A.min(_this.__engine$_top, transformedPointTop, t1), transformedPointBottom, t1));
        _this.set$__engine$_bottom(A.max(A.max(_this.__engine$_bottom, transformedPointTop, t1), transformedPointBottom, t1));
      } else {
        _this.set$__engine$_left(A.min(transformedPointLeft, transformedPointRight, t1));
        _this.set$__engine$_right(A.max(transformedPointLeft, transformedPointRight, t1));
        _this.set$__engine$_top(A.min(transformedPointTop, transformedPointBottom, t1));
        _this.set$__engine$_bottom(A.max(transformedPointTop, transformedPointBottom, t1));
      }
      _this._didPaintInsideClipArea = true;
    },
    saveTransformsAndClip$0() {
      var t1, _this = this;
      J.add$1$ax(_this.__engine$_transforms, _this._currentMatrix.clone$0());
      t1 = B.boolConversionCheck(_this._clipRectInitialized) ? A.Rect$fromLTRB(_this._currentClipLeft, _this._currentClipTop, _this._currentClipRight, _this._currentClipBottom) : null;
      J.add$1$ax(_this._clipStack, t1);
    },
    restoreTransformsAndClip$0() {
      var clipRect, _this = this;
      _this.set$_currentMatrix(J.removeLast$0$ax(_this.__engine$_transforms));
      clipRect = J.removeLast$0$ax(_this._clipStack);
      if (clipRect != null) {
        _this.set$_currentClipLeft(clipRect.left);
        _this.set$_currentClipTop(clipRect.top);
        _this.set$_currentClipRight(clipRect.right);
        _this.set$_currentClipBottom(clipRect.bottom);
        _this._clipRectInitialized = true;
      } else if (B.boolConversionCheck(_this._clipRectInitialized))
        _this._clipRectInitialized = false;
    },
    computeBounds$0() {
      var t1, maxLeft, maxRight, maxTop, maxBottom, t2, t3, left, right, $top, bottom, _this = this;
      if (!B.boolConversionCheck(_this._didPaintInsideClipArea))
        return C.Rect_0_0_0_0;
      t1 = _this.maxPaintBounds;
      maxLeft = t1.left;
      if (B.boolConversionCheck(J.get$isNaN$n(maxLeft)))
        maxLeft = -1 / 0;
      maxRight = t1.right;
      if (B.boolConversionCheck(J.get$isNaN$n(maxRight)))
        maxRight = 1 / 0;
      maxTop = t1.top;
      if (B.boolConversionCheck(J.get$isNaN$n(maxTop)))
        maxTop = -1 / 0;
      maxBottom = t1.bottom;
      if (B.boolConversionCheck(J.get$isNaN$n(maxBottom)))
        maxBottom = 1 / 0;
      t1 = _this.__engine$_left;
      t2 = _this.__engine$_right;
      t3 = type$.double;
      left = A.min(t1, t2, t3);
      right = A.max(t1, t2, t3);
      t2 = _this.__engine$_top;
      t1 = _this.__engine$_bottom;
      $top = A.min(t2, t1, t3);
      bottom = A.max(t2, t1, t3);
      if (right < maxLeft || bottom < maxTop)
        return C.Rect_0_0_0_0;
      return A.Rect$fromLTRB(A.max(left, maxLeft, t3), A.max($top, maxTop, t3), A.min(right, maxRight, t3), A.min(bottom, maxBottom, t3));
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    },
    set$__engine$_left(_left) {
      this.__engine$_left = B._asDouble(_left);
    },
    set$__engine$_top(_top) {
      this.__engine$_top = B._asDouble(_top);
    },
    set$__engine$_right(_right) {
      this.__engine$_right = B._asDouble(_right);
    },
    set$__engine$_bottom(_bottom) {
      this.__engine$_bottom = B._asDouble(_bottom);
    },
    set$_currentMatrixIsIdentity(_currentMatrixIsIdentity) {
      this._currentMatrixIsIdentity = B._asBool(_currentMatrixIsIdentity);
    },
    set$_currentMatrix(_currentMatrix) {
      this._currentMatrix = type$.Matrix4._as(_currentMatrix);
    },
    set$_currentClipLeft(_currentClipLeft) {
      this._currentClipLeft = B._asDouble(_currentClipLeft);
    },
    set$_currentClipTop(_currentClipTop) {
      this._currentClipTop = B._asDouble(_currentClipTop);
    },
    set$_currentClipRight(_currentClipRight) {
      this._currentClipRight = B._asDouble(_currentClipRight);
    },
    set$_currentClipBottom(_currentClipBottom) {
      this._currentClipBottom = B._asDouble(_currentClipBottom);
    }
  };
  A.RenderStrategy.prototype = {};
  A._WebGlRenderer.prototype = {
    drawRect$6(targetRect, gl, glProgram, gradient, widthInPixels, heightInPixels) {
      var image;
      type$.Rect._as(targetRect);
      type$.GlContext._as(gl);
      type$.GlProgram._as(glProgram);
      type$.NormalizedGradient._as(gradient);
      this.drawRectToGl$6(targetRect, gl, glProgram, gradient, B._asInt(widthInPixels), B._asInt(heightInPixels));
      image = gl.readPatternData$1(gradient.isOpaque);
      gl.bindArrayBuffer$1(null);
      gl.bindElementArrayBuffer$1(null);
      return image;
    },
    drawRectToImageUrl$6(targetRect, gl, glProgram, gradient, widthInPixels, heightInPixels) {
      var imageUrl;
      type$.Rect._as(targetRect);
      type$.GlContext._as(gl);
      this.drawRectToGl$6(targetRect, gl, type$.GlProgram._as(glProgram), type$.NormalizedGradient._as(gradient), B._asInt(widthInPixels), B._asInt(heightInPixels));
      imageUrl = gl.toImageUrl$0();
      gl.bindArrayBuffer$1(null);
      gl.bindElementArrayBuffer$1(null);
      return imageUrl;
    },
    drawRectToGl$6(targetRect, gl, glProgram, gradient, widthInPixels, heightInPixels) {
      var left, $top, right, bottom, vertices, t1, resolution, t2, t3,
        _s12_ = "u_resolution";
      type$.Rect._as(targetRect);
      type$.GlContext._as(gl);
      type$.GlProgram._as(glProgram);
      type$.NormalizedGradient._as(gradient);
      B._asInt(widthInPixels);
      B._asInt(heightInPixels);
      left = targetRect.left;
      $top = targetRect.top;
      right = targetRect.right;
      bottom = targetRect.bottom;
      vertices = A.NativeFloat32List_NativeFloat32List(8);
      t1 = vertices.length;
      if (0 >= t1)
        return B.ioore(vertices, 0);
      vertices[0] = left;
      if (1 >= t1)
        return B.ioore(vertices, 1);
      vertices[1] = $top;
      if (2 >= t1)
        return B.ioore(vertices, 2);
      vertices[2] = right;
      if (3 >= t1)
        return B.ioore(vertices, 3);
      vertices[3] = $top;
      if (4 >= t1)
        return B.ioore(vertices, 4);
      vertices[4] = right;
      if (5 >= t1)
        return B.ioore(vertices, 5);
      vertices[5] = bottom;
      if (6 >= t1)
        return B.ioore(vertices, 6);
      vertices[6] = left;
      if (7 >= t1)
        return B.ioore(vertices, 7);
      vertices[7] = bottom;
      t1 = glProgram.program;
      gl.setUniformMatrix4fv$3(gl.getUniformLocation$2(t1, "u_ctransform"), false, A.Matrix4$identity().get$storage());
      resolution = gl.getUniformLocation$2(t1, "u_scale");
      t2 = D.JSInt_methods.toDouble$0(widthInPixels);
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = D.JSInt_methods.toDouble$0(heightInPixels);
      if (typeof t3 !== "number")
        return B.iae(t3);
      gl.setUniform4f$5(resolution, 2 / t2, -2 / t3, 1, 1);
      gl.setUniform4f$5(gl.getUniformLocation$2(t1, "u_shift"), -1, 1, 0, 0);
      t3 = gl.createBuffer$0();
      t3.toString;
      gl.bindArrayBuffer$1(t3);
      gl.bufferData$2(vertices, gl.get$kStaticDraw());
      t3 = gl.glContext;
      A.vertexAttribPointerGlContext(t3, 0, 2, gl.get$kFloat(), false, 0, 0);
      gl.enableVertexAttribArray$1(0);
      gl.bindArrayBuffer$1(gl.createBuffer$0());
      gl.bufferData$2(A.NativeInt32List_NativeInt32List$fromList(B._setArrayType([4278255360, 4278190335, 4294967040, 4278255615], type$.JSArray_int)), gl.get$kStaticDraw());
      A.vertexAttribPointerGlContext(t3, 1, 4, gl.get$kUnsignedByte(), true, 0, 0);
      gl.enableVertexAttribArray$1(1);
      gl.bindElementArrayBuffer$1(gl.createBuffer$0());
      t3 = $.$get$VertexShaders_vertexIndicesForRect();
      gl.bufferElementData$2(t3, gl.get$kStaticDraw());
      if (B.boolConversionCheck(gl.containsUniform$2(t1, _s12_)))
        gl.setUniform2f$3(gl.getUniformLocation$2(t1, _s12_), D.JSInt_methods.toDouble$0(widthInPixels), D.JSInt_methods.toDouble$0(heightInPixels));
      gl.clear$0(0);
      gl.viewport$4(0, 0, D.JSInt_methods.toDouble$0(widthInPixels), D.JSInt_methods.toDouble$0(heightInPixels));
      gl.drawElements$3(gl.get$kTriangles(), J.get$length$asx(t3), gl.get$kUnsignedShort());
    },
    $isGlRenderer: 1
  };
  A.HtmlRenderer.prototype = {
    get$rendererTag() {
      return "html";
    },
    get$_fontCollection() {
      var result,
        value = this.__HtmlRenderer__fontCollection_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.HtmlFontCollection$();
        value !== $ && B.throwLateFieldADI("_fontCollection");
        this.__HtmlRenderer__fontCollection_FI = result;
        value = result;
      }
      return value;
    },
    get$fontCollection() {
      return this.get$_fontCollection();
    },
    initialize$0() {
      B.scheduleMicrotask(new A.HtmlRenderer_initialize_closure());
      A.HtmlRenderer__instance(this);
    },
    createPaint$0() {
      return A.SurfacePaint$();
    },
    createCanvas$2(recorder, cullRect) {
      type$.PictureRecorder._as(recorder);
      type$.nullable_Rect._as(cullRect);
      return A.SurfaceCanvas_SurfaceCanvas(type$.EnginePictureRecorder._as(recorder), cullRect);
    },
    createLinearGradient$6(from, to, colors, colorStops, tileMode, matrix4) {
      var t1 = type$.Offset;
      return A.GradientLinear$(t1._as(from), t1._as(to), type$.List_Color._as(colors), type$.nullable_List_double._as(colorStops), type$.TileMode._as(tileMode), type$.nullable_Float32List._as(matrix4));
    },
    createPictureRecorder$0() {
      return A.EnginePictureRecorder$();
    },
    createSceneBuilder$0() {
      return A.SurfaceSceneBuilder$();
    },
    createPath$0() {
      return A.SurfacePath$();
    },
    createTextStyle$21$background$color$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontVariations$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$shadows$textBaseline$wordSpacing(background, color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, leadingDistribution, letterSpacing, locale, shadows, textBaseline, wordSpacing) {
      var t1 = type$.nullable_Color;
      t1._as(color);
      type$.nullable_TextDecoration._as(decoration);
      t1._as(decorationColor);
      type$.nullable_TextDecorationStyle._as(decorationStyle);
      B._asDoubleQ(decorationThickness);
      type$.nullable_FontWeight._as(fontWeight);
      type$.nullable_FontStyle._as(fontStyle);
      type$.nullable_TextBaseline._as(textBaseline);
      B._asStringQ(fontFamily);
      type$.nullable_List_String._as(fontFamilyFallback);
      B._asDoubleQ(fontSize);
      B._asDoubleQ(letterSpacing);
      B._asDoubleQ(wordSpacing);
      B._asDoubleQ(height);
      type$.nullable_TextLeadingDistribution._as(leadingDistribution);
      type$.nullable_Locale._as(locale);
      t1 = type$.nullable_Paint;
      t1._as(background);
      t1._as(foreground);
      type$.nullable_List_Shadow._as(shadows);
      return A.EngineTextStyle$only(background, color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, type$.nullable_List_FontFeature._as(fontFeatures), fontSize, fontStyle, type$.nullable_List_FontVariation._as(fontVariations), fontWeight, foreground, height, leadingDistribution, letterSpacing, locale, shadows, textBaseline, wordSpacing);
    },
    createParagraphStyle$12$ellipsis$fontFamily$fontSize$fontStyle$fontWeight$height$locale$maxLines$strutStyle$textAlign$textDirection$textHeightBehavior(ellipsis, fontFamily, fontSize, fontStyle, fontWeight, height, locale, maxLines, strutStyle, textAlign, textDirection, textHeightBehavior) {
      type$.nullable_TextAlign._as(textAlign);
      type$.nullable_TextDirection._as(textDirection);
      B._asIntQ(maxLines);
      B._asStringQ(fontFamily);
      B._asDoubleQ(fontSize);
      B._asDoubleQ(height);
      type$.nullable_TextHeightBehavior._as(textHeightBehavior);
      type$.nullable_FontWeight._as(fontWeight);
      type$.nullable_FontStyle._as(fontStyle);
      type$.nullable_StrutStyle._as(strutStyle);
      return A.EngineParagraphStyle$(B._asStringQ(ellipsis), fontFamily, fontSize, fontStyle, fontWeight, height, type$.nullable_Locale._as(locale), maxLines, strutStyle, textAlign, textDirection, textHeightBehavior);
    },
    createParagraphBuilder$1(style) {
      return A.CanvasParagraphBuilder$(type$.EngineParagraphStyle._as(type$.ParagraphStyle._as(style)));
    },
    renderScene$2(scene, view) {
      return this.renderScene$body$HtmlRenderer(type$.Scene._as(scene), type$.FlutterView._as(view));
    },
    renderScene$body$HtmlRenderer(scene, view) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        t2, recorder, t1;
      var $async$renderScene$2 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = A.EnginePlatformDispatcher_instance().get$implicitView();
              t1.toString;
              type$.SurfaceScene._as(scene);
              t1 = t1.get$dom();
              t2 = scene.webOnlyRootElement;
              t2.toString;
              t1.setScene$1(t2);
              recorder = scene.timingRecorder;
              t1 = recorder == null;
              if (!t1)
                recorder.recordRasterFinish$0();
              if (!t1)
                recorder.submitTimings$0();
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$renderScene$2, $async$completer);
    },
    clearFragmentProgramCache$0() {
    },
    createLineMetrics$9$ascent$baseline$descent$hardBreak$height$left$lineNumber$unscaledAscent$width(ascent, baseline, descent, hardBreak, height, left, lineNumber, unscaledAscent, width) {
      B._asBool(hardBreak);
      B._asDouble(ascent);
      B._asDouble(descent);
      B._asDouble(unscaledAscent);
      B._asDouble(height);
      B._asDouble(width);
      B._asDouble(left);
      return A.EngineLineMetrics$(ascent, B._asDouble(baseline), descent, hardBreak, height, left, B._asInt(lineNumber), unscaledAscent, width);
    },
    $isRenderer: 1
  };
  A.SurfaceScene.prototype = {
    toImageSync$2(width, height) {
      B._asInt(width);
      B._asInt(height);
      throw B.wrapException(B.UnsupportedError$("toImageSync is not supported on the Web"));
    },
    dispose$0() {
    },
    $isScene: 1
  };
  A.PersistedScene.prototype = {
    PersistedScene$1(oldLayer) {
      this.transform = A.Matrix4$identity();
    },
    recomputeTransformAndClip$0() {
      var browserDpr = A.EngineFlutterDisplay_instance().get$browserDevicePixelRatio(),
        bounds = J.$div$n(A.window0().get$physicalSize(), browserDpr);
      this.localClipBounds = A.Rect$fromLTRB(0, 0, bounds.get$width(), bounds.get$height());
      this.projectedClip = null;
    },
    get$localTransformInverse() {
      var t1 = this._localTransformInverse;
      return t1 == null ? this._localTransformInverse = A.Matrix4$identity() : t1;
    },
    createElement$0() {
      return this.defaultCreateElement$1("flt-scene");
    },
    apply$0() {
    }
  };
  A.SurfaceSceneBuilder.prototype = {
    SurfaceSceneBuilder$0() {
      J.add$1$ax(this._surfaceStack, A.PersistedScene$($.SurfaceSceneBuilder__lastFrameScene));
    },
    get$_persistedScene() {
      return type$.PersistedScene._as(J.get$first$ax(this._surfaceStack));
    },
    get$_currentSurface() {
      return J.get$last$ax(this._surfaceStack);
    },
    _pushSurface$1$1(surface, $T) {
      B.checkTypeBound($T, type$.PersistedContainerSurface, "T", "_pushSurface");
      $T._as(surface);
      if (surface.get$oldLayer() != null)
        surface.get$oldLayer().set$state(C.PersistedSurfaceState_3);
      this._adoptSurface$1(surface);
      J.add$1$ax(this._surfaceStack, surface);
      return surface;
    },
    _addSurface$1(surface) {
      this._adoptSurface$1(type$.PersistedSurface._as(surface));
    },
    _adoptSurface$1(surface) {
      type$.PersistedSurface._as(surface);
      this.get$_currentSurface().appendChild$1(surface);
    },
    pushOffset$3$oldLayer(dx, dy, oldLayer) {
      B._asDouble(dx);
      B._asDouble(dy);
      return this._pushSurface$1$1(A.PersistedOffset$(type$.nullable_PersistedOffset._as(type$.nullable_OffsetEngineLayer._as(oldLayer)), dx, dy), type$.PersistedOffset);
    },
    pushTransform$2$oldLayer(matrix4, oldLayer) {
      var matrix;
      type$.Float64List._as(matrix4);
      type$.nullable_TransformEngineLayer._as(oldLayer);
      if (matrix4.length !== 16)
        throw B.wrapException(B.ArgumentError$('"matrix4" must have 16 entries.', null));
      if (B.boolConversionCheck(J.$eq$(J.get$length$asx(this._surfaceStack), 1))) {
        B.boolConversionCheck(A.debugEmulateFlutterTesterEnvironment());
        matrix = A.Matrix4$identity().get$storage();
      } else
        matrix = A.toMatrix32(matrix4);
      return this._pushSurface$1$1(A.PersistedTransform$(type$.nullable_PersistedTransform._as(oldLayer), matrix), type$.PersistedTransform);
    },
    pushTransform$1(matrix4) {
      return this.pushTransform$2$oldLayer(matrix4, null);
    },
    pushClipRect$3$clipBehavior$oldLayer(rect, clipBehavior, oldLayer) {
      type$.Rect._as(rect);
      type$.Clip._as(clipBehavior);
      return this._pushSurface$1$1(A.PersistedClipRect$(type$.nullable_PersistedClipRect._as(type$.nullable_ClipRectEngineLayer._as(oldLayer)), rect, clipBehavior), type$.PersistedClipRect);
    },
    pushClipRRect$3$clipBehavior$oldLayer(rrect, clipBehavior, oldLayer) {
      type$.RRect._as(rrect);
      type$.nullable_Clip._as(clipBehavior);
      return this._pushSurface$1$1(A.PersistedClipRRect$(type$.nullable_ClipRRectEngineLayer._as(oldLayer), rrect, clipBehavior), type$.PersistedClipRRect);
    },
    pushClipPath$3$clipBehavior$oldLayer(path, clipBehavior, oldLayer) {
      type$.Path._as(path);
      type$.Clip._as(clipBehavior);
      return this._pushSurface$1$1(A.PersistedClipPath$(type$.nullable_PersistedClipPath._as(type$.nullable_ClipPathEngineLayer._as(oldLayer)), path, clipBehavior), type$.PersistedClipPath);
    },
    pushOpacity$3$offset$oldLayer(alpha, offset, oldLayer) {
      B._asInt(alpha);
      type$.Offset._as(offset);
      return this._pushSurface$1$1(A.PersistedOpacity$(type$.nullable_PersistedOpacity._as(type$.nullable_OpacityEngineLayer._as(oldLayer)), alpha, offset), type$.PersistedOpacity);
    },
    addRetained$1(retainedLayer) {
      retainedLayer = type$.PersistedContainerSurface._as(type$.EngineLayer._as(retainedLayer));
      retainedLayer.tryRetain$0();
      this._adoptSurface$1(retainedLayer);
    },
    pop$0() {
      J.removeLast$0$ax(this._surfaceStack);
    },
    addPerformanceOverlay$2(enabledOptions, bounds) {
      B._asInt(enabledOptions);
      type$.Rect._as(bounds);
      this._addPerformanceOverlay$5(enabledOptions, bounds.left, bounds.right, bounds.top, bounds.bottom);
    },
    _addPerformanceOverlay$5(enabledOptions, left, right, $top, bottom) {
      B._asInt(enabledOptions);
      B._asDouble(left);
      B._asDouble(right);
      B._asDouble($top);
      B._asDouble(bottom);
      if (!B.boolConversionCheck($.SurfaceSceneBuilder__didWarnAboutPerformanceOverlay)) {
        $.SurfaceSceneBuilder__didWarnAboutPerformanceOverlay = true;
        $.$get$printWarning().call$1("The performance overlay isn't supported on the web");
      }
    },
    addPicture$4$isComplexHint$willChangeHint(offset, picture, isComplexHint, willChangeHint) {
      var hints;
      type$.Offset._as(offset);
      type$.Picture._as(picture);
      B._asBool(isComplexHint);
      B._asBool(willChangeHint);
      hints = isComplexHint ? 1 : 0;
      if (willChangeHint)
        hints |= 2;
      this._addSurface$1(A.PersistedPicture$(offset.get$dx(), offset.get$dy(), type$.EnginePicture._as(picture), hints));
    },
    build$0() {
      var recorder = B.boolConversionCheck(A.FrameTimingRecorder_frameTimingsEnabled()) ? A.FrameTimingRecorder$() : null,
        t1 = recorder == null;
      if (!t1)
        recorder.recordBuildFinish$0();
      if (!t1)
        recorder.recordRasterStart$0();
      A.timeAction("preroll_frame", new A.SurfaceSceneBuilder_build_closure(this), type$.void);
      return A.timeAction("apply_frame", new A.SurfaceSceneBuilder_build_closure0(this, recorder), type$.SurfaceScene);
    },
    $isSceneBuilder: 1
  };
  A.NormalizedGradient.prototype = {
    setupUniforms$2(gl, glProgram) {
      var t1, t2, t3, t4, t5, t6, i, t7, t8, t9, t10, t11, _this = this;
      type$.GlContext._as(gl);
      type$.GlProgram._as(glProgram);
      t1 = _this.thresholdCount;
      if (typeof t1 !== "number")
        return B.iae(t1);
      t2 = glProgram.program;
      t3 = _this._bias;
      t4 = J.getInterceptor$asx(t3);
      t5 = _this._scale;
      t6 = J.getInterceptor$asx(t5);
      i = 0;
      for (; i < t1; ++i) {
        t7 = "" + i;
        t8 = i * 4;
        t9 = t8 + 1;
        t10 = t8 + 2;
        t11 = t8 + 3;
        gl.setUniform4f$5(gl.getUniformLocation$2(t2, "bias_" + t7), t4.$index(t3, t8), t4.$index(t3, t9), t4.$index(t3, t10), t4.$index(t3, t11));
        gl.setUniform4f$5(gl.getUniformLocation$2(t2, "scale_" + t7), t6.$index(t5, t8), t6.$index(t5, t9), t6.$index(t5, t10), t6.$index(t5, t11));
      }
      t1 = _this._thresholds;
      t3 = J.getInterceptor$asx(t1);
      i = 0;
      while (true) {
        t4 = t3.get$length(t1);
        if (typeof t4 !== "number")
          return B.iae(t4);
        if (!(i < t4))
          break;
        gl.setUniform4f$5(gl.getUniformLocation$2(t2, "threshold_" + D.JSInt_methods._tdivFast$1(i, 4)), t3.$index(t1, i), t3.$index(t1, i + 1), t3.$index(t1, i + 2), t3.$index(t1, i + 3));
        i += 4;
      }
    }
  };
  A.SharedCanvas.prototype = {
    checkOutContext$2(width, height) {
      var t1;
      B._asInt(width);
      B._asInt(height);
      t1 = this.__engine$_canvas;
      if (t1 == null)
        this.__engine$_canvas = A.OffScreenCanvas$(width, height);
      else
        t1.resize$2(width, height);
      t1 = this.__engine$_canvas;
      t1.toString;
      return A.GlContext_GlContext(t1);
    },
    checkInContext$0() {
    }
  };
  A.EngineGradient.prototype = {
    toString$0(_) {
      return "Gradient()";
    },
    $isShader: 1,
    $isGradient: 1
  };
  A.GradientLinear.prototype = {
    createPaintStyle$3(ctx, shaderBounds, density) {
      var t1, t2;
      type$.nullable_JavaScriptObject._as(ctx);
      type$.nullable_Rect._as(shaderBounds);
      B._asDouble(density);
      t1 = this.tileMode;
      t2 = J.getInterceptor$(t1);
      if (B.boolConversionCheck(t2.$eq(t1, C.TileMode_0)) || B.boolConversionCheck(t2.$eq(t1, C.TileMode_3)))
        return this._createCanvasGradient$3(ctx, shaderBounds, density);
      else
        return this._createGlGradient$3(ctx, shaderBounds, density);
    },
    _createCanvasGradient$3(ctx, shaderBounds, density) {
      var matrix4, offsetX, offsetY, t1, t2, t3, t4, centerX, centerY, gradient, _this = this;
      type$.nullable_JavaScriptObject._as(ctx);
      type$.nullable_Rect._as(shaderBounds);
      B._asDouble(density);
      matrix4 = _this.matrix4;
      offsetX = shaderBounds.left;
      offsetY = shaderBounds.top;
      t1 = _this.from;
      t2 = _this.to;
      if (matrix4 != null) {
        t3 = t1.get$dx();
        t4 = t2.get$dx();
        if (typeof t3 !== "number")
          return t3.$add();
        if (typeof t4 !== "number")
          return B.iae(t4);
        centerX = (t3 + t4) / 2 - offsetX;
        t4 = t1.get$dy();
        t3 = t2.get$dy();
        if (typeof t4 !== "number")
          return t4.$add();
        if (typeof t3 !== "number")
          return B.iae(t3);
        centerY = (t4 + t3) / 2 - offsetY;
        t3 = t1.get$dx();
        if (typeof t3 !== "number")
          return t3.$sub();
        t1 = t1.get$dy();
        if (typeof t1 !== "number")
          return t1.$sub();
        matrix4.transform$2(t3 - centerX, t1 - centerY);
        t1 = matrix4.transformedX;
        if (typeof t1 !== "number")
          return t1.$add();
        t3 = matrix4.transformedY;
        if (typeof t3 !== "number")
          return t3.$add();
        t4 = t2.get$dx();
        if (typeof t4 !== "number")
          return t4.$sub();
        t2 = t2.get$dy();
        if (typeof t2 !== "number")
          return t2.$sub();
        matrix4.transform$2(t4 - centerX, t2 - centerY);
        ctx.toString;
        t2 = matrix4.transformedX;
        if (typeof t2 !== "number")
          return t2.$add();
        t4 = matrix4.transformedY;
        if (typeof t4 !== "number")
          return t4.$add();
        gradient = A.DomCanvasRenderingContext2DExtension_createLinearGradient(ctx, t1 + centerX - offsetX, t3 + centerY - offsetY, t2 + centerX - offsetX, t4 + centerY - offsetY);
      } else {
        ctx.toString;
        t3 = t1.get$dx();
        if (typeof t3 !== "number")
          return t3.$sub();
        t1 = t1.get$dy();
        if (typeof t1 !== "number")
          return t1.$sub();
        t4 = t2.get$dx();
        if (typeof t4 !== "number")
          return t4.$sub();
        t2 = t2.get$dy();
        if (typeof t2 !== "number")
          return t2.$sub();
        gradient = A.DomCanvasRenderingContext2DExtension_createLinearGradient(ctx, t3 - offsetX, t1 - offsetY, t4 - offsetX, t2 - offsetY);
      }
      A._addColorStopsToCanvasGradient(gradient, _this.colors, _this.colorStops, J.$eq$(_this.tileMode, C.TileMode_3));
      return gradient;
    },
    createImageBitmap$3(shaderBounds, density, createDataUrl) {
      var widthInPixels, heightInPixels, gl, normalizedGradient, t1, glProgram, t2, fromX, fromY, toX, toY, dx, dy, $length, sinVal, cosVal, isRepeated, originX, originY, originTranslation, rotationZ, storage, gradientTransform, m4, center, result, _this = this;
      type$.nullable_Rect._as(shaderBounds);
      B._asDouble(density);
      B._asBool(createDataUrl);
      widthInPixels = J.ceil$0$n(shaderBounds.get$width());
      heightInPixels = J.ceil$0$n(shaderBounds.get$height());
      A.initWebGl();
      gl = $.$get$_sharedCanvas().checkOutContext$2(widthInPixels, heightInPixels);
      gl.setViewportSize$2(widthInPixels, heightInPixels);
      normalizedGradient = A.NormalizedGradient_NormalizedGradient(_this.colors, _this.colorStops);
      t1 = _this.tileMode;
      glProgram = gl.cacheProgram$2(A.VertexShaders_writeBaseVertexShader(), _this._createLinearFragmentShader$2(normalizedGradient, t1));
      gl.useProgram$1(glProgram);
      t2 = _this.from;
      fromX = t2.get$dx();
      fromY = t2.get$dy();
      t2 = _this.to;
      toX = t2.get$dx();
      toY = t2.get$dy();
      dx = toX - fromX;
      dy = toY - fromY;
      $length = A.sqrt(dx * dx + dy * dy);
      t2 = $length < 11920929e-14;
      sinVal = t2 ? 0 : -dy / $length;
      cosVal = t2 ? 1 : dx / $length;
      isRepeated = !B.boolConversionCheck(J.$eq$(t1, C.TileMode_0));
      if (isRepeated) {
        t1 = shaderBounds.get$width();
        if (typeof t1 !== "number")
          return t1.$div();
        originX = t1 / 2;
      } else {
        t1 = shaderBounds.left;
        if (typeof t1 !== "number")
          return B.iae(t1);
        originX = (fromX + toX) / 2 - t1;
      }
      if (isRepeated) {
        t1 = shaderBounds.get$height();
        if (typeof t1 !== "number")
          return t1.$div();
        originY = t1 / 2;
      } else {
        t1 = shaderBounds.top;
        if (typeof t1 !== "number")
          return B.iae(t1);
        originY = (fromY + toY) / 2 - t1;
      }
      originTranslation = A.Matrix4_Matrix4$translationValues(-originX, -originY, 0);
      rotationZ = A.Matrix4$identity();
      storage = rotationZ.get$storage();
      t1 = storage.length;
      if (0 >= t1)
        return B.ioore(storage, 0);
      storage[0] = cosVal;
      if (1 >= t1)
        return B.ioore(storage, 1);
      storage[1] = sinVal;
      if (4 >= t1)
        return B.ioore(storage, 4);
      storage[4] = -sinVal;
      if (5 >= t1)
        return B.ioore(storage, 5);
      storage[5] = cosVal;
      gradientTransform = A.Matrix4$identity();
      gradientTransform.translate$1(0.5);
      if ($length > 11920929e-14)
        gradientTransform.scale$1(1 / $length);
      t1 = _this.matrix4;
      if (t1 != null) {
        m4 = A.Matrix4$zero0();
        m4.copyInverse$1(A.Matrix4$fromFloat32List(t1.matrix));
        center = shaderBounds.get$center();
        gradientTransform.translate$2(J.$negate$in(center.get$dx()), J.$negate$in(center.get$dy()));
        gradientTransform.multiply$1(m4);
        gradientTransform.translate$2(center.get$dx(), center.get$dy());
      }
      gradientTransform.multiply$1(rotationZ);
      gradientTransform.multiply$1(originTranslation);
      normalizedGradient.setupUniforms$2(gl, glProgram);
      t1 = glProgram.program;
      gl.setUniformMatrix4fv$3(gl.getUniformLocation$2(t1, "m_gradient"), false, gradientTransform.get$storage());
      gl.setUniform2f$3(gl.getUniformLocation$2(t1, "u_resolution"), D.JSInt_methods.toDouble$0(widthInPixels), D.JSInt_methods.toDouble$0(heightInPixels));
      result = new A.GradientLinear_createImageBitmap_closure(createDataUrl, shaderBounds, gl, glProgram, normalizedGradient, widthInPixels, heightInPixels).call$0();
      $.$get$_sharedCanvas().checkInContext$0();
      return result;
    },
    _createGlGradient$3(ctx, shaderBounds, density) {
      var imageBitmap, t1;
      type$.nullable_JavaScriptObject._as(ctx);
      imageBitmap = this.createImageBitmap$3(type$.nullable_Rect._as(shaderBounds), B._asDouble(density), false);
      ctx.toString;
      t1 = A.DomCanvasRenderingContext2DExtension_createPattern(ctx, imageBitmap, "no-repeat");
      t1.toString;
      return t1;
    },
    _createLinearFragmentShader$2(gradient, tileMode) {
      var builder, fragColor, method, probeName;
      type$.NormalizedGradient._as(gradient);
      type$.TileMode._as(tileMode);
      builder = A.ShaderBuilder$fragment(A.webGLVersion());
      builder.floatPrecision = 1;
      builder.addIn$2$name(11, "v_color");
      builder.addUniform$2$name(9, "u_resolution");
      builder.addUniform$2$name(14, "m_gradient");
      fragColor = builder.get$fragmentColor();
      method = builder.addMethod$1("main");
      method.addStatement$1("vec4 localCoord = m_gradient * vec4(gl_FragCoord.x, u_resolution.y - gl_FragCoord.y, 0, 1);");
      method.addStatement$1("float st = localCoord.x;");
      probeName = A._writeSharedGradientShader(builder, method, gradient, tileMode);
      method.addStatement$1(B.S(fragColor.name) + " = " + probeName + " * scale + bias;");
      return builder.build$0();
    }
  };
  A.ModeHtmlColorFilter.prototype = {$isModeHtmlColorFilter: 1};
  A.MatrixHtmlColorFilter.prototype = {$isMatrixHtmlColorFilter: 1};
  A.ShaderBuilder.prototype = {
    get$fragmentColor() {
      var t1 = this._fragmentColorDeclaration;
      if (t1 == null)
        t1 = this._fragmentColorDeclaration = A.ShaderDeclaration$(B.boolConversionCheck(this.isWebGl2) ? "gFragColor" : "gl_FragColor", 11, 3);
      return t1;
    },
    addIn$2$name(dataType, $name) {
      var t1, attrib;
      B._asInt(dataType);
      B._asStringQ($name);
      if ($name == null) {
        t1 = this._attribCounter;
        if (typeof t1 !== "number")
          return t1.$add();
        this.set$_attribCounter(t1 + 1);
        t1 = "attr_" + B.S(t1);
      } else
        t1 = $name;
      attrib = A.ShaderDeclaration$(t1, dataType, 1);
      J.add$1$ax(this.declarations, attrib);
      return attrib;
    },
    addUniform$2$name(dataType, $name) {
      var t1, uniform;
      B._asInt(dataType);
      B._asStringQ($name);
      if ($name == null) {
        t1 = this._uniformCounter;
        if (typeof t1 !== "number")
          return t1.$add();
        this.set$_uniformCounter(t1 + 1);
        t1 = "uni_" + B.S(t1);
      } else
        t1 = $name;
      uniform = A.ShaderDeclaration$(t1, dataType, 2);
      J.add$1$ax(this.declarations, uniform);
      return uniform;
    },
    addOut$2$name(dataType, $name) {
      var t1, varying;
      B._asInt(dataType);
      B._asStringQ($name);
      if ($name == null) {
        t1 = this._varyingCounter;
        if (typeof t1 !== "number")
          return t1.$add();
        this.set$_varyingCounter(t1 + 1);
        t1 = "output_" + B.S(t1);
      } else
        t1 = $name;
      varying = A.ShaderDeclaration$(t1, dataType, 3);
      J.add$1$ax(this.declarations, varying);
      return varying;
    },
    _writeVariableDeclaration$2(sb, variable) {
      var t1, t2, _this = this,
        _s8_ = "varying ";
      type$.StringBuffer._as(sb);
      type$.ShaderDeclaration._as(variable);
      t1 = variable.storage;
      switch (t1) {
        case 0:
          _this.__engine$_buffer.write$1("const ");
          break;
        case 1:
          if (B.boolConversionCheck(_this.isWebGl2))
            t2 = "in ";
          else
            t2 = B.boolConversionCheck(_this._isFragmentShader) ? _s8_ : "attribute ";
          _this.__engine$_buffer.write$1(t2);
          break;
        case 2:
          _this.__engine$_buffer.write$1("uniform ");
          break;
        case 3:
          t2 = B.boolConversionCheck(_this.isWebGl2) ? "out " : _s8_;
          _this.__engine$_buffer.write$1(t2);
          break;
      }
      t2 = _this.__engine$_buffer;
      t2.write$1(B.S(A.ShaderBuilder_typeToString(variable.dataType)) + " " + B.S(variable.name));
      if (B.boolConversionCheck(J.$eq$(t1, 0)))
        t2.write$1(" = ");
      t2.writeln$1(";");
    },
    addMethod$1($name) {
      var method = A.ShaderMethod$(B._asString($name));
      J.add$1$ax(this._methods, method);
      return method;
    },
    build$0() {
      var t2, _this = this,
        t1 = B.boolConversionCheck(_this.isWebGl2);
      if (t1)
        _this.__engine$_buffer.writeln$1("#version 300 es");
      t2 = _this.floatPrecision;
      if (t2 != null)
        _this.__engine$_buffer.writeln$1("precision " + B.S(_this._precisionToString$1(t2)) + " float;");
      if (t1 && _this._fragmentColorDeclaration != null) {
        t1 = _this._fragmentColorDeclaration;
        t1.toString;
        _this._writeVariableDeclaration$2(_this.__engine$_buffer, t1);
      }
      for (t1 = J.get$iterator$ax(_this.declarations), t2 = _this.__engine$_buffer; B.boolConversionCheck(t1.moveNext$0());)
        _this._writeVariableDeclaration$2(t2, t1.get$current());
      for (t1 = J.get$iterator$ax(_this._methods); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().write$1(t2);
      return J.toString$0$(t2);
    },
    _precisionToString$1(precision) {
      var t1;
      B._asInt(precision);
      if (precision === 0)
        t1 = "lowp";
      else
        t1 = precision === 1 ? "mediump" : "highp";
      return t1;
    },
    set$_attribCounter(_attribCounter) {
      this._attribCounter = B._asInt(_attribCounter);
    },
    set$_varyingCounter(_varyingCounter) {
      this._varyingCounter = B._asInt(_varyingCounter);
    },
    set$_uniformCounter(_uniformCounter) {
      this._uniformCounter = B._asInt(_uniformCounter);
    }
  };
  A.ShaderMethod.prototype = {
    indent$0() {
      var t1 = this.__engine$_indentLevel;
      if (typeof t1 !== "number")
        return t1.$add();
      this.set$__engine$_indentLevel(t1 + 1);
    },
    unindent$0() {
      var t1 = this.__engine$_indentLevel;
      if (typeof t1 !== "number")
        return t1.$sub();
      this.set$__engine$_indentLevel(t1 - 1);
    },
    addStatement$1(statement) {
      J.add$1$ax(this._statements, B._asString(statement));
    },
    write$1(buffer) {
      type$.StringBuffer._as(buffer);
      buffer.writeln$1("void " + B.S(this.name) + "() {");
      J.forEach$1$ax(this._statements, buffer.get$writeln());
      buffer.writeln$1("}");
    },
    set$__engine$_indentLevel(_indentLevel) {
      this.__engine$_indentLevel = B._asInt(_indentLevel);
    }
  };
  A.ShaderDeclaration.prototype = {};
  A.PersistedSurfaceState.prototype = {
    _enumToString$0() {
      return "PersistedSurfaceState." + B.S(this._core$_name);
    }
  };
  A.PersistedSurface.prototype = {
    get$oldLayer() {
      return this._oldLayer.value;
    },
    set$state(newState) {
      this.__engine$_state = type$.PersistedSurfaceState._as(newState);
    },
    tryRetain$0() {
      if (B.boolConversionCheck(this.get$isActive()))
        this.set$state(C.PersistedSurfaceState_2);
      else
        this.revive$0();
    },
    revive$0() {
      this.set$state(C.PersistedSurfaceState_0);
    },
    get$isCreated() {
      return J.$eq$(this.__engine$_state, C.PersistedSurfaceState_0);
    },
    get$isActive() {
      return J.$eq$(this.__engine$_state, C.PersistedSurfaceState_1);
    },
    get$isPendingRetention() {
      return J.$eq$(this.__engine$_state, C.PersistedSurfaceState_2);
    },
    canUpdateAsMatch$1(oldSurface) {
      type$.PersistedSurface._as(oldSurface);
      return B.boolConversionCheck(oldSurface.get$isActive()) && B.boolConversionCheck(J.$eq$(this.get$runtimeType(0), oldSurface.get$runtimeType(0)));
    },
    get$childContainer() {
      return this.rootElement;
    },
    build$0() {
      var _this = this;
      _this.set$rootElement(_this.createElement$0());
      A.applyWebkitClipFix(_this.rootElement);
      _this.apply$0();
      _this.set$state(C.PersistedSurfaceState_1);
    },
    adoptElements$1(oldSurface) {
      type$.PersistedSurface._as(oldSurface);
      this.set$rootElement(oldSurface.rootElement);
      oldSurface.rootElement = null;
      oldSurface.set$state(C.PersistedSurfaceState_4);
    },
    update$1(oldSurface) {
      this.adoptElements$1(type$.PersistedSurface._as(oldSurface));
      this.set$state(C.PersistedSurfaceState_1);
    },
    retain$0() {
      if (B.boolConversionCheck(this.get$isPendingRetention()))
        J.add$1$ax($.retainedSurfaces, this);
    },
    discard$0() {
      var t1 = this.rootElement;
      t1.toString;
      B._callMethodUnchecked0(t1, "remove", type$.void);
      this.rootElement = null;
      this.set$state(C.PersistedSurfaceState_4);
    },
    dispose$0() {
    },
    defaultCreateElement$1(tagName) {
      var element = A.createDomElement(B._asString(tagName));
      A.DomCSSStyleDeclarationExtension_set_position(B.getProperty(element, "style", type$.JavaScriptObject), "absolute");
      return element;
    },
    get$localTransformInverse() {
      return null;
    },
    recomputeTransformAndClip$0() {
      var _this = this;
      _this.set$transform(_this.parent.transform);
      _this.projectedClip = _this.localClipBounds = null;
    },
    preroll$1(prerollContext) {
      type$.PrerollSurfaceContext._as(prerollContext);
      this.recomputeTransformAndClip$0();
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    },
    set$rootElement(rootElement) {
      this.rootElement = type$.nullable_JavaScriptObject._as(rootElement);
    },
    set$transform(transform) {
      this.transform = type$.nullable_Matrix4._as(transform);
    },
    set$localClipBounds(localClipBounds) {
      this.localClipBounds = type$.nullable_Rect._as(localClipBounds);
    },
    $isEngineLayer: 1
  };
  A.PersistedLeafSurface.prototype = {};
  A.PersistedContainerSurface.prototype = {
    appendChild$1(child) {
      type$.PersistedSurface._as(child);
      J.add$1$ax(this.__engine$_children, child);
      child.parent = this;
    },
    preroll$1(prerollContext) {
      var t1, t2, $length, i;
      type$.PrerollSurfaceContext._as(prerollContext);
      this.super$PersistedSurface$preroll(prerollContext);
      t1 = this.__engine$_children;
      t2 = J.getInterceptor$asx(t1);
      $length = t2.get$length(t1);
      for (i = 0; i < $length; ++i)
        t2.$index(t1, i).preroll$1(prerollContext);
    },
    recomputeTransformAndClip$0() {
      var _this = this;
      _this.set$transform(_this.parent.transform);
      _this.projectedClip = _this.localClipBounds = null;
    },
    build$0() {
      var t1, t2, len, containerElement, t3, t4, i, child, t5, _this = this;
      _this.super$PersistedSurface$build();
      t1 = _this.__engine$_children;
      t2 = J.getInterceptor$asx(t1);
      len = t2.get$length(t1);
      containerElement = _this.get$childContainer();
      for (t3 = type$.void, t4 = type$.PersistedContainerSurface, i = 0; i < len; ++i) {
        child = t2.$index(t1, i);
        if (B.boolConversionCheck(child.get$isPendingRetention()))
          child.retain$0();
        else if (child instanceof A.PersistedContainerSurface && child.get$oldLayer() != null) {
          t5 = child.get$oldLayer();
          t5.toString;
          child.update$1(t4._as(t5));
        } else
          child.build$0();
        containerElement.toString;
        t5 = child.rootElement;
        t5.toString;
        B._callMethodUnchecked1(containerElement, "append", t5, t3);
        child.__engine$_index = i;
      }
      _this._debugValidateContainerNewState$0();
    },
    matchForUpdate$1(existingSurface) {
      type$.nullable_PersistedContainerSurface._as(existingSurface);
      return 1;
    },
    update$1(oldSurface) {
      var t1, t2, _this = this;
      type$.PersistedContainerSurface._as(oldSurface);
      _this.super$PersistedSurface$update(oldSurface);
      if (B.boolConversionCheck(J.get$isEmpty$asx(oldSurface.__engine$_children)))
        _this._updateZeroToMany$1(oldSurface);
      else {
        t1 = _this.__engine$_children;
        t2 = J.getInterceptor$asx(t1);
        if (B.boolConversionCheck(J.$eq$(t2.get$length(t1), 1)))
          _this._updateManyToOne$1(oldSurface);
        else if (B.boolConversionCheck(t2.get$isEmpty(t1)))
          A.PersistedContainerSurface__discardActiveChildren(oldSurface);
        else
          _this._updateManyToMany$1(oldSurface);
      }
    },
    _debugValidateContainerNewState$0() {
    },
    _updateZeroToMany$1(oldSurface) {
      var containerElement, t2, t3, $length, t4, i, newChild, t5,
        t1 = type$.PersistedContainerSurface;
      t1._as(oldSurface);
      containerElement = this.get$childContainer();
      t2 = this.__engine$_children;
      t3 = J.getInterceptor$asx(t2);
      $length = t3.get$length(t2);
      for (t4 = type$.void, i = 0; i < $length; ++i) {
        newChild = t3.$index(t2, i);
        if (B.boolConversionCheck(newChild.get$isPendingRetention()))
          newChild.retain$0();
        else if (newChild instanceof A.PersistedContainerSurface && newChild.get$oldLayer() != null) {
          t5 = newChild.get$oldLayer();
          t5.toString;
          newChild.update$1(t1._as(t5));
        } else
          newChild.build$0();
        newChild.__engine$_index = i;
        containerElement.toString;
        t5 = newChild.rootElement;
        t5.toString;
        B._callMethodUnchecked1(containerElement, "append", t5, t4);
      }
    },
    _updateManyToOne$1(oldSurface) {
      var newChild, t2, t3, bestMatch, bestScore, i, candidate, score, t4, oldChild, _this = this, _s6_ = "append",
        t1 = type$.PersistedContainerSurface;
      t1._as(oldSurface);
      newChild = J.$index$asx(_this.__engine$_children, 0);
      newChild.__engine$_index = 0;
      if (B.boolConversionCheck(newChild.get$isPendingRetention())) {
        t1 = newChild.rootElement;
        t1.toString;
        if (!B.boolConversionCheck(J.$eq$(A.DomNodeExtension_get_parent(t1), _this.get$childContainer()))) {
          t1 = _this.get$childContainer();
          t1.toString;
          t2 = newChild.rootElement;
          t2.toString;
          B._callMethodUnchecked1(t1, _s6_, t2, type$.void);
        }
        newChild.retain$0();
        A.PersistedContainerSurface__discardActiveChildren(oldSurface);
        return;
      }
      if (newChild instanceof A.PersistedContainerSurface && newChild.get$oldLayer() != null) {
        t2 = newChild.get$oldLayer();
        t2.toString;
        t1._as(t2);
        t1 = t2.rootElement;
        t1.toString;
        if (!B.boolConversionCheck(J.$eq$(A.DomNodeExtension_get_parent(t1), _this.get$childContainer()))) {
          t1 = _this.get$childContainer();
          t1.toString;
          t3 = t2.rootElement;
          t3.toString;
          B._callMethodUnchecked1(t1, _s6_, t3, type$.void);
        }
        newChild.update$1(t2);
        A.PersistedContainerSurface__discardActiveChildren(oldSurface);
        return;
      }
      t1 = oldSurface.__engine$_children;
      t2 = J.getInterceptor$asx(t1);
      bestMatch = null;
      bestScore = 2;
      i = 0;
      while (true) {
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i < t3))
          break;
        c$0: {
          candidate = t2.$index(t1, i);
          if (!B.boolConversionCheck(newChild.canUpdateAsMatch$1(candidate)))
            break c$0;
          score = newChild.matchForUpdate$1(candidate);
          if (score < bestScore) {
            bestScore = score;
            bestMatch = candidate;
          }
        }
        ++i;
      }
      if (bestMatch != null) {
        newChild.update$1(bestMatch);
        t3 = newChild.rootElement;
        t3.toString;
        if (!B.boolConversionCheck(J.$eq$(A.DomNodeExtension_get_parent(t3), _this.get$childContainer()))) {
          t3 = _this.get$childContainer();
          t3.toString;
          t4 = newChild.rootElement;
          t4.toString;
          B._callMethodUnchecked1(t3, _s6_, t4, type$.void);
        }
      } else {
        newChild.build$0();
        t3 = _this.get$childContainer();
        t3.toString;
        t4 = newChild.rootElement;
        t4.toString;
        B._callMethodUnchecked1(t3, _s6_, t4, type$.void);
      }
      i = 0;
      while (true) {
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i < t3))
          break;
        oldChild = t2.$index(t1, i);
        if (oldChild !== bestMatch && B.boolConversionCheck(oldChild.get$isActive()))
          oldChild.discard$0();
        ++i;
      }
    },
    _updateManyToMany$1(oldSurface) {
      var containerElement, matches, t2, t3, t4, indexMapNew, indexMapOld, requiresDomInserts, topInNew, t5, newChild, isReparenting, matchedOldChild, t6, indexInOld, backfill, _this = this,
        t1 = type$.PersistedContainerSurface;
      t1._as(oldSurface);
      containerElement = _this.get$childContainer();
      matches = _this._matchChildren$1(oldSurface);
      t2 = _this.__engine$_children;
      t3 = J.getInterceptor$asx(t2);
      t4 = type$.JSArray_int;
      indexMapNew = null;
      indexMapOld = null;
      requiresDomInserts = false;
      topInNew = 0;
      while (true) {
        t5 = t3.get$length(t2);
        if (typeof t5 !== "number")
          return B.iae(t5);
        if (!(topInNew < t5))
          break;
        newChild = t3.$index(t2, topInNew);
        if (B.boolConversionCheck(newChild.get$isPendingRetention())) {
          t5 = newChild.rootElement;
          t5.toString;
          isReparenting = !B.boolConversionCheck(J.$eq$(A.DomNodeExtension_get_parent(t5), containerElement));
          newChild.retain$0();
          matchedOldChild = newChild;
        } else if (newChild instanceof A.PersistedContainerSurface && newChild.get$oldLayer() != null) {
          t5 = newChild.get$oldLayer();
          t5.toString;
          t1._as(t5);
          t6 = t5.rootElement;
          t6.toString;
          isReparenting = !B.boolConversionCheck(J.$eq$(A.DomNodeExtension_get_parent(t6), containerElement));
          newChild.update$1(t5);
          matchedOldChild = t5;
        } else {
          matchedOldChild = matches.$index(0, newChild);
          if (matchedOldChild != null) {
            t5 = matchedOldChild.rootElement;
            t5.toString;
            isReparenting = !B.boolConversionCheck(J.$eq$(A.DomNodeExtension_get_parent(t5), containerElement));
            newChild.update$1(matchedOldChild);
          } else {
            newChild.build$0();
            isReparenting = true;
          }
        }
        indexInOld = matchedOldChild != null && !isReparenting ? matchedOldChild.__engine$_index : -1;
        if (!requiresDomInserts && indexInOld !== topInNew) {
          indexMapNew = B._setArrayType([], t4);
          indexMapOld = B._setArrayType([], t4);
          for (backfill = 0; backfill < topInNew; ++backfill) {
            D.JSArray_methods.add$1(indexMapNew, backfill);
            D.JSArray_methods.add$1(indexMapOld, backfill);
          }
          requiresDomInserts = true;
        }
        if (requiresDomInserts && indexInOld !== -1) {
          indexMapNew.toString;
          D.JSArray_methods.add$1(indexMapNew, topInNew);
          indexMapOld.toString;
          D.JSArray_methods.add$1(indexMapOld, indexInOld);
        }
        newChild.__engine$_index = topInNew;
        ++topInNew;
      }
      if (requiresDomInserts) {
        indexMapOld.toString;
        _this._insertChildDomNodes$2(indexMapNew, indexMapOld);
      }
      A.PersistedContainerSurface__discardActiveChildren(oldSurface);
    },
    _insertChildDomNodes$2(indexMapNew, indexMapOld) {
      var stationaryIndices, t1, i, t2, containerElement, t3, t4, t5, refNode, isStationary, t6;
      type$.nullable_List_int._as(indexMapNew);
      stationaryIndices = A.longestIncreasingSubsequence(type$.List_int._as(indexMapOld));
      t1 = J.getInterceptor$asx(stationaryIndices);
      i = 0;
      while (true) {
        t2 = t1.get$length(stationaryIndices);
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (!(i < t2))
          break;
        indexMapNew.toString;
        t2 = t1.$index(stationaryIndices, i);
        t2.toString;
        t1.$indexSet(stationaryIndices, i, J.$index$asx(indexMapNew, t2));
        ++i;
      }
      containerElement = this.get$childContainer();
      t2 = this.__engine$_children;
      t3 = J.getInterceptor$asx(t2);
      t4 = t3.get$length(t2);
      if (typeof t4 !== "number")
        return t4.$sub();
      i = t4 - 1;
      t4 = type$.JavaScriptObject;
      t5 = type$.void;
      refNode = null;
      for (; i >= 0; --i, refNode = t6) {
        indexMapNew.toString;
        isStationary = J.indexOf$1$asx(indexMapNew, i) !== -1 && B.boolConversionCheck(t1.contains$1(stationaryIndices, i));
        t6 = t3.$index(t2, i).rootElement;
        t6.toString;
        if (!isStationary)
          if (refNode == null) {
            containerElement.toString;
            B._callMethodUnchecked1(containerElement, "append", t6, t5);
          } else {
            containerElement.toString;
            B._callMethodUnchecked2(containerElement, "insertBefore", t6, refNode, t4);
          }
      }
    },
    _matchChildren$1(oldSurface) {
      var t1, t2, newUnfilteredChildCount, t3, t4, oldUnfilteredChildCount, newChildren, i, child, oldChildren, newChildCount, oldChildCount, allMatches, indexInNew, newChild, indexInOld, oldChild, result, match, matchedChild, newChildNeedsMatch;
      type$.PersistedContainerSurface._as(oldSurface);
      t1 = this.__engine$_children;
      t2 = J.getInterceptor$asx(t1);
      newUnfilteredChildCount = t2.get$length(t1);
      t3 = oldSurface.__engine$_children;
      t4 = J.getInterceptor$asx(t3);
      oldUnfilteredChildCount = t4.get$length(t3);
      newChildren = B._setArrayType([], type$.JSArray_PersistedSurface);
      for (i = 0; i < newUnfilteredChildCount; ++i) {
        child = t2.$index(t1, i);
        if (B.boolConversionCheck(child.get$isCreated()) && child.get$oldLayer() == null)
          D.JSArray_methods.add$1(newChildren, child);
      }
      oldChildren = B._setArrayType([], type$.JSArray_nullable_PersistedSurface);
      for (i = 0; i < oldUnfilteredChildCount; ++i) {
        child = t4.$index(t3, i);
        if (B.boolConversionCheck(child.get$isActive()))
          D.JSArray_methods.add$1(oldChildren, child);
      }
      newChildCount = newChildren.length;
      oldChildCount = oldChildren.length;
      if (newChildCount === 0 || oldChildCount === 0)
        return C.Map_empty0;
      allMatches = B._setArrayType([], type$.JSArray__PersistedSurfaceMatch);
      for (indexInNew = 0; indexInNew < newChildCount; ++indexInNew) {
        if (!(indexInNew < newChildren.length))
          return B.ioore(newChildren, indexInNew);
        newChild = newChildren[indexInNew];
        for (indexInOld = 0; indexInOld < oldChildCount; ++indexInOld) {
          if (!(indexInOld < oldChildren.length))
            return B.ioore(oldChildren, indexInOld);
          oldChild = oldChildren[indexInOld];
          if (oldChild == null || !B.boolConversionCheck(newChild.canUpdateAsMatch$1(oldChild)))
            continue;
          D.JSArray_methods.add$1(allMatches, A._PersistedSurfaceMatch$(newChild.matchForUpdate$1(oldChild), newChild, indexInOld));
        }
      }
      D.JSArray_methods.sort$1(allMatches, new A.PersistedContainerSurface__matchChildren_closure());
      result = B.LinkedHashMap_LinkedHashMap$_empty(type$.nullable_PersistedSurface, type$.PersistedSurface);
      for (i = 0; i < allMatches.length; ++i) {
        match = allMatches[i];
        t1 = match.oldChildIndex;
        t1.toString;
        matchedChild = D.JSArray_methods.$index(oldChildren, t1);
        t2 = match.newChild;
        newChildNeedsMatch = result.$index(0, t2) == null;
        if (matchedChild != null && newChildNeedsMatch) {
          D.JSArray_methods.$indexSet(oldChildren, t1, null);
          result.$indexSet(0, t2, matchedChild);
        }
      }
      return result;
    },
    retain$0() {
      var t1, t2, len, i;
      this.super$PersistedSurface$retain();
      t1 = this.__engine$_children;
      t2 = J.getInterceptor$asx(t1);
      len = t2.get$length(t1);
      for (i = 0; i < len; ++i)
        t2.$index(t1, i).retain$0();
    },
    revive$0() {
      var t1, t2, len, i;
      this.super$PersistedSurface$revive();
      t1 = this.__engine$_children;
      t2 = J.getInterceptor$asx(t1);
      len = t2.get$length(t1);
      for (i = 0; i < len; ++i)
        t2.$index(t1, i).revive$0();
    },
    discard$0() {
      this.super$PersistedSurface$discard();
      A.PersistedContainerSurface__discardActiveChildren(this);
    }
  };
  A._PersistedSurfaceMatch.prototype = {
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.PrerollSurfaceContext.prototype = {};
  A.PersistedTransform.prototype = {
    get$matrix4() {
      var t1 = this._matrix4;
      return t1 == null ? this._matrix4 = A.Matrix4$fromFloat32List(this._matrixStorage) : t1;
    },
    recomputeTransformAndClip$0() {
      var _this = this,
        t1 = _this.parent.transform;
      t1.toString;
      _this.set$transform(t1.multiplied$1(_this.get$matrix4()));
      _this.projectedClip = null;
    },
    get$localTransformInverse() {
      var _this = this;
      if (_this._localTransformInverse == null)
        _this.set$_localTransformInverse(A.Matrix4_tryInvert(_this.get$matrix4()));
      return _this._localTransformInverse;
    },
    createElement$0() {
      var element = A.DomDocumentExtension_createElement(self.document, "flt-transform");
      A.setElementStyle(element, "position", "absolute");
      A.setElementStyle(element, "transform-origin", "0 0 0");
      return element;
    },
    apply$0() {
      var t1 = this.rootElement;
      t1.toString;
      A.DomCSSStyleDeclarationExtension_set_transform(B.getProperty(t1, "style", type$.JavaScriptObject), A.float64ListToCssTransform(this._matrixStorage));
    },
    update$1(oldSurface) {
      var t1, t2, matrixChanged, t3, t4, i, t5, _this = this;
      type$.PersistedTransform._as(oldSurface);
      _this.super$PersistedContainerSurface$update(oldSurface);
      t1 = oldSurface._matrixStorage;
      t2 = _this._matrixStorage;
      if (t1 == null ? t2 == null : t1 === t2) {
        _this.set$_matrix4(oldSurface._matrix4);
        _this.set$_localTransformInverse(oldSurface._localTransformInverse);
        return;
      }
      t3 = J.getInterceptor$asx(t2);
      t4 = J.getInterceptor$asx(t1);
      i = 0;
      while (true) {
        t5 = t3.get$length(t2);
        if (typeof t5 !== "number")
          return B.iae(t5);
        if (!(i < t5)) {
          matrixChanged = false;
          break;
        }
        if (!B.boolConversionCheck(J.$eq$(t3.$index(t2, i), t4.$index(t1, i)))) {
          matrixChanged = true;
          break;
        }
        ++i;
      }
      if (matrixChanged)
        _this.apply$0();
      else {
        _this.set$_matrix4(oldSurface._matrix4);
        _this.set$_localTransformInverse(oldSurface._localTransformInverse);
      }
    },
    set$_matrix4(_matrix4) {
      this._matrix4 = type$.nullable_Matrix4._as(_matrix4);
    },
    set$_localTransformInverse(_localTransformInverse) {
      this._localTransformInverse = type$.nullable_Matrix4._as(_localTransformInverse);
    },
    $isTransformEngineLayer0: 1
  };
  A.ContextMenu.prototype = {
    disable$0() {
      if (!B.boolConversionCheck(this._enabled))
        return;
      this._enabled = false;
      A.DomEventTargetExtension_addEventListener(this.element, "contextmenu", $.$get$preventDefaultListener(), null);
    },
    enable$0() {
      if (B.boolConversionCheck(this._enabled))
        return;
      this._enabled = true;
      A.DomEventTargetExtension_removeEventListener(this.element, "contextmenu", $.$get$preventDefaultListener(), null);
    }
  };
  A.MouseCursor.prototype = {
    activateSystemCursor$1(kind) {
      var cssValue = A.MouseCursor__mapKindToCssValue(B._asStringQ(kind)),
        t1 = type$.nullable_JavaScriptObject,
        t2 = type$.JavaScriptObject;
      if (cssValue === "default") {
        t1 = B.getProperty(self.document, "body", t1);
        t1.toString;
        A.DomCSSStyleDeclarationExtension_removeProperty(B.getProperty(t1, "style", t2), "cursor");
      } else {
        t1 = B.getProperty(self.document, "body", t1);
        t1.toString;
        A.DomCSSStyleDeclarationExtension_set_cursor(B.getProperty(t1, "style", t2), cssValue);
      }
    }
  };
  A.NotoFont.prototype = {
    set$coverCount(coverCount) {
      this.coverCount = B._asInt(coverCount);
    }
  };
  A.FallbackFontComponent.prototype = {
    get$_activeFonts() {
      var result, _this = this,
        value = _this.__FallbackFontComponent__activeFonts_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = B.List_List$unmodifiable(J.where$1$ax(_this._allFonts, new A.FallbackFontComponent__activeFonts_closure()), type$.NotoFont);
        _this.__FallbackFontComponent__activeFonts_FI !== $ && B.throwLateFieldADI("_activeFonts");
        _this.set$__FallbackFontComponent__activeFonts_FI(result);
        value = result;
      }
      return value;
    },
    get$fonts() {
      return this.get$_activeFonts();
    },
    set$__FallbackFontComponent__activeFonts_FI(__FallbackFontComponent__activeFonts_FI) {
      this.__FallbackFontComponent__activeFonts_FI = type$.List_NotoFont._as(__FallbackFontComponent__activeFonts_FI);
    },
    set$coverCount(coverCount) {
      this.coverCount = B._asInt(coverCount);
    }
  };
  A.HighContrastSupport.prototype = {
    get$_onHighContrastChangeListener() {
      var result,
        value = this.__HighContrastSupport__onHighContrastChangeListener_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.createDomEventListener(this.get$_onHighContrastChange());
        value !== $ && B.throwLateFieldADI("_onHighContrastChangeListener");
        this.__HighContrastSupport__onHighContrastChangeListener_FI = result;
        value = result;
      }
      return value;
    },
    get$isHighContrastEnabled() {
      return A.DomMediaQueryListExtension_get_matches(this._highContrastMediaQuery);
    },
    addListener$1(listener) {
      var t1, t2;
      type$.void_Function_bool._as(listener);
      t1 = this._listeners;
      t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t2.get$isEmpty(t1)))
        B._callMethodUnchecked1(this._highContrastMediaQuery, "addListener", this.get$_onHighContrastChangeListener(), type$.void);
      t2.add$1(t1, listener);
    },
    removeListener$1(listener) {
      var t1 = this._listeners,
        t2 = J.getInterceptor$ax(t1);
      t2.remove$1(t1, type$.void_Function_bool._as(listener));
      if (B.boolConversionCheck(t2.get$isEmpty(t1)))
        B._callMethodUnchecked1(this._highContrastMediaQuery, "removeListener", this.get$_onHighContrastChangeListener(), type$.void);
    },
    _onHighContrastChange$1($event) {
      var t2,
        t1 = A.DomMediaQueryListEventExtension_get_matches(type$.JavaScriptObject._as($event));
      t1.toString;
      for (t2 = J.get$iterator$ax(this._listeners); B.boolConversionCheck(t2.moveNext$0());)
        t2.get$current().call$1(t1);
    }
  };
  A.EnginePlatformDispatcher.prototype = {
    EnginePlatformDispatcher$0() {
      var t1, _this = this;
      _this._addBrightnessMediaQueryListener$0();
      $.$get$HighContrastSupport_instance().addListener$1(_this.get$_updateHighContrast());
      _this._addFontSizeObserver$0();
      _this._addLocaleChangedListener$0();
      A.registerHotRestartListener(_this.get$dispose());
      _this.get$_appLifecycleState().addListener$1(_this.get$_setAppLifecycleState());
      _this.get$_viewFocusBinding().init$0();
      t1 = B.getProperty(self.document, "body", type$.nullable_JavaScriptObject);
      if (t1 != null)
        B._callMethodUnchecked1(t1, "prepend", _this.accessibilityPlaceholder, type$.void);
      _this.set$_onViewDisposedListener(_this.get$viewManager().get$onViewDisposed().listen$1(new A.EnginePlatformDispatcher_closure(_this)));
    },
    get$_onViewDisposedListener() {
      return this.__EnginePlatformDispatcher__onViewDisposedListener_A;
    },
    set$_onViewDisposedListener(value) {
      this.set$__EnginePlatformDispatcher__onViewDisposedListener_A(type$.StreamSubscription_int._as(value));
    },
    dispose$0() {
      var _this = this;
      _this._removeBrightnessMediaQueryListener$0();
      _this._disconnectFontSizeObserver$0();
      _this._removeLocaleChangedListener$0();
      $.$get$HighContrastSupport_instance().removeListener$1(_this.get$_updateHighContrast());
      _this.get$_appLifecycleState().removeListener$1(_this.get$_setAppLifecycleState());
      _this.get$_viewFocusBinding().dispose$0();
      B._callMethodUnchecked0(_this.accessibilityPlaceholder, "remove", type$.void);
      _this.get$_onViewDisposedListener().cancel$0();
      _this.get$viewManager().dispose$0();
    },
    invokeOnPlatformConfigurationChanged$0() {
      A.invoke(null, null);
    },
    get$viewManager() {
      var result,
        value = this.__EnginePlatformDispatcher_viewManager_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.FlutterViewManager$(this);
        value !== $ && B.throwLateFieldADI("viewManager");
        this.__EnginePlatformDispatcher_viewManager_FI = result;
        value = result;
      }
      return value;
    },
    get$_appLifecycleState() {
      var result, _this = this,
        value = _this.__EnginePlatformDispatcher__appLifecycleState_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.AppLifecycleState_create(_this.get$viewManager());
        _this.__EnginePlatformDispatcher__appLifecycleState_FI !== $ && B.throwLateFieldADI("_appLifecycleState");
        _this.__EnginePlatformDispatcher__appLifecycleState_FI = result;
        value = result;
      }
      return value;
    },
    get$views() {
      return this.get$viewManager().get$views();
    },
    view$1$id(id) {
      B._asInt(id);
      return J.$index$asx(this.get$viewManager(), id);
    },
    get$implicitView() {
      return type$.nullable_EngineFlutterWindow._as(J.$index$asx(this.get$viewManager(), 0));
    },
    get$onMetricsChanged() {
      return this._onMetricsChanged;
    },
    set$onMetricsChanged(callback) {
      this.set$_onMetricsChanged(type$.nullable_void_Function._as(callback));
      this.set$_onMetricsChangedZone(B.Zone_current());
    },
    invokeOnMetricsChanged$0() {
      var t1 = this._onMetricsChanged;
      if (t1 != null)
        A.invoke(t1, this._onMetricsChangedZone);
    },
    get$_viewFocusBinding() {
      var result, _this = this,
        value = _this.__EnginePlatformDispatcher__viewFocusBinding_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.ViewFocusBinding$(_this.get$viewManager(), _this.get$invokeOnViewFocusChange());
        _this.__EnginePlatformDispatcher__viewFocusBinding_FI !== $ && B.throwLateFieldADI("_viewFocusBinding");
        _this.__EnginePlatformDispatcher__viewFocusBinding_FI = result;
        value = result;
      }
      return value;
    },
    set$onViewFocusChange(callback) {
      this.set$_onViewFocusChange(type$.nullable_void_Function_ViewFocusEvent._as(callback));
      this.set$_onViewFocusChangeZone(B.Zone_current());
    },
    invokeOnViewFocusChange$1(viewFocusEvent) {
      var t1 = type$.ViewFocusEvent;
      t1._as(viewFocusEvent);
      A.invoke1(this._onViewFocusChange, this._onViewFocusChangeZone, viewFocusEvent, t1);
    },
    requestViewFocusChange$3$direction$state$viewId(direction, state, viewId) {
      B._asInt(viewId);
      type$.ViewFocusState._as(state);
      type$.ViewFocusDirection._as(direction);
      this.get$_viewFocusBinding().changeViewFocus$2(viewId, state);
    },
    get$onBeginFrame() {
      return this._onBeginFrame;
    },
    set$onBeginFrame(callback) {
      this.set$_onBeginFrame(type$.nullable_void_Function_Duration._as(callback));
      this.set$_onBeginFrameZone(B.Zone_current());
    },
    invokeOnBeginFrame$1(duration) {
      var _this = this,
        t1 = type$.Duration;
      t1._as(duration);
      _this.set$_viewsRenderedInCurrentFrame(B.LinkedHashSet_LinkedHashSet$_empty(type$.FlutterView));
      A.invoke1(_this._onBeginFrame, _this._onBeginFrameZone, duration, t1);
      _this.set$_viewsRenderedInCurrentFrame(null);
    },
    get$onDrawFrame() {
      return this._onDrawFrame;
    },
    set$onDrawFrame(callback) {
      this.set$_onDrawFrame(type$.nullable_void_Function._as(callback));
      this.set$_onDrawFrameZone(B.Zone_current());
    },
    invokeOnDrawFrame$0() {
      var _this = this;
      _this.set$_viewsRenderedInCurrentFrame(B.LinkedHashSet_LinkedHashSet$_empty(type$.FlutterView));
      A.invoke(_this._onDrawFrame, _this._onDrawFrameZone);
      _this.set$_viewsRenderedInCurrentFrame(null);
    },
    set$onPointerDataPacket(callback) {
      this.set$_onPointerDataPacket(type$.nullable_void_Function_PointerDataPacket._as(callback));
      this.set$_onPointerDataPacketZone(B.Zone_current());
    },
    invokeOnPointerDataPacket$1(dataPacket) {
      var t1 = type$.PointerDataPacket;
      t1._as(dataPacket);
      A.invoke1(this._onPointerDataPacket, this._onPointerDataPacketZone, dataPacket, t1);
    },
    set$onKeyData(callback) {
      this.set$_onKeyData(type$.nullable_bool_Function_KeyData._as(callback));
      this.set$_onKeyDataZone(B.Zone_current());
    },
    invokeOnKeyData$2(data, callback) {
      var onKeyData;
      type$.KeyData._as(data);
      type$.void_Function_bool._as(callback);
      onKeyData = this._onKeyData;
      if (onKeyData != null)
        A.invoke(new A.EnginePlatformDispatcher_invokeOnKeyData_closure(callback, onKeyData, data), this._onKeyDataZone);
      else
        callback.call$1(false);
    },
    get$onReportTimings() {
      return this._onReportTimings;
    },
    set$onReportTimings(callback) {
      this.set$_onReportTimings(type$.nullable_void_Function_List_FrameTiming._as(callback));
      this.set$_onReportTimingsZone(B.Zone_current());
    },
    invokeOnReportTimings$1(timings) {
      var t1 = type$.List_FrameTiming;
      t1._as(timings);
      A.invoke1(this._onReportTimings, this._onReportTimingsZone, timings, t1);
    },
    sendPlatformMessage$3($name, data, callback) {
      this._sendPlatformMessage$3(B._asString($name), type$.nullable_ByteData._as(data), A.EnginePlatformDispatcher__zonedPlatformMessageResponseCallback(type$.nullable_void_Function_nullable_ByteData._as(callback)));
    },
    invokeOnPlatformMessage$3($name, data, callback) {
      var t1;
      B._asString($name);
      type$.nullable_ByteData._as(data);
      type$.void_Function_nullable_ByteData._as(callback);
      if ($name === "dev.flutter/channel-buffers")
        try {
          t1 = $.$get$channelBuffers();
          data.toString;
          t1.handleMessage$1(data);
        } finally {
          callback.call$1(null);
        }
      else
        $.$get$channelBuffers().push$3($name, data, callback);
    },
    _sendPlatformMessage$3($name, data, callback) {
      var decoded, cacheSizeInBytes, $arguments, label, primaryColor, statusBarColor, t1, _0_0, _0_1, _0_2_isSet, _0_2, method, semantics, _this = this, _null = null;
      B._asString($name);
      type$.nullable_ByteData._as(data);
      type$.nullable_void_Function_nullable_ByteData._as(callback);
      switch ($name) {
        case "flutter/skia":
          decoded = C.C_JSONMethodCodec.decodeMethodCall$1(data);
          switch (decoded.method) {
            case "Skia.setResourceCacheMaxBytes":
              if (A.renderer() instanceof A.CanvasKitRenderer) {
                cacheSizeInBytes = B._asInt(decoded.$arguments);
                A.CanvasKitRenderer_instance().set$resourceCacheMaxBytes(cacheSizeInBytes);
              }
              _this.replyToPlatformMessage$2(callback, C.C_JSONMethodCodec.encodeSuccessEnvelope$1(B._setArrayType([true], type$.JSArray_bool)));
              break;
          }
          return;
        case "flutter/assets":
          data.toString;
          _this._handleFlutterAssetsMessage$2(D.C_Utf8Codec.decode$1(J.asUint8List$0$x(D.NativeByteData_methods.get$buffer(data))), callback);
          return;
        case "flutter/platform":
          decoded = C.C_JSONMethodCodec.decodeMethodCall$1(data);
          switch (decoded.method) {
            case "SystemNavigator.pop":
              if (_this.get$implicitView() != null)
                _this.get$implicitView().get$browserHistory().exit$0().then$1$1(new A.EnginePlatformDispatcher__sendPlatformMessage_closure(_this, callback), type$.Null);
              else
                _this.replyToPlatformMessage$2(callback, C.C_JSONMethodCodec.encodeSuccessEnvelope$1(true));
              return;
            case "HapticFeedback.vibrate":
              A.vibrate(_this._getHapticFeedbackDuration$1(B._asStringQ(decoded.$arguments)));
              _this.replyToPlatformMessage$2(callback, C.C_JSONMethodCodec.encodeSuccessEnvelope$1(true));
              return;
            case "SystemChrome.setApplicationSwitcherDescription":
              $arguments = type$.Map_of_String_and_nullable_Object._as(decoded.$arguments);
              label = B._asStringQ($arguments.$index(0, "label"));
              if (label == null)
                label = "";
              primaryColor = B._asIntQ($arguments.$index(0, "primaryColor"));
              if (primaryColor == null)
                primaryColor = 4278190080;
              A.DomHTMLDocumentExtension_set_title(self.document, label);
              A.setThemeColor(A.Color$(primaryColor));
              _this.replyToPlatformMessage$2(callback, C.C_JSONMethodCodec.encodeSuccessEnvelope$1(true));
              return;
            case "SystemChrome.setSystemUIOverlayStyle":
              statusBarColor = B._asIntQ(type$.Map_of_String_and_nullable_Object._as(decoded.$arguments).$index(0, "statusBarColor"));
              A.setThemeColor(statusBarColor == null ? _null : A.Color$(statusBarColor));
              _this.replyToPlatformMessage$2(callback, C.C_JSONMethodCodec.encodeSuccessEnvelope$1(true));
              return;
            case "SystemChrome.setPreferredOrientations":
              $arguments = type$.List_dynamic._as(decoded.$arguments);
              A.ScreenOrientation_instance().setPreferredOrientation$1($arguments).then$1$1(new A.EnginePlatformDispatcher__sendPlatformMessage_closure0(_this, callback), type$.Null);
              return;
            case "SystemSound.play":
              _this.replyToPlatformMessage$2(callback, C.C_JSONMethodCodec.encodeSuccessEnvelope$1(true));
              return;
            case "Clipboard.setData":
              A.ClipboardMessageHandler$().setDataMethodCall$2(decoded, callback);
              return;
            case "Clipboard.getData":
              A.ClipboardMessageHandler$().getDataMethodCall$1(callback);
              return;
            case "Clipboard.hasStrings":
              A.ClipboardMessageHandler$().hasStringsMethodCall$1(callback);
              return;
          }
          break;
        case "flutter/service_worker":
          A.DomWindowExtension_dispatchEvent(self.window, A.createDomEvent("Event", "flutter-first-frame"));
          return;
        case "flutter/textinput":
          $.$get$textEditing().get$channel().handleTextInput$2(data, callback);
          return;
        case "flutter/contextmenu":
          switch (C.C_JSONMethodCodec.decodeMethodCall$1(data).method) {
            case "enableContextMenu":
              _this.get$implicitView().get$contextMenu().enable$0();
              _this.replyToPlatformMessage$2(callback, C.C_JSONMethodCodec.encodeSuccessEnvelope$1(true));
              return;
            case "disableContextMenu":
              _this.get$implicitView().get$contextMenu().disable$0();
              _this.replyToPlatformMessage$2(callback, C.C_JSONMethodCodec.encodeSuccessEnvelope$1(true));
              return;
          }
          return;
        case "flutter/mousecursor":
          decoded = C.C_StandardMethodCodec.decodeMethodCall$1(data);
          $arguments = type$.Map_dynamic_dynamic._as(decoded.$arguments);
          switch (decoded.method) {
            case "activateSystemCursor":
              t1 = B.IterableExtensions_get_firstOrNull(_this.get$views(), type$.EngineFlutterView);
              if (t1 != null)
                t1.get$mouseCursor().activateSystemCursor$1(A.JsonExtensions_tryString($arguments, "kind"));
              break;
          }
          return;
        case "flutter/web_test_e2e":
          _this.replyToPlatformMessage$2(callback, C.C_JSONMethodCodec.encodeSuccessEnvelope$1(A._handleWebTestEnd2EndMessage(C.C_JSONMethodCodec, data)));
          return;
        case "flutter/platform_views":
          _0_0 = C.C_StandardMethodCodec.decodeMethodCall$1(data);
          _0_1 = _0_0.method;
          t1 = _0_1;
          _0_2_isSet = typeof t1 == "string";
          $arguments = _null;
          if (_0_2_isSet) {
            _0_2 = _0_0.$arguments;
            $arguments = _0_2;
            method = _0_1;
          } else
            method = _null;
          if (!_0_2_isSet)
            throw B.wrapException(B.StateError$("Pattern matching error"));
          t1 = $.$get$PlatformViewMessageHandler_instance();
          callback.toString;
          t1.handlePlatformViewCall$3(method, $arguments, callback);
          return;
        case "flutter/accessibility":
          semantics = A.EngineSemantics_instance();
          if (B.boolConversionCheck(semantics.get$semanticsEnabled()))
            semantics.accessibilityAnnouncements.handleMessage$2(C.C_StandardMessageCodec0, data);
          _this.replyToPlatformMessage$2(callback, C.C_StandardMessageCodec0.encodeMessage$1(true));
          return;
        case "flutter/navigation":
          if (_this.get$implicitView() != null)
            _this.get$implicitView().handleNavigationMessage$1(data).then$1$1(new A.EnginePlatformDispatcher__sendPlatformMessage_closure1(_this, callback), type$.Null);
          else if (callback != null)
            callback.call$1(_null);
          _this._defaultRouteName = "/";
          return;
      }
      _this.replyToPlatformMessage$2(callback, _null);
    },
    _handleFlutterAssetsMessage$2(url, callback) {
      return this._handleFlutterAssetsMessage$body$EnginePlatformDispatcher(B._asString(url), type$.nullable_void_Function_nullable_ByteData._as(callback));
    },
    _handleFlutterAssetsMessage$body$EnginePlatformDispatcher(url, callback) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$currentError, $async$self = this, response, assetData, error, exception, $async$exception, $async$temp1;
      var $async$_handleFlutterAssetsMessage$2 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 3;
              $async$temp1 = type$.HttpFetchResponse;
              $async$goto = 6;
              return B._asyncAwait(A.assetManager().loadAsset$1(url), $async$_handleFlutterAssetsMessage$2);
            case 6:
              // returning from await.
              response = $async$temp1._as($async$result);
              $async$goto = 7;
              return B._asyncAwait(A.HttpFetchResponseExtension_asByteBuffer(response), $async$_handleFlutterAssetsMessage$2);
            case 7:
              // returning from await.
              assetData = $async$result;
              $async$self.replyToPlatformMessage$2(callback, J.asByteData$0$x(assetData));
              $async$handler = 1;
              // goto after finally
              $async$goto = 5;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$currentError;
              error = B.unwrapException($async$exception);
              $.$get$printWarning().call$1("Error while trying to load an asset: " + B.S(error));
              $async$self.replyToPlatformMessage$2(callback, null);
              // goto after finally
              $async$goto = 5;
              break;
            case 2:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 5:
              // after finally
              // implicit return
              return B._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return B._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return B._asyncStartSync($async$_handleFlutterAssetsMessage$2, $async$completer);
    },
    _getHapticFeedbackDuration$1(type) {
      switch (B._asStringQ(type)) {
        case "HapticFeedbackType.lightImpact":
          return 10;
        case "HapticFeedbackType.mediumImpact":
          return 20;
        case "HapticFeedbackType.heavyImpact":
          return 30;
        case "HapticFeedbackType.selectionClick":
          return 10;
        default:
          return 50;
      }
    },
    scheduleFrame$0() {
      var t1 = $.scheduleFrameCallback;
      if (t1 == null)
        throw B.wrapException(B.Exception_Exception("scheduleFrameCallback must be initialized first."));
      t1.call$0();
    },
    scheduleWarmUpFrame$2$beginFrame$drawFrame(beginFrame, drawFrame) {
      var t1 = type$.void_Function;
      t1._as(beginFrame);
      t1._as(drawFrame);
      A.Timer_run(beginFrame);
      A.Timer_run(drawFrame);
    },
    render$2(scene, view) {
      return this.render$body$EnginePlatformDispatcher(type$.Scene._as(scene), type$.nullable_FlutterView._as(view));
    },
    render$body$EnginePlatformDispatcher(scene, view) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t2, shouldRender, t1;
      var $async$render$2 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = view == null ? $async$self.get$implicitView() : view;
              type$.nullable_EngineFlutterView._as(t1);
              if (t1 == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              t2 = $async$self._viewsRenderedInCurrentFrame;
              shouldRender = t2 == null ? null : J.add$1$ax(t2, t1);
              $async$goto = (shouldRender == null ? false : shouldRender) || B.boolConversionCheck(J.$eq$(A.renderer().get$rendererTag(), "html")) ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return B._asyncAwait(A.renderer().renderScene$2(scene, t1), $async$render$2);
            case 5:
              // returning from await.
            case 4:
              // join
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$render$2, $async$completer);
    },
    get$accessibilityFeatures() {
      return this.configuration.accessibilityFeatures;
    },
    set$onAccessibilityFeaturesChanged(callback) {
      this.set$_onAccessibilityFeaturesChanged(type$.nullable_void_Function._as(callback));
      this.set$_onAccessibilityFeaturesChangedZone(B.Zone_current());
    },
    get$locales() {
      return this.configuration.locales;
    },
    _addLocaleChangedListener$0() {
      var _this = this;
      if (_this._onLocaleChangedSubscription != null)
        return;
      _this.updateLocales$0();
      _this._onLocaleChangedSubscription = A.DomSubscription$(self.window, "languagechange", new A.EnginePlatformDispatcher__addLocaleChangedListener_closure(_this));
    },
    _removeLocaleChangedListener$0() {
      var t1 = this._onLocaleChangedSubscription;
      if (t1 != null)
        t1.cancel$0();
      this._onLocaleChangedSubscription = null;
    },
    set$onLocaleChanged(callback) {
      this.set$_onLocaleChanged(type$.nullable_void_Function._as(callback));
      this.set$_onLocaleChangedZone(B.Zone_current());
    },
    updateLocales$0() {
      this.set$configuration(this.configuration.copyWith$1$locales(A.EnginePlatformDispatcher_parseBrowserLanguages()));
    },
    invokeOnLocaleChanged$0() {
      A.invoke(this._onLocaleChanged, this._onLocaleChangedZone);
    },
    get$textScaleFactor() {
      return this.configuration.textScaleFactor;
    },
    get$alwaysUse24HourFormat() {
      return this.configuration.alwaysUse24HourFormat;
    },
    _updateTextScaleFactor$1(value) {
      var _this = this;
      B._asDouble(value);
      if (!B.boolConversionCheck(J.$eq$(_this.configuration.textScaleFactor, value))) {
        _this.set$configuration(_this.configuration.copyWith$1$textScaleFactor(value));
        _this.invokeOnPlatformConfigurationChanged$0();
        _this.invokeOnTextScaleFactorChanged$0();
      }
    },
    _addFontSizeObserver$0() {
      var t1, t2;
      this.set$_fontSizeObserver(A.createDomMutationObserver(new A.EnginePlatformDispatcher__addFontSizeObserver_closure(this)));
      t1 = this._fontSizeObserver;
      t1.toString;
      t2 = B.getProperty(self.document, "documentElement", type$.nullable_JavaScriptObject);
      t2.toString;
      A.DomMutationObserverExtension_observe(t1, t2, B._setArrayType(["style"], type$.JSArray_String), true);
    },
    _disconnectFontSizeObserver$0() {
      var t1 = this._fontSizeObserver;
      if (t1 != null)
        B._callMethodUnchecked0(t1, "disconnect", type$.void);
      this._fontSizeObserver = null;
    },
    _setAppLifecycleState$1(state) {
      this.invokeOnPlatformMessage$3("flutter/lifecycle", C.C_StringCodec.encodeMessage$1(type$.AppLifecycleState._as(state).toString$0(0)), new A.EnginePlatformDispatcher__setAppLifecycleState_closure());
    },
    set$onTextScaleFactorChanged(callback) {
      this.set$_onTextScaleFactorChanged(type$.nullable_void_Function._as(callback));
      this.set$_onTextScaleFactorChangedZone(B.Zone_current());
    },
    invokeOnTextScaleFactorChanged$0() {
      A.invoke(this._onTextScaleFactorChanged, this._onTextScaleFactorChangedZone);
    },
    updateSemanticsEnabled$1(semanticsEnabled) {
      var _this = this;
      B._asBool(semanticsEnabled);
      if (semanticsEnabled !== _this.get$semanticsEnabled()) {
        _this.set$configuration(_this.configuration.copyWith$1$semanticsEnabled(semanticsEnabled));
        if (_this._onSemanticsEnabledChanged != null)
          _this.invokeOnSemanticsEnabledChanged$0();
      }
    },
    get$platformBrightness() {
      return this.configuration.platformBrightness;
    },
    _updatePlatformBrightness$1(value) {
      var _this = this;
      type$.Brightness._as(value);
      if (!B.boolConversionCheck(J.$eq$(_this.configuration.platformBrightness, value))) {
        _this.set$configuration(_this.configuration.copyWith$1$platformBrightness(value));
        _this.invokeOnPlatformConfigurationChanged$0();
        _this.invokeOnPlatformBrightnessChanged$0();
      }
    },
    _updateHighContrast$1(value) {
      var t1, _this = this;
      B._asBool(value);
      if (!B.boolConversionCheck(J.$eq$(_this.configuration.accessibilityFeatures.get$highContrast(), value))) {
        t1 = _this.configuration;
        _this.set$configuration(t1.copyWith$1$accessibilityFeatures(type$.EngineAccessibilityFeatures._as(t1.accessibilityFeatures).copyWith$1$highContrast(value)));
        _this.invokeOnPlatformConfigurationChanged$0();
      }
    },
    _addBrightnessMediaQueryListener$0() {
      var _this = this,
        t1 = _this._brightnessMediaQuery;
      _this._updatePlatformBrightness$1(B.boolConversionCheck(A.DomMediaQueryListExtension_get_matches(t1)) ? C.Brightness_0 : C.Brightness_1);
      _this.set$_brightnessMediaQueryListener(A.createDomEventListener(new A.EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure(_this)));
      B._callMethodUnchecked1(t1, "addListener", _this._brightnessMediaQueryListener, type$.void);
    },
    _removeBrightnessMediaQueryListener$0() {
      B._callMethodUnchecked1(this._brightnessMediaQuery, "removeListener", this._brightnessMediaQueryListener, type$.void);
      this._brightnessMediaQueryListener = null;
    },
    set$onPlatformBrightnessChanged(callback) {
      this.set$_onPlatformBrightnessChanged(type$.nullable_void_Function._as(callback));
      this.set$_onPlatformBrightnessChangedZone(B.Zone_current());
    },
    invokeOnPlatformBrightnessChanged$0() {
      A.invoke(this._onPlatformBrightnessChanged, this._onPlatformBrightnessChangedZone);
    },
    get$semanticsEnabled() {
      return this.configuration.semanticsEnabled;
    },
    set$onSemanticsEnabledChanged(callback) {
      this.set$_onSemanticsEnabledChanged(type$.nullable_void_Function._as(callback));
      this.set$_onSemanticsEnabledChangedZone(B.Zone_current());
    },
    invokeOnSemanticsEnabledChanged$0() {
      A.invoke(this._onSemanticsEnabledChanged, this._onSemanticsEnabledChangedZone);
    },
    set$onSemanticsActionEvent(callback) {
      this.set$_onSemanticsActionEvent(type$.nullable_void_Function_SemanticsActionEvent._as(callback));
      this.set$_onSemanticsActionEventZone(B.Zone_current());
    },
    invokeOnSemanticsAction$3(nodeId, action, args) {
      B._asInt(nodeId);
      type$.SemanticsAction._as(action);
      type$.nullable_ByteData._as(args);
      A.invoke1(this._onSemanticsActionEvent, this._onSemanticsActionEventZone, A.SemanticsActionEvent$(args, nodeId, action, 0), type$.SemanticsActionEvent);
    },
    get$defaultRouteName() {
      var t1 = this._defaultRouteName;
      if (t1 == null) {
        t1 = this.get$implicitView();
        t1 = t1 == null ? null : t1.get$browserHistory().get$currentPath();
        if (t1 == null)
          t1 = "/";
        this.set$_defaultRouteName(t1);
      }
      return t1;
    },
    replyToPlatformMessage$2(callback, data) {
      type$.nullable_void_Function_nullable_ByteData._as(callback);
      type$.nullable_ByteData._as(data);
      A.Future_Future$delayed(D.Duration_0, null, type$.void).then$1$1(new A.EnginePlatformDispatcher_replyToPlatformMessage_closure(callback, data), type$.Null);
    },
    set$__EnginePlatformDispatcher__onViewDisposedListener_A(__EnginePlatformDispatcher__onViewDisposedListener_A) {
      this.__EnginePlatformDispatcher__onViewDisposedListener_A = type$.StreamSubscription_int._as(__EnginePlatformDispatcher__onViewDisposedListener_A);
    },
    set$configuration(configuration) {
      this.configuration = type$.PlatformConfiguration._as(configuration);
    },
    set$_onMetricsChanged(_onMetricsChanged) {
      this._onMetricsChanged = type$.nullable_void_Function._as(_onMetricsChanged);
    },
    set$_onMetricsChangedZone(_onMetricsChangedZone) {
      this._onMetricsChangedZone = type$.nullable_Zone._as(_onMetricsChangedZone);
    },
    set$_onViewFocusChange(_onViewFocusChange) {
      this._onViewFocusChange = type$.nullable_void_Function_ViewFocusEvent._as(_onViewFocusChange);
    },
    set$_onViewFocusChangeZone(_onViewFocusChangeZone) {
      this._onViewFocusChangeZone = type$.nullable_Zone._as(_onViewFocusChangeZone);
    },
    set$_viewsRenderedInCurrentFrame(_viewsRenderedInCurrentFrame) {
      this._viewsRenderedInCurrentFrame = type$.nullable_Set_FlutterView._as(_viewsRenderedInCurrentFrame);
    },
    set$_onBeginFrame(_onBeginFrame) {
      this._onBeginFrame = type$.nullable_void_Function_Duration._as(_onBeginFrame);
    },
    set$_onBeginFrameZone(_onBeginFrameZone) {
      this._onBeginFrameZone = type$.nullable_Zone._as(_onBeginFrameZone);
    },
    set$_onDrawFrame(_onDrawFrame) {
      this._onDrawFrame = type$.nullable_void_Function._as(_onDrawFrame);
    },
    set$_onDrawFrameZone(_onDrawFrameZone) {
      this._onDrawFrameZone = type$.nullable_Zone._as(_onDrawFrameZone);
    },
    set$_onPointerDataPacket(_onPointerDataPacket) {
      this._onPointerDataPacket = type$.nullable_void_Function_PointerDataPacket._as(_onPointerDataPacket);
    },
    set$_onPointerDataPacketZone(_onPointerDataPacketZone) {
      this._onPointerDataPacketZone = type$.nullable_Zone._as(_onPointerDataPacketZone);
    },
    set$_onKeyData(_onKeyData) {
      this._onKeyData = type$.nullable_bool_Function_KeyData._as(_onKeyData);
    },
    set$_onKeyDataZone(_onKeyDataZone) {
      this._onKeyDataZone = type$.nullable_Zone._as(_onKeyDataZone);
    },
    set$_onReportTimings(_onReportTimings) {
      this._onReportTimings = type$.nullable_void_Function_List_FrameTiming._as(_onReportTimings);
    },
    set$_onReportTimingsZone(_onReportTimingsZone) {
      this._onReportTimingsZone = type$.nullable_Zone._as(_onReportTimingsZone);
    },
    set$_onAccessibilityFeaturesChanged(_onAccessibilityFeaturesChanged) {
      type$.nullable_void_Function._as(_onAccessibilityFeaturesChanged);
    },
    set$_onAccessibilityFeaturesChangedZone(_onAccessibilityFeaturesChangedZone) {
      type$.nullable_Zone._as(_onAccessibilityFeaturesChangedZone);
    },
    set$_onLocaleChanged(_onLocaleChanged) {
      this._onLocaleChanged = type$.nullable_void_Function._as(_onLocaleChanged);
    },
    set$_onLocaleChangedZone(_onLocaleChangedZone) {
      this._onLocaleChangedZone = type$.nullable_Zone._as(_onLocaleChangedZone);
    },
    set$_fontSizeObserver(_fontSizeObserver) {
      this._fontSizeObserver = type$.nullable_JavaScriptObject._as(_fontSizeObserver);
    },
    set$_onTextScaleFactorChanged(_onTextScaleFactorChanged) {
      this._onTextScaleFactorChanged = type$.nullable_void_Function._as(_onTextScaleFactorChanged);
    },
    set$_onTextScaleFactorChangedZone(_onTextScaleFactorChangedZone) {
      this._onTextScaleFactorChangedZone = type$.nullable_Zone._as(_onTextScaleFactorChangedZone);
    },
    set$_brightnessMediaQueryListener(_brightnessMediaQueryListener) {
      this._brightnessMediaQueryListener = type$.nullable_JavaScriptObject._as(_brightnessMediaQueryListener);
    },
    set$_onPlatformBrightnessChanged(_onPlatformBrightnessChanged) {
      this._onPlatformBrightnessChanged = type$.nullable_void_Function._as(_onPlatformBrightnessChanged);
    },
    set$_onPlatformBrightnessChangedZone(_onPlatformBrightnessChangedZone) {
      this._onPlatformBrightnessChangedZone = type$.nullable_Zone._as(_onPlatformBrightnessChangedZone);
    },
    set$_onSemanticsEnabledChanged(_onSemanticsEnabledChanged) {
      this._onSemanticsEnabledChanged = type$.nullable_void_Function._as(_onSemanticsEnabledChanged);
    },
    set$_onSemanticsEnabledChangedZone(_onSemanticsEnabledChangedZone) {
      this._onSemanticsEnabledChangedZone = type$.nullable_Zone._as(_onSemanticsEnabledChangedZone);
    },
    set$_onSemanticsActionEvent(_onSemanticsActionEvent) {
      this._onSemanticsActionEvent = type$.nullable_void_Function_SemanticsActionEvent._as(_onSemanticsActionEvent);
    },
    set$_onSemanticsActionEventZone(_onSemanticsActionEventZone) {
      this._onSemanticsActionEventZone = type$.Zone._as(_onSemanticsActionEventZone);
    },
    set$_defaultRouteName(_defaultRouteName) {
      this._defaultRouteName = B._asStringQ(_defaultRouteName);
    }
  };
  A.ViewConfiguration0.prototype = {
    toString$0(_) {
      return B.S(this.get$runtimeType(0)) + "[view: null]";
    }
  };
  A.PlatformConfiguration.prototype = {
    copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(accessibilityFeatures, locales, platformBrightness, semanticsEnabled, textScaleFactor) {
      var t1, t2, t3, t4, t5, _this = this;
      type$.nullable_AccessibilityFeatures._as(accessibilityFeatures);
      B._asBoolQ(semanticsEnabled);
      type$.nullable_Brightness._as(platformBrightness);
      B._asDoubleQ(textScaleFactor);
      type$.nullable_List_Locale._as(locales);
      t1 = accessibilityFeatures == null ? _this.accessibilityFeatures : accessibilityFeatures;
      t2 = semanticsEnabled == null ? _this.semanticsEnabled : semanticsEnabled;
      t3 = platformBrightness == null ? _this.platformBrightness : platformBrightness;
      t4 = textScaleFactor == null ? _this.textScaleFactor : textScaleFactor;
      t5 = locales == null ? _this.locales : locales;
      return A.PlatformConfiguration$(t1, _this.alwaysUse24HourFormat, _this.defaultRouteName, t5, t3, t2, _this.systemFontFamily, t4);
    },
    copyWith$1$accessibilityFeatures(accessibilityFeatures) {
      var _null = null;
      return this.copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(accessibilityFeatures, _null, _null, _null, _null);
    },
    copyWith$1$locales(locales) {
      var _null = null;
      return this.copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(_null, locales, _null, _null, _null);
    },
    copyWith$1$textScaleFactor(textScaleFactor) {
      var _null = null;
      return this.copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(_null, _null, _null, _null, textScaleFactor);
    },
    copyWith$1$platformBrightness(platformBrightness) {
      var _null = null;
      return this.copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(_null, _null, platformBrightness, _null, _null);
    },
    copyWith$1$semanticsEnabled(semanticsEnabled) {
      var _null = null;
      return this.copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(_null, _null, _null, semanticsEnabled, _null);
    }
  };
  A.AppLifecycleState0.prototype = {
    addListener$1(listener) {
      var t1, t2;
      type$.void_Function_AppLifecycleState._as(listener);
      t1 = this._listeners;
      t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t2.get$isEmpty(t1)))
        this.activate$0();
      t2.add$1(t1, listener);
      listener.call$1(this._appLifecycleState);
    },
    removeListener$1(listener) {
      var t1 = this._listeners,
        t2 = J.getInterceptor$ax(t1);
      t2.remove$1(t1, type$.void_Function_AppLifecycleState._as(listener));
      if (B.boolConversionCheck(t2.get$isEmpty(t1)))
        this.deactivate$0();
    },
    onAppLifecycleStateChange$1(newState) {
      var t1;
      type$.AppLifecycleState._as(newState);
      if (newState !== this._appLifecycleState) {
        this._appLifecycleState = newState;
        for (t1 = J.get$iterator$ax(this._listeners); B.boolConversionCheck(t1.moveNext$0());)
          t1.get$current().call$1(newState);
      }
    }
  };
  A._BrowserAppLifecycleState.prototype = {
    activate$0() {
      var t1, t2, t3, t4, _this = this;
      A.DomEventTargetExtension_addEventListener(self.window, "focus", _this.get$_focusListener(), null);
      A.DomEventTargetExtension_addEventListener(self.window, "blur", _this.get$_blurListener(), null);
      A.DomEventTargetExtension_addEventListener(self.document, "visibilitychange", _this.get$_visibilityChangeListener(), null);
      t1 = _this._subscriptions;
      t2 = _this._viewManager;
      t3 = _this.get$_onViewCountChanged();
      t4 = J.getInterceptor$ax(t1);
      t4.add$1(t1, t2.get$onViewCreated().listen$1(t3));
      t4.add$1(t1, t2.get$onViewDisposed().listen$1(t3));
    },
    deactivate$0() {
      var t1, t2, t3, _this = this;
      A.DomEventTargetExtension_removeEventListener(self.window, "focus", _this.get$_focusListener(), null);
      A.DomEventTargetExtension_removeEventListener(self.window, "blur", _this.get$_blurListener(), null);
      A.DomEventTargetExtension_removeEventListener(self.document, "visibilitychange", _this.get$_visibilityChangeListener(), null);
      for (t1 = _this._subscriptions, t2 = J.getInterceptor$ax(t1), t3 = t2.get$iterator(t1); B.boolConversionCheck(t3.moveNext$0());)
        t3.get$current().cancel$0();
      t2.clear$0(t1);
    },
    get$_focusListener() {
      var result,
        value = this.___BrowserAppLifecycleState__focusListener_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.createDomEventListener(new A._BrowserAppLifecycleState__focusListener_closure(this));
        value !== $ && B.throwLateFieldADI("_focusListener");
        this.___BrowserAppLifecycleState__focusListener_FI = result;
        value = result;
      }
      return value;
    },
    get$_blurListener() {
      var result,
        value = this.___BrowserAppLifecycleState__blurListener_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.createDomEventListener(new A._BrowserAppLifecycleState__blurListener_closure(this));
        value !== $ && B.throwLateFieldADI("_blurListener");
        this.___BrowserAppLifecycleState__blurListener_FI = result;
        value = result;
      }
      return value;
    },
    get$_visibilityChangeListener() {
      var result,
        value = this.___BrowserAppLifecycleState__visibilityChangeListener_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.createDomEventListener(new A._BrowserAppLifecycleState__visibilityChangeListener_closure(this));
        value !== $ && B.throwLateFieldADI("_visibilityChangeListener");
        this.___BrowserAppLifecycleState__visibilityChangeListener_FI = result;
        value = result;
      }
      return value;
    },
    _onViewCountChanged$1(_) {
      if (B.boolConversionCheck(J.get$isEmpty$asx(this._viewManager.get$views())))
        this.onAppLifecycleStateChange$1(C.AppLifecycleState_0);
      else
        this.onAppLifecycleStateChange$1(C.AppLifecycleState_1);
    }
  };
  A.ViewFocusBinding.prototype = {
    init$0() {
      var _this = this, _s4_ = "body", _null = null,
        t1 = type$.nullable_JavaScriptObject,
        t2 = B.getProperty(self.document, _s4_, t1);
      if (t2 != null)
        A.DomEventTargetExtension_addEventListener(t2, "keydown", _this.get$_handleKeyDown(), _null);
      t2 = B.getProperty(self.document, _s4_, t1);
      if (t2 != null)
        A.DomEventTargetExtension_addEventListener(t2, "keyup", _this.get$_handleKeyUp(), _null);
      t2 = B.getProperty(self.document, _s4_, t1);
      if (t2 != null)
        A.DomEventTargetExtension_addEventListener(t2, "focusin", _this.get$_handleFocusin(), _null);
      t1 = B.getProperty(self.document, _s4_, t1);
      if (t1 != null)
        A.DomEventTargetExtension_addEventListener(t1, "focusout", _this.get$_handleFocusout(), _null);
      _this.set$_onViewCreatedListener(_this._viewManager.get$onViewCreated().listen$1(_this.get$_handleViewCreated()));
    },
    dispose$0() {
      var _this = this, _s4_ = "body", _null = null,
        t1 = type$.nullable_JavaScriptObject,
        t2 = B.getProperty(self.document, _s4_, t1);
      if (t2 != null)
        A.DomEventTargetExtension_removeEventListener(t2, "keydown", _this.get$_handleKeyDown(), _null);
      t2 = B.getProperty(self.document, _s4_, t1);
      if (t2 != null)
        A.DomEventTargetExtension_removeEventListener(t2, "keyup", _this.get$_handleKeyUp(), _null);
      t2 = B.getProperty(self.document, _s4_, t1);
      if (t2 != null)
        A.DomEventTargetExtension_removeEventListener(t2, "focusin", _this.get$_handleFocusin(), _null);
      t1 = B.getProperty(self.document, _s4_, t1);
      if (t1 != null)
        A.DomEventTargetExtension_removeEventListener(t1, "focusout", _this.get$_handleFocusout(), _null);
      t1 = _this._onViewCreatedListener;
      if (t1 != null)
        t1.cancel$0();
    },
    changeViewFocus$2(viewId, state) {
      B._asInt(viewId);
      type$.ViewFocusState._as(state);
      return;
    },
    get$_handleFocusin() {
      var result,
        value = this.__ViewFocusBinding__handleFocusin_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.createDomEventListener(new A.ViewFocusBinding__handleFocusin_closure(this));
        value !== $ && B.throwLateFieldADI("_handleFocusin");
        this.__ViewFocusBinding__handleFocusin_FI = result;
        value = result;
      }
      return value;
    },
    get$_handleFocusout() {
      var result,
        value = this.__ViewFocusBinding__handleFocusout_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.createDomEventListener(new A.ViewFocusBinding__handleFocusout_closure(this));
        value !== $ && B.throwLateFieldADI("_handleFocusout");
        this.__ViewFocusBinding__handleFocusout_FI = result;
        value = result;
      }
      return value;
    },
    get$_handleKeyDown() {
      var result,
        value = this.__ViewFocusBinding__handleKeyDown_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.createDomEventListener(new A.ViewFocusBinding__handleKeyDown_closure(this));
        value !== $ && B.throwLateFieldADI("_handleKeyDown");
        this.__ViewFocusBinding__handleKeyDown_FI = result;
        value = result;
      }
      return value;
    },
    get$_handleKeyUp() {
      var result,
        value = this.__ViewFocusBinding__handleKeyUp_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.createDomEventListener(new A.ViewFocusBinding__handleKeyUp_closure(this));
        value !== $ && B.throwLateFieldADI("_handleKeyUp");
        this.__ViewFocusBinding__handleKeyUp_FI = result;
        value = result;
      }
      return value;
    },
    _handleFocusChange$1(focusedElement) {
      type$.nullable_JavaScriptObject._as(focusedElement);
      return;
    },
    _handleViewCreated$1(viewId) {
      this._maybeMarkViewAsFocusable$2$reachableByKeyboard(B._asInt(viewId), true);
    },
    _maybeMarkViewAsFocusable$2$reachableByKeyboard(viewId, reachableByKeyboard) {
      var t1, rootElement,
        _s8_ = "tabindex";
      B._asIntQ(viewId);
      B._asBool(reachableByKeyboard);
      if (viewId == null)
        return;
      t1 = J.$index$asx(this._viewManager, viewId);
      rootElement = t1 == null ? null : t1.get$dom().rootElement;
      if (B.boolConversionCheck(A.EngineSemantics_instance().get$semanticsEnabled())) {
        if (rootElement != null)
          A.DomElementExtension_removeAttribute(rootElement, _s8_);
      } else if (rootElement != null)
        A.DomElementExtension_setAttribute(rootElement, _s8_, reachableByKeyboard ? 0 : -1);
    },
    set$_onViewCreatedListener(_onViewCreatedListener) {
      this._onViewCreatedListener = type$.nullable_StreamSubscription_int._as(_onViewCreatedListener);
    }
  };
  A.PlatformViewManager.prototype = {
    PlatformViewManager$0() {
      this.registerFactory$2("_default_document_create_element_visible", A._engine___defaultFactory$closure());
      this.registerFactory$3$isVisible("_default_document_create_element_invisible", A._engine___defaultFactory$closure(), false);
    },
    knowsViewType$1(viewType) {
      return this._factories.containsKey$1(B._asString(viewType));
    },
    knowsViewId$1(viewId) {
      return this.__engine$_contents.containsKey$1(B._asInt(viewId));
    },
    registerFactory$3$isVisible(viewType, factoryFunction, isVisible) {
      var t1;
      B._asString(viewType);
      type$.Function._as(factoryFunction);
      B._asBool(isVisible);
      t1 = this._factories;
      if (B.boolConversionCheck(t1.containsKey$1(viewType)))
        return false;
      J.$indexSet$ax(t1, viewType, factoryFunction);
      if (!isVisible)
        J.add$1$ax(this._invisibleViews, viewType);
      return true;
    },
    registerFactory$2(viewType, factoryFunction) {
      return this.registerFactory$3$isVisible(viewType, factoryFunction, true);
    },
    renderContent$3(viewType, viewId, params) {
      var slotName;
      B._asString(viewType);
      B._asInt(viewId);
      slotName = A.getPlatformViewSlotName(viewId);
      J.$indexSet$ax(this._viewIdToType, viewId, viewType);
      return this.__engine$_contents.putIfAbsent$2(viewId, new A.PlatformViewManager_renderContent_closure(this, viewId, slotName, viewType, params));
    },
    clearPlatformView$1(viewId) {
      var t1 = J.remove$1$ax(this.__engine$_contents, B._asInt(viewId));
      if (t1 != null)
        B._callMethodUnchecked0(t1, "remove", type$.void);
    },
    _ensureContentCorrectlySized$2($content, viewType) {
      var _s5_ = "style",
        t1 = type$.JavaScriptObject;
      t1._as($content);
      B._asString(viewType);
      if (B.boolConversionCheck(J.get$isEmpty$asx(A.DomCSSStyleDeclarationExtension_get_height(B.getProperty($content, _s5_, t1))))) {
        $.$get$printWarning().call$1("Height of Platform View type: [" + viewType + "] may not be set. Defaulting to `height: 100%`.\nSet `style.height` to any appropriate value to stop this message.");
        A.DomCSSStyleDeclarationExtension_set_height(B.getProperty($content, _s5_, t1), "100%");
      }
      if (B.boolConversionCheck(J.get$isEmpty$asx(A.DomCSSStyleDeclarationExtension_get_width(B.getProperty($content, _s5_, t1))))) {
        $.$get$printWarning().call$1("Width of Platform View type: [" + viewType + "] may not be set. Defaulting to `width: 100%`.\nSet `style.width` to any appropriate value to stop this message.");
        A.DomCSSStyleDeclarationExtension_set_width(B.getProperty($content, _s5_, t1), "100%");
      }
    },
    isInvisible$1(viewId) {
      var viewType = J.$index$asx(this._viewIdToType, B._asInt(viewId));
      return viewType != null && B.boolConversionCheck(J.contains$1$asx(this._invisibleViews, viewType));
    },
    isVisible$1(viewId) {
      return !B.boolConversionCheck(this.isInvisible$1(B._asInt(viewId)));
    }
  };
  A.PlatformViewMessageHandler.prototype = {
    _createPlatformView$4$params$platformViewId$platformViewType(callback, params, platformViewId, platformViewType) {
      var t1;
      type$.void_Function_nullable_ByteData._as(callback);
      B._asInt(platformViewId);
      B._asString(platformViewType);
      t1 = this._contentManager;
      if (!B.boolConversionCheck(t1.knowsViewType$1(platformViewType))) {
        callback.call$1(C.C_StandardMethodCodec.encodeErrorEnvelope$3$code$details$message("unregistered_view_type", "If you are the author of the PlatformView, make sure `registerViewFactory` is invoked.", "A HtmlElementView widget is trying to create a platform view with an unregistered type: <" + platformViewType + ">."));
        return;
      }
      if (B.boolConversionCheck(t1.knowsViewId$1(platformViewId))) {
        callback.call$1(C.C_StandardMethodCodec.encodeErrorEnvelope$3$code$details$message("recreating_view", "view id: " + platformViewId, "trying to create an already created view"));
        return;
      }
      t1.renderContent$3(platformViewType, platformViewId, params);
      callback.call$1(C.C_StandardMethodCodec.encodeSuccessEnvelope$1(null));
    },
    _disposePlatformView$2$platformViewId(callback, platformViewId) {
      type$.void_Function_nullable_ByteData._as(callback);
      this._contentManager.clearPlatformView$1(B._asInt(platformViewId));
      callback.call$1(C.C_StandardMethodCodec.encodeSuccessEnvelope$1(null));
    },
    handlePlatformViewCall$3(method, $arguments, callback) {
      var t1, t2;
      B._asString(method);
      type$.void_Function_nullable_ByteData._as(callback);
      switch (method) {
        case "create":
          type$.Map_dynamic_dynamic._as($arguments);
          t1 = A.JsonExtensions_readInt($arguments, "id");
          t2 = A.JsonExtensions_readString($arguments, "viewType");
          this._createPlatformView$4$params$platformViewId$platformViewType(callback, $arguments.$index(0, "params"), t1, t2);
          return;
        case "dispose":
          this._disposePlatformView$2$platformViewId(callback, B._asInt($arguments));
          return;
      }
      callback.call$1(null);
    }
  };
  A.SafariPointerEventWorkaround.prototype = {
    workAroundMissingPointerEvents$0() {
      if (this._listener == null) {
        this.set$_listener(A.createDomEventListener(new A.SafariPointerEventWorkaround_workAroundMissingPointerEvents_closure()));
        A.DomEventTargetExtension_addEventListener(self.document, "touchstart", this._listener, null);
      }
    },
    dispose$0() {
      if (this._listener != null) {
        A.DomEventTargetExtension_removeEventListener(self.document, "touchstart", this._listener, null);
        this._listener = null;
      }
    },
    set$_listener(_listener) {
      this._listener = type$.nullable_JavaScriptObject._as(_listener);
    }
  };
  A.PointerBinding.prototype = {
    PointerBinding$3$detector$safariWorkaround(view, detector, safariWorkaround) {
      var _this = this;
      if (B.boolConversionCheck(A.isIosSafari())) {
        _this.set$_safariWorkaround(safariWorkaround == null ? $.$get$PointerBinding__defaultSafariWorkaround() : safariWorkaround);
        _this._safariWorkaround.workAroundMissingPointerEvents$0();
      }
      _this.set$_adapter(_this._createAdapter$0());
    },
    dispose$0() {
      this.get$_adapter().dispose$0();
      var t1 = this._safariWorkaround;
      if (t1 != null)
        t1.dispose$0();
    },
    get$_adapter() {
      return this.__PointerBinding__adapter_A;
    },
    set$_adapter(value) {
      this.__PointerBinding__adapter_A = type$._BaseAdapter._as(value);
    },
    _createAdapter$0() {
      if (B.boolConversionCheck(C.C_PointerSupportDetector.get$hasPointerEvents()))
        return A._PointerAdapter$(this);
      throw B.wrapException(B.UnsupportedError$("This browser does not support pointer events which are necessary to handle interactions with Flutter Web apps."));
    },
    set$_safariWorkaround(_safariWorkaround) {
      this._safariWorkaround = type$.nullable_SafariPointerEventWorkaround._as(_safariWorkaround);
    }
  };
  A.ClickDebouncer.prototype = {
    get$isDebouncing() {
      return this.__engine$_state != null;
    },
    onPointerData$2($event, data) {
      var t1, _this = this;
      type$.JavaScriptObject._as($event);
      type$.List_PointerData._as(data);
      if (!B.boolConversionCheck(A.EnginePlatformDispatcher_instance().get$semanticsEnabled())) {
        _this._sendToFramework$2($event, data);
        return;
      }
      if (B.boolConversionCheck(_this.get$isDebouncing()))
        _this._debounce$2($event, data);
      else if (B.boolConversionCheck(J.$eq$(A.DomEventExtension_get_type($event), "pointerdown")))
        _this._startDebouncing$2($event, data);
      else {
        if (B.boolConversionCheck(J.$eq$(A.DomEventExtension_get_type($event), "pointerup"))) {
          t1 = A.DomEventExtension_get_timeStamp($event);
          t1.toString;
          _this.set$_lastSentPointerUpTimeStamp(A._BaseAdapter__eventTimeStampToDuration(t1));
        }
        _this._sendToFramework$2($event, data);
      }
    },
    onClick$3(click, semanticsNodeId, isListening) {
      var t1, _this = this;
      type$.JavaScriptObject._as(click);
      B._asInt(semanticsNodeId);
      B._asBool(isListening);
      if (!B.boolConversionCheck(_this.get$isDebouncing())) {
        if (isListening && B.boolConversionCheck(_this._shouldSendClickEventToFramework$1(click)))
          _this._sendSemanticsTapToFramework$2(click, semanticsNodeId);
        return;
      }
      if (isListening) {
        t1 = _this.__engine$_state;
        t1.toString;
        _this.set$__engine$_state(null);
        t1._2.cancel$0();
        _this._sendSemanticsTapToFramework$2(click, semanticsNodeId);
      } else
        _this._flush$0();
    },
    _sendSemanticsTapToFramework$2(click, semanticsNodeId) {
      type$.JavaScriptObject._as(click);
      B._asInt(semanticsNodeId);
      B._callMethodUnchecked0(click, "stopPropagation", type$.void);
      A.EnginePlatformDispatcher_instance().invokeOnSemanticsAction$3(semanticsNodeId, C.SemanticsAction_1_tap, null);
      this.reset$0();
    },
    _startDebouncing$2($event, data) {
      var target, t2,
        t1 = type$.JavaScriptObject;
      t1._as($event);
      type$.List_PointerData._as(data);
      target = B.getProperty($event, "target", type$.nullable_JavaScriptObject);
      if (t1._is(target) && B.boolConversionCheck(A.DomElementExtension_hasAttribute(target, "flt-tappable"))) {
        t1 = A.Timer_Timer(C.Duration_200000, this.get$_onTimerExpired());
        t2 = A.DomEventExtension_get_timeStamp($event);
        t2.toString;
        this.set$__engine$_state(new B._Record_3_queue_target_timer(B._setArrayType([new B._Record_3_data_event_timeStamp(data, $event, A._BaseAdapter__eventTimeStampToDuration(t2))], type$.JSArray_Record_3_List_PointerData_data_and_JavaScriptObject_event_and_Duration_timeStamp), target, t1));
      } else
        this._sendToFramework$2($event, data);
    },
    _debounce$2($event, data) {
      var state, t1, t2;
      type$.JavaScriptObject._as($event);
      type$.List_PointerData._as(data);
      state = this.__engine$_state;
      t1 = state._0;
      t2 = A.DomEventExtension_get_timeStamp($event);
      t2.toString;
      J.add$1$ax(t1, new B._Record_3_data_event_timeStamp(data, $event, A._BaseAdapter__eventTimeStampToDuration(t2)));
      if (B.boolConversionCheck(J.$eq$(A.DomEventExtension_get_type($event), "pointerup")))
        if (!B.boolConversionCheck(J.$eq$(B.getProperty($event, "target", type$.nullable_JavaScriptObject), state._1)))
          this._flush$0();
    },
    _onTimerExpired$0() {
      if (!B.boolConversionCheck(this.get$isDebouncing()))
        return;
      this._flush$0();
    },
    _shouldSendClickEventToFramework$1(click) {
      var lastSentPointerUpTimeStamp, t1;
      type$.JavaScriptObject._as(click);
      lastSentPointerUpTimeStamp = this._lastSentPointerUpTimeStamp;
      if (lastSentPointerUpTimeStamp == null)
        return true;
      t1 = A.DomEventExtension_get_timeStamp(click);
      t1.toString;
      return A._BaseAdapter__eventTimeStampToDuration(t1).$sub(0, lastSentPointerUpTimeStamp).$ge(0, C.Duration_50000);
    },
    _flush$0() {
      var aggregateData, t1, queuedEvent, _this = this,
        state = _this.__engine$_state;
      state._2.cancel$0();
      aggregateData = B._setArrayType([], type$.JSArray_PointerData);
      for (t1 = J.get$iterator$ax(state._0); B.boolConversionCheck(t1.moveNext$0());) {
        queuedEvent = t1.get$current();
        if (B.boolConversionCheck(J.$eq$(A.DomEventExtension_get_type(queuedEvent._1), "pointerup")))
          _this.set$_lastSentPointerUpTimeStamp(queuedEvent._2);
        D.JSArray_methods.addAll$1(aggregateData, queuedEvent._0);
      }
      _this._sendToFramework$2(null, aggregateData);
      _this.set$__engine$_state(null);
    },
    _sendToFramework$2($event, data) {
      var packet;
      type$.nullable_JavaScriptObject._as($event);
      packet = A.PointerDataPacket$(J.toList$0$ax(type$.List_PointerData._as(data)));
      A.EnginePlatformDispatcher_instance().invokeOnPointerDataPacket$1(packet);
    },
    reset$0() {
      var t1 = this.__engine$_state;
      if (t1 != null)
        t1._2.cancel$0();
      this.set$__engine$_state(null);
      this._lastSentPointerUpTimeStamp = null;
    },
    set$__engine$_state(_state) {
      this.__engine$_state = type$.nullable_Record_3_List_Record_3_List_PointerData_data_and_JavaScriptObject_event_and_Duration_timeStamp_queue_and_JavaScriptObject_target_and_Timer_timer._as(_state);
    },
    set$_lastSentPointerUpTimeStamp(_lastSentPointerUpTimeStamp) {
      this._lastSentPointerUpTimeStamp = type$.nullable_Duration._as(_lastSentPointerUpTimeStamp);
    }
  };
  A.PointerSupportDetector.prototype = {
    get$hasPointerEvents() {
      return A.hasJsProperty(self.window, "PointerEvent");
    },
    toString$0(_) {
      return "pointers:" + B.S(this.get$hasPointerEvents());
    }
  };
  A.Listener.prototype = {
    unregister$0() {
      A.DomEventTargetExtension_removeEventListener(this.target, this.event, this.handler, null);
    }
  };
  A._BaseAdapter.prototype = {
    _BaseAdapter$1(_owner) {
      this.setup$0();
    },
    get$_view() {
      return this.__engine$_owner.view;
    },
    get$__engine$_callback() {
      return $.$get$PointerBinding_clickDebouncer().get$onPointerData();
    },
    get$_pointerDataConverter() {
      return this.__engine$_owner._pointerDataConverter;
    },
    get$_keyboardConverter() {
      return this.__engine$_owner._keyboardConverter;
    },
    get$_viewTarget() {
      return this.get$_view().get$dom().rootElement;
    },
    get$_globalTarget() {
      return this.get$_view().embeddingStrategy.get$globalEventTarget();
    },
    dispose$0() {
      var t1, t2, t3;
      for (t1 = this._listeners, t2 = J.getInterceptor$ax(t1), t3 = t2.get$iterator(t1); B.boolConversionCheck(t3.moveNext$0());)
        t3.get$current().unregister$0();
      t2.clear$0(t1);
    },
    addEventListener$3(target, eventName, handler) {
      type$.JavaScriptObject._as(target);
      J.add$1$ax(this._listeners, A.Listener_Listener$register(B._asString(eventName), new A._BaseAdapter_addEventListener_loggedHandler(type$.void_Function_JavaScriptObject._as(handler)), null, target));
    },
    set$_lastWheelEventAllowedDefault(_lastWheelEventAllowedDefault) {
      this._lastWheelEventAllowedDefault = B._asBool(_lastWheelEventAllowedDefault);
    },
    __engine$_callback$2(arg0, arg1) {
      return this.get$__engine$_callback().call$2(arg0, arg1);
    }
  };
  A._WheelEventListenerMixin.prototype = {
    _isAcceleratedMouseWheelDelta$2(delta, wheelDelta) {
      B._asNum(delta);
      B._asNumQ(wheelDelta);
      if (wheelDelta == null)
        return false;
      return Math.abs(wheelDelta - -3 * delta) > 1;
    },
    _isTrackpadEvent$1($event) {
      var t1, t2, t3, t4, deltaXChange, deltaYChange, _this = this;
      type$.JavaScriptObject._as($event);
      if (B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_2)))
        return false;
      if (B.boolConversionCheck(_this._isAcceleratedMouseWheelDelta$2(A.DomWheelEventExtension_get_deltaX($event), A.DomWheelEventExtension_get_wheelDeltaX($event))) || B.boolConversionCheck(_this._isAcceleratedMouseWheelDelta$2(A.DomWheelEventExtension_get_deltaY($event), A.DomWheelEventExtension_get_wheelDeltaY($event))))
        return false;
      t1 = A.DomWheelEventExtension_get_deltaX($event);
      if (typeof t1 !== "number")
        return t1.$mod();
      if (D.JSNumber_methods.$mod(t1, 120) === 0) {
        t1 = A.DomWheelEventExtension_get_deltaY($event);
        if (typeof t1 !== "number")
          return t1.$mod();
        t1 = D.JSNumber_methods.$mod(t1, 120) === 0;
      } else
        t1 = false;
      if (!t1) {
        t1 = A.DomWheelEventExtension_get_wheelDeltaX($event);
        if (t1 == null)
          t1 = 1;
        if (typeof t1 !== "number")
          return t1.$mod();
        if (D.JSNumber_methods.$mod(t1, 120) === 0) {
          t1 = A.DomWheelEventExtension_get_wheelDeltaY($event);
          if (t1 == null)
            t1 = 1;
          if (typeof t1 !== "number")
            return t1.$mod();
          t1 = D.JSNumber_methods.$mod(t1, 120) === 0;
        } else
          t1 = false;
      } else
        t1 = true;
      if (t1) {
        t1 = A.DomWheelEventExtension_get_deltaX($event);
        t2 = _this._lastWheelEvent;
        t3 = t2 == null;
        t4 = t3 ? null : A.DomWheelEventExtension_get_deltaX(t2);
        if (t4 == null)
          t4 = 0;
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t4 !== "number")
          return B.iae(t4);
        deltaXChange = Math.abs(t1 - t4);
        t4 = A.DomWheelEventExtension_get_deltaY($event);
        t1 = t3 ? null : A.DomWheelEventExtension_get_deltaY(t2);
        if (t1 == null)
          t1 = 0;
        if (typeof t4 !== "number")
          return t4.$sub();
        if (typeof t1 !== "number")
          return B.iae(t1);
        deltaYChange = Math.abs(t4 - t1);
        t1 = true;
        if (!t3)
          if (!(deltaXChange === 0 && deltaYChange === 0))
            t1 = !(deltaXChange < 20 && deltaYChange < 20);
        if (t1) {
          if (A.DomEventExtension_get_timeStamp($event) != null)
            t1 = (t3 ? null : A.DomEventExtension_get_timeStamp(t2)) != null;
          else
            t1 = false;
          if (t1) {
            t1 = A.DomEventExtension_get_timeStamp($event);
            t1.toString;
            t2.toString;
            t2 = A.DomEventExtension_get_timeStamp(t2);
            t2.toString;
            if (typeof t1 !== "number")
              return t1.$sub();
            if (typeof t2 !== "number")
              return B.iae(t2);
            if (t1 - t2 < 50 && B.boolConversionCheck(_this._lastWheelEventWasTrackpad))
              return true;
          }
          return false;
        }
      }
      return true;
    },
    _convertWheelEventToPointerData$1($event) {
      var kind, deviceId, deltaX, deltaY, t1, data, offset, ignoreCtrlKey, t2, t3, t4, t5, t6, t7, t8, _this = this;
      type$.JavaScriptObject._as($event);
      if (B.boolConversionCheck(_this._isTrackpadEvent$1($event))) {
        kind = C.PointerDeviceKind_4;
        deviceId = -2;
      } else {
        kind = C.PointerDeviceKind_1;
        deviceId = -1;
      }
      deltaX = A.DomWheelEventExtension_get_deltaX($event);
      deltaY = A.DomWheelEventExtension_get_deltaY($event);
      switch (J.toInt$0$n(A.DomWheelEventExtension_get_deltaMode($event))) {
        case 1:
          t1 = $._WheelEventListenerMixin__defaultScrollLineHeight;
          if (t1 == null)
            t1 = $._WheelEventListenerMixin__defaultScrollLineHeight = _this._computeDefaultScrollLineHeight$0();
          t1.toString;
          if (typeof t1 !== "number")
            return B.iae(t1);
          deltaX *= t1;
          deltaY *= t1;
          break;
        case 2:
          t1 = _this.get$_view().get$physicalSize().get$width();
          if (typeof t1 !== "number")
            return B.iae(t1);
          deltaX *= t1;
          t1 = _this.get$_view().get$physicalSize().get$height();
          if (typeof t1 !== "number")
            return B.iae(t1);
          deltaY *= t1;
          break;
        case 0:
          if (B.boolConversionCheck(J.$eq$($.$get$browser().get$operatingSystem(), C.OperatingSystem_4))) {
            t1 = _this.get$_view().get$devicePixelRatio();
            if (typeof t1 !== "number")
              return B.iae(t1);
            deltaX *= t1;
            t1 = _this.get$_view().get$devicePixelRatio();
            if (typeof t1 !== "number")
              return B.iae(t1);
            deltaY *= t1;
          }
          break;
        default:
          break;
      }
      data = B._setArrayType([], type$.JSArray_PointerData);
      offset = A.computeEventOffsetToTarget($event, _this.get$_view());
      if (B.boolConversionCheck(J.$eq$($.$get$browser().get$operatingSystem(), C.OperatingSystem_4))) {
        t1 = _this.get$_keyboardConverter();
        t1 = t1 == null ? null : t1.keyIsPressed$1($.$get$kPhysicalControlLeft());
        if (!B.boolConversionCheck(t1 == null ? false : t1)) {
          t1 = _this.get$_keyboardConverter();
          t1 = t1 == null ? null : t1.keyIsPressed$1($.$get$kPhysicalControlRight());
          ignoreCtrlKey = B.boolConversionCheck(t1 == null ? false : t1);
        } else
          ignoreCtrlKey = true;
      } else
        ignoreCtrlKey = false;
      if (B.boolConversionCheck(A.DomMouseEventExtension_get_ctrlKey($event)) && !ignoreCtrlKey) {
        t1 = _this.get$_pointerDataConverter();
        t2 = _this.get$_view().viewId;
        t3 = A.DomEventExtension_get_timeStamp($event);
        t3.toString;
        t3 = A._BaseAdapter__eventTimeStampToDuration(t3);
        t4 = offset.get$dx();
        t5 = _this.get$_view().get$devicePixelRatio();
        if (typeof t4 !== "number")
          return t4.$mul();
        if (typeof t5 !== "number")
          return B.iae(t5);
        t6 = offset.get$dy();
        t7 = _this.get$_view().get$devicePixelRatio();
        if (typeof t6 !== "number")
          return t6.$mul();
        if (typeof t7 !== "number")
          return B.iae(t7);
        t8 = A.DomMouseEventExtension_get_buttons($event);
        t8.toString;
        t1.convert$13$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$scale$signalKind$timeStamp$viewId(data, J.toInt$0$n(t8), C.PointerChange_3, deviceId, kind, t4 * t5, t6 * t7, 1, 1, A.exp(-deltaY / 200), C.PointerSignalKind_3, t3, t2);
      } else {
        t1 = _this.get$_pointerDataConverter();
        t2 = _this.get$_view().viewId;
        t3 = A.DomEventExtension_get_timeStamp($event);
        t3.toString;
        t3 = A._BaseAdapter__eventTimeStampToDuration(t3);
        t4 = offset.get$dx();
        t5 = _this.get$_view().get$devicePixelRatio();
        if (typeof t4 !== "number")
          return t4.$mul();
        if (typeof t5 !== "number")
          return B.iae(t5);
        t6 = offset.get$dy();
        t7 = _this.get$_view().get$devicePixelRatio();
        if (typeof t6 !== "number")
          return t6.$mul();
        if (typeof t7 !== "number")
          return B.iae(t7);
        t8 = A.DomMouseEventExtension_get_buttons($event);
        t8.toString;
        t1.convert$15$buttons$change$device$kind$onRespond$physicalX$physicalY$pressure$pressureMax$scrollDeltaX$scrollDeltaY$signalKind$timeStamp$viewId(data, J.toInt$0$n(t8), C.PointerChange_3, deviceId, kind, new A._WheelEventListenerMixin__convertWheelEventToPointerData_closure(_this), t4 * t5, t6 * t7, 1, 1, deltaX, deltaY, C.PointerSignalKind_1, t3, t2);
      }
      _this._lastWheelEvent = $event;
      _this._lastWheelEventWasTrackpad = kind === C.PointerDeviceKind_4;
      return data;
    },
    _addWheelEventListener$1(handler) {
      J.add$1$ax(this._listeners, A.Listener_Listener$register("wheel", type$.void_Function_JavaScriptObject._as(handler), false, this.get$_viewTarget()));
    },
    _handleWheelEvent$1($event) {
      var _this = this;
      type$.JavaScriptObject._as($event);
      _this._lastWheelEventAllowedDefault = false;
      _this.__engine$_callback$2($event, _this._convertWheelEventToPointerData$1($event));
      if (!B.boolConversionCheck(_this._lastWheelEventAllowedDefault))
        B._callMethodUnchecked0($event, "preventDefault", type$.void);
    },
    _computeDefaultScrollLineHeight$0() {
      var t2, fontSize, res,
        probe = A.createDomHTMLDivElement(),
        t1 = B.getProperty(probe, "style", type$.JavaScriptObject);
      A.DomCSSStyleDeclarationExtension_set_fontSize(t1, "initial");
      A.DomCSSStyleDeclarationExtension_set_display(t1, "none");
      t1 = B.getProperty(self.document, "body", type$.nullable_JavaScriptObject);
      t1.toString;
      t2 = type$.void;
      B._callMethodUnchecked1(t1, "append", probe, t2);
      fontSize = A.DomCSSStyleDeclarationExtension_get_fontSize(A.DomWindowExtension_getComputedStyle(self.window, probe));
      res = B.boolConversionCheck(D.JSString_methods.contains$1(fontSize, "px")) ? A.double_tryParse(D.JSString_methods.replaceAll$2(fontSize, "px", "")) : null;
      B._callMethodUnchecked0(probe, "remove", t2);
      return res == null ? 16 : res / 4;
    },
    $is_BaseAdapter: 1
  };
  A._SanitizedDetails.prototype = {
    toString$0(_) {
      return B.S(this.get$runtimeType(0)) + "(change: " + B.S(this.change) + ", buttons: " + B.S(this.buttons) + ")";
    }
  };
  A._ButtonSanitizer.prototype = {
    _htmlButtonsToFlutterButtons$1(buttons) {
      return B._asInt(buttons) & 1073741823;
    },
    _inferDownFlutterButtons$2(button, buttons) {
      B._asInt(button);
      B._asInt(buttons);
      return this._htmlButtonsToFlutterButtons$1(buttons === 0 && button > -1 ? A.convertButtonToButtons(button) : buttons);
    },
    sanitizeDownEvent$2$button$buttons(button, buttons) {
      var _this = this;
      B._asInt(button);
      B._asInt(buttons);
      if (!B.boolConversionCheck(J.$eq$(_this._pressedButtons, 0)))
        return _this.sanitizeMoveEvent$1$buttons(buttons);
      _this.set$_pressedButtons(_this._inferDownFlutterButtons$2(button, buttons));
      return A._SanitizedDetails$(_this._pressedButtons, C.PointerChange_4);
    },
    sanitizeMoveEvent$1$buttons(buttons) {
      var t1, _this = this,
        newPressedButtons = _this._htmlButtonsToFlutterButtons$1(B._asInt(buttons));
      if (B.boolConversionCheck(J.$eq$(_this._pressedButtons, 0)) && newPressedButtons !== 0)
        return A._SanitizedDetails$(_this._pressedButtons, C.PointerChange_3);
      _this._pressedButtons = newPressedButtons;
      t1 = newPressedButtons === 0 ? C.PointerChange_3 : C.PointerChange_5;
      return A._SanitizedDetails$(_this._pressedButtons, t1);
    },
    sanitizeMissingRightClickUp$1$buttons(buttons) {
      var newPressedButtons = this._htmlButtonsToFlutterButtons$1(B._asInt(buttons));
      if (!B.boolConversionCheck(J.$eq$(this._pressedButtons, 0)) && newPressedButtons === 0) {
        this._pressedButtons = 0;
        return A._SanitizedDetails$(0, C.PointerChange_6);
      }
      return null;
    },
    sanitizeLeaveEvent$1$buttons(buttons) {
      if (this._htmlButtonsToFlutterButtons$1(B._asInt(buttons)) === 0) {
        this._pressedButtons = 0;
        return A._SanitizedDetails$(0, C.PointerChange_3);
      }
      return null;
    },
    sanitizeUpEvent$1$buttons(buttons) {
      var t1, t2, _this = this;
      B._asIntQ(buttons);
      if (B.boolConversionCheck(J.$eq$(_this._pressedButtons, 0)))
        return null;
      _this.set$_pressedButtons(_this._htmlButtonsToFlutterButtons$1(buttons == null ? 0 : buttons));
      t1 = B.boolConversionCheck(J.$eq$(_this._pressedButtons, 0));
      t2 = _this._pressedButtons;
      if (t1)
        return A._SanitizedDetails$(t2, C.PointerChange_6);
      else
        return A._SanitizedDetails$(t2, C.PointerChange_5);
    },
    sanitizeCancelEvent$0() {
      this._pressedButtons = 0;
      return A._SanitizedDetails$(0, C.PointerChange_0);
    },
    set$_pressedButtons(_pressedButtons) {
      this._pressedButtons = B._asInt(_pressedButtons);
    }
  };
  A._PointerAdapter.prototype = {
    _ensureSanitizer$1(device) {
      return this._sanitizers.putIfAbsent$2(B._asInt(device), new A._PointerAdapter__ensureSanitizer_closure());
    },
    _getSanitizer$1(device) {
      var t1 = J.$index$asx(this._sanitizers, B._asInt(device));
      t1.toString;
      return t1;
    },
    _hasSanitizer$1(device) {
      return this._sanitizers.containsKey$1(B._asInt(device));
    },
    _removePointerIfUnhoverable$1($event) {
      type$.JavaScriptObject._as($event);
      if (B.boolConversionCheck(J.$eq$(A.DomPointerEventExtension_get_pointerType($event), "touch")))
        J.remove$1$ax(this._sanitizers, A.DomPointerEventExtension_get_pointerId($event));
    },
    _addPointerEventListener$4$checkModifiers(target, eventName, handler, checkModifiers) {
      type$.JavaScriptObject._as(target);
      B._asString(eventName);
      type$.dynamic_Function_JavaScriptObject._as(handler);
      this.addEventListener$3(target, eventName, new A._PointerAdapter__addPointerEventListener_closure(this, B._asBool(checkModifiers), handler));
    },
    _addPointerEventListener$3(target, eventName, handler) {
      return this._addPointerEventListener$4$checkModifiers(target, eventName, handler, true);
    },
    _checkModifiersState$1($event) {
      var t1, t2, t3, t4, t5, t6;
      type$.JavaScriptObject._as($event);
      t1 = this.get$_keyboardConverter();
      if (t1 != null) {
        t2 = A.DomMouseEventExtension_getModifierState($event, "Alt");
        t3 = A.DomMouseEventExtension_getModifierState($event, "Control");
        t4 = A.DomMouseEventExtension_getModifierState($event, "Meta");
        t5 = A.DomMouseEventExtension_getModifierState($event, "Shift");
        t6 = A.DomEventExtension_get_timeStamp($event);
        t6.toString;
        t1.synthesizeModifiersIfNeeded$5(t2, t3, t4, t5, t6);
      }
    },
    setup$0() {
      var _this = this;
      _this._addPointerEventListener$3(_this.get$_viewTarget(), "pointerdown", new A._PointerAdapter_setup_closure(_this));
      _this._addPointerEventListener$3(_this.get$_globalTarget(), "pointermove", new A._PointerAdapter_setup_closure0(_this));
      _this._addPointerEventListener$4$checkModifiers(_this.get$_viewTarget(), "pointerleave", new A._PointerAdapter_setup_closure1(_this), false);
      _this._addPointerEventListener$3(_this.get$_globalTarget(), "pointerup", new A._PointerAdapter_setup_closure2(_this));
      _this._addPointerEventListener$4$checkModifiers(_this.get$_viewTarget(), "pointercancel", new A._PointerAdapter_setup_closure3(_this), false);
      _this._addWheelEventListener$1(new A._PointerAdapter_setup_closure4(_this));
    },
    _convertEventsToPointerData$3$data$details$event(data, details, $event) {
      var t1, kind, tilt, timeStamp, pressure, offset, t2, t3, t4, t5, t6, t7, t8, _this = this;
      type$.List_PointerData._as(data);
      type$.JavaScriptObject._as($event);
      type$._SanitizedDetails._as(details);
      t1 = A.DomPointerEventExtension_get_pointerType($event);
      t1.toString;
      kind = _this._pointerTypeToDeviceKind$1(t1);
      tilt = _this._computeHighestTilt$1($event);
      t1 = A.DomEventExtension_get_timeStamp($event);
      t1.toString;
      timeStamp = A._BaseAdapter__eventTimeStampToDuration(t1);
      pressure = A.DomPointerEventExtension_get_pressure($event);
      offset = A.computeEventOffsetToTarget($event, _this.get$_view());
      t1 = _this.get$_pointerDataConverter();
      t2 = _this.get$_view().viewId;
      t3 = _this._getPointerId$1($event);
      t4 = offset.get$dx();
      t5 = _this.get$_view().get$devicePixelRatio();
      if (typeof t4 !== "number")
        return t4.$mul();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t6 = offset.get$dy();
      t7 = _this.get$_view().get$devicePixelRatio();
      if (typeof t6 !== "number")
        return t6.$mul();
      if (typeof t7 !== "number")
        return B.iae(t7);
      t8 = pressure == null ? 0 : D.JSNumber_methods.toDouble$0(pressure);
      t1.convert$13$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$signalKind$tilt$timeStamp$viewId(data, details.buttons, details.change, t3, kind, t4 * t5, t6 * t7, t8, 1, C.PointerSignalKind_0, tilt, timeStamp, t2);
    },
    _expandEvents$1($event) {
      var coalescedEvents,
        t1 = type$.JavaScriptObject;
      t1._as($event);
      if (B.boolConversionCheck(A.hasJsProperty($event, "getCoalescedEvents"))) {
        coalescedEvents = J.cast$1$0$ax(A.DomPointerEventExtension_getCoalescedEvents($event), t1);
        if (B.boolConversionCheck(J.get$isNotEmpty$asx(coalescedEvents)))
          return coalescedEvents;
      }
      return B._setArrayType([$event], type$.JSArray_JavaScriptObject);
    },
    _pointerTypeToDeviceKind$1(pointerType) {
      switch (B._asString(pointerType)) {
        case "mouse":
          return C.PointerDeviceKind_1;
        case "pen":
          return C.PointerDeviceKind_2;
        case "touch":
          return C.PointerDeviceKind_0;
        default:
          return C.PointerDeviceKind_5;
      }
    },
    _getPointerId$1($event) {
      var t1;
      type$.JavaScriptObject._as($event);
      t1 = A.DomPointerEventExtension_get_pointerType($event);
      t1.toString;
      if (this._pointerTypeToDeviceKind$1(t1) === C.PointerDeviceKind_1)
        t1 = -1;
      else {
        t1 = A.DomPointerEventExtension_get_pointerId($event);
        t1.toString;
        t1 = J.toInt$0$n(t1);
      }
      return t1;
    },
    _computeHighestTilt$1(e) {
      var t1, t2;
      type$.JavaScriptObject._as(e);
      t1 = A.DomPointerEventExtension_get_tiltX(e);
      t1.toString;
      t1 = J.abs$0$in(t1);
      t2 = A.DomPointerEventExtension_get_tiltY(e);
      t2.toString;
      t2 = J.abs$0$in(t2);
      if (typeof t1 !== "number")
        return t1.$gt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t1 = t1 > t2 ? A.DomPointerEventExtension_get_tiltX(e) : A.DomPointerEventExtension_get_tiltY(e);
      t1.toString;
      if (typeof t1 !== "number")
        return t1.$div();
      return t1 / 180 * 3.141592653589793;
    },
    $is_WheelEventListenerMixin: 1
  };
  A._PointerDeviceState.prototype = {
    get$pointer() {
      return this._pointer;
    },
    startNewPointer$0() {
      var t1 = $._PointerDeviceState__pointerCount;
      if (typeof t1 !== "number")
        return t1.$add();
      this._pointer = $._PointerDeviceState__pointerCount = t1 + 1;
    }
  };
  A._GlobalPointerState.prototype = {
    ensurePointerDeviceState$3(device, x, y) {
      return this.pointers.putIfAbsent$2(B._asInt(device), new A._GlobalPointerState_ensurePointerDeviceState_closure(B._asDouble(x), B._asDouble(y)));
    }
  };
  A.PointerDataConverter.prototype = {
    _generateCompletePointerData$27$buttons$change$device$distance$distanceMax$kind$obscured$onRespond$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, distance, distanceMax, kind, obscured, onRespond, orientation, physicalX, physicalY, platformData, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, signalKind, size, tilt, timeStamp, viewId) {
      var t1, t2, t3;
      B._asInt(viewId);
      type$.Duration._as(timeStamp);
      type$.PointerChange._as(change);
      type$.PointerDeviceKind._as(kind);
      type$.nullable_PointerSignalKind._as(signalKind);
      B._asInt(device);
      B._asDouble(physicalX);
      B._asDouble(physicalY);
      B._asInt(buttons);
      B._asBool(obscured);
      B._asDouble(pressure);
      B._asDouble(pressureMin);
      B._asDouble(pressureMax);
      B._asDouble(distance);
      B._asDouble(distanceMax);
      B._asDouble(size);
      B._asDouble(radiusMajor);
      B._asDouble(radiusMinor);
      B._asDouble(radiusMin);
      B._asDouble(radiusMax);
      B._asDouble(orientation);
      B._asDouble(tilt);
      B._asInt(platformData);
      B._asDouble(scrollDeltaX);
      B._asDouble(scrollDeltaY);
      B._asDouble(scale);
      type$.nullable_void_Function_$named_allowPlatformDefault_bool._as(onRespond);
      t1 = J.$index$asx($.$get$PointerDataConverter_globalPointerState().pointers, device);
      t1.toString;
      t2 = t1.x;
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = t1.y;
      if (typeof t3 !== "number")
        return B.iae(t3);
      t1.x = physicalX;
      t1.y = physicalY;
      t1 = t1.get$pointer();
      if (t1 == null)
        t1 = 0;
      return A.PointerData$(buttons, change, device, distance, distanceMax, kind, obscured, onRespond, orientation, physicalX - t2, physicalY - t3, physicalX, physicalY, platformData, t1, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, signalKind, size, false, tilt, timeStamp, viewId);
    },
    _generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, distance, distanceMax, kind, obscured, orientation, physicalX, physicalY, platformData, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, signalKind, size, tilt, timeStamp, viewId) {
      return this._generateCompletePointerData$27$buttons$change$device$distance$distanceMax$kind$obscured$onRespond$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, distance, distanceMax, kind, obscured, null, orientation, physicalX, physicalY, platformData, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, signalKind, size, tilt, timeStamp, viewId);
    },
    _locationHasChanged$3(device, physicalX, physicalY) {
      var t1;
      B._asInt(device);
      B._asDouble(physicalX);
      B._asDouble(physicalY);
      t1 = J.$index$asx($.$get$PointerDataConverter_globalPointerState().pointers, device);
      t1.toString;
      return !B.boolConversionCheck(J.$eq$(t1.x, physicalX)) || !B.boolConversionCheck(J.$eq$(t1.y, physicalY));
    },
    _synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(buttons, change, device, distance, distanceMax, kind, obscured, orientation, physicalX, physicalY, platformData, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, size, tilt, timeStamp, viewId) {
      var t1, t2, t3;
      B._asInt(viewId);
      type$.Duration._as(timeStamp);
      type$.PointerChange._as(change);
      type$.PointerDeviceKind._as(kind);
      B._asInt(device);
      B._asDouble(physicalX);
      B._asDouble(physicalY);
      B._asInt(buttons);
      B._asBool(obscured);
      B._asDouble(pressure);
      B._asDouble(pressureMin);
      B._asDouble(pressureMax);
      B._asDouble(distance);
      B._asDouble(distanceMax);
      B._asDouble(size);
      B._asDouble(radiusMajor);
      B._asDouble(radiusMinor);
      B._asDouble(radiusMin);
      B._asDouble(radiusMax);
      B._asDouble(orientation);
      B._asDouble(tilt);
      B._asInt(platformData);
      B._asDouble(scrollDeltaX);
      B._asDouble(scrollDeltaY);
      B._asDouble(scale);
      t1 = J.$index$asx($.$get$PointerDataConverter_globalPointerState().pointers, device);
      t1.toString;
      t2 = t1.x;
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = t1.y;
      if (typeof t3 !== "number")
        return B.iae(t3);
      t1.x = physicalX;
      t1.y = physicalY;
      t1 = t1.get$pointer();
      if (t1 == null)
        t1 = 0;
      return A.PointerData$(buttons, change, device, distance, distanceMax, kind, obscured, null, orientation, physicalX - t2, physicalY - t3, physicalX, physicalY, platformData, t1, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, C.PointerSignalKind_0, size, true, tilt, timeStamp, viewId);
    },
    convert$17$buttons$change$device$kind$onRespond$physicalX$physicalY$pressure$pressureMax$scale$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp$viewId(result, buttons, change, device, kind, onRespond, physicalX, physicalY, pressure, pressureMax, scale, scrollDeltaX, scrollDeltaY, signalKind, tilt, timeStamp, viewId) {
      var t1, alreadyAdded, t2, t3, _this = this;
      type$.List_PointerData._as(result);
      B._asInt(viewId);
      type$.Duration._as(timeStamp);
      type$.PointerChange._as(change);
      type$.PointerDeviceKind._as(kind);
      type$.nullable_PointerSignalKind._as(signalKind);
      B._asInt(device);
      B._asDouble(physicalX);
      B._asDouble(physicalY);
      B._asInt(buttons);
      B._asDouble(pressure);
      B._asDouble(pressureMax);
      B._asDouble(tilt);
      B._asDouble(scrollDeltaX);
      B._asDouble(scrollDeltaY);
      B._asDouble(scale);
      type$.nullable_void_Function_$named_allowPlatformDefault_bool._as(onRespond);
      if (signalKind == null || signalKind === C.PointerSignalKind_0)
        switch (change.index) {
          case 1:
            $.$get$PointerDataConverter_globalPointerState().ensurePointerDeviceState$3(device, physicalX, physicalY);
            J.add$1$ax(result, _this._generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            break;
          case 3:
            t1 = $.$get$PointerDataConverter_globalPointerState();
            alreadyAdded = t1.pointers.containsKey$1(device);
            t1.ensurePointerDeviceState$3(device, physicalX, physicalY);
            if (!alreadyAdded)
              J.add$1$ax(result, _this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(buttons, C.PointerChange_1, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
            J.add$1$ax(result, _this._generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            t1.activeButtons = buttons;
            break;
          case 4:
            t1 = $.$get$PointerDataConverter_globalPointerState();
            alreadyAdded = t1.pointers.containsKey$1(device);
            t1.ensurePointerDeviceState$3(device, physicalX, physicalY).startNewPointer$0();
            if (!alreadyAdded)
              J.add$1$ax(result, _this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(buttons, C.PointerChange_1, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
            if (B.boolConversionCheck(_this._locationHasChanged$3(device, physicalX, physicalY)))
              J.add$1$ax(result, _this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(0, C.PointerChange_3, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, 0, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
            J.add$1$ax(result, _this._generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            t1.activeButtons = buttons;
            break;
          case 5:
            J.add$1$ax(result, _this._generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            $.$get$PointerDataConverter_globalPointerState().activeButtons = buttons;
            break;
          case 6:
          case 0:
            t1 = $.$get$PointerDataConverter_globalPointerState();
            t2 = t1.pointers;
            t3 = J.$index$asx(t2, device);
            t3.toString;
            if (change === C.PointerChange_0) {
              physicalX = t3.x;
              physicalY = t3.y;
            }
            if (B.boolConversionCheck(_this._locationHasChanged$3(device, physicalX, physicalY)))
              J.add$1$ax(result, _this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(t1.activeButtons, C.PointerChange_5, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
            t1 = J.getInterceptor$ax(result);
            t1.add$1(result, _this._generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            if (kind === C.PointerDeviceKind_0) {
              t1.add$1(result, _this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(0, C.PointerChange_2, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, 0, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
              J.remove$1$ax(t2, device);
            }
            break;
          case 2:
            t1 = $.$get$PointerDataConverter_globalPointerState().pointers;
            t2 = J.$index$asx(t1, device);
            t2.toString;
            J.add$1$ax(result, _this._generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, 0, t2.x, t2.y, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            J.remove$1$ax(t1, device);
            break;
          case 7:
          case 8:
          case 9:
            break;
        }
      else
        switch (signalKind) {
          case C.PointerSignalKind_1:
          case C.PointerSignalKind_2:
          case C.PointerSignalKind_3:
            t1 = $.$get$PointerDataConverter_globalPointerState();
            alreadyAdded = t1.pointers.containsKey$1(device);
            t1.ensurePointerDeviceState$3(device, physicalX, physicalY);
            if (!alreadyAdded)
              J.add$1$ax(result, _this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(buttons, C.PointerChange_1, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
            if (B.boolConversionCheck(_this._locationHasChanged$3(device, physicalX, physicalY))) {
              t1 = J.getInterceptor$ax(result);
              if (buttons !== 0)
                t1.add$1(result, _this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(buttons, C.PointerChange_5, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
              else
                t1.add$1(result, _this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(buttons, C.PointerChange_3, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
            }
            J.add$1$ax(result, _this._generateCompletePointerData$27$buttons$change$device$distance$distanceMax$kind$obscured$onRespond$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, onRespond, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            break;
          case C.PointerSignalKind_0:
            break;
          case C.PointerSignalKind_4:
            break;
        }
    },
    convert$13$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$scale$signalKind$timeStamp$viewId(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, scale, signalKind, timeStamp, viewId) {
      return this.convert$17$buttons$change$device$kind$onRespond$physicalX$physicalY$pressure$pressureMax$scale$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp$viewId(result, buttons, change, device, kind, null, physicalX, physicalY, pressure, pressureMax, scale, 0, 0, signalKind, 0, timeStamp, viewId);
    },
    convert$15$buttons$change$device$kind$onRespond$physicalX$physicalY$pressure$pressureMax$scrollDeltaX$scrollDeltaY$signalKind$timeStamp$viewId(result, buttons, change, device, kind, onRespond, physicalX, physicalY, pressure, pressureMax, scrollDeltaX, scrollDeltaY, signalKind, timeStamp, viewId) {
      return this.convert$17$buttons$change$device$kind$onRespond$physicalX$physicalY$pressure$pressureMax$scale$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp$viewId(result, buttons, change, device, kind, onRespond, physicalX, physicalY, pressure, pressureMax, 1, scrollDeltaX, scrollDeltaY, signalKind, 0, timeStamp, viewId);
    },
    convert$13$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$signalKind$tilt$timeStamp$viewId(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, signalKind, tilt, timeStamp, viewId) {
      return this.convert$17$buttons$change$device$kind$onRespond$physicalX$physicalY$pressure$pressureMax$scale$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp$viewId(result, buttons, change, device, kind, null, physicalX, physicalY, pressure, pressureMax, 1, 0, 0, signalKind, tilt, timeStamp, viewId);
    }
  };
  A.Instrumentation.prototype = {
    Instrumentation$_$0() {
      A.Instrumentation__checkInstrumentationEnabled();
    },
    incrementCounter$1($event) {
      var t1, t2, currentCount, _this = this;
      B._asString($event);
      A.Instrumentation__checkInstrumentationEnabled();
      t1 = _this._counters;
      t2 = J.getInterceptor$asx(t1);
      currentCount = t2.$index(t1, $event);
      t2.$indexSet(t1, $event, (currentCount == null ? 0 : currentCount) + 1);
      if (_this._printTimer == null)
        _this.set$_printTimer(A.Timer_Timer(C.Duration_2000000, new A.Instrumentation_incrementCounter_closure(_this)));
    },
    set$_printTimer(_printTimer) {
      this._printTimer = type$.nullable_Timer._as(_printTimer);
    }
  };
  A.RRectRenderer.prototype = {
    render$1(inputRRect) {
      var t0, trRadiusX, tlRadiusX, trRadiusY, tlRadiusY, blRadiusX, brRadiusX, blRadiusY, brRadiusY, t1, _this = this,
        rrect = type$.RRect._as(inputRRect).scaleRadii$0(),
        left = rrect.left,
        right = rrect.right,
        $top = rrect.top,
        bottom = rrect.bottom;
      if (left > right) {
        t0 = right;
        right = left;
        left = t0;
      }
      if ($top > bottom) {
        t0 = bottom;
        bottom = $top;
        $top = t0;
      }
      trRadiusX = J.abs$0$in(rrect.trRadiusX);
      tlRadiusX = J.abs$0$in(rrect.tlRadiusX);
      trRadiusY = J.abs$0$in(rrect.trRadiusY);
      tlRadiusY = J.abs$0$in(rrect.tlRadiusY);
      blRadiusX = J.abs$0$in(rrect.blRadiusX);
      brRadiusX = J.abs$0$in(rrect.brRadiusX);
      blRadiusY = J.abs$0$in(rrect.blRadiusY);
      brRadiusY = J.abs$0$in(rrect.brRadiusY);
      _this.beginPath$0();
      _this.moveTo$2(left + trRadiusX, $top);
      t1 = right - trRadiusX;
      _this.lineTo$2(t1, $top);
      _this.ellipse$8(t1, $top + trRadiusY, trRadiusX, trRadiusY, 0, 4.71238898038469, 6.283185307179586, false);
      t1 = bottom - brRadiusY;
      _this.lineTo$2(right, t1);
      _this.ellipse$8(right - brRadiusX, t1, brRadiusX, brRadiusY, 0, 0, 1.5707963267948966, false);
      t1 = left + blRadiusX;
      _this.lineTo$2(t1, bottom);
      _this.ellipse$8(t1, bottom - blRadiusY, blRadiusX, blRadiusY, 0, 1.5707963267948966, 3.141592653589793, false);
      t1 = $top + tlRadiusY;
      _this.lineTo$2(left, t1);
      _this.ellipse$8(left + tlRadiusX, t1, tlRadiusX, tlRadiusY, 0, 3.141592653589793, 4.71238898038469, false);
    }
  };
  A.RRectToCanvasRenderer.prototype = {
    beginPath$0() {
      B._callMethodUnchecked0(this.context, "beginPath", type$.void);
    },
    moveTo$2(x, y) {
      A.DomCanvasRenderingContext2DExtension_moveTo(this.context, B._asDouble(x), B._asDouble(y));
    },
    lineTo$2(x, y) {
      A.DomCanvasRenderingContext2DExtension_lineTo(this.context, B._asDouble(x), B._asDouble(y));
    },
    ellipse$8(centerX, centerY, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {
      A.drawEllipse(this.context, B._asDouble(centerX), B._asDouble(centerY), B._asDouble(radiusX), B._asDouble(radiusY), B._asDouble(rotation), B._asDouble(startAngle), B._asDouble(endAngle), B._asBool(antiClockwise));
    }
  };
  A.GlProgram.prototype = {};
  A.GlContext.prototype = {
    GlContext$_fromOffscreenCanvas$1(canvas) {
      A.GlContext__programCache0(B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_GlProgram));
      this.__engine$_canvas = canvas;
    },
    GlContext$_fromCanvasElement$2(canvas, useWebGl1) {
      A.GlContext__programCache0(B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_GlProgram));
      this.__engine$_canvas = canvas;
    },
    setViewportSize$2(width, height) {
      B._asInt(width);
      B._asInt(height);
      this._widthInPixels = width;
      this._heightInPixels = height;
    },
    drawImage$3(context, left, $top) {
      var t1, t2, t3;
      type$.JavaScriptObject._as(context);
      B._asDouble(left);
      B._asDouble($top);
      t1 = this.__engine$_canvas;
      t2 = this._widthInPixels;
      t3 = this._heightInPixels;
      A.callMethod(context, "drawImage", [t1, 0, 0, t2, t3, left, $top, t2, t3], type$.void);
    },
    cacheProgram$2(vertexShaderSource, fragmentShaderSource) {
      var cacheKey, cachedProgram, vertexShader, fragmentShader, program, _this = this;
      B._asString(vertexShaderSource);
      B._asString(fragmentShaderSource);
      cacheKey = vertexShaderSource + "||" + fragmentShaderSource;
      cachedProgram = J.$index$asx(A.GlContext__programCache(), cacheKey);
      if (cachedProgram == null) {
        vertexShader = _this.compileShader$2("VERTEX_SHADER", vertexShaderSource);
        fragmentShader = _this.compileShader$2("FRAGMENT_SHADER", fragmentShaderSource);
        program = _this.createProgram$0();
        _this.attachShader$2(program, vertexShader);
        _this.attachShader$2(program, fragmentShader);
        _this.linkProgram$1(program);
        cachedProgram = A.GlProgram$(program);
        J.$indexSet$ax(A.GlContext__programCache(), cacheKey, cachedProgram);
      }
      return cachedProgram;
    },
    compileShader$2(shaderType, source) {
      var shader, t1, t2, _this = this;
      B._asString(shaderType);
      B._asString(source);
      shader = _this._createShader$1(shaderType);
      if (shader == null)
        throw B.wrapException(B.Exception_Exception(_this.get$error()));
      t1 = _this.glContext;
      t2 = type$.void;
      A.callMethod(t1, "shaderSource", [shader, source], t2);
      A.callMethod(t1, "compileShader", [shader], t2);
      if (!A.callMethod(t1, "getShaderParameter", [shader, _this.get$compileStatus()], type$.bool))
        throw B.wrapException(B.Exception_Exception("Shader compilation failed: " + B.S(_this.getShaderInfoLog$1(shader))));
      return shader;
    },
    createProgram$0() {
      return B._callMethodUnchecked0(this.glContext, "createProgram", type$.Object);
    },
    attachShader$2(program, shader) {
      A.callMethod(this.glContext, "attachShader", [program, type$.Object._as(shader)], type$.void);
    },
    linkProgram$1(program) {
      var t1;
      type$.Object._as(program);
      t1 = this.glContext;
      A.callMethod(t1, "linkProgram", [program], type$.void);
      if (!A.callMethod(t1, "getProgramParameter", [program, this.get$kLinkStatus()], type$.bool))
        throw B.wrapException(B.Exception_Exception(this.getProgramInfoLog$1(program)));
    },
    useProgram$1(program) {
      A.callMethod(this.glContext, "useProgram", [type$.GlProgram._as(program).program], type$.void);
    },
    createBuffer$0() {
      return B._callMethodUnchecked0(this.glContext, "createBuffer", type$.nullable_Object);
    },
    bindArrayBuffer$1(buffer) {
      A.callMethod(this.glContext, "bindBuffer", [this.get$kArrayBuffer(), buffer], type$.void);
    },
    bindElementArrayBuffer$1(buffer) {
      A.callMethod(this.glContext, "bindBuffer", [this.get$kElementArrayBuffer(), buffer], type$.void);
    },
    bufferData$2(data, type) {
      type$.nullable_TypedData._as(data);
      A.callMethod(this.glContext, "bufferData", [this.get$kArrayBuffer(), data, type], type$.void);
    },
    bufferElementData$2(data, type) {
      type$.nullable_TypedData._as(data);
      A.callMethod(this.glContext, "bufferData", [this.get$kElementArrayBuffer(), data, type], type$.void);
    },
    enableVertexAttribArray$1(index) {
      A.callMethod(this.glContext, "enableVertexAttribArray", [index], type$.void);
    },
    clear$0(_) {
      A.callMethod(this.glContext, "clear", [this.get$kColorBufferBit()], type$.void);
    },
    drawElements$3(type, indexCount, indexType) {
      A.callMethod(this.glContext, "drawElements", [type, B._asInt(indexCount), indexType, 0], type$.void);
    },
    viewport$4(x, y, width, height) {
      A._callMethodUnchecked4(this.glContext, "viewport", B._asDouble(x), B._asDouble(y), B._asDouble(width), B._asDouble(height), type$.void);
    },
    _createShader$1(shaderType) {
      var t1 = this.glContext,
        t2 = type$.nullable_Object;
      return B._callMethodUnchecked1(t1, "createShader", B.getProperty(t1, B._asString(shaderType), t2), t2);
    },
    get$error() {
      return B._callMethodUnchecked0(this.glContext, "getError", type$.nullable_Object);
    },
    get$compileStatus() {
      var t1 = this._kCompileStatus;
      return t1 == null ? this._kCompileStatus = B.getProperty(this.glContext, "COMPILE_STATUS", type$.nullable_Object) : t1;
    },
    get$kArrayBuffer() {
      var t1 = this._kArrayBuffer;
      return t1 == null ? this._kArrayBuffer = B.getProperty(this.glContext, "ARRAY_BUFFER", type$.nullable_Object) : t1;
    },
    get$kElementArrayBuffer() {
      var t1 = this._kElementArrayBuffer;
      return t1 == null ? this._kElementArrayBuffer = B.getProperty(this.glContext, "ELEMENT_ARRAY_BUFFER", type$.nullable_Object) : t1;
    },
    get$kLinkStatus() {
      var t1 = this._kLinkStatus;
      return t1 == null ? this._kLinkStatus = B.getProperty(this.glContext, "LINK_STATUS", type$.Object) : t1;
    },
    get$kFloat() {
      var t1 = this._kFloat;
      return t1 == null ? this._kFloat = B.getProperty(this.glContext, "FLOAT", type$.Object) : t1;
    },
    get$kUnsignedByte() {
      var t1 = this._kUnsignedByte;
      return t1 == null ? this._kUnsignedByte = B.getProperty(this.glContext, "UNSIGNED_BYTE", type$.Object) : t1;
    },
    get$kUnsignedShort() {
      var t1 = this._kUnsignedShort;
      return t1 == null ? this._kUnsignedShort = B.getProperty(this.glContext, "UNSIGNED_SHORT", type$.nullable_Object) : t1;
    },
    get$kStaticDraw() {
      var t1 = this._kStaticDraw;
      return t1 == null ? this._kStaticDraw = B.getProperty(this.glContext, "STATIC_DRAW", type$.nullable_Object) : t1;
    },
    get$kTriangles() {
      var t1 = this._kTriangles;
      return t1 == null ? this._kTriangles = B.getProperty(this.glContext, "TRIANGLES", type$.Object) : t1;
    },
    get$kColorBufferBit() {
      var t1 = this._kColorBufferBit;
      return t1 == null ? this._kColorBufferBit = B.getProperty(this.glContext, "COLOR_BUFFER_BIT", type$.nullable_Object) : t1;
    },
    getUniformLocation$2(program, uniformName) {
      var res;
      type$.Object._as(program);
      B._asString(uniformName);
      res = A.callMethod(this.glContext, "getUniformLocation", [program, uniformName], type$.nullable_Object);
      if (res == null)
        throw B.wrapException(B.Exception_Exception(uniformName + " not found"));
      else
        return res;
    },
    containsUniform$2(program, uniformName) {
      return A.callMethod(this.glContext, "getUniformLocation", [type$.Object._as(program), B._asString(uniformName)], type$.nullable_Object) != null;
    },
    setUniform2f$3(uniform, value1, value2) {
      A.callMethod(this.glContext, "uniform2f", [type$.Object._as(uniform), B._asDouble(value1), B._asDouble(value2)], type$.void);
    },
    setUniform4f$5(uniform, value1, value2, value3, value4) {
      A.callMethod(this.glContext, "uniform4f", [type$.Object._as(uniform), B._asDouble(value1), B._asDouble(value2), B._asDouble(value3), B._asDouble(value4)], type$.void);
    },
    setUniformMatrix4fv$3(uniform, transpose, value) {
      A.callMethod(this.glContext, "uniformMatrix4fv", [type$.Object._as(uniform), B._asBool(transpose), type$.Float32List._as(value)], type$.void);
    },
    getShaderInfoLog$1(glShader) {
      return A.callMethod(this.glContext, "getShaderInfoLog", [type$.Object._as(glShader)], type$.nullable_Object);
    },
    getProgramInfoLog$1(glProgram) {
      return A.callMethod(this.glContext, "getProgramInfoLog", [type$.Object._as(glProgram)], type$.nullable_String);
    },
    readPatternData$1(isOpaque) {
      var t1, canvas, _this = this,
        _s21_ = "transferToImageBitmap";
      B._asBool(isOpaque);
      t1 = _this.__engine$_canvas;
      if (t1 != null && B.boolConversionCheck(A.hasProperty(t1, _s21_)) && isOpaque) {
        t1.toString;
        B._callMethodUnchecked1(t1, "getContext", "webgl2", type$.void);
        return B._callMethodUnchecked0(t1, _s21_, type$.nullable_Object);
      } else {
        t1 = _this._widthInPixels;
        canvas = A.createDomCanvasElement(_this._heightInPixels, t1);
        _this.drawImage$3(A.DomCanvasElementExtension_get_context2D(canvas), 0, 0);
        return canvas;
      }
    },
    toImageUrl$0() {
      var dataUrl,
        t1 = this._widthInPixels,
        canvas = A.createDomCanvasElement(this._heightInPixels, t1);
      this.drawImage$3(A.DomCanvasElementExtension_get_context2D(canvas), 0, 0);
      dataUrl = A.DomCanvasElementExtension_toDataURL(canvas);
      A.DomCanvasElementExtension_set_width(canvas, 0);
      A.DomCanvasElementExtension_set_height(canvas, 0);
      return dataUrl;
    }
  };
  A.OffScreenCanvas.prototype = {
    OffScreenCanvas$2(width, height) {
      var _this = this,
        t1 = B.boolConversionCheck(A.OffScreenCanvas_supported()),
        t2 = _this.width,
        t3 = _this.height;
      if (t1)
        _this.set$offScreenCanvas(A.createDomOffscreenCanvas(t2, t3));
      else {
        _this.set$canvasElement(A.createDomCanvasElement(t3, t2));
        t1 = _this.canvasElement;
        t1.toString;
        A.DomElementExtension_set_className(t1, "gl-canvas");
        _this._updateCanvasCssSize$1(t1);
      }
    },
    _updateCanvasCssSize$1(element) {
      var t2, t3, t4, t5,
        t1 = type$.JavaScriptObject;
      t1._as(element);
      t2 = this.width;
      t3 = A.EngineFlutterDisplay_instance().get$browserDevicePixelRatio();
      if (typeof t2 !== "number")
        return t2.$div();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t4 = this.height;
      t5 = A.EngineFlutterDisplay_instance().get$browserDevicePixelRatio();
      if (typeof t4 !== "number")
        return t4.$div();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t1 = B.getProperty(element, "style", t1);
      A.DomCSSStyleDeclarationExtension_set_position(t1, "absolute");
      A.DomCSSStyleDeclarationExtension_set_width(t1, B.S(t2 / t3) + "px");
      A.DomCSSStyleDeclarationExtension_set_height(t1, B.S(t4 / t5) + "px");
    },
    resize$2(requestedWidth, requestedHeight) {
      var t1, _this = this;
      B._asInt(requestedWidth);
      B._asInt(requestedHeight);
      if (requestedWidth !== _this.width && requestedHeight !== _this.height) {
        _this.width = requestedWidth;
        _this.height = requestedHeight;
        t1 = _this.offScreenCanvas;
        if (t1 != null) {
          A.DomOffscreenCanvasExtension_set_width(t1, D.JSInt_methods.toDouble$0(requestedWidth));
          t1 = _this.offScreenCanvas;
          t1.toString;
          A.DomOffscreenCanvasExtension_set_height(t1, D.JSInt_methods.toDouble$0(requestedHeight));
        } else {
          t1 = _this.canvasElement;
          if (t1 != null) {
            A.DomCanvasElementExtension_set_width(t1, D.JSInt_methods.toDouble$0(requestedWidth));
            t1 = _this.canvasElement;
            t1.toString;
            A.DomCanvasElementExtension_set_height(t1, D.JSInt_methods.toDouble$0(requestedHeight));
            t1 = _this.canvasElement;
            t1.toString;
            _this._updateCanvasCssSize$1(t1);
          }
        }
      }
    },
    set$offScreenCanvas(offScreenCanvas) {
      this.offScreenCanvas = type$.nullable_JavaScriptObject._as(offScreenCanvas);
    },
    set$canvasElement(canvasElement) {
      this.canvasElement = type$.nullable_JavaScriptObject._as(canvasElement);
    }
  };
  A.Assertiveness.prototype = {
    _enumToString$0() {
      return "Assertiveness." + B.S(this._core$_name);
    }
  };
  A.AccessibilityAnnouncements.prototype = {
    ariaLiveElementFor$1(assertiveness) {
      switch (type$.Assertiveness._as(assertiveness).index) {
        case 0:
          return this._politeElement;
        case 1:
          return this._assertiveElement;
      }
    },
    handleMessage$2(codec, data) {
      var assertivenessIndex,
        dataMap = A.JsonExtensions_readDynamicJson(type$.Map_dynamic_dynamic._as(type$.StandardMessageCodec._as(codec).decodeMessage$1(type$.nullable_ByteData._as(data))), "data"),
        message = A.JsonExtensions_tryString(dataMap, "message");
      if (message != null && B.boolConversionCheck(D.JSString_methods.get$isNotEmpty(message))) {
        assertivenessIndex = A.JsonExtensions_tryInt(dataMap, "assertiveness");
        if (assertivenessIndex == null)
          assertivenessIndex = 0;
        if (assertivenessIndex >>> 0 !== assertivenessIndex || assertivenessIndex >= 2)
          return B.ioore(C.List_Assertiveness_0_Assertiveness_1, assertivenessIndex);
        this.announce$2(message, C.List_Assertiveness_0_Assertiveness_1[assertivenessIndex]);
      }
    },
    announce$2(message, assertiveness) {
      var ariaLiveElement, messageElement, t1;
      B._asString(message);
      ariaLiveElement = this.ariaLiveElementFor$1(type$.Assertiveness._as(assertiveness));
      messageElement = A.createDomHTMLDivElement();
      t1 = B.boolConversionCheck(this._appendSpace);
      A.DomNodeExtension_set_text(messageElement, t1 ? message + "\xa0" : message);
      this._appendSpace = !t1;
      B._callMethodUnchecked1(ariaLiveElement, "append", messageElement, type$.void);
      A.Timer_Timer(C.Duration_300000, new A.AccessibilityAnnouncements_announce_closure(messageElement));
    }
  };
  A._CheckableKind.prototype = {
    _enumToString$0() {
      return "_CheckableKind." + B.S(this._core$_name);
    }
  };
  A.Checkable.prototype = {
    Checkable$1(semanticsObject) {
      this.addTappable$0();
    },
    update$0() {
      var t1, _this = this;
      _this.super$PrimaryRoleManager$update();
      t1 = _this.semanticsObject;
      if (B.boolConversionCheck(t1.get$isFlagsDirty())) {
        switch (_this.__engine$_kind) {
          case C._CheckableKind_0:
            _this.setAriaRole$1("checkbox");
            break;
          case C._CheckableKind_1:
            _this.setAriaRole$1("radio");
            break;
          case C._CheckableKind_2:
            _this.setAriaRole$1("switch");
            break;
        }
        _this._updateDisabledAttribute$0();
        _this.setAttribute$2("aria-checked", B.boolConversionCheck(t1.hasFlag$1(C.SemanticsFlag_2_isChecked)) || B.boolConversionCheck(t1.hasFlag$1(C.SemanticsFlag_131072_isToggled)) ? "true" : "false");
      }
    },
    dispose$0() {
      this.super$PrimaryRoleManager$dispose();
      this._removeDisabledAttribute$0();
    },
    _updateDisabledAttribute$0() {
      var _this = this;
      if (B.boolConversionCheck(J.$eq$(_this.semanticsObject.enabledState$0(), C.EnabledState_2))) {
        _this.setAttribute$2("aria-disabled", "true");
        _this.setAttribute$2("disabled", "true");
      } else
        _this._removeDisabledAttribute$0();
    },
    _removeDisabledAttribute$0() {
      this.removeAttribute$1("aria-disabled");
      this.removeAttribute$1("disabled");
    },
    focusAsRouteDefault$0() {
      var t1 = this.get$focusable();
      t1 = t1 == null ? null : t1.focusAsRouteDefault$0();
      return t1 == null ? false : t1;
    }
  };
  A.Dialog.prototype = {
    Dialog$1(semanticsObject) {
      this.addFocusManagement$0();
      this.addLiveRegion$0();
      semanticsObject.owner.addOneTimePostUpdateCallback$1(new A.Dialog_closure(this, semanticsObject));
    },
    _setDefaultFocus$0() {
      this.semanticsObject.visitDepthFirstInTraversalOrder$1(new A.Dialog__setDefaultFocus_closure());
    },
    update$0() {
      var t1, label, _this = this;
      _this.super$PrimaryRoleManager$update();
      t1 = _this.semanticsObject;
      if (B.boolConversionCheck(t1.get$namesRoute())) {
        label = t1.get$label();
        _this.setAttribute$2("aria-label", label == null ? "" : label);
        _this.setAriaRole$1("dialog");
      }
    },
    describeBy$1(routeName) {
      type$.RouteName._as(routeName);
      if (B.boolConversionCheck(this.semanticsObject.get$namesRoute()))
        return;
      this.setAriaRole$1("dialog");
      this.setAttribute$2("aria-describedby", A.DomElementExtension_get_id(routeName.semanticsObject.get$element()));
    },
    focusAsRouteDefault$0() {
      return false;
    }
  };
  A.RouteName.prototype = {
    update$0() {
      var dialog, _this = this,
        t1 = _this.semanticsObject;
      if (!B.boolConversionCheck(t1.get$namesRoute()))
        return;
      if (B.boolConversionCheck(t1.get$isLabelDirty())) {
        dialog = _this._dialog;
        if (dialog != null)
          dialog.describeBy$1(_this);
        else
          t1.owner.addOneTimePostUpdateCallback$1(new A.RouteName_update_closure(_this));
      }
    },
    _lookUpNearestAncestorDialog$0() {
      var t1, t2,
        $parent = this.semanticsObject.get$parent();
      while (true) {
        t1 = $parent != null;
        if (t1) {
          t2 = $parent.primaryRole;
          t2 = !B.boolConversionCheck(J.$eq$(t2 == null ? null : t2.role, C.PrimaryRole_7));
        } else
          t2 = false;
        if (!t2)
          break;
        $parent = $parent.get$parent();
      }
      if (t1) {
        t1 = $parent.primaryRole;
        t1 = B.boolConversionCheck(J.$eq$(t1 == null ? null : t1.role, C.PrimaryRole_7));
      } else
        t1 = false;
      if (t1) {
        t1 = $parent.primaryRole;
        t1.toString;
        this._dialog = type$.Dialog._as(t1);
      }
    }
  };
  A.Focusable.prototype = {
    focusAsRouteDefault$0() {
      A.DomElementExtension_focus(this.owner.get$element(), null);
      return true;
    },
    update$0() {
      var t2, _this = this,
        t1 = _this.semanticsObject;
      if (B.boolConversionCheck(t1.get$isFocusable())) {
        t2 = _this._focusManager;
        if (!B.boolConversionCheck(t2.get$isManaging()))
          t2.manage$2(t1.id, _this.owner.get$element());
        if (B.boolConversionCheck(t1.get$hasFocus()))
          t1 = !B.boolConversionCheck(t1.get$hasEnabledState()) || B.boolConversionCheck(t1.get$isEnabled());
        else
          t1 = false;
        t2.changeFocus$1(t1);
      } else
        _this._focusManager.stopManaging$0();
    }
  };
  A.AccessibilityFocusManager.prototype = {
    get$isManaging() {
      return this.__engine$_target != null;
    },
    manage$2(semanticsNodeId, element) {
      var previousTarget, t1, t2, t3, _this = this;
      B._asInt(semanticsNodeId);
      type$.JavaScriptObject._as(element);
      previousTarget = _this.__engine$_target;
      t1 = previousTarget == null;
      if (element === (t1 ? null : previousTarget._values[2])) {
        t1 = previousTarget._values;
        if (semanticsNodeId === t1[3])
          return;
        t2 = t1[2];
        t3 = t1[1];
        _this.__engine$_target = new B._Record_4_domBlurListener_domFocusListener_element_semanticsNodeId([t1[0], t3, t2, semanticsNodeId]);
        return;
      }
      if (!t1)
        _this.stopManaging$0();
      t1 = A.createDomEventListener(new A.AccessibilityFocusManager_manage_closure(_this));
      t1 = [A.createDomEventListener(new A.AccessibilityFocusManager_manage_closure0(_this)), t1, element, semanticsNodeId];
      _this.__engine$_target = new B._Record_4_domBlurListener_domFocusListener_element_semanticsNodeId(t1);
      A.DomElementExtension_set_tabIndex(element, 0);
      A.DomEventTargetExtension_addEventListener(element, "focus", t1[1], null);
      A.DomEventTargetExtension_addEventListener(element, "blur", t1[0], null);
    },
    stopManaging$0() {
      var t1, t2,
        target = this.__engine$_target;
      this._lastSetValue = this.__engine$_target = null;
      if (target == null)
        return;
      t1 = target._values;
      t2 = t1[2];
      A.DomEventTargetExtension_removeEventListener(t2, "focus", t1[1], null);
      A.DomEventTargetExtension_removeEventListener(t2, "blur", t1[0], null);
    },
    _setFocusFromDom$1(acquireFocus) {
      var target, t1, t2;
      B._asBool(acquireFocus);
      target = this.__engine$_target;
      if (target == null)
        return;
      t1 = A.EnginePlatformDispatcher_instance();
      t2 = target._values[3];
      t1.invokeOnSemanticsAction$3(t2, acquireFocus ? C.SemanticsAction_32768_didGainAccessibilityFocus : C.SemanticsAction_65536_didLoseAccessibilityFocus, null);
    },
    changeFocus$1(value) {
      var target, t1, _this = this;
      B._asBool(value);
      target = _this.__engine$_target;
      if (target == null) {
        _this._lastSetValue = null;
        return;
      }
      if (value === _this._lastSetValue)
        return;
      _this._lastSetValue = value;
      if (value) {
        t1 = _this.__engine$_owner;
        t1.willRequestFocus$0();
      } else
        return;
      t1.addOneTimePostUpdateCallback$1(new A.AccessibilityFocusManager_changeFocus_closure(_this, target));
    }
  };
  A.Heading.prototype = {
    Heading$1(semanticsObject) {
      this.addHeadingRole$0();
    },
    update$0() {
      this.super$PrimaryRoleManager$update();
      var t1 = this.semanticsObject;
      if (!B.boolConversionCheck(t1.get$isHeadingLevelDirty()))
        return;
      this.addHeadingLevel$1(t1.get$headingLevel());
    },
    focusAsRouteDefault$0() {
      var t1 = this.get$focusable();
      t1 = t1 == null ? null : t1.focusAsRouteDefault$0();
      return t1 == null ? false : t1;
    },
    addHeadingRole$0() {
      this.setAriaRole$1("heading");
    },
    addHeadingLevel$1(headingLevel) {
      B._asInt(headingLevel);
      A.DomElementExtension_setAttribute(this.semanticsObject.get$element(), "aria-level", headingLevel);
    }
  };
  A.ImageRoleManager.prototype = {
    ImageRoleManager$1(semanticsObject) {
      var _this = this;
      _this.addFocusManagement$0();
      _this.addLiveRegion$0();
      _this.addRouteName$0();
      _this.addTappable$0();
    },
    focusAsRouteDefault$0() {
      var t1 = this.get$focusable();
      t1 = t1 == null ? null : t1.focusAsRouteDefault$0();
      return t1 == null ? false : t1;
    },
    update$0() {
      var t1, t2, _this = this;
      _this.super$PrimaryRoleManager$update();
      t1 = _this.semanticsObject;
      if (B.boolConversionCheck(t1.get$isVisualOnly()) && B.boolConversionCheck(t1.get$hasChildren())) {
        if (_this._auxiliaryImageElement == null) {
          _this.set$_auxiliaryImageElement(A.DomDocumentExtension_createElement(self.document, "flt-semantics-img"));
          if (B.boolConversionCheck(t1.get$hasChildren())) {
            t2 = _this._auxiliaryImageElement;
            t2.toString;
            t2 = B.getProperty(t2, "style", type$.JavaScriptObject);
            A.DomCSSStyleDeclarationExtension_set_position(t2, "absolute");
            A.DomCSSStyleDeclarationExtension_set_top(t2, "0");
            A.DomCSSStyleDeclarationExtension_set_left(t2, "0");
            A.DomCSSStyleDeclarationExtension_set_width(t2, B.S(t1.get$rect().get$width()) + "px");
            A.DomCSSStyleDeclarationExtension_set_height(t2, B.S(t1.get$rect().get$height()) + "px");
          }
          t1 = _this._auxiliaryImageElement;
          t1.toString;
          A.DomCSSStyleDeclarationExtension_set_fontSize(B.getProperty(t1, "style", type$.JavaScriptObject), "6px");
          _this.append$1(t1);
        }
        t1 = _this._auxiliaryImageElement;
        t1.toString;
        A.DomElementExtension_setAttribute(t1, "role", "img");
        _this._setLabel$1(t1);
      } else if (B.boolConversionCheck(t1.get$isVisualOnly())) {
        _this.setAriaRole$1("img");
        _this._setLabel$1(_this.get$element());
        _this._cleanUpAuxiliaryElement$0();
      } else {
        _this._cleanUpAuxiliaryElement$0();
        _this._cleanupElement$0();
      }
    },
    _setLabel$1(element) {
      var t1;
      type$.nullable_JavaScriptObject._as(element);
      t1 = this.semanticsObject;
      if (B.boolConversionCheck(t1.get$hasLabel())) {
        element.toString;
        t1 = t1.get$label();
        t1.toString;
        A.DomElementExtension_setAttribute(element, "aria-label", t1);
      }
    },
    _cleanUpAuxiliaryElement$0() {
      var t1 = this._auxiliaryImageElement;
      if (t1 != null) {
        B._callMethodUnchecked0(t1, "remove", type$.void);
        this._auxiliaryImageElement = null;
      }
    },
    _cleanupElement$0() {
      this.removeAttribute$1("aria-label");
    },
    dispose$0() {
      this.super$PrimaryRoleManager$dispose();
      this._cleanUpAuxiliaryElement$0();
      this._cleanupElement$0();
    },
    set$_auxiliaryImageElement(_auxiliaryImageElement) {
      this._auxiliaryImageElement = type$.nullable_JavaScriptObject._as(_auxiliaryImageElement);
    }
  };
  A.Incrementable.prototype = {
    Incrementable$1(semanticsObject) {
      var t1, _this = this;
      _this.addLiveRegion$0();
      _this.addRouteName$0();
      _this.addLabelAndValue$1$preferredRepresentation(C.LabelRepresentation_0);
      t1 = _this.__engine$_element;
      _this.append$1(t1);
      A.DomHTMLInputElementExtension_set_type(t1, "range");
      A.DomElementExtension_setAttribute(t1, "role", "slider");
      A.DomEventTargetExtension_addEventListener(t1, "change", A.createDomEventListener(new A.Incrementable_closure(_this, semanticsObject)), null);
      _this.set$_gestureModeListener(new A.Incrementable_closure0(_this));
      A.EngineSemantics_instance().addGestureModeListener$1(_this.get$_gestureModeListener());
      _this._focusManager.manage$2(semanticsObject.id, t1);
    },
    focusAsRouteDefault$0() {
      A.DomElementExtension_focus(this.__engine$_element, null);
      return true;
    },
    get$_gestureModeListener() {
      return this.__Incrementable__gestureModeListener_F;
    },
    set$_gestureModeListener(value) {
      type$.void_Function_GestureMode._as(value);
      this.__Incrementable__gestureModeListener_F !== $ && B.throwLateFieldAI("_gestureModeListener");
      this.set$__Incrementable__gestureModeListener_F(value);
    },
    update$0() {
      var _this = this;
      _this.super$PrimaryRoleManager$update();
      switch (A.EngineSemantics_instance().get$gestureMode()) {
        case C.GestureMode_1:
          _this._enableBrowserGestureHandling$0();
          _this._updateInputValues$0();
          break;
        case C.GestureMode_0:
          _this._disableBrowserGestureHandling$0();
          break;
      }
      _this._focusManager.changeFocus$1(_this.semanticsObject.get$hasFocus());
    },
    _enableBrowserGestureHandling$0() {
      var t1 = this.__engine$_element,
        t2 = A.DomHTMLInputElementExtension_get_disabled(t1);
      t2.toString;
      if (!B.boolConversionCheck(t2))
        return;
      A.DomHTMLInputElementExtension_set_disabled(t1, false);
    },
    _updateInputValues$0() {
      var t1, updateNeeded, surrogateTextValue, t2, t3, surrogateMaxTextValue, surrogateMinTextValue, _this = this;
      if (!B.boolConversionCheck(_this._pendingResync)) {
        t1 = _this.semanticsObject;
        updateNeeded = B.boolConversionCheck(t1.get$isValueDirty()) || B.boolConversionCheck(t1.get$isIncreasedValueDirty()) || B.boolConversionCheck(t1.get$isDecreasedValueDirty());
      } else
        updateNeeded = true;
      if (!updateNeeded)
        return;
      _this._pendingResync = false;
      surrogateTextValue = B.S(_this._currentSurrogateValue);
      t1 = _this.__engine$_element;
      A.DomHTMLInputElementExtension_set_value(t1, surrogateTextValue);
      A.DomElementExtension_setAttribute(t1, "aria-valuenow", surrogateTextValue);
      t2 = _this.semanticsObject;
      t3 = t2.get$value();
      t3.toString;
      A.DomElementExtension_setAttribute(t1, "aria-valuetext", t3);
      t3 = t2.get$increasedValue();
      t3.toString;
      if (J.get$isNotEmpty$asx(t3)) {
        t3 = _this._currentSurrogateValue;
        if (typeof t3 !== "number")
          return t3.$add();
        surrogateMaxTextValue = B.S(t3 + 1);
      } else
        surrogateMaxTextValue = surrogateTextValue;
      A.DomHTMLInputElementExtension_set_max(t1, surrogateMaxTextValue);
      A.DomElementExtension_setAttribute(t1, "aria-valuemax", surrogateMaxTextValue);
      t2 = t2.get$decreasedValue();
      t2.toString;
      if (J.get$isNotEmpty$asx(t2)) {
        t2 = _this._currentSurrogateValue;
        if (typeof t2 !== "number")
          return t2.$sub();
        surrogateMinTextValue = B.S(t2 - 1);
      } else
        surrogateMinTextValue = surrogateTextValue;
      A.DomHTMLInputElementExtension_set_min(t1, surrogateMinTextValue);
      A.DomElementExtension_setAttribute(t1, "aria-valuemin", surrogateMinTextValue);
    },
    _disableBrowserGestureHandling$0() {
      var t1 = this.__engine$_element,
        t2 = A.DomHTMLInputElementExtension_get_disabled(t1);
      t2.toString;
      if (B.boolConversionCheck(t2))
        return;
      A.DomHTMLInputElementExtension_set_disabled(t1, true);
    },
    dispose$0() {
      var _this = this;
      _this.super$PrimaryRoleManager$dispose();
      _this._focusManager.stopManaging$0();
      A.EngineSemantics_instance().removeGestureModeListener$1(_this.get$_gestureModeListener());
      _this._disableBrowserGestureHandling$0();
      B._callMethodUnchecked0(_this.__engine$_element, "remove", type$.void);
    },
    set$_currentSurrogateValue(_currentSurrogateValue) {
      this._currentSurrogateValue = B._asInt(_currentSurrogateValue);
    },
    set$__Incrementable__gestureModeListener_F(__Incrementable__gestureModeListener_F) {
      this.__Incrementable__gestureModeListener_F = type$.void_Function_GestureMode._as(__Incrementable__gestureModeListener_F);
    }
  };
  A.LabelRepresentation.prototype = {
    _enumToString$0() {
      return "LabelRepresentation." + B.S(this._core$_name);
    },
    createBehavior$1(owner) {
      var t1;
      type$.PrimaryRoleManager._as(owner);
      switch (this.index) {
        case 0:
          t1 = A.AriaLabelRepresentation$_(owner);
          break;
        case 1:
          t1 = A.DomTextRepresentation$_(owner);
          break;
        case 2:
          t1 = A.SizedSpanRepresentation$_(owner);
          break;
        default:
          t1 = null;
      }
      return t1;
    }
  };
  A.LabelRepresentationBehavior.prototype = {
    get$semanticsObject() {
      return this.owner.semanticsObject;
    },
    focusAsRouteDefault$0() {
      A.DomElementExtension_set_tabIndex(this.get$focusTarget(), -1);
      A.DomElementExtension_focus(this.get$focusTarget(), null);
    }
  };
  A.AriaLabelRepresentation.prototype = {
    update$1(label) {
      B._asString(label);
      this.owner.setAttribute$2("aria-label", label);
    },
    cleanUp$0() {
      this.owner.removeAttribute$1("aria-label");
    },
    get$focusTarget() {
      return this.owner.get$element();
    }
  };
  A.DomTextRepresentation.prototype = {
    update$1(label) {
      var t1, domText;
      B._asString(label);
      t1 = this._domText;
      if (t1 != null)
        A.DomNodeExtension_remove(t1);
      domText = A.DomDocumentExtension_createTextNode(self.document, label);
      this._domText = domText;
      B._callMethodUnchecked1(this.get$semanticsObject().get$element(), "appendChild", domText, type$.JavaScriptObject);
    },
    cleanUp$0() {
      var t1 = this._domText;
      if (t1 != null)
        A.DomNodeExtension_remove(t1);
    },
    get$focusTarget() {
      return this.owner.get$element();
    }
  };
  A.SizedSpanRepresentation.prototype = {
    SizedSpanRepresentation$_$1(owner) {
      var t1 = this._domText,
        t2 = type$.JavaScriptObject,
        t3 = B.getProperty(t1, "style", t2);
      A.DomCSSStyleDeclarationExtension_set_display(t3, "inline-block");
      A.DomCSSStyleDeclarationExtension_set_whiteSpace(t3, "nowrap");
      A.DomCSSStyleDeclarationExtension_set_transformOrigin(t3, "0 0 0");
      B._callMethodUnchecked1(this.get$semanticsObject().get$element(), "appendChild", t1, t2);
    },
    update$1(label) {
      var t1, size, sizeChanged, _this = this;
      B._asString(label);
      t1 = _this.get$semanticsObject().get$rect();
      size = t1 == null ? null : t1.get$size();
      t1 = label === _this._previousLabel;
      sizeChanged = !B.boolConversionCheck(J.$eq$(size, _this._previousSize));
      if (!t1)
        A.DomNodeExtension_set_text(_this._domText, label);
      if (!t1 || sizeChanged)
        _this._updateSize$1(size);
      _this._previousLabel = label;
      _this._previousSize = size;
    },
    _updateSize$1(size) {
      var t1;
      type$.nullable_Size._as(size);
      if (size == null) {
        A.DomCSSStyleDeclarationExtension_set_transform(B.getProperty(this._domText, "style", type$.JavaScriptObject), "");
        return;
      }
      if ($.SizedSpanRepresentation__resizeQueue == null) {
        $.SizedSpanRepresentation__resizeQueue = B._setArrayType([], type$.JSArray_Record_2_SizedSpanRepresentation_representation_and_Size_targetSize);
        this.get$semanticsObject().owner.addOneTimePostUpdateCallback$1(A._engine_SizedSpanRepresentation__updateSizes$closure());
      }
      t1 = $.SizedSpanRepresentation__resizeQueue;
      t1.toString;
      J.add$1$ax(t1, new B._Record_2_representation_targetSize(this, size));
    },
    cleanUp$0() {
      B._callMethodUnchecked0(this._domText, "remove", type$.void);
    },
    get$focusTarget() {
      return this._domText;
    }
  };
  A.LabelAndValue.prototype = {
    update$0() {
      var computedLabel = this._computeLabel$0();
      if (computedLabel == null) {
        this._cleanUpDom$0();
        return;
      }
      this._getEffectiveRepresentation$0().update$1(computedLabel);
    },
    _getEffectiveRepresentation$0() {
      var _this = this,
        effectiveRepresentation = B.boolConversionCheck(_this.semanticsObject.get$hasChildren()) ? C.LabelRepresentation_0 : _this.preferredRepresentation,
        representation = _this._representation,
        t1 = representation == null;
      if (t1 || !B.boolConversionCheck(J.$eq$(representation.kind, effectiveRepresentation))) {
        if (!t1)
          representation.cleanUp$0();
        representation = _this._representation = effectiveRepresentation.createBehavior$1(_this.owner);
      }
      return representation;
    },
    _computeLabel$0() {
      var t1 = this.semanticsObject,
        shouldDisplayValue = !B.boolConversionCheck(t1.get$isIncrementable()) && B.boolConversionCheck(t1.get$hasValue()),
        t2 = B.boolConversionCheck(t1.get$hasTooltip()) ? t1.get$tooltip() : null,
        t3 = B.boolConversionCheck(t1.get$hasLabel()) ? t1.get$label() : null,
        t4 = t1.get$hint();
      return A.computeDomSemanticsLabel(t4, t3, t2, shouldDisplayValue ? t1.get$value() : null);
    },
    _cleanUpDom$0() {
      var t1 = this._representation;
      if (t1 != null)
        t1.cleanUp$0();
    },
    focusAsRouteDefault$0() {
      this._getEffectiveRepresentation$0().focusAsRouteDefault$0();
    }
  };
  A.Link.prototype = {
    Link$1(semanticsObject) {
      this.addTappable$0();
    },
    createElement$0() {
      var element = A.DomDocumentExtension_createElement(self.document, "a");
      A.DomCSSStyleDeclarationExtension_set_display(B.getProperty(element, "style", type$.JavaScriptObject), "block");
      return element;
    },
    focusAsRouteDefault$0() {
      var t1 = this.get$focusable();
      t1 = t1 == null ? null : t1.focusAsRouteDefault$0();
      return t1 == null ? false : t1;
    }
  };
  A.LiveRegion.prototype = {
    get$_accessibilityAnnouncements() {
      var t1 = A.EngineSemantics_instance().accessibilityAnnouncements;
      return t1;
    },
    update$0() {
      var t2, _this = this,
        t1 = _this.semanticsObject;
      if (!B.boolConversionCheck(t1.get$isLiveRegion()))
        return;
      if (!B.boolConversionCheck(J.$eq$(_this._lastAnnouncement, t1.get$label()))) {
        _this.set$_lastAnnouncement(t1.get$label());
        if (B.boolConversionCheck(t1.get$hasLabel())) {
          t1 = _this.get$_accessibilityAnnouncements();
          t2 = _this._lastAnnouncement;
          t2.toString;
          t1.announce$2(t2, C.Assertiveness_0);
        }
      }
    },
    set$_lastAnnouncement(_lastAnnouncement) {
      this._lastAnnouncement = B._asStringQ(_lastAnnouncement);
    }
  };
  A.PlatformViewRoleManager.prototype = {
    update$0() {
      var t1, _this = this,
        _s9_ = "aria-owns";
      _this.super$PrimaryRoleManager$update();
      t1 = _this.semanticsObject;
      if (B.boolConversionCheck(t1.get$isPlatformView())) {
        if (B.boolConversionCheck(t1.get$isPlatformViewIdDirty()))
          _this.setAttribute$2(_s9_, A.getPlatformViewDomId(t1.get$platformViewId()));
      } else
        _this.removeAttribute$1(_s9_);
    },
    focusAsRouteDefault$0() {
      return false;
    }
  };
  A.Scrollable.prototype = {
    _recomputeScrollPosition$0() {
      var t1, t2, t3, semanticsId, _this = this, _null = null;
      if (!B.boolConversionCheck(J.$eq$(_this.get$_domScrollPosition(), _this._effectiveNeutralScrollPosition))) {
        if (!B.boolConversionCheck(A.EngineSemantics_instance().shouldAcceptBrowserGesture$1("scroll")))
          return;
        t1 = _this.get$_domScrollPosition();
        t2 = _this._effectiveNeutralScrollPosition;
        if (typeof t1 !== "number")
          return t1.$gt();
        if (typeof t2 !== "number")
          return B.iae(t2);
        _this._neutralizeDomScrollPosition$0();
        t3 = _this.semanticsObject;
        t3.recomputePositionAndSize$0();
        semanticsId = t3.id;
        if (t1 > t2)
          if (B.boolConversionCheck(t3.get$isVerticalScrollContainer()))
            A.EnginePlatformDispatcher_instance().invokeOnSemanticsAction$3(semanticsId, C.SemanticsAction_16_scrollUp, _null);
          else
            A.EnginePlatformDispatcher_instance().invokeOnSemanticsAction$3(semanticsId, C.SemanticsAction_4_scrollLeft, _null);
        else if (B.boolConversionCheck(t3.get$isVerticalScrollContainer()))
          A.EnginePlatformDispatcher_instance().invokeOnSemanticsAction$3(semanticsId, C.SemanticsAction_32_scrollDown, _null);
        else
          A.EnginePlatformDispatcher_instance().invokeOnSemanticsAction$3(semanticsId, C.SemanticsAction_8_scrollRight, _null);
      }
    },
    initState$0() {
      var t2,
        t1 = type$.JavaScriptObject;
      A.DomCSSStyleDeclarationExtension_set_overflow(B.getProperty(this.semanticsObject.get$element(), "style", t1), "");
      t2 = this._scrollOverflowElement;
      t1 = B.getProperty(t2, "style", t1);
      A.DomCSSStyleDeclarationExtension_set_position(t1, "absolute");
      A.DomCSSStyleDeclarationExtension_set_transformOrigin(t1, "0 0 0");
      A.DomCSSStyleDeclarationExtension_set_pointerEvents(t1, "none");
      this.append$1(t2);
    },
    update$0() {
      var t1, t2, _this = this;
      _this.super$PrimaryRoleManager$update();
      _this.semanticsObject.owner.addOneTimePostUpdateCallback$1(new A.Scrollable_update_closure(_this));
      if (_this._scrollListener == null) {
        A.DomCSSStyleDeclarationExtension_set_touchAction(B.getProperty(_this.get$element(), "style", type$.JavaScriptObject), "none");
        _this._gestureModeDidChange$0();
        _this.set$_gestureModeListener(new A.Scrollable_update_closure0(_this));
        t1 = A.EngineSemantics_instance();
        t2 = _this._gestureModeListener;
        t2.toString;
        t1.addGestureModeListener$1(t2);
        _this.set$_scrollListener(A.createDomEventListener(new A.Scrollable_update_closure1(_this)));
        _this.addEventListener$2("scroll", _this._scrollListener);
      }
    },
    get$_domScrollPosition() {
      if (B.boolConversionCheck(this.semanticsObject.get$isVerticalScrollContainer()))
        return J.toInt$0$n(A.DomElementExtension_get_scrollTop(this.get$element()));
      else
        return J.toInt$0$n(A.DomElementExtension_get_scrollLeft(this.get$element()));
    },
    _neutralizeDomScrollPosition$0() {
      var t2, t3, t4, _this = this,
        t1 = _this.semanticsObject,
        rect = t1.get$rect();
      if (rect == null) {
        $.$get$printWarning().call$1("Warning! the rect attribute of semanticsObject is null");
        return;
      }
      t2 = type$.JavaScriptObject;
      t3 = _this._scrollOverflowElement;
      if (B.boolConversionCheck(t1.get$isVerticalScrollContainer())) {
        t4 = J.ceil$0$n(rect.get$height());
        if (typeof t4 !== "number")
          return t4.$add();
        t2 = B.getProperty(t3, "style", t2);
        A.DomCSSStyleDeclarationExtension_set_transform(t2, "translate(0px," + B.S(t4 + 10) + "px)");
        A.DomCSSStyleDeclarationExtension_set_width(t2, B.S(J.round$0$n(rect.get$width())) + "px");
        A.DomCSSStyleDeclarationExtension_set_height(t2, "10px");
        A.DomElementExtension_set_scrollTop(_this.get$element(), D.JSInt_methods.toDouble$0(10));
        _this.set$_effectiveNeutralScrollPosition(J.toInt$0$n(A.DomElementExtension_get_scrollTop(_this.get$element())));
        t1.set$verticalContainerAdjustment(J.toDouble$0$n(_this._effectiveNeutralScrollPosition));
        t1.horizontalContainerAdjustment = 0;
      } else {
        t4 = J.ceil$0$n(rect.get$width());
        if (typeof t4 !== "number")
          return t4.$add();
        t2 = B.getProperty(t3, "style", t2);
        A.DomCSSStyleDeclarationExtension_set_transform(t2, "translate(" + B.S(t4 + 10) + "px,0px)");
        A.DomCSSStyleDeclarationExtension_set_width(t2, "10px");
        A.DomCSSStyleDeclarationExtension_set_height(t2, B.S(J.round$0$n(rect.get$height())) + "px");
        A.DomElementExtension_set_scrollLeft(_this.get$element(), D.JSInt_methods.toDouble$0(10));
        _this.set$_effectiveNeutralScrollPosition(J.toInt$0$n(A.DomElementExtension_get_scrollLeft(_this.get$element())));
        t1.verticalContainerAdjustment = 0;
        t1.set$horizontalContainerAdjustment(J.toDouble$0$n(_this._effectiveNeutralScrollPosition));
      }
    },
    _gestureModeDidChange$0() {
      var t1, _this = this, _s5_ = "style";
      switch (A.EngineSemantics_instance().get$gestureMode()) {
        case C.GestureMode_1:
          t1 = type$.JavaScriptObject;
          if (B.boolConversionCheck(_this.semanticsObject.get$isVerticalScrollContainer()))
            A.DomCSSStyleDeclarationExtension_set_overflowY(B.getProperty(_this.get$element(), _s5_, t1), "scroll");
          else
            A.DomCSSStyleDeclarationExtension_set_overflowX(B.getProperty(_this.get$element(), _s5_, t1), "scroll");
          break;
        case C.GestureMode_0:
          t1 = type$.JavaScriptObject;
          if (B.boolConversionCheck(_this.semanticsObject.get$isVerticalScrollContainer()))
            A.DomCSSStyleDeclarationExtension_set_overflowY(B.getProperty(_this.get$element(), _s5_, t1), "hidden");
          else
            A.DomCSSStyleDeclarationExtension_set_overflowX(B.getProperty(_this.get$element(), _s5_, t1), "hidden");
          break;
      }
    },
    dispose$0() {
      var style, t1, _this = this;
      _this.super$PrimaryRoleManager$dispose();
      style = B.getProperty(_this.get$element(), "style", type$.JavaScriptObject);
      A.DomCSSStyleDeclarationExtension_removeProperty(style, "overflowY");
      A.DomCSSStyleDeclarationExtension_removeProperty(style, "overflowX");
      A.DomCSSStyleDeclarationExtension_removeProperty(style, "touch-action");
      t1 = _this._scrollListener;
      if (t1 != null) {
        _this.removeEventListener$2("scroll", t1);
        _this._scrollListener = null;
      }
      t1 = _this._gestureModeListener;
      if (t1 != null) {
        A.EngineSemantics_instance().removeGestureModeListener$1(t1);
        _this.set$_gestureModeListener(null);
      }
    },
    focusAsRouteDefault$0() {
      var t1 = this.get$focusable();
      t1 = t1 == null ? null : t1.focusAsRouteDefault$0();
      return t1 == null ? false : t1;
    },
    set$_gestureModeListener(_gestureModeListener) {
      this._gestureModeListener = type$.nullable_void_Function_GestureMode._as(_gestureModeListener);
    },
    set$_scrollListener(_scrollListener) {
      this._scrollListener = type$.nullable_JavaScriptObject._as(_scrollListener);
    },
    set$_effectiveNeutralScrollPosition(_effectiveNeutralScrollPosition) {
      this._effectiveNeutralScrollPosition = B._asInt(_effectiveNeutralScrollPosition);
    }
  };
  A.EngineAccessibilityFeatures.prototype = {
    get$accessibleNavigation() {
      var t1 = this.__engine$_index;
      if (typeof t1 !== "number")
        return B.iae(t1);
      return (t1 & 1) !== 0;
    },
    get$invertColors() {
      var t1 = this.__engine$_index;
      if (typeof t1 !== "number")
        return B.iae(t1);
      return (t1 & 2) !== 0;
    },
    get$disableAnimations() {
      var t1 = this.__engine$_index;
      if (typeof t1 !== "number")
        return B.iae(t1);
      return (t1 & 4) !== 0;
    },
    get$boldText() {
      var t1 = this.__engine$_index;
      if (typeof t1 !== "number")
        return B.iae(t1);
      return (t1 & 8) !== 0;
    },
    get$reduceMotion() {
      var t1 = this.__engine$_index;
      if (typeof t1 !== "number")
        return B.iae(t1);
      return (t1 & 16) !== 0;
    },
    get$highContrast() {
      var t1 = this.__engine$_index;
      if (typeof t1 !== "number")
        return B.iae(t1);
      return (t1 & 32) !== 0;
    },
    get$onOffSwitchLabels() {
      var t1 = this.__engine$_index;
      if (typeof t1 !== "number")
        return B.iae(t1);
      return (t1 & 64) !== 0;
    },
    toString$0(_) {
      var _this = this,
        features = B._setArrayType([], type$.JSArray_String);
      if (B.boolConversionCheck(_this.get$accessibleNavigation()))
        D.JSArray_methods.add$1(features, "accessibleNavigation");
      if (B.boolConversionCheck(_this.get$invertColors()))
        D.JSArray_methods.add$1(features, "invertColors");
      if (B.boolConversionCheck(_this.get$disableAnimations()))
        D.JSArray_methods.add$1(features, "disableAnimations");
      if (B.boolConversionCheck(_this.get$boldText()))
        D.JSArray_methods.add$1(features, "boldText");
      if (B.boolConversionCheck(_this.get$reduceMotion()))
        D.JSArray_methods.add$1(features, "reduceMotion");
      if (B.boolConversionCheck(_this.get$highContrast()))
        D.JSArray_methods.add$1(features, "highContrast");
      if (B.boolConversionCheck(_this.get$onOffSwitchLabels()))
        D.JSArray_methods.add$1(features, "onOffSwitchLabels");
      return "AccessibilityFeatures" + B.S(features);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.EngineAccessibilityFeatures && B.boolConversionCheck(J.$eq$(other.__engine$_index, this.__engine$_index));
    },
    get$hashCode(_) {
      return J.get$hashCode$(this.__engine$_index);
    },
    copyWith$2$accessibleNavigation$highContrast(accessibleNavigation, highContrast) {
      var builder, t1, _this = this;
      B._asBoolQ(accessibleNavigation);
      B._asBoolQ(highContrast);
      builder = A.EngineAccessibilityFeaturesBuilder$(0);
      builder.set$accessibleNavigation(accessibleNavigation == null ? _this.get$accessibleNavigation() : accessibleNavigation);
      t1 = _this.get$invertColors();
      builder.set$invertColors(t1);
      t1 = _this.get$disableAnimations();
      builder.set$disableAnimations(t1);
      t1 = _this.get$boldText();
      builder.set$boldText(t1);
      t1 = _this.get$reduceMotion();
      builder.set$reduceMotion(t1);
      builder.set$highContrast(highContrast == null ? _this.get$highContrast() : highContrast);
      t1 = _this.get$onOffSwitchLabels();
      builder.set$onOffSwitchLabels(t1);
      return builder.build$0();
    },
    copyWith$1$highContrast(highContrast) {
      return this.copyWith$2$accessibleNavigation$highContrast(null, highContrast);
    },
    copyWith$1$accessibleNavigation(accessibleNavigation) {
      return this.copyWith$2$accessibleNavigation$highContrast(accessibleNavigation, null);
    },
    $isAccessibilityFeatures: 1
  };
  A.EngineAccessibilityFeaturesBuilder.prototype = {
    set$accessibleNavigation(value) {
      var t1;
      B._asBool(value);
      t1 = this.__engine$_index;
      if (value) {
        if (typeof t1 !== "number")
          return t1.$or();
        t1 = (t1 | 1) >>> 0;
      } else {
        if (typeof t1 !== "number")
          return t1.$and();
        t1 = (t1 & 4294967294) >>> 0;
      }
      this.__engine$_index = t1;
    },
    set$invertColors(value) {
      var t1;
      B._asBool(value);
      t1 = this.__engine$_index;
      if (value) {
        if (typeof t1 !== "number")
          return t1.$or();
        t1 = (t1 | 2) >>> 0;
      } else {
        if (typeof t1 !== "number")
          return t1.$and();
        t1 = (t1 & 4294967293) >>> 0;
      }
      this.__engine$_index = t1;
    },
    set$disableAnimations(value) {
      var t1;
      B._asBool(value);
      t1 = this.__engine$_index;
      if (value) {
        if (typeof t1 !== "number")
          return t1.$or();
        t1 = (t1 | 4) >>> 0;
      } else {
        if (typeof t1 !== "number")
          return t1.$and();
        t1 = (t1 & 4294967291) >>> 0;
      }
      this.__engine$_index = t1;
    },
    set$boldText(value) {
      var t1;
      B._asBool(value);
      t1 = this.__engine$_index;
      if (value) {
        if (typeof t1 !== "number")
          return t1.$or();
        t1 = (t1 | 8) >>> 0;
      } else {
        if (typeof t1 !== "number")
          return t1.$and();
        t1 = (t1 & 4294967287) >>> 0;
      }
      this.__engine$_index = t1;
    },
    set$reduceMotion(value) {
      var t1;
      B._asBool(value);
      t1 = this.__engine$_index;
      if (value) {
        if (typeof t1 !== "number")
          return t1.$or();
        t1 = (t1 | 16) >>> 0;
      } else {
        if (typeof t1 !== "number")
          return t1.$and();
        t1 = (t1 & 4294967279) >>> 0;
      }
      this.__engine$_index = t1;
    },
    set$highContrast(value) {
      var t1;
      B._asBool(value);
      t1 = this.__engine$_index;
      if (value) {
        if (typeof t1 !== "number")
          return t1.$or();
        t1 = (t1 | 32) >>> 0;
      } else {
        if (typeof t1 !== "number")
          return t1.$and();
        t1 = (t1 & 4294967263) >>> 0;
      }
      this.__engine$_index = t1;
    },
    set$onOffSwitchLabels(value) {
      var t1;
      B._asBool(value);
      t1 = this.__engine$_index;
      if (value) {
        if (typeof t1 !== "number")
          return t1.$or();
        t1 = (t1 | 64) >>> 0;
      } else {
        if (typeof t1 !== "number")
          return t1.$and();
        t1 = (t1 & 4294967231) >>> 0;
      }
      this.__engine$_index = t1;
    },
    build$0() {
      return A.EngineAccessibilityFeatures$(this.__engine$_index);
    }
  };
  A.PrimaryRole.prototype = {
    _enumToString$0() {
      return "PrimaryRole." + B.S(this._core$_name);
    }
  };
  A.PrimaryRoleManager.prototype = {
    PrimaryRoleManager$withBasics$3$preferredLabelRepresentation(role, semanticsObject, preferredLabelRepresentation) {
      var _this = this;
      _this.set$element(A.PrimaryRoleManager__initElement(_this.createElement$0(), _this.semanticsObject));
      _this.addFocusManagement$0();
      _this.addLiveRegion$0();
      _this.addRouteName$0();
      _this.addLabelAndValue$1$preferredRepresentation(preferredLabelRepresentation);
    },
    PrimaryRoleManager$blank$2(role, semanticsObject) {
      this.set$element(A.PrimaryRoleManager__initElement(this.createElement$0(), this.semanticsObject));
    },
    get$element() {
      return this.__PrimaryRoleManager_element_F;
    },
    set$element(value) {
      type$.JavaScriptObject._as(value);
      this.__PrimaryRoleManager_element_F !== $ && B.throwLateFieldAI("element");
      this.__PrimaryRoleManager_element_F = value;
    },
    createElement$0() {
      return A.DomDocumentExtension_createElement(self.document, "flt-semantics");
    },
    initState$0() {
    },
    setAriaRole$1(ariaRoleName) {
      this.setAttribute$2("role", B._asString(ariaRoleName));
    },
    setAttribute$2($name, value) {
      B._asString($name);
      type$.Object._as(value);
      A.DomElementExtension_setAttribute(this.get$element(), $name, value);
    },
    append$1(child) {
      type$.JavaScriptObject._as(child);
      B._callMethodUnchecked1(this.get$element(), "append", child, type$.void);
    },
    removeAttribute$1($name) {
      B._asString($name);
      return A.DomElementExtension_removeAttribute(this.get$element(), $name);
    },
    addEventListener$3(type, listener, useCapture) {
      B._asString(type);
      type$.nullable_JavaScriptObject._as(listener);
      B._asBoolQ(useCapture);
      return A.DomEventTargetExtension_addEventListener(this.get$element(), type, listener, useCapture);
    },
    addEventListener$2(type, listener) {
      return this.addEventListener$3(type, listener, null);
    },
    removeEventListener$2(type, listener) {
      B._asString(type);
      type$.nullable_JavaScriptObject._as(listener);
      return A.DomEventTargetExtension_removeEventListener(this.get$element(), type, listener, null);
    },
    get$focusable() {
      return this._focusable;
    },
    addFocusManagement$0() {
      var _this = this,
        t1 = A.Focusable$(_this.semanticsObject, _this);
      _this._focusable = t1;
      _this.addSecondaryRole$1(t1);
    },
    addLiveRegion$0() {
      this.addSecondaryRole$1(A.LiveRegion$(this.semanticsObject, this));
    },
    addRouteName$0() {
      this.addSecondaryRole$1(A.RouteName$(this.semanticsObject, this));
    },
    get$labelAndValue() {
      return this._labelAndValue;
    },
    addLabelAndValue$1$preferredRepresentation(preferredRepresentation) {
      var _this = this,
        t1 = A.LabelAndValue$(_this.semanticsObject, _this, type$.LabelRepresentation._as(preferredRepresentation));
      _this._labelAndValue = t1;
      _this.addSecondaryRole$1(t1);
    },
    addTappable$0() {
      this.addSecondaryRole$1(A.Tappable$(this.semanticsObject, this));
    },
    addSecondaryRole$1(secondaryRoleManager) {
      var t1;
      type$.RoleManager._as(secondaryRoleManager);
      if (this._secondaryRoleManagers == null)
        this.set$_secondaryRoleManagers(B._setArrayType([], type$.JSArray_RoleManager));
      t1 = this._secondaryRoleManagers;
      t1.toString;
      J.add$1$ax(t1, secondaryRoleManager);
    },
    update$0() {
      var t1,
        secondaryRoles = this._secondaryRoleManagers;
      if (secondaryRoles == null)
        return;
      for (t1 = J.get$iterator$ax(secondaryRoles); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().update$0();
      if (B.boolConversionCheck(this.semanticsObject.get$isIdentifierDirty()))
        this._updateIdentifier$0();
    },
    _updateIdentifier$0() {
      var _s24_ = "flt-semantics-identifier",
        t1 = this.semanticsObject;
      if (B.boolConversionCheck(t1.get$hasIdentifier())) {
        t1 = t1.get$identifier();
        t1.toString;
        this.setAttribute$2(_s24_, t1);
      } else
        this.removeAttribute$1(_s24_);
    },
    dispose$0() {
      this.removeAttribute$1("role");
    },
    set$_secondaryRoleManagers(_secondaryRoleManagers) {
      this._secondaryRoleManagers = type$.nullable_List_RoleManager._as(_secondaryRoleManagers);
    }
  };
  A.GenericRole.prototype = {
    GenericRole$1(semanticsObject) {
      if (B.boolConversionCheck(semanticsObject.get$isTappable()))
        this.addTappable$0();
    },
    update$0() {
      var _this = this,
        t1 = _this.semanticsObject;
      if (!B.boolConversionCheck(t1.get$hasLabel())) {
        _this.super$PrimaryRoleManager$update();
        return;
      }
      if (B.boolConversionCheck(t1.get$hasChildren())) {
        _this.get$labelAndValue().preferredRepresentation = C.LabelRepresentation_0;
        _this.setAriaRole$1("group");
      } else if (B.boolConversionCheck(t1.hasFlag$1(C.SemanticsFlag_512_isHeader))) {
        _this.get$labelAndValue().preferredRepresentation = C.LabelRepresentation_1;
        _this.setAriaRole$1("heading");
      } else {
        _this.get$labelAndValue().preferredRepresentation = C.LabelRepresentation_2;
        _this.removeAttribute$1("role");
      }
      _this.super$PrimaryRoleManager$update();
    },
    focusAsRouteDefault$0() {
      var focusable,
        t1 = this.semanticsObject;
      if (B.boolConversionCheck(t1.get$isFocusable())) {
        focusable = this.get$focusable();
        if (focusable != null)
          return focusable.focusAsRouteDefault$0();
      }
      if (B.boolConversionCheck(t1.get$hasChildren()) || !B.boolConversionCheck(t1.get$hasLabel()))
        return false;
      this.get$labelAndValue().focusAsRouteDefault$0();
      return true;
    }
  };
  A.RoleManager.prototype = {
    get$isDisposed() {
      return this._isDisposed;
    }
  };
  A.SemanticsObject.prototype = {
    get$isFlagsDirty() {
      return this._isDirty$1(1);
    },
    _markFlagsDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 1) >>> 0;
    },
    _markActionsDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 2) >>> 0;
    },
    _markTextSelectionBaseDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 4) >>> 0;
    },
    _markTextSelectionExtentDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 8) >>> 0;
    },
    _markScrollChildrenDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 16) >>> 0;
    },
    _markScrollIndexDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 32) >>> 0;
    },
    get$isScrollPositionDirty() {
      return this._isDirty$1(64);
    },
    _markScrollPositionDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 64) >>> 0;
    },
    _markScrollExtentMaxDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 128) >>> 0;
    },
    _markScrollExtentMinDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 256) >>> 0;
    },
    get$rect() {
      return this._rect;
    },
    get$isRectDirty() {
      return this._isDirty$1(512);
    },
    _markRectDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 512) >>> 0;
    },
    get$label() {
      return this._label;
    },
    get$hasLabel() {
      var t1 = this._label;
      return t1 != null && B.boolConversionCheck(J.get$isNotEmpty$asx(t1));
    },
    get$isLabelDirty() {
      return this._isDirty$1(1024);
    },
    _markLabelDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 1024) >>> 0;
    },
    get$hint() {
      return this._hint;
    },
    _markHintDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 2048) >>> 0;
    },
    get$value() {
      return this.__engine$_value;
    },
    get$hasValue() {
      var t1 = this.__engine$_value;
      return t1 != null && B.boolConversionCheck(J.get$isNotEmpty$asx(t1));
    },
    get$isValueDirty() {
      return this._isDirty$1(4096);
    },
    _markValueDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 4096) >>> 0;
    },
    get$increasedValue() {
      return this._increasedValue;
    },
    get$isIncreasedValueDirty() {
      return this._isDirty$1(8192);
    },
    _markIncreasedValueDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 8192) >>> 0;
    },
    get$decreasedValue() {
      return this._decreasedValue;
    },
    get$isDecreasedValueDirty() {
      return this._isDirty$1(16384);
    },
    _markDecreasedValueDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 16384) >>> 0;
    },
    _markTextDirectionDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 32768) >>> 0;
    },
    get$isTransformDirty() {
      return this._isDirty$1(65536);
    },
    _markTransformDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 65536) >>> 0;
    },
    _markChildrenInTraversalOrderDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 524288) >>> 0;
    },
    _markChildrenInHitTestOrderDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 1048576) >>> 0;
    },
    _markAdditionalActionsDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 2097152) >>> 0;
    },
    get$tooltip() {
      return this.__engine$_tooltip;
    },
    get$hasTooltip() {
      var t1 = this.__engine$_tooltip;
      return t1 != null && B.boolConversionCheck(J.get$isNotEmpty$asx(t1));
    },
    _markTooltipDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 4194304) >>> 0;
    },
    get$platformViewId() {
      return this.__engine$_platformViewId;
    },
    get$isPlatformView() {
      return !B.boolConversionCheck(J.$eq$(this.__engine$_platformViewId, -1));
    },
    get$isPlatformViewIdDirty() {
      return this._isDirty$1(8388608);
    },
    _markPlatformViewIdDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 8388608) >>> 0;
    },
    get$headingLevel() {
      return this.__engine$_headingLevel;
    },
    get$isHeadingLevelDirty() {
      return this._isDirty$1(16777216);
    },
    _markHeadingLevelDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 16777216) >>> 0;
    },
    get$identifier() {
      return this.__engine$_identifier;
    },
    get$hasIdentifier() {
      var t1 = this.__engine$_identifier;
      return t1 != null && B.boolConversionCheck(J.get$isNotEmpty$asx(t1));
    },
    get$isIdentifierDirty() {
      return this._isDirty$1(33554432);
    },
    _markIdentifierDirty$0() {
      var t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$or();
      this._dirtyFields = (t1 | 33554432) >>> 0;
    },
    _isDirty$1(fieldIndex) {
      var t1;
      B._asInt(fieldIndex);
      t1 = this._dirtyFields;
      if (typeof t1 !== "number")
        return t1.$and();
      return (t1 & fieldIndex) >>> 0 !== 0;
    },
    get$element() {
      return this.primaryRole.get$element();
    },
    getOrCreateChildContainer$0() {
      var t2, _this = this,
        t1 = _this._childContainerElement;
      if (t1 == null) {
        _this.set$_childContainerElement(A.createDomElement("flt-semantics-container"));
        t1 = _this._childContainerElement;
        t1.toString;
        t1 = B.getProperty(t1, "style", type$.JavaScriptObject);
        A.DomCSSStyleDeclarationExtension_set_position(t1, "absolute");
        A.DomCSSStyleDeclarationExtension_set_pointerEvents(t1, "none");
        t1 = _this.get$element();
        t2 = _this._childContainerElement;
        t2.toString;
        B._callMethodUnchecked1(t1, "append", t2, type$.void);
        t1 = t2;
      }
      return t1;
    },
    get$parent() {
      return this.__engine$_parent;
    },
    hasFlag$1(flag) {
      var t1, t2;
      type$.SemanticsFlag._as(flag);
      t1 = this.__engine$_flags;
      t2 = flag.index;
      if (typeof t1 !== "number")
        return t1.$and();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return (t1 & t2) >>> 0 !== 0;
    },
    hasAction$1(action) {
      var t1, t2;
      type$.SemanticsAction._as(action);
      t1 = this.__engine$_actions;
      t1.toString;
      t2 = action.index;
      if (typeof t1 !== "number")
        return t1.$and();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return (t1 & t2) >>> 0 !== 0;
    },
    get$isFocusable() {
      return this.hasFlag$1(C.SemanticsFlag_2097152_isFocusable);
    },
    get$hasFocus() {
      return this.hasFlag$1(C.SemanticsFlag_32_isFocused);
    },
    get$hasEnabledState() {
      return this.hasFlag$1(C.SemanticsFlag_64_hasEnabledState);
    },
    get$isEnabled() {
      return this.hasFlag$1(C.SemanticsFlag_128_isEnabled);
    },
    get$isVerticalScrollContainer() {
      return B.boolConversionCheck(this.hasAction$1(C.SemanticsAction_32_scrollDown)) || B.boolConversionCheck(this.hasAction$1(C.SemanticsAction_16_scrollUp));
    },
    get$isHorizontalScrollContainer() {
      return B.boolConversionCheck(this.hasAction$1(C.SemanticsAction_4_scrollLeft)) || B.boolConversionCheck(this.hasAction$1(C.SemanticsAction_8_scrollRight));
    },
    get$isScrollContainer() {
      return B.boolConversionCheck(this.get$isVerticalScrollContainer()) || B.boolConversionCheck(this.get$isHorizontalScrollContainer());
    },
    get$hasChildren() {
      var t1 = this._childrenInTraversalOrder;
      return t1 != null && B.boolConversionCheck(J.get$isNotEmpty$asx(t1));
    },
    get$isTextField() {
      return this.hasFlag$1(C.SemanticsFlag_16_isTextField);
    },
    get$isHeading() {
      return !B.boolConversionCheck(J.$eq$(this.get$headingLevel(), 0));
    },
    get$isLink() {
      return this.hasFlag$1(C.SemanticsFlag_4194304_isLink);
    },
    get$isLiveRegion() {
      return B.boolConversionCheck(this.hasFlag$1(C.SemanticsFlag_32768_isLiveRegion)) && !B.boolConversionCheck(this.hasFlag$1(C.SemanticsFlag_8192_isHidden));
    },
    get$isVisualOnly() {
      return B.boolConversionCheck(this.hasFlag$1(C.SemanticsFlag_16384_isImage)) && !B.boolConversionCheck(this.get$isTappable()) && !B.boolConversionCheck(this.get$isButton());
    },
    get$scopesRoute() {
      return this.hasFlag$1(C.SemanticsFlag_2048_scopesRoute);
    },
    get$namesRoute() {
      return this.hasFlag$1(C.SemanticsFlag_4096_namesRoute);
    },
    enabledState$0() {
      if (B.boolConversionCheck(this.hasFlag$1(C.SemanticsFlag_64_hasEnabledState)))
        if (B.boolConversionCheck(this.hasFlag$1(C.SemanticsFlag_128_isEnabled)))
          return C.EnabledState_1;
        else
          return C.EnabledState_2;
      else
        return C.EnabledState_0;
    },
    updateSelf$1(update) {
      var t1, t2, _this = this;
      type$.SemanticsNodeUpdate._as(update);
      t1 = update.flags;
      if (!B.boolConversionCheck(J.$eq$(_this.__engine$_flags, t1))) {
        _this.set$__engine$_flags(t1);
        _this._markFlagsDirty$0();
      }
      t1 = update.identifier;
      if (!B.boolConversionCheck(J.$eq$(_this.__engine$_identifier, t1))) {
        _this.set$__engine$_identifier(t1);
        _this._markIdentifierDirty$0();
      }
      t1 = update.value;
      if (!B.boolConversionCheck(J.$eq$(_this.__engine$_value, t1))) {
        _this.set$__engine$_value(t1);
        _this._markValueDirty$0();
      }
      t1 = update.valueAttributes;
      if (!B.boolConversionCheck(J.$eq$(_this._valueAttributes, t1))) {
        _this.set$_valueAttributes(t1);
        _this._markValueDirty$0();
      }
      t1 = update.label;
      if (!B.boolConversionCheck(J.$eq$(_this._label, t1))) {
        _this.set$_label(t1);
        _this._markLabelDirty$0();
      }
      t1 = update.labelAttributes;
      if (!B.boolConversionCheck(J.$eq$(_this._labelAttributes, t1))) {
        _this.set$_labelAttributes(t1);
        _this._markLabelDirty$0();
      }
      t1 = update.rect;
      if (!B.boolConversionCheck(J.$eq$(_this._rect, t1))) {
        _this.set$_rect(t1);
        _this._markRectDirty$0();
      }
      t1 = update.transform;
      if (!B.boolConversionCheck(J.$eq$(_this.__engine$_transform, t1))) {
        _this.set$__engine$_transform(t1);
        _this._markTransformDirty$0();
      }
      t1 = update.scrollPosition;
      if (!B.boolConversionCheck(J.$eq$(_this.__engine$_scrollPosition, t1))) {
        _this.set$__engine$_scrollPosition(t1);
        _this._markScrollPositionDirty$0();
      }
      t1 = update.actions;
      if (!B.boolConversionCheck(J.$eq$(_this.__engine$_actions, t1))) {
        _this.set$__engine$_actions(t1);
        _this._markActionsDirty$0();
      }
      t1 = update.textSelectionBase;
      if (!B.boolConversionCheck(J.$eq$(_this._textSelectionBase, t1))) {
        _this.set$_textSelectionBase(t1);
        _this._markTextSelectionBaseDirty$0();
      }
      t1 = update.textSelectionExtent;
      if (!B.boolConversionCheck(J.$eq$(_this._textSelectionExtent, t1))) {
        _this.set$_textSelectionExtent(t1);
        _this._markTextSelectionExtentDirty$0();
      }
      t1 = update.scrollChildren;
      if (!B.boolConversionCheck(J.$eq$(_this._scrollChildren, t1))) {
        _this.set$_scrollChildren(t1);
        _this._markScrollChildrenDirty$0();
      }
      t1 = update.scrollIndex;
      if (!B.boolConversionCheck(J.$eq$(_this.__engine$_scrollIndex, t1))) {
        _this.set$__engine$_scrollIndex(t1);
        _this._markScrollIndexDirty$0();
      }
      t1 = update.scrollExtentMax;
      if (!B.boolConversionCheck(J.$eq$(_this.__engine$_scrollExtentMax, t1))) {
        _this.set$__engine$_scrollExtentMax(t1);
        _this._markScrollExtentMaxDirty$0();
      }
      t1 = update.scrollExtentMin;
      if (!B.boolConversionCheck(J.$eq$(_this.__engine$_scrollExtentMin, t1))) {
        _this.set$__engine$_scrollExtentMin(t1);
        _this._markScrollExtentMinDirty$0();
      }
      t1 = update.hint;
      if (!B.boolConversionCheck(J.$eq$(_this._hint, t1))) {
        _this.set$_hint(t1);
        _this._markHintDirty$0();
      }
      t1 = update.hintAttributes;
      if (!B.boolConversionCheck(J.$eq$(_this._hintAttributes, t1))) {
        _this.set$_hintAttributes(t1);
        _this._markHintDirty$0();
      }
      t1 = update.increasedValue;
      if (!B.boolConversionCheck(J.$eq$(_this._increasedValue, t1))) {
        _this.set$_increasedValue(t1);
        _this._markIncreasedValueDirty$0();
      }
      t1 = update.increasedValueAttributes;
      if (!B.boolConversionCheck(J.$eq$(_this._increasedValueAttributes, t1))) {
        _this.set$_increasedValueAttributes(t1);
        _this._markIncreasedValueDirty$0();
      }
      t1 = update.decreasedValue;
      if (!B.boolConversionCheck(J.$eq$(_this._decreasedValue, t1))) {
        _this.set$_decreasedValue(t1);
        _this._markDecreasedValueDirty$0();
      }
      t1 = update.decreasedValueAttributes;
      if (!B.boolConversionCheck(J.$eq$(_this._decreasedValueAttributes, t1))) {
        _this.set$_decreasedValueAttributes(t1);
        _this._markDecreasedValueDirty$0();
      }
      t1 = update.tooltip;
      if (!B.boolConversionCheck(J.$eq$(_this.__engine$_tooltip, t1))) {
        _this.set$__engine$_tooltip(t1);
        _this._markTooltipDirty$0();
      }
      t1 = update.headingLevel;
      if (!B.boolConversionCheck(J.$eq$(_this.__engine$_headingLevel, t1))) {
        _this.set$__engine$_headingLevel(t1);
        _this._markHeadingLevelDirty$0();
      }
      t1 = update.textDirection;
      if (!B.boolConversionCheck(J.$eq$(_this.__engine$_textDirection, t1))) {
        _this.set$__engine$_textDirection(t1);
        _this._markTextDirectionDirty$0();
      }
      t1 = update.childrenInHitTestOrder;
      if (!B.boolConversionCheck(J.$eq$(_this._childrenInHitTestOrder, t1))) {
        _this.set$_childrenInHitTestOrder(t1);
        _this._markChildrenInHitTestOrderDirty$0();
      }
      t1 = update.childrenInTraversalOrder;
      if (!B.boolConversionCheck(J.$eq$(_this._childrenInTraversalOrder, t1))) {
        _this.set$_childrenInTraversalOrder(t1);
        _this._markChildrenInTraversalOrderDirty$0();
      }
      t1 = update.additionalActions;
      if (!B.boolConversionCheck(J.$eq$(_this._additionalActions, t1))) {
        _this.set$_additionalActions(t1);
        _this._markAdditionalActionsDirty$0();
      }
      t1 = update.platformViewId;
      if (!B.boolConversionCheck(J.$eq$(_this.__engine$_platformViewId, t1))) {
        _this.set$__engine$_platformViewId(t1);
        _this._markPlatformViewIdDirty$0();
      }
      _this._updateRoles$0();
      if (B.boolConversionCheck(_this.get$isRectDirty()) || B.boolConversionCheck(_this.get$isTransformDirty()) || B.boolConversionCheck(_this.get$isScrollPositionDirty()))
        _this.recomputePositionAndSize$0();
      t1 = !B.boolConversionCheck(_this.get$hasChildren()) && !B.boolConversionCheck(_this.get$isPlatformView());
      t2 = type$.JavaScriptObject;
      if (t1)
        A.DomCSSStyleDeclarationExtension_set_pointerEvents(B.getProperty(_this.get$element(), "style", t2), "all");
      else
        A.DomCSSStyleDeclarationExtension_set_pointerEvents(B.getProperty(_this.get$element(), "style", t2), "none");
    },
    updateChildren$0() {
      var len, i, t2, childCount, containerElement, childrenInRenderOrder, t3, t4, t5, previousCount, intersectionIndicesOld, minLength, newIndex, oldIndex, longestSequence, stationaryIds, refNode, child, _this = this,
        t1 = _this._childrenInHitTestOrder;
      if (t1 == null || B.boolConversionCheck(J.get$isEmpty$asx(t1))) {
        t1 = _this._currentChildrenInRenderOrder;
        if (t1 == null || B.boolConversionCheck(J.get$isEmpty$asx(t1))) {
          _this.set$_currentChildrenInRenderOrder(null);
          return;
        }
        t1 = _this._currentChildrenInRenderOrder;
        t1.toString;
        len = J.get$length$asx(t1);
        for (t1 = _this.owner, i = 0; i < len; ++i) {
          t2 = _this._currentChildrenInRenderOrder;
          t2.toString;
          t1._detachObject$1(J.$index$asx(t2, i).id);
        }
        t1 = _this._childContainerElement;
        t1.toString;
        B._callMethodUnchecked0(t1, "remove", type$.void);
        _this._childContainerElement = null;
        _this.set$_currentChildrenInRenderOrder(null);
        return;
      }
      t1 = _this._childrenInTraversalOrder;
      t1.toString;
      t2 = _this._childrenInHitTestOrder;
      t2.toString;
      childCount = t2.length;
      containerElement = _this.getOrCreateChildContainer$0();
      childrenInRenderOrder = B._setArrayType([], type$.JSArray_SemanticsObject);
      for (t3 = _this.owner, t4 = t1.length, i = 0; i < childCount; ++i) {
        t5 = t3._semanticsTree;
        if (!(i < t4))
          return B.ioore(t1, i);
        t5 = J.$index$asx(t5, t1[i]);
        t5.toString;
        D.JSArray_methods.add$1(childrenInRenderOrder, t5);
      }
      if (childCount > 1)
        for (t1 = type$.JavaScriptObject, i = 0; i < childCount; ++i) {
          t4 = J.$index$asx(t3._semanticsTree, t2[i]);
          t4.toString;
          A.DomCSSStyleDeclarationExtension_set_zIndex(B.getProperty(t4.get$element(), "style", t1), "" + (childCount - i));
        }
      t1 = _this._currentChildrenInRenderOrder;
      if (t1 == null || B.boolConversionCheck(J.get$isEmpty$asx(t1))) {
        for (t1 = D.JSArray_methods.get$iterator(childrenInRenderOrder), t2 = type$.void; B.boolConversionCheck(t1.moveNext$0());) {
          t4 = t1.get$current();
          containerElement.toString;
          B._callMethodUnchecked1(containerElement, "append", t4.get$element(), t2);
          t3._attachObject$2$child$parent(t4, _this);
        }
        _this.set$_currentChildrenInRenderOrder(childrenInRenderOrder);
        return;
      }
      t1 = _this._currentChildrenInRenderOrder;
      t1.toString;
      t2 = J.getInterceptor$asx(t1);
      previousCount = t2.get$length(t1);
      t4 = type$.JSArray_int;
      intersectionIndicesOld = B._setArrayType([], t4);
      minLength = A.min(previousCount, childCount, type$.int);
      newIndex = 0;
      while (true) {
        if (newIndex < minLength) {
          t5 = t2.$index(t1, newIndex);
          if (!(newIndex < childrenInRenderOrder.length))
            return B.ioore(childrenInRenderOrder, newIndex);
          t5 = B.boolConversionCheck(J.$eq$(t5, childrenInRenderOrder[newIndex]));
        } else
          t5 = false;
        if (!t5)
          break;
        D.JSArray_methods.add$1(intersectionIndicesOld, newIndex);
        ++newIndex;
      }
      if (previousCount === childrenInRenderOrder.length && newIndex === childCount)
        return;
      for (; newIndex < childCount;) {
        for (oldIndex = 0; oldIndex < previousCount; ++oldIndex) {
          t5 = t2.$index(t1, oldIndex);
          if (!(newIndex < childrenInRenderOrder.length))
            return B.ioore(childrenInRenderOrder, newIndex);
          if (B.boolConversionCheck(J.$eq$(t5, childrenInRenderOrder[newIndex]))) {
            D.JSArray_methods.add$1(intersectionIndicesOld, oldIndex);
            break;
          }
        }
        ++newIndex;
      }
      longestSequence = A.longestIncreasingSubsequence(intersectionIndicesOld);
      stationaryIds = B._setArrayType([], t4);
      t4 = J.getInterceptor$asx(longestSequence);
      i = 0;
      while (true) {
        t5 = t4.get$length(longestSequence);
        if (typeof t5 !== "number")
          return B.iae(t5);
        if (!(i < t5))
          break;
        t5 = t4.$index(longestSequence, i);
        t5.toString;
        D.JSArray_methods.add$1(stationaryIds, t2.$index(t1, D.JSArray_methods.$index(intersectionIndicesOld, t5)).id);
        ++i;
      }
      for (i = 0; i < previousCount; ++i)
        if (!B.boolConversionCheck(D.JSArray_methods.contains$1(intersectionIndicesOld, i)))
          t3._detachObject$1(t2.$index(t1, i).id);
      for (i = childCount - 1, t1 = type$.JavaScriptObject, t2 = type$.void, refNode = null; i >= 0; --i) {
        if (!(i < childrenInRenderOrder.length))
          return B.ioore(childrenInRenderOrder, i);
        child = childrenInRenderOrder[i];
        if (!B.boolConversionCheck(D.JSArray_methods.contains$1(stationaryIds, child.id))) {
          if (refNode == null) {
            containerElement.toString;
            B._callMethodUnchecked1(containerElement, "append", child.get$element(), t2);
          } else {
            containerElement.toString;
            B._callMethodUnchecked2(containerElement, "insertBefore", child.get$element(), refNode, t1);
          }
          t3._attachObject$2$child$parent(child, _this);
        }
        refNode = child.get$element();
      }
      _this.set$_currentChildrenInRenderOrder(childrenInRenderOrder);
    },
    _getPrimaryRoleIdentifier$0() {
      var _this = this;
      if (B.boolConversionCheck(_this.get$isPlatformView()))
        return C.PrimaryRole_8;
      else if (B.boolConversionCheck(_this.get$isHeading()))
        return C.PrimaryRole_5;
      else if (B.boolConversionCheck(_this.get$isTextField()))
        return C.PrimaryRole_3;
      else if (B.boolConversionCheck(_this.get$isIncrementable()))
        return C.PrimaryRole_0;
      else if (B.boolConversionCheck(_this.get$isVisualOnly()))
        return C.PrimaryRole_6;
      else if (B.boolConversionCheck(_this.get$isCheckable()))
        return C.PrimaryRole_4;
      else if (B.boolConversionCheck(_this.get$isButton()))
        return C.PrimaryRole_2;
      else if (B.boolConversionCheck(_this.get$isScrollContainer()))
        return C.PrimaryRole_1;
      else if (B.boolConversionCheck(_this.get$scopesRoute()))
        return C.PrimaryRole_7;
      else if (B.boolConversionCheck(_this.get$isLink()))
        return C.PrimaryRole_10;
      else
        return C.PrimaryRole_9;
    },
    _createPrimaryRole$1(role) {
      var t1, _this = this;
      switch (type$.PrimaryRole._as(role).index) {
        case 3:
          t1 = A.TextField$(_this);
          break;
        case 1:
          t1 = A.Scrollable$(_this);
          break;
        case 0:
          t1 = A.Incrementable$(_this);
          break;
        case 2:
          t1 = A.Button$(_this);
          break;
        case 4:
          t1 = A.Checkable$(_this);
          break;
        case 7:
          t1 = A.Dialog$(_this);
          break;
        case 6:
          t1 = A.ImageRoleManager$(_this);
          break;
        case 8:
          t1 = A.PlatformViewRoleManager$(_this);
          break;
        case 10:
          t1 = A.Link$(_this);
          break;
        case 5:
          t1 = A.Heading$(_this);
          break;
        case 9:
          t1 = A.GenericRole$(_this);
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    _updateRoles$0() {
      var container, $parent, _this = this,
        currentPrimaryRole = _this.primaryRole,
        roleId = _this._getPrimaryRoleIdentifier$0(),
        t1 = _this.primaryRole,
        previousElement = t1 == null ? null : t1.get$element();
      if (currentPrimaryRole != null)
        if (B.boolConversionCheck(J.$eq$(currentPrimaryRole.role, roleId))) {
          currentPrimaryRole.update$0();
          return;
        } else {
          currentPrimaryRole.dispose$0();
          currentPrimaryRole = _this.primaryRole = null;
        }
      if (currentPrimaryRole == null) {
        currentPrimaryRole = _this.primaryRole = _this._createPrimaryRole$1(roleId);
        currentPrimaryRole.initState$0();
        currentPrimaryRole.update$0();
      }
      t1 = _this.get$element();
      if (previousElement == null ? t1 != null : previousElement !== t1) {
        container = _this._childContainerElement;
        if (container != null)
          B._callMethodUnchecked1(_this.get$element(), "append", container, type$.void);
        $parent = previousElement == null ? null : A.DomNodeExtension_get_parent(previousElement);
        if ($parent != null) {
          B._callMethodUnchecked2($parent, "insertBefore", _this.get$element(), previousElement, type$.JavaScriptObject);
          previousElement.toString;
          B._callMethodUnchecked0(previousElement, "remove", type$.void);
        }
      }
    },
    get$isIncrementable() {
      return B.boolConversionCheck(this.hasAction$1(C.SemanticsAction_64_increase)) || B.boolConversionCheck(this.hasAction$1(C.SemanticsAction_128_decrease));
    },
    get$isButton() {
      return this.hasFlag$1(C.SemanticsFlag_8_isButton);
    },
    get$isTappable() {
      return this.hasAction$1(C.SemanticsAction_1_tap);
    },
    get$isCheckable() {
      return B.boolConversionCheck(this.hasFlag$1(C.SemanticsFlag_1_hasCheckedState)) || B.boolConversionCheck(this.hasFlag$1(C.SemanticsFlag_65536_hasToggledState));
    },
    recomputePositionAndSize$0() {
      var containerElement, hasZeroRectOffset, transform, hasIdentityTransform, effectiveTransform, left, $top, effectiveTransformIsIdentity, t3, t4, t5, _this = this, _s5_ = "style",
        t1 = type$.JavaScriptObject,
        t2 = B.getProperty(_this.get$element(), _s5_, t1);
      A.DomCSSStyleDeclarationExtension_set_width(t2, B.S(_this._rect.get$width()) + "px");
      A.DomCSSStyleDeclarationExtension_set_height(t2, B.S(_this._rect.get$height()) + "px");
      containerElement = B.boolConversionCheck(_this.get$hasChildren()) ? _this.getOrCreateChildContainer$0() : null;
      hasZeroRectOffset = B.boolConversionCheck(J.$eq$(_this._rect.top, 0)) && B.boolConversionCheck(J.$eq$(_this._rect.left, 0));
      transform = _this.__engine$_transform;
      t2 = transform == null;
      hasIdentityTransform = t2 || B.boolConversionCheck(A.isIdentityFloat32ListTransform(transform));
      if (hasZeroRectOffset && hasIdentityTransform && B.boolConversionCheck(J.$eq$(_this.verticalContainerAdjustment, 0)) && B.boolConversionCheck(J.$eq$(_this.horizontalContainerAdjustment, 0))) {
        A.SemanticsObject__clearSemanticElementTransform(_this.get$element());
        if (containerElement != null)
          A.SemanticsObject__clearSemanticElementTransform(containerElement);
        return;
      }
      effectiveTransform = B._Cell$named("effectiveTransform");
      if (!hasZeroRectOffset)
        if (t2) {
          t2 = _this._rect;
          left = t2.left;
          $top = t2.top;
          effectiveTransform.set$value(A.Matrix4_Matrix4$translationValues(left, $top, 0));
          effectiveTransformIsIdentity = left === 0 && $top === 0;
        } else {
          t2 = A.Matrix4$fromFloat32List(transform).clone$0();
          t3 = _this._rect;
          t2.translate$2(t3.left, t3.top);
          effectiveTransform.set$value(t2);
          effectiveTransformIsIdentity = effectiveTransform.readLocal$1$0(type$.Matrix4).isIdentity$0();
        }
      else {
        if (!hasIdentityTransform)
          effectiveTransform.set$value(A.Matrix4$fromFloat32List(transform));
        effectiveTransformIsIdentity = hasIdentityTransform;
      }
      if (!effectiveTransformIsIdentity) {
        t2 = B.getProperty(_this.get$element(), _s5_, t1);
        A.DomCSSStyleDeclarationExtension_set_transformOrigin(t2, "0 0 0");
        A.DomCSSStyleDeclarationExtension_set_transform(t2, A.matrix4ToCssTransform(effectiveTransform.readLocal$1$0(type$.Matrix4)));
      } else
        A.SemanticsObject__clearSemanticElementTransform(_this.get$element());
      if (containerElement != null)
        if (!hasZeroRectOffset || !B.boolConversionCheck(J.$eq$(_this.verticalContainerAdjustment, 0)) || !B.boolConversionCheck(J.$eq$(_this.horizontalContainerAdjustment, 0))) {
          t2 = J.$negate$in(_this._rect.left);
          t3 = _this.horizontalContainerAdjustment;
          if (typeof t2 !== "number")
            return t2.$add();
          if (typeof t3 !== "number")
            return B.iae(t3);
          t4 = J.$negate$in(_this._rect.top);
          t5 = _this.verticalContainerAdjustment;
          if (typeof t4 !== "number")
            return t4.$add();
          if (typeof t5 !== "number")
            return B.iae(t5);
          t1 = B.getProperty(containerElement, _s5_, t1);
          A.DomCSSStyleDeclarationExtension_set_top(t1, B.S(t4 + t5) + "px");
          A.DomCSSStyleDeclarationExtension_set_left(t1, B.S(t2 + t3) + "px");
        } else
          A.SemanticsObject__clearSemanticElementTransform(containerElement);
    },
    visitDepthFirstInTraversalOrder$1(callback) {
      this._visitDepthFirstInTraversalOrder$1(type$.bool_Function_SemanticsObject._as(callback));
    },
    _visitDepthFirstInTraversalOrder$1(callback) {
      var childrenInTraversalOrder, t1, t2, t3;
      type$.bool_Function_SemanticsObject._as(callback);
      if (!callback.call$1(this))
        return false;
      childrenInTraversalOrder = this._childrenInTraversalOrder;
      if (childrenInTraversalOrder == null)
        return true;
      for (t1 = D.NativeInt32List_methods.get$iterator(childrenInTraversalOrder), t2 = this.owner; B.boolConversionCheck(t1.moveNext$0());) {
        t3 = t1.get$current();
        if (!B.boolConversionCheck(J.$index$asx(t2._semanticsTree, t3)._visitDepthFirstInTraversalOrder$1(callback)))
          return false;
      }
      return true;
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    },
    dispose$0() {
      var t1, _this = this;
      B._callMethodUnchecked0(_this.get$element(), "remove", type$.void);
      _this.__engine$_parent = null;
      t1 = _this.primaryRole;
      if (t1 != null)
        t1.dispose$0();
      _this.primaryRole = null;
    },
    set$__engine$_flags(_flags) {
      this.__engine$_flags = B._asInt(_flags);
    },
    set$__engine$_actions(_actions) {
      this.__engine$_actions = B._asIntQ(_actions);
    },
    set$_textSelectionBase(_textSelectionBase) {
      this._textSelectionBase = B._asIntQ(_textSelectionBase);
    },
    set$_textSelectionExtent(_textSelectionExtent) {
      this._textSelectionExtent = B._asIntQ(_textSelectionExtent);
    },
    set$_scrollChildren(_scrollChildren) {
      this._scrollChildren = B._asIntQ(_scrollChildren);
    },
    set$__engine$_scrollIndex(_scrollIndex) {
      this.__engine$_scrollIndex = B._asIntQ(_scrollIndex);
    },
    set$__engine$_scrollPosition(_scrollPosition) {
      this.__engine$_scrollPosition = B._asDoubleQ(_scrollPosition);
    },
    set$__engine$_scrollExtentMax(_scrollExtentMax) {
      this.__engine$_scrollExtentMax = B._asDoubleQ(_scrollExtentMax);
    },
    set$__engine$_scrollExtentMin(_scrollExtentMin) {
      this.__engine$_scrollExtentMin = B._asDoubleQ(_scrollExtentMin);
    },
    set$_rect(_rect) {
      this._rect = type$.nullable_Rect._as(_rect);
    },
    set$_label(_label) {
      this._label = B._asStringQ(_label);
    },
    set$_labelAttributes(_labelAttributes) {
      this._labelAttributes = type$.nullable_List_StringAttribute._as(_labelAttributes);
    },
    set$_hint(_hint) {
      this._hint = B._asStringQ(_hint);
    },
    set$_hintAttributes(_hintAttributes) {
      this._hintAttributes = type$.nullable_List_StringAttribute._as(_hintAttributes);
    },
    set$__engine$_value(_value) {
      this.__engine$_value = B._asStringQ(_value);
    },
    set$_valueAttributes(_valueAttributes) {
      this._valueAttributes = type$.nullable_List_StringAttribute._as(_valueAttributes);
    },
    set$_increasedValue(_increasedValue) {
      this._increasedValue = B._asStringQ(_increasedValue);
    },
    set$_increasedValueAttributes(_increasedValueAttributes) {
      this._increasedValueAttributes = type$.nullable_List_StringAttribute._as(_increasedValueAttributes);
    },
    set$_decreasedValue(_decreasedValue) {
      this._decreasedValue = B._asStringQ(_decreasedValue);
    },
    set$_decreasedValueAttributes(_decreasedValueAttributes) {
      this._decreasedValueAttributes = type$.nullable_List_StringAttribute._as(_decreasedValueAttributes);
    },
    set$__engine$_textDirection(_textDirection) {
      this.__engine$_textDirection = type$.nullable_TextDirection._as(_textDirection);
    },
    set$__engine$_transform(_transform) {
      this.__engine$_transform = type$.nullable_Float32List._as(_transform);
    },
    set$_childrenInTraversalOrder(_childrenInTraversalOrder) {
      this._childrenInTraversalOrder = type$.nullable_Int32List._as(_childrenInTraversalOrder);
    },
    set$_childrenInHitTestOrder(_childrenInHitTestOrder) {
      this._childrenInHitTestOrder = type$.nullable_Int32List._as(_childrenInHitTestOrder);
    },
    set$_additionalActions(_additionalActions) {
      this._additionalActions = type$.nullable_Int32List._as(_additionalActions);
    },
    set$__engine$_tooltip(_tooltip) {
      this.__engine$_tooltip = B._asStringQ(_tooltip);
    },
    set$__engine$_platformViewId(_platformViewId) {
      this.__engine$_platformViewId = B._asInt(_platformViewId);
    },
    set$__engine$_headingLevel(_headingLevel) {
      this.__engine$_headingLevel = B._asInt(_headingLevel);
    },
    set$__engine$_identifier(_identifier) {
      this.__engine$_identifier = B._asStringQ(_identifier);
    },
    set$_childContainerElement(_childContainerElement) {
      this._childContainerElement = type$.nullable_JavaScriptObject._as(_childContainerElement);
    },
    set$_currentChildrenInRenderOrder(_currentChildrenInRenderOrder) {
      this._currentChildrenInRenderOrder = type$.nullable_List_SemanticsObject._as(_currentChildrenInRenderOrder);
    },
    set$verticalContainerAdjustment(verticalContainerAdjustment) {
      this.verticalContainerAdjustment = B._asDouble(verticalContainerAdjustment);
    },
    set$horizontalContainerAdjustment(horizontalContainerAdjustment) {
      this.horizontalContainerAdjustment = B._asDouble(horizontalContainerAdjustment);
    }
  };
  A.AccessibilityMode.prototype = {
    _enumToString$0() {
      return "AccessibilityMode." + B.S(this._core$_name);
    }
  };
  A.GestureMode.prototype = {
    _enumToString$0() {
      return "GestureMode." + B.S(this._core$_name);
    }
  };
  A.EngineSemantics.prototype = {
    get$semanticsEnabled() {
      return this._semanticsEnabled;
    },
    set$semanticsEnabled(value) {
      var original, newConfiguration, t1, _this = this;
      B._asBool(value);
      if (value === _this._semanticsEnabled)
        return;
      original = type$.EngineAccessibilityFeatures._as(A.EnginePlatformDispatcher_instance().configuration.accessibilityFeatures);
      newConfiguration = A.EnginePlatformDispatcher_instance().configuration.copyWith$1$accessibilityFeatures(original.copyWith$1$accessibleNavigation(value));
      A.EnginePlatformDispatcher_instance().configuration = newConfiguration;
      _this._semanticsEnabled = value;
      if (!value) {
        if (!B.boolConversionCheck(J.$eq$(_this._gestureMode, C.GestureMode_0))) {
          _this._gestureMode = C.GestureMode_0;
          _this._notifyGestureModeListeners$0();
        }
        for (t1 = J.get$iterator$ax(A.EnginePlatformDispatcher_instance().get$views()); B.boolConversionCheck(t1.moveNext$0());)
          t1.get$current().get$semantics().reset$0();
        t1 = _this._gestureModeClock;
        if (t1 != null)
          t1.set$datetime(null);
      }
      A.EnginePlatformDispatcher_instance().updateSemanticsEnabled$1(_this._semanticsEnabled);
    },
    didReceiveSemanticsUpdate$0() {
      if (!B.boolConversionCheck(this._semanticsEnabled))
        if (B.boolConversionCheck(A.debugEmulateFlutterTesterEnvironment()))
          return;
        else {
          this.semanticsHelper.dispose$0();
          this.set$semanticsEnabled(true);
        }
    },
    get$gestureMode() {
      return this._gestureMode;
    },
    _getGestureModeClock$0() {
      var t1, _this = this;
      if (_this._gestureModeClock == null) {
        t1 = A.AlarmClock$(_this._now);
        _this._gestureModeClock = t1;
        t1.set$callback(new A.EngineSemantics__getGestureModeClock_closure(_this));
      }
      return _this._gestureModeClock;
    },
    _temporarilyDisableBrowserGestureMode$0() {
      var _this = this,
        t1 = _this._getGestureModeClock$0();
      t1.toString;
      t1.set$datetime(J.add$1$ax(_this._now.call$0(), C.Duration_500000));
      if (!B.boolConversionCheck(J.$eq$(_this._gestureMode, C.GestureMode_0))) {
        _this._gestureMode = C.GestureMode_0;
        _this._notifyGestureModeListeners$0();
      }
    },
    receiveGlobalEvent$1($event) {
      type$.JavaScriptObject._as($event);
      if (B.boolConversionCheck(D.JSArray_methods.contains$1(C.List_OGJ, A.DomEventExtension_get_type($event))))
        this._temporarilyDisableBrowserGestureMode$0();
      return this.semanticsHelper.shouldEnableSemantics$1($event);
    },
    addGestureModeListener$1(callback) {
      J.add$1$ax(this._gestureModeListeners, type$.void_Function_GestureMode._as(callback));
    },
    removeGestureModeListener$1(callback) {
      J.remove$1$ax(this._gestureModeListeners, type$.void_Function_GestureMode._as(callback));
    },
    _notifyGestureModeListeners$0() {
      var t3,
        t1 = this._gestureModeListeners,
        t2 = J.getInterceptor$asx(t1),
        i = 0;
      while (true) {
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i < t3))
          break;
        t2.$index(t1, i).call$1(this._gestureMode);
        ++i;
      }
    },
    shouldAcceptBrowserGesture$1(eventType) {
      B._asString(eventType);
      if (B.boolConversionCheck(D.JSArray_methods.contains$1(C.List_click_scroll, eventType)))
        return J.$eq$(this._gestureMode, C.GestureMode_1);
      return false;
    }
  };
  A.EngineSemanticsOwner.prototype = {
    EngineSemanticsOwner$1(semanticsHost) {
      A.registerHotRestartListener(new A.EngineSemanticsOwner_closure(this));
    },
    _attachObject$2$child$parent(child, $parent) {
      var t1 = type$.SemanticsObject;
      t1._as($parent);
      t1._as(child);
      child.__engine$_parent = $parent;
      J.$indexSet$ax(this._attachments, child.id, $parent);
    },
    _detachObject$1(id) {
      var object = J.$index$asx(this._semanticsTree, B._asInt(id));
      if (object != null)
        J.add$1$ax(this._detachments, object);
    },
    addOneTimePostUpdateCallback$1(callback) {
      type$.void_Function._as(callback);
      J.add$1$ax(this._oneTimePostUpdateCallbacks, callback);
    },
    _finalizeTree$0() {
      var callback, t2, t3, t4, t5, _this = this,
        t1 = type$.SemanticsObject,
        removals = B.LinkedHashSet_LinkedHashSet$_empty(t1);
      for (t2 = J.get$iterator$ax(_this._detachments); B.boolConversionCheck(t2.moveNext$0());)
        t2.get$current().visitDepthFirstInTraversalOrder$1(new A.EngineSemanticsOwner__finalizeTree_closure(_this, removals));
      for (t2 = removals.get$iterator(0), t3 = _this._semanticsTree, t4 = J.getInterceptor$ax(t3); B.boolConversionCheck(t2.moveNext$0());) {
        t5 = t2.get$current();
        t4.remove$1(t3, t5.id);
        t5.dispose$0();
      }
      _this.set$_detachments(B._setArrayType([], type$.JSArray_SemanticsObject));
      _this.set$_attachments(B.LinkedHashMap_LinkedHashMap$_empty(type$.int, t1));
      try {
        if (B.boolConversionCheck(J.get$isNotEmpty$asx(_this._oneTimePostUpdateCallbacks))) {
          for (t1 = J.get$iterator$ax(_this._oneTimePostUpdateCallbacks); B.boolConversionCheck(t1.moveNext$0());) {
            callback = t1.get$current();
            callback.call$0();
          }
          _this.set$_oneTimePostUpdateCallbacks(B._setArrayType([], type$.JSArray_of_void_Function));
        }
      } finally {
      }
      _this._hasNodeRequestingFocus = false;
    },
    getOrCreateObject$1(id) {
      var t1, t2, object;
      B._asInt(id);
      t1 = this._semanticsTree;
      t2 = J.getInterceptor$asx(t1);
      object = t2.$index(t1, id);
      if (object == null) {
        object = A.SemanticsObject$(id, this);
        t2.$indexSet(t1, id, object);
      }
      return object;
    },
    updateSemantics$1(uiUpdate) {
      var t1, t2, t3, t4, _this = this;
      type$.SemanticsUpdate._as(uiUpdate);
      A.EngineSemantics_instance().didReceiveSemanticsUpdate$0();
      if (!B.boolConversionCheck(A.EngineSemantics_instance().get$semanticsEnabled()))
        return;
      t1 = uiUpdate._nodeUpdates;
      t1.toString;
      for (t2 = J.getInterceptor$ax(t1), t3 = t2.get$iterator(t1); B.boolConversionCheck(t3.moveNext$0());) {
        t4 = t3.get$current();
        _this.getOrCreateObject$1(t4.id).updateSelf$1(t4);
      }
      for (t1 = t2.get$iterator(t1), t2 = _this._semanticsTree, t3 = J.getInterceptor$asx(t2); B.boolConversionCheck(t1.moveNext$0());) {
        t4 = t3.$index(t2, t1.get$current().id);
        t4.toString;
        t4.updateChildren$0();
        t4._dirtyFields = 0;
      }
      t1 = t3.$index(t2, 0);
      t1.toString;
      if (_this._rootSemanticsElement == null) {
        _this.set$_rootSemanticsElement(t1.get$element());
        B._callMethodUnchecked1(_this.semanticsHost, "append", t1.get$element(), type$.void);
      }
      _this._finalizeTree$0();
    },
    reset$0() {
      var i, _this = this,
        t1 = _this._semanticsTree,
        keys = J.toList$0$ax(t1.get$keys()),
        t2 = J.getInterceptor$asx(keys),
        len = t2.get$length(keys);
      for (i = 0; i < len; ++i)
        _this._detachObject$1(t2.$index(keys, i));
      _this._finalizeTree$0();
      t2 = _this._rootSemanticsElement;
      if (t2 != null)
        B._callMethodUnchecked0(t2, "remove", type$.void);
      _this._rootSemanticsElement = null;
      J.clear$0$ax(t1);
      J.clear$0$ax(_this._attachments);
      J.clear$0$ax(_this._detachments);
      J.clear$0$ax(_this._oneTimePostUpdateCallbacks);
    },
    get$hasNodeRequestingFocus() {
      return this._hasNodeRequestingFocus;
    },
    willRequestFocus$0() {
      this._hasNodeRequestingFocus = true;
    },
    set$_rootSemanticsElement(_rootSemanticsElement) {
      this._rootSemanticsElement = type$.nullable_JavaScriptObject._as(_rootSemanticsElement);
    },
    set$_attachments(_attachments) {
      this._attachments = type$.Map_int_SemanticsObject._as(_attachments);
    },
    set$_detachments(_detachments) {
      this._detachments = type$.List_SemanticsObject._as(_detachments);
    },
    set$_oneTimePostUpdateCallbacks(_oneTimePostUpdateCallbacks) {
      this._oneTimePostUpdateCallbacks = type$.List_of_void_Function._as(_oneTimePostUpdateCallbacks);
    }
  };
  A.EnabledState.prototype = {
    _enumToString$0() {
      return "EnabledState." + B.S(this._core$_name);
    }
  };
  A.SemanticsHelper.prototype = {
    shouldEnableSemantics$1($event) {
      return this._semanticsEnabler.shouldEnableSemantics$1(type$.JavaScriptObject._as($event));
    },
    prepareAccessibilityPlaceholder$0() {
      return this._semanticsEnabler.prepareAccessibilityPlaceholder$0();
    },
    dispose$0() {
      this._semanticsEnabler.dispose$0();
    }
  };
  A.SemanticsEnabler.prototype = {
    shouldEnableSemantics$1($event) {
      type$.JavaScriptObject._as($event);
      if (!B.boolConversionCheck(this.get$isWaitingToEnableSemantics()))
        return true;
      else
        return this.tryEnableSemantics$1($event);
    }
  };
  A.DesktopSemanticsEnabler.prototype = {
    get$isWaitingToEnableSemantics() {
      return this._semanticsPlaceholder != null;
    },
    tryEnableSemantics$1($event) {
      type$.JavaScriptObject._as($event);
      if (!B.boolConversionCheck(this.get$isWaitingToEnableSemantics()))
        return true;
      if (B.boolConversionCheck(A.EngineSemantics_instance().get$semanticsEnabled()))
        return true;
      if (!B.boolConversionCheck(C.Set_2nPij.contains$1(0, A.DomEventExtension_get_type($event))))
        return true;
      if (!J.$eq$(B.getProperty($event, "target", type$.nullable_JavaScriptObject), this._semanticsPlaceholder))
        return true;
      A.EngineSemantics_instance().set$semanticsEnabled(true);
      this.dispose$0();
      return false;
    },
    prepareAccessibilityPlaceholder$0() {
      var t1,
        placeholder = A.createDomElement("flt-semantics-placeholder");
      this.set$_semanticsPlaceholder(placeholder);
      A.DomEventTargetExtension_addEventListener(placeholder, "click", A.createDomEventListener(new A.DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure(this)), true);
      A.DomElementExtension_setAttribute(placeholder, "role", "button");
      A.DomElementExtension_setAttribute(placeholder, "aria-live", "polite");
      A.DomElementExtension_setAttribute(placeholder, "tabindex", "0");
      A.DomElementExtension_setAttribute(placeholder, "aria-label", "Enable accessibility");
      t1 = B.getProperty(placeholder, "style", type$.JavaScriptObject);
      A.DomCSSStyleDeclarationExtension_set_position(t1, "absolute");
      A.DomCSSStyleDeclarationExtension_set_left(t1, "-1px");
      A.DomCSSStyleDeclarationExtension_set_top(t1, "-1px");
      A.DomCSSStyleDeclarationExtension_set_width(t1, "1px");
      A.DomCSSStyleDeclarationExtension_set_height(t1, "1px");
      return placeholder;
    },
    dispose$0() {
      var t1 = this._semanticsPlaceholder;
      if (t1 != null)
        B._callMethodUnchecked0(t1, "remove", type$.void);
      this._semanticsPlaceholder = null;
    },
    set$_semanticsPlaceholder(_semanticsPlaceholder) {
      this._semanticsPlaceholder = type$.nullable_JavaScriptObject._as(_semanticsPlaceholder);
    }
  };
  A.MobileSemanticsEnabler.prototype = {
    get$isWaitingToEnableSemantics() {
      return this._semanticsPlaceholder != null;
    },
    tryEnableSemantics$1($event) {
      var t2, activationPoint, activatingElementRect, t3, t4, t5, t6, t7, t8, deltaX, deltaY, _this = this,
        t1 = type$.JavaScriptObject;
      t1._as($event);
      if (!B.boolConversionCheck(_this.get$isWaitingToEnableSemantics()))
        return true;
      if (B.boolConversionCheck(_this._schedulePlaceholderRemoval)) {
        if (!B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_1)) || B.boolConversionCheck(J.$eq$(A.DomEventExtension_get_type($event), "touchend")) || B.boolConversionCheck(J.$eq$(A.DomEventExtension_get_type($event), "pointerup")) || B.boolConversionCheck(J.$eq$(A.DomEventExtension_get_type($event), "click")))
          _this.dispose$0();
        return true;
      }
      if (B.boolConversionCheck(A.EngineSemantics_instance().get$semanticsEnabled()))
        return true;
      t2 = _this.semanticsActivationAttempts;
      if (typeof t2 !== "number")
        return t2.$add();
      _this.set$semanticsActivationAttempts(t2 + 1);
      t2 = _this.semanticsActivationAttempts;
      if (typeof t2 !== "number")
        return t2.$ge();
      if (t2 >= 20)
        return _this._schedulePlaceholderRemoval = true;
      if (!B.boolConversionCheck(C.Set_3bBbi.contains$1(0, A.DomEventExtension_get_type($event))))
        return true;
      if (_this.semanticsActivationTimer != null)
        return false;
      activationPoint = B._Cell$named("activationPoint");
      switch (A.DomEventExtension_get_type($event)) {
        case "click":
          activationPoint.set$finalLocalValue(A.DomMouseEventExtension_get_offset($event));
          break;
        case "touchstart":
        case "touchend":
          activationPoint.set$finalLocalValue(A.DomTouchExtension_get_client(J.get$first$ax(A.DomTouchEventExtension_get_changedTouches($event))));
          break;
        case "pointerdown":
        case "pointerup":
          activationPoint.set$finalLocalValue(A.DomMouseEventExtension_get_client($event));
          break;
        default:
          return true;
      }
      t2 = _this._semanticsPlaceholder;
      t2.toString;
      activatingElementRect = B._callMethodUnchecked0(t2, "getBoundingClientRect", t1);
      t1 = A.DomRectReadOnlyExtension_get_left(activatingElementRect);
      t2 = A.DomRectReadOnlyExtension_get_right(activatingElementRect);
      t3 = A.DomRectReadOnlyExtension_get_left(activatingElementRect);
      if (typeof t2 !== "number")
        return t2.$sub();
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (typeof t1 !== "number")
        return t1.$add();
      t4 = A.DomRectReadOnlyExtension_get_top(activatingElementRect);
      t5 = A.DomRectReadOnlyExtension_get_bottom(activatingElementRect);
      t6 = A.DomRectReadOnlyExtension_get_top(activatingElementRect);
      if (typeof t5 !== "number")
        return t5.$sub();
      if (typeof t6 !== "number")
        return B.iae(t6);
      if (typeof t4 !== "number")
        return t4.$add();
      t7 = type$.DomPoint;
      t8 = J.toDouble$0$n(activationPoint.readLocal$1$0(t7).x);
      if (typeof t8 !== "number")
        return t8.$sub();
      deltaX = t8 - (t1 + (t2 - t3) / 2);
      t7 = J.toDouble$0$n(activationPoint.readLocal$1$0(t7).y);
      if (typeof t7 !== "number")
        return t7.$sub();
      deltaY = t7 - (t4 + (t5 - t6) / 2);
      if (deltaX * deltaX + deltaY * deltaY < 1) {
        _this._schedulePlaceholderRemoval = true;
        _this.set$semanticsActivationTimer(A.Timer_Timer(C.Duration_300000, new A.MobileSemanticsEnabler_tryEnableSemantics_closure(_this)));
        return false;
      }
      return true;
    },
    prepareAccessibilityPlaceholder$0() {
      var t1,
        placeholder = A.createDomElement("flt-semantics-placeholder");
      this.set$_semanticsPlaceholder(placeholder);
      A.DomEventTargetExtension_addEventListener(placeholder, "click", A.createDomEventListener(new A.MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure(this)), true);
      A.DomElementExtension_setAttribute(placeholder, "role", "button");
      A.DomElementExtension_setAttribute(placeholder, "aria-label", "Enable accessibility");
      t1 = B.getProperty(placeholder, "style", type$.JavaScriptObject);
      A.DomCSSStyleDeclarationExtension_set_position(t1, "absolute");
      A.DomCSSStyleDeclarationExtension_set_left(t1, "0");
      A.DomCSSStyleDeclarationExtension_set_top(t1, "0");
      A.DomCSSStyleDeclarationExtension_set_right(t1, "0");
      A.DomCSSStyleDeclarationExtension_set_bottom(t1, "0");
      return placeholder;
    },
    dispose$0() {
      var t1 = this._semanticsPlaceholder;
      if (t1 != null)
        B._callMethodUnchecked0(t1, "remove", type$.void);
      this.semanticsActivationTimer = this._semanticsPlaceholder = null;
    },
    set$semanticsActivationTimer(semanticsActivationTimer) {
      this.semanticsActivationTimer = type$.nullable_Timer._as(semanticsActivationTimer);
    },
    set$_semanticsPlaceholder(_semanticsPlaceholder) {
      this._semanticsPlaceholder = type$.nullable_JavaScriptObject._as(_semanticsPlaceholder);
    },
    set$semanticsActivationAttempts(semanticsActivationAttempts) {
      this.semanticsActivationAttempts = B._asInt(semanticsActivationAttempts);
    }
  };
  A.Button.prototype = {
    Button$1(semanticsObject) {
      this.addTappable$0();
      this.setAriaRole$1("button");
    },
    focusAsRouteDefault$0() {
      var t1 = this.get$focusable();
      t1 = t1 == null ? null : t1.focusAsRouteDefault$0();
      return t1 == null ? false : t1;
    },
    update$0() {
      var _this = this,
        _s13_ = "aria-disabled";
      _this.super$PrimaryRoleManager$update();
      if (B.boolConversionCheck(J.$eq$(_this.semanticsObject.enabledState$0(), C.EnabledState_2)))
        _this.setAttribute$2(_s13_, "true");
      else
        _this.removeAttribute$1(_s13_);
    }
  };
  A.Tappable.prototype = {
    Tappable$2(semanticsObject, owner) {
      this.set$_clickListener(A.createDomEventListener(new A.Tappable_closure(this, semanticsObject)));
      A.DomEventTargetExtension_addEventListener(owner.get$element(), "click", this._clickListener, null);
    },
    update$0() {
      var _this = this,
        wasListening = _this._isListening,
        t1 = _this.semanticsObject;
      t1 = !B.boolConversionCheck(J.$eq$(t1.enabledState$0(), C.EnabledState_2)) && B.boolConversionCheck(t1.get$isTappable());
      _this._isListening = t1;
      if (wasListening !== t1)
        _this._updateAttribute$0();
    },
    _updateAttribute$0() {
      var _s12_ = "flt-tappable",
        t1 = this.owner;
      if (B.boolConversionCheck(this._isListening))
        A.DomElementExtension_setAttribute(t1.get$element(), _s12_, "");
      else
        A.DomElementExtension_removeAttribute(t1.get$element(), _s12_);
    },
    set$_clickListener(_clickListener) {
      this._clickListener = type$.nullable_JavaScriptObject._as(_clickListener);
    }
  };
  A.SemanticsTextEditingStrategy.prototype = {
    enable$3$onAction$onChange(inputConfig, onAction, onChange) {
      type$.InputConfiguration._as(inputConfig);
      type$.void_Function_2_nullable_EditingState_and_nullable_TextEditingDeltaState._as(onChange);
      type$.void_Function_nullable_String._as(onAction);
      this.inputConfig = inputConfig;
      this.set$onChange(onChange);
      this.set$onAction(onAction);
    },
    activate$1(textField) {
      var t1, t2, t3, _this = this;
      type$.TextField._as(textField);
      if (B.boolConversionCheck(J.$eq$(_this.activeTextField, textField)))
        return;
      else if (_this.activeTextField != null)
        _this.disable$0();
      _this.activeTextField = textField;
      _this.set$domElement(textField.editableElement);
      _this._syncStyle$0();
      t1 = _this.inputConfig;
      t1.toString;
      t2 = _this.onChange;
      t2.toString;
      t3 = _this.onAction;
      t3.toString;
      _this.super$DefaultTextEditingStrategy$enable(t1, t3, t2);
    },
    deactivate$1(textField) {
      type$.TextField._as(textField);
      if (B.boolConversionCheck(J.$eq$(this.activeTextField, textField)))
        this.disable$0();
    },
    disable$0() {
      var t1, t2, i, t3, _this = this;
      if (!B.boolConversionCheck(_this.isEnabled))
        return;
      _this.isEnabled = false;
      _this.geometry = _this.style = null;
      t1 = _this.subscriptions;
      t2 = J.getInterceptor$asx(t1);
      i = 0;
      while (true) {
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i < t3))
          break;
        t2.$index(t1, i).cancel$0();
        ++i;
      }
      t2.clear$0(t1);
      _this.lastEditingState = null;
      t1 = _this.domElement;
      if (t1 != null)
        B._callMethodUnchecked0(t1, "blur", type$.void);
      _this._queuedStyle = _this.activeTextField = _this.domElement = null;
    },
    addEventHandlers$0() {
      var t1, t2, t3, _this = this;
      if (_this.get$inputConfiguration().autofillGroup != null)
        J.addAll$1$ax(_this.subscriptions, _this.get$inputConfiguration().autofillGroup.addInputEventListeners$0());
      t1 = _this.subscriptions;
      t2 = _this.get$handleChange();
      t3 = J.getInterceptor$ax(t1);
      t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "input", t2));
      t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "keydown", _this.get$maybeSendAction()));
      t3.add$1(t1, A.DomSubscription$(self.document, "selectionchange", t2));
      _this.preventDefaultForMouseEvents$0();
    },
    initializeTextEditing$3$onAction$onChange(inputConfig, onAction, onChange) {
      type$.InputConfiguration._as(inputConfig);
      type$.nullable_void_Function_2_nullable_EditingState_and_nullable_TextEditingDeltaState._as(onChange);
      type$.nullable_void_Function_nullable_String._as(onAction);
      this.isEnabled = true;
      this.set$inputConfiguration(inputConfig);
      this.applyConfiguration$1(inputConfig);
    },
    placeElement$0() {
      if (B.boolConversionCheck(this.get$hasAutofillGroup()))
        this.placeForm$0();
      A.DomElementExtension_focus(this.get$activeDomElement(), null);
    },
    initializeElementPlacement$0() {
    },
    placeForm$0() {
    },
    updateElementPlacement$1(textGeometry) {
      type$.EditableTextGeometry._as(textGeometry);
    },
    updateElementStyle$1(textStyle) {
      this._queuedStyle = type$.EditableTextStyle._as(textStyle);
      this._syncStyle$0();
    },
    _syncStyle$0() {
      var t1 = this._queuedStyle;
      if (t1 == null || this.domElement == null)
        return;
      t1.toString;
      this.super$DefaultTextEditingStrategy$updateElementStyle(t1);
    }
  };
  A.TextField.prototype = {
    TextField$1(semanticsObject) {
      this._setupDomElement$0();
    },
    get$activeEditableElement() {
      var t1 = this.editableElement;
      t1.toString;
      return t1;
    },
    focusAsRouteDefault$0() {
      var editableElement = this.editableElement;
      if (editableElement == null)
        return false;
      A.DomElementExtension_focus(editableElement, null);
      return true;
    },
    _initializeEditableElement$0() {
      var t2, _this = this,
        t1 = _this.semanticsObject;
      _this.set$editableElement(B.boolConversionCheck(t1.hasFlag$1(C.SemanticsFlag_524288_isMultiline)) ? A.createDomHTMLTextAreaElement() : A.createDomHTMLInputElement());
      t2 = _this.get$activeEditableElement();
      A.DomElementExtension_set_spellcheck(t2, false);
      A.DomElementExtension_setAttribute(t2, "autocorrect", "off");
      A.DomElementExtension_setAttribute(t2, "autocomplete", "off");
      A.DomElementExtension_setAttribute(t2, "data-semantics-role", "text-field");
      t2 = B.getProperty(_this.get$activeEditableElement(), "style", type$.JavaScriptObject);
      A.DomCSSStyleDeclarationExtension_set_position(t2, "absolute");
      A.DomCSSStyleDeclarationExtension_set_top(t2, "0");
      A.DomCSSStyleDeclarationExtension_set_left(t2, "0");
      A.DomCSSStyleDeclarationExtension_set_width(t2, B.S(t1.get$rect().get$width()) + "px");
      A.DomCSSStyleDeclarationExtension_set_height(t2, B.S(t1.get$rect().get$height()) + "px");
      _this.append$1(_this.get$activeEditableElement());
    },
    _setupDomElement$0() {
      switch ($.$get$browser().get$browserEngine()) {
        case C.BrowserEngine_0:
        case C.BrowserEngine_2:
          this._initializeForBlink$0();
          break;
        case C.BrowserEngine_1:
          this._initializeForWebkit$0();
          break;
      }
    },
    _initializeForBlink$0() {
      var _this = this;
      _this._initializeEditableElement$0();
      A.DomEventTargetExtension_addEventListener(_this.get$activeEditableElement(), "focus", A.createDomEventListener(new A.TextField__initializeForBlink_closure(_this)), null);
      A.DomEventTargetExtension_addEventListener(_this.get$activeEditableElement(), "blur", A.createDomEventListener(new A.TextField__initializeForBlink_closure0(_this)), null);
    },
    _initializeForWebkit$0() {
      var _this = this, t1 = {};
      if (B.boolConversionCheck(J.$eq$($.$get$browser().get$operatingSystem(), C.OperatingSystem_4))) {
        _this._initializeForBlink$0();
        return;
      }
      _this.setAttribute$2("role", "textbox");
      _this.setAttribute$2("contenteditable", "false");
      _this.setAttribute$2("tabindex", "0");
      t1.lastPointerDownOffsetY = t1.lastPointerDownOffsetX = null;
      _this.addEventListener$3("pointerdown", A.createDomEventListener(new A.TextField__initializeForWebkit_closure(t1)), true);
      _this.addEventListener$3("pointerup", A.createDomEventListener(new A.TextField__initializeForWebkit_closure0(t1, _this)), true);
    },
    _invokeIosWorkaround$0() {
      var t1, _this = this;
      if (_this.editableElement != null)
        return;
      _this._initializeEditableElement$0();
      A.DomCSSStyleDeclarationExtension_set_transform(B.getProperty(_this.get$activeEditableElement(), "style", type$.JavaScriptObject), "translate(-9999px, -9999px)");
      t1 = _this._positionInputElementTimer;
      if (t1 != null)
        t1.cancel$0();
      _this.set$_positionInputElementTimer(A.Timer_Timer(C.Duration_100000, new A.TextField__invokeIosWorkaround_closure(_this)));
      A.DomElementExtension_focus(_this.get$activeEditableElement(), null);
      _this.removeAttribute$1("role");
      A.DomEventTargetExtension_addEventListener(_this.get$activeEditableElement(), "blur", A.createDomEventListener(new A.TextField__invokeIosWorkaround_closure0(_this)), null);
    },
    update$0() {
      var t1, t2, element, _this = this,
        _s13_ = "activeElement",
        _s10_ = "aria-label";
      _this.super$PrimaryRoleManager$update();
      if (_this.editableElement != null) {
        t1 = B.getProperty(_this.get$activeEditableElement(), "style", type$.JavaScriptObject);
        t2 = _this.semanticsObject;
        A.DomCSSStyleDeclarationExtension_set_width(t1, B.S(t2.get$rect().get$width()) + "px");
        A.DomCSSStyleDeclarationExtension_set_height(t1, B.S(t2.get$rect().get$height()) + "px");
        if (B.boolConversionCheck(t2.get$hasFocus())) {
          if (!B.boolConversionCheck(J.$eq$(B.getProperty(self.document, _s13_, type$.nullable_JavaScriptObject), _this.get$activeEditableElement())))
            t2.owner.addOneTimePostUpdateCallback$1(new A.TextField_update_closure(_this));
          t1 = $.SemanticsTextEditingStrategy__instance;
          if (t1 != null)
            t1.activate$1(_this);
        } else if (B.boolConversionCheck(J.$eq$(B.getProperty(self.document, _s13_, type$.nullable_JavaScriptObject), _this.get$activeEditableElement()))) {
          if (!B.boolConversionCheck(A.isIosSafari())) {
            t1 = $.SemanticsTextEditingStrategy__instance;
            if (t1 != null)
              t1.deactivate$1(_this);
          }
          B._callMethodUnchecked0(_this.get$activeEditableElement(), "blur", type$.void);
        }
      }
      element = _this.editableElement;
      if (element == null)
        element = _this.get$element();
      t1 = _this.semanticsObject;
      if (B.boolConversionCheck(t1.get$hasLabel())) {
        t1 = t1.get$label();
        t1.toString;
        A.DomElementExtension_setAttribute(element, _s10_, t1);
      } else
        A.DomElementExtension_removeAttribute(element, _s10_);
    },
    dispose$0() {
      var t1, _this = this;
      _this.super$PrimaryRoleManager$dispose();
      t1 = _this._positionInputElementTimer;
      if (t1 != null)
        t1.cancel$0();
      _this._positionInputElementTimer = null;
      if (!B.boolConversionCheck(A.isIosSafari())) {
        t1 = _this.editableElement;
        if (t1 != null)
          B._callMethodUnchecked0(t1, "remove", type$.void);
      }
      t1 = $.SemanticsTextEditingStrategy__instance;
      if (t1 != null)
        t1.deactivate$1(_this);
    },
    set$editableElement(editableElement) {
      this.editableElement = type$.nullable_JavaScriptObject._as(editableElement);
    },
    set$_positionInputElementTimer(_positionInputElementTimer) {
      this._positionInputElementTimer = type$.nullable_Timer._as(_positionInputElementTimer);
    }
  };
  A._TypedDataBuffer.prototype = {
    get$_typedBuffer() {
      return type$.TypedData._as(this.__engine$_buffer);
    },
    get$length(_) {
      return this.__engine$_length;
    },
    $index(_, index) {
      var t1;
      B._asInt(index);
      t1 = this.get$length(0);
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (index >= t1)
        throw B.wrapException(A.IndexError$(index, this));
      return J.$index$asx(this.__engine$_buffer, index);
    },
    $indexSet(_, index, value) {
      var t1, _this = this;
      B._asInt(index);
      B._instanceType(_this)._eval$1("_TypedDataBuffer.E")._as(value);
      t1 = _this.get$length(0);
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (index >= t1)
        throw B.wrapException(A.IndexError$(index, _this));
      J.$indexSet$ax(_this.__engine$_buffer, index, value);
    },
    set$length(_, newLength) {
      var t1, defaultValue, i, newBuffer, _this = this;
      B._asInt(newLength);
      t1 = _this.__engine$_length;
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (newLength < t1) {
        defaultValue = _this.get$_defaultValue();
        i = newLength;
        while (true) {
          t1 = _this.__engine$_length;
          if (typeof t1 !== "number")
            return B.iae(t1);
          if (!(i < t1))
            break;
          J.$indexSet$ax(_this.__engine$_buffer, i, defaultValue);
          ++i;
        }
      } else {
        t1 = J.get$length$asx(_this.__engine$_buffer);
        if (typeof t1 !== "number")
          return B.iae(t1);
        if (newLength > t1) {
          newBuffer = B.boolConversionCheck(J.get$isEmpty$asx(_this.__engine$_buffer)) ? _this._createBuffer$1(newLength) : _this._createBiggerBuffer$1(newLength);
          J.setRange$3$ax(newBuffer, 0, _this.__engine$_length, _this.__engine$_buffer);
          _this.set$__engine$_buffer(newBuffer);
        }
      }
      _this.__engine$_length = newLength;
    },
    __engine$_add$1(value) {
      var t1, t2, _this = this;
      B._instanceType(_this)._eval$1("_TypedDataBuffer.E")._as(value);
      if (B.boolConversionCheck(J.$eq$(_this.__engine$_length, J.get$length$asx(_this.__engine$_buffer))))
        _this.__engine$_grow$1(_this.__engine$_length);
      t1 = _this.__engine$_buffer;
      t2 = _this.__engine$_length;
      if (typeof t2 !== "number")
        return t2.$add();
      _this.set$__engine$_length(t2 + 1);
      J.$indexSet$ax(t1, t2, value);
    },
    add$1(_, value) {
      this.__engine$_add$1(B._instanceType(this)._eval$1("_TypedDataBuffer.E")._as(value));
    },
    addAll$3(_, values, start, end) {
      B._instanceType(this)._eval$1("Iterable<_TypedDataBuffer.E>")._as(values);
      B._asInt(start);
      B._asIntQ(end);
      B.RangeError_checkNotNegative(start, "start");
      if (end != null && start > end)
        throw B.wrapException(B.RangeError$range(end, start, null, "end", null));
      this.__engine$_addAll$3(values, start, end);
    },
    addAll$1(_, values) {
      return this.addAll$3(0, values, 0, null);
    },
    insertAll$2(_, index, values) {
      var t1, end, writeIndex, skipCount, value, writeIndex0, t2, _this = this;
      B._asInt(index);
      B._instanceType(_this)._eval$1("Iterable<_TypedDataBuffer.E>")._as(values);
      t1 = _this.__engine$_length;
      if (typeof t1 !== "number")
        return t1.$add();
      A.IndexError_check(index, t1 + 1, _this, "index");
      B.RangeError_checkNotNegative(0, "start");
      if (index === t1) {
        _this.__engine$_addAll$3(values, 0, null);
        return;
      }
      end = type$.List_dynamic._is(values) ? J.get$length$asx(values) : null;
      if (end != null) {
        _this._insertKnownLength$4(index, values, 0, end);
        return;
      }
      writeIndex = _this.__engine$_length;
      for (t1 = J.get$iterator$ax(values), skipCount = 0; B.boolConversionCheck(t1.moveNext$0());) {
        value = t1.get$current();
        if (writeIndex === J.get$length$asx(_this.__engine$_buffer))
          _this.__engine$_grow$1(writeIndex);
        writeIndex0 = writeIndex + 1;
        J.$indexSet$ax(_this.__engine$_buffer, writeIndex, value);
        writeIndex = writeIndex0;
      }
      t1 = _this.__engine$_buffer;
      t2 = _this.__engine$_length;
      A._TypedDataBuffer__reverse(t1, index, t2);
      A._TypedDataBuffer__reverse(t1, t2, writeIndex);
      A._TypedDataBuffer__reverse(t1, index, writeIndex);
      _this.__engine$_length = writeIndex;
      return;
    },
    __engine$_addAll$3(values, start, end) {
      var i, value, _this = this,
        t1 = B._instanceType(_this);
      t1._eval$1("Iterable<_TypedDataBuffer.E>")._as(values);
      B._asInt(start);
      B._asIntQ(end);
      if (t1._eval$1("List<_TypedDataBuffer.E>")._is(values))
        end = end == null ? J.get$length$asx(values) : end;
      if (end != null) {
        _this._insertKnownLength$4(_this.__engine$_length, values, start, end);
        return;
      }
      for (t1 = J.get$iterator$ax(values), i = 0; B.boolConversionCheck(t1.moveNext$0());) {
        value = t1.get$current();
        if (i >= start)
          _this.add$1(0, value);
        ++i;
      }
      if (i < start)
        throw B.wrapException(B.StateError$("Too few elements"));
    },
    _insertKnownLength$4(index, values, start, end) {
      var t1, t2, valuesLength, newLength, t3, _this = this;
      B._asInt(index);
      B._instanceType(_this)._eval$1("Iterable<_TypedDataBuffer.E>")._as(values);
      B._asInt(start);
      B._asInt(end);
      t1 = J.getInterceptor$asx(values);
      t2 = t1.get$length(values);
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (!(start > t2)) {
        t1 = t1.get$length(values);
        if (typeof t1 !== "number")
          return B.iae(t1);
        t1 = end > t1;
      } else
        t1 = true;
      if (t1)
        throw B.wrapException(B.StateError$("Too few elements"));
      valuesLength = end - start;
      t1 = _this.__engine$_length;
      if (typeof t1 !== "number")
        return t1.$add();
      newLength = t1 + valuesLength;
      _this._ensureCapacity$1(newLength);
      t1 = _this.__engine$_buffer;
      t2 = index + valuesLength;
      t3 = _this.__engine$_length;
      if (typeof t3 !== "number")
        return t3.$add();
      J.setRange$4$ax(t1, t2, t3 + valuesLength, t1, index);
      J.setRange$4$ax(_this.__engine$_buffer, index, t2, values, start);
      _this.__engine$_length = newLength;
    },
    insert$2(_, index, element) {
      var t1, t2, newBuffer, _this = this;
      B._asInt(index);
      B._instanceType(_this)._eval$1("_TypedDataBuffer.E")._as(element);
      if (index >= 0) {
        t1 = _this.__engine$_length;
        if (typeof t1 !== "number")
          return B.iae(t1);
        t1 = index > t1;
      } else
        t1 = true;
      if (t1)
        throw B.wrapException(B.RangeError$range(index, 0, _this.__engine$_length, null, null));
      t1 = _this.__engine$_length;
      t2 = J.get$length$asx(_this.__engine$_buffer);
      if (typeof t1 !== "number")
        return t1.$lt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (t1 < t2) {
        t1 = _this.__engine$_buffer;
        t2 = _this.__engine$_length;
        if (typeof t2 !== "number")
          return t2.$add();
        J.setRange$4$ax(t1, index + 1, t2 + 1, t1, index);
        J.$indexSet$ax(_this.__engine$_buffer, index, element);
        t1 = _this.__engine$_length;
        if (typeof t1 !== "number")
          return t1.$add();
        _this.set$__engine$_length(t1 + 1);
        return;
      }
      newBuffer = _this._createBiggerBuffer$1(null);
      t1 = J.getInterceptor$ax(newBuffer);
      t1.setRange$3(newBuffer, 0, index, _this.__engine$_buffer);
      t2 = _this.__engine$_length;
      if (typeof t2 !== "number")
        return t2.$add();
      t1.setRange$4(newBuffer, index + 1, t2 + 1, _this.__engine$_buffer, index);
      t1.$indexSet(newBuffer, index, element);
      t1 = _this.__engine$_length;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$__engine$_length(t1 + 1);
      _this.set$__engine$_buffer(newBuffer);
    },
    _ensureCapacity$1(requiredCapacity) {
      var t1, newBuffer, _this = this;
      B._asInt(requiredCapacity);
      t1 = J.get$length$asx(_this.__engine$_buffer);
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (requiredCapacity <= t1)
        return;
      newBuffer = _this._createBiggerBuffer$1(requiredCapacity);
      J.setRange$3$ax(newBuffer, 0, _this.__engine$_length, _this.__engine$_buffer);
      _this.set$__engine$_buffer(newBuffer);
    },
    _createBiggerBuffer$1(requiredCapacity) {
      var t1, newLength;
      B._asIntQ(requiredCapacity);
      t1 = J.get$length$asx(this.__engine$_buffer);
      if (typeof t1 !== "number")
        return t1.$mul();
      newLength = t1 * 2;
      if (requiredCapacity != null && newLength < requiredCapacity)
        newLength = requiredCapacity;
      else if (newLength < 8)
        newLength = 8;
      return this._createBuffer$1(newLength);
    },
    __engine$_grow$1($length) {
      var t1;
      B._asInt($length);
      t1 = this._createBiggerBuffer$1(null);
      J.setRange$3$ax(t1, 0, $length, this.__engine$_buffer);
      this.set$__engine$_buffer(t1);
    },
    setRange$4(_, start, end, source, skipCount) {
      var t1;
      B._asInt(start);
      B._asInt(end);
      B._instanceType(this)._eval$1("Iterable<_TypedDataBuffer.E>")._as(source);
      B._asInt(skipCount);
      t1 = this.__engine$_length;
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (end > t1)
        throw B.wrapException(B.RangeError$range(end, 0, t1, null, null));
      this._setRange$4(start, end, source, skipCount);
    },
    setRange$3(_, start, end, source) {
      return this.setRange$4(0, start, end, source, 0);
    },
    _setRange$4(start, end, source, skipCount) {
      var t1, t2, t3;
      B._asInt(start);
      B._asInt(end);
      t1 = B._instanceType(this);
      t1._eval$1("Iterable<_TypedDataBuffer.E>")._as(source);
      B._asInt(skipCount);
      t2 = this.__engine$_buffer;
      t3 = J.getInterceptor$ax(t2);
      if (t1._eval$1("_TypedDataBuffer<_TypedDataBuffer.E>")._is(source))
        t3.setRange$4(t2, start, end, source.__engine$_buffer, skipCount);
      else
        t3.setRange$4(t2, start, end, source, skipCount);
    },
    get$lengthInBytes(_) {
      var t1 = this.__engine$_length,
        t2 = J.get$elementSizeInBytes$x(this.get$_typedBuffer());
      if (typeof t1 !== "number")
        return t1.$mul();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 * t2;
    },
    get$buffer(_) {
      return J.get$buffer$x(this.get$_typedBuffer());
    },
    set$__engine$_buffer(_buffer) {
      this.__engine$_buffer = B._instanceType(this)._eval$1("List<_TypedDataBuffer.E>")._as(_buffer);
    },
    set$__engine$_length(_length) {
      this.__engine$_length = B._asInt(_length);
    }
  };
  A._IntBuffer.prototype = {
    get$_defaultValue() {
      return 0;
    }
  };
  A.Uint8Buffer.prototype = {
    _createBuffer$1(size) {
      return B.NativeUint8List_NativeUint8List(B._asInt(size));
    }
  };
  A.MethodCall0.prototype = {
    toString$0(_) {
      return B.S(this.get$runtimeType(0)) + "(" + B.S(this.method) + ", " + B.S(this.$arguments) + ")";
    }
  };
  A.StringCodec.prototype = {
    decodeMessage$1(message) {
      type$.ByteData._as(message);
      return D.C_Utf8Codec.get$decoder().convert$1(J.asUint8List$0$x(D.NativeByteData_methods.get$buffer(message)));
    },
    encodeMessage$1(message) {
      return J.asByteData$0$x(D.NativeUint8List_methods.get$buffer(D.C_Utf8Codec.encode$1(B._asString(message))));
    },
    $isMessageCodec0: 1
  };
  A.JSONMessageCodec.prototype = {
    encodeMessage$1(message) {
      if (message == null)
        return null;
      return C.C_StringCodec.encodeMessage$1(D.C_JsonCodec.encode$1(message));
    },
    decodeMessage$1(message) {
      type$.nullable_ByteData._as(message);
      if (message == null)
        return message;
      return D.C_JsonCodec.decode$1(C.C_StringCodec.decodeMessage$1(message));
    },
    $isMessageCodec0: 1
  };
  A.JSONMethodCodec.prototype = {
    encodeMethodCall$1($call) {
      type$.MethodCall._as($call);
      return C.C_JSONMessageCodec.encodeMessage$1(B.LinkedHashMap_LinkedHashMap$_literal(["method", $call.method, "args", $call.$arguments], type$.String, type$.dynamic));
    },
    decodeMethodCall$1(methodCall) {
      var method, $arguments, _null = null,
        decoded = C.C_JSONMessageCodec.decodeMessage$1(type$.nullable_ByteData._as(methodCall));
      if (!type$.Map_dynamic_dynamic._is(decoded))
        throw B.wrapException(B.FormatException$("Expected method call Map, got " + B.S(decoded), _null, _null));
      method = decoded.$index(0, "method");
      $arguments = decoded.$index(0, "args");
      if (typeof method == "string")
        return A.MethodCall$0(method, $arguments);
      throw B.wrapException(B.FormatException$("Invalid method call: " + B.S(decoded), _null, _null));
    },
    encodeSuccessEnvelope$1(result) {
      return C.C_JSONMessageCodec.encodeMessage$1([result]);
    },
    encodeErrorEnvelope$3$code$details$message(code, details, message) {
      return C.C_JSONMessageCodec.encodeMessage$1([B._asString(code), B._asStringQ(message), details]);
    },
    encodeErrorEnvelope$2$code$message(code, message) {
      return this.encodeErrorEnvelope$3$code$details$message(code, null, message);
    },
    $isMethodCodec: 1
  };
  A.StandardMessageCodec.prototype = {
    encodeMessage$1(message) {
      var buffer;
      if (message == null)
        return null;
      buffer = A.WriteBuffer_WriteBuffer0();
      this.writeValue$2(buffer, message);
      return buffer.done$0();
    },
    decodeMessage$1(message) {
      var buffer, result;
      type$.nullable_ByteData._as(message);
      if (message == null)
        return null;
      buffer = A.ReadBuffer$0(message);
      result = this.readValue$1(buffer);
      if (B.boolConversionCheck(buffer.get$hasRemaining()))
        throw B.wrapException(C.FormatException_rh8);
      return result;
    },
    writeValue$2(buffer, value) {
      var bytes, t1, _this = this;
      type$.WriteBuffer._as(buffer);
      if (value == null)
        buffer.putUint8$1(0);
      else if (B._isBool(value))
        buffer.putUint8$1(value ? 1 : 2);
      else if (typeof value == "number") {
        buffer.putUint8$1(6);
        buffer.putFloat64$1(value);
      } else if (B._isInt(value))
        if (-2147483648 <= value && value <= 2147483647) {
          buffer.putUint8$1(3);
          buffer.putInt32$1(value);
        } else {
          buffer.putUint8$1(4);
          buffer.putInt64$1(value);
        }
      else if (typeof value == "string") {
        buffer.putUint8$1(7);
        bytes = D.C_Utf8Codec.encode$1(value);
        _this.writeSize$2(buffer, J.get$length$asx(bytes));
        buffer.putUint8List$1(type$.Uint8List._as(bytes));
      } else if (type$.Uint8List._is(value)) {
        buffer.putUint8$1(8);
        _this.writeSize$2(buffer, value.length);
        buffer.putUint8List$1(value);
      } else if (type$.Int32List._is(value)) {
        buffer.putUint8$1(9);
        _this.writeSize$2(buffer, value.length);
        buffer.putInt32List$1(value);
      } else if (type$.Float64List._is(value)) {
        buffer.putUint8$1(11);
        _this.writeSize$2(buffer, value.length);
        buffer.putFloat64List$1(value);
      } else if (type$.List_dynamic._is(value)) {
        buffer.putUint8$1(12);
        t1 = J.getInterceptor$asx(value);
        _this.writeSize$2(buffer, t1.get$length(value));
        for (t1 = t1.get$iterator(value); B.boolConversionCheck(t1.moveNext$0());)
          _this.writeValue$2(buffer, t1.get$current());
      } else if (type$.Map_dynamic_dynamic._is(value)) {
        buffer.putUint8$1(13);
        _this.writeSize$2(buffer, value.get$length(value));
        value.forEach$1(0, new A.StandardMessageCodec_writeValue_closure0(_this, buffer));
      } else
        throw B.wrapException(B.ArgumentError$value(value, null, null));
    },
    readValue$1(buffer) {
      type$.ReadBuffer._as(buffer);
      if (!B.boolConversionCheck(buffer.get$hasRemaining()))
        throw B.wrapException(C.FormatException_rh8);
      return this.readValueOfType$2(buffer.getUint8$0(0), buffer);
    },
    readValueOfType$2(type, buffer) {
      var result, $length, theResult, i, t1, _this = this;
      B._asInt(type);
      type$.ReadBuffer._as(buffer);
      switch (type) {
        case 0:
          result = null;
          break;
        case 1:
          result = true;
          break;
        case 2:
          result = false;
          break;
        case 3:
          result = buffer.getInt32$0(0);
          break;
        case 4:
          result = buffer.getInt64$0(0);
          break;
        case 5:
          $length = _this.readSize$1(buffer);
          result = A.int_parse(D.C_Utf8Codec.get$decoder().convert$1(buffer.getUint8List$1($length)), 16);
          break;
        case 6:
          result = buffer.getFloat64$0(0);
          break;
        case 7:
          $length = _this.readSize$1(buffer);
          result = D.C_Utf8Codec.get$decoder().convert$1(buffer.getUint8List$1($length));
          break;
        case 8:
          result = buffer.getUint8List$1(_this.readSize$1(buffer));
          break;
        case 9:
          result = buffer.getInt32List$1(_this.readSize$1(buffer));
          break;
        case 10:
          result = buffer.getInt64List$1(_this.readSize$1(buffer));
          break;
        case 11:
          result = buffer.getFloat64List$1(_this.readSize$1(buffer));
          break;
        case 12:
          $length = _this.readSize$1(buffer);
          theResult = [];
          for (i = 0; i < $length; ++i)
            theResult.push(_this.readValue$1(buffer));
          result = theResult;
          break;
        case 13:
          $length = _this.readSize$1(buffer);
          t1 = type$.nullable_Object;
          theResult = B.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
          for (i = 0; i < $length; ++i)
            theResult.$indexSet(0, _this.readValue$1(buffer), _this.readValue$1(buffer));
          result = theResult;
          break;
        default:
          throw B.wrapException(C.FormatException_rh8);
      }
      return result;
    },
    writeSize$2(buffer, value) {
      type$.WriteBuffer._as(buffer);
      B._asInt(value);
      if (value < 254)
        buffer.putUint8$1(value);
      else if (value <= 65535) {
        buffer.putUint8$1(254);
        buffer.putUint16$1(value);
      } else {
        buffer.putUint8$1(255);
        buffer.putUint32$1(value);
      }
    },
    readSize$1(buffer) {
      var value;
      type$.ReadBuffer._as(buffer);
      value = buffer.getUint8$0(0);
      switch (value) {
        case 254:
          return buffer.getUint16$0(0);
        case 255:
          return buffer.getUint32$0(0);
        default:
          return value;
      }
    },
    $isMessageCodec0: 1
  };
  A.StandardMethodCodec.prototype = {
    decodeMethodCall$1(methodCall) {
      var buffer, method, $arguments;
      type$.nullable_ByteData._as(methodCall);
      methodCall.toString;
      buffer = A.ReadBuffer$0(methodCall);
      method = C.C_StandardMessageCodec0.readValue$1(buffer);
      $arguments = C.C_StandardMessageCodec0.readValue$1(buffer);
      if (typeof method == "string" && !B.boolConversionCheck(buffer.get$hasRemaining()))
        return A.MethodCall$0(method, $arguments);
      else
        throw B.wrapException(C.FormatException_4CA);
    },
    encodeSuccessEnvelope$1(result) {
      var buffer = A.WriteBuffer_WriteBuffer0();
      buffer.putUint8$1(0);
      C.C_StandardMessageCodec0.writeValue$2(buffer, result);
      return buffer.done$0();
    },
    encodeErrorEnvelope$3$code$details$message(code, details, message) {
      var buffer;
      B._asString(code);
      B._asStringQ(message);
      buffer = A.WriteBuffer_WriteBuffer0();
      buffer.putUint8$1(1);
      C.C_StandardMessageCodec0.writeValue$2(buffer, code);
      C.C_StandardMessageCodec0.writeValue$2(buffer, message);
      C.C_StandardMessageCodec0.writeValue$2(buffer, details);
      return buffer.done$0();
    },
    encodeErrorEnvelope$2$code$message(code, message) {
      return this.encodeErrorEnvelope$3$code$details$message(code, null, message);
    },
    $isMethodCodec: 1
  };
  A.WriteBuffer0.prototype = {
    putUint8$1(byte) {
      J.add$1$ax(this.__engine$_buffer, B._asInt(byte));
    },
    putUint16$1(value) {
      J.setUint16$3$x(this.__engine$_eightBytes, 0, B._asInt(value), $.$get$Endian_host());
      J.addAll$3$ax(this.__engine$_buffer, this.__engine$_eightBytesAsList, 0, 2);
    },
    putUint32$1(value) {
      J.setUint32$3$x(this.__engine$_eightBytes, 0, B._asInt(value), $.$get$Endian_host());
      J.addAll$3$ax(this.__engine$_buffer, this.__engine$_eightBytesAsList, 0, 4);
    },
    putInt32$1(value) {
      J.setInt32$3$x(this.__engine$_eightBytes, 0, B._asInt(value), $.$get$Endian_host());
      J.addAll$3$ax(this.__engine$_buffer, this.__engine$_eightBytesAsList, 0, 4);
    },
    putInt64$1(value) {
      J.setInt64$3$x(this.__engine$_eightBytes, 0, B._asInt(value), $.$get$Endian_host());
      J.addAll$3$ax(this.__engine$_buffer, this.__engine$_eightBytesAsList, 0, 8);
    },
    putFloat64$1(value) {
      var _this = this;
      B._asDouble(value);
      _this.__engine$_alignTo$1(8);
      J.setFloat64$3$x(_this.__engine$_eightBytes, 0, value, $.$get$Endian_host());
      J.addAll$1$ax(_this.__engine$_buffer, _this.__engine$_eightBytesAsList);
    },
    putUint8List$1(list) {
      J.addAll$1$ax(this.__engine$_buffer, type$.Uint8List._as(list));
    },
    putInt32List$1(list) {
      type$.Int32List._as(list);
      this.__engine$_alignTo$1(4);
      J.addAll$1$ax(this.__engine$_buffer, J.asUint8List$2$x(D.NativeInt32List_methods.get$buffer(list), D.NativeInt32List_methods.get$offsetInBytes(list), 4 * list.length));
    },
    putFloat64List$1(list) {
      type$.Float64List._as(list);
      this.__engine$_alignTo$1(8);
      J.addAll$1$ax(this.__engine$_buffer, J.asUint8List$2$x(D.NativeFloat64List_methods.get$buffer(list), D.NativeFloat64List_methods.get$offsetInBytes(list), 8 * list.length));
    },
    __engine$_alignTo$1(alignment) {
      var t1, t2, t3, mod, i;
      B._asInt(alignment);
      t1 = this.__engine$_buffer;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.get$length(t1);
      if (typeof t3 !== "number")
        return t3.$mod();
      mod = D.JSNumber_methods.$mod(t3, alignment);
      if (mod !== 0)
        for (t3 = alignment - mod, i = 0; i < t3; ++i)
          t2.add$1(t1, 0);
    },
    done$0() {
      var t1 = this.__engine$_buffer,
        t2 = J.getInterceptor$x(t1);
      return J.asByteData$2$x(t2.get$buffer(t1), 0, t2.get$lengthInBytes(t1));
    }
  };
  A.ReadBuffer0.prototype = {
    get$hasRemaining() {
      var t1 = this.__engine$_position,
        t2 = J.get$lengthInBytes$x(this.data);
      if (typeof t1 !== "number")
        return t1.$lt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 < t2;
    },
    getUint8$0(_) {
      var t1 = this.__engine$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      this.set$__engine$_position(t1 + 1);
      return J.getUint8$1$x(this.data, t1);
    },
    getUint16$0(_) {
      var _this = this,
        value = J.getUint16$2$x(_this.data, _this.__engine$_position, $.$get$Endian_host()),
        t1 = _this.__engine$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$__engine$_position(t1 + 2);
      return value;
    },
    getUint32$0(_) {
      var _this = this,
        value = J.getUint32$2$x(_this.data, _this.__engine$_position, $.$get$Endian_host()),
        t1 = _this.__engine$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$__engine$_position(t1 + 4);
      return value;
    },
    getInt32$0(_) {
      var _this = this,
        value = J.getInt32$2$x(_this.data, _this.__engine$_position, $.$get$Endian_host()),
        t1 = _this.__engine$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$__engine$_position(t1 + 4);
      return value;
    },
    getInt64$0(_) {
      var _this = this,
        value = J.getInt64$2$x(_this.data, _this.__engine$_position, $.$get$Endian_host()),
        t1 = _this.__engine$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$__engine$_position(t1 + 8);
      return value;
    },
    getFloat64$0(_) {
      var value, t1, _this = this;
      _this.__engine$_alignTo$1(8);
      value = J.getFloat64$2$x(_this.data, _this.__engine$_position, $.$get$Endian_host());
      t1 = _this.__engine$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$__engine$_position(t1 + 8);
      return value;
    },
    getUint8List$1($length) {
      var t1, t2, t3, list, _this = this;
      B._asInt($length);
      t1 = _this.data;
      t2 = J.getInterceptor$x(t1);
      t3 = t2.get$buffer(t1);
      t1 = t2.get$offsetInBytes(t1);
      t2 = _this.__engine$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      list = J.asUint8List$2$x(t3, t1 + t2, $length);
      t2 = _this.__engine$_position;
      if (typeof t2 !== "number")
        return t2.$add();
      _this.set$__engine$_position(t2 + $length);
      return list;
    },
    getInt32List$1($length) {
      var t1, t2, t3, list, _this = this;
      B._asInt($length);
      _this.__engine$_alignTo$1(4);
      t1 = _this.data;
      t2 = J.getInterceptor$x(t1);
      t3 = t2.get$buffer(t1);
      t1 = t2.get$offsetInBytes(t1);
      t2 = _this.__engine$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      list = J.asInt32List$2$x(t3, t1 + t2, $length);
      t2 = _this.__engine$_position;
      if (typeof t2 !== "number")
        return t2.$add();
      _this.set$__engine$_position(t2 + 4 * $length);
      return list;
    },
    getInt64List$1($length) {
      var t1, t2, t3, list, _this = this;
      B._asInt($length);
      _this.__engine$_alignTo$1(8);
      t1 = _this.data;
      t2 = J.getInterceptor$x(t1);
      t3 = t2.get$buffer(t1);
      t1 = t2.get$offsetInBytes(t1);
      t2 = _this.__engine$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      list = J.asInt64List$2$x(t3, t1 + t2, $length);
      t2 = _this.__engine$_position;
      if (typeof t2 !== "number")
        return t2.$add();
      _this.set$__engine$_position(t2 + 8 * $length);
      return list;
    },
    getFloat64List$1($length) {
      var t1, t2, t3, list, _this = this;
      B._asInt($length);
      _this.__engine$_alignTo$1(8);
      t1 = _this.data;
      t2 = J.getInterceptor$x(t1);
      t3 = t2.get$buffer(t1);
      t1 = t2.get$offsetInBytes(t1);
      t2 = _this.__engine$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      list = J.asFloat64List$2$x(t3, t1 + t2, $length);
      t2 = _this.__engine$_position;
      if (typeof t2 !== "number")
        return t2.$add();
      _this.set$__engine$_position(t2 + 8 * $length);
      return list;
    },
    __engine$_alignTo$1(alignment) {
      var t1, mod;
      B._asInt(alignment);
      t1 = this.__engine$_position;
      if (typeof t1 !== "number")
        return t1.$mod();
      mod = D.JSNumber_methods.$mod(t1, alignment);
      if (mod !== 0)
        this.set$__engine$_position(t1 + (alignment - mod));
    },
    set$__engine$_position(_position) {
      this.__engine$_position = B._asInt(_position);
    }
  };
  A.SurfaceShadowData.prototype = {};
  A.CanvasParagraph.prototype = {
    get$width() {
      return this.get$_layoutService().width;
    },
    get$height() {
      return this.get$_layoutService().height;
    },
    get$longestLine() {
      var t1 = this.get$_layoutService().longestLine;
      t1 = t1 == null ? null : t1.get$width();
      return t1 == null ? 0 : t1;
    },
    get$maxIntrinsicWidth() {
      return this.get$_layoutService().maxIntrinsicWidth;
    },
    get$alphabeticBaseline() {
      return this.get$_layoutService().alphabeticBaseline;
    },
    get$ideographicBaseline() {
      return this.get$_layoutService().ideographicBaseline;
    },
    get$didExceedMaxLines() {
      return this.get$_layoutService().didExceedMaxLines;
    },
    get$lines() {
      return this.get$_layoutService().lines;
    },
    get$paintBounds() {
      return this.get$_layoutService().get$paintBounds();
    },
    get$_layoutService() {
      var result,
        value = this.__CanvasParagraph__layoutService_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.TextLayoutService$(this);
        value !== $ && B.throwLateFieldADI("_layoutService");
        this.__CanvasParagraph__layoutService_FI = result;
        value = result;
      }
      return value;
    },
    get$_paintService() {
      var result,
        value = this.__CanvasParagraph__paintService_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.TextPaintService$(this);
        value !== $ && B.throwLateFieldADI("_paintService");
        this.__CanvasParagraph__paintService_FI = result;
        value = result;
      }
      return value;
    },
    layout$1(constraints) {
      var _this = this;
      type$.ParagraphConstraints._as(constraints);
      if (B.boolConversionCheck(constraints.$eq(0, _this._lastUsedConstraints)))
        return;
      B._Cell$named("stopwatch");
      _this.get$_layoutService().performLayout$1(constraints);
      _this.isLaidOut = true;
      _this._lastUsedConstraints = constraints;
      _this._cachedDomElement = null;
    },
    get$hasArbitraryPaint() {
      return true;
    },
    paint$2(canvas, offset) {
      type$.BitmapCanvas._as(canvas);
      type$.Offset._as(offset);
      this.get$_paintService().paint$2(canvas, offset);
    },
    toDomElement$0() {
      var t1,
        domElement = this._cachedDomElement;
      if (domElement == null) {
        t1 = this._createDomElement$0();
        this.set$_cachedDomElement(t1);
        return t1;
      }
      return A.DomNodeExtension_cloneNode(domElement, true);
    },
    _createDomElement$0() {
      var t1, i, t2, line, t3, text, spanElement,
        rootElement = A.DomDocumentExtension_createElement(self.document, "flt-paragraph"),
        cssStyle = B.getProperty(rootElement, "style", type$.JavaScriptObject);
      A.DomCSSStyleDeclarationExtension_set_position(cssStyle, "absolute");
      A.DomCSSStyleDeclarationExtension_set_whiteSpace(cssStyle, "pre");
      t1 = type$.void;
      i = 0;
      while (true) {
        t2 = J.get$length$asx(this.get$lines());
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (!(i < t2))
          break;
        line = J.$index$asx(this.get$lines(), i);
        for (t2 = J.get$iterator$ax(line.fragments); B.boolConversionCheck(t2.moveNext$0());) {
          t3 = t2.get$current();
          if (B.boolConversionCheck(t3.get$isPlaceholder()))
            continue;
          text = t3.getText$1(this);
          if (B.boolConversionCheck(D.JSString_methods.get$isEmpty(text)))
            continue;
          spanElement = A.DomDocumentExtension_createElement(self.document, "flt-span");
          if (B.boolConversionCheck(J.$eq$(t3.get$textDirection(), C.TextDirection_0)))
            A.DomElementExtension_setAttribute(spanElement, "dir", "rtl");
          A.applyTextStyleToElement(spanElement, t3.get$style());
          A._positionSpanElement(spanElement, line, t3);
          A.DomElementExtension_appendText(spanElement, text);
          B._callMethodUnchecked1(rootElement, "append", spanElement, t1);
        }
        ++i;
      }
      return rootElement;
    },
    getBoxesForPlaceholders$0() {
      return this.get$_layoutService().getBoxesForPlaceholders$0();
    },
    getBoxesForRange$4$boxHeightStyle$boxWidthStyle(start, end, boxHeightStyle, boxWidthStyle) {
      B._asInt(start);
      B._asInt(end);
      type$.BoxHeightStyle._as(boxHeightStyle);
      type$.BoxWidthStyle._as(boxWidthStyle);
      return this.get$_layoutService().getBoxesForRange$4(start, end, boxHeightStyle, boxWidthStyle);
    },
    getBoxesForRange$3$boxHeightStyle(start, end, boxHeightStyle) {
      return this.getBoxesForRange$4$boxHeightStyle$boxWidthStyle(start, end, boxHeightStyle, C.BoxWidthStyle_0);
    },
    getPositionForOffset$1(offset) {
      type$.Offset._as(offset);
      return this.get$_layoutService().getPositionForOffset$1(offset);
    },
    getClosestGlyphInfoForOffset$1(offset) {
      type$.Offset._as(offset);
      return this.get$_layoutService().getClosestGlyphInfo$1(offset);
    },
    getGlyphInfoAt$1(codeUnitOffset) {
      var lineNumber, line, range, t1, t2, t3, t4, textBox;
      B._asInt(codeUnitOffset);
      lineNumber = this._findLine$3(codeUnitOffset, 0, this.get$numberOfLines());
      if (lineNumber == null)
        return null;
      line = J.$index$asx(this.get$lines(), lineNumber);
      range = line.getCharacterRangeAt$1(codeUnitOffset);
      if (range == null)
        return null;
      for (t1 = J.get$iterator$ax(line.fragments), t2 = range.start, t3 = range.end; B.boolConversionCheck(t1.moveNext$0());) {
        t4 = t1.get$current();
        if (B.boolConversionCheck(t4.overlapsWith$2(t2, t3))) {
          textBox = t4.toTextBox$2$end$start(t3, t2);
          return A.GlyphInfo$(textBox.toRect$0(), range, textBox.direction);
        }
      }
      return null;
    },
    getWordBoundary$1(position) {
      var t1, characterPosition, start;
      type$.TextPosition._as(position);
      switch (position.affinity) {
        case C.TextAffinity_0:
          t1 = position.offset;
          if (typeof t1 !== "number")
            return t1.$sub();
          characterPosition = t1 - 1;
          break;
        case C.TextAffinity_1:
          characterPosition = position.offset;
          break;
        default:
          characterPosition = null;
      }
      t1 = this.plainText;
      if (typeof characterPosition !== "number")
        return characterPosition.$add();
      start = A.WordBreaker_prevBreakIndex(t1, characterPosition + 1);
      return A.TextRange$(A.WordBreaker_nextBreakIndex(t1, characterPosition), start);
    },
    getLineBoundary$1(position) {
      var lineNumber, line, t1, t2, t3, _this = this;
      type$.TextPosition._as(position);
      if (B.boolConversionCheck(J.get$isEmpty$asx(_this.get$lines())))
        return C.TextRange_m1_m1;
      lineNumber = _this.getLineNumberAt$1(position.offset);
      line = lineNumber != null ? J.$index$asx(_this.get$lines(), lineNumber) : J.get$last$ax(_this.get$lines());
      t1 = line.startIndex;
      t2 = line.endIndex;
      t3 = line.trailingNewlines;
      if (typeof t2 !== "number")
        return t2.$sub();
      if (typeof t3 !== "number")
        return B.iae(t3);
      return A.TextRange$(t2 - t3, t1);
    },
    computeLineMetrics$0() {
      return J.toList$0$ax(J.map$1$1$ax(this.get$lines(), new A.CanvasParagraph_computeLineMetrics_closure(), type$.EngineLineMetrics));
    },
    getLineMetricsAt$1(lineNumber) {
      var t1;
      B._asInt(lineNumber);
      if (0 <= lineNumber) {
        t1 = J.get$length$asx(this.get$lines());
        if (typeof t1 !== "number")
          return B.iae(t1);
        t1 = lineNumber < t1;
      } else
        t1 = false;
      return t1 ? J.$index$asx(this.get$lines(), lineNumber).lineMetrics : null;
    },
    get$numberOfLines() {
      return J.get$length$asx(this.get$lines());
    },
    getLineNumberAt$1(codeUnitOffset) {
      return this._findLine$3(B._asInt(codeUnitOffset), 0, J.get$length$asx(this.get$lines()));
    },
    _findLine$3(codeUnitOffset, startLine, endLine) {
      var isOutOfBounds, t1, midIndex, _this = this;
      B._asInt(codeUnitOffset);
      B._asInt(startLine);
      B._asInt(endLine);
      isOutOfBounds = true;
      if (endLine > startLine) {
        t1 = J.$index$asx(_this.get$lines(), startLine).startIndex;
        if (typeof t1 !== "number")
          return B.iae(t1);
        if (!(codeUnitOffset < t1)) {
          t1 = _this.get$numberOfLines();
          if (typeof t1 !== "number")
            return B.iae(t1);
          if (endLine < t1) {
            t1 = J.$index$asx(_this.get$lines(), endLine).startIndex;
            if (typeof t1 !== "number")
              return t1.$le();
            t1 = t1 <= codeUnitOffset;
          } else
            t1 = false;
          isOutOfBounds = t1;
        }
      }
      if (isOutOfBounds)
        return null;
      if (endLine === startLine + 1) {
        t1 = J.$index$asx(_this.get$lines(), startLine).get$visibleEndIndex();
        if (typeof t1 !== "number")
          return B.iae(t1);
        return codeUnitOffset >= t1 ? null : startLine;
      }
      midIndex = D.JSInt_methods._tdivFast$1(startLine + endLine, 2);
      t1 = _this._findLine$3(codeUnitOffset, midIndex, endLine);
      return t1 == null ? _this._findLine$3(codeUnitOffset, startLine, midIndex) : t1;
    },
    dispose$0() {
    },
    set$_cachedDomElement(_cachedDomElement) {
      this._cachedDomElement = type$.nullable_JavaScriptObject._as(_cachedDomElement);
    },
    $isParagraph: 1
  };
  A.ParagraphSpan.prototype = {};
  A.StyleNode.prototype = {
    createChild$1(style) {
      return A.ChildStyleNode$(this, type$.EngineTextStyle._as(style));
    },
    resolveStyle$0() {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, _this = this,
        t1 = _this._cachedStyle;
      if (t1 == null) {
        t1 = _this.get$_color();
        t2 = _this.get$_decoration();
        t3 = _this.get$_decorationColor();
        t4 = _this.get$_decorationStyle();
        t5 = _this.get$_decorationThickness();
        t6 = _this.get$_fontWeight();
        t7 = _this.get$_fontStyle();
        t8 = _this.get$_textBaseline();
        t9 = _this.get$_fontFamily();
        t10 = _this.get$_fontFamilyFallback();
        t11 = _this.get$_fontFeatures();
        t12 = _this.get$_fontVariations();
        t13 = _this.get$_fontSize();
        t14 = _this.get$_letterSpacing();
        t15 = _this.get$_wordSpacing();
        t16 = _this.get$_height();
        t17 = _this.get$_leadingDistribution();
        t18 = _this.get$_locale();
        t15 = _this._cachedStyle = A.EngineTextStyle$only(_this.get$_background(), t1, t2, t3, t4, t5, t9, t10, t11, t13, t7, t12, t6, _this.get$_foreground(), t16, t17, t14, t18, _this.get$_shadows(), t8, t15);
        t1 = t15;
      }
      return t1;
    }
  };
  A.ChildStyleNode.prototype = {
    get$_color() {
      var t1 = this.style.color;
      if (t1 == null)
        t1 = this.get$_foreground() == null ? this.parent.get$_color() : null;
      return t1;
    },
    get$_decoration() {
      var t1 = this.style.decoration;
      return t1 == null ? this.parent.get$_decoration() : t1;
    },
    get$_decorationColor() {
      var t1 = this.style.decorationColor;
      return t1 == null ? this.parent.get$_decorationColor() : t1;
    },
    get$_decorationStyle() {
      var t1 = this.style.decorationStyle;
      return t1 == null ? this.parent.get$_decorationStyle() : t1;
    },
    get$_decorationThickness() {
      var t1 = this.style.decorationThickness;
      return t1 == null ? this.parent.get$_decorationThickness() : t1;
    },
    get$_fontWeight() {
      var t1 = this.style.fontWeight;
      return t1 == null ? this.parent.get$_fontWeight() : t1;
    },
    get$_fontStyle() {
      var t1 = this.style.fontStyle;
      return t1 == null ? this.parent.get$_fontStyle() : t1;
    },
    get$_textBaseline() {
      var t1 = this.style.textBaseline;
      return t1 == null ? this.parent.get$_textBaseline() : t1;
    },
    get$_fontFamilyFallback() {
      var t1 = this.style.fontFamilyFallback;
      return t1 == null ? this.parent.get$_fontFamilyFallback() : t1;
    },
    get$_fontFeatures() {
      var t1 = this.style.fontFeatures;
      return t1 == null ? this.parent.get$_fontFeatures() : t1;
    },
    get$_fontVariations() {
      var t1 = this.style.fontVariations;
      return t1 == null ? this.parent.get$_fontVariations() : t1;
    },
    get$_fontSize() {
      var t1 = this.style.fontSize;
      return t1 == null ? this.parent.get$_fontSize() : t1;
    },
    get$_letterSpacing() {
      var t1 = this.style.letterSpacing;
      return t1 == null ? this.parent.get$_letterSpacing() : t1;
    },
    get$_wordSpacing() {
      var t1 = this.style.wordSpacing;
      return t1 == null ? this.parent.get$_wordSpacing() : t1;
    },
    get$_height() {
      var t1 = this.style.height;
      if (B.boolConversionCheck(J.$eq$(t1, 0)))
        t1 = null;
      else if (t1 == null)
        t1 = this.parent.get$_height();
      return t1;
    },
    get$_leadingDistribution() {
      var t1 = this.style.leadingDistribution;
      return t1 == null ? this.parent.get$_leadingDistribution() : t1;
    },
    get$_locale() {
      var t1 = this.style.locale;
      return t1 == null ? this.parent.get$_locale() : t1;
    },
    get$_background() {
      var t1 = this.style.background;
      return t1 == null ? this.parent.get$_background() : t1;
    },
    get$_foreground() {
      var t1 = this.style.foreground;
      return t1 == null ? this.parent.get$_foreground() : t1;
    },
    get$_shadows() {
      var t1 = this.style.shadows;
      return t1 == null ? this.parent.get$_shadows() : t1;
    },
    get$_fontFamily() {
      var t1 = this.style;
      return B.boolConversionCheck(t1.isFontFamilyProvided) ? t1.fontFamily : this.parent.get$_fontFamily();
    }
  };
  A.RootStyleNode.prototype = {
    get$_color() {
      return null;
    },
    get$_decoration() {
      return null;
    },
    get$_decorationColor() {
      return null;
    },
    get$_decorationStyle() {
      return null;
    },
    get$_decorationThickness() {
      return null;
    },
    get$_fontWeight() {
      return this.paragraphStyle.fontWeight;
    },
    get$_fontStyle() {
      return this.paragraphStyle.fontStyle;
    },
    get$_textBaseline() {
      return null;
    },
    get$_fontFamily() {
      var t1 = this.paragraphStyle.fontFamily;
      return t1 == null ? "sans-serif" : t1;
    },
    get$_fontFamilyFallback() {
      return null;
    },
    get$_fontFeatures() {
      return null;
    },
    get$_fontVariations() {
      return null;
    },
    get$_fontSize() {
      var t1 = this.paragraphStyle.fontSize;
      return t1 == null ? 14 : t1;
    },
    get$_letterSpacing() {
      return null;
    },
    get$_wordSpacing() {
      return null;
    },
    get$_height() {
      return this.paragraphStyle.height;
    },
    get$_leadingDistribution() {
      return null;
    },
    get$_locale() {
      return this.paragraphStyle.locale;
    },
    get$_background() {
      return null;
    },
    get$_foreground() {
      return null;
    },
    get$_shadows() {
      return null;
    }
  };
  A.CanvasParagraphBuilder.prototype = {
    get$_currentStyleNode() {
      var t3,
        t1 = this._styleStack,
        t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t2.get$isEmpty(t1)))
        t1 = this._rootStyleNode;
      else {
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return t3.$sub();
        t3 = t2.$index(t1, t3 - 1);
        t1 = t3;
      }
      return t1;
    },
    pushStyle$1(style) {
      type$.TextStyle._as(style);
      J.add$1$ax(this._styleStack, this.get$_currentStyleNode().createChild$1(type$.EngineTextStyle._as(style)));
    },
    pop$0() {
      var t1 = this._styleStack,
        t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t2.get$isNotEmpty(t1)))
        t2.removeLast$0(t1);
    },
    addText$1(text) {
      var t1, t2, start, end, style, _this = this;
      B._asString(text);
      t1 = _this._plainTextBuffer;
      t2 = J.getInterceptor$asx(t1);
      start = t2.get$length(t1);
      t1.write$1(text);
      end = t2.get$length(t1);
      style = _this.get$_currentStyleNode().resolveStyle$0();
      _this._updateCanDrawOnCanvas$1(style);
      J.add$1$ax(_this._spans, A.ParagraphSpan$(end, start, style));
    },
    _updateCanDrawOnCanvas$1(style) {
      var letterSpacing, decoration, fontFeatures, fontVariations, _this = this;
      type$.EngineTextStyle._as(style);
      if (!B.boolConversionCheck(_this._canDrawOnCanvas))
        return;
      letterSpacing = style.letterSpacing;
      if (letterSpacing != null && letterSpacing !== 0) {
        _this._canDrawOnCanvas = false;
        return;
      }
      decoration = style.decoration;
      if (decoration != null && !B.boolConversionCheck(decoration.$eq(0, C.TextDecoration_0))) {
        _this._canDrawOnCanvas = false;
        return;
      }
      fontFeatures = style.fontFeatures;
      if (fontFeatures != null && B.boolConversionCheck(J.get$isNotEmpty$asx(fontFeatures))) {
        _this._canDrawOnCanvas = false;
        return;
      }
      fontVariations = style.fontVariations;
      if (fontVariations != null && B.boolConversionCheck(J.get$isNotEmpty$asx(fontVariations))) {
        _this._canDrawOnCanvas = false;
        return;
      }
    },
    build$0() {
      var _this = this,
        t1 = _this._spans,
        t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t2.get$isEmpty(t1)))
        t2.add$1(t1, A.ParagraphSpan$(0, 0, _this._rootStyleNode.resolveStyle$0()));
      t2 = J.toString$0$(_this._plainTextBuffer);
      return A.CanvasParagraph$(t1, _this._canDrawOnCanvas, _this._paragraphStyle, t2);
    },
    $isParagraphBuilder: 1
  };
  A.HtmlFontCollection.prototype = {
    loadAssetFonts$1(manifest) {
      return this.loadAssetFonts$body$HtmlFontCollection(type$.FontManifest._as(manifest));
    },
    loadAssetFonts$body$HtmlFontCollection(manifest) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.AssetFontsResult),
        $async$returnValue, $async$self = this, t1, t2, t3, loadedFonts, fontFailures, _0_1, error, _0_2, asset, pendingFonts, $async$temp1;
      var $async$loadAssetFonts$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              pendingFonts = B._setArrayType([], type$.JSArray_Future_Record_2_String_and_nullable_FontLoadError);
              for (t1 = J.get$iterator$ax(manifest.families); B.boolConversionCheck(t1.moveNext$0());) {
                t2 = t1.get$current();
                for (t3 = J.get$iterator$ax(t2.fontAssets); B.boolConversionCheck(t3.moveNext$0());)
                  D.JSArray_methods.add$1(pendingFonts, new A.HtmlFontCollection_loadAssetFonts_closure($async$self, t3.get$current(), t2).call$0());
              }
              loadedFonts = B._setArrayType([], type$.JSArray_String);
              fontFailures = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.FontLoadError);
              $async$temp1 = J;
              $async$goto = 3;
              return B._asyncAwait(B.Future_wait(pendingFonts, type$.Record_2_String_and_nullable_FontLoadError), $async$loadAssetFonts$1);
            case 3:
              // returning from await.
              t1 = $async$temp1.get$iterator$ax($async$result);
            case 4:
              // for condition
              if (!B.boolConversionCheck(t1.moveNext$0())) {
                // goto after for
                $async$goto = 5;
                break;
              }
              t2 = t1.get$current();
              _0_1 = t2._0;
              t3 = _0_1;
              t3 = typeof t3 == "string";
              error = null;
              if (t3) {
                _0_2 = t2._1;
                error = _0_2;
                asset = _0_1;
              } else
                asset = null;
              if (!t3)
                throw B.wrapException(B.StateError$("Pattern matching error"));
              if (error == null)
                D.JSArray_methods.add$1(loadedFonts, asset);
              else
                fontFailures.$indexSet(0, asset, error);
              // goto for condition
              $async$goto = 4;
              break;
            case 5:
              // after for
              $async$returnValue = A.AssetFontsResult$(loadedFonts, fontFailures);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$loadAssetFonts$1, $async$completer);
    },
    loadFontFromList$2$fontFamily(list, fontFamily) {
      return this.loadFontFromList$body$HtmlFontCollection(type$.Uint8List._as(list), B._asStringQ(fontFamily));
    },
    loadFontFromList$body$HtmlFontCollection(list, fontFamily) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this;
      var $async$loadFontFromList$2$fontFamily = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (fontFamily == null) {
                $.$get$printWarning().call$1("Font family must be provided to HtmlFontCollection.");
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = $async$self._loadFontFaceBytes$2(fontFamily, list);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$loadFontFromList$2$fontFamily, $async$completer);
    },
    get$fontFallbackManager() {
      return null;
    },
    clear$0(_) {
      var t1 = B.getProperty(self.document, "fonts", type$.nullable_JavaScriptObject);
      t1.toString;
      B._callMethodUnchecked0(t1, "clear", type$.void);
    },
    _loadFontAsset$3(family, asset, descriptors) {
      return this._loadFontAsset$body$HtmlFontCollection(B._asString(family), B._asString(asset), type$.Map_String_String._as(descriptors));
    },
    _loadFontAsset$body$HtmlFontCollection(family, asset, descriptors) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.nullable_FontLoadError),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, error, error0, font, exception, t1, t2, t3, fontFaces, errors, $async$exception, $async$exception1, $async$temp1, $async$temp2;
      var $async$_loadFontAsset$3 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              fontFaces = B._setArrayType([], type$.JSArray_JavaScriptObject);
              errors = B._setArrayType([], type$.JSArray_FontLoadError);
              $async$handler = 4;
              $async$goto = B.boolConversionCheck($.$get$HtmlFontCollection_startWithDigit().hasMatch$1(family)) || !B.boolConversionCheck(J.$eq$($.$get$HtmlFontCollection_notPunctuation().stringMatch$1(family), family)) ? 7 : 8;
              break;
            case 7:
              // then
              $async$temp1 = J;
              $async$temp2 = fontFaces;
              $async$goto = 9;
              return B._asyncAwait($async$self._loadFontFace$3("'" + family + "'", asset, descriptors), $async$_loadFontAsset$3);
            case 9:
              // returning from await.
              $async$temp1.add$1$ax($async$temp2, $async$result);
            case 8:
              // join
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = B.unwrapException($async$exception);
              if (t1 instanceof A.FontLoadError) {
                error = t1;
                J.add$1$ax(errors, error);
              } else
                throw $async$exception;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              $async$handler = 11;
              $async$temp1 = J;
              $async$temp2 = fontFaces;
              $async$goto = 14;
              return B._asyncAwait($async$self._loadFontFace$3(family, asset, descriptors), $async$_loadFontAsset$3);
            case 14:
              // returning from await.
              $async$temp1.add$1$ax($async$temp2, $async$result);
              $async$handler = 2;
              // goto after finally
              $async$goto = 13;
              break;
            case 11:
              // catch
              $async$handler = 10;
              $async$exception1 = $async$currentError;
              t1 = B.unwrapException($async$exception1);
              if (t1 instanceof A.FontLoadError) {
                error0 = t1;
                J.add$1$ax(errors, error0);
              } else
                throw $async$exception1;
              // goto after finally
              $async$goto = 13;
              break;
            case 10:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 13:
              // after finally
              if (B.boolConversionCheck(J.get$isEmpty$asx(fontFaces))) {
                $async$returnValue = J.get$first$ax(errors);
                // goto return
                $async$goto = 1;
                break;
              }
              try {
                for (t1 = J.get$iterator$ax(fontFaces), t2 = type$.nullable_JavaScriptObject; B.boolConversionCheck(t1.moveNext$0());) {
                  font = t1.get$current();
                  t3 = B.getProperty(self.document, "fonts", t2);
                  t3.toString;
                  B._callMethodUnchecked1(t3, "add", font, t2);
                }
              } catch (exception) {
                t1 = A.FontInvalidDataError$(asset);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return B._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return B._asyncStartSync($async$_loadFontAsset$3, $async$completer);
    },
    _loadFontFace$3(family, asset, descriptors) {
      return this._loadFontFace$body$HtmlFontCollection(B._asString(family), B._asString(asset), type$.Map_String_String._as(descriptors));
    },
    _loadFontFace$body$HtmlFontCollection(family, asset, descriptors) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, $async$handler = 2, $async$currentError, fontFace, e, t1, exception, $async$exception;
      var $async$_loadFontFace$3 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              fontFace = A.createDomFontFace(family, "url(" + B.S(A.assetManager().getAssetUrl$1(asset)) + ")", descriptors);
              $async$goto = 7;
              return B._asyncAwait(A.DomFontFaceExtension_load(fontFace), $async$_loadFontFace$3);
            case 7:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              e = B.unwrapException($async$exception);
              $.$get$printWarning().call$1('Error while loading font family "' + family + '":\n' + B.S(e));
              t1 = A.FontDownloadError$(asset, e);
              throw B.wrapException(t1);
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return B._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return B._asyncStartSync($async$_loadFontFace$3, $async$completer);
    },
    _loadFontFaceBytes$2(family, list) {
      return this._loadFontFaceBytes$body$HtmlFontCollection(B._asString(family), type$.Uint8List._as(list));
    },
    _loadFontFaceBytes$body$HtmlFontCollection(family, list) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, fontFace, t1, t2, exception;
      var $async$_loadFontFaceBytes$2 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              try {
                fontFace = A.createDomFontFace(family, list, null);
                if (B.boolConversionCheck(J.$eq$(A.DomFontFaceExtension_get_status(fontFace), "error"))) {
                  $async$returnValue = false;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t1 = type$.nullable_JavaScriptObject;
                t2 = B.getProperty(self.document, "fonts", t1);
                t2.toString;
                B._callMethodUnchecked1(t2, "add", fontFace, t1);
                A.Spanometer_clearRulersCache();
              } catch (exception) {
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$_loadFontFaceBytes$2, $async$completer);
    },
    $isFlutterFontCollection: 1
  };
  A.TextFragmenter.prototype = {};
  A.TextFragment.prototype = {
    overlapsWith$2(start, end) {
      var t1;
      B._asInt(start);
      B._asInt(end);
      t1 = this.end;
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (start < t1) {
        t1 = this.start;
        if (typeof t1 !== "number")
          return t1.$lt();
        t1 = t1 < end;
      } else
        t1 = false;
      return t1;
    }
  };
  A.LayoutFragmenter.prototype = {
    fragment$0() {
      var bidiFragments, spans, currentLineBreakFragment, currentBidiFragment, currentSpan, fragmentStart, t2, t3, t4, fragmentEnd, distanceFromLineBreak, lineBreakType, t5, t6, fragmentLength, moved,
        fragments = B._setArrayType([], type$.JSArray_LayoutFragment),
        t1 = this.text,
        lineBreakFragments = J.get$iterator$ax(A.LineBreakFragmenter_LineBreakFragmenter(t1).fragment$0());
      lineBreakFragments.moveNext$0();
      bidiFragments = J.get$iterator$ax(A.BidiFragmenter$(t1).fragment$0());
      bidiFragments.moveNext$0();
      spans = J.get$iterator$ax(this.paragraphSpans);
      spans.moveNext$0();
      currentLineBreakFragment = lineBreakFragments.get$current();
      currentBidiFragment = bidiFragments.get$current();
      currentSpan = spans.get$current();
      for (t1 = type$.int, fragmentStart = 0; true; fragmentStart = fragmentEnd) {
        t2 = currentLineBreakFragment.end;
        t3 = currentBidiFragment.end;
        t4 = currentSpan.end;
        fragmentEnd = A.min(t2, A.min(t3, t4, t1), t1);
        if (typeof t2 !== "number")
          return t2.$sub();
        distanceFromLineBreak = t2 - fragmentEnd;
        lineBreakType = distanceFromLineBreak === 0 ? currentLineBreakFragment.type : C.LineBreakType_1;
        t5 = currentLineBreakFragment.trailingNewlines;
        if (typeof t5 !== "number")
          return t5.$sub();
        t6 = currentLineBreakFragment.trailingSpaces;
        if (typeof t6 !== "number")
          return t6.$sub();
        fragmentLength = fragmentEnd - fragmentStart;
        D.JSArray_methods.add$1(fragments, A.LayoutFragment$(fragmentStart, fragmentEnd, lineBreakType, currentBidiFragment.textDirection, currentBidiFragment.fragmentFlow, currentSpan, A.clampInt(t5 - distanceFromLineBreak, 0, fragmentLength), A.clampInt(t6 - distanceFromLineBreak, 0, fragmentLength)));
        if (t2 === fragmentEnd) {
          moved = B.boolConversionCheck(lineBreakFragments.moveNext$0());
          if (moved)
            currentLineBreakFragment = lineBreakFragments.get$current();
        } else
          moved = false;
        if (B.boolConversionCheck(J.$eq$(t3, fragmentEnd)))
          if (B.boolConversionCheck(bidiFragments.moveNext$0())) {
            currentBidiFragment = bidiFragments.get$current();
            moved = true;
          }
        if (B.boolConversionCheck(J.$eq$(t4, fragmentEnd)))
          if (B.boolConversionCheck(spans.moveNext$0())) {
            currentSpan = spans.get$current();
            moved = true;
          }
        if (!moved)
          break;
      }
      return fragments;
    }
  };
  A._CombinedFragment.prototype = {
    get$textDirection() {
      return this.__engine$_textDirection;
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.start, _this.end, _this.type, _this.get$textDirection(), _this.fragmentFlow, _this.span, _this.trailingNewlines, _this.trailingSpaces, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A.LayoutFragment && B.boolConversionCheck(J.$eq$(other.start, _this.start)) && B.boolConversionCheck(J.$eq$(other.end, _this.end)) && B.boolConversionCheck(J.$eq$(other.type, _this.type)) && B.boolConversionCheck(J.$eq$(other.get$textDirection(), _this.get$textDirection())) && B.boolConversionCheck(J.$eq$(other.fragmentFlow, _this.fragmentFlow)) && B.boolConversionCheck(J.$eq$(other.span, _this.span)) && B.boolConversionCheck(J.$eq$(other.trailingNewlines, _this.trailingNewlines)) && B.boolConversionCheck(J.$eq$(other.trailingSpaces, _this.trailingSpaces));
    }
  };
  A.LayoutFragment.prototype = {
    get$length(_) {
      var t1 = this.end,
        t2 = this.start;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 - t2;
    },
    get$isSpaceOnly() {
      return J.$eq$(this.get$length(0), this.trailingSpaces);
    },
    get$isPlaceholder() {
      return false;
    },
    get$isBreak() {
      return !B.boolConversionCheck(J.$eq$(this.type, C.LineBreakType_1));
    },
    get$isHardBreak() {
      var t1 = this.type,
        t2 = J.getInterceptor$(t1);
      return B.boolConversionCheck(t2.$eq(t1, C.LineBreakType_2)) || B.boolConversionCheck(t2.$eq(t1, C.LineBreakType_3));
    },
    get$style() {
      return this.span.style;
    },
    getText$1(paragraph) {
      var t1, t2;
      type$.CanvasParagraph._as(paragraph);
      t1 = this.end;
      t2 = this.trailingNewlines;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return J.substring$2$s(paragraph.plainText, this.start, t1 - t2);
    },
    split$1(_, index) {
      var t1, t2, secondLength, t3, t4, secondTrailingNewlines, t5, secondTrailingSpaces, t6, t7, _this = this;
      B._asInt(index);
      t1 = _this.start;
      if (B.boolConversionCheck(J.$eq$(t1, index)))
        return B._setArrayType([null, _this], type$.JSArray_nullable_LayoutFragment);
      t2 = _this.end;
      if (B.boolConversionCheck(J.$eq$(t2, index)))
        return B._setArrayType([_this, null], type$.JSArray_nullable_LayoutFragment);
      if (typeof t2 !== "number")
        return t2.$sub();
      secondLength = t2 - index;
      t3 = _this.trailingNewlines;
      t4 = type$.int;
      secondTrailingNewlines = A.min(t3, secondLength, t4);
      t5 = _this.trailingSpaces;
      secondTrailingSpaces = A.min(t5, secondLength, t4);
      t4 = _this.get$textDirection();
      t6 = _this.fragmentFlow;
      t7 = _this.span;
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t5 !== "number")
        return t5.$sub();
      return B._setArrayType([A.LayoutFragment$(t1, index, C.LineBreakType_1, t4, t6, t7, t3 - secondTrailingNewlines, t5 - secondTrailingSpaces), A.LayoutFragment$(index, t2, _this.type, _this.get$textDirection(), t6, t7, secondTrailingNewlines, secondTrailingSpaces)], type$.JSArray_LayoutFragment);
    },
    toString$0(_) {
      var _this = this;
      return B.S(C.Type_LayoutFragment_GQf) + "(" + B.S(_this.start) + ", " + B.S(_this.end) + ", " + B.S(_this.type) + ", " + B.S(_this.get$textDirection()) + ")";
    },
    $is_FragmentMetrics: 1,
    $is_FragmentPosition: 1,
    $is_FragmentBox: 1
  };
  A._FragmentMetrics.prototype = {
    get$_spanometer() {
      return this._FragmentMetrics____FragmentMetrics__spanometer_A;
    },
    set$_spanometer(value) {
      this._FragmentMetrics____FragmentMetrics__spanometer_A = type$.Spanometer._as(value);
    },
    get$ascent() {
      return this.get$_ascent();
    },
    get$_ascent() {
      return this._FragmentMetrics____FragmentMetrics__ascent_A;
    },
    set$_ascent(value) {
      this._FragmentMetrics____FragmentMetrics__ascent_A = B._asDouble(value);
    },
    get$descent() {
      return this.get$_descent();
    },
    get$_descent() {
      return this._FragmentMetrics____FragmentMetrics__descent_A;
    },
    set$_descent(value) {
      this._FragmentMetrics____FragmentMetrics__descent_A = B._asDouble(value);
    },
    get$widthExcludingTrailingSpaces() {
      return this.get$_widthExcludingTrailingSpaces();
    },
    get$_widthExcludingTrailingSpaces() {
      return this._FragmentMetrics____FragmentMetrics__widthExcludingTrailingSpaces_A;
    },
    set$_widthExcludingTrailingSpaces(value) {
      this._FragmentMetrics____FragmentMetrics__widthExcludingTrailingSpaces_A = B._asDouble(value);
    },
    get$widthIncludingTrailingSpaces() {
      var t1 = this.get$_widthIncludingTrailingSpaces(),
        t2 = this._FragmentMetrics__extraWidthForJustification;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 + t2;
    },
    get$_widthIncludingTrailingSpaces() {
      return this._FragmentMetrics____FragmentMetrics__widthIncludingTrailingSpaces_A;
    },
    set$_widthIncludingTrailingSpaces(value) {
      this._FragmentMetrics____FragmentMetrics__widthIncludingTrailingSpaces_A = B._asDouble(value);
    },
    get$widthOfTrailingSpaces() {
      var t1 = this.get$widthIncludingTrailingSpaces(),
        t2 = this.get$widthExcludingTrailingSpaces();
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 - t2;
    },
    setMetrics$5$ascent$descent$widthExcludingTrailingSpaces$widthIncludingTrailingSpaces(spanometer, ascent, descent, widthExcludingTrailingSpaces, widthIncludingTrailingSpaces) {
      var _this = this;
      type$.Spanometer._as(spanometer);
      B._asDouble(ascent);
      B._asDouble(descent);
      B._asDouble(widthExcludingTrailingSpaces);
      B._asDouble(widthIncludingTrailingSpaces);
      _this.set$_spanometer(spanometer);
      _this.set$_ascent(ascent);
      _this.set$_descent(descent);
      _this.set$_widthExcludingTrailingSpaces(widthExcludingTrailingSpaces);
      _this.set$_widthIncludingTrailingSpaces(widthIncludingTrailingSpaces);
    },
    $isTextFragment: 1,
    $is_CombinedFragment: 1
  };
  A._FragmentPosition.prototype = {
    get$startOffset() {
      return this.get$_startOffset();
    },
    get$_startOffset() {
      return this._FragmentPosition____FragmentPosition__startOffset_A;
    },
    set$_startOffset(value) {
      this._FragmentPosition____FragmentPosition__startOffset_A = B._asDouble(value);
    },
    get$line() {
      return this._FragmentPosition____FragmentPosition_line_A;
    },
    set$line(value) {
      this._FragmentPosition____FragmentPosition_line_A = type$.ParagraphLine._as(value);
    },
    get$endOffset() {
      var t1 = this.get$startOffset(),
        t2 = this.get$widthIncludingTrailingSpaces();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 + t2;
    },
    get$left() {
      var t1, t2, _this = this;
      if (B.boolConversionCheck(J.$eq$(_this.get$line().textDirection, C.TextDirection_1)))
        t1 = _this.get$startOffset();
      else {
        t1 = _this.get$line().get$width();
        t2 = _this.get$endOffset();
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t2 = t1 - t2;
        t1 = t2;
      }
      return t1;
    },
    get$right() {
      var t1, t2, _this = this;
      if (B.boolConversionCheck(J.$eq$(_this.get$line().textDirection, C.TextDirection_1)))
        t1 = _this.get$endOffset();
      else {
        t1 = _this.get$line().get$width();
        t2 = _this.get$startOffset();
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t2 = t1 - t2;
        t1 = t2;
      }
      return t1;
    },
    setPosition$2$startOffset$textDirection(startOffset, textDirection) {
      B._asDouble(startOffset);
      type$.TextDirection._as(textDirection);
      this.set$_startOffset(startOffset);
      if (this.__engine$_textDirection == null)
        this.__engine$_textDirection = textDirection;
    },
    justifyTo$1$paragraphWidth(paragraphWidth) {
      var t1, t2, t3, _this = this;
      B._asDouble(paragraphWidth);
      t1 = _this.end;
      t2 = _this.get$line().endIndex;
      t3 = _this.get$line().trailingSpaces;
      if (typeof t2 !== "number")
        return t2.$sub();
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (typeof t1 !== "number")
        return t1.$gt();
      if (t1 > t2 - t3)
        return;
      t1 = _this.trailingSpaces;
      if (B.boolConversionCheck(J.$eq$(t1, 0)))
        return;
      t2 = _this.get$line().get$width();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = _this.get$line().get$nonTrailingSpaces();
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (typeof t1 !== "number")
        return B.iae(t1);
      _this._FragmentMetrics__extraWidthForJustification = (paragraphWidth - t2) / t3 * t1;
    },
    $isTextFragment: 1,
    $is_CombinedFragment: 1,
    $is_FragmentMetrics: 1
  };
  A._FragmentBox.prototype = {
    get$top() {
      var t1 = this.get$line().get$baseline(),
        t2 = this.get$ascent();
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 - t2;
    },
    get$bottom() {
      var t1 = this.get$line().get$baseline(),
        t2 = this.get$descent();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 + t2;
    },
    get$_textBoxIncludingTrailingSpaces() {
      var t1, t2, t3, t4, t5, t6, t7, result, _this = this,
        value = _this._FragmentBox____FragmentBox__textBoxIncludingTrailingSpaces_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        t1 = _this.get$line().get$left();
        t2 = _this.get$left();
        if (typeof t1 !== "number")
          return t1.$add();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t3 = _this.get$top();
        t4 = _this.get$line().get$left();
        t5 = _this.get$right();
        if (typeof t4 !== "number")
          return t4.$add();
        if (typeof t5 !== "number")
          return B.iae(t5);
        t6 = _this.get$bottom();
        t7 = _this.get$textDirection();
        t7.toString;
        result = A.TextBox$fromLTRBD(t1 + t2, t3, t4 + t5, t6, t7);
        _this._FragmentBox____FragmentBox__textBoxIncludingTrailingSpaces_FI !== $ && B.throwLateFieldADI("_textBoxIncludingTrailingSpaces");
        _this._FragmentBox____FragmentBox__textBoxIncludingTrailingSpaces_FI = result;
        value = result;
      }
      return value;
    },
    get$_isPartOfTrailingSpacesInLine() {
      var t1 = this.end,
        t2 = this.get$line().endIndex,
        t3 = this.get$line().trailingSpaces;
      if (typeof t2 !== "number")
        return t2.$sub();
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (typeof t1 !== "number")
        return t1.$gt();
      return t1 > t2 - t3;
    },
    toPaintingTextBox$0() {
      var t1, t2, t3, t4, t5, t6, t7, t8, _this = this;
      if (B.boolConversionCheck(_this.get$_isPartOfTrailingSpacesInLine())) {
        t1 = _this.get$textDirection();
        t1.toString;
        if (B.boolConversionCheck(J.$eq$(t1, C.TextDirection_1))) {
          t1 = _this.get$line().get$left();
          t2 = _this.get$left();
          if (typeof t1 !== "number")
            return t1.$add();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t3 = _this.get$top();
          t4 = _this.get$line().get$left();
          t5 = _this.get$right();
          if (typeof t4 !== "number")
            return t4.$add();
          if (typeof t5 !== "number")
            return B.iae(t5);
          t6 = _this.get$widthOfTrailingSpaces();
          if (typeof t6 !== "number")
            return B.iae(t6);
          t7 = _this.get$bottom();
          t8 = _this.get$textDirection();
          t8.toString;
          t8 = A.TextBox$fromLTRBD(t1 + t2, t3, t4 + t5 - t6, t7, t8);
          t1 = t8;
        } else {
          t1 = _this.get$line().get$left();
          t2 = _this.get$left();
          if (typeof t1 !== "number")
            return t1.$add();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t3 = _this.get$widthOfTrailingSpaces();
          if (typeof t3 !== "number")
            return B.iae(t3);
          t4 = _this.get$top();
          t5 = _this.get$line().get$left();
          t6 = _this.get$right();
          if (typeof t5 !== "number")
            return t5.$add();
          if (typeof t6 !== "number")
            return B.iae(t6);
          t7 = _this.get$bottom();
          t8 = _this.get$textDirection();
          t8.toString;
          t8 = A.TextBox$fromLTRBD(t1 + t2 + t3, t4, t5 + t6, t7, t8);
          t1 = t8;
        }
        return t1;
      }
      return _this.get$_textBoxIncludingTrailingSpaces();
    },
    toTextBox$2$end$start(end, start) {
      var t1, t2, _this = this;
      B._asIntQ(start);
      B._asIntQ(end);
      if (start == null)
        start = _this.start;
      if (end == null)
        end = _this.end;
      t1 = _this.start;
      if (typeof start !== "number")
        return start.$le();
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (start <= t1) {
        t1 = _this.end;
        t2 = _this.trailingNewlines;
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (typeof end !== "number")
          return end.$ge();
        t2 = end >= t1 - t2;
        t1 = t2;
      } else
        t1 = false;
      if (t1)
        return _this.get$_textBoxIncludingTrailingSpaces();
      return _this._intersect$2(start, end);
    },
    toTextBox$0() {
      return this.toTextBox$2$end$start(null, null);
    },
    _intersect$2(start, end) {
      var t1, before, t2, after, left, right, t3, t4, t5, _this = this;
      B._asInt(start);
      B._asInt(end);
      t1 = _this.start;
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (start <= t1)
        before = 0;
      else {
        _this.get$_spanometer().set$currentSpan(_this.span);
        before = _this.get$_spanometer().measureRange$2(t1, start);
      }
      t1 = _this.end;
      t2 = _this.trailingNewlines;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t2 = t1 - t2;
      if (end >= t2)
        after = 0;
      else {
        _this.get$_spanometer().set$currentSpan(_this.span);
        after = _this.get$_spanometer().measureRange$2(end, t2);
      }
      t1 = _this.get$textDirection();
      t1.toString;
      if (B.boolConversionCheck(J.$eq$(t1, C.TextDirection_1))) {
        t1 = _this.get$left();
        if (typeof t1 !== "number")
          return t1.$add();
        left = t1 + before;
        t1 = _this.get$right();
        if (typeof t1 !== "number")
          return t1.$sub();
        right = t1 - after;
      } else {
        t1 = _this.get$left();
        if (typeof t1 !== "number")
          return t1.$add();
        left = t1 + after;
        t1 = _this.get$right();
        if (typeof t1 !== "number")
          return t1.$sub();
        right = t1 - before;
      }
      t1 = _this.get$line().get$left();
      if (typeof t1 !== "number")
        return t1.$add();
      t2 = _this.get$top();
      t3 = _this.get$line().get$left();
      if (typeof t3 !== "number")
        return t3.$add();
      t4 = _this.get$bottom();
      t5 = _this.get$textDirection();
      t5.toString;
      return A.TextBox$fromLTRBD(t1 + left, t2, t3 + right, t4, t5);
    },
    getPositionForX$1(x) {
      var startIndex, t1, t2, endIndex, $length, cutoff, _this = this;
      x = _this._makeXDirectionAgnostic$1(B._asDouble(x));
      startIndex = _this.start;
      t1 = _this.end;
      t2 = _this.trailingNewlines;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      endIndex = t1 - t2;
      $length = endIndex - startIndex;
      if ($length === 0)
        return A.TextPosition$(C.TextAffinity_1, startIndex);
      if ($length === 1) {
        t1 = _this.get$widthIncludingTrailingSpaces();
        if (typeof t1 !== "number")
          return t1.$sub();
        return x < t1 - x ? A.TextPosition$(C.TextAffinity_1, startIndex) : A.TextPosition$(C.TextAffinity_0, endIndex);
      }
      _this.get$_spanometer().set$currentSpan(_this.span);
      cutoff = _this.get$_spanometer().forceBreak$4$allowEmpty$availableWidth(startIndex, endIndex, true, x);
      if (cutoff === endIndex)
        return A.TextPosition$(C.TextAffinity_0, cutoff);
      t1 = cutoff + 1;
      if (x - _this.get$_spanometer().measureRange$2(startIndex, cutoff) < _this.get$_spanometer().measureRange$2(startIndex, t1) - x)
        return A.TextPosition$(C.TextAffinity_1, cutoff);
      else
        return A.TextPosition$(C.TextAffinity_0, t1);
    },
    _makeXDirectionAgnostic$1(x) {
      var t1;
      B._asDouble(x);
      if (B.boolConversionCheck(J.$eq$(this.get$textDirection(), C.TextDirection_0))) {
        t1 = this.get$widthIncludingTrailingSpaces();
        if (typeof t1 !== "number")
          return t1.$sub();
        return t1 - x;
      }
      return x;
    },
    get$graphemeStartIndexRange() {
      var result, _this = this,
        value = _this._FragmentBox____FragmentBox_graphemeStartIndexRange_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = _this._getBreaksRange$0();
        _this._FragmentBox____FragmentBox_graphemeStartIndexRange_FI !== $ && B.throwLateFieldADI("graphemeStartIndexRange");
        _this.set$___FragmentBox_graphemeStartIndexRange_FI(result);
        value = result;
      }
      return value;
    },
    _getBreaksRange$0() {
      var lineGraphemeBreaks, t4, startIndex, endIndex, _this = this,
        t1 = _this.end,
        t2 = _this.start,
        t3 = J.getInterceptor$(t1);
      if (B.boolConversionCheck(t3.$eq(t1, t2)))
        return null;
      lineGraphemeBreaks = _this.get$line().get$graphemeStarts();
      t4 = J.getInterceptor$asx(lineGraphemeBreaks);
      startIndex = _this.get$line().graphemeStartIndexBefore$3(t2, 0, t4.get$length(lineGraphemeBreaks));
      if (typeof t2 !== "number")
        return t2.$add();
      if (B.boolConversionCheck(t3.$eq(t1, t2 + 1)))
        endIndex = startIndex + 1;
      else {
        t3 = _this.get$line();
        if (typeof t1 !== "number")
          return t1.$sub();
        t1 = t3.graphemeStartIndexBefore$3(t1 - 1, startIndex, t4.get$length(lineGraphemeBreaks));
        if (typeof t1 !== "number")
          return t1.$add();
        endIndex = t1 + 1;
      }
      if (t4.$index(lineGraphemeBreaks, startIndex) > t2) {
        t1 = startIndex + 1;
        t1 = endIndex === t1 ? null : new B._Record_2(t1, endIndex);
      } else
        t1 = new B._Record_2(startIndex, endIndex);
      return t1;
    },
    get$hasLeadingBrokenGrapheme() {
      var t1 = this.get$graphemeStartIndexRange(),
        graphemeStartIndexRangeStart = t1 == null ? null : t1._0;
      return graphemeStartIndexRangeStart == null || !B.boolConversionCheck(J.$eq$(J.$index$asx(this.get$line().get$graphemeStarts(), graphemeStartIndexRangeStart), this.start));
    },
    _getClosestCharacterInRange$3(x, startIndex, endIndex) {
      var graphemeStartIndices, t1, t2, fullRange, fullBox, _0_1, t3, right, t4, _0_2, left, midIndex, firstHalf, secondHalf, t5, _1_1, _1_4, _1_10, _1_3, _1_40, _1_6, _1_8_isSet, _1_8, _1_4_isSet, _1_10_isSet, box, _this = this, _null = null;
      B._asDouble(x);
      B._asInt(startIndex);
      B._asInt(endIndex);
      graphemeStartIndices = _this.get$line().get$graphemeStarts();
      t1 = J.getInterceptor$asx(graphemeStartIndices);
      t2 = t1.$index(graphemeStartIndices, startIndex);
      fullRange = A.TextRange$(t1.$index(graphemeStartIndices, endIndex), t2);
      fullBox = _this.toTextBox$2$end$start(fullRange.end, fullRange.start);
      t2 = startIndex + 1;
      if (t2 === endIndex)
        return A.GlyphInfo$(fullBox.toRect$0(), fullRange, fullBox.direction);
      _0_1 = fullBox.left;
      t3 = _0_1;
      right = _null;
      t4 = false;
      if (typeof t3 == "number") {
        _0_2 = fullBox.right;
        t3 = _0_2;
        t3 = typeof t3 == "number";
        if (t3)
          right = _0_2;
        left = _0_1;
      } else {
        t3 = t4;
        left = _null;
      }
      if (!t3)
        throw B.wrapException(B.StateError$("Pattern matching error"));
      if (typeof left !== "number")
        return left.$lt();
      if (left < x) {
        if (typeof right !== "number")
          return B.iae(right);
        t3 = x < right;
      } else
        t3 = false;
      if (t3) {
        midIndex = D.JSInt_methods._tdivFast$1(startIndex + endIndex, 2);
        firstHalf = _this._getClosestCharacterInRange$3(x, startIndex, midIndex);
        t1 = firstHalf.graphemeClusterLayoutBounds;
        t2 = t1.left;
        if (typeof t2 !== "number")
          return t2.$lt();
        if (t2 < x) {
          t3 = t1.right;
          if (typeof t3 !== "number")
            return B.iae(t3);
          t3 = x < t3;
        } else
          t3 = false;
        if (t3)
          return firstHalf;
        secondHalf = _this._getClosestCharacterInRange$3(x, midIndex, endIndex);
        t3 = secondHalf.graphemeClusterLayoutBounds;
        t4 = t3.left;
        if (typeof t4 !== "number")
          return t4.$lt();
        if (t4 < x) {
          t5 = t3.right;
          if (typeof t5 !== "number")
            return B.iae(t5);
          t5 = x < t5;
        } else
          t5 = false;
        if (t5)
          return secondHalf;
        t1 = D.JSNumber_methods.clamp$2(x, t2, t1.right);
        if (typeof t1 !== "number")
          return B.iae(t1);
        t3 = D.JSNumber_methods.clamp$2(x, t4, t3.right);
        if (typeof t3 !== "number")
          return B.iae(t3);
        return Math.abs(x - t1) > Math.abs(x - t3) ? firstHalf : secondHalf;
      }
      _1_1 = fullBox.direction;
      _1_4 = x <= left;
      $label0$0: {
        _1_10 = _null;
        t3 = _1_1;
        _1_3 = C.TextDirection_1 === t3;
        t3 = _1_3;
        B.boolConversionCheck(t3);
        if (t3) {
          B.boolConversionCheck(_1_4);
          t4 = _1_4;
          _1_40 = t4;
          _1_6 = _1_40;
        } else {
          _1_40 = _null;
          _1_6 = _1_40;
          t4 = false;
        }
        _1_8_isSet = !t4;
        _1_8 = _null;
        _1_10 = _null;
        if (_1_8_isSet) {
          _1_8 = C.TextDirection_0 === _1_1;
          t4 = _1_8;
          B.boolConversionCheck(t4);
          if (t4) {
            if (t3) {
              t5 = _1_40;
              _1_4_isSet = t3;
            } else {
              t5 = _1_4;
              _1_40 = t5;
              _1_4_isSet = true;
            }
            _1_10 = false === t5;
            t5 = _1_10;
            B.boolConversionCheck(t5);
          } else {
            _1_4_isSet = t3;
            t5 = false;
          }
          _1_10_isSet = t4;
          t4 = t5;
        } else {
          _1_4_isSet = t3;
          _1_10_isSet = false;
          t4 = true;
        }
        if (t4) {
          t3 = t1.$index(graphemeStartIndices, startIndex);
          t3 = A.TextRange$(t1.$index(graphemeStartIndices, t2), t3);
          t1 = t3;
          break $label0$0;
        }
        if (B.boolConversionCheck(_1_3)) {
          if (_1_10_isSet)
            t2 = _1_10;
          else {
            if (_1_4_isSet)
              t2 = _1_40;
            else {
              t2 = _1_4;
              _1_40 = t2;
              _1_4_isSet = true;
            }
            _1_10 = false === t2;
            t2 = _1_10;
          }
          B.boolConversionCheck(t2);
        } else
          t2 = false;
        if (!t2) {
          if (_1_8_isSet)
            t2 = _1_8;
          else {
            _1_8 = C.TextDirection_0 === _1_1;
            t2 = _1_8;
          }
          if (B.boolConversionCheck(t2)) {
            if (t3)
              t2 = _1_6;
            else {
              _1_6 = true === (_1_4_isSet ? _1_40 : _1_4);
              t2 = _1_6;
            }
            B.boolConversionCheck(t2);
          } else
            t2 = false;
        } else
          t2 = true;
        if (t2) {
          t2 = t1.$index(graphemeStartIndices, endIndex - 1);
          t2 = A.TextRange$(t1.$index(graphemeStartIndices, endIndex), t2);
          t1 = t2;
          break $label0$0;
        }
        t1 = _null;
      }
      t2 = t1.start;
      box = _this.toTextBox$2$end$start(t1.end, t2);
      return A.GlyphInfo$(box.toRect$0(), t1, box.direction);
    },
    getClosestCharacterBox$1(x) {
      var _0_0, _0_1, t1, rangeEnd, t2, _0_2, rangeStart, _null = null;
      B._asDouble(x);
      _0_0 = this.get$graphemeStartIndexRange();
      _0_1 = _0_0._0;
      t1 = _0_1;
      rangeEnd = _null;
      t2 = false;
      if (B._isInt(t1)) {
        _0_2 = _0_0._1;
        t1 = _0_2;
        t1 = B._isInt(t1);
        if (t1)
          rangeEnd = _0_2;
        rangeStart = _0_1;
      } else {
        t1 = t2;
        rangeStart = _null;
      }
      if (!t1)
        throw B.wrapException(B.StateError$("Pattern matching error"));
      return this._getClosestCharacterInRange$3(x, rangeStart, rangeEnd);
    },
    set$___FragmentBox_graphemeStartIndexRange_FI(___FragmentBox_graphemeStartIndexRange_FI) {
      this._FragmentBox____FragmentBox_graphemeStartIndexRange_FI = type$.nullable_Record_2_int_and_int._as(___FragmentBox_graphemeStartIndexRange_FI);
    },
    $isTextFragment: 1,
    $is_CombinedFragment: 1,
    $is_FragmentMetrics: 1,
    $is_FragmentPosition: 1
  };
  A.EllipsisFragment.prototype = {
    get$isSpaceOnly() {
      return false;
    },
    get$isPlaceholder() {
      return false;
    },
    getText$1(paragraph) {
      var t1 = type$.CanvasParagraph._as(paragraph).paragraphStyle.ellipsis;
      t1.toString;
      return t1;
    },
    split$1(_, index) {
      B._asInt(index);
      throw B.wrapException(B.Exception_Exception("Cannot split an EllipsisFragment"));
    }
  };
  A.TextLayoutService.prototype = {
    get$paintBounds() {
      return this._paintBounds;
    },
    get$spanometer() {
      var result,
        value = this.__TextLayoutService_spanometer_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.Spanometer$(this.paragraph);
        value !== $ && B.throwLateFieldADI("spanometer");
        this.__TextLayoutService_spanometer_FI = result;
        value = result;
      }
      return value;
    },
    get$layoutFragmenter() {
      var t1, result,
        value = this.__TextLayoutService_layoutFragmenter_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        t1 = this.paragraph;
        result = A.LayoutFragmenter$(t1.plainText, t1.spans);
        value !== $ && B.throwLateFieldADI("layoutFragmenter");
        this.__TextLayoutService_layoutFragmenter_FI = result;
        value = result;
      }
      return value;
    },
    performLayout$1(constraints) {
      var t2, t3, t4, currentLine, fragments, i, t5, maxLines, boundsLeft, boundsRight, t6, t7, t8, longestLineWidth, left, right, runningMinIntrinsicWidth, runningMaxIntrinsicWidth, runningMinIntrinsicWidth0, _this = this,
        t1 = type$.ParagraphConstraints._as(constraints).width;
      _this.set$width(t1);
      _this.height = 0;
      _this.longestLine = null;
      _this.maxIntrinsicWidth = _this.minIntrinsicWidth = 0;
      _this.didExceedMaxLines = false;
      t2 = _this.lines;
      t3 = J.getInterceptor$ax(t2);
      t3.clear$0(t2);
      t4 = _this.paragraph;
      currentLine = A.LineBuilder_LineBuilder$first(t4, _this.get$spanometer(), t1);
      fragments = _this.get$layoutFragmenter().fragment$0();
      t1 = J.getInterceptor$ax(fragments);
      t1.forEach$1(fragments, _this.get$spanometer().get$measureFragment());
      i = 0;
      $label0$0:
        while (true) {
          t5 = t1.get$length(fragments);
          if (typeof t5 !== "number")
            return B.iae(t5);
          if (!(i < t5))
            break;
          c$0: {
            currentLine.addFragment$1(t1.$index(fragments, i));
            for (; B.boolConversionCheck(currentLine.get$isOverflowing());) {
              if (B.boolConversionCheck(currentLine.get$canHaveEllipsis())) {
                currentLine.insertEllipsis$0();
                t3.add$1(t2, currentLine.build$0());
                _this.didExceedMaxLines = true;
                break $label0$0;
              }
              if (B.boolConversionCheck(currentLine.get$isBreakable()))
                currentLine.revertToLastBreakOpportunity$0();
              else
                currentLine.forceBreakLastFragment$0();
              t5 = currentLine.appendZeroWidthFragments$2$startFrom(fragments, i + 1);
              if (typeof t5 !== "number")
                return B.iae(t5);
              i += t5;
              t3.add$1(t2, currentLine.build$0());
              currentLine = currentLine.nextLine$0();
            }
            if (B.boolConversionCheck(currentLine.get$isHardBreak())) {
              t3.add$1(t2, currentLine.build$0());
              currentLine = currentLine.nextLine$0();
            }
          }
          ++i;
        }
      t4 = t4.paragraphStyle;
      maxLines = t4.maxLines;
      if (maxLines != null) {
        t5 = t3.get$length(t2);
        if (typeof t5 !== "number")
          return t5.$gt();
        t5 = t5 > maxLines;
      } else
        t5 = false;
      if (t5) {
        _this.didExceedMaxLines = true;
        t3.removeRange$2(t2, maxLines, t3.get$length(t2));
      }
      for (t5 = t3.get$iterator(t2), boundsLeft = 1 / 0, boundsRight = -1 / 0; B.boolConversionCheck(t5.moveNext$0());) {
        t6 = t5.get$current();
        t7 = _this.height;
        t8 = t6.get$height();
        if (typeof t7 !== "number")
          return t7.$add();
        if (typeof t8 !== "number")
          return B.iae(t8);
        _this.height = t7 + t8;
        if (B.boolConversionCheck(J.$eq$(_this.alphabeticBaseline, -1))) {
          _this.set$alphabeticBaseline(t6.get$baseline());
          t7 = _this.alphabeticBaseline;
          if (typeof t7 !== "number")
            return t7.$mul();
          _this.ideographicBaseline = t7 * 1.1662499904632568;
        }
        t7 = _this.longestLine;
        longestLineWidth = t7 == null ? null : t7.get$width();
        if (longestLineWidth == null)
          longestLineWidth = 0;
        t7 = t6.get$width();
        if (typeof t7 !== "number")
          return B.iae(t7);
        if (longestLineWidth < t7)
          _this.longestLine = t6;
        left = t6.get$left();
        if (left < boundsLeft)
          boundsLeft = left;
        t6 = t6.get$width();
        if (typeof t6 !== "number")
          return B.iae(t6);
        right = left + t6;
        if (right > boundsRight)
          boundsRight = right;
      }
      _this._paintBounds = A.Rect$fromLTRB(boundsLeft, 0, boundsRight, _this.height);
      if (B.boolConversionCheck(t3.get$isNotEmpty(t2)))
        if (B.boolConversionCheck(J.get$isFinite$n(_this.width)) && B.boolConversionCheck(J.$eq$(t4.textAlign, C.TextAlign_3))) {
          i = 0;
          while (true) {
            t4 = t3.get$length(t2);
            if (typeof t4 !== "number")
              return t4.$sub();
            if (!(i < t4 - 1))
              break;
            for (t4 = J.get$iterator$ax(t3.$index(t2, i).fragments); B.boolConversionCheck(t4.moveNext$0());)
              t4.get$current().justifyTo$1$paragraphWidth(_this.width);
            ++i;
          }
        }
      t3.forEach$1(t2, _this.get$_positionLineFragments());
      for (t1 = t1.get$iterator(fragments), t2 = type$.double, runningMinIntrinsicWidth = 0, runningMaxIntrinsicWidth = 0; B.boolConversionCheck(t1.moveNext$0());) {
        t3 = t1.get$current();
        t4 = t3.get$widthExcludingTrailingSpaces();
        if (typeof t4 !== "number")
          return B.iae(t4);
        runningMinIntrinsicWidth += t4;
        t4 = t3.get$widthIncludingTrailingSpaces();
        if (typeof t4 !== "number")
          return B.iae(t4);
        runningMaxIntrinsicWidth += t4;
        runningMinIntrinsicWidth0 = 0;
        switch (t3.type) {
          case C.LineBreakType_1:
            break;
          case C.LineBreakType_0:
            _this.set$minIntrinsicWidth(A.max(_this.minIntrinsicWidth, runningMinIntrinsicWidth, t2));
            runningMinIntrinsicWidth = runningMinIntrinsicWidth0;
            break;
          case C.LineBreakType_2:
          case C.LineBreakType_3:
            _this.set$minIntrinsicWidth(A.max(_this.minIntrinsicWidth, runningMinIntrinsicWidth, t2));
            _this.set$maxIntrinsicWidth(A.max(_this.maxIntrinsicWidth, runningMaxIntrinsicWidth, t2));
            runningMinIntrinsicWidth = runningMinIntrinsicWidth0;
            runningMaxIntrinsicWidth = 0;
            break;
        }
      }
    },
    get$_paragraphDirection() {
      return this.paragraph.paragraphStyle.get$effectiveTextDirection();
    },
    _positionLineFragments$1(line) {
      var previousDirection, t1, t2, startOffset, sandwichStart, sequenceStart, i, t3, sandwichStart0, t4, _this = this;
      type$.ParagraphLine._as(line);
      previousDirection = _this.get$_paragraphDirection();
      t1 = line.fragments;
      t2 = J.getInterceptor$asx(t1);
      startOffset = 0;
      sandwichStart = null;
      sequenceStart = 0;
      i = 0;
      while (true) {
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i <= t3))
          break;
        c$0: {
          t3 = t2.get$length(t1);
          if (typeof t3 !== "number")
            return B.iae(t3);
          sandwichStart0 = null;
          if (i < t3) {
            t3 = t2.$index(t1, i).fragmentFlow;
            t4 = J.getInterceptor$(t3);
            if (B.boolConversionCheck(t4.$eq(t3, C.FragmentFlow_2))) {
              sandwichStart = sandwichStart0;
              break c$0;
            }
            if (B.boolConversionCheck(t4.$eq(t3, C.FragmentFlow_3))) {
              if (sandwichStart == null)
                sandwichStart = i;
              break c$0;
            }
            if ((B.boolConversionCheck(t4.$eq(t3, C.FragmentFlow_0)) ? C.TextDirection_1 : C.TextDirection_0) === previousDirection) {
              sandwichStart = sandwichStart0;
              break c$0;
            }
          }
          if (sandwichStart == null) {
            t3 = _this._positionFragmentRange$5$direction$end$line$start$startOffset(previousDirection, i, line, sequenceStart, startOffset);
            if (typeof t3 !== "number")
              return B.iae(t3);
            startOffset += t3;
          } else {
            t3 = _this._positionFragmentRange$5$direction$end$line$start$startOffset(previousDirection, sandwichStart, line, sequenceStart, startOffset);
            if (typeof t3 !== "number")
              return B.iae(t3);
            startOffset += t3;
            t3 = _this._positionFragmentRange$5$direction$end$line$start$startOffset(_this.get$_paragraphDirection(), i, line, sandwichStart, startOffset);
            if (typeof t3 !== "number")
              return B.iae(t3);
            startOffset += t3;
          }
          t3 = t2.get$length(t1);
          if (typeof t3 !== "number")
            return B.iae(t3);
          if (i < t3) {
            t3 = t2.$index(t1, i).get$textDirection();
            t3.toString;
            previousDirection = t3;
          }
          sequenceStart = i;
          sandwichStart = sandwichStart0;
        }
        ++i;
      }
    },
    _positionFragmentRange$5$direction$end$line$start$startOffset(direction, end, line, start, startOffset) {
      var cumulativeWidth, i, t1;
      type$.ParagraphLine._as(line);
      B._asInt(start);
      B._asInt(end);
      type$.TextDirection._as(direction);
      B._asDouble(startOffset);
      cumulativeWidth = 0;
      if (direction === this.get$_paragraphDirection())
        for (i = start; i < end; ++i) {
          t1 = this._positionOneFragment$4(line, i, startOffset + cumulativeWidth, direction);
          if (typeof t1 !== "number")
            return B.iae(t1);
          cumulativeWidth += t1;
        }
      else
        for (i = end - 1; i >= start; --i) {
          t1 = this._positionOneFragment$4(line, i, startOffset + cumulativeWidth, direction);
          if (typeof t1 !== "number")
            return B.iae(t1);
          cumulativeWidth += t1;
        }
      return cumulativeWidth;
    },
    _positionOneFragment$4(line, i, startOffset, direction) {
      var fragment;
      type$.ParagraphLine._as(line);
      B._asInt(i);
      B._asDouble(startOffset);
      type$.TextDirection._as(direction);
      fragment = J.$index$asx(line.fragments, i);
      fragment.setPosition$2$startOffset$textDirection(startOffset, direction);
      return fragment.get$widthIncludingTrailingSpaces();
    },
    getBoxesForPlaceholders$0() {
      var t1, t2, t3,
        boxes = B._setArrayType([], type$.JSArray_TextBox);
      for (t1 = J.get$iterator$ax(this.lines); B.boolConversionCheck(t1.moveNext$0());)
        for (t2 = J.get$iterator$ax(t1.get$current().fragments); B.boolConversionCheck(t2.moveNext$0());) {
          t3 = t2.get$current();
          if (B.boolConversionCheck(t3.get$isPlaceholder()))
            D.JSArray_methods.add$1(boxes, t3.toTextBox$0());
        }
      return boxes;
    },
    getBoxesForRange$4(start, end, boxHeightStyle, boxWidthStyle) {
      var $length, boxes, t1, t2, t3;
      B._asInt(start);
      B._asInt(end);
      type$.BoxHeightStyle._as(boxHeightStyle);
      type$.BoxWidthStyle._as(boxWidthStyle);
      if (start >= end || start < 0 || end < 0)
        return B._setArrayType([], type$.JSArray_TextBox);
      $length = J.get$length$asx(this.paragraph.plainText);
      if (start > $length || end > $length)
        return B._setArrayType([], type$.JSArray_TextBox);
      boxes = B._setArrayType([], type$.JSArray_TextBox);
      for (t1 = J.get$iterator$ax(this.lines); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        if (B.boolConversionCheck(t2.overlapsWith$2(start, end)))
          for (t2 = J.get$iterator$ax(t2.fragments); B.boolConversionCheck(t2.moveNext$0());) {
            t3 = t2.get$current();
            if (!B.boolConversionCheck(t3.get$isPlaceholder()) && B.boolConversionCheck(t3.overlapsWith$2(start, end)))
              D.JSArray_methods.add$1(boxes, t3.toTextBox$2$end$start(end, start));
          }
      }
      return boxes;
    },
    getPositionForOffset$1(offset) {
      var line, t1, t2, t3, dx;
      type$.Offset._as(offset);
      line = this._findLineForY$1(offset.get$dy());
      if (line == null)
        return C.TextPosition_0_TextAffinity_1;
      t1 = offset.get$dx();
      t2 = line.get$left();
      if (typeof t1 !== "number")
        return t1.$le();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (t1 <= t2)
        return A.TextPosition$(C.TextAffinity_1, line.startIndex);
      t1 = offset.get$dx();
      t2 = line.get$left();
      t3 = line.widthWithTrailingSpaces;
      if (typeof t2 !== "number")
        return t2.$add();
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (typeof t1 !== "number")
        return t1.$ge();
      if (t1 >= t2 + t3) {
        t1 = line.endIndex;
        t2 = line.trailingNewlines;
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return B.iae(t2);
        return A.TextPosition$(C.TextAffinity_0, t1 - t2);
      }
      t1 = offset.get$dx();
      t2 = line.get$left();
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      dx = t1 - t2;
      for (t1 = J.get$iterator$ax(line.fragments); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        t3 = t2.get$left();
        if (typeof t3 !== "number")
          return t3.$le();
        if (t3 <= dx) {
          t3 = t2.get$right();
          if (typeof t3 !== "number")
            return B.iae(t3);
          t3 = dx <= t3;
        } else
          t3 = false;
        if (t3) {
          t1 = t2.get$left();
          if (typeof t1 !== "number")
            return B.iae(t1);
          return t2.getPositionForX$1(dx - t1);
        }
      }
      return A.TextPosition$(C.TextAffinity_1, line.startIndex);
    },
    getClosestGlyphInfo$1(offset) {
      var line, t1, t2, fragment, dx, closestGraphemeStartInFragment, t3, candidate1, candidate2, distance1, _null = null;
      type$.Offset._as(offset);
      line = this._findLineForY$1(offset.get$dy());
      if (line == null)
        return _null;
      t1 = offset.get$dx();
      t2 = line.get$left();
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      fragment = line.closestFragmentAtOffset$1(t1 - t2);
      if (fragment == null)
        return _null;
      dx = offset.get$dx();
      closestGraphemeStartInFragment = true;
      if (B.boolConversionCheck(fragment.get$hasLeadingBrokenGrapheme())) {
        t1 = fragment.get$line().get$left();
        if (typeof t1 !== "number")
          return B.iae(t1);
        if (!(dx <= t1)) {
          t1 = fragment.get$line().get$left();
          t2 = fragment.get$line().get$width();
          if (typeof t1 !== "number")
            return t1.$add();
          if (typeof t2 !== "number")
            return B.iae(t2);
          if (!(t1 + t2 <= dx)) {
            t1 = fragment.get$textDirection();
            t1.toString;
            switch (t1) {
              case C.TextDirection_1:
                t1 = line.get$left();
                t2 = fragment.get$left();
                t3 = fragment.get$right();
                if (typeof t2 !== "number")
                  return t2.$add();
                if (typeof t3 !== "number")
                  return B.iae(t3);
                if (typeof t1 !== "number")
                  return t1.$add();
                t3 = dx >= t1 + (t2 + t3) / 2;
                t1 = t3;
                break;
              case C.TextDirection_0:
                t1 = line.get$left();
                t2 = fragment.get$left();
                t3 = fragment.get$right();
                if (typeof t2 !== "number")
                  return t2.$add();
                if (typeof t3 !== "number")
                  return B.iae(t3);
                if (typeof t1 !== "number")
                  return t1.$add();
                t3 = dx <= t1 + (t2 + t3) / 2;
                t1 = t3;
                break;
              default:
                t1 = _null;
            }
            B.boolConversionCheck(t1);
          } else
            t1 = closestGraphemeStartInFragment;
          closestGraphemeStartInFragment = t1;
        }
      }
      candidate1 = fragment.getClosestCharacterBox$1(dx);
      if (closestGraphemeStartInFragment)
        return candidate1;
      t1 = fragment.get$textDirection();
      t1.toString;
      switch (t1) {
        case C.TextDirection_1:
          t1 = true;
          break;
        case C.TextDirection_0:
          t1 = false;
          break;
        default:
          t1 = _null;
      }
      t1 = fragment.get$line().closestFragmentTo$2(fragment, t1);
      candidate2 = t1 == null ? _null : t1.getClosestCharacterBox$1(dx);
      if (candidate2 == null)
        return candidate1;
      t1 = candidate1.graphemeClusterLayoutBounds;
      t2 = t1.left;
      if (typeof t2 !== "number")
        return t2.$sub();
      t1 = t1.right;
      if (typeof t1 !== "number")
        return t1.$sub();
      t3 = type$.double;
      distance1 = A.min(Math.abs(t2 - dx), Math.abs(t1 - dx), t3);
      t1 = candidate2.graphemeClusterLayoutBounds;
      t2 = t1.left;
      if (typeof t2 !== "number")
        return t2.$sub();
      t1 = t1.right;
      if (typeof t1 !== "number")
        return t1.$sub();
      return A.min(Math.abs(t2 - dx), Math.abs(t1 - dx), t3) > distance1 ? candidate1 : candidate2;
    },
    _findLineForY$1(y) {
      var t1, t2, t3, t4, t5;
      B._asDouble(y);
      t1 = this.lines;
      t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t2.get$isEmpty(t1)))
        return null;
      for (t3 = t2.get$iterator(t1); B.boolConversionCheck(t3.moveNext$0());) {
        t4 = t3.get$current();
        t5 = t4.get$height();
        if (typeof t5 !== "number")
          return B.iae(t5);
        if (y <= t5)
          return t4;
        t4 = t4.get$height();
        if (typeof t4 !== "number")
          return B.iae(t4);
        y -= t4;
      }
      return t2.get$last(t1);
    },
    set$width(width) {
      this.width = B._asDouble(width);
    },
    set$minIntrinsicWidth(minIntrinsicWidth) {
      this.minIntrinsicWidth = B._asDouble(minIntrinsicWidth);
    },
    set$maxIntrinsicWidth(maxIntrinsicWidth) {
      this.maxIntrinsicWidth = B._asDouble(maxIntrinsicWidth);
    },
    set$alphabeticBaseline(alphabeticBaseline) {
      this.alphabeticBaseline = B._asDouble(alphabeticBaseline);
    }
  };
  A.LineBuilder.prototype = {
    LineBuilder$_$6$accumulatedHeight$fragments$lineNumber$maxWidth(paragraph, spanometer, accumulatedHeight, fragments, lineNumber, maxWidth) {
      this._recalculateMetrics$0();
    },
    get$startIndex() {
      if (B.boolConversionCheck(this.get$isNotEmpty(0)))
        var t1 = J.get$first$ax(this._fragments).start;
      else {
        t1 = this._fragmentsForNextLine;
        t1.toString;
        t1 = J.get$first$ax(t1).start;
      }
      return t1;
    },
    get$endIndex() {
      if (B.boolConversionCheck(this.get$isNotEmpty(0)))
        var t1 = J.get$last$ax(this._fragments).end;
      else {
        t1 = this._fragmentsForNextLine;
        t1.toString;
        t1 = J.get$first$ax(t1).start;
      }
      return t1;
    },
    get$_widthExcludingLastFragment() {
      var t1 = this._fragments,
        t2 = J.getInterceptor$asx(t1),
        t3 = t2.get$length(t1);
      if (typeof t3 !== "number")
        return t3.$gt();
      if (t3 > 1) {
        t3 = this.widthIncludingSpace;
        t1 = t2.get$last(t1).get$widthIncludingTrailingSpaces();
        if (typeof t3 !== "number")
          return t3.$sub();
        if (typeof t1 !== "number")
          return B.iae(t1);
        t1 = t3 - t1;
      } else
        t1 = 0;
      return t1;
    },
    get$height() {
      var t1 = this.ascent,
        t2 = this.descent;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 + t2;
    },
    get$isBreakable() {
      var t1 = this._fragments,
        t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t2.get$isEmpty(t1)))
        return false;
      if (B.boolConversionCheck(t2.get$last(t1).get$isBreak())) {
        t1 = this._breakCount;
        if (typeof t1 !== "number")
          return t1.$gt();
        return t1 > 1;
      }
      t1 = this._breakCount;
      if (typeof t1 !== "number")
        return t1.$gt();
      return t1 > 0;
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this._fragments);
    },
    get$isNotEmpty(_) {
      return J.get$isNotEmpty$asx(this._fragments);
    },
    get$isHardBreak() {
      var t1 = this._fragments,
        t2 = J.getInterceptor$asx(t1);
      return B.boolConversionCheck(t2.get$isNotEmpty(t1)) && B.boolConversionCheck(t2.get$last(t1).get$isHardBreak());
    },
    get$alignOffset() {
      var emptySpace, _this = this,
        t1 = _this.maxWidth,
        t2 = _this.width;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      emptySpace = t1 - t2;
      switch (_this.paragraph.paragraphStyle.get$effectiveTextAlign().index) {
        case 2:
          return emptySpace / 2;
        case 1:
          return emptySpace;
        case 4:
          return B.boolConversionCheck(J.$eq$(_this.get$_paragraphDirection(), C.TextDirection_0)) ? emptySpace : 0;
        case 5:
          return B.boolConversionCheck(J.$eq$(_this.get$_paragraphDirection(), C.TextDirection_0)) ? 0 : emptySpace;
        default:
          return 0;
      }
    },
    get$isOverflowing() {
      var t1 = this.width,
        t2 = this.maxWidth;
      if (typeof t1 !== "number")
        return t1.$gt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 > t2;
    },
    get$canHaveEllipsis() {
      var maxLines,
        t1 = this.paragraph.paragraphStyle;
      if (t1.ellipsis == null)
        return false;
      maxLines = t1.maxLines;
      if (maxLines != null) {
        t1 = this.lineNumber;
        if (typeof t1 !== "number")
          return t1.$add();
        t1 = maxLines === t1 + 1;
      } else
        t1 = true;
      return t1;
    },
    get$_canAppendEmptyFragments() {
      if (B.boolConversionCheck(this.get$isHardBreak()))
        return false;
      var t1 = this._fragmentsForNextLine;
      t1 = t1 == null ? null : J.get$isNotEmpty$asx(t1);
      if (B.boolConversionCheck(t1 == null ? false : t1))
        return false;
      return true;
    },
    get$_paragraphDirection() {
      return this.paragraph.paragraphStyle.get$effectiveTextDirection();
    },
    addFragment$1(fragment) {
      var _this = this;
      type$.LayoutFragment._as(fragment);
      _this._updateMetrics$1(fragment);
      if (B.boolConversionCheck(fragment.get$isBreak()))
        _this.set$_lastBreakableFragment(J.get$length$asx(_this._fragments));
      J.add$1$ax(_this._fragments, fragment);
    },
    _updateMetrics$1(fragment) {
      var t1, t2, _this = this;
      type$.LayoutFragment._as(fragment);
      t1 = _this._spaceCount;
      t2 = fragment.trailingSpaces;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      _this.set$_spaceCount(t1 + t2);
      if (B.boolConversionCheck(fragment.get$isSpaceOnly())) {
        t1 = _this._trailingSpaces;
        if (typeof t1 !== "number")
          return t1.$add();
        _this.set$_trailingSpaces(t1 + t2);
      } else {
        _this.set$_trailingSpaces(t2);
        t1 = _this.widthIncludingSpace;
        t2 = fragment.get$widthExcludingTrailingSpaces();
        if (typeof t1 !== "number")
          return t1.$add();
        if (typeof t2 !== "number")
          return B.iae(t2);
        _this.width = t1 + t2;
      }
      t1 = _this.widthIncludingSpace;
      t2 = fragment.get$widthIncludingTrailingSpaces();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      _this.widthIncludingSpace = t1 + t2;
      if (B.boolConversionCheck(fragment.get$isPlaceholder()))
        _this._adjustPlaceholderAscentDescent$1(fragment);
      if (B.boolConversionCheck(fragment.get$isBreak())) {
        t1 = _this._breakCount;
        if (typeof t1 !== "number")
          return t1.$add();
        _this.set$_breakCount(t1 + 1);
      }
      t1 = type$.double;
      _this.set$ascent(A.max(_this.ascent, fragment.get$ascent(), t1));
      _this.set$descent(A.max(_this.descent, fragment.get$descent(), t1));
    },
    _adjustPlaceholderAscentDescent$1(fragment) {
      var placeholder, ascent, t1, t2, descent, diff, _this = this;
      type$.LayoutFragment._as(fragment);
      placeholder = type$.PlaceholderSpan._as(fragment.span);
      switch (placeholder.get$alignment()) {
        case C.PlaceholderAlignment_3:
          ascent = _this.ascent;
          t1 = placeholder.get$height();
          t2 = _this.ascent;
          if (typeof t1 !== "number")
            return t1.$sub();
          if (typeof t2 !== "number")
            return B.iae(t2);
          descent = t1 - t2;
          break;
        case C.PlaceholderAlignment_4:
          t1 = placeholder.get$height();
          t2 = _this.descent;
          if (typeof t1 !== "number")
            return t1.$sub();
          if (typeof t2 !== "number")
            return B.iae(t2);
          ascent = t1 - t2;
          descent = t2;
          break;
        case C.PlaceholderAlignment_5:
          t1 = _this.get$height();
          if (typeof t1 !== "number")
            return t1.$div();
          t2 = placeholder.get$height();
          if (typeof t2 !== "number")
            return t2.$div();
          diff = t2 / 2 - t1 / 2;
          t1 = _this.ascent;
          if (typeof t1 !== "number")
            return t1.$add();
          ascent = t1 + diff;
          t1 = _this.descent;
          if (typeof t1 !== "number")
            return t1.$add();
          descent = t1 + diff;
          break;
        case C.PlaceholderAlignment_1:
          ascent = placeholder.get$height();
          descent = 0;
          break;
        case C.PlaceholderAlignment_2:
          descent = placeholder.get$height();
          ascent = 0;
          break;
        case C.PlaceholderAlignment_0:
          ascent = placeholder.get$baselineOffset();
          t1 = placeholder.get$height();
          if (typeof t1 !== "number")
            return t1.$sub();
          descent = t1 - ascent;
          break;
        default:
          ascent = null;
          descent = null;
      }
      fragment.setMetrics$5$ascent$descent$widthExcludingTrailingSpaces$widthIncludingTrailingSpaces(_this.spanometer, ascent, descent, fragment.get$widthExcludingTrailingSpaces(), fragment.get$widthIncludingTrailingSpaces());
    },
    _recalculateMetrics$0() {
      var t1, t2, t3, _this = this,
        i = _this._breakCount = _this._trailingSpaces = _this._spaceCount = _this.descent = _this.ascent = _this.widthIncludingSpace = _this.width = 0;
      _this._lastBreakableFragment = -1;
      t1 = _this._fragments;
      t2 = J.getInterceptor$asx(t1);
      while (true) {
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i < t3))
          break;
        _this._updateMetrics$1(t2.$index(t1, i));
        if (B.boolConversionCheck(t2.$index(t1, i).get$isBreak()))
          _this._lastBreakableFragment = i;
        ++i;
      }
    },
    forceBreakLastFragment$2$allowEmptyLine$availableWidth(allowEmptyLine, availableWidth) {
      var t1, t2, t3, allowLastFragmentToBeEmpty, lastFragment, t4, t5, t6, t7, forceBreakEnd, breakingPoint, split, first, second, _this = this;
      B._asDoubleQ(availableWidth);
      B._asBool(allowEmptyLine);
      if (availableWidth == null)
        availableWidth = _this.maxWidth;
      if (_this._fragmentsForNextLine == null)
        _this.set$_fragmentsForNextLine(B._setArrayType([], type$.JSArray_LayoutFragment));
      t1 = _this._fragments;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.get$length(t1);
      if (typeof t3 !== "number")
        return t3.$gt();
      allowLastFragmentToBeEmpty = t3 > 1 || allowEmptyLine;
      lastFragment = t2.get$last(t1);
      if (B.boolConversionCheck(lastFragment.get$isPlaceholder())) {
        if (allowLastFragmentToBeEmpty) {
          t3 = _this._fragmentsForNextLine;
          t3.toString;
          J.insert$2$ax(t3, 0, t2.removeLast$0(t1));
          _this._recalculateMetrics$0();
        }
        return;
      }
      t3 = _this.spanometer;
      t3.set$currentSpan(lastFragment.span);
      t4 = _this.widthIncludingSpace;
      t5 = lastFragment.get$widthIncludingTrailingSpaces();
      if (typeof t4 !== "number")
        return t4.$sub();
      if (typeof t5 !== "number")
        return B.iae(t5);
      if (typeof availableWidth !== "number")
        return availableWidth.$sub();
      t6 = lastFragment.end;
      t7 = lastFragment.trailingNewlines;
      if (typeof t6 !== "number")
        return t6.$sub();
      if (typeof t7 !== "number")
        return B.iae(t7);
      forceBreakEnd = t6 - t7;
      breakingPoint = t3.forceBreak$4$allowEmpty$availableWidth(lastFragment.start, forceBreakEnd, allowLastFragmentToBeEmpty, availableWidth - (t4 - t5));
      if (breakingPoint === forceBreakEnd)
        return;
      t2.removeLast$0(t1);
      _this._recalculateMetrics$0();
      split = lastFragment.split$1(0, breakingPoint);
      t1 = J.getInterceptor$ax(split);
      first = t1.get$first(split);
      if (first != null) {
        t3.measureFragment$1(first);
        _this.addFragment$1(first);
      }
      second = t1.get$last(split);
      if (second != null) {
        t3.measureFragment$1(second);
        t1 = _this._fragmentsForNextLine;
        t1.toString;
        J.insert$2$ax(t1, 0, second);
      }
    },
    forceBreakLastFragment$0() {
      return this.forceBreakLastFragment$2$allowEmptyLine$availableWidth(false, null);
    },
    insertEllipsis$0() {
      var t2, t3, t4, ellipsisWidth, t5, availableWidth, t6, lastFragment, ellipsisFragment, _this = this,
        t1 = _this.paragraph.paragraphStyle.ellipsis;
      t1.toString;
      _this.set$_fragmentsForNextLine(B._setArrayType([], type$.JSArray_LayoutFragment));
      t2 = _this.spanometer;
      t3 = _this._fragments;
      t4 = J.getInterceptor$ax(t3);
      t2.set$currentSpan(t4.get$last(t3).span);
      ellipsisWidth = t2.measureText$1(t1);
      t5 = _this.maxWidth;
      if (typeof t5 !== "number")
        return t5.$sub();
      availableWidth = A.max(0, t5 - ellipsisWidth, type$.double);
      while (true) {
        t6 = _this.get$_widthExcludingLastFragment();
        if (typeof t6 !== "number")
          return t6.$gt();
        if (!(t6 > availableWidth))
          break;
        t6 = _this._fragmentsForNextLine;
        t6.toString;
        J.insert$2$ax(t6, 0, t4.removeLast$0(t3));
        _this._recalculateMetrics$0();
        t2.set$currentSpan(t4.get$last(t3).span);
        ellipsisWidth = t2.measureText$1(t1);
        availableWidth = t5 - ellipsisWidth;
      }
      lastFragment = t4.get$last(t3);
      _this.forceBreakLastFragment$2$allowEmptyLine$availableWidth(true, availableWidth);
      ellipsisFragment = A.EllipsisFragment$(_this.get$endIndex(), lastFragment.span);
      ellipsisFragment.setMetrics$5$ascent$descent$widthExcludingTrailingSpaces$widthIncludingTrailingSpaces(t2, lastFragment.get$ascent(), lastFragment.get$descent(), ellipsisWidth, ellipsisWidth);
      _this.addFragment$1(ellipsisFragment);
    },
    revertToLastBreakOpportunity$0() {
      var i,
        t1 = this._fragments,
        t2 = J.getInterceptor$asx(t1),
        t3 = t2.get$length(t1);
      if (typeof t3 !== "number")
        return t3.$sub();
      i = t3 - 2;
      for (; !B.boolConversionCheck(t2.$index(t1, i).get$isBreak());)
        --i;
      t3 = i + 1;
      this.set$_fragmentsForNextLine(J.toList$0$ax(t2.getRange$2(t1, t3, t2.get$length(t1))));
      t2.removeRange$2(t1, t3, t2.get$length(t1));
      this._recalculateMetrics$0();
    },
    appendZeroWidthFragments$2$startFrom(fragments, startFrom) {
      var t1, i, t2;
      type$.List_LayoutFragment._as(fragments);
      B._asInt(startFrom);
      t1 = J.getInterceptor$asx(fragments);
      i = startFrom;
      while (true) {
        if (B.boolConversionCheck(this.get$_canAppendEmptyFragments())) {
          t2 = t1.get$length(fragments);
          if (typeof t2 !== "number")
            return B.iae(t2);
          t2 = i < t2 && B.boolConversionCheck(J.$eq$(t1.$index(fragments, i).get$widthExcludingTrailingSpaces(), 0));
        } else
          t2 = false;
        if (!t2)
          break;
        this.addFragment$1(t1.$index(fragments, i));
        ++i;
      }
      return i - startFrom;
    },
    build$0() {
      var t1, t2, t3, trailingNewlines, t4, t5, t6, t7, t8, t9, t10, t11, t12, line, _this = this;
      if (_this._fragmentsForNextLine == null) {
        t1 = _this._fragments;
        t2 = _this._lastBreakableFragment;
        if (typeof t2 !== "number")
          return t2.$add();
        t3 = J.getInterceptor$asx(t1);
        _this.set$_fragmentsForNextLine(J.toList$0$ax(t3.getRange$2(t1, t2 + 1, t3.get$length(t1))));
        t2 = _this._lastBreakableFragment;
        if (typeof t2 !== "number")
          return t2.$add();
        t3.removeRange$2(t1, t2 + 1, t3.get$length(t1));
      }
      trailingNewlines = B.boolConversionCheck(_this.get$isEmpty(0)) ? 0 : J.get$last$ax(_this._fragments).trailingNewlines;
      t1 = _this.get$startIndex();
      t2 = _this.get$endIndex();
      t3 = _this._trailingSpaces;
      t4 = _this._spaceCount;
      t5 = _this.get$isHardBreak();
      t6 = _this.width;
      t7 = _this.widthIncludingSpace;
      t8 = _this.get$alignOffset();
      t9 = _this.get$height();
      t10 = _this.accumulatedHeight;
      t11 = _this.ascent;
      if (typeof t10 !== "number")
        return t10.$add();
      if (typeof t11 !== "number")
        return B.iae(t11);
      t12 = _this._fragments;
      line = A.ParagraphLine$(t11, t10 + t11, _this.descent, t2, t12, t5, t9, t8, _this.lineNumber, _this.paragraph, t4, t1, _this.get$_paragraphDirection(), trailingNewlines, t3, t6, t7);
      for (t1 = J.get$iterator$ax(t12); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().set$line(line);
      return line;
    },
    nextLine$0() {
      var t2, t3, t4, _this = this,
        t1 = _this.lineNumber;
      if (typeof t1 !== "number")
        return t1.$add();
      t2 = _this.accumulatedHeight;
      t3 = _this.get$height();
      if (typeof t2 !== "number")
        return t2.$add();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t4 = _this._fragmentsForNextLine;
      if (t4 == null)
        t4 = B._setArrayType([], type$.JSArray_LayoutFragment);
      return A.LineBuilder$_(_this.paragraph, _this.spanometer, t2 + t3, t4, t1 + 1, _this.maxWidth);
    },
    set$_fragmentsForNextLine(_fragmentsForNextLine) {
      this._fragmentsForNextLine = type$.nullable_List_LayoutFragment._as(_fragmentsForNextLine);
    },
    set$ascent(ascent) {
      this.ascent = B._asDouble(ascent);
    },
    set$descent(descent) {
      this.descent = B._asDouble(descent);
    },
    set$_lastBreakableFragment(_lastBreakableFragment) {
      this._lastBreakableFragment = B._asInt(_lastBreakableFragment);
    },
    set$_breakCount(_breakCount) {
      this._breakCount = B._asInt(_breakCount);
    },
    set$_spaceCount(_spaceCount) {
      this._spaceCount = B._asInt(_spaceCount);
    },
    set$_trailingSpaces(_trailingSpaces) {
      this._trailingSpaces = B._asInt(_trailingSpaces);
    }
  };
  A.Spanometer.prototype = {
    get$letterSpacing() {
      return this.get$currentSpan().style.letterSpacing;
    },
    get$currentSpan() {
      var t1 = this._currentSpan;
      t1.toString;
      return t1;
    },
    set$currentSpan(span) {
      var t1, newCssFontString, t2, heightStyle, ruler, _this = this;
      type$.nullable_ParagraphSpan._as(span);
      t1 = span == null;
      if (!t1) {
        newCssFontString = span.style.get$cssFontString();
        if (!B.boolConversionCheck(J.$eq$($._lastContextFont, newCssFontString))) {
          $._lastContextFont = newCssFontString;
          A.DomCanvasRenderingContext2DExtension_set_font($.$get$textContext(), newCssFontString);
        }
      }
      t2 = _this._currentSpan;
      if (span == null ? t2 == null : span === t2)
        return;
      _this._currentSpan = span;
      if (t1) {
        _this._currentRuler = null;
        return;
      }
      heightStyle = span.style.get$heightStyle();
      t1 = J.getInterceptor$asx($.Spanometer__rulers);
      ruler = t1.$index($.Spanometer__rulers, heightStyle);
      if (ruler == null) {
        ruler = A.TextHeightRuler$(heightStyle, $.$get$Spanometer__rulerHost());
        t1.$indexSet($.Spanometer__rulers, heightStyle, ruler);
      }
      _this._currentRuler = ruler;
    },
    get$ascent() {
      return this._currentRuler.get$alphabeticBaseline();
    },
    get$descent() {
      var t1 = this.get$height(),
        t2 = this.get$ascent();
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 - t2;
    },
    get$height() {
      return this._currentRuler.get$height();
    },
    measureText$1(text) {
      B._asString(text);
      return A.measureSubstring($.$get$textContext(), text, 0, text.length, null);
    },
    measureRange$2(start, end) {
      return this._measure$2(B._asInt(start), B._asInt(end));
    },
    measureFragment$1(fragment) {
      var t1, t2, t3, widthExcludingTrailingSpaces, widthIncludingTrailingSpaces, _this = this;
      type$.LayoutFragment._as(fragment);
      t1 = fragment.span;
      if (B.boolConversionCheck(fragment.get$isPlaceholder())) {
        type$.PlaceholderSpan._as(t1);
        fragment.setMetrics$5$ascent$descent$widthExcludingTrailingSpaces$widthIncludingTrailingSpaces(_this, t1.get$height(), 0, t1.get$width(), t1.get$width());
      } else {
        _this.set$currentSpan(t1);
        t1 = fragment.start;
        t2 = fragment.end;
        t3 = fragment.trailingSpaces;
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t3 !== "number")
          return B.iae(t3);
        widthExcludingTrailingSpaces = _this._measure$2(t1, t2 - t3);
        t3 = fragment.trailingNewlines;
        if (typeof t3 !== "number")
          return B.iae(t3);
        widthIncludingTrailingSpaces = _this._measure$2(t1, t2 - t3);
        fragment.setMetrics$5$ascent$descent$widthExcludingTrailingSpaces$widthIncludingTrailingSpaces(_this, _this.get$ascent(), _this.get$descent(), widthExcludingTrailingSpaces, widthIncludingTrailingSpaces);
      }
    },
    forceBreak$4$allowEmpty$availableWidth(start, end, allowEmpty, availableWidth) {
      var high, low, mid, width;
      B._asInt(start);
      B._asInt(end);
      B._asDouble(availableWidth);
      B._asBool(allowEmpty);
      if (availableWidth <= 0)
        return allowEmpty ? start : start + 1;
      for (high = end, low = start; high - low > 1;) {
        mid = D.JSInt_methods._tdivFast$1(low + high, 2);
        width = this._measure$2(start, mid);
        if (width < availableWidth)
          low = mid;
        else {
          low = width > availableWidth ? low : mid;
          high = mid;
        }
      }
      return low === start && !allowEmpty ? low + 1 : low;
    },
    _measure$2(start, end) {
      B._asInt(start);
      B._asInt(end);
      return A.measureSubstring($.$get$textContext(), this.paragraph.plainText, start, end, this.get$letterSpacing());
    }
  };
  A.LineBreakType.prototype = {
    _enumToString$0() {
      return "LineBreakType." + B.S(this._core$_name);
    }
  };
  A.FWLineBreakFragmenter.prototype = {
    fragment$0() {
      return A._computeLineBreakFragments(this.text);
    },
    $isLineBreakFragmenter: 1
  };
  A.V8LineBreakFragmenter.prototype = {
    fragment$0() {
      var t1 = this.text;
      return A.breakLinesUsingV8BreakIterator(t1, B.StringToJSString_get_toJS(t1), this._v8BreakIterator);
    },
    $isLineBreakFragmenter: 1
  };
  A.LineBreakFragment.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.start, _this.end, _this.type, _this.trailingNewlines, _this.trailingSpaces, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A.LineBreakFragment && B.boolConversionCheck(J.$eq$(other.start, _this.start)) && B.boolConversionCheck(J.$eq$(other.end, _this.end)) && B.boolConversionCheck(J.$eq$(other.type, _this.type)) && B.boolConversionCheck(J.$eq$(other.trailingNewlines, _this.trailingNewlines)) && B.boolConversionCheck(J.$eq$(other.trailingSpaces, _this.trailingSpaces));
    },
    toString$0(_) {
      return "LineBreakFragment(" + B.S(this.start) + ", " + B.S(this.end) + ", " + B.S(this.type) + ")";
    }
  };
  A.RulerHost.prototype = {
    RulerHost$0() {
      var t1 = this._rulerHost,
        t2 = type$.JavaScriptObject,
        t3 = B.getProperty(t1, "style", t2);
      A.DomCSSStyleDeclarationExtension_set_position(t3, "fixed");
      A.DomCSSStyleDeclarationExtension_set_visibility(t3, "hidden");
      A.DomCSSStyleDeclarationExtension_set_overflow(t3, "hidden");
      A.DomCSSStyleDeclarationExtension_set_top(t3, "0");
      A.DomCSSStyleDeclarationExtension_set_left(t3, "0");
      A.DomCSSStyleDeclarationExtension_set_width(t3, "0");
      A.DomCSSStyleDeclarationExtension_set_height(t3, "0");
      B._callMethodUnchecked1(A.EnginePlatformDispatcher_instance().get$implicitView().get$dom().renderingHost, "appendChild", t1, t2);
      A.registerHotRestartListener(this.get$dispose());
    },
    dispose$0() {
      B._callMethodUnchecked0(this._rulerHost, "remove", type$.void);
    },
    addElement$1(element) {
      B._callMethodUnchecked1(this._rulerHost, "append", type$.JavaScriptObject._as(element), type$.void);
    }
  };
  A.TextPaintService.prototype = {
    paint$2(canvas, offset) {
      var t1, t2, t3, t4;
      type$.BitmapCanvas._as(canvas);
      type$.Offset._as(offset);
      for (t1 = J.get$iterator$ax(this.paragraph.get$lines()); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        for (t3 = J.get$iterator$ax(t2.fragments); B.boolConversionCheck(t3.moveNext$0());) {
          t4 = t3.get$current();
          this._paintBackground$3(canvas, offset, t4);
          this._paintText$4(canvas, offset, t2, t4);
        }
      }
    },
    _paintBackground$3(canvas, offset, fragment) {
      var background, rect;
      type$.BitmapCanvas._as(canvas);
      type$.Offset._as(offset);
      type$.LayoutFragment._as(fragment);
      if (B.boolConversionCheck(fragment.get$isPlaceholder()))
        return;
      background = type$.nullable_SurfacePaint._as(fragment.get$style().background);
      if (background != null) {
        rect = fragment.toPaintingTextBox$0().toRect$0();
        if (!B.boolConversionCheck(rect.get$isEmpty(0)))
          canvas.drawRect$2(rect.shift$1(offset), background.get$paintData());
      }
    },
    _paintText$4(canvas, offset, line, fragment) {
      var t1, fragmentX, t2, t3, t4, style, text, t5;
      type$.BitmapCanvas._as(canvas);
      type$.Offset._as(offset);
      type$.ParagraphLine._as(line);
      type$.LayoutFragment._as(fragment);
      if (B.boolConversionCheck(fragment.get$isPlaceholder()))
        return;
      if (B.boolConversionCheck(fragment.get$isSpaceOnly()))
        return;
      this._prepareCanvasForFragment$2(canvas, fragment);
      t1 = fragment.get$textDirection();
      t1.toString;
      fragmentX = B.boolConversionCheck(J.$eq$(t1, C.TextDirection_1)) ? fragment.get$left() : fragment.get$right();
      t1 = offset.get$dx();
      t2 = line.get$left();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = offset.get$dy();
      t4 = line.get$baseline();
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      style = fragment.get$style();
      text = fragment.getText$1(this.paragraph);
      t5 = style.foreground;
      t5 = t5 == null ? null : t5.get$style();
      canvas.drawText$5$shadows$style(text, t1 + t2 + fragmentX, t3 + t4, style.shadows, t5);
      canvas.tearDownPaint$0();
    },
    _prepareCanvasForFragment$2(canvas, fragment) {
      var style, foreground, t1, paint, t2;
      type$.BitmapCanvas._as(canvas);
      type$.LayoutFragment._as(fragment);
      style = fragment.get$style();
      foreground = style.foreground;
      t1 = type$.SurfacePaint;
      if (foreground != null) {
        t1._as(foreground);
        paint = foreground;
      } else {
        paint = t1._as(A.Paint_Paint());
        t1 = style.color;
        if (t1 != null)
          paint.set$color(t1);
      }
      t1 = style.get$cssFontString();
      t2 = fragment.get$textDirection();
      t2.toString;
      canvas.setCssFont$2(t1, t2);
      canvas.setUpPaint$2(paint.get$paintData(), null);
    }
  };
  A.EngineLineMetrics.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.hardBreak, _this.ascent, _this.descent, _this.unscaledAscent, _this.height, _this.width, _this.left, _this.baseline, _this.lineNumber, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.EngineLineMetrics && B.boolConversionCheck(J.$eq$(other.hardBreak, _this.hardBreak)) && B.boolConversionCheck(J.$eq$(other.ascent, _this.ascent)) && B.boolConversionCheck(J.$eq$(other.descent, _this.descent)) && B.boolConversionCheck(J.$eq$(other.unscaledAscent, _this.unscaledAscent)) && B.boolConversionCheck(J.$eq$(other.height, _this.height)) && B.boolConversionCheck(J.$eq$(other.width, _this.width)) && B.boolConversionCheck(J.$eq$(other.left, _this.left)) && B.boolConversionCheck(J.$eq$(other.baseline, _this.baseline)) && B.boolConversionCheck(J.$eq$(other.lineNumber, _this.lineNumber));
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    },
    $isLineMetrics: 1,
    get$hardBreak() {
      return this.hardBreak;
    },
    get$ascent() {
      return this.ascent;
    },
    get$descent() {
      return this.descent;
    },
    get$unscaledAscent() {
      return this.unscaledAscent;
    },
    get$height() {
      return this.height;
    },
    get$width() {
      return this.width;
    },
    get$left() {
      return this.left;
    },
    get$baseline() {
      return this.baseline;
    },
    get$lineNumber() {
      return this.lineNumber;
    }
  };
  A.ParagraphLine.prototype = {
    get$visibleEndIndex() {
      var _0_0, t1, _0_1, t2, rest, _0_6, t3, _this = this, _null = null,
        value = _this.__ParagraphLine_visibleEndIndex_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        _0_0 = _this.fragments;
        $label0$0: {
          t1 = J.getInterceptor$asx(_0_0);
          _0_1 = t1.get$length(_0_0);
          t2 = _0_1;
          if (typeof t2 !== "number")
            return t2.$le();
          if (t2 <= 0) {
            t1 = _this.startIndex;
            break $label0$0;
          }
          if (typeof _0_1 !== "number")
            return _0_1.$ge();
          rest = _null;
          t2 = false;
          if (_0_1 >= 1) {
            _0_6 = t1.sublist$2(_0_0, 0, _0_1 - 1);
            t3 = _0_6;
            if (type$.List_LayoutFragment._is(t3)) {
              t1 = t1.$index(_0_0, _0_1 - 1) instanceof A.EllipsisFragment;
              rest = _0_6;
            } else
              t1 = t2;
          } else
            t1 = t2;
          if (!t1) {
            t1 = type$.List_LayoutFragment._is(_0_0);
            if (t1)
              rest = _0_0;
          } else
            t1 = true;
          if (t1) {
            t1 = J.get$last$ax(rest).end;
            break $label0$0;
          }
          t1 = _null;
        }
        _this.__ParagraphLine_visibleEndIndex_FI !== $ && B.throwLateFieldADI("visibleEndIndex");
        value = _this.__ParagraphLine_visibleEndIndex_FI = t1;
      }
      return value;
    },
    get$nonTrailingSpaces() {
      var t1 = this.spaceCount,
        t2 = this.trailingSpaces;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 - t2;
    },
    get$height() {
      return this.lineMetrics.height;
    },
    get$width() {
      return this.lineMetrics.width;
    },
    get$left() {
      return this.lineMetrics.left;
    },
    get$baseline() {
      return this.lineMetrics.baseline;
    },
    overlapsWith$2(startIndex, endIndex) {
      var t1;
      B._asInt(startIndex);
      B._asInt(endIndex);
      t1 = this.endIndex;
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (startIndex < t1) {
        t1 = this.startIndex;
        if (typeof t1 !== "number")
          return t1.$lt();
        t1 = t1 < endIndex;
      } else
        t1 = false;
      return t1;
    },
    _fallbackGraphemeStartIterable$1(lineText) {
      var graphemeStarts, t1, t2, precededByHighSurrogate, i, maskedCodeUnit;
      B._asString(lineText);
      graphemeStarts = B._setArrayType([], type$.JSArray_int);
      for (t1 = lineText.length, t2 = this.startIndex, precededByHighSurrogate = false, i = 0; i < t1; ++i) {
        maskedCodeUnit = lineText.charCodeAt(i) & 64512;
        if (maskedCodeUnit !== 56320 || !precededByHighSurrogate) {
          if (typeof t2 !== "number")
            return t2.$add();
          D.JSArray_methods.add$1(graphemeStarts, t2 + i);
        }
        precededByHighSurrogate = maskedCodeUnit === 55296;
      }
      return graphemeStarts;
    },
    _fromDomSegmenter$1(fragmentText) {
      var domSegmenter, graphemeStarts, segments, t1, t2;
      B._asString(fragmentText);
      domSegmenter = A.createIntlSegmenter("grapheme");
      graphemeStarts = B._setArrayType([], type$.JSArray_int);
      segments = A.DomSegmentsExtension_iterator(A.DomSegmenterExtension_segment(domSegmenter, fragmentText));
      for (t1 = this.startIndex; B.boolConversionCheck(segments.moveNext$0());) {
        t2 = A.DomSegmentExtension_get_index(segments.get$current());
        if (typeof t2 !== "number")
          return t2.$add();
        if (typeof t1 !== "number")
          return B.iae(t1);
        D.JSArray_methods.add$1(graphemeStarts, t2 + t1);
      }
      return graphemeStarts;
    },
    _breakTextIntoGraphemes$1(text) {
      var graphemeStarts, t1;
      B._asString(text);
      graphemeStarts = B.getProperty(self.Intl, "Segmenter", type$.nullable_Object) == null ? this._fallbackGraphemeStartIterable$1(text) : this._fromDomSegmenter$1(text);
      t1 = J.getInterceptor$asx(graphemeStarts);
      if (B.boolConversionCheck(t1.get$isNotEmpty(graphemeStarts)))
        t1.add$1(graphemeStarts, this.get$visibleEndIndex());
      return graphemeStarts;
    },
    get$graphemeStarts() {
      var t1, result, _this = this,
        value = _this.__ParagraphLine_graphemeStarts_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        t1 = _this.startIndex;
        result = B.boolConversionCheck(J.$eq$(_this.get$visibleEndIndex(), t1)) ? C.List_empty0 : _this._breakTextIntoGraphemes$1(J.substring$2$s(_this.paragraph.plainText, t1, _this.get$visibleEndIndex()));
        _this.__ParagraphLine_graphemeStarts_FI !== $ && B.throwLateFieldADI("graphemeStarts");
        _this.set$__ParagraphLine_graphemeStarts_FI(result);
        value = result;
      }
      return value;
    },
    graphemeStartIndexBefore$3(offset, start, end) {
      var lineGraphemeBreaks, t1, high, low, mid, t2, _0_0;
      B._asInt(offset);
      B._asInt(start);
      B._asInt(end);
      lineGraphemeBreaks = this.get$graphemeStarts();
      for (t1 = J.getInterceptor$asx(lineGraphemeBreaks), high = end, low = start; low + 2 <= high;) {
        mid = D.JSInt_methods._tdivFast$1(low + high, 2);
        t2 = t1.$index(lineGraphemeBreaks, mid);
        if (typeof t2 !== "number")
          return t2.$sub();
        _0_0 = t2 - offset;
        if (_0_0 > 0) {
          high = mid;
          continue;
        }
        if (_0_0 < 0) {
          low = mid;
          continue;
        }
        return mid;
      }
      return low;
    },
    getCharacterRangeAt$1(codeUnitOffset) {
      var t1, startIndex, _this = this;
      B._asInt(codeUnitOffset);
      t1 = _this.get$visibleEndIndex();
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (codeUnitOffset >= t1 || B.boolConversionCheck(J.get$isEmpty$asx(_this.get$graphemeStarts())))
        return null;
      startIndex = _this.graphemeStartIndexBefore$3(codeUnitOffset, 0, J.get$length$asx(_this.get$graphemeStarts()));
      t1 = J.$index$asx(_this.get$graphemeStarts(), startIndex);
      return A.TextRange$(J.$index$asx(_this.get$graphemeStarts(), startIndex + 1), t1);
    },
    closestFragmentTo$2(targetFragment, searchLeft) {
      var t1, closestFragment, t2, t3, t4, distance, minDistance;
      type$.LayoutFragment._as(targetFragment);
      B._asBool(searchLeft);
      for (t1 = J.get$iterator$ax(this.fragments), closestFragment = null; B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        t3 = t2.start;
        t4 = this.get$visibleEndIndex();
        if (typeof t3 !== "number")
          return t3.$ge();
        if (typeof t4 !== "number")
          return B.iae(t4);
        if (t3 >= t4)
          break;
        if (t2.get$graphemeStartIndexRange() == null)
          continue;
        if (searchLeft) {
          t3 = targetFragment.get$left();
          t4 = t2.get$right();
          if (typeof t3 !== "number")
            return t3.$sub();
          if (typeof t4 !== "number")
            return B.iae(t4);
          distance = t3 - t4;
        } else {
          t3 = t2.get$left();
          t4 = targetFragment.get$right();
          if (typeof t3 !== "number")
            return t3.$sub();
          if (typeof t4 !== "number")
            return B.iae(t4);
          distance = t3 - t4;
        }
        minDistance = closestFragment == null ? null : closestFragment._0;
        $label0$1: {
          if (distance > 0)
            t3 = minDistance == null || minDistance > distance;
          else
            t3 = false;
          if (t3) {
            closestFragment = new B._Record_2_distance_fragment(distance, t2);
            break $label0$1;
          }
          if (distance === 0)
            return t2;
          continue;
        }
      }
      return closestFragment == null ? null : closestFragment._1;
    },
    closestFragmentAtOffset$1(dx) {
      var t1, closestFragment, graphemeIndex, t2, t3, t4, firstGraphemeStartInFragment, distance, minDistance, _this = this, _null = null;
      B._asDouble(dx);
      if (B.boolConversionCheck(J.get$isEmpty$asx(_this.get$graphemeStarts())))
        return _null;
      for (t1 = J.get$iterator$ax(_this.fragments), closestFragment = _null, graphemeIndex = 0; B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        t3 = t2.start;
        t4 = _this.get$visibleEndIndex();
        if (typeof t3 !== "number")
          return t3.$ge();
        if (typeof t4 !== "number")
          return B.iae(t4);
        if (t3 >= t4)
          break;
        if (B.boolConversionCheck(J.$eq$(t2.get$length(0), 0)))
          continue;
        while (true) {
          t4 = J.$index$asx(_this.get$graphemeStarts(), graphemeIndex);
          if (typeof t4 !== "number")
            return B.iae(t4);
          if (!(t3 > t4))
            break;
          ++graphemeIndex;
        }
        firstGraphemeStartInFragment = J.$index$asx(_this.get$graphemeStarts(), graphemeIndex);
        t3 = t2.end;
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (firstGraphemeStartInFragment >= t3)
          continue;
        t3 = t2.get$left();
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (dx < t3) {
          t3 = t2.get$left();
          if (typeof t3 !== "number")
            return t3.$sub();
          distance = t3 - dx;
        } else {
          t3 = t2.get$right();
          if (typeof t3 !== "number")
            return B.iae(t3);
          if (dx > t3) {
            t3 = t2.get$right();
            if (typeof t3 !== "number")
              return B.iae(t3);
            distance = dx - t3;
          } else
            return t2;
        }
        minDistance = closestFragment == null ? _null : closestFragment._0;
        if (minDistance == null || minDistance > distance)
          closestFragment = new B._Record_2_distance_fragment(distance, t2);
      }
      return closestFragment == null ? _null : closestFragment._1;
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.lineMetrics, _this.startIndex, _this.endIndex, _this.trailingNewlines, _this.trailingSpaces, _this.spaceCount, _this.widthWithTrailingSpaces, _this.fragments, _this.textDirection, null, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      t1 = false;
      if (other instanceof A.ParagraphLine)
        if (B.boolConversionCheck(J.$eq$(other.lineMetrics, _this.lineMetrics)))
          if (B.boolConversionCheck(J.$eq$(other.startIndex, _this.startIndex)))
            if (B.boolConversionCheck(J.$eq$(other.endIndex, _this.endIndex)))
              if (B.boolConversionCheck(J.$eq$(other.trailingNewlines, _this.trailingNewlines)))
                if (B.boolConversionCheck(J.$eq$(other.trailingSpaces, _this.trailingSpaces)))
                  if (B.boolConversionCheck(J.$eq$(other.spaceCount, _this.spaceCount)))
                    if (B.boolConversionCheck(J.$eq$(other.widthWithTrailingSpaces, _this.widthWithTrailingSpaces)))
                      if (B.boolConversionCheck(J.$eq$(other.fragments, _this.fragments)))
                        t1 = B.boolConversionCheck(J.$eq$(other.textDirection, _this.textDirection));
      return t1;
    },
    toString$0(_) {
      return B.S(C.Type_ParagraphLine_UB7) + "(" + B.S(this.startIndex) + ", " + B.S(this.endIndex) + ", " + B.S(this.lineMetrics) + ")";
    },
    set$__ParagraphLine_graphemeStarts_FI(__ParagraphLine_graphemeStarts_FI) {
      this.__ParagraphLine_graphemeStarts_FI = type$.List_int._as(__ParagraphLine_graphemeStarts_FI);
    }
  };
  A.EngineParagraphStyle.prototype = {
    get$effectiveTextAlign() {
      var t1 = this.textAlign;
      return t1 == null ? C.TextAlign_4 : t1;
    },
    get$effectiveTextDirection() {
      var t1 = this.textDirection;
      return t1 == null ? C.TextDirection_1 : t1;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.EngineParagraphStyle && B.boolConversionCheck(J.$eq$(other.textAlign, _this.textAlign)) && B.boolConversionCheck(J.$eq$(other.textDirection, _this.textDirection)) && B.boolConversionCheck(J.$eq$(other.fontWeight, _this.fontWeight)) && B.boolConversionCheck(J.$eq$(other.fontStyle, _this.fontStyle)) && B.boolConversionCheck(J.$eq$(other.maxLines, _this.maxLines)) && B.boolConversionCheck(J.$eq$(other.fontFamily, _this.fontFamily)) && B.boolConversionCheck(J.$eq$(other.fontSize, _this.fontSize)) && B.boolConversionCheck(J.$eq$(other.height, _this.height)) && B.boolConversionCheck(J.$eq$(other._textHeightBehavior, _this._textHeightBehavior)) && B.boolConversionCheck(J.$eq$(other._strutStyle, _this._strutStyle)) && B.boolConversionCheck(J.$eq$(other.ellipsis, _this.ellipsis)) && B.boolConversionCheck(J.$eq$(other.locale, _this.locale));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.textAlign, _this.textDirection, _this.fontWeight, _this.fontStyle, _this.maxLines, _this.fontFamily, _this.fontSize, _this.height, _this._textHeightBehavior, _this._strutStyle, _this.ellipsis, _this.locale, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    },
    $isParagraphStyle: 1
  };
  A.EngineTextStyle.prototype = {
    get$effectiveFontFamily() {
      var fontFamily = this.fontFamily;
      return B.boolConversionCheck(J.get$isEmpty$asx(fontFamily)) ? "sans-serif" : fontFamily;
    },
    get$cssFontString() {
      var _this = this,
        t1 = _this._cssFontString;
      if (t1 == null) {
        t1 = A.buildCssFontString(_this.get$effectiveFontFamily(), _this.fontSize, _this.fontStyle, _this.fontWeight);
        _this.set$_cssFontString(t1);
      }
      return t1;
    },
    get$heightStyle() {
      var result, _this = this,
        value = _this.__EngineTextStyle_heightStyle_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = _this._createHeightStyle$0();
        _this.__EngineTextStyle_heightStyle_FI !== $ && B.throwLateFieldADI("heightStyle");
        _this.__EngineTextStyle_heightStyle_FI = result;
        value = result;
      }
      return value;
    },
    _createHeightStyle$0() {
      var t1 = this.get$effectiveFontFamily(),
        t2 = this.fontSize;
      if (t2 == null)
        t2 = 14;
      return A.TextHeightStyle$(t1, null, t2, null, this.height);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      return other instanceof A.EngineTextStyle && B.boolConversionCheck(J.$eq$(other.color, _this.color)) && B.boolConversionCheck(J.$eq$(other.decoration, _this.decoration)) && B.boolConversionCheck(J.$eq$(other.decorationColor, _this.decorationColor)) && B.boolConversionCheck(J.$eq$(other.decorationStyle, _this.decorationStyle)) && B.boolConversionCheck(J.$eq$(other.fontWeight, _this.fontWeight)) && B.boolConversionCheck(J.$eq$(other.fontStyle, _this.fontStyle)) && B.boolConversionCheck(J.$eq$(other.textBaseline, _this.textBaseline)) && B.boolConversionCheck(J.$eq$(other.leadingDistribution, _this.leadingDistribution)) && B.boolConversionCheck(J.$eq$(other.fontFamily, _this.fontFamily)) && B.boolConversionCheck(J.$eq$(other.fontSize, _this.fontSize)) && B.boolConversionCheck(J.$eq$(other.letterSpacing, _this.letterSpacing)) && B.boolConversionCheck(J.$eq$(other.wordSpacing, _this.wordSpacing)) && B.boolConversionCheck(J.$eq$(other.height, _this.height)) && B.boolConversionCheck(J.$eq$(other.decorationThickness, _this.decorationThickness)) && B.boolConversionCheck(J.$eq$(other.locale, _this.locale)) && B.boolConversionCheck(J.$eq$(other.background, _this.background)) && B.boolConversionCheck(J.$eq$(other.foreground, _this.foreground)) && B.boolConversionCheck(A.listEquals0(other.shadows, _this.shadows, type$.Shadow)) && B.boolConversionCheck(A.listEquals0(other.fontFamilyFallback, _this.fontFamilyFallback, type$.String)) && B.boolConversionCheck(A.listEquals0(other.fontFeatures, _this.fontFeatures, type$.FontFeature)) && B.boolConversionCheck(A.listEquals0(other.fontVariations, _this.fontVariations, type$.FontVariation));
    },
    get$hashCode(_) {
      var _this = this, _null = null,
        shadows = _this.shadows,
        fontFeatures = _this.fontFeatures,
        fontVariations = _this.fontVariations,
        fontFamilyFallback = _this.fontFamilyFallback,
        t1 = fontFamilyFallback == null ? _null : B.Object_hashAll(fontFamilyFallback),
        t2 = shadows == null ? _null : B.Object_hashAll(shadows),
        t3 = fontFeatures == null ? _null : B.Object_hashAll(fontFeatures);
      return B.Object_hash(_this.color, _this.decoration, _this.decorationColor, _this.decorationStyle, _this.fontWeight, _this.fontStyle, _this.textBaseline, _this.leadingDistribution, _this.fontFamily, t1, _this.fontSize, _this.letterSpacing, _this.wordSpacing, _this.height, _this.locale, _this.background, _this.foreground, t2, _this.decorationThickness, B.Object_hash(t3, fontVariations == null ? _null : B.Object_hashAll(fontVariations), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue));
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    },
    set$_cssFontString(_cssFontString) {
      this._cssFontString = B._asStringQ(_cssFontString);
    },
    $isTextStyle0: 1
  };
  A.TextHeightStyle.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof A.TextHeightStyle && B.boolConversionCheck(J.$eq$(other.get$hashCode(0), this.get$hashCode(0)));
    },
    get$hashCode(_) {
      var t1, t2, result, _this = this,
        value = _this.__TextHeightStyle_hashCode_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        t1 = _this.fontFeatures;
        t1 = t1 == null ? null : B.Object_hashAll(t1);
        t2 = _this.fontVariations;
        t2 = t2 == null ? null : B.Object_hashAll(t2);
        result = B.Object_hash(_this.fontFamily, _this.fontSize, _this.height, t1, t2, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
        value !== $ && B.throwLateFieldADI("hashCode");
        _this.__TextHeightStyle_hashCode_FI = result;
        value = result;
      }
      return value;
    }
  };
  A.TextDimensions.prototype = {
    _invalidateBoundsCache$0() {
      this._cachedBoundingClientRect = null;
    },
    updateTextToSpace$0() {
      this._invalidateBoundsCache$0();
      A.DomNodeExtension_set_text(this.__engine$_element, " ");
    },
    applyHeightStyle$1(textHeightStyle) {
      var fontFamily, style, t1, height, effectiveLineHeight;
      type$.TextHeightStyle._as(textHeightStyle);
      fontFamily = textHeightStyle.fontFamily;
      style = B.getProperty(this.__engine$_element, "style", type$.JavaScriptObject);
      A.DomCSSStyleDeclarationExtension_set_fontSize(style, B.S(D.JSNumber_methods.floor$0(textHeightStyle.fontSize)) + "px");
      t1 = A.canonicalizeFontFamily(fontFamily);
      t1.toString;
      A.DomCSSStyleDeclarationExtension_set_fontFamily(style, t1);
      height = textHeightStyle.height;
      if (height == null)
        effectiveLineHeight = fontFamily === "FlutterTest" ? 1 : null;
      else
        effectiveLineHeight = height;
      if (effectiveLineHeight != null)
        A.DomCSSStyleDeclarationExtension_set_lineHeight(style, D.JSNumber_methods.toString$0(effectiveLineHeight));
      this._invalidateBoundsCache$0();
    },
    appendToHost$1(hostElement) {
      B._callMethodUnchecked1(type$.JavaScriptObject._as(hostElement), "append", this.__engine$_element, type$.void);
      this._invalidateBoundsCache$0();
    },
    _readAndCacheMetrics$0() {
      var t1 = this._cachedBoundingClientRect;
      if (t1 == null) {
        t1 = B._callMethodUnchecked0(this.__engine$_element, "getBoundingClientRect", type$.JavaScriptObject);
        this.set$_cachedBoundingClientRect(t1);
      }
      return t1;
    },
    get$height() {
      var cachedHeight = A.DomRectReadOnlyExtension_get_height(this._readAndCacheMetrics$0());
      return B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_2)) && !B.boolConversionCheck(A.debugEmulateFlutterTesterEnvironment()) ? cachedHeight + 1 : cachedHeight;
    },
    set$_cachedBoundingClientRect(_cachedBoundingClientRect) {
      this._cachedBoundingClientRect = type$.nullable_JavaScriptObject._as(_cachedBoundingClientRect);
    }
  };
  A.TextHeightRuler.prototype = {
    get$_probe() {
      var result, _this = this,
        value = _this.__TextHeightRuler__probe_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = _this._createProbe$0();
        _this.__TextHeightRuler__probe_FI !== $ && B.throwLateFieldADI("_probe");
        _this.__TextHeightRuler__probe_FI = result;
        value = result;
      }
      return value;
    },
    get$_host() {
      var result, _this = this,
        value = _this.__TextHeightRuler__host_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = _this._createHost$0();
        _this.__TextHeightRuler__host_FI !== $ && B.throwLateFieldADI("_host");
        _this.__TextHeightRuler__host_FI = result;
        value = result;
      }
      return value;
    },
    get$alphabeticBaseline() {
      var result, _this = this,
        value = _this.__TextHeightRuler_alphabeticBaseline_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.DomRectReadOnlyExtension_get_bottom(B._callMethodUnchecked0(_this.get$_probe(), "getBoundingClientRect", type$.JavaScriptObject));
        _this.__TextHeightRuler_alphabeticBaseline_FI !== $ && B.throwLateFieldADI("alphabeticBaseline");
        _this.__TextHeightRuler_alphabeticBaseline_FI = result;
        value = result;
      }
      return value;
    },
    get$height() {
      var result, _this = this,
        value = _this.__TextHeightRuler_height_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = _this._dimensions.get$height();
        _this.__TextHeightRuler_height_FI !== $ && B.throwLateFieldADI("height");
        _this.__TextHeightRuler_height_FI = result;
        value = result;
      }
      return value;
    },
    dispose$0() {
      B._callMethodUnchecked0(this.get$_host(), "remove", type$.void);
    },
    _createHost$0() {
      var host = A.createDomHTMLDivElement(),
        t1 = type$.JavaScriptObject,
        t2 = B.getProperty(host, "style", t1);
      A.DomCSSStyleDeclarationExtension_set_visibility(t2, "hidden");
      A.DomCSSStyleDeclarationExtension_set_position(t2, "absolute");
      A.DomCSSStyleDeclarationExtension_set_top(t2, "0");
      A.DomCSSStyleDeclarationExtension_set_left(t2, "0");
      A.DomCSSStyleDeclarationExtension_set_display(t2, "flex");
      A.DomCSSStyleDeclarationExtension_set_flexDirection(t2, "row");
      A.DomCSSStyleDeclarationExtension_set_alignItems(t2, "baseline");
      A.DomCSSStyleDeclarationExtension_set_margin(t2, "0");
      A.DomCSSStyleDeclarationExtension_set_border(t2, "0");
      A.DomCSSStyleDeclarationExtension_set_padding(t2, "0");
      t2 = this._dimensions;
      t2.applyHeightStyle$1(this.textHeightStyle);
      A.DomCSSStyleDeclarationExtension_set_whiteSpace(B.getProperty(t2.__engine$_element, "style", t1), "pre");
      t2.updateTextToSpace$0();
      t2.appendToHost$1(host);
      this.rulerHost.addElement$1(host);
      return host;
    },
    _createProbe$0() {
      var probe = A.createDomHTMLDivElement();
      B._callMethodUnchecked1(this.get$_host(), "append", probe, type$.void);
      return probe;
    }
  };
  A.FragmentFlow.prototype = {
    _enumToString$0() {
      return "FragmentFlow." + B.S(this._core$_name);
    }
  };
  A.BidiFragmenter.prototype = {
    fragment$0() {
      return A._computeBidiFragments(this.text);
    }
  };
  A.BidiFragment.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.start, _this.end, _this.textDirection, _this.fragmentFlow, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A.BidiFragment && B.boolConversionCheck(J.$eq$(other.start, _this.start)) && B.boolConversionCheck(J.$eq$(other.end, _this.end)) && B.boolConversionCheck(J.$eq$(other.textDirection, _this.textDirection)) && B.boolConversionCheck(J.$eq$(other.fragmentFlow, _this.fragmentFlow));
    },
    toString$0(_) {
      return "BidiFragment(" + B.S(this.start) + ", " + B.S(this.end) + ", " + B.S(this.textDirection) + ")";
    }
  };
  A._ComparisonResult.prototype = {
    _enumToString$0() {
      return "_ComparisonResult." + B.S(this._core$_name);
    }
  };
  A.UnicodeRange.prototype = {
    compare$1(value) {
      var t1;
      B._asInt(value);
      t1 = this.start;
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (value < t1)
        return C._ComparisonResult_2;
      t1 = this.end;
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (value > t1)
        return C._ComparisonResult_1;
      return C._ComparisonResult_0;
    }
  };
  A.UnicodePropertyLookup.prototype = {
    find$2(text, index) {
      var codePoint = A.getCodePoint(B._asString(text), B._asInt(index));
      return codePoint == null ? this.defaultProperty : this.findForChar$1(codePoint);
    },
    findForChar$1(char) {
      var t1, t2, cacheHit, rangeIndex, result, _this = this;
      B._asIntQ(char);
      if (char == null)
        return _this.defaultProperty;
      t1 = _this._cache;
      t2 = J.getInterceptor$asx(t1);
      cacheHit = t2.$index(t1, char);
      if (cacheHit != null)
        return cacheHit;
      rangeIndex = _this._binarySearch$1(char);
      result = rangeIndex === -1 ? _this.defaultProperty : J.$index$asx(_this.ranges, rangeIndex).property;
      t2.$indexSet(t1, char, result);
      return result;
    },
    _binarySearch$1(value) {
      var t1, t2, max, min, mid;
      B._asInt(value);
      t1 = this.ranges;
      t2 = J.getInterceptor$asx(t1);
      max = t2.get$length(t1);
      for (min = 0; min < max;) {
        mid = min + D.JSInt_methods._shrOtherPositive$1(max - min, 1);
        switch (t2.$index(t1, mid).compare$1(value)) {
          case C._ComparisonResult_1:
            min = mid + 1;
            break;
          case C._ComparisonResult_2:
            max = mid;
            break;
          case C._ComparisonResult_0:
            return mid;
        }
      }
      return -1;
    }
  };
  A._FindBreakDirection.prototype = {
    _enumToString$0() {
      return "_FindBreakDirection." + B.S(this._core$_name);
    }
  };
  A.BrowserAutofillHints.prototype = {
    flutterToEngine$1(flutterAutofillHint) {
      var t1;
      B._asString(flutterAutofillHint);
      t1 = J.$index$asx(this._flutterToEngineMap, flutterAutofillHint);
      return t1 == null ? flutterAutofillHint : t1;
    }
  };
  A.CompositionAwareMixin.prototype = {
    get$_compositionStartListener() {
      var result,
        value = this.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.createDomEventListener(this.get$_handleCompositionStart());
        value !== $ && B.throwLateFieldADI("_compositionStartListener");
        this.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = result;
        value = result;
      }
      return value;
    },
    get$_compositionUpdateListener() {
      var result,
        value = this.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.createDomEventListener(this.get$_handleCompositionUpdate());
        value !== $ && B.throwLateFieldADI("_compositionUpdateListener");
        this.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = result;
        value = result;
      }
      return value;
    },
    get$_compositionEndListener() {
      var result,
        value = this.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.createDomEventListener(this.get$_handleCompositionEnd());
        value !== $ && B.throwLateFieldADI("_compositionEndListener");
        this.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = result;
        value = result;
      }
      return value;
    },
    addCompositionEventHandlers$1(domElement) {
      type$.JavaScriptObject._as(domElement);
      A.DomEventTargetExtension_addEventListener(domElement, "compositionstart", this.get$_compositionStartListener(), null);
      A.DomEventTargetExtension_addEventListener(domElement, "compositionupdate", this.get$_compositionUpdateListener(), null);
      A.DomEventTargetExtension_addEventListener(domElement, "compositionend", this.get$_compositionEndListener(), null);
    },
    removeCompositionEventHandlers$1(domElement) {
      type$.JavaScriptObject._as(domElement);
      A.DomEventTargetExtension_removeEventListener(domElement, "compositionstart", this.get$_compositionStartListener(), null);
      A.DomEventTargetExtension_removeEventListener(domElement, "compositionupdate", this.get$_compositionUpdateListener(), null);
      A.DomEventTargetExtension_removeEventListener(domElement, "compositionend", this.get$_compositionEndListener(), null);
    },
    _handleCompositionStart$1($event) {
      type$.JavaScriptObject._as($event);
      this.CompositionAwareMixin_composingText = null;
    },
    _handleCompositionUpdate$1($event) {
      type$.JavaScriptObject._as($event);
      if (B.boolConversionCheck(A.domInstanceOfString($event, "CompositionEvent")))
        this.set$composingText(A.DomCompositionEventExtension_get_data($event));
    },
    _handleCompositionEnd$1($event) {
      type$.JavaScriptObject._as($event);
      this.CompositionAwareMixin_composingText = null;
    },
    determineCompositionState$1(editingState) {
      var t1, t2, composingBase;
      type$.EditingState._as(editingState);
      t1 = editingState.extentOffset;
      if (t1 == null || this.CompositionAwareMixin_composingText == null || editingState.text == null)
        return editingState;
      t1.toString;
      t2 = this.CompositionAwareMixin_composingText;
      t2.toString;
      t2 = J.get$length$asx(t2);
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      composingBase = t1 - t2;
      if (composingBase < 0)
        return editingState;
      t1 = this.CompositionAwareMixin_composingText;
      t1.toString;
      t1 = J.get$length$asx(t1);
      if (typeof t1 !== "number")
        return B.iae(t1);
      return editingState.copyWith$2$composingBaseOffset$composingExtentOffset(composingBase, composingBase + t1);
    },
    set$composingText(composingText) {
      this.CompositionAwareMixin_composingText = B._asStringQ(composingText);
    }
  };
  A.EngineInputAction.prototype = {
    configureInputAction$1(domElement) {
      var t1;
      type$.JavaScriptObject._as(domElement);
      if (this.get$enterkeyhintAttribute() == null)
        return;
      if (B.boolConversionCheck(J.$eq$($.$get$browser().get$operatingSystem(), C.OperatingSystem_0)) || B.boolConversionCheck(J.$eq$($.$get$browser().get$operatingSystem(), C.OperatingSystem_1)) || B.boolConversionCheck(J.$eq$(this.get$enterkeyhintAttribute(), C.C_NoInputAction.get$enterkeyhintAttribute()))) {
        t1 = this.get$enterkeyhintAttribute();
        t1.toString;
        A.DomElementExtension_setAttribute(domElement, "enterkeyhint", t1);
      }
    }
  };
  A.NoInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return null;
    }
  };
  A.EnterInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "enter";
    }
  };
  A.DoneInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "done";
    }
  };
  A.GoInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "go";
    }
  };
  A.NextInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "next";
    }
  };
  A.PreviousInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "previous";
    }
  };
  A.SearchInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "search";
    }
  };
  A.SendInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "send";
    }
  };
  A.EngineInputType.prototype = {
    createDomElement$0() {
      return A.createDomHTMLInputElement();
    },
    configureInputMode$1(domElement) {
      var t1;
      type$.JavaScriptObject._as(domElement);
      if (this.get$inputmodeAttribute() == null)
        return;
      if (B.boolConversionCheck(J.$eq$($.$get$browser().get$operatingSystem(), C.OperatingSystem_0)) || B.boolConversionCheck(J.$eq$($.$get$browser().get$operatingSystem(), C.OperatingSystem_1)) || B.boolConversionCheck(J.$eq$(this.get$inputmodeAttribute(), C.C_NoTextInputType.get$inputmodeAttribute()))) {
        t1 = this.get$inputmodeAttribute();
        t1.toString;
        A.DomElementExtension_setAttribute(domElement, "inputmode", t1);
      }
    }
  };
  A.NoTextInputType.prototype = {
    get$inputmodeAttribute() {
      return "none";
    }
  };
  A.MultilineNoTextInputType.prototype = {
    get$inputmodeAttribute() {
      return "none";
    },
    createDomElement$0() {
      return A.createDomHTMLTextAreaElement();
    }
  };
  A.TextInputType0.prototype = {
    get$inputmodeAttribute() {
      return null;
    }
  };
  A.NumberInputType.prototype = {
    get$inputmodeAttribute() {
      return "numeric";
    }
  };
  A.DecimalInputType.prototype = {
    get$inputmodeAttribute() {
      return "decimal";
    }
  };
  A.PhoneInputType.prototype = {
    get$inputmodeAttribute() {
      return "tel";
    }
  };
  A.EmailInputType.prototype = {
    get$inputmodeAttribute() {
      return "email";
    }
  };
  A.UrlInputType.prototype = {
    get$inputmodeAttribute() {
      return "url";
    }
  };
  A.MultilineInputType.prototype = {
    get$inputmodeAttribute() {
      return null;
    },
    createDomElement$0() {
      return A.createDomHTMLTextAreaElement();
    }
  };
  A.TextCapitalization.prototype = {
    _enumToString$0() {
      return "TextCapitalization." + B.S(this._core$_name);
    }
  };
  A.TextCapitalizationConfig.prototype = {
    setAutocapitalizeAttribute$1(domElement) {
      var autocapitalize,
        _s9_ = "sentences",
        _s14_ = "autocapitalize";
      type$.JavaScriptObject._as(domElement);
      switch (this.textCapitalization) {
        case C.TextCapitalization_0:
          autocapitalize = B.boolConversionCheck(J.$eq$($.$get$browser().get$browserEngine(), C.BrowserEngine_1)) ? _s9_ : "words";
          break;
        case C.TextCapitalization_2:
          autocapitalize = "characters";
          break;
        case C.TextCapitalization_1:
          autocapitalize = _s9_;
          break;
        case C.TextCapitalization_3:
        default:
          autocapitalize = "off";
          break;
      }
      if (B.boolConversionCheck(A.domInstanceOfString(domElement, "HTMLInputElement")))
        A.DomElementExtension_setAttribute(domElement, _s14_, autocapitalize);
      else if (B.boolConversionCheck(A.domInstanceOfString(domElement, "HTMLTextAreaElement")))
        A.DomElementExtension_setAttribute(domElement, _s14_, autocapitalize);
    }
  };
  A.EngineAutofillForm.prototype = {
    placeForm$1(mainTextEditingElement) {
      var t2,
        t1 = type$.JavaScriptObject;
      t1._as(mainTextEditingElement);
      if ($.$get$textEditing().get$strategy() instanceof A.SafariDesktopTextEditingStrategy)
        A.DomCSSStyleDeclarationExtension_set_pointerEvents(B.getProperty(mainTextEditingElement, "style", t1), "all");
      t2 = this.formElement;
      B._callMethodUnchecked2(t2, "insertBefore", mainTextEditingElement, this.insertionReferenceNode, t1);
      A._insertEditingElementInView(t2, this.viewId);
    },
    storeForm$0() {
      var t1 = this.formElement;
      J.$indexSet$ax($.formsOnTheDom, this.formIdentifier, t1);
      A._styleAutofillElements(t1, true, false, true);
    },
    addInputEventListeners$0() {
      var keys = this.elements.get$keys(),
        subscriptions = B._setArrayType([], type$.JSArray_DomSubscription);
      J.forEach$1$ax(keys, new A.EngineAutofillForm_addInputEventListeners_addSubscriptionForKey(this, subscriptions));
      return subscriptions;
    },
    handleChange$2(domElement, autofillInfo) {
      type$.JavaScriptObject._as(domElement);
      this._sendAutofillEditingState$2(type$.AutofillInfo._as(autofillInfo).uniqueIdentifier, A.EditingState_EditingState$fromDomElement(domElement));
    },
    _sendAutofillEditingState$2(tag, editingState) {
      B._asStringQ(tag);
      type$.EditingState._as(editingState);
      A.EnginePlatformDispatcher_instance().invokeOnPlatformMessage$3("flutter/textinput", C.C_JSONMethodCodec.encodeMethodCall$1(A.MethodCall$0("TextInputClient.updateEditingStateWithTag", [0, B.LinkedHashMap_LinkedHashMap$_literal([tag, editingState.toFlutter$0()], type$.nullable_String, type$.dynamic)])), A._engine___emptyCallback$closure());
    }
  };
  A.AutofillInfo.prototype = {
    applyToDomElement$2$focusedElement(domElement, focusedElement) {
      var autofillHint, placeholder, t1,
        _s8_ = "password";
      type$.JavaScriptObject._as(domElement);
      B._asBool(focusedElement);
      autofillHint = this.autofillHint;
      placeholder = this.placeholder;
      if (B.boolConversionCheck(A.domInstanceOfString(domElement, "HTMLInputElement"))) {
        if (placeholder != null)
          A.DomHTMLInputElementExtension_set_placeholder(domElement, placeholder);
        t1 = autofillHint == null;
        if (!t1) {
          A.DomHTMLInputElementExtension_set_name(domElement, autofillHint);
          A.DomElementExtension_set_id(domElement, autofillHint);
          if (B.boolConversionCheck(D.JSString_methods.contains$1(autofillHint, _s8_)))
            A.DomHTMLInputElementExtension_set_type(domElement, _s8_);
          else
            A.DomHTMLInputElementExtension_set_type(domElement, "text");
        }
        A.DomHTMLInputElementExtension_set_autocomplete(domElement, t1 ? "on" : autofillHint);
      } else if (B.boolConversionCheck(A.domInstanceOfString(domElement, "HTMLTextAreaElement"))) {
        if (placeholder != null)
          A.DomHTMLTextAreaElementExtension_set_placeholder(domElement, placeholder);
        t1 = autofillHint == null;
        if (!t1) {
          A.DomHTMLTextAreaElementExtension_set_name(domElement, autofillHint);
          A.DomElementExtension_set_id(domElement, autofillHint);
        }
        A.DomElementExtension_setAttribute(domElement, "autocomplete", t1 ? "on" : autofillHint);
      }
    },
    applyToDomElement$1(domElement) {
      return this.applyToDomElement$2$focusedElement(domElement, false);
    }
  };
  A.TextEditingDeltaState.prototype = {
    toFlutter$0() {
      var _this = this,
        t1 = type$.String,
        t2 = type$.dynamic;
      return B.LinkedHashMap_LinkedHashMap$_literal(["deltas", B._setArrayType([B.LinkedHashMap_LinkedHashMap$_literal(["oldText", _this.oldText, "deltaText", _this.deltaText, "deltaStart", _this.deltaStart, "deltaEnd", _this.deltaEnd, "selectionBase", _this.baseOffset, "selectionExtent", _this.extentOffset, "composingBase", _this.composingOffset, "composingExtent", _this.composingExtent], t1, t2)], type$.JSArray_Map_String_dynamic)], t1, t2);
    },
    copyWith$0() {
      var _this = this,
        t1 = _this.deltaText,
        t2 = _this.deltaStart,
        t3 = _this.deltaEnd,
        t4 = _this.baseOffset,
        t5 = _this.extentOffset,
        t6 = _this.composingOffset,
        t7 = _this.composingExtent;
      return A.TextEditingDeltaState$(t4, t7, t6, t3, t2, t1, t5, _this.oldText);
    },
    set$deltaStart(deltaStart) {
      this.deltaStart = B._asInt(deltaStart);
    },
    set$deltaEnd(deltaEnd) {
      this.deltaEnd = B._asInt(deltaEnd);
    },
    set$baseOffset(baseOffset) {
      this.baseOffset = B._asIntQ(baseOffset);
    },
    set$extentOffset(extentOffset) {
      this.extentOffset = B._asIntQ(extentOffset);
    },
    set$composingOffset(composingOffset) {
      this.composingOffset = B._asIntQ(composingOffset);
    },
    set$composingExtent(composingExtent) {
      this.composingExtent = B._asIntQ(composingExtent);
    }
  };
  A.EditingState.prototype = {
    get$minOffset() {
      var t2,
        t1 = this.baseOffset;
      if (t1 == null)
        t1 = 0;
      t2 = this.extentOffset;
      if (t2 == null)
        t2 = 0;
      return A.min(t1, t2, type$.int);
    },
    get$maxOffset() {
      var t2,
        t1 = this.baseOffset;
      if (t1 == null)
        t1 = 0;
      t2 = this.extentOffset;
      if (t2 == null)
        t2 = 0;
      return A.max(t1, t2, type$.int);
    },
    copyWith$2$composingBaseOffset$composingExtentOffset(composingBaseOffset, composingExtentOffset) {
      var t1, t2, _this = this;
      B._asIntQ(composingBaseOffset);
      B._asIntQ(composingExtentOffset);
      t1 = composingBaseOffset == null ? _this.composingBaseOffset : composingBaseOffset;
      t2 = composingExtentOffset == null ? _this.composingExtentOffset : composingExtentOffset;
      return A.EditingState$(_this.baseOffset, t1, t2, _this.extentOffset, _this.text);
    },
    toFlutter$0() {
      var _this = this;
      return B.LinkedHashMap_LinkedHashMap$_literal(["text", _this.text, "selectionBase", _this.baseOffset, "selectionExtent", _this.extentOffset, "composingBase", _this.composingBaseOffset, "composingExtent", _this.composingExtentOffset], type$.String, type$.dynamic);
    },
    get$isValid() {
      var t1 = this.baseOffset;
      t1.toString;
      if (typeof t1 !== "number")
        return t1.$ge();
      if (t1 >= 0) {
        t1 = this.extentOffset;
        t1.toString;
        if (typeof t1 !== "number")
          return t1.$ge();
        t1 = t1 >= 0;
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.text, _this.baseOffset, _this.extentOffset, _this.composingBaseOffset, _this.composingExtentOffset, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(_this.get$runtimeType(0), J.get$runtimeType$(other))))
        return false;
      return other instanceof A.EditingState && B.boolConversionCheck(J.$eq$(other.text, _this.text)) && B.boolConversionCheck(J.$eq$(other.get$minOffset(), _this.get$minOffset())) && B.boolConversionCheck(J.$eq$(other.get$maxOffset(), _this.get$maxOffset())) && B.boolConversionCheck(J.$eq$(other.composingBaseOffset, _this.composingBaseOffset)) && B.boolConversionCheck(J.$eq$(other.composingExtentOffset, _this.composingExtentOffset));
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    },
    applyToDomElement$1(domElement) {
      var _this = this;
      type$.nullable_JavaScriptObject._as(domElement);
      if (B.boolConversionCheck(A.domInstanceOfString(domElement, "HTMLInputElement"))) {
        domElement.toString;
        A.DomHTMLInputElementExtension_set_value(domElement, _this.text);
        A.DomHTMLInputElementExtension_setSelectionRange(domElement, _this.get$minOffset(), _this.get$maxOffset());
      } else if (B.boolConversionCheck(A.domInstanceOfString(domElement, "HTMLTextAreaElement"))) {
        domElement.toString;
        A.DomHTMLTextAreaElementExtension_set_value(domElement, _this.text);
        A.DomHTMLTextAreaElementExtension_setSelectionRange(domElement, _this.get$minOffset(), _this.get$maxOffset());
      } else
        throw B.wrapException(B.UnsupportedError$("Unsupported DOM element type: <" + B.S(domElement == null ? null : A.DomElementExtension_get_tagName(domElement)) + "> (" + B.S(J.get$runtimeType$(domElement)) + ")"));
    }
  };
  A.InputConfiguration.prototype = {};
  A.GloballyPositionedTextEditingStrategy.prototype = {
    placeElement$0() {
      var _this = this,
        t1 = _this.geometry;
      if (t1 != null)
        t1.applyToDomElement$1(_this.get$activeDomElement());
      if (B.boolConversionCheck(_this.get$hasAutofillGroup())) {
        _this.placeForm$0();
        t1 = _this.lastEditingState;
        if (t1 != null)
          t1.applyToDomElement$1(_this.domElement);
        t1 = _this.get$focusedFormElement();
        t1.toString;
        A.DomElementExtension_focus(t1, true);
        _this.moveFocusToActiveDomElement$0();
      }
    }
  };
  A.SafariDesktopTextEditingStrategy.prototype = {
    placeElement$0() {
      var _this = this,
        t1 = _this.geometry;
      if (t1 != null)
        t1.applyToDomElement$1(_this.get$activeDomElement());
      if (B.boolConversionCheck(_this.get$hasAutofillGroup())) {
        _this.placeForm$0();
        _this.moveFocusToActiveDomElement$0();
        t1 = _this.lastEditingState;
        if (t1 != null)
          t1.applyToDomElement$1(_this.get$activeDomElement());
      }
    },
    initializeElementPlacement$0() {
      if (this.geometry != null)
        this.placeElement$0();
      this.moveFocusToActiveDomElement$0();
    }
  };
  A.DefaultTextEditingStrategy.prototype = {
    get$activeDomElement() {
      var t1 = this.domElement;
      t1.toString;
      return t1;
    },
    get$_activeDomElementView() {
      return this._viewForElement$1(this.get$activeDomElement());
    },
    _viewForElement$1(element) {
      type$.JavaScriptObject._as(element);
      return A.EnginePlatformDispatcher_instance().get$viewManager().findViewForElement$1(element);
    },
    get$inputConfiguration() {
      return this.__DefaultTextEditingStrategy_inputConfiguration_A;
    },
    set$inputConfiguration(value) {
      this.__DefaultTextEditingStrategy_inputConfiguration_A = type$.InputConfiguration._as(value);
    },
    get$editingDeltaState() {
      var _null = null,
        t1 = this._editingDeltaState;
      if (t1 == null) {
        t1 = this.lastEditingState.text;
        t1.toString;
        t1 = this._editingDeltaState = A.TextEditingDeltaState$(_null, _null, _null, -1, -1, "", _null, t1);
      }
      return t1;
    },
    get$hasAutofillGroup() {
      return this.get$inputConfiguration().autofillGroup != null;
    },
    get$focusedFormElement() {
      var t1 = this.get$inputConfiguration().autofillGroup;
      return t1 == null ? null : t1.formElement;
    },
    initializeTextEditing$3$onAction$onChange(inputConfig, onAction, onChange) {
      var t1, _this = this;
      type$.InputConfiguration._as(inputConfig);
      type$.void_Function_2_nullable_EditingState_and_nullable_TextEditingDeltaState._as(onChange);
      type$.void_Function_nullable_String._as(onAction);
      t1 = inputConfig.inputType.createDomElement$0();
      A.DomElementExtension_set_tabIndex(t1, -1);
      _this.set$domElement(t1);
      _this.applyConfiguration$1(inputConfig);
      A._setStaticStyleAttributes(_this.get$activeDomElement());
      t1 = _this.style;
      if (t1 != null)
        t1.applyToDomElement$1(_this.get$activeDomElement());
      if (!B.boolConversionCheck(_this.get$hasAutofillGroup())) {
        A._insertEditingElementInView(_this.get$activeDomElement(), inputConfig.viewId);
        _this._appendedToForm = false;
      }
      _this.initializeElementPlacement$0();
      _this.isEnabled = true;
      _this.set$onChange(onChange);
      _this.set$onAction(onAction);
    },
    applyConfiguration$1(config) {
      var autofill, autocorrectValue, _this = this,
        _s8_ = "readonly";
      type$.InputConfiguration._as(config);
      _this.set$inputConfiguration(config);
      if (B.boolConversionCheck(config.readOnly))
        A.DomElementExtension_setAttribute(_this.get$activeDomElement(), _s8_, _s8_);
      else
        A.DomElementExtension_removeAttribute(_this.get$activeDomElement(), _s8_);
      if (B.boolConversionCheck(config.obscureText))
        A.DomElementExtension_setAttribute(_this.get$activeDomElement(), "type", "password");
      if (B.boolConversionCheck(J.$eq$(config.inputType.get$inputmodeAttribute(), "none")))
        A.DomElementExtension_setAttribute(_this.get$activeDomElement(), "inputmode", "none");
      A.EngineInputAction_fromName(config.inputAction).configureInputAction$1(_this.get$activeDomElement());
      autofill = config.autofill;
      if (autofill != null)
        autofill.applyToDomElement$2$focusedElement(_this.get$activeDomElement(), true);
      else {
        A.DomElementExtension_setAttribute(_this.get$activeDomElement(), "autocomplete", "off");
        A._ensureEditingElementInView(_this.get$activeDomElement(), _this.get$inputConfiguration().viewId);
      }
      autocorrectValue = B.boolConversionCheck(config.autocorrect) ? "on" : "off";
      A.DomElementExtension_setAttribute(_this.get$activeDomElement(), "autocorrect", autocorrectValue);
    },
    initializeElementPlacement$0() {
      this.placeElement$0();
    },
    addEventHandlers$0() {
      var t1, t2, t3, _this = this;
      if (_this.get$inputConfiguration().autofillGroup != null)
        J.addAll$1$ax(_this.subscriptions, _this.get$inputConfiguration().autofillGroup.addInputEventListeners$0());
      t1 = _this.subscriptions;
      t2 = _this.get$handleChange();
      t3 = J.getInterceptor$ax(t1);
      t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "input", t2));
      t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "keydown", _this.get$maybeSendAction()));
      t3.add$1(t1, A.DomSubscription$(self.document, "selectionchange", t2));
      t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "beforeinput", _this.get$handleBeforeInput()));
      if (!(_this instanceof A.SafariDesktopTextEditingStrategy))
        t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "blur", _this.get$handleBlur()));
      _this.addCompositionEventHandlers$1(_this.get$activeDomElement());
      _this.preventDefaultForMouseEvents$0();
    },
    updateElementPlacement$1(textGeometry) {
      var _this = this;
      type$.EditableTextGeometry._as(textGeometry);
      _this.geometry = textGeometry;
      if (B.boolConversionCheck(_this.isEnabled))
        if (_this.CompositionAwareMixin_composingText != null)
          textGeometry.applyToDomElement$1(_this.get$activeDomElement());
        else
          _this.placeElement$0();
    },
    updateElementStyle$1(textStyle) {
      type$.EditableTextStyle._as(textStyle);
      this.style = textStyle;
      if (B.boolConversionCheck(this.isEnabled))
        textStyle.applyToDomElement$1(this.get$activeDomElement());
    },
    disable$0() {
      var t1, t2, i, t3, _this = this;
      _this.isEnabled = false;
      _this.geometry = _this.style = _this._editingDeltaState = _this.lastEditingState = null;
      t1 = _this.subscriptions;
      t2 = J.getInterceptor$asx(t1);
      i = 0;
      while (true) {
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i < t3))
          break;
        t2.$index(t1, i).cancel$0();
        ++i;
      }
      t2.clear$0(t1);
      _this.removeCompositionEventHandlers$1(_this.get$activeDomElement());
      if (B.boolConversionCheck(_this._appendedToForm)) {
        t1 = _this.get$inputConfiguration().autofillGroup;
        t1 = (t1 == null ? null : t1.formElement) != null;
      } else
        t1 = false;
      if (t1) {
        A._styleAutofillElements(_this.get$activeDomElement(), true, false, true);
        t1 = _this.get$inputConfiguration().autofillGroup;
        if (t1 != null)
          t1.storeForm$0();
        A.DefaultTextEditingStrategy__moveFocusToFlutterView(_this.get$activeDomElement(), _this.get$_activeDomElementView(), false);
      } else
        A.DefaultTextEditingStrategy__moveFocusToFlutterView(_this.get$activeDomElement(), _this.get$_activeDomElementView(), true);
      _this.domElement = null;
    },
    setEditingState$1(editingState) {
      var _this = this;
      type$.nullable_EditingState._as(editingState);
      _this.lastEditingState = editingState;
      if (!B.boolConversionCheck(_this.isEnabled) || !B.boolConversionCheck(editingState.get$isValid()))
        return;
      _this.lastEditingState.applyToDomElement$1(_this.domElement);
    },
    placeElement$0() {
      this.moveFocusToActiveDomElement$0();
    },
    placeForm$0() {
      var t1 = this.get$inputConfiguration().autofillGroup;
      t1.toString;
      t1.placeForm$1(this.get$activeDomElement());
      this._appendedToForm = true;
    },
    handleChange$1($event) {
      var newEditingState, newTextEditingDeltaState, _this = this;
      type$.JavaScriptObject._as($event);
      newEditingState = _this.determineCompositionState$1(A.EditingState_EditingState$fromDomElement(_this.get$activeDomElement()));
      if (B.boolConversionCheck(_this.get$inputConfiguration().enableDeltaModel)) {
        _this.get$editingDeltaState().set$composingOffset(newEditingState.composingBaseOffset);
        _this.get$editingDeltaState().set$composingExtent(newEditingState.composingExtentOffset);
        newTextEditingDeltaState = A.TextEditingDeltaState_inferDeltaState(newEditingState, _this.lastEditingState, _this.get$editingDeltaState());
      } else
        newTextEditingDeltaState = null;
      if (!B.boolConversionCheck(newEditingState.$eq(0, _this.lastEditingState))) {
        _this.lastEditingState = newEditingState;
        _this._editingDeltaState = newTextEditingDeltaState;
        _this.onChange.call$2(newEditingState, newTextEditingDeltaState);
      }
      _this._editingDeltaState = null;
    },
    handleBeforeInput$1($event) {
      var t1, eventData, inputType, t2, deltaOffset, _this = this;
      type$.JavaScriptObject._as($event);
      t1 = type$.void;
      eventData = B._asStringQ(A.getJsProperty($event, "data", t1));
      inputType = B._asStringQ(A.getJsProperty($event, "inputType", t1));
      if (inputType != null) {
        t1 = _this.lastEditingState;
        t2 = t1.baseOffset;
        t2.toString;
        t1 = t1.extentOffset;
        t1.toString;
        if (typeof t2 !== "number")
          return t2.$gt();
        if (typeof t1 !== "number")
          return B.iae(t1);
        if (t2 > t1)
          deltaOffset = t2;
        else
          deltaOffset = t1;
        if (B.boolConversionCheck(D.JSString_methods.contains$1(inputType, "delete"))) {
          _this.get$editingDeltaState().deltaText = "";
          _this.get$editingDeltaState().deltaEnd = deltaOffset;
        } else if (inputType === "insertLineBreak") {
          _this.get$editingDeltaState().deltaText = "\n";
          _this.get$editingDeltaState().deltaStart = deltaOffset;
          _this.get$editingDeltaState().deltaEnd = deltaOffset;
        } else if (eventData != null) {
          _this.get$editingDeltaState().deltaText = eventData;
          _this.get$editingDeltaState().deltaStart = deltaOffset;
          _this.get$editingDeltaState().deltaEnd = deltaOffset;
        }
      }
    },
    handleBlur$1($event) {
      var willGainFocusElement = B.getProperty(type$.JavaScriptObject._as($event), "relatedTarget", type$.nullable_JavaScriptObject);
      if (willGainFocusElement == null || B.boolConversionCheck(J.$eq$(this._viewForElement$1(willGainFocusElement), this.get$_activeDomElementView())))
        this.moveFocusToActiveDomElement$0();
    },
    maybeSendAction$1(e) {
      var t1, _this = this;
      type$.JavaScriptObject._as(e);
      if (B.boolConversionCheck(A.domInstanceOfString(e, "KeyboardEvent")))
        if (B.boolConversionCheck(J.$eq$(A.DomKeyboardEventExtension_get_keyCode(e), 13))) {
          t1 = _this.onAction;
          t1.toString;
          t1.call$1(_this.get$inputConfiguration().inputAction);
          if (_this.get$inputConfiguration().inputType instanceof A.MultilineInputType && B.boolConversionCheck(J.$eq$(_this.get$inputConfiguration().inputAction, "TextInputAction.newline")))
            return;
          B._callMethodUnchecked0(e, "preventDefault", type$.void);
        }
    },
    enable$3$onAction$onChange(inputConfig, onAction, onChange) {
      var t1, _this = this;
      type$.InputConfiguration._as(inputConfig);
      type$.void_Function_2_nullable_EditingState_and_nullable_TextEditingDeltaState._as(onChange);
      _this.initializeTextEditing$3$onAction$onChange(inputConfig, type$.void_Function_nullable_String._as(onAction), onChange);
      _this.addEventHandlers$0();
      t1 = _this.lastEditingState;
      if (t1 != null)
        _this.setEditingState$1(t1);
      _this.moveFocusToActiveDomElement$0();
    },
    preventDefaultForMouseEvents$0() {
      var _this = this,
        t1 = _this.subscriptions,
        t2 = J.getInterceptor$ax(t1);
      t2.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "mousedown", new A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure()));
      t2.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "mouseup", new A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0()));
      t2.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "mousemove", new A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1()));
    },
    moveFocusToActiveDomElement$0() {
      A.DomElementExtension_focus(this.get$activeDomElement(), true);
    },
    set$domElement(domElement) {
      this.domElement = type$.nullable_JavaScriptObject._as(domElement);
    },
    set$onChange(onChange) {
      this.onChange = type$.nullable_void_Function_2_nullable_EditingState_and_nullable_TextEditingDeltaState._as(onChange);
    },
    set$onAction(onAction) {
      this.onAction = type$.nullable_void_Function_nullable_String._as(onAction);
    },
    $isCompositionAwareMixin: 1,
    $isTextEditingStrategy: 1
  };
  A.IOSTextEditingStrategy.prototype = {
    initializeTextEditing$3$onAction$onChange(inputConfig, onAction, onChange) {
      var _this = this;
      type$.InputConfiguration._as(inputConfig);
      type$.void_Function_2_nullable_EditingState_and_nullable_TextEditingDeltaState._as(onChange);
      _this.super$DefaultTextEditingStrategy$initializeTextEditing(inputConfig, type$.void_Function_nullable_String._as(onAction), onChange);
      inputConfig.inputType.configureInputMode$1(_this.get$activeDomElement());
      if (B.boolConversionCheck(_this.get$hasAutofillGroup()))
        _this.placeForm$0();
      inputConfig.textCapitalization.setAutocapitalizeAttribute$1(_this.get$activeDomElement());
    },
    initializeElementPlacement$0() {
      A.DomCSSStyleDeclarationExtension_set_transform(B.getProperty(this.get$activeDomElement(), "style", type$.JavaScriptObject), "translate(-9999px, -9999px)");
      this._canPosition = false;
    },
    addEventHandlers$0() {
      var t1, t2, t3, _this = this;
      if (_this.get$inputConfiguration().autofillGroup != null)
        J.addAll$1$ax(_this.subscriptions, _this.get$inputConfiguration().autofillGroup.addInputEventListeners$0());
      t1 = _this.subscriptions;
      t2 = _this.get$handleChange();
      t3 = J.getInterceptor$ax(t1);
      t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "input", t2));
      t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "keydown", _this.get$maybeSendAction()));
      t3.add$1(t1, A.DomSubscription$(self.document, "selectionchange", t2));
      t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "beforeinput", _this.get$handleBeforeInput()));
      t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "blur", _this.get$handleBlur()));
      _this.addCompositionEventHandlers$1(_this.get$activeDomElement());
      t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "focus", new A.IOSTextEditingStrategy_addEventHandlers_closure(_this)));
      _this._addTapListener$0();
    },
    updateElementPlacement$1(textGeometry) {
      var _this = this;
      _this.geometry = type$.EditableTextGeometry._as(textGeometry);
      if (B.boolConversionCheck(_this.isEnabled) && B.boolConversionCheck(_this._canPosition))
        _this.placeElement$0();
    },
    disable$0() {
      this.super$DefaultTextEditingStrategy$disable();
      var t1 = this._positionInputElementTimer;
      if (t1 != null)
        t1.cancel$0();
      this._positionInputElementTimer = null;
    },
    _addTapListener$0() {
      J.add$1$ax(this.subscriptions, A.DomSubscription$(this.get$activeDomElement(), "click", new A.IOSTextEditingStrategy__addTapListener_closure(this)));
    },
    _schedulePlacement$0() {
      var t1 = this._positionInputElementTimer;
      if (t1 != null)
        t1.cancel$0();
      this.set$_positionInputElementTimer(A.Timer_Timer(C.Duration_100000, new A.IOSTextEditingStrategy__schedulePlacement_closure(this)));
    },
    placeElement$0() {
      this.moveFocusToActiveDomElement$0();
      var t1 = this.geometry;
      if (t1 != null)
        t1.applyToDomElement$1(this.get$activeDomElement());
    },
    set$_positionInputElementTimer(_positionInputElementTimer) {
      this._positionInputElementTimer = type$.nullable_Timer._as(_positionInputElementTimer);
    }
  };
  A.AndroidTextEditingStrategy.prototype = {
    initializeTextEditing$3$onAction$onChange(inputConfig, onAction, onChange) {
      var _this = this;
      type$.InputConfiguration._as(inputConfig);
      type$.void_Function_2_nullable_EditingState_and_nullable_TextEditingDeltaState._as(onChange);
      _this.super$DefaultTextEditingStrategy$initializeTextEditing(inputConfig, type$.void_Function_nullable_String._as(onAction), onChange);
      inputConfig.inputType.configureInputMode$1(_this.get$activeDomElement());
      if (B.boolConversionCheck(_this.get$hasAutofillGroup()))
        _this.placeForm$0();
      else
        A._insertEditingElementInView(_this.get$activeDomElement(), inputConfig.viewId);
      inputConfig.textCapitalization.setAutocapitalizeAttribute$1(_this.get$activeDomElement());
    },
    addEventHandlers$0() {
      var t1, t2, t3, _this = this;
      if (_this.get$inputConfiguration().autofillGroup != null)
        J.addAll$1$ax(_this.subscriptions, _this.get$inputConfiguration().autofillGroup.addInputEventListeners$0());
      t1 = _this.subscriptions;
      t2 = _this.get$handleChange();
      t3 = J.getInterceptor$ax(t1);
      t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "input", t2));
      t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "keydown", _this.get$maybeSendAction()));
      t3.add$1(t1, A.DomSubscription$(self.document, "selectionchange", t2));
      t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "beforeinput", _this.get$handleBeforeInput()));
      t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "blur", _this.get$handleBlur()));
      _this.addCompositionEventHandlers$1(_this.get$activeDomElement());
      _this.preventDefaultForMouseEvents$0();
    },
    placeElement$0() {
      this.moveFocusToActiveDomElement$0();
      var t1 = this.geometry;
      if (t1 != null)
        t1.applyToDomElement$1(this.get$activeDomElement());
    }
  };
  A.FirefoxTextEditingStrategy.prototype = {
    initializeTextEditing$3$onAction$onChange(inputConfig, onAction, onChange) {
      type$.InputConfiguration._as(inputConfig);
      type$.void_Function_2_nullable_EditingState_and_nullable_TextEditingDeltaState._as(onChange);
      this.super$DefaultTextEditingStrategy$initializeTextEditing(inputConfig, type$.void_Function_nullable_String._as(onAction), onChange);
      if (B.boolConversionCheck(this.get$hasAutofillGroup()))
        this.placeForm$0();
    },
    addEventHandlers$0() {
      var t1, t2, t3, _this = this;
      if (_this.get$inputConfiguration().autofillGroup != null)
        J.addAll$1$ax(_this.subscriptions, _this.get$inputConfiguration().autofillGroup.addInputEventListeners$0());
      t1 = _this.subscriptions;
      t2 = _this.get$handleChange();
      t3 = J.getInterceptor$ax(t1);
      t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "input", t2));
      t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "keydown", _this.get$maybeSendAction()));
      t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "beforeinput", _this.get$handleBeforeInput()));
      _this.addCompositionEventHandlers$1(_this.get$activeDomElement());
      t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "keyup", new A.FirefoxTextEditingStrategy_addEventHandlers_closure(_this)));
      t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "select", t2));
      t3.add$1(t1, A.DomSubscription$(_this.get$activeDomElement(), "blur", _this.get$handleBlur()));
      _this.preventDefaultForMouseEvents$0();
    },
    placeElement$0() {
      var t1, _this = this;
      _this.moveFocusToActiveDomElement$0();
      t1 = _this.geometry;
      if (t1 != null)
        t1.applyToDomElement$1(_this.get$activeDomElement());
      t1 = _this.lastEditingState;
      if (t1 != null)
        t1.applyToDomElement$1(_this.get$activeDomElement());
    }
  };
  A.TextInputCommand.prototype = {};
  A.TextInputSetClient.prototype = {
    run$1(textEditing) {
      var t1;
      type$.HybridTextEditing._as(textEditing);
      t1 = textEditing._clientId;
      if (t1 != null && !B.boolConversionCheck(J.$eq$(t1, this.clientId)) && B.boolConversionCheck(textEditing.isEditing))
        textEditing.stopEditing$0();
      textEditing.set$_clientId(this.clientId);
      textEditing.set$configuration(this.configuration);
    }
  };
  A.TextInputUpdateConfig.prototype = {
    run$1(textEditing) {
      var t1, t2;
      type$.HybridTextEditing._as(textEditing);
      t1 = textEditing.get$strategy();
      t2 = textEditing.configuration;
      t2.toString;
      t1.applyConfiguration$1(t2);
    }
  };
  A.TextInputSetEditingState.prototype = {
    run$1(textEditing) {
      type$.HybridTextEditing._as(textEditing).get$strategy().setEditingState$1(this.state);
    }
  };
  A.TextInputShow.prototype = {
    run$1(textEditing) {
      type$.HybridTextEditing._as(textEditing);
      if (!B.boolConversionCheck(textEditing.isEditing))
        textEditing._startEditing$0();
    }
  };
  A.TextInputSetEditableSizeAndTransform.prototype = {
    run$1(textEditing) {
      type$.HybridTextEditing._as(textEditing).get$strategy().updateElementPlacement$1(this.geometry);
    }
  };
  A.TextInputSetStyle.prototype = {
    run$1(textEditing) {
      type$.HybridTextEditing._as(textEditing).get$strategy().updateElementStyle$1(this.style);
    }
  };
  A.TextInputClearClient.prototype = {
    run$1(textEditing) {
      type$.HybridTextEditing._as(textEditing);
      if (B.boolConversionCheck(textEditing.isEditing))
        textEditing.stopEditing$0();
    }
  };
  A.TextInputHide.prototype = {
    run$1(textEditing) {
      type$.HybridTextEditing._as(textEditing);
      if (B.boolConversionCheck(textEditing.isEditing))
        textEditing.stopEditing$0();
    }
  };
  A.TextInputSetMarkedTextRect.prototype = {
    run$1(textEditing) {
      type$.HybridTextEditing._as(textEditing);
    }
  };
  A.TextInputSetCaretRect.prototype = {
    run$1(textEditing) {
      type$.HybridTextEditing._as(textEditing);
    }
  };
  A.TextInputRequestAutofill.prototype = {
    run$1(textEditing) {
      type$.HybridTextEditing._as(textEditing);
    }
  };
  A.TextInputFinishAutofillContext.prototype = {
    run$1(textEditing) {
      type$.HybridTextEditing._as(textEditing).sendTextConnectionClosedToFrameworkIfAny$0();
      if (B.boolConversionCheck(this.saveForm))
        A.saveForms();
      A.cleanForms();
    }
  };
  A.TextEditingChannel.prototype = {
    handleTextInput$2(data, callback) {
      var $call, t1, t2, t3, command;
      type$.nullable_ByteData._as(data);
      type$.nullable_void_Function_nullable_ByteData._as(callback);
      $call = C.C_JSONMethodCodec.decodeMethodCall$1(data);
      switch ($call.method) {
        case "TextInput.setClient":
          t1 = $call.$arguments;
          t1.toString;
          type$.List_nullable_Object._as(t1);
          t2 = J.getInterceptor$asx(t1);
          t3 = t2.$index(t1, 0);
          t3.toString;
          B._asInt(t3);
          t1 = t2.$index(t1, 1);
          t1.toString;
          command = A.TextInputSetClient$(t3, A.InputConfiguration$fromFrameworkMessage(type$.Map_of_String_and_nullable_Object._as(t1)));
          break;
        case "TextInput.updateConfig":
          this.implementation.configuration = A.InputConfiguration$fromFrameworkMessage(type$.Map_String_dynamic._as($call.$arguments));
          command = C.C_TextInputUpdateConfig;
          break;
        case "TextInput.setEditingState":
          command = A.TextInputSetEditingState$(A.EditingState_EditingState$fromFrameworkMessage(type$.Map_String_dynamic._as($call.$arguments)));
          break;
        case "TextInput.show":
          command = C.C_TextInputShow;
          break;
        case "TextInput.setEditableSizeAndTransform":
          command = A.TextInputSetEditableSizeAndTransform$(A.EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage(type$.Map_String_dynamic._as($call.$arguments)));
          break;
        case "TextInput.setStyle":
          command = A.TextInputSetStyle$(A.EditableTextStyle_EditableTextStyle$fromFrameworkMessage(type$.Map_String_dynamic._as($call.$arguments)));
          break;
        case "TextInput.clearClient":
          command = C.C_TextInputClearClient;
          break;
        case "TextInput.hide":
          command = C.C_TextInputHide;
          break;
        case "TextInput.requestAutofill":
          command = C.C_TextInputRequestAutofill;
          break;
        case "TextInput.finishAutofillContext":
          command = A.TextInputFinishAutofillContext$(B._asBool($call.$arguments));
          break;
        case "TextInput.setMarkedTextRect":
          command = C.C_TextInputSetMarkedTextRect;
          break;
        case "TextInput.setCaretRect":
          command = C.C_TextInputSetCaretRect;
          break;
        default:
          A.EnginePlatformDispatcher_instance().replyToPlatformMessage$2(callback, null);
          return;
      }
      this.implementation.acceptCommand$2(command, new A.TextEditingChannel_handleTextInput_closure(callback));
    },
    updateEditingState$2(clientId, editingState) {
      B._asIntQ(clientId);
      type$.nullable_EditingState._as(editingState);
      A.EnginePlatformDispatcher_instance().invokeOnPlatformMessage$3("flutter/textinput", C.C_JSONMethodCodec.encodeMethodCall$1(A.MethodCall$0("TextInputClient.updateEditingState", [clientId, editingState.toFlutter$0()])), A._engine___emptyCallback$closure());
    },
    updateEditingStateWithDelta$2(clientId, editingDeltaState) {
      B._asIntQ(clientId);
      type$.nullable_TextEditingDeltaState._as(editingDeltaState);
      A.EnginePlatformDispatcher_instance().invokeOnPlatformMessage$3("flutter/textinput", C.C_JSONMethodCodec.encodeMethodCall$1(A.MethodCall$0("TextInputClient.updateEditingStateWithDeltas", [clientId, editingDeltaState.toFlutter$0()])), A._engine___emptyCallback$closure());
    },
    performAction$2(clientId, inputAction) {
      B._asIntQ(clientId);
      B._asStringQ(inputAction);
      A.EnginePlatformDispatcher_instance().invokeOnPlatformMessage$3("flutter/textinput", C.C_JSONMethodCodec.encodeMethodCall$1(A.MethodCall$0("TextInputClient.performAction", [clientId, inputAction])), A._engine___emptyCallback$closure());
    },
    onConnectionClosed$1(clientId) {
      B._asIntQ(clientId);
      A.EnginePlatformDispatcher_instance().invokeOnPlatformMessage$3("flutter/textinput", C.C_JSONMethodCodec.encodeMethodCall$1(A.MethodCall$0("TextInputClient.onConnectionClosed", [clientId])), A._engine___emptyCallback$closure());
    }
  };
  A.HybridTextEditing.prototype = {
    get$channel() {
      var result,
        value = this.__HybridTextEditing_channel_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.TextEditingChannel$(this);
        value !== $ && B.throwLateFieldADI("channel");
        this.__HybridTextEditing_channel_FI = result;
        value = result;
      }
      return value;
    },
    get$strategy() {
      var result, _this = this,
        value = _this.__HybridTextEditing_strategy_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = B.boolConversionCheck(A.EngineSemantics_instance().get$semanticsEnabled()) ? A.SemanticsTextEditingStrategy_ensureInitialized(_this) : A.createDefaultTextEditingStrategy(_this);
        _this.__HybridTextEditing_strategy_FI !== $ && B.throwLateFieldADI("strategy");
        value = _this.__HybridTextEditing_strategy_FI = result;
      }
      return value;
    },
    acceptCommand$2(command, callback) {
      type$.TextInputCommand._as(command);
      type$.void_Function._as(callback);
      command.run$1(this);
      callback.call$0();
    },
    _startEditing$0() {
      var t1, t2, _this = this;
      _this.isEditing = true;
      t1 = _this.get$strategy();
      t2 = _this.configuration;
      t2.toString;
      t1.enable$3$onAction$onChange(t2, new A.HybridTextEditing__startEditing_closure(_this), new A.HybridTextEditing__startEditing_closure0(_this));
    },
    stopEditing$0() {
      this.isEditing = false;
      this.get$strategy().disable$0();
    },
    sendTextConnectionClosedToFrameworkIfAny$0() {
      var _this = this;
      if (B.boolConversionCheck(_this.isEditing)) {
        _this.stopEditing$0();
        _this.get$channel().onConnectionClosed$1(_this._clientId);
      }
    },
    set$_clientId(_clientId) {
      this._clientId = B._asIntQ(_clientId);
    },
    set$configuration(configuration) {
      this.configuration = type$.nullable_InputConfiguration._as(configuration);
    }
  };
  A.EditableTextStyle.prototype = {
    get$align() {
      return A.textAlignToCssValue(this.textAlign, this.textDirection);
    },
    get$cssFont() {
      return B.S(this.fontWeight) + " " + B.S(this.fontSize) + "px " + B.S(A.canonicalizeFontFamily(this.fontFamily));
    },
    applyToDomElement$1(domElement) {
      var t2,
        t1 = type$.JavaScriptObject;
      t1 = B.getProperty(t1._as(domElement), "style", t1);
      t2 = this.get$align();
      t2.toString;
      A.DomCSSStyleDeclarationExtension_set_textAlign(t1, t2);
      A.DomCSSStyleDeclarationExtension_set_font(t1, this.get$cssFont());
    }
  };
  A.EditableTextGeometry.prototype = {
    applyToDomElement$1(domElement) {
      var cssTransform,
        t1 = type$.JavaScriptObject;
      t1._as(domElement);
      cssTransform = A.float64ListToCssTransform(this.globalTransform);
      t1 = B.getProperty(domElement, "style", t1);
      A.DomCSSStyleDeclarationExtension_set_width(t1, B.S(this.width) + "px");
      A.DomCSSStyleDeclarationExtension_set_height(t1, B.S(this.height) + "px");
      A.DomCSSStyleDeclarationExtension_set_transform(t1, cssTransform);
    }
  };
  A.TransformKind.prototype = {
    _enumToString$0() {
      return "TransformKind." + B.S(this._core$_name);
    }
  };
  A.LruCache.prototype = {
    get$length(_) {
      return J.get$length$asx(this._itemQueue);
    },
    $index(_, key) {
      var t1 = J.$index$asx(this._itemMap, this.$ti._precomputed1._as(key));
      return t1 == null ? null : t1.element._1;
    },
    cache$2(key, value) {
      var t2, item, t3, t4, _this = this,
        t1 = _this.$ti;
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      t1 = _this._itemMap;
      t2 = J.getInterceptor$asx(t1);
      item = t2.$index(t1, key);
      if (item == null)
        _this.__engine$_add$2(key, value);
      else {
        t3 = item.element;
        if (!B.boolConversionCheck(J.$eq$(t3._1, value))) {
          item.remove$0(0);
          _this.__engine$_add$2(key, value);
        } else {
          item.remove$0(0);
          t4 = _this._itemQueue;
          t4.addFirst$1(t3);
          t4 = t4.firstEntry$0();
          t4.toString;
          t2.$indexSet(t1, key, t4);
        }
      }
    },
    __engine$_add$2(key, value) {
      var t2, _this = this,
        t1 = _this.$ti;
      t1._precomputed1._as(key);
      t2 = _this._itemQueue;
      t2.addFirst$1(new B._Record_2_key_value(key, t1._rest[1]._as(value)));
      t1 = t2.firstEntry$0();
      t1.toString;
      J.$indexSet$ax(_this._itemMap, key, t1);
      t1 = J.get$length$asx(t2);
      t2 = _this.maximumSize;
      if (typeof t1 !== "number")
        return t1.$gt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (t1 > t2)
        _this._removeLeastRecentlyUsedValue$0();
    },
    _removeLeastRecentlyUsedValue$0() {
      var t1 = this._itemQueue,
        t2 = J.getInterceptor$ax(t1);
      J.remove$1$ax(this._itemMap, t2.get$last(t1)._0);
      t2.removeLast$0(t1);
    }
  };
  A.BitmapSize.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.BitmapSize && B.boolConversionCheck(J.$eq$(other.width, this.width)) && B.boolConversionCheck(J.$eq$(other.height, this.height));
    },
    get$hashCode(_) {
      return B.Object_hash(this.width, this.height, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toSize$0() {
      return A.Size$(J.toDouble$0$n(this.width), J.toDouble$0$n(this.height));
    },
    get$isEmpty(_) {
      return B.boolConversionCheck(J.$eq$(this.width, 0)) || B.boolConversionCheck(J.$eq$(this.height, 0));
    }
  };
  A.Matrix4.prototype = {
    Matrix4$identity$0() {
      var t1 = this._m4storage,
        t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, 15, 1);
      t2.$indexSet(t1, 0, 1);
      t2.$indexSet(t1, 5, 1);
      t2.$indexSet(t1, 10, 1);
    },
    get$storage() {
      return this._m4storage;
    },
    setFrom$1(arg) {
      var t2,
        argStorage = type$.Matrix4._as(arg)._m4storage,
        t1 = this._m4storage;
      if (15 >= argStorage.length)
        return B.ioore(argStorage, 15);
      t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, 15, argStorage[15]);
      t2.$indexSet(t1, 14, argStorage[14]);
      t2.$indexSet(t1, 13, argStorage[13]);
      t2.$indexSet(t1, 12, argStorage[12]);
      t2.$indexSet(t1, 11, argStorage[11]);
      t2.$indexSet(t1, 10, argStorage[10]);
      t2.$indexSet(t1, 9, argStorage[9]);
      t2.$indexSet(t1, 8, argStorage[8]);
      t2.$indexSet(t1, 7, argStorage[7]);
      t2.$indexSet(t1, 6, argStorage[6]);
      t2.$indexSet(t1, 5, argStorage[5]);
      t2.$indexSet(t1, 4, argStorage[4]);
      t2.$indexSet(t1, 3, argStorage[3]);
      t2.$indexSet(t1, 2, argStorage[2]);
      t2.$indexSet(t1, 1, argStorage[1]);
      t2.$indexSet(t1, 0, argStorage[0]);
    },
    $index(_, i) {
      return J.$index$asx(this._m4storage, B._asInt(i));
    },
    clone$0() {
      return A.Matrix4_Matrix4$copy(this);
    },
    translate$2(x, y) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18;
      B._asDouble(x);
      B._asDouble(y);
      t1 = this._m4storage;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.$index(t1, 0);
      if (typeof t3 !== "number")
        return t3.$mul();
      t4 = t2.$index(t1, 4);
      if (typeof t4 !== "number")
        return t4.$mul();
      t5 = t2.$index(t1, 8);
      if (typeof t5 !== "number")
        return t5.$mul();
      t6 = t2.$index(t1, 12);
      if (typeof t6 !== "number")
        return t6.$mul();
      t7 = t2.$index(t1, 1);
      if (typeof t7 !== "number")
        return t7.$mul();
      t8 = t2.$index(t1, 5);
      if (typeof t8 !== "number")
        return t8.$mul();
      t9 = t2.$index(t1, 9);
      if (typeof t9 !== "number")
        return t9.$mul();
      t10 = t2.$index(t1, 13);
      if (typeof t10 !== "number")
        return t10.$mul();
      t11 = t2.$index(t1, 2);
      if (typeof t11 !== "number")
        return t11.$mul();
      t12 = t2.$index(t1, 6);
      if (typeof t12 !== "number")
        return t12.$mul();
      t13 = t2.$index(t1, 10);
      if (typeof t13 !== "number")
        return t13.$mul();
      t14 = t2.$index(t1, 14);
      if (typeof t14 !== "number")
        return t14.$mul();
      t15 = t2.$index(t1, 3);
      if (typeof t15 !== "number")
        return t15.$mul();
      t16 = t2.$index(t1, 7);
      if (typeof t16 !== "number")
        return t16.$mul();
      t17 = t2.$index(t1, 11);
      if (typeof t17 !== "number")
        return t17.$mul();
      t18 = t2.$index(t1, 15);
      if (typeof t18 !== "number")
        return t18.$mul();
      t2.$indexSet(t1, 12, t3 * x + t4 * y + t5 * 0 + t6);
      t2.$indexSet(t1, 13, t7 * x + t8 * y + t9 * 0 + t10);
      t2.$indexSet(t1, 14, t11 * x + t12 * y + t13 * 0 + t14);
      t2.$indexSet(t1, 15, t15 * x + t16 * y + t17 * 0 + t18);
    },
    translate$1(x) {
      return this.translate$2(x, 0);
    },
    scale$3(x, y, z) {
      var sy, sz, t1, t2, t3;
      B._asDouble(x);
      B._asDoubleQ(y);
      B._asDoubleQ(z);
      sy = y == null ? x : y;
      sz = z == null ? x : z;
      t1 = this._m4storage;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.$index(t1, 15);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 15, t3);
      t3 = t2.$index(t1, 0);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 0, t3 * x);
      t3 = t2.$index(t1, 1);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 1, t3 * x);
      t3 = t2.$index(t1, 2);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 2, t3 * x);
      t3 = t2.$index(t1, 3);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 3, t3 * x);
      t3 = t2.$index(t1, 4);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 4, t3 * sy);
      t3 = t2.$index(t1, 5);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 5, t3 * sy);
      t3 = t2.$index(t1, 6);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 6, t3 * sy);
      t3 = t2.$index(t1, 7);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 7, t3 * sy);
      t3 = t2.$index(t1, 8);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 8, t3 * sz);
      t3 = t2.$index(t1, 9);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 9, t3 * sz);
      t3 = t2.$index(t1, 10);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 10, t3 * sz);
      t3 = t2.$index(t1, 11);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 11, t3 * sz);
      t3 = t2.$index(t1, 12);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 12, t3);
      t3 = t2.$index(t1, 13);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 13, t3);
      t3 = t2.$index(t1, 14);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 14, t3);
    },
    scale$1(x) {
      return this.scale$3(x, null, null);
    },
    scale$2(x, y) {
      return this.scale$3(x, y, null);
    },
    perspectiveTransform$3$x$y$z(x, y, z) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, w;
      B._asDouble(x);
      B._asDouble(y);
      B._asDouble(z);
      t1 = this._m4storage;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.$index(t1, 0);
      if (typeof t3 !== "number")
        return t3.$mul();
      t4 = t2.$index(t1, 4);
      if (typeof t4 !== "number")
        return t4.$mul();
      t5 = t2.$index(t1, 8);
      if (typeof t5 !== "number")
        return t5.$mul();
      t6 = t2.$index(t1, 12);
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = t2.$index(t1, 1);
      if (typeof t7 !== "number")
        return t7.$mul();
      t8 = t2.$index(t1, 5);
      if (typeof t8 !== "number")
        return t8.$mul();
      t9 = t2.$index(t1, 9);
      if (typeof t9 !== "number")
        return t9.$mul();
      t10 = t2.$index(t1, 13);
      if (typeof t10 !== "number")
        return B.iae(t10);
      t11 = t2.$index(t1, 2);
      if (typeof t11 !== "number")
        return t11.$mul();
      t12 = t2.$index(t1, 6);
      if (typeof t12 !== "number")
        return t12.$mul();
      t13 = t2.$index(t1, 10);
      if (typeof t13 !== "number")
        return t13.$mul();
      t14 = t2.$index(t1, 14);
      if (typeof t14 !== "number")
        return B.iae(t14);
      t15 = t2.$index(t1, 3);
      if (typeof t15 !== "number")
        return t15.$mul();
      t16 = t2.$index(t1, 7);
      if (typeof t16 !== "number")
        return t16.$mul();
      t17 = t2.$index(t1, 11);
      if (typeof t17 !== "number")
        return t17.$mul();
      t1 = t2.$index(t1, 15);
      if (typeof t1 !== "number")
        return B.iae(t1);
      w = 1 / (t15 * x + t16 * y + t17 * z + t1);
      return new B._Record_3_x78_y_z((t3 * x + t4 * y + t5 * z + t6) * w, (t7 * x + t8 * y + t9 * z + t10) * w, (t11 * x + t12 * y + t13 * z + t14) * w);
    },
    isIdentity$0() {
      var t1 = this._m4storage,
        t2 = J.getInterceptor$asx(t1);
      return B.boolConversionCheck(J.$eq$(t2.$index(t1, 0), 1)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 1), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 2), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 3), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 4), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 5), 1)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 6), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 7), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 8), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 9), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 10), 1)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 11), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 12), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 13), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 14), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 15), 1));
    },
    isIdentityOrTranslation$0() {
      var t1 = this._m4storage,
        t2 = J.getInterceptor$asx(t1);
      return B.boolConversionCheck(J.$eq$(t2.$index(t1, 15), 1)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 0), 1)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 1), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 2), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 3), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 4), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 5), 1)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 6), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 7), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 8), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 9), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 10), 1)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 11), 0));
    },
    setTranslationRaw$3(x, y, z) {
      var t1, t2;
      B._asDouble(x);
      B._asDouble(y);
      t1 = this._m4storage;
      t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, 14, B._asDouble(z));
      t2.$indexSet(t1, 13, y);
      t2.$indexSet(t1, 12, x);
    },
    invert$0() {
      return this.copyInverse$1(this);
    },
    copyInverse$1(arg) {
      var argStorage, t1, a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33, b00, b01, b02, b03, b04, b05, b06, b07, b08, b09, b10, b11, det, invDet, t2, t3, t4;
      type$.Matrix4._as(arg);
      argStorage = arg._m4storage;
      t1 = argStorage.length;
      if (0 >= t1)
        return B.ioore(argStorage, 0);
      a00 = argStorage[0];
      if (1 >= t1)
        return B.ioore(argStorage, 1);
      a01 = argStorage[1];
      if (2 >= t1)
        return B.ioore(argStorage, 2);
      a02 = argStorage[2];
      if (3 >= t1)
        return B.ioore(argStorage, 3);
      a03 = argStorage[3];
      if (4 >= t1)
        return B.ioore(argStorage, 4);
      a10 = argStorage[4];
      if (5 >= t1)
        return B.ioore(argStorage, 5);
      a11 = argStorage[5];
      if (6 >= t1)
        return B.ioore(argStorage, 6);
      a12 = argStorage[6];
      if (7 >= t1)
        return B.ioore(argStorage, 7);
      a13 = argStorage[7];
      if (8 >= t1)
        return B.ioore(argStorage, 8);
      a20 = argStorage[8];
      if (9 >= t1)
        return B.ioore(argStorage, 9);
      a21 = argStorage[9];
      if (10 >= t1)
        return B.ioore(argStorage, 10);
      a22 = argStorage[10];
      if (11 >= t1)
        return B.ioore(argStorage, 11);
      a23 = argStorage[11];
      if (12 >= t1)
        return B.ioore(argStorage, 12);
      a30 = argStorage[12];
      if (13 >= t1)
        return B.ioore(argStorage, 13);
      a31 = argStorage[13];
      if (14 >= t1)
        return B.ioore(argStorage, 14);
      a32 = argStorage[14];
      if (15 >= t1)
        return B.ioore(argStorage, 15);
      a33 = argStorage[15];
      b00 = a00 * a11 - a01 * a10;
      b01 = a00 * a12 - a02 * a10;
      b02 = a00 * a13 - a03 * a10;
      b03 = a01 * a12 - a02 * a11;
      b04 = a01 * a13 - a03 * a11;
      b05 = a02 * a13 - a03 * a12;
      b06 = a20 * a31 - a21 * a30;
      b07 = a20 * a32 - a22 * a30;
      b08 = a20 * a33 - a23 * a30;
      b09 = a21 * a32 - a22 * a31;
      b10 = a21 * a33 - a23 * a31;
      b11 = a22 * a33 - a23 * a32;
      det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
      if (det === 0) {
        this.setFrom$1(arg);
        return 0;
      }
      invDet = 1 / det;
      t1 = this._m4storage;
      t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, 0, (a11 * b11 - a12 * b10 + a13 * b09) * invDet);
      t2.$indexSet(t1, 1, (-a01 * b11 + a02 * b10 - a03 * b09) * invDet);
      t2.$indexSet(t1, 2, (a31 * b05 - a32 * b04 + a33 * b03) * invDet);
      t2.$indexSet(t1, 3, (-a21 * b05 + a22 * b04 - a23 * b03) * invDet);
      t3 = -a10;
      t2.$indexSet(t1, 4, (t3 * b11 + a12 * b08 - a13 * b07) * invDet);
      t2.$indexSet(t1, 5, (a00 * b11 - a02 * b08 + a03 * b07) * invDet);
      t4 = -a30;
      t2.$indexSet(t1, 6, (t4 * b05 + a32 * b02 - a33 * b01) * invDet);
      t2.$indexSet(t1, 7, (a20 * b05 - a22 * b02 + a23 * b01) * invDet);
      t2.$indexSet(t1, 8, (a10 * b10 - a11 * b08 + a13 * b06) * invDet);
      t2.$indexSet(t1, 9, (-a00 * b10 + a01 * b08 - a03 * b06) * invDet);
      t2.$indexSet(t1, 10, (a30 * b04 - a31 * b02 + a33 * b00) * invDet);
      t2.$indexSet(t1, 11, (-a20 * b04 + a21 * b02 - a23 * b00) * invDet);
      t2.$indexSet(t1, 12, (t3 * b09 + a11 * b07 - a12 * b06) * invDet);
      t2.$indexSet(t1, 13, (a00 * b09 - a01 * b07 + a02 * b06) * invDet);
      t2.$indexSet(t1, 14, (t4 * b03 + a31 * b01 - a32 * b00) * invDet);
      t2.$indexSet(t1, 15, (a20 * b03 - a21 * b01 + a22 * b00) * invDet);
      return det;
    },
    multiply$1(arg) {
      var t1, t2, m33, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, argStorage, n33, n00, n01, n02, n03, n10, n11, n12, n13, n20, n21, n22, n23, n30, n31, n32;
      type$.Matrix4._as(arg);
      t1 = this._m4storage;
      t2 = J.getInterceptor$asx(t1);
      m33 = t2.$index(t1, 15);
      m00 = t2.$index(t1, 0);
      m01 = t2.$index(t1, 4);
      m02 = t2.$index(t1, 8);
      m03 = t2.$index(t1, 12);
      m10 = t2.$index(t1, 1);
      m11 = t2.$index(t1, 5);
      m12 = t2.$index(t1, 9);
      m13 = t2.$index(t1, 13);
      m20 = t2.$index(t1, 2);
      m21 = t2.$index(t1, 6);
      m22 = t2.$index(t1, 10);
      m23 = t2.$index(t1, 14);
      m30 = t2.$index(t1, 3);
      m31 = t2.$index(t1, 7);
      m32 = t2.$index(t1, 11);
      argStorage = arg._m4storage;
      if (15 >= argStorage.length)
        return B.ioore(argStorage, 15);
      n33 = argStorage[15];
      n00 = argStorage[0];
      n01 = argStorage[4];
      n02 = argStorage[8];
      n03 = argStorage[12];
      n10 = argStorage[1];
      n11 = argStorage[5];
      n12 = argStorage[9];
      n13 = argStorage[13];
      n20 = argStorage[2];
      n21 = argStorage[6];
      n22 = argStorage[10];
      n23 = argStorage[14];
      n30 = argStorage[3];
      n31 = argStorage[7];
      n32 = argStorage[11];
      t2.$indexSet(t1, 0, m00 * n00 + m01 * n10 + m02 * n20 + m03 * n30);
      t2.$indexSet(t1, 4, m00 * n01 + m01 * n11 + m02 * n21 + m03 * n31);
      t2.$indexSet(t1, 8, m00 * n02 + m01 * n12 + m02 * n22 + m03 * n32);
      t2.$indexSet(t1, 12, m00 * n03 + m01 * n13 + m02 * n23 + m03 * n33);
      t2.$indexSet(t1, 1, m10 * n00 + m11 * n10 + m12 * n20 + m13 * n30);
      t2.$indexSet(t1, 5, m10 * n01 + m11 * n11 + m12 * n21 + m13 * n31);
      t2.$indexSet(t1, 9, m10 * n02 + m11 * n12 + m12 * n22 + m13 * n32);
      t2.$indexSet(t1, 13, m10 * n03 + m11 * n13 + m12 * n23 + m13 * n33);
      t2.$indexSet(t1, 2, m20 * n00 + m21 * n10 + m22 * n20 + m23 * n30);
      t2.$indexSet(t1, 6, m20 * n01 + m21 * n11 + m22 * n21 + m23 * n31);
      t2.$indexSet(t1, 10, m20 * n02 + m21 * n12 + m22 * n22 + m23 * n32);
      t2.$indexSet(t1, 14, m20 * n03 + m21 * n13 + m22 * n23 + m23 * n33);
      t2.$indexSet(t1, 3, m30 * n00 + m31 * n10 + m32 * n20 + m33 * n30);
      t2.$indexSet(t1, 7, m30 * n01 + m31 * n11 + m32 * n21 + m33 * n31);
      t2.$indexSet(t1, 11, m30 * n02 + m31 * n12 + m32 * n22 + m33 * n32);
      t2.$indexSet(t1, 15, m30 * n03 + m31 * n13 + m32 * n23 + m33 * n33);
    },
    multiplied$1(arg) {
      var t1;
      type$.Matrix4._as(arg);
      t1 = this.clone$0();
      t1.multiply$1(arg);
      return t1;
    },
    multiplyTranspose$1(arg) {
      var t1, t2, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33, argStorage, t3, t4, t5, t6, t7;
      type$.Matrix4._as(arg);
      t1 = this._m4storage;
      t2 = J.getInterceptor$asx(t1);
      m00 = t2.$index(t1, 0);
      m01 = t2.$index(t1, 4);
      m02 = t2.$index(t1, 8);
      m03 = t2.$index(t1, 12);
      m10 = t2.$index(t1, 1);
      m11 = t2.$index(t1, 5);
      m12 = t2.$index(t1, 9);
      m13 = t2.$index(t1, 13);
      m20 = t2.$index(t1, 2);
      m21 = t2.$index(t1, 6);
      m22 = t2.$index(t1, 10);
      m23 = t2.$index(t1, 14);
      m30 = t2.$index(t1, 3);
      m31 = t2.$index(t1, 7);
      m32 = t2.$index(t1, 11);
      m33 = t2.$index(t1, 15);
      argStorage = arg._m4storage;
      t3 = argStorage.length;
      if (0 >= t3)
        return B.ioore(argStorage, 0);
      t4 = argStorage[0];
      if (typeof t4 !== "number")
        return B.iae(t4);
      if (4 >= t3)
        return B.ioore(argStorage, 4);
      t5 = argStorage[4];
      if (typeof t5 !== "number")
        return B.iae(t5);
      if (8 >= t3)
        return B.ioore(argStorage, 8);
      t6 = argStorage[8];
      if (typeof t6 !== "number")
        return B.iae(t6);
      if (12 >= t3)
        return B.ioore(argStorage, 12);
      t7 = argStorage[12];
      if (typeof t7 !== "number")
        return B.iae(t7);
      t2.$indexSet(t1, 0, m00 * t4 + m01 * t5 + m02 * t6 + m03 * t7);
      t7 = argStorage[1];
      if (typeof t7 !== "number")
        return B.iae(t7);
      t6 = argStorage[5];
      if (typeof t6 !== "number")
        return B.iae(t6);
      t5 = argStorage[9];
      if (typeof t5 !== "number")
        return B.iae(t5);
      if (13 >= t3)
        return B.ioore(argStorage, 13);
      t4 = argStorage[13];
      if (typeof t4 !== "number")
        return B.iae(t4);
      t2.$indexSet(t1, 4, m00 * t7 + m01 * t6 + m02 * t5 + m03 * t4);
      t4 = argStorage[2];
      if (typeof t4 !== "number")
        return B.iae(t4);
      t5 = argStorage[6];
      if (typeof t5 !== "number")
        return B.iae(t5);
      t6 = argStorage[10];
      if (typeof t6 !== "number")
        return B.iae(t6);
      if (14 >= t3)
        return B.ioore(argStorage, 14);
      t7 = argStorage[14];
      if (typeof t7 !== "number")
        return B.iae(t7);
      t2.$indexSet(t1, 8, m00 * t4 + m01 * t5 + m02 * t6 + m03 * t7);
      t7 = argStorage[3];
      if (typeof t7 !== "number")
        return B.iae(t7);
      t6 = argStorage[7];
      if (typeof t6 !== "number")
        return B.iae(t6);
      t5 = argStorage[11];
      if (typeof t5 !== "number")
        return B.iae(t5);
      if (15 >= t3)
        return B.ioore(argStorage, 15);
      t3 = argStorage[15];
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 12, m00 * t7 + m01 * t6 + m02 * t5 + m03 * t3);
      t3 = argStorage[0];
      if (typeof t3 !== "number")
        return B.iae(t3);
      t5 = argStorage[4];
      if (typeof t5 !== "number")
        return B.iae(t5);
      t6 = argStorage[8];
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = argStorage[12];
      if (typeof t7 !== "number")
        return B.iae(t7);
      t2.$indexSet(t1, 1, m10 * t3 + m11 * t5 + m12 * t6 + m13 * t7);
      t7 = argStorage[1];
      if (typeof t7 !== "number")
        return B.iae(t7);
      t6 = argStorage[5];
      if (typeof t6 !== "number")
        return B.iae(t6);
      t5 = argStorage[9];
      if (typeof t5 !== "number")
        return B.iae(t5);
      t3 = argStorage[13];
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 5, m10 * t7 + m11 * t6 + m12 * t5 + m13 * t3);
      t3 = argStorage[2];
      if (typeof t3 !== "number")
        return B.iae(t3);
      t5 = argStorage[6];
      if (typeof t5 !== "number")
        return B.iae(t5);
      t6 = argStorage[10];
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = argStorage[14];
      if (typeof t7 !== "number")
        return B.iae(t7);
      t2.$indexSet(t1, 9, m10 * t3 + m11 * t5 + m12 * t6 + m13 * t7);
      t7 = argStorage[3];
      if (typeof t7 !== "number")
        return B.iae(t7);
      t6 = argStorage[7];
      if (typeof t6 !== "number")
        return B.iae(t6);
      t5 = argStorage[11];
      if (typeof t5 !== "number")
        return B.iae(t5);
      t3 = argStorage[15];
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 13, m10 * t7 + m11 * t6 + m12 * t5 + m13 * t3);
      t3 = argStorage[0];
      if (typeof t3 !== "number")
        return B.iae(t3);
      t5 = argStorage[4];
      if (typeof t5 !== "number")
        return B.iae(t5);
      t6 = argStorage[8];
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = argStorage[12];
      if (typeof t7 !== "number")
        return B.iae(t7);
      t2.$indexSet(t1, 2, m20 * t3 + m21 * t5 + m22 * t6 + m23 * t7);
      t7 = argStorage[1];
      if (typeof t7 !== "number")
        return B.iae(t7);
      t6 = argStorage[5];
      if (typeof t6 !== "number")
        return B.iae(t6);
      t5 = argStorage[9];
      if (typeof t5 !== "number")
        return B.iae(t5);
      t3 = argStorage[13];
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 6, m20 * t7 + m21 * t6 + m22 * t5 + m23 * t3);
      t3 = argStorage[2];
      if (typeof t3 !== "number")
        return B.iae(t3);
      t5 = argStorage[6];
      if (typeof t5 !== "number")
        return B.iae(t5);
      t6 = argStorage[10];
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = argStorage[14];
      if (typeof t7 !== "number")
        return B.iae(t7);
      t2.$indexSet(t1, 10, m20 * t3 + m21 * t5 + m22 * t6 + m23 * t7);
      t7 = argStorage[3];
      if (typeof t7 !== "number")
        return B.iae(t7);
      t6 = argStorage[7];
      if (typeof t6 !== "number")
        return B.iae(t6);
      t5 = argStorage[11];
      if (typeof t5 !== "number")
        return B.iae(t5);
      t3 = argStorage[15];
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 14, m20 * t7 + m21 * t6 + m22 * t5 + m23 * t3);
      t3 = argStorage[0];
      if (typeof t3 !== "number")
        return B.iae(t3);
      t5 = argStorage[4];
      if (typeof t5 !== "number")
        return B.iae(t5);
      t6 = argStorage[8];
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = argStorage[12];
      if (typeof t7 !== "number")
        return B.iae(t7);
      t2.$indexSet(t1, 3, m30 * t3 + m31 * t5 + m32 * t6 + m33 * t7);
      t7 = argStorage[1];
      if (typeof t7 !== "number")
        return B.iae(t7);
      t6 = argStorage[5];
      if (typeof t6 !== "number")
        return B.iae(t6);
      t5 = argStorage[9];
      if (typeof t5 !== "number")
        return B.iae(t5);
      t3 = argStorage[13];
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 7, m30 * t7 + m31 * t6 + m32 * t5 + m33 * t3);
      t3 = argStorage[2];
      if (typeof t3 !== "number")
        return B.iae(t3);
      t5 = argStorage[6];
      if (typeof t5 !== "number")
        return B.iae(t5);
      t6 = argStorage[10];
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = argStorage[14];
      if (typeof t7 !== "number")
        return B.iae(t7);
      t2.$indexSet(t1, 11, m30 * t3 + m31 * t5 + m32 * t6 + m33 * t7);
      t7 = argStorage[3];
      if (typeof t7 !== "number")
        return B.iae(t7);
      t6 = argStorage[7];
      if (typeof t6 !== "number")
        return B.iae(t6);
      t5 = argStorage[11];
      if (typeof t5 !== "number")
        return B.iae(t5);
      t3 = argStorage[15];
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 15, m30 * t7 + m31 * t6 + m32 * t5 + m33 * t3);
    },
    transform2$1(vector) {
      var t1, x, y, t2, t3, t4, t5;
      type$.Float32List._as(vector);
      t1 = vector.length;
      if (0 >= t1)
        return B.ioore(vector, 0);
      x = vector[0];
      if (1 >= t1)
        return B.ioore(vector, 1);
      y = vector[1];
      t1 = this._m4storage;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.$index(t1, 0);
      if (typeof t3 !== "number")
        return t3.$mul();
      t4 = t2.$index(t1, 4);
      if (typeof t4 !== "number")
        return t4.$mul();
      t5 = t2.$index(t1, 12);
      if (typeof t5 !== "number")
        return B.iae(t5);
      vector[0] = t3 * x + t4 * y + t5;
      t5 = t2.$index(t1, 1);
      if (typeof t5 !== "number")
        return t5.$mul();
      t4 = t2.$index(t1, 5);
      if (typeof t4 !== "number")
        return t4.$mul();
      t1 = t2.$index(t1, 13);
      if (typeof t1 !== "number")
        return B.iae(t1);
      vector[1] = t5 * x + t4 * y + t1;
    },
    transformRect$1(rect) {
      return A.transformRectWithMatrix(this, type$.Rect._as(rect));
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.FastMatrix32.prototype = {
    transform$2(x, y) {
      var t1, t2, t3, t4, t5;
      B._asDouble(x);
      B._asDouble(y);
      t1 = this.matrix;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.$index(t1, 12);
      t4 = t2.$index(t1, 0);
      if (typeof t4 !== "number")
        return t4.$mul();
      if (typeof t3 !== "number")
        return t3.$add();
      t5 = t2.$index(t1, 4);
      if (typeof t5 !== "number")
        return t5.$mul();
      this.transformedX = t3 + t4 * x + t5 * y;
      t5 = t2.$index(t1, 13);
      t4 = t2.$index(t1, 1);
      if (typeof t4 !== "number")
        return t4.$mul();
      if (typeof t5 !== "number")
        return t5.$add();
      t1 = t2.$index(t1, 5);
      if (typeof t1 !== "number")
        return t1.$mul();
      this.transformedY = t5 + t4 * x + t1 * y;
    }
  };
  A.CustomElementDimensionsProvider.prototype = {
    CustomElementDimensionsProvider$2$onDprChange(_hostElement, onDprChange) {
      var t1, _this = this;
      _this.set$_dprChangeStreamSubscription(onDprChange == null ? null : onDprChange.listen$1(new A.CustomElementDimensionsProvider_closure(_this)));
      _this.set$_hostElementResizeObserver(A.createDomResizeObserver(new A.CustomElementDimensionsProvider_closure0(_this)));
      t1 = _this.get$_hostElementResizeObserver();
      if (t1 != null)
        B._callMethodUnchecked1(t1, "observe", _this._hostElement, type$.void);
    },
    get$_hostElementResizeObserver() {
      return this.__CustomElementDimensionsProvider__hostElementResizeObserver_A;
    },
    set$_hostElementResizeObserver(value) {
      this.__CustomElementDimensionsProvider__hostElementResizeObserver_A = type$.nullable_JavaScriptObject._as(value);
    },
    get$_dprChangeStreamSubscription() {
      return this.__CustomElementDimensionsProvider__dprChangeStreamSubscription_A;
    },
    set$_dprChangeStreamSubscription(value) {
      this.set$__CustomElementDimensionsProvider__dprChangeStreamSubscription_A(type$.nullable_StreamSubscription_double._as(value));
    },
    _broadcastSize$1(size) {
      J.add$1$ax(this._onResizeStreamController, type$.nullable_Size._as(size));
    },
    close$0() {
      var t1, _this = this;
      _this.super$DimensionsProvider$close();
      t1 = _this.get$_hostElementResizeObserver();
      if (t1 != null)
        B._callMethodUnchecked0(t1, "disconnect", type$.void);
      t1 = _this.get$_dprChangeStreamSubscription();
      if (t1 != null)
        t1.cancel$0();
      _this._onResizeStreamController.close$0();
    },
    get$onResize() {
      return this._onResizeStreamController.get$stream();
    },
    computePhysicalSize$0() {
      var devicePixelRatio = A.EngineFlutterDisplay_instance().get$devicePixelRatio(),
        t1 = this._hostElement,
        t2 = A.DomElementExtension_get_clientWidth(t1);
      if (typeof t2 !== "number")
        return t2.$mul();
      t1 = A.DomElementExtension_get_clientHeight(t1);
      if (typeof t1 !== "number")
        return t1.$mul();
      return A.Size$(t2 * devicePixelRatio, t1 * devicePixelRatio);
    },
    computeKeyboardInsets$2(physicalHeight, isEditingOnMobile) {
      B._asDouble(physicalHeight);
      B._asBool(isEditingOnMobile);
      return C.ViewPadding_0_0_0_0;
    },
    set$__CustomElementDimensionsProvider__dprChangeStreamSubscription_A(__CustomElementDimensionsProvider__dprChangeStreamSubscription_A) {
      this.__CustomElementDimensionsProvider__dprChangeStreamSubscription_A = type$.nullable_StreamSubscription_double._as(__CustomElementDimensionsProvider__dprChangeStreamSubscription_A);
    }
  };
  A.DimensionsProvider.prototype = {
    close$0() {
    }
  };
  A.FullPageDimensionsProvider.prototype = {
    FullPageDimensionsProvider$0() {
      var resizeEventTarget = B.getProperty(self.window, "visualViewport", type$.nullable_JavaScriptObject);
      if (resizeEventTarget == null)
        resizeEventTarget = self.window;
      this.set$_domResizeSubscription(A.DomSubscription$(resizeEventTarget, "resize", this.get$_onVisualViewportResize()));
    },
    get$_domResizeSubscription() {
      return this.__FullPageDimensionsProvider__domResizeSubscription_A;
    },
    set$_domResizeSubscription(value) {
      this.__FullPageDimensionsProvider__domResizeSubscription_A = type$.DomSubscription._as(value);
    },
    _onVisualViewportResize$1($event) {
      type$.JavaScriptObject._as($event);
      J.add$1$ax(this._onResizeStreamController, null);
    },
    close$0() {
      this.super$DimensionsProvider$close();
      this.get$_domResizeSubscription().cancel$0();
      this._onResizeStreamController.close$0();
    },
    get$onResize() {
      return this._onResizeStreamController.get$stream();
    },
    computePhysicalSize$0() {
      var t2, docWidth, docHeight,
        _s15_ = "documentElement",
        windowInnerWidth = B._Cell$named("windowInnerWidth"),
        windowInnerHeight = B._Cell$named("windowInnerHeight"),
        t1 = type$.nullable_JavaScriptObject,
        viewport = B.getProperty(self.window, "visualViewport", t1),
        devicePixelRatio = A.EngineFlutterDisplay_instance().get$devicePixelRatio();
      if (viewport != null)
        if (B.boolConversionCheck(J.$eq$($.$get$browser().get$operatingSystem(), C.OperatingSystem_0))) {
          t2 = B.getProperty(self.document, _s15_, t1);
          t2.toString;
          docWidth = A.DomElementExtension_get_clientWidth(t2);
          t1 = B.getProperty(self.document, _s15_, t1);
          t1.toString;
          docHeight = A.DomElementExtension_get_clientHeight(t1);
          windowInnerWidth.set$value(docWidth * devicePixelRatio);
          windowInnerHeight.set$value(docHeight * devicePixelRatio);
        } else {
          t1 = A.DomVisualViewportExtension_get_width(viewport);
          t1.toString;
          if (typeof t1 !== "number")
            return t1.$mul();
          windowInnerWidth.set$value(t1 * devicePixelRatio);
          t1 = A.DomVisualViewportExtension_get_height(viewport);
          t1.toString;
          if (typeof t1 !== "number")
            return t1.$mul();
          windowInnerHeight.set$value(t1 * devicePixelRatio);
        }
      else {
        t1 = A.DomWindowExtension_get_innerWidth(self.window);
        t1.toString;
        if (typeof t1 !== "number")
          return t1.$mul();
        windowInnerWidth.set$value(t1 * devicePixelRatio);
        t1 = A.DomWindowExtension_get_innerHeight(self.window);
        t1.toString;
        if (typeof t1 !== "number")
          return t1.$mul();
        windowInnerHeight.set$value(t1 * devicePixelRatio);
      }
      t1 = type$.double;
      return A.Size$(windowInnerWidth.readLocal$1$0(t1), windowInnerHeight.readLocal$1$0(t1));
    },
    computeKeyboardInsets$2(physicalHeight, isEditingOnMobile) {
      var devicePixelRatio, t1, viewport, windowInnerHeight;
      B._asDouble(physicalHeight);
      B._asBool(isEditingOnMobile);
      devicePixelRatio = A.EngineFlutterDisplay_instance().get$devicePixelRatio();
      t1 = type$.nullable_JavaScriptObject;
      viewport = B.getProperty(self.window, "visualViewport", t1);
      windowInnerHeight = B._Cell$named("windowInnerHeight");
      if (viewport != null)
        if (B.boolConversionCheck(J.$eq$($.$get$browser().get$operatingSystem(), C.OperatingSystem_0)) && !isEditingOnMobile) {
          t1 = B.getProperty(self.document, "documentElement", t1);
          t1.toString;
          t1 = A.DomElementExtension_get_clientHeight(t1);
          if (typeof t1 !== "number")
            return t1.$mul();
          windowInnerHeight.set$value(t1 * devicePixelRatio);
        } else {
          t1 = A.DomVisualViewportExtension_get_height(viewport);
          t1.toString;
          if (typeof t1 !== "number")
            return t1.$mul();
          windowInnerHeight.set$value(t1 * devicePixelRatio);
        }
      else {
        t1 = A.DomWindowExtension_get_innerHeight(self.window);
        t1.toString;
        if (typeof t1 !== "number")
          return t1.$mul();
        windowInnerHeight.set$value(t1 * devicePixelRatio);
      }
      t1 = windowInnerHeight.readLocal$1$0(type$.double);
      if (typeof t1 !== "number")
        return B.iae(t1);
      return A.ViewPadding$(physicalHeight - t1, 0, 0, 0);
    }
  };
  A.DisplayDprStream.prototype = {
    DisplayDprStream$2$overrides(_display, overrides) {
      this._subscribeToMediaQuery$0();
    },
    get$_dprMediaQuery() {
      return this.__DisplayDprStream__dprMediaQuery_A;
    },
    set$_dprMediaQuery(value) {
      this.__DisplayDprStream__dprMediaQuery_A = type$.JavaScriptObject._as(value);
    },
    _subscribeToMediaQuery$0() {
      var _this = this;
      _this.set$_dprMediaQuery(A.DomWindowExtension_matchMedia(self.window, "(resolution: " + B.S(_this._currentDpr) + "dppx)"));
      A.DomEventTargetExtension_addEventListenerWithOptions(_this.get$_dprMediaQuery(), "change", A.createDomEventListener(_this.get$_onDprMediaQueryChange()), B.LinkedHashMap_LinkedHashMap$_literal(["once", true, "passive", true], type$.String, type$.Object));
    },
    _onDprMediaQueryChange$1(_) {
      var _this = this;
      type$.JavaScriptObject._as(_);
      _this.set$_currentDpr(_this._display.get$devicePixelRatio());
      J.add$1$ax(_this._dprStreamController, _this._currentDpr);
      _this._subscribeToMediaQuery$0();
    },
    get$dprChanged() {
      return this._dprStreamController.get$stream();
    },
    set$_currentDpr(_currentDpr) {
      this._currentDpr = B._asDouble(_currentDpr);
    }
  };
  A.DomManager.prototype = {
    setScene$1(sceneElement) {
      var t1;
      type$.JavaScriptObject._as(sceneElement);
      t1 = this._lastSceneElement;
      if (sceneElement !== t1) {
        if (t1 != null)
          B._callMethodUnchecked0(t1, "remove", type$.void);
        this._lastSceneElement = sceneElement;
        B._callMethodUnchecked1(this.sceneHost, "append", sceneElement, type$.void);
      }
    }
  };
  A.CustomElementEmbeddingStrategy.prototype = {
    CustomElementEmbeddingStrategy$1(hostElement) {
      var t1 = this.hostElement;
      A.DomElementExtension_clearChildren(t1);
      A.DomElementExtension_setAttribute(t1, "flt-embedding", "custom-element");
    },
    get$globalEventTarget() {
      return this.get$_rootElement();
    },
    get$_rootElement() {
      return this.__CustomElementEmbeddingStrategy__rootElement_F;
    },
    set$_rootElement(value) {
      type$.JavaScriptObject._as(value);
      this.__CustomElementEmbeddingStrategy__rootElement_F !== $ && B.throwLateFieldAI("_rootElement");
      this.__CustomElementEmbeddingStrategy__rootElement_F = value;
    },
    attachViewRoot$1(rootElement) {
      var _s5_ = "style",
        t1 = type$.JavaScriptObject;
      t1._as(rootElement);
      A.DomCSSStyleDeclarationExtension_set_width(B.getProperty(rootElement, _s5_, t1), "100%");
      A.DomCSSStyleDeclarationExtension_set_height(B.getProperty(rootElement, _s5_, t1), "100%");
      A.DomCSSStyleDeclarationExtension_set_display(B.getProperty(rootElement, _s5_, t1), "block");
      A.DomCSSStyleDeclarationExtension_set_overflow(B.getProperty(rootElement, _s5_, t1), "hidden");
      A.DomCSSStyleDeclarationExtension_set_position(B.getProperty(rootElement, _s5_, t1), "relative");
      A.DomCSSStyleDeclarationExtension_set_touchAction(B.getProperty(rootElement, _s5_, t1), "none");
      B._callMethodUnchecked1(this.hostElement, "appendChild", rootElement, t1);
      A.registerElementForCleanup(rootElement);
      this.set$_rootElement(rootElement);
    },
    $isEmbeddingStrategy: 1,
    get$hostElement() {
      return this.hostElement;
    }
  };
  A.FullPageEmbeddingStrategy.prototype = {
    FullPageEmbeddingStrategy$0() {
      A.DomElementExtension_setAttribute(this.hostElement, "flt-embedding", "full-page");
      this._applyViewportMeta$0();
      this._setHostStyles$0();
    },
    get$globalEventTarget() {
      return self.window;
    },
    attachViewRoot$1(rootElement) {
      var t1 = type$.JavaScriptObject;
      t1._as(rootElement);
      t1 = B.getProperty(rootElement, "style", t1);
      A.DomCSSStyleDeclarationExtension_set_position(t1, "absolute");
      A.DomCSSStyleDeclarationExtension_set_top(t1, "0");
      A.DomCSSStyleDeclarationExtension_set_right(t1, "0");
      A.DomCSSStyleDeclarationExtension_set_bottom(t1, "0");
      A.DomCSSStyleDeclarationExtension_set_left(t1, "0");
      B._callMethodUnchecked1(this.hostElement, "append", rootElement, type$.void);
      A.registerElementForCleanup(rootElement);
    },
    _setHostStyles$0() {
      var _s1_ = "0", _s4_ = "none",
        t1 = this.hostElement;
      A.setElementStyle(t1, "position", "fixed");
      A.setElementStyle(t1, "top", _s1_);
      A.setElementStyle(t1, "right", _s1_);
      A.setElementStyle(t1, "bottom", _s1_);
      A.setElementStyle(t1, "left", _s1_);
      A.setElementStyle(t1, "overflow", "hidden");
      A.setElementStyle(t1, "padding", _s1_);
      A.setElementStyle(t1, "margin", _s1_);
      A.setElementStyle(t1, "user-select", _s4_);
      A.setElementStyle(t1, "-webkit-user-select", _s4_);
      A.setElementStyle(t1, "touch-action", _s4_);
    },
    _applyViewportMeta$0() {
      var t3, viewportMeta,
        t1 = type$.nullable_JavaScriptObject,
        t2 = B.getProperty(self.document, "head", t1);
      t2.toString;
      t2 = J.get$iterator$ax(A.DomElementExtension_querySelectorAll(t2, 'meta[name="viewport"]'));
      t3 = type$.void;
      for (; B.boolConversionCheck(t2.moveNext$0());)
        B._callMethodUnchecked0(t2.get$current(), "remove", t3);
      viewportMeta = A.createDomHTMLMetaElement();
      A.DomElementExtension_setAttribute(viewportMeta, "flt-viewport", "");
      A.DomHTMLMetaElementExtension_set_name(viewportMeta, "viewport");
      A.DomHTMLMetaElementExtension_set_content(viewportMeta, "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no");
      t1 = B.getProperty(self.document, "head", t1);
      t1.toString;
      B._callMethodUnchecked1(t1, "append", viewportMeta, t3);
      A.registerElementForCleanup(viewportMeta);
    },
    $isEmbeddingStrategy: 1,
    get$hostElement() {
      return this.hostElement;
    }
  };
  A.FlutterViewManager.prototype = {
    get$onViewCreated() {
      return this._onViewCreatedController.get$stream();
    },
    get$onViewDisposed() {
      return this._onViewDisposedController.get$stream();
    },
    get$views() {
      return this._viewData.get$values();
    },
    $index(_, viewId) {
      return J.$index$asx(this._viewData, B._asInt(viewId));
    },
    createAndRegisterView$1(jsViewOptions) {
      var view;
      type$.JavaScriptObject._as(jsViewOptions);
      view = A._EngineFlutterViewImpl$(this._dispatcher, A.JsFlutterViewOptionsExtension_get_hostElement(jsViewOptions), A.JsFlutterViewOptionsExtension_get_viewConstraints(jsViewOptions));
      this.registerView$2$jsViewOptions(view, jsViewOptions);
      return view;
    },
    registerView$2$jsViewOptions(view, jsViewOptions) {
      var viewId;
      type$.EngineFlutterView._as(view);
      type$.nullable_JavaScriptObject._as(jsViewOptions);
      viewId = view.viewId;
      J.$indexSet$ax(this._viewData, viewId, view);
      if (jsViewOptions != null)
        J.$indexSet$ax(this._jsViewOptions, viewId, jsViewOptions);
      J.add$1$ax(this._onViewCreatedController, viewId);
      return view;
    },
    registerView$1(view) {
      return this.registerView$2$jsViewOptions(view, null);
    },
    disposeAndUnregisterView$1(viewId) {
      var view, options;
      B._asInt(viewId);
      view = J.$index$asx(this._viewData, viewId);
      if (view == null)
        return null;
      options = this.unregisterView$1(viewId);
      view.dispose$0();
      return options;
    },
    unregisterView$1(viewId) {
      var jsViewOptions;
      B._asInt(viewId);
      J.remove$1$ax(this._viewData, viewId);
      jsViewOptions = J.remove$1$ax(this._jsViewOptions, viewId);
      J.add$1$ax(this._onViewDisposedController, viewId);
      return jsViewOptions;
    },
    findViewForElement$1(element) {
      var viewRoot, viewIdAttribute, viewId, _null = null;
      type$.nullable_JavaScriptObject._as(element);
      viewRoot = element == null ? _null : A.DomElementExtension_closest(element, "flutter-view[flt-view-id]");
      viewIdAttribute = viewRoot == null ? _null : A.DomElementExtension_getAttribute(viewRoot, "flt-view-id");
      viewId = viewIdAttribute == null ? _null : A.int_parse(viewIdAttribute, _null);
      return viewId == null ? _null : J.$index$asx(this._viewData, viewId);
    },
    dispose$0() {
      var _this = this;
      J.forEach$1$ax(J.toList$0$ax(_this._viewData.get$keys()), _this.get$disposeAndUnregisterView());
      _this._onViewCreatedController.close$0();
      _this._onViewDisposedController.close$0();
    }
  };
  A.GlobalHtmlAttributes.prototype = {
    applyAttributes$4$autoDetectRenderer$buildMode$rendererTag$viewId(autoDetectRenderer, buildMode, rendererTag, viewId) {
      var rendererSelection, t1;
      B._asInt(viewId);
      B._asBool(autoDetectRenderer);
      B._asString(rendererTag);
      B._asString(buildMode);
      A.DomElementExtension_setAttribute(this.rootElement, "flt-view-id", viewId);
      rendererSelection = autoDetectRenderer ? "auto-selected" : "requested explicitly";
      t1 = this.hostElement;
      A.DomElementExtension_setAttribute(t1, "flt-renderer", rendererTag + " (" + rendererSelection + ")");
      A.DomElementExtension_setAttribute(t1, "flt-build-mode", buildMode);
      A.DomElementExtension_setAttribute(t1, "spellcheck", "false");
    }
  };
  A.EngineFlutterView.prototype = {
    EngineFlutterView$_$4$viewConstraints(viewId, platformDispatcher, hostElement, viewConstraints) {
      var t1, t2, _this = this;
      _this.embeddingStrategy.attachViewRoot$1(_this.get$dom().rootElement);
      _this.set$pointerBinding(A.PointerBinding$(_this));
      _this.set$_resizeSubscription(_this.get$onResize().listen$1(_this.get$_didResize()));
      t1 = _this.get$_globalHtmlAttributes();
      t2 = A.renderer().get$rendererTag();
      t1.applyAttributes$4$autoDetectRenderer$buildMode$rendererTag$viewId(true, A.buildMode(), t2, _this.viewId);
      A.registerHotRestartListener(_this.get$dispose());
    },
    get$_resizeSubscription() {
      return this.__EngineFlutterView__resizeSubscription_F;
    },
    set$_resizeSubscription(value) {
      type$.StreamSubscription_nullable_Size._as(value);
      this.__EngineFlutterView__resizeSubscription_F !== $ && B.throwLateFieldAI("_resizeSubscription");
      this.set$__EngineFlutterView__resizeSubscription_F(value);
    },
    dispose$0() {
      var _this = this;
      if (B.boolConversionCheck(_this.isDisposed))
        return;
      _this.isDisposed = true;
      _this.get$_resizeSubscription().cancel$0();
      _this.dimensionsProvider.close$0();
      _this.get$pointerBinding().dispose$0();
      B._callMethodUnchecked0(_this.get$dom().rootElement, "remove", type$.void);
      A.renderer().clearFragmentProgramCache$0();
      _this.get$semantics().reset$0();
    },
    render$2$size(scene, size) {
      type$.Scene._as(scene);
      type$.nullable_Size._as(size);
      if (size != null)
        this.resize$1(size);
      this.platformDispatcher.render$2(scene, this);
    },
    updateSemantics$1(update) {
      type$.SemanticsUpdate._as(update);
      this.get$semantics().updateSemantics$1(update);
    },
    get$_globalHtmlAttributes() {
      var t1, result, _this = this,
        value = _this.__EngineFlutterView__globalHtmlAttributes_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        t1 = _this.get$dom().rootElement;
        result = A.GlobalHtmlAttributes$(_this.embeddingStrategy.get$hostElement(), t1);
        _this.__EngineFlutterView__globalHtmlAttributes_FI !== $ && B.throwLateFieldADI("_globalHtmlAttributes");
        _this.__EngineFlutterView__globalHtmlAttributes_FI = result;
        value = result;
      }
      return value;
    },
    get$mouseCursor() {
      var result, _this = this,
        value = _this.__EngineFlutterView_mouseCursor_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.MouseCursor$(_this.get$dom().rootElement);
        _this.__EngineFlutterView_mouseCursor_FI !== $ && B.throwLateFieldADI("mouseCursor");
        _this.__EngineFlutterView_mouseCursor_FI = result;
        value = result;
      }
      return value;
    },
    get$contextMenu() {
      var result, _this = this,
        value = _this.__EngineFlutterView_contextMenu_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.ContextMenu$(_this.get$dom().rootElement);
        _this.__EngineFlutterView_contextMenu_FI !== $ && B.throwLateFieldADI("contextMenu");
        _this.__EngineFlutterView_contextMenu_FI = result;
        value = result;
      }
      return value;
    },
    get$dom() {
      var result, _this = this,
        value = _this.__EngineFlutterView_dom_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.DomManager_DomManager(_this.get$devicePixelRatio());
        _this.__EngineFlutterView_dom_FI !== $ && B.throwLateFieldADI("dom");
        _this.__EngineFlutterView_dom_FI = result;
        value = result;
      }
      return value;
    },
    get$pointerBinding() {
      return this.__EngineFlutterView_pointerBinding_F;
    },
    set$pointerBinding(value) {
      type$.PointerBinding._as(value);
      this.__EngineFlutterView_pointerBinding_F !== $ && B.throwLateFieldAI("pointerBinding");
      this.__EngineFlutterView_pointerBinding_F = value;
    },
    get$physicalConstraints() {
      var dpr = this.get$devicePixelRatio();
      return J.$mul$ns(A.ViewConstraints_ViewConstraints$fromJs(this._jsViewConstraints, J.$div$n(this.get$physicalSize(), dpr)), dpr);
    },
    get$semantics() {
      var result, _this = this,
        value = _this.__EngineFlutterView_semantics_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A.EngineSemanticsOwner$(_this.get$dom().semanticsHost);
        _this.__EngineFlutterView_semantics_FI !== $ && B.throwLateFieldADI("semantics");
        _this.__EngineFlutterView_semantics_FI = result;
        value = result;
      }
      return value;
    },
    get$physicalSize() {
      var t1 = this._physicalSize;
      if (t1 == null) {
        t1 = this._computePhysicalSize$0();
        this.set$_physicalSize(t1);
      }
      return t1;
    },
    resize$1(newPhysicalSize) {
      var logicalSize = type$.Size._as(newPhysicalSize).$div(0, this.get$devicePixelRatio()),
        t1 = B.getProperty(this.get$dom().rootElement, "style", type$.JavaScriptObject);
      A.DomCSSStyleDeclarationExtension_set_width(t1, B.S(logicalSize.get$width()) + "px");
      A.DomCSSStyleDeclarationExtension_set_height(t1, B.S(logicalSize.get$height()) + "px");
      this._computePhysicalSize$0();
    },
    _computePhysicalSize$0() {
      var t1 = this.dimensionsProvider.computePhysicalSize$0();
      return t1;
    },
    get$viewInsets() {
      return this._viewInsets;
    },
    get$viewPadding() {
      return C.ViewPadding_0_0_0_0;
    },
    get$systemGestureInsets() {
      return C.ViewPadding_0_0_0_0;
    },
    get$padding() {
      return C.ViewPadding_0_0_0_0;
    },
    get$gestureSettings() {
      return C.C_GestureSettings;
    },
    get$displayFeatures() {
      return C.List_empty3;
    },
    get$display() {
      return A.EngineFlutterDisplay_instance();
    },
    get$devicePixelRatio() {
      return this.get$display().get$devicePixelRatio();
    },
    get$onResize() {
      return this.dimensionsProvider.get$onResize();
    },
    _didResize$1(newSize) {
      var newPhysicalSize, _this = this;
      type$.nullable_Size._as(newSize);
      A.StyleManager_scaleSemanticsHost(_this.get$dom().semanticsHost, _this.get$devicePixelRatio());
      newPhysicalSize = _this._computePhysicalSize$0();
      if (B.boolConversionCheck(A.isMobile()) && !B.boolConversionCheck(_this._isRotation$1(newPhysicalSize)) && B.boolConversionCheck($.$get$textEditing().isEditing))
        _this._computeOnScreenKeyboardInsets$1(true);
      else {
        _this._physicalSize = newPhysicalSize;
        _this._computeOnScreenKeyboardInsets$1(false);
      }
      _this.platformDispatcher.invokeOnMetricsChanged$0();
    },
    _isRotation$1(newPhysicalSize) {
      var t1, t2, _this = this;
      type$.Size._as(newPhysicalSize);
      t1 = _this._physicalSize;
      if (t1 != null)
        if (!B.boolConversionCheck(J.$eq$(t1.get$height(), newPhysicalSize.get$height())) && !B.boolConversionCheck(J.$eq$(_this._physicalSize.get$width(), newPhysicalSize.get$width()))) {
          t1 = _this._physicalSize.get$height();
          t2 = _this._physicalSize.get$width();
          if (typeof t1 !== "number")
            return t1.$gt();
          if (typeof t2 !== "number")
            return B.iae(t2);
          if (t1 > t2) {
            t1 = newPhysicalSize.get$height();
            t2 = newPhysicalSize.get$width();
            if (typeof t1 !== "number")
              return t1.$lt();
            if (typeof t2 !== "number")
              return B.iae(t2);
            t2 = t1 < t2;
            t1 = t2;
          } else
            t1 = false;
          if (!t1) {
            t1 = _this._physicalSize.get$width();
            t2 = _this._physicalSize.get$height();
            if (typeof t1 !== "number")
              return t1.$gt();
            if (typeof t2 !== "number")
              return B.iae(t2);
            if (t1 > t2) {
              t1 = newPhysicalSize.get$width();
              t2 = newPhysicalSize.get$height();
              if (typeof t1 !== "number")
                return t1.$lt();
              if (typeof t2 !== "number")
                return B.iae(t2);
              t2 = t1 < t2;
              t1 = t2;
            } else
              t1 = false;
          } else
            t1 = true;
          if (t1)
            return true;
        }
      return false;
    },
    _computeOnScreenKeyboardInsets$1(isEditingOnMobile) {
      B._asBool(isEditingOnMobile);
      this.set$_viewInsets(this.dimensionsProvider.computeKeyboardInsets$2(this._physicalSize.get$height(), isEditingOnMobile));
    },
    set$__EngineFlutterView__resizeSubscription_F(__EngineFlutterView__resizeSubscription_F) {
      this.__EngineFlutterView__resizeSubscription_F = type$.StreamSubscription_nullable_Size._as(__EngineFlutterView__resizeSubscription_F);
    },
    set$_physicalSize(_physicalSize) {
      this._physicalSize = type$.nullable_Size._as(_physicalSize);
    },
    set$_viewInsets(_viewInsets) {
      this._viewInsets = type$.ViewPadding._as(_viewInsets);
    },
    $isFlutterView: 1
  };
  A._EngineFlutterViewImpl.prototype = {};
  A.ViewPadding.prototype = {$isViewPadding0: 1};
  A.ViewConstraints.prototype = {
    $mul(_, factor) {
      var t1, t2, t3, t4, _this = this;
      B._asDouble(factor);
      t1 = _this.minWidth;
      if (typeof t1 !== "number")
        return t1.$mul();
      t2 = _this.maxWidth;
      if (typeof t2 !== "number")
        return t2.$mul();
      t3 = _this.minHeight;
      if (typeof t3 !== "number")
        return t3.$mul();
      t4 = _this.maxHeight;
      if (typeof t4 !== "number")
        return t4.$mul();
      return A.ViewConstraints$(t4 * factor, t2 * factor, t3 * factor, t1 * factor);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.ViewConstraints && B.boolConversionCheck(J.$eq$(other.minWidth, _this.minWidth)) && B.boolConversionCheck(J.$eq$(other.maxWidth, _this.maxWidth)) && B.boolConversionCheck(J.$eq$(other.minHeight, _this.minHeight)) && B.boolConversionCheck(J.$eq$(other.maxHeight, _this.maxHeight));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.minWidth, _this.maxWidth, _this.minHeight, _this.maxHeight, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.minWidth,
        t2 = J.getInterceptor$(t1);
      if (B.boolConversionCheck(t2.$eq(t1, 1 / 0)) && B.boolConversionCheck(J.$eq$(_this.minHeight, 1 / 0)))
        return "ViewConstraints(biggest)";
      if (B.boolConversionCheck(t2.$eq(t1, 0)) && B.boolConversionCheck(J.$eq$(_this.maxWidth, 1 / 0)) && B.boolConversionCheck(J.$eq$(_this.minHeight, 0)) && B.boolConversionCheck(J.$eq$(_this.maxHeight, 1 / 0)))
        return "ViewConstraints(unconstrained)";
      t2 = new A.ViewConstraints_toString_describe();
      return "ViewConstraints(" + t2.call$3(t1, _this.maxWidth, "w") + ", " + t2.call$3(_this.minHeight, _this.maxHeight, "h") + ")";
    },
    $isViewConstraints0: 1
  };
  A._DefaultTextEditingStrategy_Object_CompositionAwareMixin.prototype = {$isCompositionAwareMixin: 1};
  A._DomCanvas_EngineCanvas_SaveElementStackTracking.prototype = {$isSaveElementStackTracking: 1};
  A._LayoutFragment__CombinedFragment__FragmentMetrics.prototype = {$is_FragmentMetrics: 1};
  A._LayoutFragment__CombinedFragment__FragmentMetrics__FragmentPosition.prototype = {$is_FragmentMetrics: 1, $is_FragmentPosition: 1};
  A._LayoutFragment__CombinedFragment__FragmentMetrics__FragmentPosition__FragmentBox.prototype = {$is_FragmentMetrics: 1, $is_FragmentPosition: 1, $is_FragmentBox: 1};
  A._PersistedClipRRect_PersistedContainerSurface__DomClip.prototype = {
    adoptElements$1(oldSurface) {
      type$._DomClip._as(oldSurface);
      this.super$PersistedSurface$adoptElements(oldSurface);
      this.set$_childContainer(oldSurface._DomClip__childContainer);
      oldSurface._DomClip__childContainer = null;
    },
    discard$0() {
      this.super$PersistedContainerSurface$discard();
      this._DomClip__childContainer = null;
    },
    $is_DomClip: 1
  };
  A._PersistedClipRect_PersistedContainerSurface__DomClip.prototype = {
    adoptElements$1(oldSurface) {
      type$._DomClip._as(oldSurface);
      this.super$PersistedSurface$adoptElements(oldSurface);
      this.set$_childContainer(oldSurface._DomClip__childContainer);
      oldSurface._DomClip__childContainer = null;
    },
    discard$0() {
      this.super$PersistedContainerSurface$discard();
      this._DomClip__childContainer = null;
    },
    $is_DomClip: 1
  };
  A.__PointerAdapter__BaseAdapter__WheelEventListenerMixin.prototype = {$is_WheelEventListenerMixin: 1};
  A.ConstantSet.prototype = {
    clear$0(_) {
      A.ConstantSet__throwUnmodifiable();
    },
    add$1(_, value) {
      B._instanceType(this)._precomputed1._as(value);
      A.ConstantSet__throwUnmodifiable();
    },
    addAll$1(_, elements) {
      B._instanceType(this)._eval$1("Iterable<1>")._as(elements);
      A.ConstantSet__throwUnmodifiable();
    },
    remove$1(_, value) {
      A.ConstantSet__throwUnmodifiable();
    },
    removeAll$1(elements) {
      type$.Iterable_nullable_Object._as(elements);
      A.ConstantSet__throwUnmodifiable();
    },
    removeWhere$1(_, test) {
      B._instanceType(this)._eval$1("bool(1)")._as(test);
      A.ConstantSet__throwUnmodifiable();
    }
  };
  A.ConstantStringSet.prototype = {
    get$length(_) {
      return this.__js_helper$_length;
    },
    get$isEmpty(_) {
      return J.$eq$(this.__js_helper$_length, 0);
    },
    get$isNotEmpty(_) {
      return !B.boolConversionCheck(this.get$isEmpty(0));
    },
    get$_keys() {
      var keys = this.$keys;
      if (keys == null) {
        keys = B._keysFromIndex(this._jsIndex);
        this._setKeys$1(keys);
      }
      return keys;
    },
    _setKeys$1(keys) {
      this.$keys = keys;
      return this;
    },
    get$iterator(_) {
      return B._KeysOrValuesOrElementsIterator$(this.get$_keys(), this.$ti._precomputed1);
    },
    contains$1(_, key) {
      if (typeof key != "string")
        return false;
      if ("__proto__" === key)
        return false;
      return B.jsHasOwnProperty(this._jsIndex, key);
    },
    toSet$0(_) {
      return B.LinkedHashSet_LinkedHashSet$of(this, this.$ti._precomputed1);
    }
  };
  A.GeneralConstantSet.prototype = {
    get$length(_) {
      return J.get$length$asx(this.__js_helper$_elements);
    },
    get$isEmpty(_) {
      return J.$eq$(this.get$length(0), 0);
    },
    get$isNotEmpty(_) {
      return !B.boolConversionCheck(this.get$isEmpty(0));
    },
    get$iterator(_) {
      return B._KeysOrValuesOrElementsIterator$(this.__js_helper$_elements, this.$ti._precomputed1);
    },
    _getMap$0() {
      var t1, key, _this = this,
        backingMap = _this.$map;
      if (backingMap == null) {
        t1 = _this.$ti._precomputed1;
        backingMap = B.JsConstantLinkedHashMap$(t1, t1);
        for (t1 = J.get$iterator$ax(_this.__js_helper$_elements); B.boolConversionCheck(t1.moveNext$0());) {
          key = t1.get$current();
          backingMap.$indexSet(0, key, key);
        }
        _this.$map = backingMap;
      }
      return backingMap;
    },
    contains$1(_, key) {
      return this._getMap$0().containsKey$1(key);
    },
    toSet$0(_) {
      return B.LinkedHashSet_LinkedHashSet$of(this, this.$ti._precomputed1);
    }
  };
  A.LineCharProperty.prototype = {
    _enumToString$0() {
      return "LineCharProperty." + B.S(this._core$_name);
    }
  };
  A.WordCharProperty.prototype = {
    _enumToString$0() {
      return "WordCharProperty." + B.S(this._core$_name);
    }
  };
  A._BroadcastStream.prototype = {};
  A._BroadcastSubscription.prototype = {
    _BroadcastSubscription$5(controller, onData, onError, onDone, cancelOnError, $T) {
      var _this = this;
      _this.set$_async$_previous(_this);
      _this.set$_async$_next(_this);
    },
    _expectsEvent$1(eventId) {
      var t1;
      B._asInt(eventId);
      t1 = this._eventState;
      if (typeof t1 !== "number")
        return t1.$and();
      return (t1 & 1) === eventId;
    },
    _toggleEventId$0() {
      var t1 = this._eventState;
      if (typeof t1 !== "number")
        return t1.$xor();
      this._eventState = (t1 ^ 1) >>> 0;
    },
    get$_isFiring() {
      var t1 = this._eventState;
      if (typeof t1 !== "number")
        return t1.$and();
      return (t1 & 2) !== 0;
    },
    _setRemoveAfterFiring$0() {
      var t1 = this._eventState;
      if (typeof t1 !== "number")
        return t1.$or();
      this._eventState = (t1 | 4) >>> 0;
    },
    get$_removeAfterFiring() {
      var t1 = this._eventState;
      if (typeof t1 !== "number")
        return t1.$and();
      return (t1 & 4) !== 0;
    },
    _onPause$0() {
    },
    _onResume$0() {
    },
    set$_async$_next(_next) {
      this._async$_next = this.$ti._eval$1("_BroadcastSubscription<1>?")._as(_next);
    },
    set$_async$_previous(_previous) {
      this._async$_previous = this.$ti._eval$1("_BroadcastSubscription<1>?")._as(_previous);
    }
  };
  A._BroadcastStreamController.prototype = {
    get$stream() {
      return A._BroadcastStream$(this, B._instanceType(this)._precomputed1);
    },
    get$isClosed() {
      var t1 = this._state;
      if (typeof t1 !== "number")
        return t1.$and();
      return (t1 & 4) !== 0;
    },
    get$_hasOneListener() {
      var t1 = this._firstSubscription,
        t2 = this._lastSubscription;
      return t1 == null ? t2 == null : t1 === t2;
    },
    get$_isFiring() {
      var t1 = this._state;
      if (typeof t1 !== "number")
        return t1.$and();
      return (t1 & 2) !== 0;
    },
    get$_mayAddEvent() {
      var t1 = this._state;
      if (typeof t1 !== "number")
        return t1.$lt();
      return t1 < 4;
    },
    _ensureDoneFuture$0() {
      var t1 = this._doneFuture;
      return t1 == null ? this._doneFuture = B._Future$(type$.void) : t1;
    },
    get$_isEmpty() {
      return this._firstSubscription == null;
    },
    _addListener$1(subscription) {
      var t1, oldLast, _this = this;
      B._instanceType(_this)._eval$1("_BroadcastSubscription<1>")._as(subscription);
      t1 = _this._state;
      if (typeof t1 !== "number")
        return t1.$and();
      subscription._eventState = t1 & 1;
      oldLast = _this._lastSubscription;
      _this.set$_lastSubscription(subscription);
      subscription.set$_async$_next(null);
      subscription.set$_async$_previous(oldLast);
      if (oldLast == null)
        _this.set$_firstSubscription(subscription);
      else
        oldLast.set$_async$_next(subscription);
    },
    _removeListener$1(subscription) {
      var previous, next;
      B._instanceType(this)._eval$1("_BroadcastSubscription<1>")._as(subscription);
      previous = subscription._async$_previous;
      next = subscription._async$_next;
      if (previous == null)
        this.set$_firstSubscription(next);
      else
        previous.set$_async$_next(next);
      if (next == null)
        this.set$_lastSubscription(previous);
      else
        next.set$_async$_previous(previous);
      subscription.set$_async$_previous(subscription);
      subscription.set$_async$_next(subscription);
    },
    _subscribe$4(onData, onError, onDone, cancelOnError) {
      var subscription, t2, _this = this,
        t1 = B._instanceType(_this);
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_Function._as(onError);
      type$.nullable_void_Function._as(onDone);
      B._asBool(cancelOnError);
      if (B.boolConversionCheck(_this.get$isClosed()))
        return A._DoneStreamSubscription$(onDone, t1._precomputed1);
      subscription = A._BroadcastSubscription$(_this, onData, onError, onDone, cancelOnError, t1._precomputed1);
      _this._addListener$1(subscription);
      t1 = _this._firstSubscription;
      t2 = _this._lastSubscription;
      if (t1 == null ? t2 == null : t1 === t2)
        A._runGuarded(_this.onListen);
      return subscription;
    },
    _recordCancel$1(sub) {
      var _this = this,
        t1 = B._instanceType(_this);
      sub = t1._eval$1("_BroadcastSubscription<1>")._as(t1._eval$1("StreamSubscription<1>")._as(sub));
      if (sub._async$_next === sub)
        return null;
      if (B.boolConversionCheck(sub.get$_isFiring()))
        sub._setRemoveAfterFiring$0();
      else {
        _this._removeListener$1(sub);
        if (!B.boolConversionCheck(_this.get$_isFiring()) && B.boolConversionCheck(_this.get$_isEmpty()))
          _this._callOnCancel$0();
      }
      return null;
    },
    _recordPause$1(subscription) {
      B._instanceType(this)._eval$1("StreamSubscription<1>")._as(subscription);
    },
    _recordResume$1(subscription) {
      B._instanceType(this)._eval$1("StreamSubscription<1>")._as(subscription);
    },
    _addEventError$0() {
      if (B.boolConversionCheck(this.get$isClosed()))
        return B.StateError$("Cannot add new events after calling close");
      return B.StateError$("Cannot add new events while doing an addStream");
    },
    add$1(_, data) {
      var _this = this;
      B._instanceType(_this)._precomputed1._as(data);
      if (!B.boolConversionCheck(_this.get$_mayAddEvent()))
        throw B.wrapException(_this._addEventError$0());
      _this._sendData$1(data);
    },
    close$0() {
      var t1, doneFuture, _this = this;
      if (B.boolConversionCheck(_this.get$isClosed())) {
        t1 = _this._doneFuture;
        t1.toString;
        return t1;
      }
      if (!B.boolConversionCheck(_this.get$_mayAddEvent()))
        throw B.wrapException(_this._addEventError$0());
      t1 = _this._state;
      if (typeof t1 !== "number")
        return t1.$or();
      _this._state = (t1 | 4) >>> 0;
      doneFuture = _this._ensureDoneFuture$0();
      _this._sendDone$0();
      return doneFuture;
    },
    _forEachListener$1(action) {
      var t1, id, subscription, next, _this = this;
      B._instanceType(_this)._eval$1("~(_BufferingStreamSubscription<1>)")._as(action);
      if (B.boolConversionCheck(_this.get$_isFiring()))
        throw B.wrapException(B.StateError$(string$.Cannot));
      if (B.boolConversionCheck(_this.get$_isEmpty()))
        return;
      t1 = _this._state;
      if (typeof t1 !== "number")
        return t1.$and();
      id = t1 & 1;
      _this._state = (t1 ^ 3) >>> 0;
      subscription = _this._firstSubscription;
      for (; subscription != null;)
        if (B.boolConversionCheck(subscription._expectsEvent$1(id))) {
          t1 = subscription._eventState;
          if (typeof t1 !== "number")
            return t1.$or();
          subscription._eventState = (t1 | 2) >>> 0;
          action.call$1(subscription);
          subscription._toggleEventId$0();
          next = subscription._async$_next;
          if (B.boolConversionCheck(subscription.get$_removeAfterFiring()))
            _this._removeListener$1(subscription);
          t1 = subscription._eventState;
          if (typeof t1 !== "number")
            return t1.$and();
          subscription._eventState = (t1 & 4294967293) >>> 0;
          subscription = next;
        } else
          subscription = subscription._async$_next;
      t1 = _this._state;
      if (typeof t1 !== "number")
        return t1.$and();
      _this._state = (t1 & 4294967293) >>> 0;
      if (B.boolConversionCheck(_this.get$_isEmpty()))
        _this._callOnCancel$0();
    },
    _callOnCancel$0() {
      if (B.boolConversionCheck(this.get$isClosed())) {
        var t1 = this._doneFuture;
        t1.toString;
        if (B.boolConversionCheck(t1.get$_mayComplete()))
          t1._asyncComplete$1(null);
      }
      A._runGuarded(this.onCancel);
    },
    set$_firstSubscription(_firstSubscription) {
      this._firstSubscription = B._instanceType(this)._eval$1("_BroadcastSubscription<1>?")._as(_firstSubscription);
    },
    set$_lastSubscription(_lastSubscription) {
      this._lastSubscription = B._instanceType(this)._eval$1("_BroadcastSubscription<1>?")._as(_lastSubscription);
    },
    $isEventSink: 1,
    $isStreamConsumer: 1,
    $isStreamSink: 1,
    $isStreamController: 1,
    $is_StreamControllerLifecycle: 1,
    $is_StreamControllerBase: 1,
    $is_EventSink: 1,
    $is_EventDispatch: 1,
    $isSink: 1
  };
  A._SyncBroadcastStreamController.prototype = {
    get$_mayAddEvent() {
      return B.boolConversionCheck(A._BroadcastStreamController.prototype.get$_mayAddEvent.call(this)) && !B.boolConversionCheck(this.get$_isFiring());
    },
    _addEventError$0() {
      if (B.boolConversionCheck(this.get$_isFiring()))
        return B.StateError$(string$.Cannot);
      return this.super$_BroadcastStreamController$_addEventError();
    },
    _sendData$1(data) {
      var t2, firstSubscription, _this = this,
        t1 = _this.$ti;
      t1._precomputed1._as(data);
      if (B.boolConversionCheck(_this.get$_isEmpty()))
        return;
      if (B.boolConversionCheck(_this.get$_hasOneListener())) {
        t2 = _this._state;
        if (typeof t2 !== "number")
          return t2.$or();
        _this._state = (t2 | 2) >>> 0;
        firstSubscription = _this._firstSubscription;
        (firstSubscription == null ? t1._eval$1("_BroadcastSubscription<1>")._as(firstSubscription) : firstSubscription)._async$_add$1(data);
        t1 = _this._state;
        if (typeof t1 !== "number")
          return t1.$and();
        _this._state = (t1 & 4294967293) >>> 0;
        if (B.boolConversionCheck(_this.get$_isEmpty()))
          _this._callOnCancel$0();
        return;
      }
      _this._forEachListener$1(new A._SyncBroadcastStreamController__sendData_closure(_this, data));
    },
    _sendDone$0() {
      var _this = this;
      if (!B.boolConversionCheck(_this.get$_isEmpty()))
        _this._forEachListener$1(new A._SyncBroadcastStreamController__sendDone_closure(_this));
      else
        _this._doneFuture._asyncComplete$1(null);
    },
    $isSynchronousStreamController: 1
  };
  A._AsyncBroadcastStreamController.prototype = {
    _sendData$1(data) {
      var subscription,
        t1 = this.$ti._precomputed1;
      t1._as(data);
      for (subscription = this._firstSubscription; subscription != null; subscription = subscription._async$_next)
        subscription._addPending$1(A._DelayedData$(data, t1));
    },
    _sendDone$0() {
      if (!B.boolConversionCheck(this.get$_isEmpty()))
        for (var subscription = this._firstSubscription; subscription != null; subscription = subscription._async$_next)
          subscription._addPending$1(C.C__DelayedDone);
      else
        this._doneFuture._asyncComplete$1(null);
    }
  };
  A._ControllerStream.prototype = {
    _createSubscription$4(onData, onError, onDone, cancelOnError) {
      return this._controller._subscribe$4(B._instanceType(this)._eval$1("~(1)?")._as(onData), type$.nullable_Function._as(onError), type$.nullable_void_Function._as(onDone), B._asBool(cancelOnError));
    },
    get$hashCode(_) {
      var t1 = J.get$hashCode$(this._controller);
      if (typeof t1 !== "number")
        return t1.$xor();
      return (t1 ^ 892482866) >>> 0;
    },
    $eq(_, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (other instanceof A._ControllerStream) {
        t1 = other._controller;
        t2 = this._controller;
        t2 = t1 == null ? t2 == null : t1 === t2;
        t1 = t2;
      } else
        t1 = false;
      return t1;
    }
  };
  A._ControllerSubscription.prototype = {
    _onCancel$0() {
      return this._controller._recordCancel$1(this);
    },
    _onPause$0() {
      this._controller._recordPause$1(this);
    },
    _onResume$0() {
      this._controller._recordResume$1(this);
    }
  };
  A._BufferingStreamSubscription.prototype = {
    _setPendingEvents$1(pendingEvents) {
      var t1, _this = this;
      B._instanceType(_this)._eval$1("_PendingEvents<1>?")._as(pendingEvents);
      if (pendingEvents == null)
        return;
      _this.set$_pending(pendingEvents);
      if (!B.boolConversionCheck(pendingEvents.get$isEmpty(0))) {
        t1 = _this._state;
        if (typeof t1 !== "number")
          return t1.$or();
        _this._state = (t1 | 128) >>> 0;
        pendingEvents.schedule$1(_this);
      }
    },
    cancel$0() {
      var _this = this,
        t1 = _this._state;
      if (typeof t1 !== "number")
        return t1.$and();
      _this._state = (t1 & 4294967279) >>> 0;
      if (!B.boolConversionCheck(_this.get$_isCanceled()))
        _this._cancel$0();
      t1 = _this._cancelFuture;
      return t1 == null ? $.$get$Future__nullFuture() : t1;
    },
    get$_isInputPaused() {
      var t1 = this._state;
      if (typeof t1 !== "number")
        return t1.$and();
      return (t1 & 4) !== 0;
    },
    get$_isCanceled() {
      var t1 = this._state;
      if (typeof t1 !== "number")
        return t1.$and();
      return (t1 & 8) !== 0;
    },
    get$_waitsForCancel() {
      var t1 = this._state;
      if (typeof t1 !== "number")
        return t1.$and();
      return (t1 & 16) !== 0;
    },
    get$_inCallback() {
      var t1 = this._state;
      if (typeof t1 !== "number")
        return t1.$and();
      return (t1 & 64) !== 0;
    },
    get$_hasPending() {
      var t1 = this._state;
      if (typeof t1 !== "number")
        return t1.$and();
      return (t1 & 128) !== 0;
    },
    get$_isPaused() {
      var t1 = this._state;
      if (typeof t1 !== "number")
        return t1.$ge();
      return t1 >= 256;
    },
    get$_canFire() {
      var t1 = this._state;
      if (typeof t1 !== "number")
        return t1.$lt();
      return t1 < 64;
    },
    get$_mayResumeInput() {
      if (!B.boolConversionCheck(this.get$_isPaused())) {
        var t1 = this._pending;
        t1 = t1 == null ? null : J.get$isEmpty$asx(t1);
        t1 = B.boolConversionCheck(t1 == null ? true : t1);
      } else
        t1 = false;
      return t1;
    },
    _cancel$0() {
      var _this = this,
        t1 = _this._state;
      if (typeof t1 !== "number")
        return t1.$or();
      _this._state = (t1 | 8) >>> 0;
      if (B.boolConversionCheck(_this.get$_hasPending()))
        _this._pending.cancelSchedule$0();
      if (!B.boolConversionCheck(_this.get$_inCallback()))
        _this.set$_pending(null);
      _this.set$_cancelFuture(_this._onCancel$0());
    },
    _async$_add$1(data) {
      var _this = this,
        t1 = B._instanceType(_this)._precomputed1;
      t1._as(data);
      if (B.boolConversionCheck(_this.get$_isCanceled()))
        return;
      if (B.boolConversionCheck(_this.get$_canFire()))
        _this._sendData$1(data);
      else
        _this._addPending$1(A._DelayedData$(data, t1));
    },
    _close$0() {
      var t1, _this = this;
      if (B.boolConversionCheck(_this.get$_isCanceled()))
        return;
      t1 = _this._state;
      if (typeof t1 !== "number")
        return t1.$or();
      _this._state = (t1 | 2) >>> 0;
      if (B.boolConversionCheck(_this.get$_canFire()))
        _this._sendDone$0();
      else
        _this._addPending$1(C.C__DelayedDone);
    },
    _onPause$0() {
    },
    _onResume$0() {
    },
    _onCancel$0() {
      return null;
    },
    _addPending$1($event) {
      var pending, t1, _this = this;
      type$._DelayedEvent_dynamic._as($event);
      pending = _this._pending;
      if (pending == null) {
        pending = A._PendingEvents$(B._instanceType(_this)._precomputed1);
        _this.set$_pending(pending);
      }
      pending.add$1(0, $event);
      if (!B.boolConversionCheck(_this.get$_hasPending())) {
        t1 = _this._state;
        if (typeof t1 !== "number")
          return t1.$or();
        _this._state = (t1 | 128) >>> 0;
        if (!B.boolConversionCheck(_this.get$_isPaused()))
          pending.schedule$1(_this);
      }
    },
    _sendData$1(data) {
      var wasInputPaused, t2, _this = this,
        t1 = B._instanceType(_this)._precomputed1;
      t1._as(data);
      wasInputPaused = _this.get$_isInputPaused();
      t2 = _this._state;
      if (typeof t2 !== "number")
        return t2.$or();
      _this._state = (t2 | 64) >>> 0;
      _this._zone.runUnaryGuarded$1$2(_this._async$_onData, data, t1);
      t1 = _this._state;
      if (typeof t1 !== "number")
        return t1.$and();
      _this._state = (t1 & 4294967231) >>> 0;
      _this._checkState$1(wasInputPaused);
    },
    _sendDone$0() {
      var t2, cancelFuture, _this = this,
        t1 = new A._BufferingStreamSubscription__sendDone_sendDone(_this);
      _this._cancel$0();
      t2 = _this._state;
      if (typeof t2 !== "number")
        return t2.$or();
      _this._state = (t2 | 16) >>> 0;
      cancelFuture = _this._cancelFuture;
      if (cancelFuture != null && cancelFuture !== $.$get$Future__nullFuture())
        cancelFuture.whenComplete$1(t1);
      else
        t1.call$0();
    },
    _guardCallback$1(callback) {
      var wasInputPaused, t1, _this = this;
      type$.void_Function._as(callback);
      wasInputPaused = _this.get$_isInputPaused();
      t1 = _this._state;
      if (typeof t1 !== "number")
        return t1.$or();
      _this._state = (t1 | 64) >>> 0;
      callback.call$0();
      t1 = _this._state;
      if (typeof t1 !== "number")
        return t1.$and();
      _this._state = (t1 & 4294967231) >>> 0;
      _this._checkState$1(wasInputPaused);
    },
    _checkState$1(wasInputPaused) {
      var t1, isInputPaused, _this = this;
      B._asBool(wasInputPaused);
      if (B.boolConversionCheck(_this.get$_hasPending())) {
        t1 = _this._pending;
        t1.toString;
        t1 = B.boolConversionCheck(J.get$isEmpty$asx(t1));
      } else
        t1 = false;
      if (t1) {
        t1 = _this._state;
        if (typeof t1 !== "number")
          return t1.$and();
        _this._state = (t1 & 4294967167) >>> 0;
        if (B.boolConversionCheck(_this.get$_isInputPaused()) && B.boolConversionCheck(_this.get$_mayResumeInput())) {
          t1 = _this._state;
          if (typeof t1 !== "number")
            return t1.$and();
          _this._state = (t1 & 4294967291) >>> 0;
        }
      }
      for (; true; wasInputPaused = isInputPaused) {
        if (B.boolConversionCheck(_this.get$_isCanceled())) {
          _this.set$_pending(null);
          return;
        }
        isInputPaused = _this.get$_isInputPaused();
        if (wasInputPaused === isInputPaused)
          break;
        t1 = _this._state;
        if (typeof t1 !== "number")
          return t1.$xor();
        _this._state = (t1 ^ 64) >>> 0;
        if (isInputPaused)
          _this._onPause$0();
        else
          _this._onResume$0();
        t1 = _this._state;
        if (typeof t1 !== "number")
          return t1.$and();
        _this._state = (t1 & 4294967231) >>> 0;
      }
      if (B.boolConversionCheck(_this.get$_hasPending()) && !B.boolConversionCheck(_this.get$_isPaused()))
        _this._pending.schedule$1(_this);
    },
    set$_cancelFuture(_cancelFuture) {
      this._cancelFuture = type$.nullable_Future_dynamic._as(_cancelFuture);
    },
    set$_pending(_pending) {
      this._pending = B._instanceType(this)._eval$1("_PendingEvents<1>?")._as(_pending);
    },
    $isStreamSubscription: 1,
    $is_EventSink: 1,
    $is_EventDispatch: 1
  };
  A._StreamImpl.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var subscription;
      B._instanceType(this)._eval$1("~(1)?")._as(onData);
      type$.nullable_Function._as(onError);
      type$.nullable_void_Function._as(onDone);
      B._asBoolQ(cancelOnError);
      subscription = this._createSubscription$4(onData, onError, onDone, cancelOnError === true);
      this._onListen$1(subscription);
      return subscription;
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    _onListen$1(subscription) {
      type$.StreamSubscription_dynamic._as(subscription);
    }
  };
  A._DelayedEvent.prototype = {
    set$next(next) {
      this.next = type$.nullable__DelayedEvent_dynamic._as(next);
    },
    get$next() {
      return this.next;
    }
  };
  A._DelayedData.prototype = {
    perform$1(dispatch) {
      this.$ti._eval$1("_EventDispatch<1>")._as(dispatch)._sendData$1(this.value);
    }
  };
  A._DelayedDone.prototype = {
    perform$1(dispatch) {
      type$._EventDispatch_dynamic._as(dispatch)._sendDone$0();
    },
    get$next() {
      return null;
    },
    set$next(_) {
      type$.nullable__DelayedEvent_dynamic._as(_);
      throw B.wrapException(B.StateError$("No events after a done."));
    },
    $is_DelayedEvent: 1
  };
  A._PendingEvents.prototype = {
    get$isScheduled() {
      return J.$eq$(this._state, 1);
    },
    get$_eventScheduled() {
      var t1 = this._state;
      if (typeof t1 !== "number")
        return t1.$ge();
      return t1 >= 1;
    },
    schedule$1(dispatch) {
      var _this = this;
      _this.$ti._eval$1("_EventDispatch<1>")._as(dispatch);
      if (B.boolConversionCheck(_this.get$isScheduled()))
        return;
      if (B.boolConversionCheck(_this.get$_eventScheduled())) {
        _this._state = 1;
        return;
      }
      B.scheduleMicrotask(new A._PendingEvents_schedule_closure(_this, dispatch));
      _this._state = 1;
    },
    cancelSchedule$0() {
      if (B.boolConversionCheck(this.get$isScheduled()))
        this._state = 3;
    },
    get$isEmpty(_) {
      return this.lastPendingEvent == null;
    },
    add$1(_, $event) {
      var lastEvent, _this = this;
      type$._DelayedEvent_dynamic._as($event);
      lastEvent = _this.lastPendingEvent;
      if (lastEvent == null)
        _this.firstPendingEvent = _this.lastPendingEvent = $event;
      else {
        lastEvent.set$next($event);
        _this.lastPendingEvent = $event;
      }
    },
    handleNext$1(dispatch) {
      var t1, nextEvent, _this = this;
      _this.$ti._eval$1("_EventDispatch<1>")._as(dispatch);
      t1 = _this.firstPendingEvent;
      t1.toString;
      nextEvent = t1.get$next();
      _this.firstPendingEvent = nextEvent;
      if (nextEvent == null)
        _this.lastPendingEvent = null;
      t1.perform$1(dispatch);
    }
  };
  A._DoneStreamSubscription.prototype = {
    _DoneStreamSubscription$1(onDone, $T) {
      B.scheduleMicrotask(this.get$_onMicrotask());
      if (onDone != null)
        this.set$_onDone(this._zone.registerCallback$1$1(onDone, type$.void));
    },
    cancel$0() {
      this._state = -1;
      this.set$_onDone(null);
      return $.$get$Future__nullFuture();
    },
    _onMicrotask$0() {
      var unscheduledState, _0_0, _this = this,
        t1 = _this._state;
      if (typeof t1 !== "number")
        return t1.$sub();
      unscheduledState = t1 - 1;
      if (unscheduledState === 0) {
        _this._state = -1;
        _0_0 = _this._onDone;
        if (_0_0 != null) {
          _this.set$_onDone(null);
          _this._zone.runGuarded$1(_0_0);
        }
      } else
        _this._state = unscheduledState;
    },
    set$_onDone(_onDone) {
      this._onDone = type$.nullable_void_Function._as(_onDone);
    },
    $isStreamSubscription: 1
  };
  A._DoubleLinkedQueueEntry.prototype = {
    _link$2(previous, next) {
      var _this = this,
        t1 = B._instanceType(_this)._eval$1("_DoubleLinkedQueueEntry<1>?");
      t1._as(previous);
      t1._as(next);
      _this.set$_nextLink(next);
      _this.set$_previousLink(previous);
      if (previous != null)
        previous.set$_nextLink(_this);
      if (next != null)
        next.set$_previousLink(_this);
    },
    _unlink$0() {
      var _this = this,
        t1 = _this._previousLink;
      if (t1 != null)
        t1.set$_nextLink(_this._nextLink);
      t1 = _this._nextLink;
      if (t1 != null)
        t1.set$_previousLink(_this._previousLink);
      _this.set$_nextLink(null);
      _this.set$_previousLink(null);
    },
    _append$2(element, queue) {
      var t1 = B._instanceType(this),
        t2 = t1._precomputed1;
      A._DoubleLinkedQueueElement$(t2._as(element), t1._eval$1("DoubleLinkedQueue<1>?")._as(queue), t2)._link$2(this, this._nextLink);
    },
    _prepend$2(element, queue) {
      var t1 = B._instanceType(this),
        t2 = t1._precomputed1;
      A._DoubleLinkedQueueElement$(t2._as(element), t1._eval$1("DoubleLinkedQueue<1>?")._as(queue), t2)._link$2(this._previousLink, this);
    },
    set$_previousLink(_previousLink) {
      this._previousLink = B._instanceType(this)._eval$1("_DoubleLinkedQueueEntry<1>?")._as(_previousLink);
    },
    set$_nextLink(_nextLink) {
      this._nextLink = B._instanceType(this)._eval$1("_DoubleLinkedQueueEntry<1>?")._as(_nextLink);
    }
  };
  A._DoubleLinkedQueueElement.prototype = {
    _remove$0() {
      this.set$_collection$_queue(null);
      this._unlink$0();
      return this.element;
    },
    remove$0(_) {
      var t2,
        t1 = this._collection$_queue;
      if (t1 != null) {
        t2 = t1._elementCount;
        if (typeof t2 !== "number")
          return t2.$sub();
        t1.set$_elementCount(t2 - 1);
      }
      return this._remove$0();
    },
    _asNonSentinelEntry$0() {
      return this;
    },
    set$_collection$_queue(_queue) {
      this._collection$_queue = this.$ti._eval$1("DoubleLinkedQueue<1>?")._as(_queue);
    },
    $isDoubleLinkedQueueEntry: 1,
    get$element() {
      return this.element;
    }
  };
  A._DoubleLinkedQueueSentinel.prototype = {
    _DoubleLinkedQueueSentinel$0($E) {
      var _this = this;
      _this.set$_previousLink(_this);
      _this.set$_nextLink(_this);
    },
    _asNonSentinelEntry$0() {
      return null;
    },
    _remove$0() {
      throw B.wrapException(B.IterableElementError_noElement());
    },
    get$element() {
      throw B.wrapException(B.IterableElementError_noElement());
    }
  };
  A.DoubleLinkedQueue.prototype = {
    get$length(_) {
      return this._elementCount;
    },
    addFirst$1(value) {
      var t1, _this = this;
      _this._sentinel._append$2(_this.$ti._precomputed1._as(value), _this);
      t1 = _this._elementCount;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_elementCount(t1 + 1);
    },
    add$1(_, value) {
      var t1, _this = this;
      _this._sentinel._prepend$2(_this.$ti._precomputed1._as(value), _this);
      t1 = _this._elementCount;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_elementCount(t1 + 1);
    },
    addAll$1(_, iterable) {
      var t1, t2, t3, _this = this;
      for (t1 = J.get$iterator$ax(_this.$ti._eval$1("Iterable<1>")._as(iterable)), t2 = _this._sentinel; B.boolConversionCheck(t1.moveNext$0());) {
        t2._prepend$2(t1.get$current(), _this);
        t3 = _this._elementCount;
        if (typeof t3 !== "number")
          return t3.$add();
        _this.set$_elementCount(t3 + 1);
      }
    },
    removeLast$0(_) {
      var result = this._sentinel._previousLink._remove$0(),
        t1 = this._elementCount;
      if (typeof t1 !== "number")
        return t1.$sub();
      this.set$_elementCount(t1 - 1);
      return result;
    },
    removeFirst$0() {
      var result = this._sentinel._nextLink._remove$0(),
        t1 = this._elementCount;
      if (typeof t1 !== "number")
        return t1.$sub();
      this.set$_elementCount(t1 - 1);
      return result;
    },
    get$first(_) {
      return this._sentinel._nextLink.get$element();
    },
    get$last(_) {
      return this._sentinel._previousLink.get$element();
    },
    get$single(_) {
      var t1 = this._sentinel,
        t2 = t1._nextLink;
      t1 = t1._previousLink;
      if (t2 == null ? t1 == null : t2 === t1)
        return t2.get$element();
      throw B.wrapException(B.IterableElementError_tooMany());
    },
    firstEntry$0() {
      return this._sentinel._nextLink._asNonSentinelEntry$0();
    },
    get$isEmpty(_) {
      var t1 = this._sentinel,
        t2 = t1._nextLink;
      return t2 == null ? t1 == null : t2 === t1;
    },
    clear$0(_) {
      var cursor, entry,
        t1 = this._sentinel,
        t2 = t1._nextLink;
      t2.toString;
      for (cursor = t2; true; cursor = t2) {
        entry = cursor._asNonSentinelEntry$0();
        if (entry == null)
          break;
        t2 = cursor._nextLink;
        t2.toString;
        entry.set$_nextLink(null);
        entry.set$_previousLink(null);
        entry.set$_collection$_queue(null);
      }
      t1.set$_nextLink(t1);
      t1.set$_previousLink(t1);
      this._elementCount = 0;
    },
    get$iterator(_) {
      return A._DoubleLinkedQueueIterator$(this, this.$ti._precomputed1);
    },
    toString$0(_) {
      return B.Iterable_iterableToFullString(this, "{", "}");
    },
    set$_elementCount(_elementCount) {
      this._elementCount = B._asInt(_elementCount);
    },
    $isEfficientLengthIterable: 1,
    $isHideEfficientLengthIterable: 1,
    $is_QueueIterable: 1,
    $isQueue: 1
  };
  A._DoubleLinkedQueueIterator.prototype = {
    moveNext$0() {
      var t2, _this = this, _null = null,
        t1 = _this._nextEntry,
        nextElement = t1 == null ? _null : t1._asNonSentinelEntry$0();
      if (nextElement == null) {
        _this.set$_collection$_current(_null);
        _this.set$_nextEntry(_null);
        _this.set$_collection$_queue(_null);
        return false;
      }
      t1 = _this._collection$_queue;
      t2 = nextElement._collection$_queue;
      if (t1 == null ? t2 != null : t1 !== t2)
        throw B.wrapException(B.ConcurrentModificationError$(t1));
      _this.set$_collection$_current(nextElement.element);
      _this.set$_nextEntry(nextElement._nextLink);
      return true;
    },
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    set$_collection$_queue(_queue) {
      this._collection$_queue = this.$ti._eval$1("DoubleLinkedQueue<1>?")._as(_queue);
    },
    set$_nextEntry(_nextEntry) {
      this._nextEntry = this.$ti._eval$1("_DoubleLinkedQueueEntry<1>?")._as(_nextEntry);
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.ListQueue.prototype = {
    get$iterator(_) {
      return A._ListQueueIterator$(this, this.$ti._precomputed1);
    },
    forEach$1(_, f) {
      var modificationCount, i, t2, _this = this,
        t1 = _this.$ti;
      t1._eval$1("~(1)")._as(f);
      modificationCount = _this._modificationCount;
      i = _this._head;
      t1 = t1._precomputed1;
      while (i !== _this._tail) {
        t2 = J.$index$asx(_this._table, i);
        f.call$1(t2 == null ? t1._as(t2) : t2);
        _this._checkModification$1(modificationCount);
        t2 = J.get$length$asx(_this._table);
        if (typeof t2 !== "number")
          return t2.$sub();
        i = (i + 1 & t2 - 1) >>> 0;
      }
    },
    get$isEmpty(_) {
      return J.$eq$(this._head, this._tail);
    },
    get$length(_) {
      var t3,
        t1 = this._tail,
        t2 = this._head;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = J.get$length$asx(this._table);
      if (typeof t3 !== "number")
        return t3.$sub();
      return (t1 - t2 & t3 - 1) >>> 0;
    },
    get$first(_) {
      var t1, _this = this;
      if (B.boolConversionCheck(J.$eq$(_this._head, _this._tail)))
        throw B.wrapException(B.IterableElementError_noElement());
      t1 = J.$index$asx(_this._table, _this._head);
      return t1 == null ? _this.$ti._precomputed1._as(t1) : t1;
    },
    get$last(_) {
      var t1, t2, t3, t4, _this = this;
      if (B.boolConversionCheck(J.$eq$(_this._head, _this._tail)))
        throw B.wrapException(B.IterableElementError_noElement());
      t1 = _this._table;
      t2 = _this._tail;
      if (typeof t2 !== "number")
        return t2.$sub();
      t3 = J.getInterceptor$asx(t1);
      t4 = t3.get$length(t1);
      if (typeof t4 !== "number")
        return t4.$sub();
      t4 = t3.$index(t1, (t2 - 1 & t4 - 1) >>> 0);
      return t4 == null ? _this.$ti._precomputed1._as(t4) : t4;
    },
    get$single(_) {
      var t1, _this = this;
      if (B.boolConversionCheck(J.$eq$(_this._head, _this._tail)))
        throw B.wrapException(B.IterableElementError_noElement());
      t1 = _this.get$length(0);
      if (typeof t1 !== "number")
        return t1.$gt();
      if (t1 > 1)
        throw B.wrapException(B.IterableElementError_tooMany());
      t1 = J.$index$asx(_this._table, _this._head);
      return t1 == null ? _this.$ti._precomputed1._as(t1) : t1;
    },
    elementAt$1(_, index) {
      var t1, t2, t3, t4, _this = this;
      B._asInt(index);
      A.IndexError_check(index, _this.get$length(0), _this, null);
      t1 = _this._table;
      t2 = _this._head;
      if (typeof t2 !== "number")
        return t2.$add();
      t3 = J.getInterceptor$asx(t1);
      t4 = t3.get$length(t1);
      if (typeof t4 !== "number")
        return t4.$sub();
      t4 = t3.$index(t1, (t2 + index & t4 - 1) >>> 0);
      return t4 == null ? _this.$ti._precomputed1._as(t4) : t4;
    },
    toList$1$growable(_, growable) {
      var t1, mask, t2, $length, list, i, t3, t4, _this = this;
      B._asBool(growable);
      t1 = J.get$length$asx(_this._table);
      if (typeof t1 !== "number")
        return t1.$sub();
      mask = t1 - 1;
      t1 = _this._tail;
      t2 = _this._head;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      $length = (t1 - t2 & mask) >>> 0;
      if ($length === 0)
        return B.List_List$empty(growable, _this.$ti._precomputed1);
      t1 = _this.$ti._precomputed1;
      list = B.List_List$filled($length, _this.get$first(0), growable, t1);
      for (t2 = J.getInterceptor$ax(list), i = 0; i < $length; ++i) {
        t3 = _this._table;
        t4 = _this._head;
        if (typeof t4 !== "number")
          return t4.$add();
        t4 = J.$index$asx(t3, (t4 + i & mask) >>> 0);
        t2.$indexSet(list, i, t4 == null ? t1._as(t4) : t4);
      }
      return list;
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    },
    add$1(_, value) {
      this._add$1(this.$ti._precomputed1._as(value));
    },
    addAll$1(_, elements) {
      var addCount, $length, t2, endSpace, t3, preSpace, _this = this,
        t1 = _this.$ti;
      t1._eval$1("Iterable<1>")._as(elements);
      if (t1._eval$1("List<1>")._is(elements)) {
        addCount = J.get$length$asx(elements);
        $length = _this.get$length(0);
        t1 = $length + addCount;
        t2 = J.get$length$asx(_this._table);
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (t1 >= t2) {
          _this._preGrow$1(t1);
          J.setRange$4$ax(_this._table, $length, t1, elements, 0);
          t1 = _this._tail;
          if (typeof t1 !== "number")
            return t1.$add();
          _this.set$_tail(t1 + addCount);
        } else {
          t1 = J.get$length$asx(_this._table);
          t2 = _this._tail;
          if (typeof t1 !== "number")
            return t1.$sub();
          if (typeof t2 !== "number")
            return B.iae(t2);
          endSpace = t1 - t2;
          t1 = _this._table;
          t3 = J.getInterceptor$ax(t1);
          if (addCount < endSpace) {
            t3.setRange$4(t1, t2, t2 + addCount, elements, 0);
            t1 = _this._tail;
            if (typeof t1 !== "number")
              return t1.$add();
            _this.set$_tail(t1 + addCount);
          } else {
            preSpace = addCount - endSpace;
            t3.setRange$4(t1, t2, t2 + endSpace, elements, 0);
            J.setRange$4$ax(_this._table, 0, preSpace, elements, endSpace);
            _this._tail = preSpace;
          }
        }
        t1 = _this._modificationCount;
        if (typeof t1 !== "number")
          return t1.$add();
        _this.set$_modificationCount(t1 + 1);
      } else
        for (t1 = J.get$iterator$ax(elements); B.boolConversionCheck(t1.moveNext$0());)
          _this._add$1(t1.get$current());
    },
    clear$0(_) {
      var i, t1, _this = this;
      if (!B.boolConversionCheck(J.$eq$(_this._head, _this._tail))) {
        i = _this._head;
        while (i !== _this._tail) {
          J.$indexSet$ax(_this._table, i, null);
          t1 = J.get$length$asx(_this._table);
          if (typeof t1 !== "number")
            return t1.$sub();
          i = (i + 1 & t1 - 1) >>> 0;
        }
        _this._head = _this._tail = 0;
        t1 = _this._modificationCount;
        if (typeof t1 !== "number")
          return t1.$add();
        _this.set$_modificationCount(t1 + 1);
      }
    },
    toString$0(_) {
      return B.Iterable_iterableToFullString(this, "{", "}");
    },
    addLast$1(value) {
      this._add$1(this.$ti._precomputed1._as(value));
    },
    addFirst$1(value) {
      var t1, t2, _this = this;
      _this.$ti._precomputed1._as(value);
      t1 = _this._head;
      if (typeof t1 !== "number")
        return t1.$sub();
      t2 = J.get$length$asx(_this._table);
      if (typeof t2 !== "number")
        return t2.$sub();
      t2 = (t1 - 1 & t2 - 1) >>> 0;
      _this._head = t2;
      J.$indexSet$ax(_this._table, t2, value);
      if (B.boolConversionCheck(J.$eq$(_this._head, _this._tail)))
        _this._grow$0();
      t1 = _this._modificationCount;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_modificationCount(t1 + 1);
    },
    removeFirst$0() {
      var t1, result, t2, _this = this;
      if (B.boolConversionCheck(J.$eq$(_this._head, _this._tail)))
        throw B.wrapException(B.IterableElementError_noElement());
      t1 = _this._modificationCount;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_modificationCount(t1 + 1);
      result = J.$index$asx(_this._table, _this._head);
      if (result == null)
        result = _this.$ti._precomputed1._as(result);
      J.$indexSet$ax(_this._table, _this._head, null);
      t1 = _this._head;
      if (typeof t1 !== "number")
        return t1.$add();
      t2 = J.get$length$asx(_this._table);
      if (typeof t2 !== "number")
        return t2.$sub();
      _this._head = (t1 + 1 & t2 - 1) >>> 0;
      return result;
    },
    removeLast$0(_) {
      var t1, t2, result, _this = this;
      if (B.boolConversionCheck(J.$eq$(_this._head, _this._tail)))
        throw B.wrapException(B.IterableElementError_noElement());
      t1 = _this._modificationCount;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_modificationCount(t1 + 1);
      t1 = _this._tail;
      if (typeof t1 !== "number")
        return t1.$sub();
      t2 = J.get$length$asx(_this._table);
      if (typeof t2 !== "number")
        return t2.$sub();
      t2 = (t1 - 1 & t2 - 1) >>> 0;
      _this._tail = t2;
      result = J.$index$asx(_this._table, t2);
      if (result == null)
        result = _this.$ti._precomputed1._as(result);
      J.$indexSet$ax(_this._table, _this._tail, null);
      return result;
    },
    _checkModification$1(expectedModificationCount) {
      if (B._asInt(expectedModificationCount) !== this._modificationCount)
        throw B.wrapException(B.ConcurrentModificationError$(this));
    },
    _add$1(element) {
      var t1, t2, _this = this;
      _this.$ti._precomputed1._as(element);
      J.$indexSet$ax(_this._table, _this._tail, element);
      t1 = _this._tail;
      if (typeof t1 !== "number")
        return t1.$add();
      t2 = J.get$length$asx(_this._table);
      if (typeof t2 !== "number")
        return t2.$sub();
      t2 = (t1 + 1 & t2 - 1) >>> 0;
      _this._tail = t2;
      if (B.boolConversionCheck(J.$eq$(_this._head, t2)))
        _this._grow$0();
      t1 = _this._modificationCount;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_modificationCount(t1 + 1);
    },
    _grow$0() {
      var newTable, t2, split, _this = this,
        t1 = J.get$length$asx(_this._table);
      if (typeof t1 !== "number")
        return t1.$mul();
      newTable = B.List_List$filled(t1 * 2, null, false, _this.$ti._eval$1("1?"));
      t1 = J.get$length$asx(_this._table);
      t2 = _this._head;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      split = t1 - t2;
      t1 = J.getInterceptor$ax(newTable);
      t1.setRange$4(newTable, 0, split, _this._table, t2);
      t2 = _this._head;
      if (typeof t2 !== "number")
        return B.iae(t2);
      t1.setRange$4(newTable, split, split + t2, _this._table, 0);
      _this._head = 0;
      _this.set$_tail(J.get$length$asx(_this._table));
      _this.set$_table(newTable);
    },
    _writeToList$1(target) {
      var t1, t2, t3, t4, $length, firstPartSize, _this = this;
      _this.$ti._eval$1("List<1?>")._as(target);
      t1 = _this._head;
      t2 = _this._tail;
      if (typeof t1 !== "number")
        return t1.$le();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = J.getInterceptor$ax(target);
      t4 = _this._table;
      if (t1 <= t2) {
        $length = t2 - t1;
        t3.setRange$4(target, 0, $length, t4, t1);
        return $length;
      } else {
        t1 = J.get$length$asx(t4);
        t2 = _this._head;
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return B.iae(t2);
        firstPartSize = t1 - t2;
        t3.setRange$4(target, 0, firstPartSize, _this._table, t2);
        t2 = _this._tail;
        if (typeof t2 !== "number")
          return B.iae(t2);
        t3.setRange$4(target, firstPartSize, firstPartSize + t2, _this._table, 0);
        t2 = _this._tail;
        if (typeof t2 !== "number")
          return t2.$add();
        return t2 + firstPartSize;
      }
    },
    _preGrow$1(newElementCount) {
      var newTable, _this = this;
      B._asInt(newElementCount);
      newTable = B.List_List$filled(A.ListQueue__nextPowerOf2(newElementCount + D.JSInt_methods._shrOtherPositive$1(newElementCount, 1)), null, false, _this.$ti._eval$1("1?"));
      _this.set$_tail(_this._writeToList$1(newTable));
      _this.set$_table(newTable);
      _this._head = 0;
    },
    set$_table(_table) {
      this._table = this.$ti._eval$1("List<1?>")._as(_table);
    },
    set$_tail(_tail) {
      this._tail = B._asInt(_tail);
    },
    set$_modificationCount(_modificationCount) {
      this._modificationCount = B._asInt(_modificationCount);
    },
    $is_QueueIterable: 1,
    $isQueue: 1
  };
  A._ListQueueIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this._collection$_queue;
      t1._checkModification$1(_this._modificationCount);
      if (B.boolConversionCheck(J.$eq$(_this._position, _this._end))) {
        _this.set$_collection$_current(null);
        return false;
      }
      _this.set$_collection$_current(J.$index$asx(t1._table, _this._position));
      t2 = _this._position;
      if (typeof t2 !== "number")
        return t2.$add();
      t1 = J.get$length$asx(t1._table);
      if (typeof t1 !== "number")
        return t1.$sub();
      _this._position = (t2 + 1 & t1 - 1) >>> 0;
      return true;
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.AsciiCodec.prototype = {
    encode$1(source) {
      B._asString(source);
      return this.get$encoder().convert$1(source);
    },
    decode$1(bytes) {
      var t1;
      type$.List_int._as(bytes);
      t1 = C.AsciiDecoder_false_127.convert$1(bytes);
      return t1;
    },
    get$encoder() {
      return C.AsciiEncoder_127;
    },
    get$decoder() {
      return C.AsciiDecoder_false_127;
    }
  };
  A._UnicodeSubsetEncoder.prototype = {
    convert$1(string) {
      var stringLength, end, result, t1, t2, t3, i, codeUnit, t4;
      B._asString(string);
      stringLength = string.length;
      end = B.RangeError_checkValidRange(0, null, stringLength, null, null);
      if (typeof end !== "number")
        return end.$sub();
      result = B.NativeUint8List_NativeUint8List(end);
      for (t1 = result.length, t2 = this._subsetMask, t3 = J.getInterceptor$i(t2), i = 0; i < end; ++i) {
        if (!(i < stringLength))
          return B.ioore(string, i);
        codeUnit = string.charCodeAt(i);
        t4 = t3.$not(t2);
        if (typeof t4 !== "number")
          return B.iae(t4);
        if ((codeUnit & t4) !== 0)
          throw B.wrapException(B.ArgumentError$value(string, "string", "Contains invalid characters."));
        if (!(i < t1))
          return B.ioore(result, i);
        result[i] = codeUnit;
      }
      return result;
    },
    startChunkedConversion$1(sink) {
      var t1;
      type$.Sink_List_int._as(sink);
      t1 = sink instanceof B.ByteConversionSink ? sink : B._ByteAdapterSink$(sink);
      return A._UnicodeSubsetEncoderSink$(this._subsetMask, t1);
    }
  };
  A.AsciiEncoder.prototype = {};
  A._UnicodeSubsetEncoderSink.prototype = {
    close$0() {
      this._sink.close$0();
    },
    addSlice$4(source, start, end, isLast) {
      var t1, t2, t3, i, codeUnit, t4;
      B._asString(source);
      B._asInt(start);
      B._asInt(end);
      B._asBool(isLast);
      t1 = source.length;
      B.RangeError_checkValidRange(start, end, t1, null, null);
      for (t2 = this._subsetMask, t3 = J.getInterceptor$i(t2), i = start; i < end; ++i) {
        if (!(i >= 0 && i < t1))
          return B.ioore(source, i);
        codeUnit = source.charCodeAt(i);
        t4 = t3.$not(t2);
        if (typeof t4 !== "number")
          return B.iae(t4);
        if ((codeUnit & t4) !== 0)
          throw B.wrapException(B.ArgumentError$("Source contains invalid character with code point: " + codeUnit + ".", null));
      }
      J.add$1$ax(this._sink, J.sublist$2$ax(D.JSString_methods.get$codeUnits(source), start, end));
      if (isLast)
        this.close$0();
    }
  };
  A._UnicodeSubsetDecoder.prototype = {
    convert$1(bytes) {
      var t1, end, t2, t3, i, byte, t4, _null = null;
      type$.List_int._as(bytes);
      t1 = J.getInterceptor$asx(bytes);
      end = B.RangeError_checkValidRange(0, _null, t1.get$length(bytes), _null, _null);
      if (typeof end !== "number")
        return B.iae(end);
      t2 = this._subsetMask;
      t3 = J.getInterceptor$i(t2);
      i = 0;
      for (; i < end; ++i) {
        byte = t1.$index(bytes, i);
        t4 = t3.$not(t2);
        if (typeof t4 !== "number")
          return B.iae(t4);
        if ((byte & t4) >>> 0 !== 0) {
          if (!B.boolConversionCheck(this._allowInvalid))
            throw B.wrapException(B.FormatException$("Invalid value in input: " + B.S(byte), _null, _null));
          return this._convertInvalid$3(bytes, 0, end);
        }
      }
      return B.String_String$fromCharCodes(bytes, 0, end);
    },
    _convertInvalid$3(bytes, start, end) {
      var buffer, t1, t2, t3, i, value, t4;
      type$.List_int._as(bytes);
      B._asInt(start);
      B._asInt(end);
      buffer = B.StringBuffer$("");
      for (t1 = this._subsetMask, t2 = J.getInterceptor$i(t1), t3 = J.getInterceptor$asx(bytes), i = start; i < end; ++i) {
        value = t3.$index(bytes, i);
        t4 = t2.$not(t1);
        if (typeof t4 !== "number")
          return B.iae(t4);
        buffer.writeCharCode$1((value & t4) >>> 0 !== 0 ? 65533 : value);
      }
      return buffer.toString$0(0);
    }
  };
  A.AsciiDecoder.prototype = {
    startChunkedConversion$1(sink) {
      var stringSink;
      type$.Sink_String._as(sink);
      stringSink = type$.StringConversionSink._is(sink) ? sink : B._StringAdapterSink$(sink);
      if (B.boolConversionCheck(this._allowInvalid))
        return A._ErrorHandlingAsciiDecoderSink$(stringSink.asUtf8Sink$1(false));
      else
        return A._SimpleAsciiDecoderSink$(stringSink);
    }
  };
  A._ErrorHandlingAsciiDecoderSink.prototype = {
    close$0() {
      this._utf8Sink.close$0();
    },
    add$1(_, source) {
      type$.List_int._as(source);
      this.addSlice$4(source, 0, J.get$length$asx(source), false);
    },
    addSlice$4(source, start, end, isLast) {
      var t1, t2, t3, i, t4;
      type$.List_int._as(source);
      B._asInt(start);
      B._asInt(end);
      B._asBool(isLast);
      t1 = J.getInterceptor$asx(source);
      B.RangeError_checkValidRange(start, end, t1.get$length(source), null, null);
      for (t2 = this._utf8Sink, t3 = J.getInterceptor$ax(t2), i = start; i < end; ++i) {
        t4 = t1.$index(source, i);
        if (typeof t4 !== "number")
          return t4.$and();
        if ((t4 & 4294967168) >>> 0 !== 0) {
          if (i > start)
            t2.addSlice$4(source, start, i, false);
          t3.add$1(t2, C.List_239_191_189);
          start = i + 1;
        }
      }
      if (start < end)
        t2.addSlice$4(source, start, end, isLast);
      else if (isLast)
        this.close$0();
    }
  };
  A._SimpleAsciiDecoderSink.prototype = {
    close$0() {
      this._sink.close$0();
    },
    add$1(_, source) {
      var t1, i, t2;
      type$.List_int._as(source);
      t1 = J.getInterceptor$asx(source);
      i = 0;
      while (true) {
        t2 = t1.get$length(source);
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (!(i < t2))
          break;
        t2 = t1.$index(source, i);
        if (typeof t2 !== "number")
          return t2.$and();
        if ((t2 & 4294967168) >>> 0 !== 0)
          throw B.wrapException(B.FormatException$("Source contains non-ASCII bytes.", null, null));
        ++i;
      }
      J.add$1$ax(this._sink, B.String_String$fromCharCodes(source, 0, null));
    },
    addSlice$4(source, start, end, isLast) {
      var t1, $length;
      type$.List_int._as(source);
      B._asInt(start);
      B._asInt(end);
      B._asBool(isLast);
      t1 = J.getInterceptor$asx(source);
      $length = t1.get$length(source);
      B.RangeError_checkValidRange(start, end, $length, null, null);
      if (start < end)
        this.add$1(0, start !== 0 || end !== $length ? t1.sublist$2(source, start, end) : source);
      if (isLast)
        this.close$0();
    }
  };
  A.Base64Codec.prototype = {
    get$encoder() {
      return C.C_Base64Encoder;
    },
    get$decoder() {
      return C.C_Base64Decoder;
    },
    normalize$3(source, start, end) {
      var t1, inverseAlphabet, t2, i, sliceStart, buffer, firstPadding, firstPaddingSourceIndex, paddingCount, i0, char, i1, char0, value, t3, endLength, $length, _null = null,
        _s64_ = string$.ABCDEFx2b,
        _s31_ = "Invalid base64 encoding length ";
      B._asString(source);
      B._asInt(start);
      t1 = source.length;
      end = B.RangeError_checkValidRange(start, B._asIntQ(end), t1, _null, _null);
      inverseAlphabet = $.$get$_Base64Decoder__inverseAlphabet();
      if (typeof end !== "number")
        return B.iae(end);
      t2 = J.getInterceptor$asx(inverseAlphabet);
      i = start;
      sliceStart = i;
      buffer = _null;
      firstPadding = -1;
      firstPaddingSourceIndex = -1;
      paddingCount = 0;
      for (; i < end; i = i0) {
        i0 = i + 1;
        if (!(i >= 0 && i < t1))
          return B.ioore(source, i);
        char = source.charCodeAt(i);
        if (char === 37) {
          i1 = i0 + 2;
          if (i1 <= end) {
            char0 = A.parseHexByte(source, i0);
            if (char0 === 37)
              char0 = -1;
            i0 = i1;
          } else
            char0 = -1;
        } else
          char0 = char;
        if (0 <= char0 && char0 <= 127) {
          value = t2.$index(inverseAlphabet, char0);
          if (value >= 0) {
            if (value >>> 0 !== value || value >= 64)
              return B.ioore(_s64_, value);
            char0 = _s64_.charCodeAt(value);
            if (char0 === char)
              continue;
            char = char0;
          } else {
            if (value === -1) {
              if (firstPadding < 0) {
                t3 = buffer == null ? _null : buffer.get$length(0);
                if (t3 == null)
                  t3 = 0;
                if (typeof t3 !== "number")
                  return t3.$add();
                firstPadding = t3 + (i - sliceStart);
                firstPaddingSourceIndex = i;
              }
              ++paddingCount;
              if (char === 61)
                continue;
            }
            char = char0;
          }
          if (value !== -2) {
            if (buffer == null) {
              buffer = B.StringBuffer$("");
              t3 = buffer;
            } else
              t3 = buffer;
            t3.write$1(D.JSString_methods.substring$2(source, sliceStart, i));
            t3.writeCharCode$1(char);
            sliceStart = i0;
            continue;
          }
        }
        throw B.wrapException(B.FormatException$("Invalid base64 data", source, i));
      }
      if (buffer != null) {
        buffer.write$1(D.JSString_methods.substring$2(source, sliceStart, end));
        if (firstPadding >= 0)
          A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, buffer.get$length(0));
        else {
          t1 = buffer.get$length(0);
          if (typeof t1 !== "number")
            return t1.$sub();
          endLength = D.JSNumber_methods.$mod(t1 - 1, 4) + 1;
          if (endLength === 1)
            throw B.wrapException(B.FormatException$(_s31_, source, end));
          for (; endLength < 4;) {
            buffer.write$1("=");
            ++endLength;
          }
        }
        return D.JSString_methods.replaceRange$3(source, start, end, buffer.toString$0(0));
      }
      $length = end - start;
      if (firstPadding >= 0)
        A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, $length);
      else {
        endLength = D.JSInt_methods.$mod($length, 4);
        if (endLength === 1)
          throw B.wrapException(B.FormatException$(_s31_, source, end));
        if (endLength > 1)
          source = D.JSString_methods.replaceRange$3(source, end, end, endLength === 2 ? "==" : "=");
      }
      return source;
    }
  };
  A.Base64Encoder.prototype = {
    convert$1(input) {
      var t1;
      type$.List_int._as(input);
      t1 = J.getInterceptor$asx(input);
      if (B.boolConversionCheck(t1.get$isEmpty(input)))
        return "";
      t1 = A._Base64Encoder$(false).encode$4(input, 0, t1.get$length(input), true);
      t1.toString;
      return B.String_String$fromCharCodes(t1, 0, null);
    },
    startChunkedConversion$1(sink) {
      type$.Sink_String._as(sink);
      if (type$.StringConversionSink._is(sink))
        return A._Utf8Base64EncoderSink$(sink.asUtf8Sink$1(false), false);
      return A._AsciiBase64EncoderSink$(sink, false);
    }
  };
  A._Base64Encoder.prototype = {
    createBuffer$1(bufferLength) {
      return B.NativeUint8List_NativeUint8List(B._asInt(bufferLength));
    },
    encode$4(bytes, start, end, isLast) {
      var byteCount, fullChunks, bufferLength, output, _this = this;
      type$.List_int._as(bytes);
      B._asInt(start);
      B._asInt(end);
      B._asBool(isLast);
      byteCount = A._Base64Encoder__stateCount(_this._convert$_state) + (end - start);
      fullChunks = D.JSInt_methods._tdivFast$1(byteCount, 3);
      bufferLength = fullChunks * 4;
      if (isLast && byteCount - fullChunks * 3 > 0)
        bufferLength += 4;
      output = _this.createBuffer$1(bufferLength);
      _this.set$_convert$_state(A._Base64Encoder_encodeChunk(_this._alphabet, bytes, start, end, isLast, output, 0, _this._convert$_state));
      if (bufferLength > 0)
        return output;
      return null;
    },
    set$_convert$_state(_state) {
      this._convert$_state = B._asInt(_state);
    }
  };
  A._BufferCachingBase64Encoder.prototype = {
    createBuffer$1(bufferLength) {
      var buffer;
      B._asInt(bufferLength);
      buffer = this.bufferCache;
      if (buffer == null || buffer.length < bufferLength)
        buffer = this.bufferCache = B.NativeUint8List_NativeUint8List(bufferLength);
      return A.Uint8List_Uint8List$view((buffer && D.NativeUint8List_methods).get$buffer(buffer), D.NativeUint8List_methods.get$offsetInBytes(buffer), bufferLength);
    }
  };
  A._Base64EncoderSink.prototype = {
    add$1(_, source) {
      type$.List_int._as(source);
      this._convert$_add$4(source, 0, J.get$length$asx(source), false);
    },
    close$0() {
      this._convert$_add$4(C.List_empty0, 0, 0, true);
    },
    addSlice$4(source, start, end, isLast) {
      type$.List_int._as(source);
      B._asInt(start);
      B._asInt(end);
      B._asBool(isLast);
      B.RangeError_checkValidRange(start, end, J.get$length$asx(source), null, null);
      this._convert$_add$4(source, start, end, isLast);
    }
  };
  A._AsciiBase64EncoderSink.prototype = {
    _convert$_add$4(source, start, end, isLast) {
      var buffer;
      type$.List_int._as(source);
      B._asInt(start);
      B._asInt(end);
      B._asBool(isLast);
      buffer = this._encoder.encode$4(source, start, end, isLast);
      if (buffer != null)
        J.add$1$ax(this._sink, B.String_String$fromCharCodes(buffer, 0, null));
      if (isLast)
        this._sink.close$0();
    }
  };
  A._Utf8Base64EncoderSink.prototype = {
    _convert$_add$4(source, start, end, isLast) {
      var buffer;
      type$.List_int._as(source);
      B._asInt(start);
      B._asInt(end);
      B._asBool(isLast);
      buffer = this._encoder.encode$4(source, start, end, isLast);
      if (buffer != null)
        this._sink.addSlice$4(buffer, 0, buffer.length, isLast);
    }
  };
  A.Base64Decoder.prototype = {
    convert$1(input) {
      var end, decoder, t1;
      B._asString(input);
      end = B.RangeError_checkValidRange(0, null, input.length, null, null);
      if (0 === end)
        return B.NativeUint8List_NativeUint8List(0);
      decoder = A._Base64Decoder$();
      t1 = decoder.decode$3(input, 0, end);
      t1.toString;
      decoder.close$2(input, end);
      return t1;
    },
    startChunkedConversion$1(sink) {
      return A._Base64DecoderSink$(type$.Sink_List_int._as(sink));
    }
  };
  A._Base64Decoder.prototype = {
    decode$3(input, start, end) {
      var t1, buffer;
      B._asString(input);
      B._asInt(start);
      B._asInt(end);
      t1 = this._convert$_state;
      if (B.boolConversionCheck(A._Base64Decoder__hasSeenPadding(t1))) {
        this.set$_convert$_state(A._Base64Decoder__checkPadding(input, start, end, t1));
        return null;
      }
      if (start === end)
        return B.NativeUint8List_NativeUint8List(0);
      buffer = A._Base64Decoder__allocateBuffer(input, start, end, t1);
      this.set$_convert$_state(A._Base64Decoder_decodeChunk(input, start, end, buffer, 0, t1));
      return buffer;
    },
    close$2(input, end) {
      var t1, t2;
      B._asStringQ(input);
      B._asIntQ(end);
      t1 = this._convert$_state;
      t2 = A._Base64Decoder__encodePaddingState(0);
      if (typeof t1 !== "number")
        return t1.$lt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (t1 < t2)
        throw B.wrapException(B.FormatException$("Missing padding character", input, end));
      if (t1 > 0)
        throw B.wrapException(B.FormatException$("Invalid length, must be multiple of four", input, end));
      this.set$_convert$_state(A._Base64Decoder__encodePaddingState(0));
    },
    set$_convert$_state(_state) {
      this._convert$_state = B._asInt(_state);
    }
  };
  A._Base64DecoderSink.prototype = {
    add$1(_, string) {
      var buffer;
      B._asString(string);
      if (B.boolConversionCheck(D.JSString_methods.get$isEmpty(string)))
        return;
      buffer = this._decoder.decode$3(string, 0, string.length);
      if (buffer != null)
        J.add$1$ax(this._sink, buffer);
    },
    close$0() {
      this._decoder.close$2(null, null);
      this._sink.close$0();
    },
    addSlice$4(string, start, end, isLast) {
      var t1, buffer;
      B._asString(string);
      B._asInt(start);
      B._asInt(end);
      B._asBool(isLast);
      B.RangeError_checkValidRange(start, end, string.length, null, null);
      if (start === end)
        return;
      t1 = this._decoder;
      buffer = t1.decode$3(string, start, end);
      if (buffer != null)
        J.add$1$ax(this._sink, buffer);
      if (isLast) {
        t1.close$2(string, end);
        this._sink.close$0();
      }
    }
  };
  A.Latin1Codec.prototype = {
    encode$1(source) {
      B._asString(source);
      return this.get$encoder().convert$1(source);
    },
    decode$1(bytes) {
      var t1;
      type$.List_int._as(bytes);
      t1 = C.Latin1Decoder_false_255.convert$1(bytes);
      return t1;
    },
    get$encoder() {
      return C.Latin1Encoder_255;
    },
    get$decoder() {
      return C.Latin1Decoder_false_255;
    }
  };
  A.Latin1Encoder.prototype = {};
  A.Latin1Decoder.prototype = {
    startChunkedConversion$1(sink) {
      var stringSink;
      type$.Sink_String._as(sink);
      stringSink = type$.StringConversionSink._is(sink) ? sink : B._StringAdapterSink$(sink);
      if (!B.boolConversionCheck(this._allowInvalid))
        return A._Latin1DecoderSink$(stringSink);
      return A._Latin1AllowInvalidDecoderSink$(stringSink);
    }
  };
  A._Latin1DecoderSink.prototype = {
    close$0() {
      this._sink.close$0();
      this._sink = null;
    },
    add$1(_, source) {
      type$.List_int._as(source);
      this.addSlice$4(source, 0, J.get$length$asx(source), false);
    },
    _addSliceToSink$4(source, start, end, isLast) {
      var t1;
      type$.List_int._as(source);
      B._asInt(start);
      B._asInt(end);
      B._asBool(isLast);
      t1 = this._sink;
      t1.toString;
      J.add$1$ax(t1, B.String_String$fromCharCodes(source, start, end));
      if (isLast)
        this.close$0();
    },
    addSlice$4(source, start, end, isLast) {
      type$.List_int._as(source);
      B._asInt(start);
      B._asInt(end);
      B._asBool(isLast);
      B.RangeError_checkValidRange(start, end, J.get$length$asx(source), null, null);
      if (start === end)
        return;
      if (!type$.Uint8List._is(source))
        A._Latin1DecoderSink__checkValidLatin1(source, start, end);
      this._addSliceToSink$4(source, start, end, isLast);
    }
  };
  A._Latin1AllowInvalidDecoderSink.prototype = {
    addSlice$4(source, start, end, isLast) {
      var t1, i, char, _this = this;
      type$.List_int._as(source);
      B._asInt(start);
      B._asInt(end);
      B._asBool(isLast);
      t1 = J.getInterceptor$asx(source);
      B.RangeError_checkValidRange(start, end, t1.get$length(source), null, null);
      for (i = start; i < end; ++i) {
        char = t1.$index(source, i);
        if (char > 255 || char < 0) {
          if (i > start)
            _this._addSliceToSink$4(source, start, i, false);
          _this._addSliceToSink$4(C.List_65533, 0, 1, false);
          start = i + 1;
        }
      }
      if (start < end)
        _this._addSliceToSink$4(source, start, end, isLast);
      if (isLast)
        _this.close$0();
    }
  };
  A.DateTime.prototype = {
    add$1(_, duration) {
      return this._addMicroseconds$1(type$.Duration._as(duration).get$inMicroseconds());
    },
    _addMicroseconds$1(durationMicroseconds) {
      var durationLo, durationHi, t1, sumLo, microsecond, carry, _1000 = 1000;
      B._asInt(durationMicroseconds);
      durationLo = D.JSInt_methods.$mod(durationMicroseconds, _1000);
      durationHi = D.JSInt_methods._tdivFast$1(durationMicroseconds - durationLo, _1000);
      t1 = this._microsecond;
      if (typeof t1 !== "number")
        return t1.$add();
      sumLo = t1 + durationLo;
      microsecond = D.JSInt_methods.$mod(sumLo, _1000);
      carry = D.JSInt_methods._tdivFast$1(sumLo - microsecond, _1000);
      t1 = this._core$_value;
      if (typeof t1 !== "number")
        return t1.$add();
      return A.DateTime$_withValueChecked(t1 + carry + durationHi, microsecond, this.isUtc);
    },
    difference$1(other) {
      var t1, t2, t3, t4;
      type$.DateTime._as(other);
      t1 = this.get$millisecondsSinceEpoch();
      t2 = other.get$millisecondsSinceEpoch();
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = this.get$microsecond();
      t4 = other.get$microsecond();
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return A.Duration$(t3 - t4, t1 - t2);
    },
    get$millisecondsSinceEpoch() {
      return this._core$_value;
    },
    get$year() {
      return A.Primitives_getYear(this);
    },
    get$month() {
      return A.Primitives_getMonth(this);
    },
    get$day() {
      return A.Primitives_getDay(this);
    },
    get$hour() {
      return A.Primitives_getHours(this);
    },
    get$minute() {
      return A.Primitives_getMinutes(this);
    },
    get$second() {
      return A.Primitives_getSeconds(this);
    },
    get$millisecond() {
      return A.Primitives_getMilliseconds(this);
    },
    get$microsecond() {
      return this._microsecond;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.DateTime && B.boolConversionCheck(J.$eq$(this.get$millisecondsSinceEpoch(), other.get$millisecondsSinceEpoch())) && B.boolConversionCheck(J.$eq$(this.get$microsecond(), other.get$microsecond())) && B.boolConversionCheck(J.$eq$(this.isUtc, other.isUtc));
    },
    get$hashCode(_) {
      return B.Object_hash(this._core$_value, this._microsecond, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    isBefore$1(other) {
      var t1, t2;
      type$.DateTime._as(other);
      t1 = this.get$millisecondsSinceEpoch();
      t2 = other.get$millisecondsSinceEpoch();
      if (typeof t1 !== "number")
        return t1.$lt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (!(t1 < t2))
        if (B.boolConversionCheck(J.$eq$(this.get$millisecondsSinceEpoch(), other.get$millisecondsSinceEpoch()))) {
          t1 = this.get$microsecond();
          t2 = other.get$microsecond();
          if (typeof t1 !== "number")
            return t1.$lt();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t2 = t1 < t2;
          t1 = t2;
        } else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    isAfter$1(other) {
      var t1, t2;
      type$.DateTime._as(other);
      t1 = this.get$millisecondsSinceEpoch();
      t2 = other.get$millisecondsSinceEpoch();
      if (typeof t1 !== "number")
        return t1.$gt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (!(t1 > t2))
        if (B.boolConversionCheck(J.$eq$(this.get$millisecondsSinceEpoch(), other.get$millisecondsSinceEpoch()))) {
          t1 = this.get$microsecond();
          t2 = other.get$microsecond();
          if (typeof t1 !== "number")
            return t1.$gt();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t2 = t1 > t2;
          t1 = t2;
        } else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    compareTo$1(_, other) {
      var r;
      type$.DateTime._as(other);
      r = J.compareTo$1$ns(this.get$millisecondsSinceEpoch(), other.get$millisecondsSinceEpoch());
      if (r !== 0)
        return r;
      return J.compareTo$1$ns(this.get$microsecond(), other.get$microsecond());
    },
    toString$0(_) {
      var _this = this,
        y = A.DateTime__fourDigits(_this.get$year()),
        m = A.DateTime__twoDigits(_this.get$month()),
        d = A.DateTime__twoDigits(_this.get$day()),
        h = A.DateTime__twoDigits(_this.get$hour()),
        min = A.DateTime__twoDigits(_this.get$minute()),
        sec = A.DateTime__twoDigits(_this.get$second()),
        ms = A.DateTime__threeDigits(_this.get$millisecond()),
        us = B.boolConversionCheck(J.$eq$(_this.get$microsecond(), 0)) ? "" : A.DateTime__threeDigits(_this.get$microsecond()),
        t1 = y + "-" + m;
      if (B.boolConversionCheck(_this.isUtc))
        return t1 + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + us + "Z";
      else
        return t1 + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + us;
    },
    $isComparable: 1
  };
  A.Stopwatch.prototype = {
    get$elapsedMicroseconds() {
      var ticks = this.get$elapsedTicks();
      if (B.boolConversionCheck(J.$eq$($.$get$Stopwatch__frequency(), 1000000)))
        return ticks;
      return ticks * 1000;
    },
    get$elapsedMilliseconds() {
      var ticks = this.get$elapsedTicks();
      if (B.boolConversionCheck(J.$eq$($.$get$Stopwatch__frequency(), 1000)))
        return ticks;
      return D.JSInt_methods._tdivFast$1(ticks, 1000);
    },
    Stopwatch$0() {
      $.$get$Stopwatch__frequency();
    },
    start$0() {
      var t1, t2, _this = this,
        $stop = _this._stop;
      if ($stop != null) {
        t1 = _this._core$_start;
        t2 = A.Stopwatch__now();
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t1 !== "number")
          return t1.$add();
        _this.set$_core$_start(t1 + (t2 - $stop));
        _this._stop = null;
      }
    },
    stop$0() {
      if (this._stop == null)
        this.set$_stop(A.Stopwatch__now());
    },
    reset$0() {
      var t1 = this._stop;
      this.set$_core$_start(t1 == null ? A.Stopwatch__now() : t1);
    },
    get$elapsedTicks() {
      var t2,
        t1 = this._stop;
      if (t1 == null)
        t1 = A.Stopwatch__now();
      t2 = this._core$_start;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 - t2;
    },
    get$elapsed() {
      return A.Duration$(this.get$elapsedMicroseconds(), 0);
    },
    set$_core$_start(_start) {
      this._core$_start = B._asInt(_start);
    },
    set$_stop(_stop) {
      this._stop = B._asIntQ(_stop);
    }
  };
  A._Uri.prototype = {
    get$_text() {
      var result, _this = this,
        value = _this.___Uri__text_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = _this._initializeText$0();
        _this.___Uri__text_FI !== $ && B.throwLateFieldADI("_text");
        _this.___Uri__text_FI = result;
        value = result;
      }
      return value;
    },
    get$pathSegments() {
      var result,
        value = this.___Uri_pathSegments_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A._Uri__computePathSegments(this.path);
        value !== $ && B.throwLateFieldADI("pathSegments");
        this.set$___Uri_pathSegments_FI(result);
        value = result;
      }
      return value;
    },
    get$hashCode(_) {
      var result, _this = this,
        value = _this.___Uri_hashCode_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = J.get$hashCode$(_this.get$_text());
        _this.___Uri_hashCode_FI !== $ && B.throwLateFieldADI("hashCode");
        _this.___Uri_hashCode_FI = result;
        value = result;
      }
      return value;
    },
    get$queryParametersAll() {
      var result, _this = this,
        value = _this.___Uri_queryParametersAll_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A._Uri__computeQueryParametersAll(_this.get$query());
        _this.___Uri_queryParametersAll_FI !== $ && B.throwLateFieldADI("queryParametersAll");
        _this.set$___Uri_queryParametersAll_FI(result);
        value = result;
      }
      return value;
    },
    get$userInfo() {
      return this._userInfo;
    },
    get$host() {
      var host = this._core$_host;
      if (host == null)
        return "";
      if (B.boolConversionCheck(D.JSString_methods.startsWith$1(host, "[")))
        return D.JSString_methods.substring$2(host, 1, host.length - 1);
      return host;
    },
    get$port() {
      var t1 = this._port;
      return t1 == null ? A._Uri__defaultPort(this.scheme) : t1;
    },
    get$query() {
      var t1 = this._query;
      return t1 == null ? "" : t1;
    },
    get$fragment() {
      var t1 = this._fragment;
      return t1 == null ? "" : t1;
    },
    get$hasScheme() {
      return J.get$isNotEmpty$asx(this.scheme);
    },
    get$hasAuthority() {
      return this._core$_host != null;
    },
    get$hasQuery() {
      return this._query != null;
    },
    get$hasFragment() {
      return this._fragment != null;
    },
    _writeAuthority$1(ss) {
      var t1;
      type$.StringSink._as(ss);
      t1 = this._userInfo;
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(t1))) {
        ss.write$1(t1);
        ss.write$1("@");
      }
      t1 = this._core$_host;
      if (t1 != null)
        ss.write$1(t1);
      t1 = this._port;
      if (t1 != null) {
        ss.write$1(":");
        ss.write$1(t1);
      }
    },
    toString$0(_) {
      return this.get$_text();
    },
    _initializeText$0() {
      var _this = this,
        sb = B.StringBuffer$(""),
        t1 = _this.scheme,
        t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t2.get$isNotEmpty(t1))) {
        sb.write$1(t1);
        sb.write$1(":");
      }
      if (B.boolConversionCheck(_this.get$hasAuthority()) || B.boolConversionCheck(t2.$eq(t1, "file"))) {
        sb.write$1("//");
        _this._writeAuthority$1(sb);
      }
      sb.write$1(_this.path);
      t1 = _this._query;
      if (t1 != null) {
        sb.write$1("?");
        sb.write$1(t1);
      }
      t1 = _this._fragment;
      if (t1 != null) {
        sb.write$1("#");
        sb.write$1(t1);
      }
      return sb.toString$0(0);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      return type$.Uri._is(other) && B.boolConversionCheck(J.$eq$(_this.scheme, other.get$scheme())) && B.boolConversionCheck(J.$eq$(_this.get$hasAuthority(), other.get$hasAuthority())) && B.boolConversionCheck(J.$eq$(_this.get$userInfo(), other.get$userInfo())) && B.boolConversionCheck(J.$eq$(_this.get$host(), other.get$host())) && B.boolConversionCheck(J.$eq$(_this.get$port(), other.get$port())) && B.boolConversionCheck(J.$eq$(_this.path, other.get$path())) && B.boolConversionCheck(J.$eq$(_this.get$hasQuery(), other.get$hasQuery())) && B.boolConversionCheck(J.$eq$(_this.get$query(), other.get$query())) && B.boolConversionCheck(J.$eq$(_this.get$hasFragment(), other.get$hasFragment())) && B.boolConversionCheck(J.$eq$(_this.get$fragment(), other.get$fragment()));
    },
    set$___Uri_pathSegments_FI(___Uri_pathSegments_FI) {
      this.___Uri_pathSegments_FI = type$.List_String._as(___Uri_pathSegments_FI);
    },
    set$___Uri_queryParametersAll_FI(___Uri_queryParametersAll_FI) {
      this.___Uri_queryParametersAll_FI = type$.Map_of_String_and_List_String._as(___Uri_queryParametersAll_FI);
    },
    $isUri: 1,
    $is_PlatformUri: 1,
    get$scheme() {
      return this.scheme;
    },
    get$path() {
      return this.path;
    }
  };
  A.UriData.prototype = {
    get$uri() {
      var t1 = this._uriCache;
      if (t1 == null) {
        t1 = this._computeUri$0();
        this.set$_uriCache(t1);
      }
      return t1;
    },
    _computeUri$0() {
      var query,
        t1 = this._text,
        t2 = J.$index$asx(this._separatorIndices, 0) + 1,
        t3 = J.getInterceptor$asx(t1),
        queryIndex = t3.indexOf$2(t1, "?", t2),
        end = t3.get$length(t1);
      if (queryIndex >= 0) {
        query = A._Uri__normalizeOrSubstring(t1, queryIndex + 1, end, C.List_42A, false, false);
        end = queryIndex;
      } else
        query = null;
      return A._DataUri$(this, A._Uri__normalizeOrSubstring(t1, t2, end, C.List_M2I, false, false), query);
    },
    toString$0(_) {
      var t1 = this._text;
      return B.boolConversionCheck(J.$eq$(J.$index$asx(this._separatorIndices, 0), -1)) ? "data:" + B.S(t1) : t1;
    },
    set$_uriCache(_uriCache) {
      this._uriCache = type$.nullable_Uri._as(_uriCache);
    }
  };
  A._SimpleUri.prototype = {
    get$hasScheme() {
      var t1 = this._schemeEnd;
      if (typeof t1 !== "number")
        return t1.$gt();
      return t1 > 0;
    },
    get$hasAuthority() {
      var t1 = this._hostStart;
      if (typeof t1 !== "number")
        return t1.$gt();
      return t1 > 0;
    },
    get$hasPort() {
      var t2,
        t1 = this._hostStart;
      if (typeof t1 !== "number")
        return t1.$gt();
      if (t1 > 0) {
        t1 = this._portStart;
        if (typeof t1 !== "number")
          return t1.$add();
        t2 = this._pathStart;
        if (typeof t2 !== "number")
          return B.iae(t2);
        t2 = t1 + 1 < t2;
        t1 = t2;
      } else
        t1 = false;
      return t1;
    },
    get$hasQuery() {
      var t1 = this._queryStart,
        t2 = this._fragmentStart;
      if (typeof t1 !== "number")
        return t1.$lt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 < t2;
    },
    get$hasFragment() {
      var t1 = this._fragmentStart,
        t2 = J.get$length$asx(this._uri);
      if (typeof t1 !== "number")
        return t1.$lt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 < t2;
    },
    get$_isFile() {
      return B.boolConversionCheck(J.$eq$(this._schemeEnd, 4)) && B.boolConversionCheck(J.startsWith$1$s(this._uri, "file"));
    },
    get$_isHttp() {
      return B.boolConversionCheck(J.$eq$(this._schemeEnd, 4)) && B.boolConversionCheck(J.startsWith$1$s(this._uri, "http"));
    },
    get$_isHttps() {
      return B.boolConversionCheck(J.$eq$(this._schemeEnd, 5)) && B.boolConversionCheck(J.startsWith$1$s(this._uri, "https"));
    },
    get$_isPackage() {
      return B.boolConversionCheck(J.$eq$(this._schemeEnd, 7)) && B.boolConversionCheck(J.startsWith$1$s(this._uri, "package"));
    },
    get$scheme() {
      var t1 = this._schemeCache;
      if (t1 == null) {
        t1 = this._computeScheme$0();
        this.set$_schemeCache(t1);
      }
      return t1;
    },
    _computeScheme$0() {
      var _this = this,
        t1 = _this._schemeEnd;
      if (typeof t1 !== "number")
        return t1.$le();
      if (t1 <= 0)
        return "";
      if (B.boolConversionCheck(_this.get$_isHttp()))
        return "http";
      if (B.boolConversionCheck(_this.get$_isHttps()))
        return "https";
      if (B.boolConversionCheck(_this.get$_isFile()))
        return "file";
      if (B.boolConversionCheck(_this.get$_isPackage()))
        return "package";
      return J.substring$2$s(_this._uri, 0, t1);
    },
    get$userInfo() {
      var t1 = this._hostStart,
        t2 = this._schemeEnd;
      if (typeof t2 !== "number")
        return t2.$add();
      t2 += 3;
      if (typeof t1 !== "number")
        return t1.$gt();
      return t1 > t2 ? J.substring$2$s(this._uri, t2, t1 - 1) : "";
    },
    get$host() {
      var t1 = this._hostStart;
      if (typeof t1 !== "number")
        return t1.$gt();
      return t1 > 0 ? J.substring$2$s(this._uri, t1, this._portStart) : "";
    },
    get$port() {
      var t1, _this = this;
      if (B.boolConversionCheck(_this.get$hasPort())) {
        t1 = _this._portStart;
        if (typeof t1 !== "number")
          return t1.$add();
        return A.int_parse(J.substring$2$s(_this._uri, t1 + 1, _this._pathStart), null);
      }
      if (B.boolConversionCheck(_this.get$_isHttp()))
        return 80;
      if (B.boolConversionCheck(_this.get$_isHttps()))
        return 443;
      return 0;
    },
    get$path() {
      return J.substring$2$s(this._uri, this._pathStart, this._queryStart);
    },
    get$query() {
      var t1 = this._queryStart,
        t2 = this._fragmentStart;
      if (typeof t1 !== "number")
        return t1.$lt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 < t2 ? J.substring$2$s(this._uri, t1 + 1, t2) : "";
    },
    get$fragment() {
      var t1 = this._fragmentStart,
        t2 = this._uri,
        t3 = J.getInterceptor$asx(t2),
        t4 = t3.get$length(t2);
      if (typeof t1 !== "number")
        return t1.$lt();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return t1 < t4 ? t3.substring$1(t2, t1 + 1) : "";
    },
    get$pathSegments() {
      var parts, i,
        start = this._pathStart,
        end = this._queryStart,
        t1 = this._uri,
        t2 = J.getInterceptor$s(t1);
      if (B.boolConversionCheck(t2.startsWith$2(t1, "/", start)))
        ++start;
      if (start === end)
        return C.List_empty;
      parts = B._setArrayType([], type$.JSArray_String);
      for (i = start; i < end; ++i)
        if (t2.codeUnitAt$1(t1, i) === 47) {
          D.JSArray_methods.add$1(parts, t2.substring$2(t1, start, i));
          start = i + 1;
        }
      D.JSArray_methods.add$1(parts, t2.substring$2(t1, start, end));
      return B.List_List$unmodifiable(parts, type$.String);
    },
    get$queryParametersAll() {
      if (!B.boolConversionCheck(this.get$hasQuery()))
        return C.Map_empty;
      var queryParameterLists = A._Uri__splitQueryStringAll(this.get$query());
      queryParameterLists.updateAll$1(A.core___toUnmodifiableStringList$closure());
      return A.ConstantMap_ConstantMap$from(queryParameterLists, type$.String, type$.List_String);
    },
    get$hashCode(_) {
      var t1 = this._hashCodeCache;
      if (t1 == null) {
        t1 = J.get$hashCode$(this._uri);
        this.set$_hashCodeCache(t1);
      }
      return t1;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return type$.Uri._is(other) && B.boolConversionCheck(J.$eq$(this._uri, other.toString$0(0)));
    },
    toString$0(_) {
      return this._uri;
    },
    set$_schemeCache(_schemeCache) {
      this._schemeCache = B._asStringQ(_schemeCache);
    },
    set$_hashCodeCache(_hashCodeCache) {
      this._hashCodeCache = B._asIntQ(_hashCodeCache);
    },
    $isUri: 1,
    $is_PlatformUri: 1
  };
  A._DataUri.prototype = {};
  A.Expando.prototype = {
    $index(_, object) {
      type$.Object._as(object);
      A.Expando__checkType(object);
      return this._jsWeakMap.get(object);
    },
    $indexSet(_, object, value) {
      type$.Object._as(object);
      this.$ti._eval$1("1?")._as(value);
      if (object instanceof B._Record)
        A.Expando__badExpandoKey(object);
      this._jsWeakMap.set(object, value);
    },
    toString$0(_) {
      return "Expando:null";
    }
  };
  A.TimelineTask.prototype = {
    start$1($name) {
      var block, t1, map;
      B._asString($name);
      B.ArgumentError_checkNotNull($name, "name", type$.String);
      if (!B.boolConversionCheck(A._isDartStreamEnabled())) {
        J.add$1$ax(this._stack, null);
        return;
      }
      block = A._AsyncBlock$_($name, this._taskId);
      J.add$1$ax(this._stack, block);
      t1 = type$.nullable_Object;
      map = B.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      block._developer$_start$1(map);
    },
    finish$0() {
      var block,
        t1 = this._stack,
        t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(J.$eq$(t2.get$length(t1), 0)))
        throw B.wrapException(B.StateError$("Uneven calls to start and finish"));
      block = t2.removeLast$0(t1);
      if (block == null)
        return;
      block._finish$1(null);
    }
  };
  A._AsyncBlock.prototype = {
    _developer$_start$1($arguments) {
      A._reportTaskEvent(this._taskId, -1, 5, this.name, A._argumentsAsJson(type$.Map_dynamic_dynamic._as($arguments)));
    },
    _finish$1($arguments) {
      A._reportTaskEvent(this._taskId, -1, 7, this.name, A._argumentsAsJson(type$.nullable_Map_dynamic_dynamic._as($arguments)));
    }
  };
  A._SyncBlock.prototype = {
    get$_jsonArguments() {
      var result,
        value = this.___SyncBlock__jsonArguments_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A._argumentsAsJson(this.$arguments);
        value !== $ && B.throwLateFieldADI("_jsonArguments");
        this.___SyncBlock__jsonArguments_FI = result;
        value = result;
      }
      return value;
    },
    _startSync$0() {
      var _this = this,
        t1 = _this.flow;
      t1 = t1 == null ? null : t1.get$id();
      if (t1 == null)
        t1 = -1;
      A._reportTaskEvent(_this.taskId, t1, 1, _this.name, _this.get$_jsonArguments());
    },
    finish$0() {
      A._reportTaskEvent(this.taskId, -1, 2, this.name, this.get$_jsonArguments());
    }
  };
  A.NullRejectionException.prototype = {
    toString$0(_) {
      return "Promise was rejected with a value of `" + (B.boolConversionCheck(this.isUndefined) ? "undefined" : "null") + "`.";
    },
    $isException: 1
  };
  A.ClipOp.prototype = {
    _enumToString$0() {
      return "ClipOp." + B.S(this._core$_name);
    }
  };
  A.PathFillType.prototype = {
    _enumToString$0() {
      return "PathFillType." + B.S(this._core$_name);
    }
  };
  A._ChannelCallbackRecord.prototype = {
    invoke$2(dataArg, callbackArg) {
      var t1 = type$.nullable_ByteData,
        t2 = type$.void_Function_nullable_ByteData;
      A.invoke2(this._callback, this._ui$_zone, t1._as(dataArg), t2._as(callbackArg), t1, t2);
    }
  };
  A._StoredMessage.prototype = {
    invoke$1(dataArg) {
      var t1 = type$.nullable_ByteData;
      A.invoke1(this._callback, this._ui$_zone, t1._as(dataArg), t1);
    }
  };
  A._Channel.prototype = {
    get$length(_) {
      return J.get$length$asx(this._queue);
    },
    set$capacity(newSize) {
      B._asInt(newSize);
      this._capacity = newSize;
      this._dropOverflowMessages$1(newSize);
    },
    push$1(message) {
      var t1, result, _this = this;
      type$._StoredMessage._as(message);
      if (!B.boolConversionCheck(_this._draining) && _this._channelCallbackRecord != null) {
        _this._channelCallbackRecord.invoke$2(message.data, message.get$invoke());
        return false;
      }
      t1 = _this._capacity;
      if (typeof t1 !== "number")
        return t1.$le();
      if (t1 <= 0)
        return true;
      result = _this._dropOverflowMessages$1(t1 - 1);
      _this._queue.addLast$1(message);
      return result;
    },
    pop$0() {
      return this._queue.removeFirst$0();
    },
    _dropOverflowMessages$1(lengthLimit) {
      var t1, t2, result, t3;
      B._asInt(lengthLimit);
      t1 = this._queue;
      t2 = J.getInterceptor$asx(t1);
      result = false;
      while (true) {
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return t3.$gt();
        if (!(t3 > lengthLimit))
          break;
        t1.removeFirst$0().invoke$1(null);
        result = true;
      }
      return result;
    },
    setListener$1(callback) {
      var t1, _this = this;
      type$.void_Function_2_nullable_ByteData_and_void_Function_nullable_ByteData._as(callback);
      t1 = _this._channelCallbackRecord;
      _this._channelCallbackRecord = A._ChannelCallbackRecord$(callback);
      if (t1 == null && !B.boolConversionCheck(_this._draining))
        _this._drain$0();
    },
    clearListener$0() {
      this._channelCallbackRecord = null;
    },
    _drain$0() {
      this._draining = true;
      B.scheduleMicrotask(this.get$_drainStep());
    },
    _drainStep$0() {
      var message, _this = this;
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(_this._queue)) && _this._channelCallbackRecord != null) {
        message = _this.pop$0();
        _this._channelCallbackRecord.invoke$2(message.data, message.get$invoke());
        B.scheduleMicrotask(_this.get$_drainStep());
      } else
        _this._draining = false;
    }
  };
  A.ChannelBuffers.prototype = {
    push$3($name, data, callback) {
      B._asString($name);
      type$.nullable_ByteData._as(data);
      type$.void_Function_nullable_ByteData._as(callback);
      B.boolConversionCheck(this._channels.putIfAbsent$2($name, new A.ChannelBuffers_push_closure()).push$1(A._StoredMessage$(data, callback)));
    },
    setListener$2($name, callback) {
      B._asString($name);
      type$.void_Function_2_nullable_ByteData_and_void_Function_nullable_ByteData._as(callback);
      this._channels.putIfAbsent$2($name, new A.ChannelBuffers_setListener_closure()).setListener$1(callback);
    },
    clearListener$1($name) {
      var channel = J.$index$asx(this._channels, B._asString($name));
      if (channel != null)
        channel.clearListener$0();
    },
    handleMessage$1(data) {
      var bytes, t1, methodNameLength, t2, methodName, index, channelNameLength, channelName, parts,
        _s143_ = "Invalid arguments for 'resize' method sent to dev.flutter/channel-buffers (arguments must be a two-element list, channel name and new capacity)",
        _s143_0 = "Invalid arguments for 'overflow' method sent to dev.flutter/channel-buffers (arguments must be a two-element list, channel name and flag state)";
      type$.ByteData._as(data);
      bytes = J.asUint8List$2$x(D.NativeByteData_methods.get$buffer(data), D.NativeByteData_methods.get$offsetInBytes(data), D.NativeByteData_methods.get$lengthInBytes(data));
      t1 = bytes.length;
      if (0 >= t1)
        return B.ioore(bytes, 0);
      if (B.boolConversionCheck(J.$eq$(bytes[0], 7))) {
        if (1 >= t1)
          return B.ioore(bytes, 1);
        methodNameLength = bytes[1];
        if (methodNameLength >= 254)
          throw B.wrapException(B.Exception_Exception("Unrecognized message sent to dev.flutter/channel-buffers (method name too long)"));
        t2 = 2 + methodNameLength;
        methodName = D.C_Utf8Codec.decode$1(D.NativeUint8List_methods.sublist$2(bytes, 2, t2));
        switch (methodName) {
          case "resize":
            if (!(t2 >= 0 && t2 < t1))
              return B.ioore(bytes, t2);
            if (!B.boolConversionCheck(J.$eq$(bytes[t2], 12)))
              throw B.wrapException(B.Exception_Exception(_s143_));
            index = t2 + 1;
            if (!(index < t1))
              return B.ioore(bytes, index);
            t2 = bytes[index];
            if (typeof t2 !== "number")
              return t2.$lt();
            if (t2 < 2)
              throw B.wrapException(B.Exception_Exception(_s143_));
            ++index;
            if (!(index < t1))
              return B.ioore(bytes, index);
            if (!B.boolConversionCheck(J.$eq$(bytes[index], 7)))
              throw B.wrapException(B.Exception_Exception("Invalid arguments for 'resize' method sent to dev.flutter/channel-buffers (first argument must be a string)"));
            ++index;
            if (!(index < t1))
              return B.ioore(bytes, index);
            channelNameLength = bytes[index];
            if (channelNameLength >= 254)
              throw B.wrapException(B.Exception_Exception("Invalid arguments for 'resize' method sent to dev.flutter/channel-buffers (channel name must be less than 254 characters long)"));
            ++index;
            t2 = index + channelNameLength;
            channelName = D.C_Utf8Codec.decode$1(D.NativeUint8List_methods.sublist$2(bytes, index, t2));
            if (!(t2 >= 0 && t2 < t1))
              return B.ioore(bytes, t2);
            if (!B.boolConversionCheck(J.$eq$(bytes[t2], 3)))
              throw B.wrapException(B.Exception_Exception("Invalid arguments for 'resize' method sent to dev.flutter/channel-buffers (second argument must be an integer in the range 0 to 2147483647)"));
            this.resize$2(channelName, D.NativeByteData_methods.getUint32$2(data, t2 + 1, $.$get$Endian_host()));
            break;
          case "overflow":
            if (!(t2 >= 0 && t2 < t1))
              return B.ioore(bytes, t2);
            if (!B.boolConversionCheck(J.$eq$(bytes[t2], 12)))
              throw B.wrapException(B.Exception_Exception(_s143_0));
            index = t2 + 1;
            if (!(index < t1))
              return B.ioore(bytes, index);
            t2 = bytes[index];
            if (typeof t2 !== "number")
              return t2.$lt();
            if (t2 < 2)
              throw B.wrapException(B.Exception_Exception(_s143_0));
            ++index;
            if (!(index < t1))
              return B.ioore(bytes, index);
            if (!B.boolConversionCheck(J.$eq$(bytes[index], 7)))
              throw B.wrapException(B.Exception_Exception("Invalid arguments for 'overflow' method sent to dev.flutter/channel-buffers (first argument must be a string)"));
            ++index;
            if (!(index < t1))
              return B.ioore(bytes, index);
            channelNameLength = bytes[index];
            if (channelNameLength >= 254)
              throw B.wrapException(B.Exception_Exception("Invalid arguments for 'overflow' method sent to dev.flutter/channel-buffers (channel name must be less than 254 characters long)"));
            ++index;
            t2 = index + channelNameLength;
            channelName = D.C_Utf8Codec.decode$1(D.NativeUint8List_methods.sublist$2(bytes, index, t2));
            if (!(t2 >= 0 && t2 < t1))
              return B.ioore(bytes, t2);
            if (!B.boolConversionCheck(J.$eq$(bytes[t2], 1)) && !B.boolConversionCheck(J.$eq$(bytes[t2], 2)))
              throw B.wrapException(B.Exception_Exception("Invalid arguments for 'overflow' method sent to dev.flutter/channel-buffers (second argument must be a boolean)"));
            this.allowOverflow$2(channelName, J.$eq$(bytes[t2], 1));
            break;
          default:
            throw B.wrapException(B.Exception_Exception("Unrecognized method '" + methodName + "' sent to dev.flutter/channel-buffers"));
        }
      } else {
        parts = J.split$1$s(D.C_Utf8Codec.decode$1(bytes), "\r");
        t1 = J.getInterceptor$asx(parts);
        if (B.boolConversionCheck(J.$eq$(t1.get$length(parts), 3)) && B.boolConversionCheck(J.$eq$(t1.$index(parts, 0), "resize")))
          this.resize$2(t1.$index(parts, 1), A.int_parse(t1.$index(parts, 2), null));
        else
          throw B.wrapException(B.Exception_Exception("Unrecognized message " + B.S(parts) + " sent to dev.flutter/channel-buffers."));
      }
    },
    resize$2($name, newSize) {
      var t1, t2, channel;
      B._asString($name);
      B._asInt(newSize);
      t1 = this._channels;
      t2 = J.getInterceptor$asx(t1);
      channel = t2.$index(t1, $name);
      if (channel == null)
        t2.$indexSet(t1, $name, A._Channel$(newSize));
      else
        channel.set$capacity(newSize);
    },
    allowOverflow$2($name, allowed) {
      B._asString($name);
      B._asBool(allowed);
    }
  };
  A.OffsetBase.prototype = {
    get$isFinite(_) {
      return B.boolConversionCheck(J.get$isFinite$n(this._dx)) && B.boolConversionCheck(J.get$isFinite$n(this._dy));
    },
    $gt(_, other) {
      var t1, t2;
      type$.OffsetBase._as(other);
      t1 = this._dx;
      t2 = other._dx;
      if (typeof t1 !== "number")
        return t1.$gt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (t1 > t2) {
        t1 = this._dy;
        t2 = other._dy;
        if (typeof t1 !== "number")
          return t1.$gt();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t2 = t1 > t2;
        t1 = t2;
      } else
        t1 = false;
      return t1;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.OffsetBase && B.boolConversionCheck(J.$eq$(other._dx, this._dx)) && B.boolConversionCheck(J.$eq$(other._dy, this._dy));
    },
    get$hashCode(_) {
      return B.Object_hash(this._dx, this._dy, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return "OffsetBase(" + B.S(J.toStringAsFixed$1$n(this._dx, 1)) + ", " + B.S(J.toStringAsFixed$1$n(this._dy, 1)) + ")";
    }
  };
  A.Offset.prototype = {
    get$dx() {
      return this._dx;
    },
    get$dy() {
      return this._dy;
    },
    get$distance() {
      var t3, t4, _this = this,
        t1 = _this.get$dx(),
        t2 = _this.get$dx();
      if (typeof t1 !== "number")
        return t1.$mul();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = _this.get$dy();
      t4 = _this.get$dy();
      if (typeof t3 !== "number")
        return t3.$mul();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return A.sqrt(t1 * t2 + t3 * t4);
    },
    get$distanceSquared() {
      var t3, t4, _this = this,
        t1 = _this.get$dx(),
        t2 = _this.get$dx();
      if (typeof t1 !== "number")
        return t1.$mul();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = _this.get$dy();
      t4 = _this.get$dy();
      if (typeof t3 !== "number")
        return t3.$mul();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return t1 * t2 + t3 * t4;
    },
    get$direction() {
      return A.atan2(this.get$dy(), this.get$dx());
    },
    translate$2(translateX, translateY) {
      var t1, t2;
      B._asDouble(translateX);
      B._asDouble(translateY);
      t1 = this.get$dx();
      if (typeof t1 !== "number")
        return t1.$add();
      t2 = this.get$dy();
      if (typeof t2 !== "number")
        return t2.$add();
      return A.Offset$(t1 + translateX, t2 + translateY);
    },
    $negate(_) {
      return A.Offset$(J.$negate$in(this.get$dx()), J.$negate$in(this.get$dy()));
    },
    $sub(_, other) {
      var t1, t2, t3, t4;
      type$.Offset._as(other);
      t1 = this.get$dx();
      t2 = other.get$dx();
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = this.get$dy();
      t4 = other.get$dy();
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return A.Offset$(t1 - t2, t3 - t4);
    },
    $add(_, other) {
      var t1, t2, t3, t4;
      type$.Offset._as(other);
      t1 = this.get$dx();
      t2 = other.get$dx();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = this.get$dy();
      t4 = other.get$dy();
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return A.Offset$(t1 + t2, t3 + t4);
    },
    $mul(_, operand) {
      var t1, t2;
      B._asDouble(operand);
      t1 = this.get$dx();
      if (typeof t1 !== "number")
        return t1.$mul();
      t2 = this.get$dy();
      if (typeof t2 !== "number")
        return t2.$mul();
      return A.Offset$(t1 * operand, t2 * operand);
    },
    $div(_, operand) {
      var t1, t2;
      B._asDouble(operand);
      t1 = this.get$dx();
      if (typeof t1 !== "number")
        return t1.$div();
      t2 = this.get$dy();
      if (typeof t2 !== "number")
        return t2.$div();
      return A.Offset$(t1 / operand, t2 / operand);
    },
    $and(_, other) {
      type$.Size._as(other);
      return A.Rect$fromLTWH(this.get$dx(), this.get$dy(), other.get$width(), other.get$height());
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Offset && B.boolConversionCheck(J.$eq$(other.get$dx(), this.get$dx())) && B.boolConversionCheck(J.$eq$(other.get$dy(), this.get$dy()));
    },
    get$hashCode(_) {
      return B.Object_hash(this.get$dx(), this.get$dy(), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return "Offset(" + B.S(J.toStringAsFixed$1$n(this.get$dx(), 1)) + ", " + B.S(J.toStringAsFixed$1$n(this.get$dy(), 1)) + ")";
    }
  };
  A.Size.prototype = {
    get$width() {
      return this._dx;
    },
    get$height() {
      return this._dy;
    },
    get$isEmpty(_) {
      var t1 = this.get$width();
      if (typeof t1 !== "number")
        return t1.$le();
      if (!(t1 <= 0)) {
        t1 = this.get$height();
        if (typeof t1 !== "number")
          return t1.$le();
        t1 = t1 <= 0;
      } else
        t1 = true;
      return t1;
    },
    $sub(_, other) {
      var t1, t2, t3, t4, _this = this;
      type$.OffsetBase._as(other);
      if (other instanceof A.Size) {
        t1 = _this.get$width();
        t2 = other.get$width();
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t3 = _this.get$height();
        t4 = other.get$height();
        if (typeof t3 !== "number")
          return t3.$sub();
        if (typeof t4 !== "number")
          return B.iae(t4);
        return A.Offset$(t1 - t2, t3 - t4);
      }
      if (other instanceof A.Offset) {
        t1 = _this.get$width();
        t2 = other.get$dx();
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t3 = _this.get$height();
        t4 = other.get$dy();
        if (typeof t3 !== "number")
          return t3.$sub();
        if (typeof t4 !== "number")
          return B.iae(t4);
        return A.Size$(t1 - t2, t3 - t4);
      }
      throw B.wrapException(B.ArgumentError$(other, null));
    },
    $add(_, other) {
      var t1, t2, t3, t4;
      type$.Offset._as(other);
      t1 = this.get$width();
      t2 = other.get$dx();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = this.get$height();
      t4 = other.get$dy();
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return A.Size$(t1 + t2, t3 + t4);
    },
    $mul(_, operand) {
      var t1, t2;
      B._asDouble(operand);
      t1 = this.get$width();
      if (typeof t1 !== "number")
        return t1.$mul();
      t2 = this.get$height();
      if (typeof t2 !== "number")
        return t2.$mul();
      return A.Size$(t1 * operand, t2 * operand);
    },
    $div(_, operand) {
      var t1, t2;
      B._asDouble(operand);
      t1 = this.get$width();
      if (typeof t1 !== "number")
        return t1.$div();
      t2 = this.get$height();
      if (typeof t2 !== "number")
        return t2.$div();
      return A.Size$(t1 / operand, t2 / operand);
    },
    topLeft$1(origin) {
      return type$.Offset._as(origin);
    },
    topRight$1(origin) {
      var t1, t2;
      type$.Offset._as(origin);
      t1 = origin.get$dx();
      t2 = this.get$width();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return A.Offset$(t1 + t2, origin.get$dy());
    },
    center$1(origin) {
      var t1, t2, t3, t4;
      type$.Offset._as(origin);
      t1 = origin.get$dx();
      t2 = this.get$width();
      if (typeof t2 !== "number")
        return t2.$div();
      if (typeof t1 !== "number")
        return t1.$add();
      t3 = origin.get$dy();
      t4 = this.get$height();
      if (typeof t4 !== "number")
        return t4.$div();
      if (typeof t3 !== "number")
        return t3.$add();
      return A.Offset$(t1 + t2 / 2, t3 + t4 / 2);
    },
    bottomLeft$1(origin) {
      var t1, t2, t3;
      type$.Offset._as(origin);
      t1 = origin.get$dx();
      t2 = origin.get$dy();
      t3 = this.get$height();
      if (typeof t2 !== "number")
        return t2.$add();
      if (typeof t3 !== "number")
        return B.iae(t3);
      return A.Offset$(t1, t2 + t3);
    },
    bottomRight$1(origin) {
      var t1, t2, t3, t4;
      type$.Offset._as(origin);
      t1 = origin.get$dx();
      t2 = this.get$width();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = origin.get$dy();
      t4 = this.get$height();
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return A.Offset$(t1 + t2, t3 + t4);
    },
    contains$1(_, offset) {
      var t1, t2, t3;
      type$.Offset._as(offset);
      t1 = offset.get$dx();
      if (typeof t1 !== "number")
        return t1.$ge();
      t2 = false;
      if (t1 >= 0) {
        t1 = offset.get$dx();
        t3 = this.get$width();
        if (typeof t1 !== "number")
          return t1.$lt();
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (t1 < t3) {
          t1 = offset.get$dy();
          if (typeof t1 !== "number")
            return t1.$ge();
          if (t1 >= 0) {
            t1 = offset.get$dy();
            t2 = this.get$height();
            if (typeof t1 !== "number")
              return t1.$lt();
            if (typeof t2 !== "number")
              return B.iae(t2);
            t2 = t1 < t2;
            t1 = t2;
          } else
            t1 = t2;
        } else
          t1 = t2;
      } else
        t1 = t2;
      return t1;
    },
    get$flipped() {
      return A.Size$(this.get$height(), this.get$width());
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Size && B.boolConversionCheck(J.$eq$(other._dx, this._dx)) && B.boolConversionCheck(J.$eq$(other._dy, this._dy));
    },
    get$hashCode(_) {
      return B.Object_hash(this._dx, this._dy, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return "Size(" + B.S(J.toStringAsFixed$1$n(this.get$width(), 1)) + ", " + B.S(J.toStringAsFixed$1$n(this.get$height(), 1)) + ")";
    }
  };
  A.Rect.prototype = {
    get$width() {
      var t1 = this.right,
        t2 = this.left;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 - t2;
    },
    get$height() {
      var t1 = this.bottom,
        t2 = this.top;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 - t2;
    },
    get$size() {
      return A.Size$(this.get$width(), this.get$height());
    },
    get$hasNaN() {
      var _this = this;
      return B.boolConversionCheck(J.get$isNaN$n(_this.left)) || B.boolConversionCheck(J.get$isNaN$n(_this.top)) || B.boolConversionCheck(J.get$isNaN$n(_this.right)) || B.boolConversionCheck(J.get$isNaN$n(_this.bottom));
    },
    get$isInfinite(_) {
      var t2, _this = this,
        t1 = _this.left;
      if (typeof t1 !== "number")
        return t1.$ge();
      t2 = true;
      if (!(t1 >= 1 / 0)) {
        t1 = _this.top;
        if (typeof t1 !== "number")
          return t1.$ge();
        if (!(t1 >= 1 / 0)) {
          t1 = _this.right;
          if (typeof t1 !== "number")
            return t1.$ge();
          if (!(t1 >= 1 / 0)) {
            t1 = _this.bottom;
            if (typeof t1 !== "number")
              return t1.$ge();
            t1 = t1 >= 1 / 0;
          } else
            t1 = t2;
        } else
          t1 = t2;
      } else
        t1 = t2;
      return t1;
    },
    get$isFinite(_) {
      var _this = this;
      return B.boolConversionCheck(J.get$isFinite$n(_this.left)) && B.boolConversionCheck(J.get$isFinite$n(_this.top)) && B.boolConversionCheck(J.get$isFinite$n(_this.right)) && B.boolConversionCheck(J.get$isFinite$n(_this.bottom));
    },
    get$isEmpty(_) {
      var _this = this,
        t1 = _this.left,
        t2 = _this.right;
      if (typeof t1 !== "number")
        return t1.$ge();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (!(t1 >= t2)) {
        t1 = _this.top;
        t2 = _this.bottom;
        if (typeof t1 !== "number")
          return t1.$ge();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t2 = t1 >= t2;
        t1 = t2;
      } else
        t1 = true;
      return t1;
    },
    shift$1(offset) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _this = this;
      type$.Offset._as(offset);
      t1 = _this.left;
      t2 = offset.get$dx();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = _this.top;
      t4 = offset.get$dy();
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t5 = _this.right;
      t6 = offset.get$dx();
      if (typeof t5 !== "number")
        return t5.$add();
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = _this.bottom;
      t8 = offset.get$dy();
      if (typeof t7 !== "number")
        return t7.$add();
      if (typeof t8 !== "number")
        return B.iae(t8);
      return A.Rect$fromLTRB(t1 + t2, t3 + t4, t5 + t6, t7 + t8);
    },
    translate$2(translateX, translateY) {
      var t1, t2, t3, t4, _this = this;
      B._asDouble(translateX);
      B._asDouble(translateY);
      t1 = _this.left;
      if (typeof t1 !== "number")
        return t1.$add();
      t2 = _this.top;
      if (typeof t2 !== "number")
        return t2.$add();
      t3 = _this.right;
      if (typeof t3 !== "number")
        return t3.$add();
      t4 = _this.bottom;
      if (typeof t4 !== "number")
        return t4.$add();
      return A.Rect$fromLTRB(t1 + translateX, t2 + translateY, t3 + translateX, t4 + translateY);
    },
    inflate$1(delta) {
      var t1, t2, t3, t4, _this = this;
      B._asDouble(delta);
      t1 = _this.left;
      if (typeof t1 !== "number")
        return t1.$sub();
      t2 = _this.top;
      if (typeof t2 !== "number")
        return t2.$sub();
      t3 = _this.right;
      if (typeof t3 !== "number")
        return t3.$add();
      t4 = _this.bottom;
      if (typeof t4 !== "number")
        return t4.$add();
      return A.Rect$fromLTRB(t1 - delta, t2 - delta, t3 + delta, t4 + delta);
    },
    deflate$1(delta) {
      return this.inflate$1(-B._asDouble(delta));
    },
    intersect$1(other) {
      var t1, _this = this;
      type$.Rect._as(other);
      t1 = type$.double;
      return A.Rect$fromLTRB(A.max(_this.left, other.left, t1), A.max(_this.top, other.top, t1), A.min(_this.right, other.right, t1), A.min(_this.bottom, other.bottom, t1));
    },
    expandToInclude$1(other) {
      var t1, _this = this;
      type$.Rect._as(other);
      t1 = type$.double;
      return A.Rect$fromLTRB(A.min(_this.left, other.left, t1), A.min(_this.top, other.top, t1), A.max(_this.right, other.right, t1), A.max(_this.bottom, other.bottom, t1));
    },
    overlaps$1(other) {
      var t1, t2, _this = this;
      type$.Rect._as(other);
      t1 = _this.right;
      t2 = other.left;
      if (typeof t1 !== "number")
        return t1.$le();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (!(t1 <= t2)) {
        t1 = other.right;
        t2 = _this.left;
        if (typeof t1 !== "number")
          return t1.$le();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t2 = t1 <= t2;
        t1 = t2;
      } else
        t1 = true;
      if (t1)
        return false;
      t1 = _this.bottom;
      t2 = other.top;
      if (typeof t1 !== "number")
        return t1.$le();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (!(t1 <= t2)) {
        t1 = other.bottom;
        t2 = _this.top;
        if (typeof t1 !== "number")
          return t1.$le();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t2 = t1 <= t2;
        t1 = t2;
      } else
        t1 = true;
      if (t1)
        return false;
      return true;
    },
    get$shortestSide() {
      return A.min(J.abs$0$in(this.get$width()), J.abs$0$in(this.get$height()), type$.double);
    },
    get$topLeft() {
      return A.Offset$(this.left, this.top);
    },
    get$topRight() {
      return A.Offset$(this.right, this.top);
    },
    get$centerLeft() {
      var t1 = this.top,
        t2 = this.get$height();
      if (typeof t2 !== "number")
        return t2.$div();
      if (typeof t1 !== "number")
        return t1.$add();
      return A.Offset$(this.left, t1 + t2 / 2);
    },
    get$center() {
      var t3, t4, _this = this,
        t1 = _this.left,
        t2 = _this.get$width();
      if (typeof t2 !== "number")
        return t2.$div();
      if (typeof t1 !== "number")
        return t1.$add();
      t3 = _this.top;
      t4 = _this.get$height();
      if (typeof t4 !== "number")
        return t4.$div();
      if (typeof t3 !== "number")
        return t3.$add();
      return A.Offset$(t1 + t2 / 2, t3 + t4 / 2);
    },
    get$bottomLeft() {
      return A.Offset$(this.left, this.bottom);
    },
    get$bottomRight() {
      return A.Offset$(this.right, this.bottom);
    },
    contains$1(_, offset) {
      var t1, t2, t3, _this = this;
      type$.Offset._as(offset);
      t1 = offset.get$dx();
      t2 = _this.left;
      if (typeof t1 !== "number")
        return t1.$ge();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = false;
      if (t1 >= t2) {
        t1 = offset.get$dx();
        t2 = _this.right;
        if (typeof t1 !== "number")
          return t1.$lt();
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (t1 < t2) {
          t1 = offset.get$dy();
          t2 = _this.top;
          if (typeof t1 !== "number")
            return t1.$ge();
          if (typeof t2 !== "number")
            return B.iae(t2);
          if (t1 >= t2) {
            t1 = offset.get$dy();
            t2 = _this.bottom;
            if (typeof t1 !== "number")
              return t1.$lt();
            if (typeof t2 !== "number")
              return B.iae(t2);
            t2 = t1 < t2;
            t1 = t2;
          } else
            t1 = t3;
        } else
          t1 = t3;
      } else
        t1 = t3;
      return t1;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(_this.get$runtimeType(0), J.get$runtimeType$(other))))
        return false;
      return other instanceof A.Rect && B.boolConversionCheck(J.$eq$(other.left, _this.left)) && B.boolConversionCheck(J.$eq$(other.top, _this.top)) && B.boolConversionCheck(J.$eq$(other.right, _this.right)) && B.boolConversionCheck(J.$eq$(other.bottom, _this.bottom));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.left, _this.top, _this.right, _this.bottom, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "Rect.fromLTRB(" + B.S(J.toStringAsFixed$1$n(_this.left, 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.top, 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.right, 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.bottom, 1)) + ")";
    }
  };
  A.Radius.prototype = {
    clamp$1$minimum(_, minimum) {
      type$.nullable_Radius._as(minimum);
      if (minimum == null)
        minimum = C.Radius_jxw;
      return A.Radius$elliptical(A.clampDouble(this.x, minimum.x, 1 / 0), A.clampDouble(this.y, minimum.y, 1 / 0));
    },
    $sub(_, other) {
      var t1, t2, t3, t4;
      type$.Radius._as(other);
      t1 = this.x;
      t2 = other.x;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = this.y;
      t4 = other.y;
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return A.Radius$elliptical(t1 - t2, t3 - t4);
    },
    $add(_, other) {
      var t1, t2, t3, t4;
      type$.Radius._as(other);
      t1 = this.x;
      t2 = other.x;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = this.y;
      t4 = other.y;
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return A.Radius$elliptical(t1 + t2, t3 + t4);
    },
    $mul(_, operand) {
      var t1, t2;
      B._asDouble(operand);
      t1 = this.x;
      if (typeof t1 !== "number")
        return t1.$mul();
      t2 = this.y;
      if (typeof t2 !== "number")
        return t2.$mul();
      return A.Radius$elliptical(t1 * operand, t2 * operand);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(_this.get$runtimeType(0), J.get$runtimeType$(other))))
        return false;
      return other instanceof A.Radius && B.boolConversionCheck(J.$eq$(other.x, _this.x)) && B.boolConversionCheck(J.$eq$(other.y, _this.y));
    },
    get$hashCode(_) {
      return B.Object_hash(this.x, this.y, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = this.x,
        t2 = this.y,
        t3 = J.getInterceptor$(t1);
      return B.boolConversionCheck(t3.$eq(t1, t2)) ? "Radius.circular(" + B.S(t3.toStringAsFixed$1(t1, 1)) + ")" : "Radius.elliptical(" + B.S(t3.toStringAsFixed$1(t1, 1)) + ", " + B.S(J.toStringAsFixed$1$n(t2, 1)) + ")";
    }
  };
  A.RRect.prototype = {
    get$tlRadius() {
      return A.Radius$elliptical(this.tlRadiusX, this.tlRadiusY);
    },
    get$trRadius() {
      return A.Radius$elliptical(this.trRadiusX, this.trRadiusY);
    },
    get$brRadius() {
      return A.Radius$elliptical(this.brRadiusX, this.brRadiusY);
    },
    get$blRadius() {
      return A.Radius$elliptical(this.blRadiusX, this.blRadiusY);
    },
    shift$1(offset) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _this = this;
      type$.Offset._as(offset);
      t1 = _this.left;
      t2 = offset.get$dx();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = _this.top;
      t4 = offset.get$dy();
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t5 = _this.right;
      t6 = offset.get$dx();
      if (typeof t5 !== "number")
        return t5.$add();
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = _this.bottom;
      t8 = offset.get$dy();
      if (typeof t7 !== "number")
        return t7.$add();
      if (typeof t8 !== "number")
        return B.iae(t8);
      return A.RRect$_raw(_this.blRadiusX, _this.blRadiusY, t7 + t8, _this.brRadiusX, _this.brRadiusY, t1 + t2, t5 + t6, _this.tlRadiusX, _this.tlRadiusY, t3 + t4, _this.trRadiusX, _this.trRadiusY, false);
    },
    inflate$1(delta) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, _this = this;
      B._asDouble(delta);
      t1 = _this.left;
      if (typeof t1 !== "number")
        return t1.$sub();
      t2 = _this.top;
      if (typeof t2 !== "number")
        return t2.$sub();
      t3 = _this.right;
      if (typeof t3 !== "number")
        return t3.$add();
      t4 = _this.bottom;
      if (typeof t4 !== "number")
        return t4.$add();
      t5 = _this.tlRadiusX;
      if (typeof t5 !== "number")
        return t5.$add();
      t6 = type$.double;
      t5 = A.max(0, t5 + delta, t6);
      t7 = _this.tlRadiusY;
      if (typeof t7 !== "number")
        return t7.$add();
      t7 = A.max(0, t7 + delta, t6);
      t8 = _this.trRadiusX;
      if (typeof t8 !== "number")
        return t8.$add();
      t8 = A.max(0, t8 + delta, t6);
      t9 = _this.trRadiusY;
      if (typeof t9 !== "number")
        return t9.$add();
      t9 = A.max(0, t9 + delta, t6);
      t10 = _this.blRadiusX;
      if (typeof t10 !== "number")
        return t10.$add();
      t10 = A.max(0, t10 + delta, t6);
      t11 = _this.blRadiusY;
      if (typeof t11 !== "number")
        return t11.$add();
      t11 = A.max(0, t11 + delta, t6);
      t12 = _this.brRadiusX;
      if (typeof t12 !== "number")
        return t12.$add();
      t12 = A.max(0, t12 + delta, t6);
      t13 = _this.brRadiusY;
      if (typeof t13 !== "number")
        return t13.$add();
      return A.RRect$_raw(t10, t11, t4 + delta, t12, A.max(0, t13 + delta, t6), t1 - delta, t3 + delta, t5, t7, t2 - delta, t8, t9, false);
    },
    deflate$1(delta) {
      return this.inflate$1(-B._asDouble(delta));
    },
    get$width() {
      var t1 = this.right,
        t2 = this.left;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 - t2;
    },
    get$height() {
      var t1 = this.bottom,
        t2 = this.top;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 - t2;
    },
    get$outerRect() {
      var _this = this;
      return A.Rect$fromLTRB(_this.left, _this.top, _this.right, _this.bottom);
    },
    get$isEmpty(_) {
      var _this = this,
        t1 = _this.left,
        t2 = _this.right;
      if (typeof t1 !== "number")
        return t1.$ge();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (!(t1 >= t2)) {
        t1 = _this.top;
        t2 = _this.bottom;
        if (typeof t1 !== "number")
          return t1.$ge();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t2 = t1 >= t2;
        t1 = t2;
      } else
        t1 = true;
      return t1;
    },
    get$isRect() {
      var _this = this,
        t1 = false;
      if (B.boolConversionCheck(J.$eq$(_this.tlRadiusX, 0)) || B.boolConversionCheck(J.$eq$(_this.tlRadiusY, 0)))
        if (B.boolConversionCheck(J.$eq$(_this.trRadiusX, 0)) || B.boolConversionCheck(J.$eq$(_this.trRadiusY, 0)))
          if (B.boolConversionCheck(J.$eq$(_this.blRadiusX, 0)) || B.boolConversionCheck(J.$eq$(_this.blRadiusY, 0)))
            t1 = B.boolConversionCheck(J.$eq$(_this.brRadiusX, 0)) || B.boolConversionCheck(J.$eq$(_this.brRadiusY, 0));
      return t1;
    },
    _getMin$4(min, radius1, radius2, limit) {
      var sum;
      B._asDouble(min);
      B._asDouble(radius1);
      B._asDouble(radius2);
      B._asDouble(limit);
      sum = radius1 + radius2;
      if (sum > limit && sum !== 0)
        return A.min(min, limit / sum, type$.double);
      return min;
    },
    scaleRadii$0() {
      var _this = this,
        absWidth = J.abs$0$in(_this.get$width()),
        absHeight = J.abs$0$in(_this.get$height()),
        t1 = _this.blRadiusY,
        t2 = _this.tlRadiusY,
        t3 = _this.tlRadiusX,
        t4 = _this.trRadiusX,
        t5 = _this.trRadiusY,
        t6 = _this.brRadiusY,
        t7 = _this.brRadiusX,
        t8 = _this.blRadiusX,
        scale = _this._getMin$4(_this._getMin$4(_this._getMin$4(_this._getMin$4(1, t1, t2, absHeight), t3, t4, absWidth), t5, t6, absHeight), t7, t8, absWidth);
      if (scale < 1) {
        if (typeof t3 !== "number")
          return t3.$mul();
        if (typeof t2 !== "number")
          return t2.$mul();
        if (typeof t4 !== "number")
          return t4.$mul();
        if (typeof t5 !== "number")
          return t5.$mul();
        if (typeof t8 !== "number")
          return t8.$mul();
        if (typeof t1 !== "number")
          return t1.$mul();
        if (typeof t7 !== "number")
          return t7.$mul();
        if (typeof t6 !== "number")
          return t6.$mul();
        return A.RRect$_raw(t8 * scale, t1 * scale, _this.bottom, t7 * scale, t6 * scale, _this.left, _this.right, t3 * scale, t2 * scale, _this.top, t4 * scale, t5 * scale, false);
      }
      return A.RRect$_raw(t8, t1, _this.bottom, t7, t6, _this.left, _this.right, t3, t2, _this.top, t4, t5, false);
    },
    contains$1(_, point) {
      var t1, t2, t3, t4, scaled, t5, x, y, radiusY, radiusX, t6, _this = this;
      type$.Offset._as(point);
      t1 = point.get$dx();
      t2 = _this.left;
      if (typeof t1 !== "number")
        return t1.$lt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = true;
      if (!(t1 < t2)) {
        t1 = point.get$dx();
        t4 = _this.right;
        if (typeof t1 !== "number")
          return t1.$ge();
        if (typeof t4 !== "number")
          return B.iae(t4);
        if (!(t1 >= t4)) {
          t1 = point.get$dy();
          t4 = _this.top;
          if (typeof t1 !== "number")
            return t1.$lt();
          if (typeof t4 !== "number")
            return B.iae(t4);
          if (!(t1 < t4)) {
            t1 = point.get$dy();
            t3 = _this.bottom;
            if (typeof t1 !== "number")
              return t1.$ge();
            if (typeof t3 !== "number")
              return B.iae(t3);
            t3 = t1 >= t3;
            t1 = t3;
          } else
            t1 = t3;
        } else
          t1 = t3;
      } else
        t1 = t3;
      if (t1)
        return false;
      scaled = _this.scaleRadii$0();
      t1 = point.get$dx();
      t3 = scaled.tlRadiusX;
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (typeof t1 !== "number")
        return t1.$lt();
      if (t1 < t2 + t3) {
        t1 = point.get$dy();
        t4 = _this.top;
        t5 = scaled.tlRadiusY;
        if (typeof t4 !== "number")
          return t4.$add();
        if (typeof t5 !== "number")
          return B.iae(t5);
        if (typeof t1 !== "number")
          return t1.$lt();
        t5 = t1 < t4 + t5;
        t1 = t5;
      } else
        t1 = false;
      if (t1) {
        t1 = point.get$dx();
        if (typeof t1 !== "number")
          return t1.$sub();
        x = t1 - t2 - t3;
        t2 = point.get$dy();
        t1 = _this.top;
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t1 !== "number")
          return B.iae(t1);
        t4 = scaled.tlRadiusY;
        if (typeof t4 !== "number")
          return B.iae(t4);
        y = t2 - t1 - t4;
        radiusY = t4;
        radiusX = t3;
      } else {
        t1 = point.get$dx();
        t3 = _this.right;
        t4 = scaled.trRadiusX;
        if (typeof t3 !== "number")
          return t3.$sub();
        if (typeof t4 !== "number")
          return B.iae(t4);
        if (typeof t1 !== "number")
          return t1.$gt();
        if (t1 > t3 - t4) {
          t1 = point.get$dy();
          t5 = _this.top;
          t6 = scaled.trRadiusY;
          if (typeof t5 !== "number")
            return t5.$add();
          if (typeof t6 !== "number")
            return B.iae(t6);
          if (typeof t1 !== "number")
            return t1.$lt();
          t6 = t1 < t5 + t6;
          t1 = t6;
        } else
          t1 = false;
        if (t1) {
          t1 = point.get$dx();
          if (typeof t1 !== "number")
            return t1.$sub();
          x = t1 - t3 + t4;
          t3 = point.get$dy();
          t1 = _this.top;
          if (typeof t3 !== "number")
            return t3.$sub();
          if (typeof t1 !== "number")
            return B.iae(t1);
          t2 = scaled.trRadiusY;
          if (typeof t2 !== "number")
            return B.iae(t2);
          y = t3 - t1 - t2;
          radiusY = t2;
          radiusX = t4;
        } else {
          t1 = point.get$dx();
          t4 = scaled.brRadiusX;
          if (typeof t4 !== "number")
            return B.iae(t4);
          if (typeof t1 !== "number")
            return t1.$gt();
          if (t1 > t3 - t4) {
            t1 = point.get$dy();
            t5 = _this.bottom;
            t6 = scaled.brRadiusY;
            if (typeof t5 !== "number")
              return t5.$sub();
            if (typeof t6 !== "number")
              return B.iae(t6);
            if (typeof t1 !== "number")
              return t1.$gt();
            t6 = t1 > t5 - t6;
            t1 = t6;
          } else
            t1 = false;
          if (t1) {
            t1 = point.get$dx();
            if (typeof t1 !== "number")
              return t1.$sub();
            x = t1 - t3 + t4;
            t3 = point.get$dy();
            t1 = _this.bottom;
            if (typeof t3 !== "number")
              return t3.$sub();
            if (typeof t1 !== "number")
              return B.iae(t1);
            t2 = scaled.brRadiusY;
            if (typeof t2 !== "number")
              return B.iae(t2);
            y = t3 - t1 + t2;
            radiusY = t2;
            radiusX = t4;
          } else {
            t1 = point.get$dx();
            t3 = scaled.blRadiusX;
            if (typeof t3 !== "number")
              return B.iae(t3);
            if (typeof t1 !== "number")
              return t1.$lt();
            if (t1 < t2 + t3) {
              t1 = point.get$dy();
              t4 = _this.bottom;
              t5 = scaled.blRadiusY;
              if (typeof t4 !== "number")
                return t4.$sub();
              if (typeof t5 !== "number")
                return B.iae(t5);
              if (typeof t1 !== "number")
                return t1.$gt();
              t5 = t1 > t4 - t5;
              t1 = t5;
            } else
              t1 = false;
            if (t1) {
              t1 = point.get$dx();
              if (typeof t1 !== "number")
                return t1.$sub();
              x = t1 - t2 - t3;
              t2 = point.get$dy();
              t1 = _this.bottom;
              if (typeof t2 !== "number")
                return t2.$sub();
              if (typeof t1 !== "number")
                return B.iae(t1);
              t4 = scaled.blRadiusY;
              if (typeof t4 !== "number")
                return B.iae(t4);
              y = t2 - t1 + t4;
            } else
              return true;
            radiusY = t4;
            radiusX = t3;
          }
        }
      }
      x /= radiusX;
      y /= radiusY;
      if (x * x + y * y > 1)
        return false;
      return true;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(_this.get$runtimeType(0), J.get$runtimeType$(other))))
        return false;
      return other instanceof A.RRect && B.boolConversionCheck(J.$eq$(other.left, _this.left)) && B.boolConversionCheck(J.$eq$(other.top, _this.top)) && B.boolConversionCheck(J.$eq$(other.right, _this.right)) && B.boolConversionCheck(J.$eq$(other.bottom, _this.bottom)) && B.boolConversionCheck(J.$eq$(other.tlRadiusX, _this.tlRadiusX)) && B.boolConversionCheck(J.$eq$(other.tlRadiusY, _this.tlRadiusY)) && B.boolConversionCheck(J.$eq$(other.trRadiusX, _this.trRadiusX)) && B.boolConversionCheck(J.$eq$(other.trRadiusY, _this.trRadiusY)) && B.boolConversionCheck(J.$eq$(other.blRadiusX, _this.blRadiusX)) && B.boolConversionCheck(J.$eq$(other.blRadiusY, _this.blRadiusY)) && B.boolConversionCheck(J.$eq$(other.brRadiusX, _this.brRadiusX)) && B.boolConversionCheck(J.$eq$(other.brRadiusY, _this.brRadiusY));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.left, _this.top, _this.right, _this.bottom, _this.tlRadiusX, _this.tlRadiusY, _this.trRadiusX, _this.trRadiusY, _this.blRadiusX, _this.blRadiusY, _this.brRadiusX, _this.brRadiusY, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this,
        rect = B.S(J.toStringAsFixed$1$n(_this.left, 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.top, 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.right, 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.bottom, 1));
      if (B.boolConversionCheck(J.$eq$(_this.get$tlRadius(), _this.get$trRadius())) && B.boolConversionCheck(J.$eq$(_this.get$trRadius(), _this.get$brRadius())) && B.boolConversionCheck(J.$eq$(_this.get$brRadius(), _this.get$blRadius()))) {
        if (B.boolConversionCheck(J.$eq$(_this.get$tlRadius().x, _this.get$tlRadius().y)))
          return "RRect.fromLTRBR(" + rect + ", " + B.S(J.toStringAsFixed$1$n(_this.get$tlRadius().x, 1)) + ")";
        return "RRect.fromLTRBXY(" + rect + ", " + B.S(J.toStringAsFixed$1$n(_this.get$tlRadius().x, 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.get$tlRadius().y, 1)) + ")";
      }
      return "RRect.fromLTRBAndCorners(" + rect + ", topLeft: " + B.S(_this.get$tlRadius()) + ", topRight: " + B.S(_this.get$trRadius()) + ", bottomRight: " + B.S(_this.get$brRadius()) + ", bottomLeft: " + B.S(_this.get$blRadius()) + ")";
    }
  };
  A.Color.prototype = {
    get$alpha() {
      var t1 = this.get$value();
      if (typeof t1 !== "number")
        return B.iae(t1);
      return t1 >>> 24 & 255;
    },
    get$opacity() {
      var t1 = this.get$alpha();
      if (typeof t1 !== "number")
        return t1.$div();
      return t1 / 255;
    },
    get$red() {
      var t1 = this.get$value();
      if (typeof t1 !== "number")
        return B.iae(t1);
      return t1 >>> 16 & 255;
    },
    get$green() {
      var t1 = this.get$value();
      if (typeof t1 !== "number")
        return B.iae(t1);
      return t1 >>> 8 & 255;
    },
    get$blue() {
      var t1 = this.get$value();
      if (typeof t1 !== "number")
        return B.iae(t1);
      return t1 & 255;
    },
    withAlpha$1(a) {
      return A.Color$fromARGB(B._asInt(a), this.get$red(), this.get$green(), this.get$blue());
    },
    withOpacity$1(opacity) {
      return this.withAlpha$1(D.JSNumber_methods.round$0(255 * B._asDouble(opacity)));
    },
    computeLuminance$0() {
      var $R, $G,
        t1 = this.get$red();
      if (typeof t1 !== "number")
        return t1.$div();
      $R = A.Color__linearizeColorComponent(t1 / 255);
      t1 = this.get$green();
      if (typeof t1 !== "number")
        return t1.$div();
      $G = A.Color__linearizeColorComponent(t1 / 255);
      t1 = this.get$blue();
      if (typeof t1 !== "number")
        return t1.$div();
      return 0.2126 * $R + 0.7152 * $G + 0.0722 * A.Color__linearizeColorComponent(t1 / 255);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.Color && B.boolConversionCheck(J.$eq$(other.get$value(), this.get$value()));
    },
    get$hashCode(_) {
      return J.get$hashCode$(this.get$value());
    },
    toString$0(_) {
      return "Color(0x" + B.S(J.padLeft$2$s(J.toRadixString$1$n(this.get$value(), 16), 8, "0")) + ")";
    },
    get$value() {
      return this.value;
    }
  };
  A.StrokeCap.prototype = {
    _enumToString$0() {
      return "StrokeCap." + B.S(this._core$_name);
    }
  };
  A.StrokeJoin.prototype = {
    _enumToString$0() {
      return "StrokeJoin." + B.S(this._core$_name);
    }
  };
  A.PaintingStyle.prototype = {
    _enumToString$0() {
      return "PaintingStyle." + B.S(this._core$_name);
    }
  };
  A.BlendMode.prototype = {
    _enumToString$0() {
      return "BlendMode." + B.S(this._core$_name);
    }
  };
  A.Clip.prototype = {
    _enumToString$0() {
      return "Clip." + B.S(this._core$_name);
    }
  };
  A.BlurStyle.prototype = {
    _enumToString$0() {
      return "BlurStyle." + B.S(this._core$_name);
    }
  };
  A.MaskFilter.prototype = {
    get$webOnlySigma() {
      return this._sigma;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.MaskFilter && B.boolConversionCheck(J.$eq$(other._ui$_style, this._ui$_style)) && B.boolConversionCheck(J.$eq$(other._sigma, this._sigma));
    },
    get$hashCode(_) {
      return B.Object_hash(this._ui$_style, this._sigma, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return "MaskFilter.blur(" + B.S(this._ui$_style) + ", " + B.S(J.toStringAsFixed$1$n(this._sigma, 1)) + ")";
    }
  };
  A.FilterQuality.prototype = {
    _enumToString$0() {
      return "FilterQuality." + B.S(this._core$_name);
    }
  };
  A.PlatformDispatcher.prototype = {
    requestDartPerformanceMode$1(mode) {
      type$.DartPerformanceMode._as(mode);
    },
    get$initialLifecycleState() {
      return "";
    },
    get$supportsShowingSystemContextMenu() {
      return false;
    }
  };
  A.FramePhase.prototype = {
    _enumToString$0() {
      return "FramePhase." + B.S(this._core$_name);
    }
  };
  A._FrameTimingInfo.prototype = {
    _enumToString$0() {
      return "_FrameTimingInfo." + B.S(this._core$_name);
    }
  };
  A.FrameTiming.prototype = {
    timestampInMicroseconds$1(phase) {
      return J.$index$asx(this._ui$_data, type$.FramePhase._as(phase).index);
    },
    _rawDuration$1(phase) {
      return A.Duration$(J.$index$asx(this._ui$_data, type$.FramePhase._as(phase).index), 0);
    },
    _rawInfo$1(info) {
      var t1 = type$._FrameTimingInfo._as(info).index;
      if (typeof t1 !== "number")
        return B.iae(t1);
      return J.$index$asx(this._ui$_data, 6 + t1);
    },
    get$buildDuration() {
      return J.$sub$n(this._rawDuration$1(C.FramePhase_2), this._rawDuration$1(C.FramePhase_1));
    },
    get$rasterDuration() {
      return J.$sub$n(this._rawDuration$1(C.FramePhase_4), this._rawDuration$1(C.FramePhase_3));
    },
    get$vsyncOverhead() {
      return J.$sub$n(this._rawDuration$1(C.FramePhase_1), this._rawDuration$1(C.FramePhase_0));
    },
    get$totalSpan() {
      return J.$sub$n(this._rawDuration$1(C.FramePhase_4), this._rawDuration$1(C.FramePhase_0));
    },
    get$layerCacheCount() {
      return this._rawInfo$1(C._FrameTimingInfo_0);
    },
    get$layerCacheBytes() {
      return this._rawInfo$1(C._FrameTimingInfo_1);
    },
    get$pictureCacheCount() {
      return this._rawInfo$1(C._FrameTimingInfo_2);
    },
    get$pictureCacheBytes() {
      return this._rawInfo$1(C._FrameTimingInfo_3);
    },
    get$frameNumber() {
      return J.get$last$ax(this._ui$_data);
    },
    _formatMS$1(duration) {
      var t1 = type$.Duration._as(duration).get$inMicroseconds();
      if (typeof t1 !== "number")
        return t1.$mul();
      return B.S(t1 * 0.001) + "ms";
    },
    toString$0(_) {
      var _this = this;
      return B.S(_this.get$runtimeType(0)) + "(buildDuration: " + B.S(_this._formatMS$1(_this.get$buildDuration())) + ", rasterDuration: " + B.S(_this._formatMS$1(_this.get$rasterDuration())) + ", vsyncOverhead: " + B.S(_this._formatMS$1(_this.get$vsyncOverhead())) + ", totalSpan: " + B.S(_this._formatMS$1(_this.get$totalSpan())) + ", layerCacheCount: " + B.S(_this.get$layerCacheCount()) + ", layerCacheBytes: " + B.S(_this.get$layerCacheBytes()) + ", pictureCacheCount: " + B.S(_this.get$pictureCacheCount()) + ", pictureCacheBytes: " + B.S(_this.get$pictureCacheBytes()) + ", frameNumber: " + B.S(J.get$last$ax(_this._ui$_data)) + ")";
    }
  };
  A.AppLifecycleState.prototype = {
    _enumToString$0() {
      return "AppLifecycleState." + B.S(this._core$_name);
    }
  };
  A.AppExitResponse.prototype = {
    _enumToString$0() {
      return "AppExitResponse." + B.S(this._core$_name);
    }
  };
  A.Locale.prototype = {
    get$languageCode() {
      var t1 = this._languageCode,
        t2 = C.Map_43kKQ.$index(0, t1);
      return t2 == null ? t1 : t2;
    },
    get$countryCode() {
      var t1 = this._countryCode,
        t2 = C.Map_jnSVN.$index(0, t1);
      return t2 == null ? t1 : t2;
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      t1 = false;
      if (other instanceof A.Locale)
        if (B.boolConversionCheck(J.$eq$(other.get$languageCode(), this.get$languageCode())))
          t1 = B.boolConversionCheck(J.$eq$(other.get$countryCode(), this.get$countryCode()));
      return t1;
    },
    get$hashCode(_) {
      return B.Object_hash(this.get$languageCode(), null, this.get$countryCode(), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return this._rawToString$1("_");
    },
    toLanguageTag$0() {
      return this._rawToString$1("-");
    },
    _rawToString$1(separator) {
      var out;
      B._asString(separator);
      out = B.StringBuffer$(this.get$languageCode());
      if (this._countryCode != null)
        out.write$1(separator + B.S(this.get$countryCode()));
      return out.toString$0(0);
    }
  };
  A.DartPerformanceMode.prototype = {
    _enumToString$0() {
      return "DartPerformanceMode." + B.S(this._core$_name);
    }
  };
  A.SemanticsActionEvent.prototype = {
    copyWith$1$arguments($arguments) {
      var _this = this,
        t1 = B.boolConversionCheck(J.$eq$($arguments, C.C_Object)) ? _this.$arguments : $arguments;
      return A.SemanticsActionEvent$(t1, _this.nodeId, _this.type, _this.viewId);
    },
    toString$0(_) {
      return "SemanticsActionEvent(" + B.S(this.type) + ", view: " + B.S(this.viewId) + ", node: " + B.S(this.nodeId) + ")";
    }
  };
  A.ViewFocusState.prototype = {
    _enumToString$0() {
      return "ViewFocusState." + B.S(this._core$_name);
    }
  };
  A.ViewFocusDirection.prototype = {
    _enumToString$0() {
      return "ViewFocusDirection." + B.S(this._core$_name);
    }
  };
  A.PointerChange.prototype = {
    _enumToString$0() {
      return "PointerChange." + B.S(this._core$_name);
    }
  };
  A.PointerDeviceKind.prototype = {
    _enumToString$0() {
      return "PointerDeviceKind." + B.S(this._core$_name);
    }
  };
  A.PointerSignalKind.prototype = {
    _enumToString$0() {
      return "PointerSignalKind." + B.S(this._core$_name);
    }
  };
  A.PointerData.prototype = {
    respond$1$allowPlatformDefault(allowPlatformDefault) {
      var t1;
      B._asBool(allowPlatformDefault);
      t1 = this._onRespond;
      if (t1 != null)
        t1.call$1$allowPlatformDefault(allowPlatformDefault);
    },
    toString$0(_) {
      return "PointerData(viewId: " + B.S(this.viewId) + ", x: " + B.S(this.physicalX) + ", y: " + B.S(this.physicalY) + ")";
    }
  };
  A.PointerDataPacket.prototype = {};
  A.SemanticsAction.prototype = {
    toString$0(_) {
      return "SemanticsAction." + B.S(this.name);
    }
  };
  A.SemanticsFlag.prototype = {
    toString$0(_) {
      return "SemanticsFlag." + B.S(this.name);
    }
  };
  A.FontStyle.prototype = {
    _enumToString$0() {
      return "FontStyle." + B.S(this._core$_name);
    }
  };
  A.PlaceholderAlignment.prototype = {
    _enumToString$0() {
      return "PlaceholderAlignment." + B.S(this._core$_name);
    }
  };
  A.GlyphInfo.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      return other instanceof A.GlyphInfo && B.boolConversionCheck(J.$eq$(_this.graphemeClusterLayoutBounds, other.graphemeClusterLayoutBounds)) && B.boolConversionCheck(J.$eq$(_this.graphemeClusterCodeUnitRange, other.graphemeClusterCodeUnitRange)) && B.boolConversionCheck(J.$eq$(_this.writingDirection, other.writingDirection));
    },
    get$hashCode(_) {
      return B.Object_hash(this.graphemeClusterLayoutBounds, this.graphemeClusterCodeUnitRange, this.writingDirection, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return "Glyph(" + B.S(this.graphemeClusterLayoutBounds) + ", textRange: " + B.S(this.graphemeClusterCodeUnitRange) + ", direction: " + B.S(this.writingDirection) + ")";
    }
  };
  A.TextAlign.prototype = {
    _enumToString$0() {
      return "TextAlign." + B.S(this._core$_name);
    }
  };
  A.TextBaseline.prototype = {
    _enumToString$0() {
      return "TextBaseline." + B.S(this._core$_name);
    }
  };
  A.TextDecoration.prototype = {
    contains$1(_, other) {
      var t1 = this._mask,
        t2 = type$.TextDecoration._as(other)._mask;
      if (typeof t1 !== "number")
        return t1.$or();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return (t1 | t2) >>> 0 === t1;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.TextDecoration && B.boolConversionCheck(J.$eq$(other._mask, this._mask));
    },
    get$hashCode(_) {
      return J.get$hashCode$(this._mask);
    },
    toString$0(_) {
      var values,
        t1 = this._mask;
      if (B.boolConversionCheck(J.$eq$(t1, 0)))
        return "TextDecoration.none";
      values = B._setArrayType([], type$.JSArray_String);
      if (typeof t1 !== "number")
        return t1.$and();
      if ((t1 & 1) !== 0)
        D.JSArray_methods.add$1(values, "underline");
      if ((t1 & 2) !== 0)
        D.JSArray_methods.add$1(values, "overline");
      if ((t1 & 4) !== 0)
        D.JSArray_methods.add$1(values, "lineThrough");
      t1 = values.length;
      if (t1 === 1) {
        if (0 >= t1)
          return B.ioore(values, 0);
        return "TextDecoration." + B.S(values[0]);
      }
      return "TextDecoration.combine([" + B.S(D.JSArray_methods.join$1(values, ", ")) + "])";
    }
  };
  A.TextDecorationStyle.prototype = {
    _enumToString$0() {
      return "TextDecorationStyle." + B.S(this._core$_name);
    }
  };
  A.TextLeadingDistribution.prototype = {
    _enumToString$0() {
      return "TextLeadingDistribution." + B.S(this._core$_name);
    }
  };
  A.TextDirection.prototype = {
    _enumToString$0() {
      return "TextDirection." + B.S(this._core$_name);
    }
  };
  A.TextBox.prototype = {
    toRect$0() {
      var _this = this;
      return A.Rect$fromLTRB(_this.left, _this.top, _this.right, _this.bottom);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.TextBox && B.boolConversionCheck(J.$eq$(other.left, _this.left)) && B.boolConversionCheck(J.$eq$(other.top, _this.top)) && B.boolConversionCheck(J.$eq$(other.right, _this.right)) && B.boolConversionCheck(J.$eq$(other.bottom, _this.bottom)) && B.boolConversionCheck(J.$eq$(other.direction, _this.direction));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.left, _this.top, _this.right, _this.bottom, _this.direction, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "TextBox.fromLTRBD(" + B.S(J.toStringAsFixed$1$n(_this.left, 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.top, 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.right, 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.bottom, 1)) + ", " + B.S(_this.direction) + ")";
    }
  };
  A.TextAffinity.prototype = {
    _enumToString$0() {
      return "TextAffinity." + B.S(this._core$_name);
    }
  };
  A.TextPosition.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.TextPosition && B.boolConversionCheck(J.$eq$(other.offset, this.offset)) && B.boolConversionCheck(J.$eq$(other.affinity, this.affinity));
    },
    get$hashCode(_) {
      return B.Object_hash(this.offset, this.affinity, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return B.S(this.get$runtimeType(0)) + "(offset: " + B.S(this.offset) + ", affinity: " + B.S(this.affinity) + ")";
    }
  };
  A.TextRange.prototype = {
    get$isValid() {
      var t1 = this.start;
      if (typeof t1 !== "number")
        return t1.$ge();
      if (t1 >= 0) {
        t1 = this.end;
        if (typeof t1 !== "number")
          return t1.$ge();
        t1 = t1 >= 0;
      } else
        t1 = false;
      return t1;
    },
    get$isCollapsed() {
      return J.$eq$(this.start, this.end);
    },
    textBefore$1(text) {
      return D.JSString_methods.substring$2(B._asString(text), 0, this.start);
    },
    textAfter$1(text) {
      return D.JSString_methods.substring$1(B._asString(text), this.end);
    },
    textInside$1(text) {
      return D.JSString_methods.substring$2(B._asString(text), this.start, this.end);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof A.TextRange && B.boolConversionCheck(J.$eq$(other.start, this.start)) && B.boolConversionCheck(J.$eq$(other.end, this.end));
    },
    get$hashCode(_) {
      return B.Object_hash(J.get$hashCode$(this.start), J.get$hashCode$(this.end), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return "TextRange(start: " + B.S(this.start) + ", end: " + B.S(this.end) + ")";
    }
  };
  A.ParagraphConstraints.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.ParagraphConstraints && B.boolConversionCheck(J.$eq$(other.width, this.width));
    },
    get$hashCode(_) {
      return J.get$hashCode$(this.width);
    },
    toString$0(_) {
      return B.S(this.get$runtimeType(0)) + "(width: " + B.S(this.width) + ")";
    }
  };
  A.BoxHeightStyle.prototype = {
    _enumToString$0() {
      return "BoxHeightStyle." + B.S(this._core$_name);
    }
  };
  A.BoxWidthStyle.prototype = {
    _enumToString$0() {
      return "BoxWidthStyle." + B.S(this._core$_name);
    }
  };
  A.TileMode.prototype = {
    _enumToString$0() {
      return "TileMode." + B.S(this._core$_name);
    }
  };
  A.Display.prototype = {};
  A.Brightness.prototype = {
    _enumToString$0() {
      return "Brightness." + B.S(this._core$_name);
    }
  };
  A.GestureSettings.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.GestureSettings;
    },
    get$hashCode(_) {
      return B.Object_hash(null, null, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return "GestureSettings(physicalTouchSlop: null, physicalDoubleTapSlop: null)";
    }
  };
  A.BrowserEngine.prototype = {
    _enumToString$0() {
      return "BrowserEngine." + B.S(this._core$_name);
    }
  };
  A.OperatingSystem.prototype = {
    _enumToString$0() {
      return "OperatingSystem." + B.S(this._core$_name);
    }
  };
  A.BrowserDetection.prototype = {
    get$userAgent() {
      var t1 = this.get$_userAgent();
      return t1;
    },
    get$_userAgent() {
      var result, _this = this,
        value = _this.__BrowserDetection__userAgent_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = _this._detectUserAgent$0();
        _this.__BrowserDetection__userAgent_FI !== $ && B.throwLateFieldADI("_userAgent");
        _this.__BrowserDetection__userAgent_FI = result;
        value = result;
      }
      return value;
    },
    _detectUserAgent$0() {
      return A.DomNavigatorExtension_get_userAgent(B.getProperty(self.window, "navigator", type$.JavaScriptObject));
    },
    get$browserEngine() {
      var t1 = this.get$_browserEngine();
      return t1;
    },
    get$_browserEngine() {
      var result, _this = this,
        value = _this.__BrowserDetection__browserEngine_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = _this._detectBrowserEngine$0();
        _this.__BrowserDetection__browserEngine_FI !== $ && B.throwLateFieldADI("_browserEngine");
        _this.__BrowserDetection__browserEngine_FI = result;
        value = result;
      }
      return value;
    },
    _detectBrowserEngine$0() {
      return this.detectBrowserEngineByVendorAgent$2(A.DomNavigatorExtension_get_vendor(B.getProperty(self.window, "navigator", type$.JavaScriptObject)), J.toLowerCase$0$s(this.get$userAgent()));
    },
    detectBrowserEngineByVendorAgent$2(vendor, agent) {
      B._asString(vendor);
      B._asString(agent);
      if (vendor === "Google Inc.")
        return C.BrowserEngine_0;
      else if (vendor === "Apple Computer, Inc.")
        return C.BrowserEngine_1;
      else if (B.boolConversionCheck(D.JSString_methods.contains$1(agent, "Edg/")))
        return C.BrowserEngine_0;
      else if (vendor === "" && B.boolConversionCheck(D.JSString_methods.contains$1(agent, "firefox")))
        return C.BrowserEngine_2;
      B.print("WARNING: failed to detect current browser engine. Assuming this is a Chromium-compatible browser.");
      return C.BrowserEngine_0;
    },
    get$operatingSystem() {
      var t1 = this.get$_operatingSystem();
      return t1;
    },
    get$_operatingSystem() {
      var result, _this = this,
        value = _this.__BrowserDetection__operatingSystem_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = _this.detectOperatingSystem$0();
        _this.__BrowserDetection__operatingSystem_FI !== $ && B.throwLateFieldADI("_operatingSystem");
        _this.__BrowserDetection__operatingSystem_FI = result;
        value = result;
      }
      return value;
    },
    detectOperatingSystem$0() {
      var maxTouchPoints,
        _s9_ = "navigator",
        t1 = type$.JavaScriptObject,
        t2 = A.DomNavigatorExtension_get_platform(B.getProperty(self.window, _s9_, t1));
      t2.toString;
      if (B.boolConversionCheck(D.JSString_methods.startsWith$1(t2, "Mac"))) {
        t1 = A.DomNavigatorExtension_get_maxTouchPoints(B.getProperty(self.window, _s9_, t1));
        t1 = t1 == null ? null : J.toInt$0$n(t1);
        maxTouchPoints = t1;
        if ((maxTouchPoints == null ? 0 : maxTouchPoints) > 2)
          return C.OperatingSystem_0;
        return C.OperatingSystem_4;
      } else if (B.boolConversionCheck(J.contains$1$asx(D.JSString_methods.toLowerCase$0(t2), "iphone")) || B.boolConversionCheck(J.contains$1$asx(D.JSString_methods.toLowerCase$0(t2), "ipad")) || B.boolConversionCheck(J.contains$1$asx(D.JSString_methods.toLowerCase$0(t2), "ipod")))
        return C.OperatingSystem_0;
      else if (B.boolConversionCheck(J.contains$1$asx(this.get$userAgent(), "Android")))
        return C.OperatingSystem_1;
      else if (B.boolConversionCheck(D.JSString_methods.startsWith$1(t2, "Linux")))
        return C.OperatingSystem_2;
      else if (B.boolConversionCheck(D.JSString_methods.startsWith$1(t2, "Win")))
        return C.OperatingSystem_3;
      else
        return C.OperatingSystem_5;
    },
    get$isDesktop() {
      return C.Set_2h4Ve.contains$1(0, this.get$operatingSystem());
    },
    get$isMobile() {
      return !B.boolConversionCheck(this.get$isDesktop());
    },
    get$isSafari() {
      return J.$eq$(this.get$browserEngine(), C.BrowserEngine_1);
    },
    get$isFirefox() {
      return J.$eq$(this.get$browserEngine(), C.BrowserEngine_2);
    },
    get$isEdge() {
      return J.contains$1$asx(this.get$userAgent(), "Edg/");
    },
    get$isWasm() {
      return false;
    }
  };
  A.ParametricCurve.prototype = {
    transform$1(t) {
      return this.transformInternal$1(B._asDouble(t));
    },
    transformInternal$1(t) {
      B._asDouble(t);
      throw B.wrapException(B.UnimplementedError$(null));
    },
    toString$0(_) {
      return A.objectRuntimeType(this, "ParametricCurve");
    }
  };
  A.Curve.prototype = {
    transform$1(t) {
      B._asDouble(t);
      if (t === 0 || t === 1)
        return t;
      return this.super$ParametricCurve$transform(t);
    },
    get$flipped() {
      return A.FlippedCurve$(this);
    }
  };
  A.Cubic.prototype = {
    _evaluateCubic$3(a, b, m) {
      var t1;
      B._asDouble(a);
      B._asDouble(b);
      B._asDouble(m);
      t1 = 1 - m;
      return 3 * a * t1 * t1 * m + 3 * b * t1 * m * m + m * m * m;
    },
    transformInternal$1(t) {
      var t1, t2, start, end, midpoint, estimate, _this = this;
      B._asDouble(t);
      for (t1 = _this.a, t2 = _this.c, start = 0, end = 1; true;) {
        midpoint = (start + end) / 2;
        estimate = _this._evaluateCubic$3(t1, t2, midpoint);
        if (Math.abs(t - estimate) < 0.001)
          return _this._evaluateCubic$3(_this.b, _this.d, midpoint);
        if (estimate < t)
          start = midpoint;
        else
          end = midpoint;
      }
    },
    toString$0(_) {
      var _this = this;
      return B.S(A.objectRuntimeType(_this, "Cubic")) + "(" + B.S(J.toStringAsFixed$1$n(_this.a, 2)) + ", " + B.S(J.toStringAsFixed$1$n(_this.b, 2)) + ", " + B.S(J.toStringAsFixed$1$n(_this.c, 2)) + ", " + B.S(J.toStringAsFixed$1$n(_this.d, 2)) + ")";
    }
  };
  A.FlippedCurve.prototype = {
    transformInternal$1(t) {
      var t1 = this.curve.transform$1(1 - B._asDouble(t));
      if (typeof t1 !== "number")
        return B.iae(t1);
      return 1 - t1;
    },
    toString$0(_) {
      return B.S(A.objectRuntimeType(this, "FlippedCurve")) + "(" + B.S(this.curve) + ")";
    }
  };
  A._ErrorDiagnostic.prototype = {
    toString$1$minLevel(_, minLevel) {
      type$.DiagnosticLevel._as(minLevel);
      return this.valueToString$1$parentConfiguration(null);
    },
    toString$0(_) {
      return this.toString$1$minLevel(0, C.DiagnosticLevel_3);
    },
    get$value() {
      var t1 = A.DiagnosticsProperty.prototype.get$value.call(this);
      t1.toString;
      return t1;
    },
    valueToString$1$parentConfiguration(parentConfiguration) {
      type$.nullable_TextTreeConfiguration._as(parentConfiguration);
      return J.join$0$ax(this.get$value());
    }
  };
  A.ErrorDescription.prototype = {};
  A.ErrorSummary.prototype = {};
  A.ErrorHint.prototype = {};
  A.ErrorSpacer.prototype = {};
  A.FlutterErrorDetails.prototype = {
    exceptionAsString$0() {
      var message, fullMessage, t1, t2, t3, position, body, splitPoint,
        longMessage = this.exception;
      if (type$.AssertionError._is(longMessage)) {
        message = longMessage.get$message();
        fullMessage = longMessage.toString$0(0);
        longMessage = null;
        if (typeof message == "string" && message !== fullMessage) {
          t1 = fullMessage.length;
          t2 = J.getInterceptor$asx(message);
          t3 = t2.get$length(message);
          if (typeof t3 !== "number")
            return B.iae(t3);
          if (t1 > t3) {
            position = D.JSString_methods.lastIndexOf$1(fullMessage, message);
            t3 = t2.get$length(message);
            if (typeof t3 !== "number")
              return B.iae(t3);
            if (position === t1 - t3 && position > 2 && B.boolConversionCheck(J.$eq$(D.JSString_methods.substring$2(fullMessage, position - 2, position), ": "))) {
              body = D.JSString_methods.substring$2(fullMessage, 0, position - 2);
              splitPoint = D.JSString_methods.indexOf$1(body, " Failed assertion:");
              if (splitPoint >= 0)
                body = B.S(D.JSString_methods.substring$2(body, 0, splitPoint)) + "\n" + B.S(D.JSString_methods.substring$1(body, splitPoint + 1));
              longMessage = B.S(t2.trimRight$0(message)) + "\n" + body;
            }
          }
        }
        if (longMessage == null)
          longMessage = fullMessage;
      } else if (!(typeof longMessage == "string"))
        longMessage = type$.Error._is(longMessage) || type$.Exception._is(longMessage) ? J.toString$0$(longMessage) : "  " + B.S(longMessage);
      longMessage = J.trimRight$0$s(longMessage);
      return B.boolConversionCheck(J.get$isEmpty$asx(longMessage)) ? "  <no message available>" : longMessage;
    },
    _exceptionToDiagnosticable$0() {
      var t1,
        exception = this.exception;
      if (exception instanceof A.FlutterError)
        return exception;
      if (type$.AssertionError._is(exception) && exception.get$message() instanceof A.FlutterError) {
        t1 = exception.get$message();
        t1.toString;
        return type$.FlutterError._as(t1);
      }
      return null;
    },
    get$summary() {
      var builder, summary;
      if (this._exceptionToDiagnosticable$0() != null) {
        builder = A.DiagnosticPropertiesBuilder$();
        this.debugFillProperties$1(builder);
        summary = J.firstWhere$2$orElse$ax(J.cast$1$0$ax(builder.properties, type$.nullable_DiagnosticsNode), new A.FlutterErrorDetails_summary_closure(), new A.FlutterErrorDetails_summary_closure0());
      } else
        summary = null;
      return summary == null ? A.ErrorSummary$(new A.FlutterErrorDetails_summary_formatException(this).call$0()) : summary;
    },
    debugFillProperties$1(properties) {
      var t1, verb, diagnosticable, errorName, t2, t3, prefix, message, stackFrames, _this = this;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      t1 = _this.context;
      verb = A.ErrorDescription$("thrown" + B.S(t1 != null ? A.ErrorDescription$(" " + B.S(t1)) : ""));
      diagnosticable = _this._exceptionToDiagnosticable$0();
      t1 = _this.exception;
      if (typeof t1 == "number")
        properties.add$1(0, A.ErrorDescription$("The number " + B.S(t1) + " was " + B.S(verb) + "."));
      else {
        if (type$.AssertionError._is(t1))
          errorName = A.ErrorDescription$("assertion");
        else if (typeof t1 == "string")
          errorName = A.ErrorDescription$("message");
        else {
          t2 = type$.Error._is(t1) || type$.Exception._is(t1);
          t3 = J.getInterceptor$(t1);
          errorName = t2 ? A.ErrorDescription$(B.S(t3.get$runtimeType(t1))) : A.ErrorDescription$(B.S(t3.get$runtimeType(t1)) + " object");
        }
        properties.add$1(0, A.ErrorDescription$("The following " + B.S(errorName) + " was " + B.S(verb) + ":"));
        if (diagnosticable != null)
          diagnosticable.debugFillProperties$1(properties);
        else {
          prefix = B.S(J.get$runtimeType$(t1)) + ": ";
          message = _this.exceptionAsString$0();
          properties.add$1(0, A.ErrorSummary$(B.boolConversionCheck(D.JSString_methods.startsWith$1(message, prefix)) ? D.JSString_methods.substring$1(message, prefix.length) : message));
        }
      }
      t2 = _this.stack;
      if (t2 != null) {
        if (type$.AssertionError._is(t1) && diagnosticable == null) {
          stackFrames = J.toList$0$ax(J.skipWhile$1$ax(A.StackFrame_fromStackTrace(A.FlutterError__defaultStackTraceDemangler(t2)), new A.FlutterErrorDetails_debugFillProperties_closure()));
          t1 = J.getInterceptor$asx(stackFrames);
          t3 = t1.get$length(stackFrames);
          if (typeof t3 !== "number")
            return t3.$ge();
          if (t3 >= 2 && B.boolConversionCheck(J.$eq$(t1.$index(stackFrames, 0).$package, "flutter")) && B.boolConversionCheck(J.$eq$(t1.$index(stackFrames, 1).$package, "flutter"))) {
            properties.add$1(0, A.ErrorSpacer$());
            properties.add$1(0, A.ErrorHint$("Either the assertion indicates an error in the framework itself, or we should provide substantially more information in this error message to help you determine and fix the underlying cause.\nIn either case, please report this assertion by filing a bug on GitHub:\n  https://github.com/flutter/flutter/issues/new?template=2_bug.yml"));
          }
        }
        properties.add$1(0, A.ErrorSpacer$());
        properties.add$1(0, A.DiagnosticsStackTrace$("When the exception was thrown, this was the stack", t2, null));
      }
      t1 = _this.informationCollector;
      if (t1 != null) {
        properties.add$1(0, A.ErrorSpacer$());
        J.forEach$1$ax(t1.call$0(), properties.get$add(properties));
      }
    },
    toStringShort$0() {
      var t1 = this.library;
      return t1 != null ? "Exception caught by " + B.S(t1) : "Exception caught";
    },
    toString$0(_) {
      return this.toDiagnosticsNode$1$style(C.DiagnosticsTreeStyle_5).toStringDeep$1$minLevel(C.DiagnosticLevel_3);
    },
    toDiagnosticsNode$2$name$style($name, style) {
      return A._FlutterErrorDetailsNode$(B._asStringQ($name), type$.nullable_DiagnosticsTreeStyle._as(style), this);
    },
    toDiagnosticsNode$1$style(style) {
      return this.toDiagnosticsNode$2$name$style(null, style);
    },
    $isDiagnosticable: 1
  };
  A.FlutterError.prototype = {
    get$message() {
      return this.toString$0(0);
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      J.forEach$1$ax(this.diagnostics, properties.get$add(properties));
    },
    toStringShort$0() {
      return "FlutterError";
    },
    toString$0(_) {
      return J.join$1$ax(J.map$1$1$ax(this.diagnostics, new A.FlutterError_toString_closure(A.TextTreeRenderer$(-1, 4000000000, 65)), type$.String), "\n");
    },
    $isAssertionError: 1,
    $isDiagnosticable: 1,
    $isDiagnosticableTree: 1,
    $isDiagnosticableTreeMixin: 1,
    $is_DiagnosticableTree_Object_Diagnosticable: 1
  };
  A.DiagnosticsStackTrace.prototype = {
    get$allowTruncate() {
      return false;
    }
  };
  A._FlutterErrorDetailsNode.prototype = {
    get$builder() {
      var properties, t1,
        builder = A.DiagnosticableNode.prototype.get$builder.call(this);
      if (builder == null)
        return null;
      properties = builder.properties;
      for (t1 = J.get$iterator$ax($.FlutterErrorDetails_propertiesTransformers); B.boolConversionCheck(t1.moveNext$0());)
        properties = t1.get$current().call$1(properties);
      return A.DiagnosticPropertiesBuilder$fromProperties(J.toList$0$ax(properties));
    }
  };
  A._FlutterError_Error_DiagnosticableTreeMixin.prototype = {$isDiagnosticable: 1, $isDiagnosticableTree: 1, $isDiagnosticableTreeMixin: 1, $is_DiagnosticableTree_Object_Diagnosticable: 1};
  A._FlutterErrorDetails_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.Listenable.prototype = {};
  A.ChangeNotifier.prototype = {
    get$hasListeners() {
      var t1 = this.get$_count();
      if (typeof t1 !== "number")
        return t1.$gt();
      return t1 > 0;
    },
    addListener$1(listener) {
      var t1, t2, newListeners, i, _this = this;
      type$.void_Function._as(listener);
      A.ChangeNotifier_maybeDispatchObjectCreation(_this);
      if (B.boolConversionCheck(J.$eq$(_this.get$_count(), J.get$length$asx(_this.get$_change_notifier$_listeners())))) {
        t1 = type$.nullable_void_Function;
        if (B.boolConversionCheck(J.$eq$(_this.get$_count(), 0)))
          _this.set$_change_notifier$_listeners(B.List_List$filled(1, null, false, t1));
        else {
          t2 = J.get$length$asx(_this.get$_change_notifier$_listeners());
          if (typeof t2 !== "number")
            return t2.$mul();
          newListeners = B.List_List$filled(t2 * 2, null, false, t1);
          t1 = J.getInterceptor$ax(newListeners);
          i = 0;
          while (true) {
            t2 = _this.get$_count();
            if (typeof t2 !== "number")
              return B.iae(t2);
            if (!(i < t2))
              break;
            t1.$indexSet(newListeners, i, J.$index$asx(_this.get$_change_notifier$_listeners(), i));
            ++i;
          }
          _this.set$_change_notifier$_listeners(newListeners);
        }
      }
      t1 = _this.get$_change_notifier$_listeners();
      t2 = _this.get$_count();
      if (typeof t2 !== "number")
        return t2.$add();
      _this.set$_count(t2 + 1);
      J.$indexSet$ax(t1, t2, listener);
    },
    _removeAt$1(index) {
      var t1, t2, newListeners, i, i0, _this = this;
      B._asInt(index);
      t1 = _this.get$_count();
      if (typeof t1 !== "number")
        return t1.$sub();
      _this.set$_count(t1 - 1);
      t1 = _this.get$_count();
      if (typeof t1 !== "number")
        return t1.$mul();
      t2 = J.get$length$asx(_this.get$_change_notifier$_listeners());
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (t1 * 2 <= t2) {
        newListeners = B.List_List$filled(_this.get$_count(), null, false, type$.nullable_void_Function);
        for (t1 = J.getInterceptor$ax(newListeners), i = 0; i < index; ++i)
          t1.$indexSet(newListeners, i, J.$index$asx(_this.get$_change_notifier$_listeners(), i));
        i = index;
        while (true) {
          t2 = _this.get$_count();
          if (typeof t2 !== "number")
            return B.iae(t2);
          if (!(i < t2))
            break;
          i0 = i + 1;
          t1.$indexSet(newListeners, i, J.$index$asx(_this.get$_change_notifier$_listeners(), i0));
          i = i0;
        }
        _this.set$_change_notifier$_listeners(newListeners);
      } else {
        i = index;
        while (true) {
          t1 = _this.get$_count();
          if (typeof t1 !== "number")
            return B.iae(t1);
          if (!(i < t1))
            break;
          i0 = i + 1;
          J.$indexSet$ax(_this.get$_change_notifier$_listeners(), i, J.$index$asx(_this.get$_change_notifier$_listeners(), i0));
          i = i0;
        }
        J.$indexSet$ax(_this.get$_change_notifier$_listeners(), _this.get$_count(), null);
      }
    },
    removeListener$1(listener) {
      var i, t1, _this = this;
      type$.void_Function._as(listener);
      i = 0;
      while (true) {
        t1 = _this.get$_count();
        if (typeof t1 !== "number")
          return B.iae(t1);
        if (!(i < t1))
          break;
        if (B.boolConversionCheck(J.$eq$(J.$index$asx(_this.get$_change_notifier$_listeners(), i), listener))) {
          t1 = _this.get$_notificationCallStackDepth();
          if (typeof t1 !== "number")
            return t1.$gt();
          if (t1 > 0) {
            J.$indexSet$ax(_this.get$_change_notifier$_listeners(), i, null);
            t1 = _this.get$_reentrantlyRemovedListeners();
            if (typeof t1 !== "number")
              return t1.$add();
            _this.set$_reentrantlyRemovedListeners(t1 + 1);
          } else
            _this._removeAt$1(i);
          break;
        }
        ++i;
      }
    },
    dispose$0() {
      var _this = this,
        t1 = B.boolConversionCheck(_this.get$_creationDispatched());
      if (t1)
        $.$get$FlutterMemoryAllocations_instance().dispatchObjectDisposed$1$object(_this);
      _this.set$_change_notifier$_listeners($.$get$ChangeNotifier__emptyListeners());
      _this.set$_count(0);
    },
    notifyListeners$0() {
      var i, exception, stack, t1, end, exception0, t2, newLength, newListeners, newIndex, listener, newIndex0, swapIndex, _this = this;
      if (B.boolConversionCheck(J.$eq$(_this.get$_count(), 0)))
        return;
      t1 = _this.get$_notificationCallStackDepth();
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_notificationCallStackDepth(t1 + 1);
      end = _this.get$_count();
      i = 0;
      while (true) {
        t1 = i;
        if (typeof t1 !== "number")
          return t1.$lt();
        if (!(t1 < end))
          break;
        try {
          t1 = J.$index$asx(_this.get$_change_notifier$_listeners(), i);
          if (t1 != null)
            t1.call$0();
        } catch (exception0) {
          exception = B.unwrapException(exception0);
          stack = B.getTraceFromException(exception0);
          A.FlutterError_reportError(A.FlutterErrorDetails$(A.ErrorDescription$("while dispatching notifications for " + B.S(_this.get$runtimeType(0))), exception, new A.ChangeNotifier_notifyListeners_closure(_this), "foundation library", false, stack));
        }
        t1 = i;
        if (typeof t1 !== "number")
          return t1.$add();
        i = t1 + 1;
      }
      t1 = _this.get$_notificationCallStackDepth();
      if (typeof t1 !== "number")
        return t1.$sub();
      _this.set$_notificationCallStackDepth(t1 - 1);
      if (B.boolConversionCheck(J.$eq$(_this.get$_notificationCallStackDepth(), 0))) {
        t1 = _this.get$_reentrantlyRemovedListeners();
        if (typeof t1 !== "number")
          return t1.$gt();
        t1 = t1 > 0;
      } else
        t1 = false;
      if (t1) {
        t1 = _this.get$_count();
        t2 = _this.get$_reentrantlyRemovedListeners();
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return B.iae(t2);
        newLength = t1 - t2;
        t1 = J.get$length$asx(_this.get$_change_notifier$_listeners());
        if (typeof t1 !== "number")
          return B.iae(t1);
        if (newLength * 2 <= t1) {
          newListeners = B.List_List$filled(newLength, null, false, type$.nullable_void_Function);
          t1 = J.getInterceptor$ax(newListeners);
          newIndex = 0;
          i = 0;
          while (true) {
            t2 = _this.get$_count();
            if (typeof t2 !== "number")
              return B.iae(t2);
            if (!(i < t2))
              break;
            listener = J.$index$asx(_this.get$_change_notifier$_listeners(), i);
            if (listener != null) {
              newIndex0 = newIndex + 1;
              t1.$indexSet(newListeners, newIndex, listener);
              newIndex = newIndex0;
            }
            ++i;
          }
          _this.set$_change_notifier$_listeners(newListeners);
        } else
          for (i = 0; i < newLength; ++i)
            if (J.$index$asx(_this.get$_change_notifier$_listeners(), i) == null) {
              swapIndex = i + 1;
              for (; J.$index$asx(_this.get$_change_notifier$_listeners(), swapIndex) == null;)
                ++swapIndex;
              J.$indexSet$ax(_this.get$_change_notifier$_listeners(), i, J.$index$asx(_this.get$_change_notifier$_listeners(), swapIndex));
              J.$indexSet$ax(_this.get$_change_notifier$_listeners(), swapIndex, null);
            }
        _this.set$_reentrantlyRemovedListeners(0);
        _this.set$_count(newLength);
      }
    },
    set$_count(_count) {
      this.ChangeNotifier__count = B._asInt(_count);
    },
    set$_change_notifier$_listeners(_listeners) {
      this.ChangeNotifier__listeners = type$.List_of_nullable_void_Function._as(_listeners);
    },
    set$_notificationCallStackDepth(_notificationCallStackDepth) {
      this.ChangeNotifier__notificationCallStackDepth = B._asInt(_notificationCallStackDepth);
    },
    set$_reentrantlyRemovedListeners(_reentrantlyRemovedListeners) {
      this.ChangeNotifier__reentrantlyRemovedListeners = B._asInt(_reentrantlyRemovedListeners);
    },
    set$_creationDispatched(_creationDispatched) {
      this.ChangeNotifier__creationDispatched = B._asBool(_creationDispatched);
    },
    $isListenable: 1,
    get$_count() {
      return this.ChangeNotifier__count;
    },
    get$_change_notifier$_listeners() {
      return this.ChangeNotifier__listeners;
    },
    get$_notificationCallStackDepth() {
      return this.ChangeNotifier__notificationCallStackDepth;
    },
    get$_reentrantlyRemovedListeners() {
      return this.ChangeNotifier__reentrantlyRemovedListeners;
    },
    get$_creationDispatched() {
      return this.ChangeNotifier__creationDispatched;
    }
  };
  A.ValueNotifier.prototype = {
    ValueNotifier$1(_value, $T) {
      A.ChangeNotifier_maybeDispatchObjectCreation(this);
    },
    get$value() {
      return this._change_notifier$_value;
    },
    set$value(newValue) {
      var _this = this;
      B._instanceType(_this)._eval$1("ValueNotifier.T")._as(newValue);
      if (B.boolConversionCheck(J.$eq$(_this._change_notifier$_value, newValue)))
        return;
      _this.set$_change_notifier$_value(newValue);
      _this.notifyListeners$0();
    },
    toString$0(_) {
      return B.S(A.describeIdentity(this)) + "(" + B.S(this.get$value()) + ")";
    },
    set$_change_notifier$_value(_value) {
      this._change_notifier$_value = B._instanceType(this)._eval$1("ValueNotifier.T")._as(_value);
    },
    $isValueListenable: 1
  };
  A.DiagnosticLevel.prototype = {
    _enumToString$0() {
      return "DiagnosticLevel." + B.S(this._core$_name);
    }
  };
  A.DiagnosticsTreeStyle.prototype = {
    _enumToString$0() {
      return "DiagnosticsTreeStyle." + B.S(this._core$_name);
    }
  };
  A.TextTreeConfiguration.prototype = {};
  A._WordWrapParseMode.prototype = {
    _enumToString$0() {
      return "_WordWrapParseMode." + B.S(this._core$_name);
    }
  };
  A._PrefixedStringBuilder.prototype = {
    get$prefixOtherLines() {
      var t1 = this._nextPrefixOtherLines;
      return t1 == null ? this._prefixOtherLines : t1;
    },
    set$prefixOtherLines(prefix) {
      this._prefixOtherLines = B._asStringQ(prefix);
      this._nextPrefixOtherLines = null;
    },
    incrementPrefixOtherLines$2$updateCurrentLine(suffix, updateCurrentLine) {
      var t1, _this = this;
      B._asString(suffix);
      B._asBool(updateCurrentLine);
      if (B.boolConversionCheck(J.get$isEmpty$asx(_this._currentLine)) || updateCurrentLine) {
        t1 = _this.get$prefixOtherLines();
        t1.toString;
        _this.set$_prefixOtherLines(J.$add$ansx(t1, suffix));
        _this._nextPrefixOtherLines = null;
      } else {
        t1 = _this.get$prefixOtherLines();
        t1.toString;
        _this.set$_nextPrefixOtherLines(J.$add$ansx(t1, suffix));
      }
    },
    get$requiresMultipleLines() {
      var t2, t3, _this = this,
        t1 = _this._numLines;
      if (typeof t1 !== "number")
        return t1.$gt();
      t2 = true;
      if (!(t1 > 1))
        if (!(t1 === 1 && B.boolConversionCheck(J.get$isNotEmpty$asx(_this._currentLine)))) {
          t1 = J.get$length$asx(_this._currentLine);
          t2 = _this._getCurrentPrefix$1(true);
          t2.toString;
          t2 = J.get$length$asx(t2);
          if (typeof t1 !== "number")
            return t1.$add();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t3 = _this.wrapWidth;
          t3.toString;
          if (typeof t3 !== "number")
            return B.iae(t3);
          t3 = t1 + t2 > t3;
          t1 = t3;
        } else
          t1 = t2;
      else
        t1 = t2;
      return t1;
    },
    get$isCurrentLineEmpty() {
      return J.get$isEmpty$asx(this._currentLine);
    },
    _finalizeLine$1(addTrailingLineBreak) {
      var firstLine, t1, t2, text, t3, t4, t5, lines, $length, i, _this = this;
      B._asBool(addTrailingLineBreak);
      firstLine = J.get$isEmpty$asx(_this._diagnostics$_buffer);
      t1 = _this._currentLine;
      t2 = J.getInterceptor$(t1);
      text = t2.toString$0(t1);
      t2.clear$0(t1);
      t1 = _this._wrappableRanges;
      t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t2.get$isEmpty(t1))) {
        _this._writeLine$3$firstLine$includeLineBreak(text, firstLine, addTrailingLineBreak);
        return;
      }
      t3 = _this.wrapWidth;
      t3.toString;
      if (firstLine)
        t4 = J.get$length$asx(_this.prefixLineOne);
      else {
        t4 = _this._prefixOtherLines;
        t4.toString;
        t4 = J.get$length$asx(t4);
      }
      t5 = _this._prefixOtherLines;
      t5.toString;
      lines = A._PrefixedStringBuilder__wordWrapLine(text, t1, t3, J.get$length$asx(t5), t4);
      t4 = J.getInterceptor$asx(lines);
      $length = t4.get$length(lines);
      for (t3 = t4.get$iterator(lines), t4 = !addTrailingLineBreak, i = 0; B.boolConversionCheck(t3.moveNext$0());) {
        t5 = t3.get$current();
        ++i;
        _this._writeLine$3$firstLine$includeLineBreak(t5, firstLine, !t4 || i < $length);
      }
      t2.clear$0(t1);
    },
    write$2$allowWrap(s, allowWrap) {
      var lines, t1, t2, t3, t4, t5, i, line, wrapStart, wrapEnd, _this = this;
      B._asString(s);
      B._asBool(allowWrap);
      if (B.boolConversionCheck(D.JSString_methods.get$isEmpty(s)))
        return;
      lines = B._setArrayType(s.split("\n"), type$.JSArray_String);
      for (t1 = _this._currentLine, t2 = _this.wrapWidth != null, t3 = _this._wrappableRanges, t4 = J.getInterceptor$asx(t3), t5 = J.getInterceptor$asx(t1), i = 0; i < lines.length; ++i) {
        if (i > 0) {
          _this._finalizeLine$1(true);
          _this._updatePrefix$0();
        }
        line = lines[i];
        if (B.boolConversionCheck(D.JSString_methods.get$isNotEmpty(line))) {
          if (allowWrap && t2) {
            wrapStart = t5.get$length(t1);
            wrapEnd = wrapStart + line.length;
            if (B.boolConversionCheck(t4.get$isNotEmpty(t3)) && B.boolConversionCheck(J.$eq$(t4.get$last(t3), wrapStart)))
              t4.set$last(t3, wrapEnd);
            else {
              t4.add$1(t3, wrapStart);
              t4.add$1(t3, wrapEnd);
            }
          }
          t1.write$1(line);
        }
      }
    },
    write$1(s) {
      return this.write$2$allowWrap(s, false);
    },
    _updatePrefix$0() {
      var t1 = this._nextPrefixOtherLines;
      if (t1 != null) {
        this.set$_prefixOtherLines(t1);
        this._nextPrefixOtherLines = null;
      }
    },
    _writeLine$3$firstLine$includeLineBreak(line, firstLine, includeLineBreak) {
      var t1, _this = this;
      B._asString(line);
      B._asBool(includeLineBreak);
      t1 = _this._diagnostics$_buffer;
      t1.write$1(D.JSString_methods.trimRight$0(B.S(_this._getCurrentPrefix$1(B._asBool(firstLine))) + line));
      if (includeLineBreak)
        t1.write$1("\n");
      t1 = _this._numLines;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_numLines(t1 + 1);
    },
    _getCurrentPrefix$1(firstLine) {
      B._asBool(firstLine);
      return B.boolConversionCheck(J.get$isEmpty$asx(this._diagnostics$_buffer)) ? this.prefixLineOne : this._prefixOtherLines;
    },
    writeRawLines$1(lines) {
      var t1, _this = this;
      B._asString(lines);
      if (B.boolConversionCheck(D.JSString_methods.get$isEmpty(lines)))
        return;
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(_this._currentLine)))
        _this._finalizeLine$1(true);
      t1 = _this._diagnostics$_buffer;
      t1.write$1(lines);
      if (!B.boolConversionCheck(D.JSString_methods.endsWith$1(lines, "\n")))
        t1.write$1("\n");
      t1 = _this._numLines;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_numLines(t1 + 1);
      _this._updatePrefix$0();
    },
    writeStretched$2(text, targetLineLength) {
      var t1, t2, t3, targetLength, _this = this;
      B._asString(text);
      B._asInt(targetLineLength);
      _this.write$1(text);
      t1 = _this._currentLine;
      t2 = J.get$length$asx(t1);
      t3 = _this._getCurrentPrefix$1(J.get$isEmpty$asx(_this._diagnostics$_buffer));
      t3.toString;
      t3 = J.get$length$asx(t3);
      if (typeof t2 !== "number")
        return t2.$add();
      if (typeof t3 !== "number")
        return B.iae(t3);
      targetLength = targetLineLength - (t2 + t3);
      if (targetLength > 0) {
        t2 = text.length;
        t3 = t2 - 1;
        if (!(t3 >= 0))
          return B.ioore(text, t3);
        t1.write$1(D.JSString_methods.$mul(text[t3], targetLength));
      }
      J.clear$0$ax(_this._wrappableRanges);
    },
    build$0() {
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(this._currentLine)))
        this._finalizeLine$1(false);
      return J.toString$0$(this._diagnostics$_buffer);
    },
    set$_prefixOtherLines(_prefixOtherLines) {
      this._prefixOtherLines = B._asStringQ(_prefixOtherLines);
    },
    set$_nextPrefixOtherLines(_nextPrefixOtherLines) {
      this._nextPrefixOtherLines = B._asStringQ(_nextPrefixOtherLines);
    },
    set$_numLines(_numLines) {
      this._numLines = B._asInt(_numLines);
    }
  };
  A._NoDefaultValue.prototype = {};
  A.TextTreeRenderer.prototype = {
    _childTextConfiguration$2(child, textStyle) {
      var childStyle;
      type$.DiagnosticsNode._as(child);
      type$.TextTreeConfiguration._as(textStyle);
      childStyle = child.get$style();
      return B.boolConversionCheck(A._isSingleLine(childStyle)) || childStyle === C.DiagnosticsTreeStyle_9 ? textStyle : child.get$textTreeConfiguration();
    },
    render$4$parentConfiguration$prefixLineOne$prefixOtherLines(node, parentConfiguration, prefixLineOne, prefixOtherLines) {
      type$.DiagnosticsNode._as(node);
      B._asString(prefixLineOne);
      B._asStringQ(prefixOtherLines);
      return this._debugRender$4$parentConfiguration$prefixLineOne$prefixOtherLines(node, type$.nullable_TextTreeConfiguration._as(parentConfiguration), prefixLineOne, prefixOtherLines);
    },
    render$1(node) {
      return this.render$4$parentConfiguration$prefixLineOne$prefixOtherLines(node, null, "", null);
    },
    _debugRender$4$parentConfiguration$prefixLineOne$prefixOtherLines(node, parentConfiguration, prefixLineOne, prefixOtherLines) {
      var isSingleLine, t1, t2, descendants, information, t3, t4, t5, builder, children, description, wrapName, wrapDescription, uppercaseTitle, $name, includeName, propertiesIterable, t6, properties, t7, t8, i, t9, property, t10, t11, propertyRender, propertyLines, prefixChildrenRaw, child, childPrefixOtherLines, _this = this, _s1_ = "\n", _box_0 = {};
      _box_0.prefixOtherLines = prefixOtherLines;
      type$.DiagnosticsNode._as(node);
      B._asString(prefixLineOne);
      B._asStringQ(prefixOtherLines);
      _box_0.prefixOtherLines = prefixOtherLines;
      type$.nullable_TextTreeConfiguration._as(parentConfiguration);
      if (B.boolConversionCheck(A._isSingleLine(node.get$style())))
        isSingleLine = !B.boolConversionCheck(J.$eq$(parentConfiguration == null ? null : parentConfiguration.lineBreakProperties, true));
      else
        isSingleLine = false;
      if (prefixOtherLines == null) {
        _box_0.prefixOtherLines = prefixLineOne;
        t1 = prefixLineOne;
      } else
        t1 = prefixOtherLines;
      t2 = node.linePrefix;
      if (t2 != null) {
        prefixLineOne = D.JSString_methods.$add(prefixLineOne, t2);
        prefixOtherLines = D.JSString_methods.$add(t1, t2);
        _box_0.prefixOtherLines = prefixOtherLines;
        t1 = prefixOtherLines;
      }
      t2 = node.get$textTreeConfiguration();
      t2.toString;
      if (B.boolConversionCheck(J.get$isEmpty$asx(t1)))
        t1 = _box_0.prefixOtherLines = D.JSString_methods.$add(t1, t2.prefixOtherLinesRootNode);
      if (B.boolConversionCheck(J.$eq$(node.get$style(), C.DiagnosticsTreeStyle_11))) {
        descendants = B._setArrayType([], type$.JSArray_String);
        _box_0.lines = _box_0.depth = 0;
        new A.TextTreeRenderer__debugRender_visitor(_box_0, descendants).call$1(node);
        information = B.StringBuffer$(prefixLineOne);
        t1 = _box_0.lines;
        if (typeof t1 !== "number")
          return t1.$gt();
        if (t1 > 1)
          information.writeln$1("This " + B.S(node.name) + " had the following descendants (showing up to depth 5):");
        else {
          t1 = node.name;
          if (descendants.length === 1)
            information.writeln$1("This " + B.S(t1) + " had the following child:");
          else
            information.writeln$1("This " + B.S(t1) + " has no descendants.");
        }
        information.writeAll$2(descendants, _s1_);
        return information.toString$0(0);
      }
      t3 = t1.length;
      t4 = _this._wrapWidthProperties;
      if (typeof t4 !== "number")
        return B.iae(t4);
      t5 = type$.int;
      builder = A._PrefixedStringBuilder$(prefixLineOne, t1, A.max(_this._wrapWidth, t3 + t4, t5));
      children = node.getChildren$0();
      description = node.toDescription$1$parentConfiguration(parentConfiguration);
      t1 = t2.beforeName;
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(t1)))
        builder.write$1(t1);
      t1 = !isSingleLine;
      wrapName = t1 && B.boolConversionCheck(node.get$allowNameWrap());
      wrapDescription = t1 && B.boolConversionCheck(node.get$allowWrap());
      uppercaseTitle = J.$eq$(node.get$style(), C.DiagnosticsTreeStyle_5);
      $name = node.name;
      if (uppercaseTitle)
        $name = $name == null ? null : D.JSString_methods.toUpperCase$0($name);
      if (B.boolConversionCheck(D.JSString_methods.get$isEmpty(description))) {
        if (B.boolConversionCheck(node.get$showName()) && $name != null)
          builder.write$2$allowWrap($name, wrapName);
      } else {
        includeName = $name != null && B.boolConversionCheck(D.JSString_methods.get$isNotEmpty($name)) && B.boolConversionCheck(node.get$showName());
        if (includeName) {
          builder.write$2$allowWrap($name, wrapName);
          if (B.boolConversionCheck(node.showSeparator))
            builder.write$2$allowWrap(t2.afterName, wrapName);
          builder.write$2$allowWrap(B.boolConversionCheck(t2.isNameOnOwnLine) || B.boolConversionCheck(D.JSString_methods.contains$1(description, _s1_)) ? _s1_ : " ", wrapName);
        }
        if (t1 && B.boolConversionCheck(builder.get$requiresMultipleLines()) && !B.boolConversionCheck(builder.get$isCurrentLineEmpty()))
          builder.write$1(_s1_);
        if (includeName)
          builder.incrementPrefixOtherLines$2$updateCurrentLine(B.boolConversionCheck(J.get$isEmpty$asx(children)) ? t2.propertyPrefixNoChildren : t2.propertyPrefixIfChildren, true);
        if (uppercaseTitle)
          description = D.JSString_methods.toUpperCase$0(description);
        builder.write$2$allowWrap(D.JSString_methods.trimRight$0(description), wrapDescription);
        if (!includeName)
          builder.incrementPrefixOtherLines$2$updateCurrentLine(B.boolConversionCheck(J.get$isEmpty$asx(children)) ? t2.propertyPrefixNoChildren : t2.propertyPrefixIfChildren, false);
      }
      t1 = t2.suffixLineOne;
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(t1))) {
        t3 = builder.wrapWidth;
        t3.toString;
        builder.writeStretched$2(t1, t3);
      }
      propertiesIterable = J.where$1$ax(node.getProperties$0(), new A.TextTreeRenderer__debugRender_closure(_this));
      t1 = _this._maxDescendentsTruncatableNode;
      if (typeof t1 !== "number")
        return t1.$ge();
      if (t1 >= 0 && B.boolConversionCheck(node.get$allowTruncate())) {
        t3 = J.getInterceptor$asx(propertiesIterable);
        t6 = t3.get$length(propertiesIterable);
        if (typeof t6 !== "number")
          return t6.$lt();
        if (t6 < t1) {
          properties = J.toList$0$ax(t3.take$1(propertiesIterable, t1));
          J.add$1$ax(properties, A.DiagnosticsNode_DiagnosticsNode$message("...", true, C.DiagnosticsTreeStyle_8));
        } else
          properties = t3.toList$0(propertiesIterable);
        t3 = J.getInterceptor$asx(children);
        t6 = t3.get$length(children);
        if (typeof t6 !== "number")
          return B.iae(t6);
        if (t1 < t6) {
          children = J.toList$0$ax(t3.take$1(children, t1));
          J.add$1$ax(children, A.DiagnosticsNode_DiagnosticsNode$message("...", true, C.DiagnosticsTreeStyle_8));
        }
      } else
        properties = J.toList$0$ax(propertiesIterable);
      t1 = J.getInterceptor$asx(properties);
      if (B.boolConversionCheck(t1.get$isNotEmpty(properties)) || B.boolConversionCheck(J.get$isNotEmpty$asx(children)) || node.get$emptyBodyDescription() != null)
        t3 = B.boolConversionCheck(node.showSeparator) || B.boolConversionCheck(D.JSString_methods.get$isNotEmpty(description));
      else
        t3 = false;
      if (t3)
        builder.write$1(t2.afterDescriptionIfBody);
      t3 = B.boolConversionCheck(t2.lineBreakProperties);
      if (t3)
        builder.write$1(t2.lineBreak);
      if (B.boolConversionCheck(t1.get$isNotEmpty(properties)))
        builder.write$1(t2.beforeProperties);
      t6 = t2.bodyIndent;
      builder.incrementPrefixOtherLines$2$updateCurrentLine(t6, false);
      if (node.get$emptyBodyDescription() != null && B.boolConversionCheck(t1.get$isEmpty(properties)) && B.boolConversionCheck(J.get$isEmpty$asx(children)) && B.boolConversionCheck(D.JSString_methods.get$isNotEmpty(prefixLineOne))) {
        t7 = node.get$emptyBodyDescription();
        t7.toString;
        builder.write$1(t7);
        if (t3)
          builder.write$1(t2.lineBreak);
      }
      t7 = t2.propertySeparator;
      t8 = type$.JSArray_String;
      t3 = !t3;
      i = 0;
      while (true) {
        t9 = t1.get$length(properties);
        if (typeof t9 !== "number")
          return B.iae(t9);
        if (!(i < t9))
          break;
        property = t1.$index(properties, i);
        if (i > 0)
          builder.write$1(t7);
        t9 = property.get$textTreeConfiguration();
        t9.toString;
        t10 = t9.prefixLineOne;
        t11 = t9.childLinkSpace;
        t9 = t9.prefixOtherLines;
        if (B.boolConversionCheck(A._isSingleLine(property.get$style()))) {
          propertyRender = _this.render$4$parentConfiguration$prefixLineOne$prefixOtherLines(property, t2, t10, B.S(t11) + B.S(t9));
          propertyLines = B._setArrayType(propertyRender.split(_s1_), t8);
          if (propertyLines.length === 1 && t3)
            builder.write$1(D.JSArray_methods.get$first(propertyLines));
          else {
            builder.write$1(propertyRender);
            if (!B.boolConversionCheck(D.JSString_methods.endsWith$1(propertyRender, _s1_)))
              builder.write$1(_s1_);
          }
        } else
          builder.writeRawLines$1(_this.render$4$parentConfiguration$prefixLineOne$prefixOtherLines(property, t2, B.S(builder.get$prefixOtherLines()) + B.S(t10), B.S(builder.get$prefixOtherLines()) + B.S(t11) + B.S(t9)));
        ++i;
      }
      if (B.boolConversionCheck(t1.get$isNotEmpty(properties)))
        builder.write$1(t2.afterProperties);
      builder.write$1("");
      if (t3)
        builder.write$1(t2.lineBreak);
      prefixChildrenRaw = B.S(_box_0.prefixOtherLines) + t6;
      t3 = J.getInterceptor$asx(children);
      t6 = false;
      if (B.boolConversionCheck(t3.get$isEmpty(children)))
        if (B.boolConversionCheck(t2.addBlankLineIfNoChildren))
          if (B.boolConversionCheck(builder.get$requiresMultipleLines())) {
            t6 = builder.get$prefixOtherLines();
            t6.toString;
            t6 = B.boolConversionCheck(J.get$isNotEmpty$asx(J.trimRight$0$s(t6)));
          }
      if (t6)
        builder.write$1(t2.lineBreak);
      if (B.boolConversionCheck(t3.get$isNotEmpty(children)) && B.boolConversionCheck(t2.showChildren)) {
        if (B.boolConversionCheck(t2.isBlankLineBetweenPropertiesAndChildren) && B.boolConversionCheck(t1.get$isNotEmpty(properties)) && B.boolConversionCheck(t3.get$first(children).get$textTreeConfiguration().isBlankLineBetweenPropertiesAndChildren))
          builder.write$1(t2.lineBreak);
        builder.set$prefixOtherLines(_box_0.prefixOtherLines);
        t1 = t2.lineBreak;
        t6 = builder.wrapWidth;
        i = 0;
        while (true) {
          t7 = t3.get$length(children);
          if (typeof t7 !== "number")
            return B.iae(t7);
          if (!(i < t7))
            break;
          child = t3.$index(children, i);
          t7 = _this._childTextConfiguration$2(child, t2);
          t7.toString;
          t8 = t3.get$length(children);
          if (typeof t8 !== "number")
            return t8.$sub();
          t9 = t7.prefixOtherLines;
          if (i === t8 - 1) {
            t8 = B.S(t7.prefixLastChildLineOne);
            t10 = t7.childLinkSpace;
            childPrefixOtherLines = prefixChildrenRaw + B.S(t10) + B.S(t9);
            builder.writeRawLines$1(_this.render$4$parentConfiguration$prefixLineOne$prefixOtherLines(child, t2, prefixChildrenRaw + t8, childPrefixOtherLines));
            t8 = t7.footer;
            if (B.boolConversionCheck(J.get$isNotEmpty$asx(t8))) {
              builder.set$prefixOtherLines(prefixChildrenRaw);
              builder.write$1(B.S(t10) + B.S(t8));
              t7 = t7.mandatoryFooter;
              if (B.boolConversionCheck(J.get$isNotEmpty$asx(t7))) {
                t6.toString;
                builder.writeStretched$2(t7, A.max(t6, t4 + childPrefixOtherLines.length, t5));
              }
              builder.write$1(t1);
            }
          } else {
            t8 = _this._childTextConfiguration$2(t3.$index(children, i + 1), t2);
            t8.toString;
            t10 = B.S(t7.prefixLineOne);
            childPrefixOtherLines = prefixChildrenRaw + B.S(t8.linkCharacter) + B.S(t9);
            builder.writeRawLines$1(_this.render$4$parentConfiguration$prefixLineOne$prefixOtherLines(child, t2, prefixChildrenRaw + t10, childPrefixOtherLines));
            t8 = t7.footer;
            if (B.boolConversionCheck(J.get$isNotEmpty$asx(t8))) {
              builder.set$prefixOtherLines(prefixChildrenRaw);
              builder.write$1(B.S(t7.linkCharacter) + B.S(t8));
              t7 = t7.mandatoryFooter;
              if (B.boolConversionCheck(J.get$isNotEmpty$asx(t7))) {
                t6.toString;
                builder.writeStretched$2(t7, A.max(t6, t4 + childPrefixOtherLines.length, t5));
              }
              builder.write$1(t1);
            }
          }
          ++i;
        }
      }
      if (parentConfiguration == null && B.boolConversionCheck(J.get$isNotEmpty$asx(t2.mandatoryFooter))) {
        t1 = builder.wrapWidth;
        t1.toString;
        builder.writeStretched$2(t2.mandatoryFooter, t1);
        builder.write$1(t2.lineBreak);
      }
      return builder.build$0();
    }
  };
  A.DiagnosticsNode.prototype = {
    isFiltered$1(minLevel) {
      var t1, t2;
      type$.DiagnosticLevel._as(minLevel);
      t1 = this.get$level().index;
      t2 = minLevel.index;
      if (typeof t1 !== "number")
        return t1.$lt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 < t2;
    },
    get$level() {
      return C.DiagnosticLevel_3;
    },
    get$emptyBodyDescription() {
      return null;
    },
    get$allowWrap() {
      return false;
    },
    get$allowNameWrap() {
      return false;
    },
    get$allowTruncate() {
      return false;
    },
    toString$1$minLevel(_, minLevel) {
      type$.DiagnosticLevel._as(minLevel);
      return this.super$Object$toString(0);
    },
    toString$0(_) {
      return this.toString$1$minLevel(0, C.DiagnosticLevel_3);
    },
    get$textTreeConfiguration() {
      var t2,
        t1 = this.get$style();
      t1.toString;
      t2 = null;
      switch (t1) {
        case C.DiagnosticsTreeStyle_0:
          t1 = t2;
          break;
        case C.DiagnosticsTreeStyle_3:
          t1 = $.$get$denseTextConfiguration();
          break;
        case C.DiagnosticsTreeStyle_1:
          t1 = $.$get$sparseTextConfiguration();
          break;
        case C.DiagnosticsTreeStyle_2:
          t1 = $.$get$dashedTextConfiguration();
          break;
        case C.DiagnosticsTreeStyle_6:
          t1 = $.$get$whitespaceTextConfiguration();
          break;
        case C.DiagnosticsTreeStyle_4:
          t1 = $.$get$transitionTextConfiguration();
          break;
        case C.DiagnosticsTreeStyle_8:
          t1 = $.$get$singleLineTextConfiguration();
          break;
        case C.DiagnosticsTreeStyle_9:
          t1 = $.$get$errorPropertyTextConfiguration();
          break;
        case C.DiagnosticsTreeStyle_10:
          t1 = $.$get$shallowTextConfiguration();
          break;
        case C.DiagnosticsTreeStyle_5:
          t1 = $.$get$errorTextConfiguration();
          break;
        case C.DiagnosticsTreeStyle_7:
          t1 = $.$get$flatTextConfiguration();
          break;
        case C.DiagnosticsTreeStyle_11:
          t1 = $.$get$whitespaceTextConfiguration();
          break;
        default:
          t1 = t2;
      }
      return t1;
    },
    toStringDeep$3$minLevel$prefixLineOne$prefixOtherLines(minLevel, prefixLineOne, prefixOtherLines) {
      B._asString(prefixLineOne);
      B._asStringQ(prefixOtherLines);
      type$.DiagnosticLevel._as(minLevel);
      return "";
    },
    toStringDeep$1$minLevel(minLevel) {
      return this.toStringDeep$3$minLevel$prefixLineOne$prefixOtherLines(minLevel, "", null);
    },
    get$showName() {
      return this.showName;
    },
    get$style() {
      return this.style;
    }
  };
  A.MessageProperty.prototype = {};
  A.StringProperty.prototype = {
    valueToString$1$parentConfiguration(parentConfiguration) {
      var text, t1, _this = this;
      type$.nullable_TextTreeConfiguration._as(parentConfiguration);
      text = _this._description;
      if (text == null)
        text = _this.get$value();
      if (parentConfiguration != null && !B.boolConversionCheck(parentConfiguration.lineBreakProperties) && text != null)
        text = D.JSString_methods.replaceAll$2(text, "\n", "\\n");
      if (B.boolConversionCheck(_this.quoted) && text != null) {
        t1 = _this.ifEmpty;
        if (t1 != null && B.boolConversionCheck(D.JSString_methods.get$isEmpty(text))) {
          t1.toString;
          return t1;
        }
        return '"' + text + '"';
      }
      return J.toString$0$(text);
    }
  };
  A._NumProperty.prototype = {
    valueToString$1$parentConfiguration(parentConfiguration) {
      var t1, _this = this;
      type$.nullable_TextTreeConfiguration._as(parentConfiguration);
      if (_this.get$value() == null)
        return J.toString$0$(_this.get$value());
      t1 = _this.unit;
      return t1 != null ? B.S(_this.numberToString$0()) + B.S(t1) : _this.numberToString$0();
    }
  };
  A.DoubleProperty.prototype = {
    numberToString$0() {
      return A.debugFormatDouble(this.get$value());
    }
  };
  A.IntProperty.prototype = {
    numberToString$0() {
      return J.toString$0$(this.get$value());
    }
  };
  A.FlagProperty.prototype = {
    valueToString$1$parentConfiguration(parentConfiguration) {
      var _0_0, t1, _this = this;
      type$.nullable_TextTreeConfiguration._as(parentConfiguration);
      _0_0 = _this.get$value();
      $label0$0: {
        if (true === _0_0 && _this.ifTrue != null) {
          t1 = _this.ifTrue;
          t1.toString;
          break $label0$0;
        }
        if (false === _0_0 && _this.ifFalse != null) {
          t1 = _this.ifFalse;
          t1.toString;
          break $label0$0;
        }
        t1 = _this.super$DiagnosticsProperty$valueToString(parentConfiguration);
        break $label0$0;
      }
      return t1;
    },
    get$showName() {
      var t2, _this = this,
        t1 = true;
      if (_this.get$value() != null) {
        t2 = _this.get$value();
        if (!(B.boolConversionCheck(t2 == null ? false : t2) && _this.ifTrue == null)) {
          t1 = _this.get$value();
          t1 = !B.boolConversionCheck(t1 == null ? true : t1) && _this.ifFalse == null;
        }
      }
      if (t1)
        return true;
      return _this.showName;
    },
    get$level() {
      var t1, _this = this,
        _0_0 = _this.get$value();
      $label0$0: {
        if (true === _0_0 && _this.ifTrue == null) {
          t1 = C.DiagnosticLevel_0;
          break $label0$0;
        }
        if (false === _0_0 && _this.ifFalse == null) {
          t1 = C.DiagnosticLevel_0;
          break $label0$0;
        }
        t1 = A.DiagnosticsProperty.prototype.get$level.call(_this);
        break $label0$0;
      }
      return t1;
    }
  };
  A.IterableProperty.prototype = {
    valueToString$1$parentConfiguration(parentConfiguration) {
      var t1, formattedValues, _this = this;
      type$.nullable_TextTreeConfiguration._as(parentConfiguration);
      if (_this.get$value() == null)
        return J.toString$0$(_this.get$value());
      t1 = _this.get$value();
      t1.toString;
      if (B.boolConversionCheck(J.get$isEmpty$asx(t1))) {
        t1 = _this.ifEmpty;
        return t1 == null ? "[]" : t1;
      }
      t1 = _this.get$value();
      t1.toString;
      formattedValues = J.map$1$1$ax(t1, new A.IterableProperty_valueToString_closure(_this), type$.String);
      if (parentConfiguration != null && !B.boolConversionCheck(parentConfiguration.lineBreakProperties))
        return "[" + B.S(J.join$1$ax(formattedValues, ", ")) + "]";
      return J.join$1$ax(formattedValues, B.boolConversionCheck(A._isSingleLine(_this.style)) ? ", " : "\n");
    },
    get$level() {
      var _this = this,
        t1 = false;
      if (_this.ifEmpty == null)
        if (_this.get$value() != null) {
          t1 = _this.get$value();
          t1.toString;
          t1 = B.boolConversionCheck(J.get$isEmpty$asx(t1)) && !B.boolConversionCheck(J.$eq$(A.DiagnosticsProperty.prototype.get$level.call(_this), C.DiagnosticLevel_0));
        }
      if (t1)
        return C.DiagnosticLevel_1;
      return A.DiagnosticsProperty.prototype.get$level.call(_this);
    }
  };
  A.EnumProperty.prototype = {
    valueToString$1$parentConfiguration(parentConfiguration) {
      var t1;
      type$.nullable_TextTreeConfiguration._as(parentConfiguration);
      t1 = this.get$value();
      t1 = t1 == null ? null : F.EnumName_get_name(t1);
      return t1 == null ? "null" : t1;
    }
  };
  A.ObjectFlagProperty.prototype = {
    valueToString$1$parentConfiguration(parentConfiguration) {
      var t1, _this = this;
      type$.nullable_TextTreeConfiguration._as(parentConfiguration);
      if (_this.get$value() != null) {
        t1 = _this.ifPresent;
        if (t1 != null)
          return t1;
      } else {
        t1 = _this.ifNull;
        if (t1 != null)
          return t1;
      }
      return _this.super$DiagnosticsProperty$valueToString(parentConfiguration);
    },
    get$showName() {
      var t1, _this = this;
      if (!(_this.get$value() != null && _this.ifPresent == null))
        t1 = _this.get$value() == null && _this.ifNull == null;
      else
        t1 = true;
      if (t1)
        return true;
      return _this.showName;
    },
    get$level() {
      var _this = this;
      if (_this.get$value() != null) {
        if (_this.ifPresent == null)
          return C.DiagnosticLevel_0;
      } else if (_this.ifNull == null)
        return C.DiagnosticLevel_0;
      return A.DiagnosticsProperty.prototype.get$level.call(_this);
    }
  };
  A.DiagnosticsProperty.prototype = {
    valueToString$1$parentConfiguration(parentConfiguration) {
      var v;
      type$.nullable_TextTreeConfiguration._as(parentConfiguration);
      v = this.get$value();
      return type$.DiagnosticableTree._is(v) ? v.toStringShort$0() : J.toString$0$(v);
    },
    toDescription$1$parentConfiguration(parentConfiguration) {
      var t1, result, _this = this;
      type$.nullable_TextTreeConfiguration._as(parentConfiguration);
      t1 = _this._description;
      if (t1 != null)
        return _this._addTooltip$1(t1);
      if (_this.get$exception() != null)
        return "EXCEPTION (" + B.S(J.get$runtimeType$(_this.get$exception())) + ")";
      t1 = _this.ifNull;
      if (t1 != null && _this.get$value() == null) {
        t1.toString;
        return _this._addTooltip$1(t1);
      }
      result = _this.valueToString$1$parentConfiguration(parentConfiguration);
      if (B.boolConversionCheck(D.JSString_methods.get$isEmpty(result)) && _this.ifEmpty != null) {
        t1 = _this.ifEmpty;
        t1.toString;
        result = t1;
      }
      return _this._addTooltip$1(result);
    },
    _addTooltip$1(text) {
      var t1;
      B._asString(text);
      t1 = this.tooltip;
      return t1 == null ? text : text + " (" + B.S(t1) + ")";
    },
    get$value() {
      this._maybeCacheValue$0();
      return this._diagnostics$_value;
    },
    get$exception() {
      this._maybeCacheValue$0();
      return this._diagnostics$_exception;
    },
    _maybeCacheValue$0() {
      var exception, exception0, _this = this;
      if (B.boolConversionCheck(_this._valueComputed))
        return;
      _this._valueComputed = true;
      try {
        _this.set$_diagnostics$_value(null.call$0());
      } catch (exception0) {
        exception = B.unwrapException(exception0);
        _this._diagnostics$_exception = exception;
        _this.set$_diagnostics$_value(null);
      }
    },
    get$isInteresting() {
      var t1 = this.defaultValue;
      return B.boolConversionCheck(J.$eq$(t1, C.C__NoDefaultValue)) || !B.boolConversionCheck(J.$eq$(this.get$value(), t1));
    },
    get$level() {
      var _this = this,
        t1 = _this._defaultLevel;
      if (B.boolConversionCheck(J.$eq$(t1, C.DiagnosticLevel_0)))
        return t1;
      if (_this.get$exception() != null)
        return C.DiagnosticLevel_7;
      if (_this.get$value() == null && B.boolConversionCheck(_this.missingIfNull))
        return C.DiagnosticLevel_4;
      if (!B.boolConversionCheck(_this.get$isInteresting()))
        return C.DiagnosticLevel_1;
      return t1;
    },
    getProperties$0() {
      return C.List_empty1;
    },
    getChildren$0() {
      return C.List_empty1;
    },
    set$_diagnostics$_value(_value) {
      this._diagnostics$_value = B._instanceType(this)._eval$1("DiagnosticsProperty.T?")._as(_value);
    },
    get$allowWrap() {
      return this.allowWrap;
    },
    get$allowNameWrap() {
      return true;
    }
  };
  A.DiagnosticableNode.prototype = {
    get$builder() {
      return null;
    },
    get$style() {
      var t1 = this.style;
      return t1 == null ? this.get$builder().defaultDiagnosticsTreeStyle : t1;
    },
    get$emptyBodyDescription() {
      return this.get$builder().emptyBodyDescription;
    },
    getProperties$0() {
      return this.get$builder().properties;
    },
    getChildren$0() {
      return C.List_empty1;
    },
    toDescription$1$parentConfiguration(parentConfiguration) {
      type$.nullable_TextTreeConfiguration._as(parentConfiguration);
      return "";
    }
  };
  A.DiagnosticableTreeNode.prototype = {
    getChildren$0() {
      return this.value.debugDescribeChildren$0();
    }
  };
  A.DiagnosticPropertiesBuilder.prototype = {
    add$1(_, property) {
      type$.DiagnosticsNode._as(property);
    }
  };
  A.Diagnosticable.prototype = {
    toStringShort$0() {
      return A.describeIdentity(this);
    },
    toString$1$minLevel(_, minLevel) {
      var t1;
      type$.DiagnosticLevel._as(minLevel);
      t1 = this.toStringShort$0();
      return t1;
    },
    toString$0(_) {
      return this.toString$1$minLevel(0, C.DiagnosticLevel_3);
    },
    toDiagnosticsNode$2$name$style($name, style) {
      return A.DiagnosticableNode$(B._asStringQ($name), type$.nullable_DiagnosticsTreeStyle._as(style), this, type$.Diagnosticable);
    },
    toDiagnosticsNode$1$name($name) {
      return this.toDiagnosticsNode$2$name$style($name, null);
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
    }
  };
  A.DiagnosticableTree.prototype = {
    toStringDeep$0() {
      return this.toDiagnosticsNode$0().toStringDeep$3$minLevel$prefixLineOne$prefixOtherLines(C.DiagnosticLevel_2, "", null);
    },
    toStringShort$0() {
      return A.describeIdentity(this);
    },
    toDiagnosticsNode$2$name$style($name, style) {
      return A.DiagnosticableTreeNode$(B._asStringQ($name), type$.nullable_DiagnosticsTreeStyle._as(style), this);
    },
    toDiagnosticsNode$1$style(style) {
      return this.toDiagnosticsNode$2$name$style(null, style);
    },
    toDiagnosticsNode$0() {
      return this.toDiagnosticsNode$2$name$style(null, null);
    },
    debugDescribeChildren$0() {
      return C.List_empty1;
    },
    $isDiagnosticable: 1
  };
  A.DiagnosticableTreeMixin.prototype = {
    toString$0(_) {
      return J.toString$1$minLevel$(this.toDiagnosticsNode$1$style(C.DiagnosticsTreeStyle_8), C.DiagnosticLevel_3);
    },
    toStringDeep$3$minLevel$prefixLineOne$prefixOtherLines(minLevel, prefixLineOne, prefixOtherLines) {
      B._asString(prefixLineOne);
      B._asStringQ(prefixOtherLines);
      type$.DiagnosticLevel._as(minLevel);
      return this.toDiagnosticsNode$0().toStringDeep$3$minLevel$prefixLineOne$prefixOtherLines(minLevel, prefixLineOne, prefixOtherLines);
    },
    toStringDeep$0() {
      return this.toStringDeep$3$minLevel$prefixLineOne$prefixOtherLines(C.DiagnosticLevel_2, "", null);
    },
    toStringShort$0() {
      return A.describeIdentity(this);
    },
    toDiagnosticsNode$2$name$style($name, style) {
      return A.DiagnosticableTreeNode$(B._asStringQ($name), type$.nullable_DiagnosticsTreeStyle._as(style), this);
    },
    toDiagnosticsNode$1$style(style) {
      return this.toDiagnosticsNode$2$name$style(null, style);
    },
    toDiagnosticsNode$0() {
      return this.toDiagnosticsNode$2$name$style(null, null);
    },
    toDiagnosticsNode$1$name($name) {
      return this.toDiagnosticsNode$2$name$style($name, null);
    },
    debugDescribeChildren$0() {
      return C.List_empty1;
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
    },
    $isDiagnosticable: 1,
    $isDiagnosticableTree: 1,
    $is_DiagnosticableTree_Object_Diagnosticable: 1
  };
  A.DiagnosticsBlock.prototype = {
    getChildren$0() {
      return this._diagnostics$_children;
    },
    getProperties$0() {
      return this._properties;
    },
    toDescription$1$parentConfiguration(parentConfiguration) {
      type$.nullable_TextTreeConfiguration._as(parentConfiguration);
      return this._description;
    },
    get$level() {
      return C.DiagnosticLevel_3;
    },
    get$allowTruncate() {
      return this.allowTruncate;
    }
  };
  A._DiagnosticableTree_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.Key.prototype = {};
  A.LocalKey.prototype = {};
  A.UniqueKey.prototype = {
    toString$0(_) {
      return "[#" + B.S(A.shortHash(this)) + "]";
    }
  };
  A.ObjectEvent.prototype = {};
  A.ObjectCreated.prototype = {};
  A.ObjectDisposed.prototype = {};
  A.FlutterMemoryAllocations.prototype = {
    _tryDefragmentListeners$0() {
      var _this = this,
        t1 = _this._activeDispatchLoops;
      if (typeof t1 !== "number")
        return t1.$gt();
      if (t1 > 0 || !B.boolConversionCheck(_this._listenersContainNulls))
        return;
      t1 = _this._memory_allocations$_listeners;
      if (t1 != null)
        J.removeWhere$1$ax(t1, new A.FlutterMemoryAllocations__tryDefragmentListeners_closure());
      _this._listenersContainNulls = false;
      _this._checkListenersForEmptiness$0();
    },
    _checkListenersForEmptiness$0() {
      var t1 = this._memory_allocations$_listeners;
      t1 = t1 == null ? null : J.get$isEmpty$asx(t1);
      if (B.boolConversionCheck(t1 == null ? false : t1)) {
        this.set$_memory_allocations$_listeners(null);
        this._unSubscribeFromSdkObjects$0();
      }
    },
    get$hasListeners() {
      if (B.boolConversionCheck(this._listenersContainNulls)) {
        var t1 = this._memory_allocations$_listeners;
        return (t1 == null ? null : J.firstWhere$1$ax(t1, new A.FlutterMemoryAllocations_hasListeners_closure())) != null;
      }
      t1 = this._memory_allocations$_listeners;
      t1 = t1 == null ? null : J.get$isNotEmpty$asx(t1);
      return t1 == null ? false : t1;
    },
    dispatchObjectEvent$1($event) {
      var listeners, i, exception, stack, type, t1, end, t2, t3, exception0, type0, _this = this;
      type$.ObjectEvent._as($event);
      listeners = _this._memory_allocations$_listeners;
      if (listeners == null || B.boolConversionCheck(J.get$isEmpty$asx(listeners)))
        return;
      t1 = _this._activeDispatchLoops;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_activeDispatchLoops(t1 + 1);
      end = J.get$length$asx(listeners);
      i = 0;
      t1 = $event.object;
      t2 = J.getInterceptor$(t1);
      while (true) {
        t3 = i;
        if (typeof t3 !== "number")
          return t3.$lt();
        if (!(t3 < end))
          break;
        try {
          t3 = J.$index$asx(listeners, i);
          if (t3 != null)
            t3.call$1($event);
        } catch (exception0) {
          exception = B.unwrapException(exception0);
          stack = B.getTraceFromException(exception0);
          type0 = J.toString$0$(t2.get$runtimeType(t1));
          type = type0;
          A.FlutterError_reportError(A.FlutterErrorDetails$(A.ErrorDescription$("MemoryAllocations while dispatching notifications for " + B.S(type)), exception, new A.FlutterMemoryAllocations_dispatchObjectEvent_closure(type, $event), "foundation library", false, stack));
        }
        t3 = i;
        if (typeof t3 !== "number")
          return t3.$add();
        i = t3 + 1;
      }
      t1 = _this._activeDispatchLoops;
      if (typeof t1 !== "number")
        return t1.$sub();
      _this.set$_activeDispatchLoops(t1 - 1);
      _this._tryDefragmentListeners$0();
    },
    dispatchObjectCreated$3$className$library$object(className, library, object) {
      B._asString(library);
      B._asString(className);
      type$.Object._as(object);
      if (!B.boolConversionCheck(this.get$hasListeners()))
        return;
      this.dispatchObjectEvent$1(A.ObjectCreated$(className, library, object));
    },
    dispatchObjectDisposed$1$object(object) {
      type$.Object._as(object);
      if (!B.boolConversionCheck(this.get$hasListeners()))
        return;
      this.dispatchObjectEvent$1(A.ObjectDisposed$(object));
    },
    _unSubscribeFromSdkObjects$0() {
      $.Picture_onDispose = $.Picture_onCreate = $.Image_onDispose = $.Image_onCreate = null;
    },
    set$_memory_allocations$_listeners(_listeners) {
      this._memory_allocations$_listeners = type$.nullable_List_of_nullable_void_Function_ObjectEvent._as(_listeners);
    },
    set$_activeDispatchLoops(_activeDispatchLoops) {
      this._activeDispatchLoops = B._asInt(_activeDispatchLoops);
    }
  };
  A.PersistentHashMap.prototype = {
    put$2(key, value) {
      var t3, t4, newRoot,
        t1 = this.$ti,
        t2 = t1._precomputed1;
      t2._as(key);
      t1 = t1._rest[1];
      t1._as(value);
      t3 = this._root;
      t4 = t3 == null ? $.$get$_CompressedNode_empty() : t3;
      newRoot = t4.put$4(0, key, J.get$hashCode$(key), value);
      if (newRoot === t3)
        return this;
      return A.PersistentHashMap$_(newRoot, t2, t1);
    },
    $index(_, key) {
      var t1;
      this.$ti._precomputed1._as(key);
      t1 = this._root;
      return t1 == null ? null : t1.$get$3(0, key, J.get$hashCode$(key));
    }
  };
  A._TrieNode.prototype = {};
  A._FullNode.prototype = {
    put$4(bitIndex, key, keyHash, value) {
      var index, t1, node, newNode;
      B._asInt(bitIndex);
      type$.Object._as(key);
      B._asInt(keyHash);
      index = A._TrieNode_trieIndex(keyHash, bitIndex);
      t1 = this.descendants;
      node = A._unsafeCast(J.$index$asx(t1, index), type$.nullable__TrieNode);
      if (node == null)
        node = $.$get$_CompressedNode_empty();
      newNode = node.put$4(bitIndex + 5, key, keyHash, value);
      if (newNode === node)
        t1 = this;
      else {
        t1 = A._copy(t1);
        J.$indexSet$ax(t1, index, newNode);
        t1 = A._FullNode$(t1);
      }
      return t1;
    },
    $get$3(bitIndex, key, keyHash) {
      var node;
      B._asInt(bitIndex);
      type$.Object._as(key);
      B._asInt(keyHash);
      node = A._unsafeCast(J.$index$asx(this.descendants, A._TrieNode_trieIndex(keyHash, bitIndex)), type$.nullable__TrieNode);
      return node == null ? null : node.$get$3(bitIndex + 5, key, keyHash);
    }
  };
  A._CompressedNode.prototype = {
    put$4(bitIndex, key, keyHash, value) {
      var t1, bit, index, t2, t3, t4, keyOrNull, t5, valueOrNode, newNode, occupiedCount, prefixLength, totalLength, newKeyValuePairs, srcIndex, dstIndex, _this = this;
      B._asInt(bitIndex);
      type$.Object._as(key);
      B._asInt(keyHash);
      t1 = A._TrieNode_trieIndex(keyHash, bitIndex);
      if (typeof t1 !== "number")
        return B.iae(t1);
      bit = D.JSInt_methods.$shl(1, t1);
      index = _this._compressedIndex$1(bit);
      t1 = _this.occupiedIndices;
      if (typeof t1 !== "number")
        return t1.$and();
      if ((t1 & bit) >>> 0 !== 0) {
        t2 = _this.keyValuePairs;
        t3 = 2 * index;
        t4 = J.getInterceptor$asx(t2);
        keyOrNull = t4.$index(t2, t3);
        t5 = t3 + 1;
        valueOrNode = t4.$index(t2, t5);
        if (keyOrNull == null) {
          newNode = A._unsafeCast(valueOrNode, type$._TrieNode).put$4(bitIndex + 5, key, keyHash, value);
          if (newNode === valueOrNode)
            return _this;
          t2 = A._copy(t2);
          J.$indexSet$ax(t2, t5, newNode);
          return A._CompressedNode$(t1, t2);
        }
        if (B.boolConversionCheck(J.$eq$(key, keyOrNull))) {
          if (value == null ? valueOrNode == null : value === valueOrNode)
            t1 = _this;
          else {
            t2 = A._copy(t2);
            J.$indexSet$ax(t2, t5, value);
            t2 = A._CompressedNode$(t1, t2);
            t1 = t2;
          }
          return t1;
        }
        newNode = A._CompressedNode__resolveCollision(bitIndex + 5, keyOrNull, valueOrNode, key, keyHash, value);
        t2 = A._copy(t2);
        t4 = J.getInterceptor$ax(t2);
        t4.$indexSet(t2, t3, null);
        t4.$indexSet(t2, t5, newNode);
        return A._CompressedNode$(t1, t2);
      } else {
        occupiedCount = A._bitCount(t1);
        if (occupiedCount >= 16) {
          t1 = _this._inflate$1(bitIndex);
          J.$indexSet$ax(t1.descendants, A._TrieNode_trieIndex(keyHash, bitIndex), $.$get$_CompressedNode_empty().put$4(bitIndex + 5, key, keyHash, value));
          return t1;
        } else {
          prefixLength = 2 * index;
          totalLength = 2 * occupiedCount;
          newKeyValuePairs = A._makeArray(totalLength + 2);
          for (t2 = _this.keyValuePairs, t3 = J.getInterceptor$asx(t2), t4 = J.getInterceptor$ax(newKeyValuePairs), srcIndex = 0; srcIndex < prefixLength; ++srcIndex)
            t4.$indexSet(newKeyValuePairs, srcIndex, t3.$index(t2, srcIndex));
          t4.$indexSet(newKeyValuePairs, prefixLength, key);
          t4.$indexSet(newKeyValuePairs, prefixLength + 1, value);
          for (dstIndex = prefixLength + 2, srcIndex = prefixLength; srcIndex < totalLength; ++srcIndex, ++dstIndex)
            t4.$indexSet(newKeyValuePairs, dstIndex, t3.$index(t2, srcIndex));
          return A._CompressedNode$((t1 | bit) >>> 0, newKeyValuePairs);
        }
      }
    },
    $get$3(bitIndex, key, keyHash) {
      var t1, bit, t2, t3, keyOrNull, valueOrNode;
      B._asInt(bitIndex);
      type$.Object._as(key);
      B._asInt(keyHash);
      t1 = A._TrieNode_trieIndex(keyHash, bitIndex);
      if (typeof t1 !== "number")
        return B.iae(t1);
      bit = D.JSInt_methods.$shl(1, t1);
      t1 = this.occupiedIndices;
      if (typeof t1 !== "number")
        return t1.$and();
      if ((t1 & bit) >>> 0 === 0)
        return null;
      t1 = this.keyValuePairs;
      t2 = 2 * this._compressedIndex$1(bit);
      t3 = J.getInterceptor$asx(t1);
      keyOrNull = t3.$index(t1, t2);
      valueOrNode = t3.$index(t1, t2 + 1);
      if (keyOrNull == null)
        return A._unsafeCast(valueOrNode, type$._TrieNode).$get$3(bitIndex + 5, key, keyHash);
      if (B.boolConversionCheck(J.$eq$(key, keyOrNull)))
        return valueOrNode;
      return null;
    },
    _inflate$1(bitIndex) {
      var nodes, t1, t2, t3, t4, t5, srcIndex, dstIndex, keyOrNull, t6;
      B._asInt(bitIndex);
      nodes = A._makeArray(32);
      for (t1 = this.occupiedIndices, t2 = bitIndex + 5, t3 = this.keyValuePairs, t4 = J.getInterceptor$asx(t3), t5 = J.getInterceptor$ax(nodes), srcIndex = 0, dstIndex = 0; dstIndex < 32; ++dstIndex) {
        if (typeof t1 !== "number")
          return t1.$shru();
        if ((D.JSNumber_methods.$shru(t1, dstIndex) & 1) !== 0) {
          keyOrNull = t4.$index(t3, srcIndex);
          t6 = srcIndex + 1;
          if (keyOrNull == null)
            t5.$indexSet(nodes, dstIndex, t4.$index(t3, t6));
          else
            t5.$indexSet(nodes, dstIndex, $.$get$_CompressedNode_empty().put$4(t2, keyOrNull, J.get$hashCode$(t4.$index(t3, srcIndex)), t4.$index(t3, t6)));
          srcIndex += 2;
        }
      }
      return A._FullNode$(nodes);
    },
    _compressedIndex$1(bit) {
      var t1;
      B._asInt(bit);
      t1 = this.occupiedIndices;
      if (typeof t1 !== "number")
        return t1.$and();
      return A._bitCount((t1 & bit - 1) >>> 0);
    }
  };
  A._HashCollisionNode.prototype = {
    put$4(bitIndex, key, keyHash, val) {
      var t1, index, t2, t3, $length, newArray, i, _this = this;
      B._asInt(bitIndex);
      type$.Object._as(key);
      B._asInt(keyHash);
      t1 = _this.hash;
      if (keyHash === t1) {
        index = _this._indexOf$1(key);
        if (index !== -1) {
          t1 = _this.keyValuePairs;
          t2 = index + 1;
          t3 = J.$index$asx(t1, t2);
          if (t3 == null ? val == null : t3 === val)
            t1 = _this;
          else {
            t1 = A._copy(t1);
            J.$indexSet$ax(t1, t2, val);
            t1 = A._HashCollisionNode$(keyHash, t1);
          }
          return t1;
        }
        t1 = _this.keyValuePairs;
        t2 = J.getInterceptor$asx(t1);
        $length = t2.get$length(t1);
        newArray = A._makeArray($length + 2);
        for (t3 = J.getInterceptor$ax(newArray), i = 0; i < $length; ++i)
          t3.$indexSet(newArray, i, t2.$index(t1, i));
        t3.$indexSet(newArray, $length, key);
        t3.$indexSet(newArray, $length + 1, val);
        return A._HashCollisionNode$(keyHash, newArray);
      }
      return A._CompressedNode__CompressedNode$single(bitIndex, t1, _this).put$4(bitIndex, key, keyHash, val);
    },
    $get$3(bitIndex, key, keyHash) {
      var index;
      B._asInt(bitIndex);
      type$.Object._as(key);
      B._asInt(keyHash);
      index = this._indexOf$1(key);
      return index < 0 ? null : J.$index$asx(this.keyValuePairs, index + 1);
    },
    _indexOf$1(key) {
      var t1, t2, $length, t3, i;
      type$.Object._as(key);
      t1 = this.keyValuePairs;
      t2 = J.getInterceptor$asx(t1);
      $length = t2.get$length(t1);
      for (t3 = J.getInterceptor$(key), i = 0; i < $length; i += 2)
        if (B.boolConversionCheck(t3.$eq(key, t2.$index(t1, i))))
          return i;
      return -1;
    }
  };
  A.TargetPlatform.prototype = {
    _enumToString$0() {
      return "TargetPlatform." + B.S(this._core$_name);
    }
  };
  A._WordWrapParseMode0.prototype = {
    _enumToString$0() {
      return "_WordWrapParseMode." + B.S(this._core$_name);
    }
  };
  A.WriteBuffer.prototype = {
    _serialization$_add$1(byte) {
      var t1, _this = this;
      B._asInt(byte);
      if (B.boolConversionCheck(J.$eq$(_this._currentSize, J.get$length$asx(_this._serialization$_buffer))))
        _this._resize$0();
      J.$indexSet$ax(_this._serialization$_buffer, _this._currentSize, byte);
      t1 = _this._currentSize;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_currentSize(t1 + 1);
    },
    _serialization$_append$1(other) {
      var t1, t2, newSize, _this = this;
      type$.Uint8List._as(other);
      t1 = _this._currentSize;
      t2 = other.length;
      if (typeof t1 !== "number")
        return t1.$add();
      newSize = t1 + t2;
      t1 = J.get$length$asx(_this._serialization$_buffer);
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (newSize >= t1)
        _this._resize$1(newSize);
      J.setRange$3$ax(_this._serialization$_buffer, _this._currentSize, newSize, other);
      t1 = _this._currentSize;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_currentSize(t1 + t2);
    },
    _addAll$3(data, start, end) {
      var newEnd, t1, newSize, _this = this;
      type$.Uint8List._as(data);
      B._asInt(start);
      B._asIntQ(end);
      newEnd = end == null ? J.get$length$asx(_this._eightBytesAsList) : end;
      t1 = _this._currentSize;
      if (typeof t1 !== "number")
        return t1.$add();
      newSize = t1 + (newEnd - start);
      t1 = J.get$length$asx(_this._serialization$_buffer);
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (newSize >= t1)
        _this._resize$1(newSize);
      J.setRange$3$ax(_this._serialization$_buffer, _this._currentSize, newSize, data);
      _this._currentSize = newSize;
    },
    _addAll$1(data) {
      return this._addAll$3(data, 0, null);
    },
    _resize$1(requiredLength) {
      var t1, t2, newBuffer, _this = this;
      B._asIntQ(requiredLength);
      t1 = J.get$length$asx(_this._serialization$_buffer);
      if (typeof t1 !== "number")
        return t1.$mul();
      t2 = requiredLength == null ? 0 : requiredLength;
      newBuffer = B.NativeUint8List_NativeUint8List(A.max(t2, t1 * 2, type$.int));
      D.NativeUint8List_methods.setRange$3(newBuffer, 0, J.get$length$asx(_this._serialization$_buffer), _this._serialization$_buffer);
      _this._serialization$_buffer = newBuffer;
    },
    _resize$0() {
      return this._resize$1(null);
    },
    putUint8$1(byte) {
      this._serialization$_add$1(B._asInt(byte));
    },
    putUint16$1(value) {
      var t1;
      B._asInt(value);
      t1 = $.$get$Endian_host();
      J.setUint16$3$x(this._eightBytes, 0, value, t1);
      this._addAll$3(this._eightBytesAsList, 0, 2);
    },
    putUint32$1(value) {
      var t1;
      B._asInt(value);
      t1 = $.$get$Endian_host();
      J.setUint32$3$x(this._eightBytes, 0, value, t1);
      this._addAll$3(this._eightBytesAsList, 0, 4);
    },
    putInt32$1(value) {
      var t1;
      B._asInt(value);
      t1 = $.$get$Endian_host();
      J.setInt32$3$x(this._eightBytes, 0, value, t1);
      this._addAll$3(this._eightBytesAsList, 0, 4);
    },
    putInt64$1(value) {
      var t1;
      B._asInt(value);
      t1 = $.$get$Endian_host();
      J.setInt64$3$x(this._eightBytes, 0, value, t1);
      this._addAll$3(this._eightBytesAsList, 0, 8);
    },
    putFloat64$1(value) {
      var t1, _this = this;
      B._asDouble(value);
      _this._alignTo$1(8);
      t1 = $.$get$Endian_host();
      J.setFloat64$3$x(_this._eightBytes, 0, value, t1);
      _this._addAll$1(_this._eightBytesAsList);
    },
    putUint8List$1(list) {
      this._serialization$_append$1(type$.Uint8List._as(list));
    },
    putInt32List$1(list) {
      type$.Int32List._as(list);
      this._alignTo$1(4);
      this._serialization$_append$1(J.asUint8List$2$x(D.NativeInt32List_methods.get$buffer(list), D.NativeInt32List_methods.get$offsetInBytes(list), 4 * list.length));
    },
    putFloat32List$1(list) {
      type$.Float32List._as(list);
      this._alignTo$1(4);
      this._serialization$_append$1(J.asUint8List$2$x(D.NativeFloat32List_methods.get$buffer(list), D.NativeFloat32List_methods.get$offsetInBytes(list), 4 * list.length));
    },
    putFloat64List$1(list) {
      type$.Float64List._as(list);
      this._alignTo$1(8);
      this._serialization$_append$1(J.asUint8List$2$x(D.NativeFloat64List_methods.get$buffer(list), D.NativeFloat64List_methods.get$offsetInBytes(list), 8 * list.length));
    },
    _alignTo$1(alignment) {
      var t1, mod;
      B._asInt(alignment);
      t1 = this._currentSize;
      if (typeof t1 !== "number")
        return t1.$mod();
      mod = D.JSNumber_methods.$mod(t1, alignment);
      if (mod !== 0)
        this._addAll$3($.$get$WriteBuffer__zeroBuffer(), 0, alignment - mod);
    },
    done$0() {
      var result, _this = this;
      if (B.boolConversionCheck(_this._serialization$_isDone))
        throw B.wrapException(B.StateError$("done() must not be called more than once on the same " + B.S(_this.get$runtimeType(0)) + "."));
      result = J.asByteData$2$x(J.get$buffer$x(_this._serialization$_buffer), 0, _this._currentSize);
      _this.set$_serialization$_buffer(B.NativeUint8List_NativeUint8List(0));
      _this._serialization$_isDone = true;
      return result;
    },
    set$_serialization$_buffer(_buffer) {
      this._serialization$_buffer = type$.Uint8List._as(_buffer);
    },
    set$_currentSize(_currentSize) {
      this._currentSize = B._asInt(_currentSize);
    }
  };
  A.ReadBuffer.prototype = {
    get$hasRemaining() {
      var t1 = this._serialization$_position,
        t2 = J.get$lengthInBytes$x(this.data);
      if (typeof t1 !== "number")
        return t1.$lt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 < t2;
    },
    getUint8$0(_) {
      var t1 = this._serialization$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      this.set$_serialization$_position(t1 + 1);
      return J.getUint8$1$x(this.data, t1);
    },
    getUint16$0(_) {
      var _this = this,
        t1 = _this._serialization$_position,
        t2 = $.$get$Endian_host(),
        value = J.getUint16$2$x(_this.data, t1, t2);
      t1 = _this._serialization$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_serialization$_position(t1 + 2);
      return value;
    },
    getUint32$0(_) {
      var _this = this,
        t1 = _this._serialization$_position,
        t2 = $.$get$Endian_host(),
        value = J.getUint32$2$x(_this.data, t1, t2);
      t1 = _this._serialization$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_serialization$_position(t1 + 4);
      return value;
    },
    getInt32$0(_) {
      var _this = this,
        t1 = _this._serialization$_position,
        t2 = $.$get$Endian_host(),
        value = J.getInt32$2$x(_this.data, t1, t2);
      t1 = _this._serialization$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_serialization$_position(t1 + 4);
      return value;
    },
    getInt64$0(_) {
      var _this = this,
        t1 = _this._serialization$_position,
        t2 = $.$get$Endian_host(),
        value = J.getInt64$2$x(_this.data, t1, t2);
      t1 = _this._serialization$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_serialization$_position(t1 + 8);
      return value;
    },
    getFloat64$0(_) {
      var t1, t2, value, _this = this;
      _this._alignTo$1(8);
      t1 = _this._serialization$_position;
      t2 = $.$get$Endian_host();
      value = J.getFloat64$2$x(_this.data, t1, t2);
      t1 = _this._serialization$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_serialization$_position(t1 + 8);
      return value;
    },
    getUint8List$1($length) {
      var t1, t2, t3, list, _this = this;
      B._asInt($length);
      t1 = _this.data;
      t2 = J.getInterceptor$x(t1);
      t3 = t2.get$buffer(t1);
      t1 = t2.get$offsetInBytes(t1);
      t2 = _this._serialization$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      list = J.asUint8List$2$x(t3, t1 + t2, $length);
      t2 = _this._serialization$_position;
      if (typeof t2 !== "number")
        return t2.$add();
      _this.set$_serialization$_position(t2 + $length);
      return list;
    },
    getInt32List$1($length) {
      var t1, t2, t3, list, _this = this;
      B._asInt($length);
      _this._alignTo$1(4);
      t1 = _this.data;
      t2 = J.getInterceptor$x(t1);
      t3 = t2.get$buffer(t1);
      t1 = t2.get$offsetInBytes(t1);
      t2 = _this._serialization$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      list = J.asInt32List$2$x(t3, t1 + t2, $length);
      t2 = _this._serialization$_position;
      if (typeof t2 !== "number")
        return t2.$add();
      _this.set$_serialization$_position(t2 + 4 * $length);
      return list;
    },
    getInt64List$1($length) {
      var t1, t2, t3, list, _this = this;
      B._asInt($length);
      _this._alignTo$1(8);
      t1 = _this.data;
      t2 = J.getInterceptor$x(t1);
      t3 = t2.get$buffer(t1);
      t1 = t2.get$offsetInBytes(t1);
      t2 = _this._serialization$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      list = J.asInt64List$2$x(t3, t1 + t2, $length);
      t2 = _this._serialization$_position;
      if (typeof t2 !== "number")
        return t2.$add();
      _this.set$_serialization$_position(t2 + 8 * $length);
      return list;
    },
    getFloat32List$1($length) {
      var t1, t2, t3, list, _this = this;
      B._asInt($length);
      _this._alignTo$1(4);
      t1 = _this.data;
      t2 = J.getInterceptor$x(t1);
      t3 = t2.get$buffer(t1);
      t1 = t2.get$offsetInBytes(t1);
      t2 = _this._serialization$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      list = J.asFloat32List$2$x(t3, t1 + t2, $length);
      t2 = _this._serialization$_position;
      if (typeof t2 !== "number")
        return t2.$add();
      _this.set$_serialization$_position(t2 + 4 * $length);
      return list;
    },
    getFloat64List$1($length) {
      var t1, t2, t3, list, _this = this;
      B._asInt($length);
      _this._alignTo$1(8);
      t1 = _this.data;
      t2 = J.getInterceptor$x(t1);
      t3 = t2.get$buffer(t1);
      t1 = t2.get$offsetInBytes(t1);
      t2 = _this._serialization$_position;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      list = J.asFloat64List$2$x(t3, t1 + t2, $length);
      t2 = _this._serialization$_position;
      if (typeof t2 !== "number")
        return t2.$add();
      _this.set$_serialization$_position(t2 + 8 * $length);
      return list;
    },
    _alignTo$1(alignment) {
      var t1, mod;
      B._asInt(alignment);
      t1 = this._serialization$_position;
      if (typeof t1 !== "number")
        return t1.$mod();
      mod = D.JSNumber_methods.$mod(t1, alignment);
      if (mod !== 0)
        this.set$_serialization$_position(t1 + (alignment - mod));
    },
    set$_serialization$_position(_position) {
      this._serialization$_position = B._asInt(_position);
    }
  };
  A.StackFrame.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.number, _this.$package, _this.line, _this.column, _this.className, _this.method, _this.source, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.StackFrame && B.boolConversionCheck(J.$eq$(other.number, _this.number)) && B.boolConversionCheck(J.$eq$(other.$package, _this.$package)) && B.boolConversionCheck(J.$eq$(other.line, _this.line)) && B.boolConversionCheck(J.$eq$(other.column, _this.column)) && B.boolConversionCheck(J.$eq$(other.className, _this.className)) && B.boolConversionCheck(J.$eq$(other.method, _this.method)) && B.boolConversionCheck(J.$eq$(other.source, _this.source));
    },
    toString$0(_) {
      var _this = this;
      return B.S(A.objectRuntimeType(_this, "StackFrame")) + "(#" + B.S(_this.number) + ", " + B.S(_this.packageScheme) + ":" + B.S(_this.$package) + "/" + B.S(_this.packagePath) + ":" + B.S(_this.line) + ":" + B.S(_this.column) + ", className: " + B.S(_this.className) + ", method: " + B.S(_this.method) + ")";
    }
  };
  A.SynchronousFuture.prototype = {
    catchError$2$test(onError, test) {
      type$.Function._as(onError);
      type$.nullable_bool_Function_Object._as(test);
      return B.Completer_Completer(this.$ti._precomputed1).get$future();
    },
    catchError$1(onError) {
      return this.catchError$2$test(onError, null);
    },
    then$1$2$onError(onValue, onError, $R) {
      var result;
      this.$ti._bind$1($R)._eval$1("1/(2)")._as(onValue);
      type$.nullable_Function._as(onError);
      result = onValue.call$1(this._synchronous_future$_value);
      if ($R._eval$1("Future<0>")._is(result))
        return result;
      return A.SynchronousFuture$(result, $R);
    },
    then$1$1(onValue, $R) {
      return this.then$1$2$onError(onValue, null, $R);
    },
    whenComplete$1(action) {
      var result, e, stack, t1, exception, _this = this;
      type$.dynamic_Function._as(action);
      try {
        result = action.call$0();
        if (type$.Future_dynamic._is(result)) {
          t1 = result.then$1$1(new A.SynchronousFuture_whenComplete_closure(_this), _this.$ti._precomputed1);
          return t1;
        }
        return _this;
      } catch (exception) {
        e = B.unwrapException(exception);
        stack = B.getTraceFromException(exception);
        t1 = B.Future_Future$error(e, stack, _this.$ti._precomputed1);
        return t1;
      }
    },
    $isFuture: 1
  };
  A.GestureDisposition.prototype = {
    _enumToString$0() {
      return "GestureDisposition." + B.S(this._core$_name);
    }
  };
  A.HitTestEntry.prototype = {
    toString$0(_) {
      return B.S(A.describeIdentity(this)) + "(" + B.S(this.target) + ")";
    },
    get$transform() {
      return this._transform;
    },
    set$_transform(_transform) {
      this._transform = type$.nullable_Matrix4_2._as(_transform);
    }
  };
  A.Axis.prototype = {
    _enumToString$0() {
      return "Axis." + B.S(this._core$_name);
    }
  };
  A.AxisDirection.prototype = {
    _enumToString$0() {
      return "AxisDirection." + B.S(this._core$_name);
    }
  };
  A.ClipContext.prototype = {
    _clipAndPaint$4(canvasClipCall, clipBehavior, bounds, painter) {
      var _this = this;
      type$.void_Function_bool._as(canvasClipCall);
      type$.Clip._as(clipBehavior);
      type$.Rect._as(bounds);
      type$.void_Function._as(painter);
      _this.get$canvas().save$0();
      switch (clipBehavior.index) {
        case 0:
          break;
        case 1:
          canvasClipCall.call$1(false);
          break;
        case 2:
          canvasClipCall.call$1(true);
          break;
        case 3:
          canvasClipCall.call$1(true);
          _this.get$canvas().saveLayer$2(bounds, A.Paint_Paint());
          break;
      }
      painter.call$0();
      if (clipBehavior === C.Clip_3)
        _this.get$canvas().restore$0();
      _this.get$canvas().restore$0();
    },
    clipPathAndPaint$4(path, clipBehavior, bounds, painter) {
      this._clipAndPaint$4(new A.ClipContext_clipPathAndPaint_closure(this, type$.Path._as(path)), type$.Clip._as(clipBehavior), type$.Rect._as(bounds), type$.void_Function._as(painter));
    },
    clipRRectAndPaint$4(rrect, clipBehavior, bounds, painter) {
      this._clipAndPaint$4(new A.ClipContext_clipRRectAndPaint_closure(this, type$.RRect._as(rrect)), type$.Clip._as(clipBehavior), type$.Rect._as(bounds), type$.void_Function._as(painter));
    },
    clipRectAndPaint$4(rect, clipBehavior, bounds, painter) {
      var t1 = type$.Rect;
      this._clipAndPaint$4(new A.ClipContext_clipRectAndPaint_closure(this, t1._as(rect)), type$.Clip._as(clipBehavior), t1._as(bounds), type$.void_Function._as(painter));
    }
  };
  A.EdgeInsetsGeometry.prototype = {
    get$horizontal() {
      var t3, t4, _this = this,
        t1 = _this.get$_left(),
        t2 = _this.get$_right();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = _this.get$_edge_insets$_start();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t4 = _this.get$_edge_insets$_end();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return t1 + t2 + t3 + t4;
    },
    get$vertical() {
      var t1 = this.get$_top(),
        t2 = this.get$_bottom();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 + t2;
    },
    add$1(_, other) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, _this = this;
      type$.EdgeInsetsGeometry._as(other);
      t1 = _this.get$_left();
      t2 = other.get$_left();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = _this.get$_right();
      t4 = other.get$_right();
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t5 = _this.get$_edge_insets$_start();
      t6 = other.get$_edge_insets$_start();
      if (typeof t5 !== "number")
        return t5.$add();
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = _this.get$_edge_insets$_end();
      t8 = other.get$_edge_insets$_end();
      if (typeof t7 !== "number")
        return t7.$add();
      if (typeof t8 !== "number")
        return B.iae(t8);
      t9 = _this.get$_top();
      t10 = other.get$_top();
      if (typeof t9 !== "number")
        return t9.$add();
      if (typeof t10 !== "number")
        return B.iae(t10);
      t11 = _this.get$_bottom();
      t12 = other.get$_bottom();
      if (typeof t11 !== "number")
        return t11.$add();
      if (typeof t12 !== "number")
        return B.iae(t12);
      return A._MixedEdgeInsets$fromLRSETB(t1 + t2, t3 + t4, t5 + t6, t7 + t8, t9 + t10, t11 + t12);
    },
    clamp$2(_, min, max) {
      var _this = this,
        t1 = type$.EdgeInsetsGeometry;
      t1._as(min);
      t1._as(max);
      return A._MixedEdgeInsets$fromLRSETB(A.clampDouble(_this.get$_left(), min.get$_left(), max.get$_left()), A.clampDouble(_this.get$_right(), min.get$_right(), max.get$_right()), A.clampDouble(_this.get$_edge_insets$_start(), min.get$_edge_insets$_start(), max.get$_edge_insets$_start()), A.clampDouble(_this.get$_edge_insets$_end(), min.get$_edge_insets$_end(), max.get$_edge_insets$_end()), A.clampDouble(_this.get$_top(), min.get$_top(), max.get$_top()), A.clampDouble(_this.get$_bottom(), min.get$_bottom(), max.get$_bottom()));
    },
    toString$0(_) {
      var _this = this;
      if (B.boolConversionCheck(J.$eq$(_this.get$_edge_insets$_start(), 0)) && B.boolConversionCheck(J.$eq$(_this.get$_edge_insets$_end(), 0))) {
        if (B.boolConversionCheck(J.$eq$(_this.get$_left(), 0)) && B.boolConversionCheck(J.$eq$(_this.get$_right(), 0)) && B.boolConversionCheck(J.$eq$(_this.get$_top(), 0)) && B.boolConversionCheck(J.$eq$(_this.get$_bottom(), 0)))
          return "EdgeInsets.zero";
        if (B.boolConversionCheck(J.$eq$(_this.get$_left(), _this.get$_right())) && B.boolConversionCheck(J.$eq$(_this.get$_right(), _this.get$_top())) && B.boolConversionCheck(J.$eq$(_this.get$_top(), _this.get$_bottom())))
          return "EdgeInsets.all(" + B.S(J.toStringAsFixed$1$n(_this.get$_left(), 1)) + ")";
        return "EdgeInsets(" + B.S(J.toStringAsFixed$1$n(_this.get$_left(), 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.get$_top(), 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.get$_right(), 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.get$_bottom(), 1)) + ")";
      }
      if (B.boolConversionCheck(J.$eq$(_this.get$_left(), 0)) && B.boolConversionCheck(J.$eq$(_this.get$_right(), 0)))
        return "EdgeInsetsDirectional(" + B.S(J.toStringAsFixed$1$n(_this.get$_edge_insets$_start(), 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.get$_top(), 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.get$_edge_insets$_end(), 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.get$_bottom(), 1)) + ")";
      return "EdgeInsets(" + B.S(J.toStringAsFixed$1$n(_this.get$_left(), 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.get$_top(), 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.get$_right(), 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.get$_bottom(), 1)) + ") + EdgeInsetsDirectional(" + B.S(J.toStringAsFixed$1$n(_this.get$_edge_insets$_start(), 1)) + ", 0.0, " + B.S(J.toStringAsFixed$1$n(_this.get$_edge_insets$_end(), 1)) + ", 0.0)";
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A.EdgeInsetsGeometry && B.boolConversionCheck(J.$eq$(other.get$_left(), _this.get$_left())) && B.boolConversionCheck(J.$eq$(other.get$_right(), _this.get$_right())) && B.boolConversionCheck(J.$eq$(other.get$_edge_insets$_start(), _this.get$_edge_insets$_start())) && B.boolConversionCheck(J.$eq$(other.get$_edge_insets$_end(), _this.get$_edge_insets$_end())) && B.boolConversionCheck(J.$eq$(other.get$_top(), _this.get$_top())) && B.boolConversionCheck(J.$eq$(other.get$_bottom(), _this.get$_bottom()));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.get$_left(), _this.get$_right(), _this.get$_edge_insets$_start(), _this.get$_edge_insets$_end(), _this.get$_top(), _this.get$_bottom(), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    }
  };
  A.EdgeInsets.prototype = {
    get$_left() {
      return this.left;
    },
    get$_top() {
      return this.top;
    },
    get$_right() {
      return this.right;
    },
    get$_bottom() {
      return this.bottom;
    },
    get$_edge_insets$_start() {
      return 0;
    },
    get$_edge_insets$_end() {
      return 0;
    },
    deflateRect$1(rect) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _this = this;
      type$.Rect._as(rect);
      t1 = rect.left;
      t2 = _this.left;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = rect.top;
      t4 = _this.top;
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t5 = rect.right;
      t6 = _this.right;
      if (typeof t5 !== "number")
        return t5.$sub();
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = rect.bottom;
      t8 = _this.bottom;
      if (typeof t7 !== "number")
        return t7.$sub();
      if (typeof t8 !== "number")
        return B.iae(t8);
      return A.Rect$fromLTRB(t1 + t2, t3 + t4, t5 - t6, t7 - t8);
    },
    add$1(_, other) {
      type$.EdgeInsetsGeometry._as(other);
      if (other instanceof A.EdgeInsets)
        return this.$add(0, other);
      return this.super$EdgeInsetsGeometry$add(0, other);
    },
    clamp$2(_, min, max) {
      var _this = this,
        t1 = type$.EdgeInsetsGeometry;
      t1._as(min);
      t1._as(max);
      return A.EdgeInsets$fromLTRB(A.clampDouble(_this.get$_left(), min.get$_left(), max.get$_left()), A.clampDouble(_this.get$_top(), min.get$_top(), max.get$_top()), A.clampDouble(_this.get$_right(), min.get$_right(), max.get$_right()), A.clampDouble(_this.get$_bottom(), min.get$_bottom(), max.get$_bottom()));
    },
    $sub(_, other) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _this = this;
      type$.EdgeInsets._as(other);
      t1 = _this.left;
      t2 = other.left;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = _this.top;
      t4 = other.top;
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t5 = _this.right;
      t6 = other.right;
      if (typeof t5 !== "number")
        return t5.$sub();
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = _this.bottom;
      t8 = other.bottom;
      if (typeof t7 !== "number")
        return t7.$sub();
      if (typeof t8 !== "number")
        return B.iae(t8);
      return A.EdgeInsets$fromLTRB(t1 - t2, t3 - t4, t5 - t6, t7 - t8);
    },
    $add(_, other) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _this = this;
      type$.EdgeInsets._as(other);
      t1 = _this.left;
      t2 = other.left;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = _this.top;
      t4 = other.top;
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t5 = _this.right;
      t6 = other.right;
      if (typeof t5 !== "number")
        return t5.$add();
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = _this.bottom;
      t8 = other.bottom;
      if (typeof t7 !== "number")
        return t7.$add();
      if (typeof t8 !== "number")
        return B.iae(t8);
      return A.EdgeInsets$fromLTRB(t1 + t2, t3 + t4, t5 + t6, t7 + t8);
    },
    $mul(_, other) {
      var t1, t2, t3, t4, _this = this;
      B._asDouble(other);
      t1 = _this.left;
      if (typeof t1 !== "number")
        return t1.$mul();
      t2 = _this.top;
      if (typeof t2 !== "number")
        return t2.$mul();
      t3 = _this.right;
      if (typeof t3 !== "number")
        return t3.$mul();
      t4 = _this.bottom;
      if (typeof t4 !== "number")
        return t4.$mul();
      return A.EdgeInsets$fromLTRB(t1 * other, t2 * other, t3 * other, t4 * other);
    },
    resolve$1(direction) {
      type$.nullable_TextDirection._as(direction);
      return this;
    }
  };
  A._MixedEdgeInsets.prototype = {
    $mul(_, other) {
      var t1, t2, t3, t4, t5, t6, _this = this;
      B._asDouble(other);
      t1 = _this._left;
      if (typeof t1 !== "number")
        return t1.$mul();
      t2 = _this._right;
      if (typeof t2 !== "number")
        return t2.$mul();
      t3 = _this._edge_insets$_start;
      if (typeof t3 !== "number")
        return t3.$mul();
      t4 = _this._edge_insets$_end;
      if (typeof t4 !== "number")
        return t4.$mul();
      t5 = _this._top;
      if (typeof t5 !== "number")
        return t5.$mul();
      t6 = _this._bottom;
      if (typeof t6 !== "number")
        return t6.$mul();
      return A._MixedEdgeInsets$fromLRSETB(t1 * other, t2 * other, t3 * other, t4 * other, t5 * other, t6 * other);
    },
    resolve$1(direction) {
      var t1, t2, t3, t4, _this = this;
      switch (type$.nullable_TextDirection._as(direction).index) {
        case 0:
          t1 = _this._edge_insets$_end;
          t2 = _this._left;
          if (typeof t1 !== "number")
            return t1.$add();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t3 = _this._edge_insets$_start;
          t4 = _this._right;
          if (typeof t3 !== "number")
            return t3.$add();
          if (typeof t4 !== "number")
            return B.iae(t4);
          t4 = A.EdgeInsets$fromLTRB(t1 + t2, _this._top, t3 + t4, _this._bottom);
          t1 = t4;
          break;
        case 1:
          t1 = _this._edge_insets$_start;
          t2 = _this._left;
          if (typeof t1 !== "number")
            return t1.$add();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t3 = _this._edge_insets$_end;
          t4 = _this._right;
          if (typeof t3 !== "number")
            return t3.$add();
          if (typeof t4 !== "number")
            return B.iae(t4);
          t4 = A.EdgeInsets$fromLTRB(t1 + t2, _this._top, t3 + t4, _this._bottom);
          t1 = t4;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    get$_left() {
      return this._left;
    },
    get$_right() {
      return this._right;
    },
    get$_edge_insets$_start() {
      return this._edge_insets$_start;
    },
    get$_edge_insets$_end() {
      return this._edge_insets$_end;
    },
    get$_top() {
      return this._top;
    },
    get$_bottom() {
      return this._bottom;
    }
  };
  A.TransformProperty.prototype = {
    valueToString$1$parentConfiguration(parentConfiguration) {
      var _this = this;
      type$.nullable_TextTreeConfiguration._as(parentConfiguration);
      if (parentConfiguration != null && !B.boolConversionCheck(parentConfiguration.lineBreakProperties))
        return "[" + B.S(D.JSArray_methods.join$1(B._setArrayType([B.S(A.debugFormatDouble(_this.get$value().entry$2(0, 0))) + "," + B.S(A.debugFormatDouble(_this.get$value().entry$2(0, 1))) + "," + B.S(A.debugFormatDouble(_this.get$value().entry$2(0, 2))) + "," + B.S(A.debugFormatDouble(_this.get$value().entry$2(0, 3))), B.S(A.debugFormatDouble(_this.get$value().entry$2(1, 0))) + "," + B.S(A.debugFormatDouble(_this.get$value().entry$2(1, 1))) + "," + B.S(A.debugFormatDouble(_this.get$value().entry$2(1, 2))) + "," + B.S(A.debugFormatDouble(_this.get$value().entry$2(1, 3))), B.S(A.debugFormatDouble(_this.get$value().entry$2(2, 0))) + "," + B.S(A.debugFormatDouble(_this.get$value().entry$2(2, 1))) + "," + B.S(A.debugFormatDouble(_this.get$value().entry$2(2, 2))) + "," + B.S(A.debugFormatDouble(_this.get$value().entry$2(2, 3))), B.S(A.debugFormatDouble(_this.get$value().entry$2(3, 0))) + "," + B.S(A.debugFormatDouble(_this.get$value().entry$2(3, 1))) + "," + B.S(A.debugFormatDouble(_this.get$value().entry$2(3, 2))) + "," + B.S(A.debugFormatDouble(_this.get$value().entry$2(3, 3)))], type$.JSArray_String), "; ")) + "]";
      return J.join$1$ax(A.debugDescribeTransform(_this.get$value()), "\n");
    }
  };
  A._LinearTextScaler.prototype = {
    scale$1(fontSize) {
      var t1;
      B._asDouble(fontSize);
      t1 = this.textScaleFactor;
      if (typeof t1 !== "number")
        return B.iae(t1);
      return fontSize * t1;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof A._LinearTextScaler && B.boolConversionCheck(J.$eq$(other.textScaleFactor, this.textScaleFactor));
    },
    get$hashCode(_) {
      return J.get$hashCode$(this.textScaleFactor);
    },
    toString$0(_) {
      var t1 = this.textScaleFactor;
      return B.boolConversionCheck(J.$eq$(t1, 1)) ? "no scaling" : "linear (" + B.S(t1) + "x)";
    },
    $isTextScaler: 1,
    get$textScaleFactor() {
      return this.textScaleFactor;
    }
  };
  A.BoxConstraints.prototype = {
    copyWith$4$maxHeight$maxWidth$minHeight$minWidth(maxHeight, maxWidth, minHeight, minWidth) {
      var t1, t2, t3, _this = this;
      B._asDoubleQ(minWidth);
      B._asDoubleQ(maxWidth);
      B._asDoubleQ(minHeight);
      B._asDoubleQ(maxHeight);
      t1 = minWidth == null ? _this.minWidth : minWidth;
      t2 = maxWidth == null ? _this.maxWidth : maxWidth;
      t3 = minHeight == null ? _this.minHeight : minHeight;
      return A.BoxConstraints$(maxHeight == null ? _this.maxHeight : maxHeight, t2, t3, t1);
    },
    copyWith$2$maxWidth$minWidth(maxWidth, minWidth) {
      return this.copyWith$4$maxHeight$maxWidth$minHeight$minWidth(null, maxWidth, null, minWidth);
    },
    copyWith$2$maxHeight$minHeight(maxHeight, minHeight) {
      return this.copyWith$4$maxHeight$maxWidth$minHeight$minWidth(maxHeight, null, minHeight, null);
    },
    copyWith$2$minHeight$minWidth(minHeight, minWidth) {
      return this.copyWith$4$maxHeight$maxWidth$minHeight$minWidth(null, null, minHeight, minWidth);
    },
    deflate$1(edges) {
      var horizontal, vertical, t1, t2, deflatedMinWidth, deflatedMinHeight, t3, _this = this;
      type$.EdgeInsetsGeometry._as(edges);
      horizontal = edges.get$horizontal();
      vertical = edges.get$vertical();
      t1 = _this.minWidth;
      if (typeof t1 !== "number")
        return t1.$sub();
      t2 = type$.double;
      deflatedMinWidth = A.max(0, t1 - horizontal, t2);
      t1 = _this.minHeight;
      if (typeof t1 !== "number")
        return t1.$sub();
      deflatedMinHeight = A.max(0, t1 - vertical, t2);
      t1 = _this.maxWidth;
      if (typeof t1 !== "number")
        return t1.$sub();
      t1 = A.max(deflatedMinWidth, t1 - horizontal, t2);
      t3 = _this.maxHeight;
      if (typeof t3 !== "number")
        return t3.$sub();
      return A.BoxConstraints$(A.max(deflatedMinHeight, t3 - vertical, t2), t1, deflatedMinHeight, deflatedMinWidth);
    },
    loosen$0() {
      return A.BoxConstraints$(this.maxHeight, this.maxWidth, 0, 0);
    },
    enforce$1(constraints) {
      var t1, t2, t3, t4, t5, _this = this;
      type$.BoxConstraints._as(constraints);
      t1 = constraints.minWidth;
      t2 = constraints.maxWidth;
      t3 = A.clampDouble(_this.minWidth, t1, t2);
      t2 = A.clampDouble(_this.maxWidth, t1, t2);
      t1 = constraints.minHeight;
      t4 = constraints.maxHeight;
      t5 = A.clampDouble(_this.minHeight, t1, t4);
      return A.BoxConstraints$(A.clampDouble(_this.maxHeight, t1, t4), t2, t5, t3);
    },
    get$flipped() {
      var _this = this;
      return A.BoxConstraints$(_this.maxWidth, _this.maxHeight, _this.minWidth, _this.minHeight);
    },
    constrainWidth$1(width) {
      return A.clampDouble(B._asDouble(width), this.minWidth, this.maxWidth);
    },
    constrainWidth$0() {
      return this.constrainWidth$1(1 / 0);
    },
    constrainHeight$1(height) {
      return A.clampDouble(B._asDouble(height), this.minHeight, this.maxHeight);
    },
    constrainHeight$0() {
      return this.constrainHeight$1(1 / 0);
    },
    constrain$1(size) {
      type$.Size._as(size);
      return A.Size$(this.constrainWidth$1(size.get$width()), this.constrainHeight$1(size.get$height()));
    },
    get$biggest() {
      return A.Size$(this.constrainWidth$0(), this.constrainHeight$0());
    },
    get$smallest() {
      return A.Size$(this.constrainWidth$1(0), this.constrainHeight$1(0));
    },
    get$hasTightWidth() {
      var t1 = this.minWidth,
        t2 = this.maxWidth;
      if (typeof t1 !== "number")
        return t1.$ge();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 >= t2;
    },
    get$hasTightHeight() {
      var t1 = this.minHeight,
        t2 = this.maxHeight;
      if (typeof t1 !== "number")
        return t1.$ge();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 >= t2;
    },
    get$isTight() {
      return B.boolConversionCheck(this.get$hasTightWidth()) && B.boolConversionCheck(this.get$hasTightHeight());
    },
    $mul(_, factor) {
      var t1, t2, t3, t4, _this = this;
      B._asDouble(factor);
      t1 = _this.minWidth;
      if (typeof t1 !== "number")
        return t1.$mul();
      t2 = _this.maxWidth;
      if (typeof t2 !== "number")
        return t2.$mul();
      t3 = _this.minHeight;
      if (typeof t3 !== "number")
        return t3.$mul();
      t4 = _this.maxHeight;
      if (typeof t4 !== "number")
        return t4.$mul();
      return A.BoxConstraints$(t4 * factor, t2 * factor, t3 * factor, t1 * factor);
    },
    $div(_, factor) {
      var t1, t2, t3, t4, _this = this;
      B._asDouble(factor);
      t1 = _this.minWidth;
      if (typeof t1 !== "number")
        return t1.$div();
      t2 = _this.maxWidth;
      if (typeof t2 !== "number")
        return t2.$div();
      t3 = _this.minHeight;
      if (typeof t3 !== "number")
        return t3.$div();
      t4 = _this.maxHeight;
      if (typeof t4 !== "number")
        return t4.$div();
      return A.BoxConstraints$(t4 / factor, t2 / factor, t3 / factor, t1 / factor);
    },
    get$isNormalized() {
      var t2, t3, _this = this,
        t1 = _this.minWidth;
      if (typeof t1 !== "number")
        return t1.$ge();
      t2 = false;
      if (t1 >= 0) {
        t3 = _this.maxWidth;
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (t1 <= t3) {
          t1 = _this.minHeight;
          if (typeof t1 !== "number")
            return t1.$ge();
          if (t1 >= 0) {
            t2 = _this.maxHeight;
            if (typeof t2 !== "number")
              return B.iae(t2);
            t2 = t1 <= t2;
            t1 = t2;
          } else
            t1 = t2;
        } else
          t1 = t2;
      } else
        t1 = t2;
      return t1;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.BoxConstraints && B.boolConversionCheck(J.$eq$(other.minWidth, _this.minWidth)) && B.boolConversionCheck(J.$eq$(other.maxWidth, _this.maxWidth)) && B.boolConversionCheck(J.$eq$(other.minHeight, _this.minHeight)) && B.boolConversionCheck(J.$eq$(other.maxHeight, _this.maxHeight));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.minWidth, _this.maxWidth, _this.minHeight, _this.maxHeight, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this,
        annotation = B.boolConversionCheck(_this.get$isNormalized()) ? "" : "; NOT NORMALIZED",
        t1 = _this.minWidth,
        t2 = J.getInterceptor$(t1);
      if (B.boolConversionCheck(t2.$eq(t1, 1 / 0)) && B.boolConversionCheck(J.$eq$(_this.minHeight, 1 / 0)))
        return "BoxConstraints(biggest" + annotation + ")";
      if (B.boolConversionCheck(t2.$eq(t1, 0)) && B.boolConversionCheck(J.$eq$(_this.maxWidth, 1 / 0)) && B.boolConversionCheck(J.$eq$(_this.minHeight, 0)) && B.boolConversionCheck(J.$eq$(_this.maxHeight, 1 / 0)))
        return "BoxConstraints(unconstrained" + annotation + ")";
      t2 = new A.BoxConstraints_toString_describe();
      return "BoxConstraints(" + t2.call$3(t1, _this.maxWidth, "w") + ", " + t2.call$3(_this.minHeight, _this.maxHeight, "h") + annotation + ")";
    }
  };
  A.BoxHitTestEntry.prototype = {
    toString$0(_) {
      return B.S(A.describeIdentity(this.target)) + "@" + B.S(this.localPosition);
    }
  };
  A.BoxParentData.prototype = {
    toString$0(_) {
      return "offset=" + B.S(this.offset);
    },
    set$offset(offset) {
      this.offset = type$.Offset._as(offset);
    }
  };
  A._DryLayout.prototype = {
    memoize$3(cacheStorage, input, computer) {
      var t1, t2;
      type$._LayoutCacheStorage._as(cacheStorage);
      t1 = type$.BoxConstraints;
      t1._as(input);
      type$.Size_Function_BoxConstraints._as(computer);
      t2 = cacheStorage._cachedDryLayoutSizes;
      if (t2 == null) {
        t1 = B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Size);
        cacheStorage.set$_cachedDryLayoutSizes(t1);
      } else
        t1 = t2;
      return t1.putIfAbsent$2(input, new A._DryLayout_memoize_closure(computer, input));
    },
    eventLabel$1(renderBox) {
      return B.S(type$.RenderBox._as(renderBox).get$runtimeType(0)) + ".getDryLayout";
    },
    $is_CachedLayoutCalculation: 1
  };
  A._Baseline.prototype = {
    memoize$3(cacheStorage, input, computer) {
      var t1;
      type$._LayoutCacheStorage._as(cacheStorage);
      type$.Record_2_BoxConstraints_and_TextBaseline._as(input);
      type$.nullable_double_Function_Record_2_BoxConstraints_and_TextBaseline._as(computer);
      switch (input._1) {
        case C.TextBaseline_0:
          t1 = cacheStorage._cachedAlphabeticBaseline;
          if (t1 == null) {
            t1 = B.LinkedHashMap_LinkedHashMap$_empty(type$.BoxConstraints, type$.nullable_double);
            cacheStorage.set$_cachedAlphabeticBaseline(t1);
          }
          break;
        case C.TextBaseline_1:
          t1 = cacheStorage._cachedIdeoBaseline;
          if (t1 == null) {
            t1 = B.LinkedHashMap_LinkedHashMap$_empty(type$.BoxConstraints, type$.nullable_double);
            cacheStorage.set$_cachedIdeoBaseline(t1);
          }
          break;
        default:
          t1 = null;
      }
      return t1.putIfAbsent$2(input._0, new A._Baseline_memoize_ifAbsent(computer, input));
    },
    eventLabel$1(renderBox) {
      return B.S(type$.RenderBox._as(renderBox).get$runtimeType(0)) + ".getDryBaseline";
    },
    $is_CachedLayoutCalculation: 1
  };
  A._LayoutCacheStorage.prototype = {
    clear$0(_) {
      var hasCache, _this = this,
        t1 = _this._cachedDryLayoutSizes;
      t1 = t1 == null ? null : J.get$isNotEmpty$asx(t1);
      hasCache = true;
      if (!B.boolConversionCheck(t1 == null ? false : t1)) {
        t1 = _this._cachedAlphabeticBaseline;
        t1 = t1 == null ? null : J.get$isNotEmpty$asx(t1);
        if (!B.boolConversionCheck(t1 == null ? false : t1)) {
          t1 = _this._cachedIdeoBaseline;
          t1 = t1 == null ? null : J.get$isNotEmpty$asx(t1);
          t1 = B.boolConversionCheck(t1 == null ? false : t1);
        } else
          t1 = hasCache;
        hasCache = t1;
      }
      if (hasCache) {
        t1 = _this._cachedDryLayoutSizes;
        if (t1 != null)
          J.clear$0$ax(t1);
        t1 = _this._cachedAlphabeticBaseline;
        if (t1 != null)
          J.clear$0$ax(t1);
        t1 = _this._cachedIdeoBaseline;
        if (t1 != null)
          J.clear$0$ax(t1);
      }
      return hasCache;
    },
    set$_cachedDryLayoutSizes(_cachedDryLayoutSizes) {
      this._cachedDryLayoutSizes = type$.nullable_Map_BoxConstraints_Size._as(_cachedDryLayoutSizes);
    },
    set$_cachedAlphabeticBaseline(_cachedAlphabeticBaseline) {
      this._cachedAlphabeticBaseline = type$.nullable_Map_of_BoxConstraints_and_nullable_double._as(_cachedAlphabeticBaseline);
    },
    set$_cachedIdeoBaseline(_cachedIdeoBaseline) {
      this._cachedIdeoBaseline = type$.nullable_Map_of_BoxConstraints_and_nullable_double._as(_cachedIdeoBaseline);
    }
  };
  A.RenderBox.prototype = {
    setupParentData$1(child) {
      type$.RenderObject._as(child);
      if (!(child.parentData instanceof A.BoxParentData))
        child.parentData = A.BoxParentData$();
    },
    _computeIntrinsics$2$3(type, input, computer, $Input, Output) {
      var t1;
      B.checkTypeBound($Input, type$.Object, "Input", "_computeIntrinsics");
      t1 = this._computeWithTimeline$2$3($Input._eval$1("@<0>")._bind$1(Output)._eval$1("_CachedLayoutCalculation<1,2>")._as(type), $Input._as(input), Output._eval$1("@<0>")._bind$1($Input)._eval$1("1(2)")._as(computer), $Input, Output);
      return t1;
    },
    _computeWithTimeline$2$3(type, input, computer, $Input, Output) {
      var t1, result;
      B.checkTypeBound($Input, type$.Object, "Input", "_computeWithTimeline");
      $Input._eval$1("@<0>")._bind$1(Output)._eval$1("_CachedLayoutCalculation<1,2>")._as(type);
      $Input._as(input);
      Output._eval$1("@<0>")._bind$1($Input)._eval$1("1(2)")._as(computer);
      if (B.boolConversionCheck($.debugProfileLayoutsEnabled) || B.boolConversionCheck(J.$eq$($.RenderBox__debugIntrinsicsDepth, 0)))
        A.FlutterTimeline_startSync(type.eventLabel$1(this), null);
      t1 = $.RenderBox__debugIntrinsicsDepth;
      if (typeof t1 !== "number")
        return t1.$add();
      $.RenderBox__debugIntrinsicsDepth = t1 + 1;
      result = type.memoize$3(this._layoutCacheStorage, input, computer);
      t1 = $.RenderBox__debugIntrinsicsDepth;
      if (typeof t1 !== "number")
        return t1.$sub();
      --t1;
      $.RenderBox__debugIntrinsicsDepth = t1;
      if (B.boolConversionCheck($.debugProfileLayoutsEnabled) || t1 === 0)
        A.FlutterTimeline_finishSync();
      return result;
    },
    getDryLayout$1(constraints) {
      var t1 = type$.BoxConstraints;
      return this._computeIntrinsics$2$3(C.C__DryLayout, t1._as(constraints), this.get$_computeDryLayout(), t1, type$.Size);
    },
    _computeDryLayout$1(constraints) {
      return this.computeDryLayout$1(type$.BoxConstraints._as(constraints));
    },
    computeDryLayout$1(constraints) {
      type$.BoxConstraints._as(constraints);
      return C.Size_0_0;
    },
    getDryBaseline$2(constraints, baseline) {
      return this._computeIntrinsics$2$3(C.C__Baseline, new B._Record_2(type$.BoxConstraints._as(constraints), type$.TextBaseline._as(baseline)), this.get$_computeDryBaseline(), type$.Record_2_BoxConstraints_and_TextBaseline, type$.nullable_double);
    },
    _computeDryBaseline$1(pair) {
      type$.Record_2_BoxConstraints_and_TextBaseline._as(pair);
      return A.BaselineOffset_constructor_(this.computeDryBaseline$2(pair._0, pair._1));
    },
    computeDryBaseline$2(constraints, baseline) {
      type$.BoxConstraints._as(constraints);
      type$.TextBaseline._as(baseline);
      return null;
    },
    get$hasSize() {
      return this._size != null;
    },
    get$size() {
      var t1 = this._size;
      return t1 == null ? B.throwExpression(B.StateError$("RenderBox was not laid out: " + B.S(this.get$runtimeType(0)) + "#" + B.S(A.shortHash(this)))) : t1;
    },
    set$size(value) {
      this._size = type$.Size._as(value);
    },
    get$semanticBounds() {
      return C.Offset_0_0.$and(0, this.get$size());
    },
    getDistanceToBaseline$2$onlyReal(baseline, onlyReal) {
      var result;
      type$.TextBaseline._as(baseline);
      B._asBool(onlyReal);
      result = null;
      try {
        result = this.getDistanceToActualBaseline$1(baseline);
      } finally {
      }
      if (result == null && !onlyReal)
        return this.get$size().get$height();
      return result;
    },
    getDistanceToActualBaseline$1(baseline) {
      type$.TextBaseline._as(baseline);
      return this._computeIntrinsics$2$3(C.C__Baseline, new B._Record_2(this.get$constraints(), baseline), new A.RenderBox_getDistanceToActualBaseline_closure(this), type$.Record_2_BoxConstraints_and_TextBaseline, type$.nullable_double);
    },
    computeDistanceToActualBaseline$1(baseline) {
      type$.TextBaseline._as(baseline);
      return null;
    },
    get$constraints() {
      return type$.BoxConstraints._as(A.RenderObject.prototype.get$constraints.call(this));
    },
    markNeedsLayout$0() {
      var _this = this;
      if (B.boolConversionCheck(J.clear$0$ax(_this._layoutCacheStorage)) && _this.get$parent() != null) {
        _this.markParentNeedsLayout$0();
        return;
      }
      _this.super$RenderObject$markNeedsLayout();
    },
    performResize$0() {
      this.set$size(this.computeDryLayout$1(this.get$constraints()));
    },
    performLayout$0() {
    },
    hitTest$2$position(result, position) {
      var t1, _this = this;
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      t1 = _this._size;
      t1.toString;
      if (B.boolConversionCheck(J.contains$1$asx(t1, position)))
        if (B.boolConversionCheck(_this.hitTestChildren$2$position(result, position)) || B.boolConversionCheck(_this.hitTestSelf$1(position))) {
          result.add$1(0, A.BoxHitTestEntry$(_this, position));
          return true;
        }
      return false;
    },
    hitTestSelf$1(position) {
      type$.Offset._as(position);
      return false;
    },
    hitTestChildren$2$position(result, position) {
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      return false;
    },
    applyPaintTransform$2(child, transform) {
      var t1, offset;
      type$.RenderObject._as(child);
      type$.Matrix4_2._as(transform);
      t1 = child.parentData;
      t1.toString;
      offset = type$.BoxParentData._as(t1).offset;
      transform.translate$2(offset.get$dx(), offset.get$dy());
    },
    globalToLocal$1(point) {
      var transform, n, i, d, s, t1, t2, p;
      type$.Offset._as(point);
      transform = this.getTransformTo$1(null);
      if (transform.invert$0() === 0)
        return C.Offset_0_0;
      n = A.Vector3_Vector3(0, 0, 1);
      i = transform.perspectiveTransform$1(A.Vector3_Vector3(0, 0, 0));
      d = J.$sub$n(transform.perspectiveTransform$1(A.Vector3_Vector3(0, 0, 1)), i);
      s = transform.perspectiveTransform$1(A.Vector3_Vector3(point.get$dx(), point.get$dy(), 0));
      t1 = n.dot$1(s);
      t2 = n.dot$1(d);
      if (typeof t1 !== "number")
        return t1.$div();
      if (typeof t2 !== "number")
        return B.iae(t2);
      p = s.$sub(0, d.$mul(0, t1 / t2));
      return A.Offset$(p.get$x(), p.get$y());
    },
    localToGlobal$2$ancestor(point, ancestor) {
      type$.Offset._as(point);
      return A.MatrixUtils_transformPoint(this.getTransformTo$1(type$.nullable_RenderObject._as(ancestor)), point);
    },
    localToGlobal$1(point) {
      return this.localToGlobal$2$ancestor(point, null);
    },
    get$paintBounds() {
      return C.Offset_0_0.$and(0, this.get$size());
    },
    handleEvent$2($event, entry) {
      this.super$RenderObject$handleEvent(type$.PointerEvent._as($event), type$.BoxHitTestEntry._as(entry));
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$RenderObject$debugFillProperties(properties);
      properties.add$1(0, A.DiagnosticsProperty$("size", this._size, true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, true, true, true, C.DiagnosticsTreeStyle_8, _null, type$.Size));
    }
  };
  A.RenderErrorBox.prototype = {
    RenderErrorBox$1(message) {
      var builder, t1, exception;
      try {
        t1 = this.message;
        if (!B.boolConversionCheck(J.$eq$(t1, ""))) {
          builder = A.ParagraphBuilder_ParagraphBuilder($.$get$RenderErrorBox_paragraphStyle());
          builder.pushStyle$1($.$get$RenderErrorBox_textStyle());
          builder.addText$1(t1);
          this.set$_paragraph(builder.build$0());
        } else
          this.set$_paragraph(null);
      } catch (exception) {
      }
    },
    get$_paragraph() {
      return this.__RenderErrorBox__paragraph_F;
    },
    set$_paragraph(value) {
      type$.nullable_Paragraph._as(value);
      this.__RenderErrorBox__paragraph_F !== $ && B.throwLateFieldAI("_paragraph");
      this.__RenderErrorBox__paragraph_F = value;
    },
    get$sizedByParent() {
      return true;
    },
    hitTestSelf$1(position) {
      type$.Offset._as(position);
      return true;
    },
    computeDryLayout$1(constraints) {
      return type$.BoxConstraints._as(constraints).constrain$1(C.Size_100000_100000);
    },
    paint$2(context, offset) {
      var width, left, $top, t1, t2, t3, exception, _this = this;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      try {
        t1 = context.get$canvas();
        t2 = offset.$and(0, _this.get$size());
        t3 = A.Paint_Paint();
        t3.set$color($.$get$RenderErrorBox_backgroundColor());
        t1.drawRect$2(t2, t3);
        if (_this.get$_paragraph() != null) {
          width = _this.get$size().get$width();
          left = 0;
          $top = 0;
          t1 = width;
          if (typeof t1 !== "number")
            return t1.$gt();
          if (t1 > 328) {
            t1 = width;
            if (typeof t1 !== "number")
              return t1.$sub();
            width = t1 - 128;
            t1 = left;
            if (typeof t1 !== "number")
              return t1.$add();
            left = t1 + 64;
          }
          t1 = _this.get$_paragraph();
          if (t1 == null)
            t1 = type$.Paragraph._as(t1);
          t1.layout$1(A.ParagraphConstraints$(width));
          t1 = _this.get$size().get$height();
          t2 = _this.get$_paragraph();
          t2 = (t2 == null ? type$.Paragraph._as(t2) : t2).get$height();
          if (typeof t2 !== "number")
            return B.iae(t2);
          if (typeof t1 !== "number")
            return t1.$gt();
          if (t1 > 96 + t2 + 12) {
            t1 = $top;
            if (typeof t1 !== "number")
              return t1.$add();
            $top = t1 + 96;
          }
          t1 = context.get$canvas();
          t2 = _this.get$_paragraph();
          if (t2 == null)
            t2 = type$.Paragraph._as(t2);
          t1.drawParagraph$2(t2, offset.$add(0, A.Offset$(left, $top)));
        }
      } catch (exception) {
      }
    }
  };
  A.AnnotationResult.prototype = {
    get$entries() {
      return this._entries;
    }
  };
  A.Layer0.prototype = {
    Layer$0() {
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(B.S(C.Type_Layer_yG7), "package:flutter/rendering.dart", this);
    },
    get$subtreeHasCompositionCallbacks() {
      var t1 = this._compositionCallbackCount;
      if (typeof t1 !== "number")
        return t1.$gt();
      return t1 > 0;
    },
    _updateSubtreeCompositionObserverCount$1(delta) {
      var t1;
      B._asInt(delta);
      t1 = this._compositionCallbackCount;
      if (typeof t1 !== "number")
        return t1.$add();
      this.set$_compositionCallbackCount(t1 + delta);
      t1 = this.get$parent();
      if (t1 != null)
        t1._updateSubtreeCompositionObserverCount$1(delta);
    },
    _fireCompositionCallbacks$1$includeChildren(includeChildren) {
      var t1;
      B._asBool(includeChildren);
      t1 = this._callbacks;
      if (B.boolConversionCheck(J.get$isEmpty$asx(t1)))
        return;
      for (t1 = J.get$iterator$ax(B.List_List$of(t1.get$values(), true, type$.void_Function)); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().call$0();
    },
    supportsRasterization$0() {
      return true;
    },
    _unref$0() {
      var _this = this,
        t1 = _this._refCount;
      if (typeof t1 !== "number")
        return t1.$sub();
      _this.set$_refCount(t1 - 1);
      if (B.boolConversionCheck(J.$eq$(_this._refCount, 0)))
        _this.dispose$0();
    },
    get$debugHandleCount() {
      return B._Cell$named("count").readLocal$1$0(type$.int);
    },
    dispose$0() {
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectDisposed$1$object(this);
      var t1 = this._engineLayer;
      if (t1 != null)
        t1.dispose$0();
      this._engineLayer = null;
    },
    get$parent() {
      return this._layer$_parent;
    },
    markNeedsAddToScene$0() {
      if (B.boolConversionCheck(this._needsAddToScene))
        return;
      this._needsAddToScene = true;
    },
    get$alwaysNeedsAddToScene() {
      return false;
    },
    set$engineLayer(value) {
      var t1, _this = this;
      type$.nullable_EngineLayer._as(value);
      t1 = _this._engineLayer;
      if (t1 != null)
        t1.dispose$0();
      _this._engineLayer = value;
      if (!B.boolConversionCheck(_this.get$alwaysNeedsAddToScene()))
        if (_this.get$parent() != null && !B.boolConversionCheck(_this.get$parent().get$alwaysNeedsAddToScene()))
          _this.get$parent().markNeedsAddToScene$0();
    },
    updateSubtreeNeedsAddToScene$0() {
      this._needsAddToScene = B.boolConversionCheck(this._needsAddToScene) || B.boolConversionCheck(this.get$alwaysNeedsAddToScene());
    },
    get$owner() {
      return this._layer$_owner;
    },
    get$attached() {
      return this._layer$_owner != null;
    },
    attach$1(owner) {
      this._layer$_owner = type$.Object._as(owner);
    },
    detach$0() {
      this._layer$_owner = null;
    },
    redepthChildren$0() {
    },
    get$nextSibling() {
      return this._nextSibling;
    },
    get$previousSibling() {
      return this._previousSibling;
    },
    remove$0(_) {
      var t1 = this.get$parent();
      if (t1 != null)
        t1._layer$_removeChild$1(this);
    },
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      B.checkTypeBound($S, type$.Object, "S", "findAnnotations");
      $S._eval$1("AnnotationResult<0>")._as(result);
      type$.Offset._as(localPosition);
      B._asBool(onlyFirst);
      return false;
    },
    find$1$1(localPosition, $S) {
      var result;
      B.checkTypeBound($S, type$.Object, "S", "find");
      type$.Offset._as(localPosition);
      result = A.AnnotationResult$($S);
      this.findAnnotations$1$3$onlyFirst(result, localPosition, true, $S);
      return B.boolConversionCheck(J.get$isEmpty$asx(result.get$entries())) ? null : J.get$first$ax(result.get$entries()).get$annotation();
    },
    _addToSceneWithRetainedRendering$1(builder) {
      var t1, _this = this;
      type$.SceneBuilder._as(builder);
      if (!B.boolConversionCheck(_this._needsAddToScene) && _this._engineLayer != null) {
        t1 = _this._engineLayer;
        t1.toString;
        builder.addRetained$1(t1);
        return;
      }
      _this.addToScene$1(builder);
      _this._needsAddToScene = false;
    },
    toStringShort$0() {
      var t1 = B.S(this.super$DiagnosticableTreeMixin$toStringShort());
      return t1 + (this.get$owner() == null ? " DETACHED" : "");
    },
    debugFillProperties$1(properties) {
      var t1, t2, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$DiagnosticableTreeMixin$debugFillProperties(properties);
      t1 = _this.get$owner();
      t2 = _this.get$parent() != null ? C.DiagnosticLevel_0 : C.DiagnosticLevel_3;
      properties.add$1(0, A.DiagnosticsProperty$("owner", t1, true, _null, _null, _null, _null, t2, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.Object));
      properties.add$1(0, A.DiagnosticsProperty$("creator", _null, true, _null, _null, _null, _null, C.DiagnosticLevel_2, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.nullable_Object));
      t1 = _this._engineLayer;
      if (t1 != null)
        properties.add$1(0, A.DiagnosticsProperty$("engine layer", A.describeIdentity(t1), true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.String));
      properties.add$1(0, A.DiagnosticsProperty$("handles", _this.get$debugHandleCount(), true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.int));
    },
    set$_compositionCallbackCount(_compositionCallbackCount) {
      this._compositionCallbackCount = B._asInt(_compositionCallbackCount);
    },
    set$_refCount(_refCount) {
      this._refCount = B._asInt(_refCount);
    },
    set$_layer$_depth(_depth) {
      this._layer$_depth = B._asInt(_depth);
    },
    set$_nextSibling(_nextSibling) {
      this._nextSibling = type$.nullable_Layer._as(_nextSibling);
    },
    set$_previousSibling(_previousSibling) {
      this._previousSibling = type$.nullable_Layer._as(_previousSibling);
    },
    $isDiagnosticable: 1,
    $isDiagnosticableTree: 1,
    $isDiagnosticableTreeMixin: 1,
    $is_DiagnosticableTree_Object_Diagnosticable: 1
  };
  A.LayerHandle.prototype = {
    LayerHandle$1(_layer, $T) {
      var t2,
        t1 = this._layer;
      if (t1 != null) {
        t2 = t1._refCount;
        if (typeof t2 !== "number")
          return t2.$add();
        t1.set$_refCount(t2 + 1);
      }
    },
    get$layer() {
      return this._layer;
    },
    set$layer(layer) {
      var t1, t2, _this = this;
      _this.$ti._eval$1("1?")._as(layer);
      t1 = _this._layer;
      if (layer == null ? t1 == null : layer === t1)
        return;
      if (t1 != null)
        t1._unref$0();
      _this.set$_layer(layer);
      t1 = _this._layer;
      if (t1 != null) {
        t2 = t1._refCount;
        if (typeof t2 !== "number")
          return t2.$add();
        t1.set$_refCount(t2 + 1);
      }
    },
    toString$0(_) {
      var t1 = this._layer;
      return "LayerHandle(" + B.S(t1 != null ? J.toString$0$(t1) : "DISPOSED") + ")";
    },
    set$_layer(_layer) {
      this._layer = this.$ti._eval$1("1?")._as(_layer);
    }
  };
  A.PictureLayer.prototype = {
    get$picture() {
      return this._picture;
    },
    set$picture(picture) {
      var t1;
      type$.nullable_Picture._as(picture);
      this.markNeedsAddToScene$0();
      t1 = this._picture;
      if (t1 != null)
        t1.dispose$0();
      this._picture = picture;
    },
    get$isComplexHint() {
      return this._isComplexHint;
    },
    set$isComplexHint(value) {
      B._asBool(value);
      if (value !== this._isComplexHint) {
        this._isComplexHint = value;
        this.markNeedsAddToScene$0();
      }
    },
    get$willChangeHint() {
      return this._willChangeHint;
    },
    set$willChangeHint(value) {
      B._asBool(value);
      if (value !== this._willChangeHint) {
        this._willChangeHint = value;
        this.markNeedsAddToScene$0();
      }
    },
    dispose$0() {
      this.set$picture(null);
      this.super$Layer$dispose();
    },
    addToScene$1(builder) {
      var t1;
      type$.SceneBuilder._as(builder);
      t1 = this.get$picture();
      t1.toString;
      builder.addPicture$4$isComplexHint$willChangeHint(C.Offset_0_0, t1, this.get$isComplexHint(), this.get$willChangeHint());
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Layer$debugFillProperties(properties);
      properties.add$1(0, A.DiagnosticsProperty$("paint bounds", _this.canvasBounds, true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.Rect));
      t1 = type$.String;
      properties.add$1(0, A.DiagnosticsProperty$("picture", A.describeIdentity(_this._picture), true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, A.DiagnosticsProperty$("raster cache hints", "isComplex = " + B.S(_this.get$isComplexHint()) + ", willChange = " + B.S(_this.get$willChangeHint()), true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, t1));
    },
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      B.checkTypeBound($S, type$.Object, "S", "findAnnotations");
      $S._eval$1("AnnotationResult<0>")._as(result);
      type$.Offset._as(localPosition);
      B._asBool(onlyFirst);
      return false;
    }
  };
  A.ContainerLayer0.prototype = {
    _fireCompositionCallbacks$1$includeChildren(includeChildren) {
      var child;
      B._asBool(includeChildren);
      this.super$Layer$_fireCompositionCallbacks(includeChildren);
      if (!includeChildren)
        return;
      child = this.get$firstChild();
      for (; child != null;) {
        child._fireCompositionCallbacks$1$includeChildren(true);
        child = child.get$nextSibling();
      }
    },
    get$firstChild() {
      return this._firstChild;
    },
    get$lastChild() {
      return this._layer$_lastChild;
    },
    get$hasChildren() {
      return this._firstChild != null;
    },
    supportsRasterization$0() {
      for (var child = this.get$lastChild(); child != null; child = child.get$previousSibling())
        if (!B.boolConversionCheck(child.supportsRasterization$0()))
          return false;
      return true;
    },
    buildScene$1(builder) {
      var _this = this;
      type$.SceneBuilder._as(builder);
      _this.updateSubtreeNeedsAddToScene$0();
      _this.addToScene$1(builder);
      if (B.boolConversionCheck(_this.get$subtreeHasCompositionCallbacks()))
        _this._fireCompositionCallbacks$1$includeChildren(true);
      _this._needsAddToScene = false;
      return builder.build$0();
    },
    dispose$0() {
      this.removeAllChildren$0();
      J.clear$0$ax(this._callbacks);
      this.super$Layer$dispose();
    },
    updateSubtreeNeedsAddToScene$0() {
      var child, _this = this;
      _this.super$Layer$updateSubtreeNeedsAddToScene();
      child = _this.get$firstChild();
      for (; child != null;) {
        child.updateSubtreeNeedsAddToScene$0();
        _this._needsAddToScene = B.boolConversionCheck(_this._needsAddToScene) || B.boolConversionCheck(child._needsAddToScene);
        child = child.get$nextSibling();
      }
    },
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      var child;
      B.checkTypeBound($S, type$.Object, "S", "findAnnotations");
      $S._eval$1("AnnotationResult<0>")._as(result);
      type$.Offset._as(localPosition);
      B._asBool(onlyFirst);
      for (child = this.get$lastChild(); child != null; child = child.get$previousSibling()) {
        if (child.findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S))
          return true;
        if (onlyFirst && B.boolConversionCheck(J.get$isNotEmpty$asx(result.get$entries())))
          return false;
      }
      return false;
    },
    attach$1(owner) {
      var child;
      type$.Object._as(owner);
      this.super$Layer$attach(owner);
      child = this.get$firstChild();
      for (; child != null;) {
        child.attach$1(owner);
        child = child.get$nextSibling();
      }
    },
    detach$0() {
      this.super$Layer$detach();
      var child = this.get$firstChild();
      for (; child != null;) {
        child.detach$0();
        child = child.get$nextSibling();
      }
      this._fireCompositionCallbacks$1$includeChildren(false);
    },
    append$1(child) {
      var _this = this;
      type$.Layer_2._as(child);
      _this._layer$_adoptChild$1(child);
      child.set$_previousSibling(_this.get$lastChild());
      if (_this.get$lastChild() != null)
        _this.get$lastChild()._nextSibling = child;
      _this._layer$_lastChild = child;
      if (_this._firstChild == null)
        _this._firstChild = child;
      child._parentHandle.set$layer(child);
    },
    _layer$_adoptChild$1(child) {
      var t1, _this = this;
      type$.Layer_2._as(child);
      if (!B.boolConversionCheck(_this.get$alwaysNeedsAddToScene()))
        _this.markNeedsAddToScene$0();
      if (!B.boolConversionCheck(J.$eq$(child._compositionCallbackCount, 0)))
        _this._updateSubtreeCompositionObserverCount$1(child._compositionCallbackCount);
      child._layer$_parent = _this;
      if (B.boolConversionCheck(_this.get$attached())) {
        t1 = _this._layer$_owner;
        t1.toString;
        child.attach$1(t1);
      }
      _this.redepthChild$1(child);
    },
    redepthChildren$0() {
      var child = this.get$firstChild();
      for (; child != null;) {
        this.redepthChild$1(child);
        child = child.get$nextSibling();
      }
    },
    redepthChild$1(child) {
      var t1, t2;
      type$.Layer_2._as(child);
      t1 = child._layer$_depth;
      t2 = this._layer$_depth;
      if (typeof t1 !== "number")
        return t1.$le();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (t1 <= t2) {
        child.set$_layer$_depth(t2 + 1);
        child.redepthChildren$0();
      }
    },
    _layer$_removeChild$1(child) {
      var t1;
      type$.Layer_2._as(child);
      t1 = child._previousSibling;
      if (t1 == null)
        this.set$_firstChild(child._nextSibling);
      else
        t1.set$_nextSibling(child.get$nextSibling());
      if (child._nextSibling == null)
        this.set$_layer$_lastChild(child.get$previousSibling());
      else {
        t1 = child.get$nextSibling();
        t1.toString;
        t1.set$_previousSibling(child.get$previousSibling());
      }
      child._nextSibling = child._previousSibling = null;
      this._dropChild$1(child);
      child._parentHandle.set$layer(null);
    },
    _dropChild$1(child) {
      var _this = this;
      type$.Layer_2._as(child);
      if (!B.boolConversionCheck(_this.get$alwaysNeedsAddToScene()))
        _this.markNeedsAddToScene$0();
      if (!B.boolConversionCheck(J.$eq$(child._compositionCallbackCount, 0)))
        _this._updateSubtreeCompositionObserverCount$1(J.$negate$in(child._compositionCallbackCount));
      child._layer$_parent = null;
      if (B.boolConversionCheck(_this.get$attached()))
        child.detach$0();
    },
    removeAllChildren$0() {
      var next, _this = this,
        child = _this.get$firstChild();
      for (; child != null; child = next) {
        next = child.get$nextSibling();
        child._nextSibling = child._previousSibling = null;
        _this._dropChild$1(child);
        child._parentHandle.set$layer(null);
      }
      _this._layer$_lastChild = _this._firstChild = null;
    },
    addToScene$1(builder) {
      this.addChildrenToScene$1(type$.SceneBuilder._as(builder));
    },
    addChildrenToScene$1(builder) {
      var child;
      type$.SceneBuilder._as(builder);
      child = this.get$firstChild();
      for (; child != null;) {
        child._addToSceneWithRetainedRendering$1(builder);
        child = child.get$nextSibling();
      }
    },
    debugDescribeChildren$0() {
      var child, count, t1,
        children = B._setArrayType([], type$.JSArray_DiagnosticsNode);
      if (this.get$firstChild() == null)
        return children;
      child = this.get$firstChild();
      for (count = 1; true;) {
        D.JSArray_methods.add$1(children, child.toDiagnosticsNode$1$name("child " + count));
        t1 = this.get$lastChild();
        if (child == null ? t1 == null : child === t1)
          break;
        ++count;
        child = child.get$nextSibling();
      }
      return children;
    },
    set$_firstChild(_firstChild) {
      this._firstChild = type$.nullable_Layer._as(_firstChild);
    },
    set$_layer$_lastChild(_lastChild) {
      this._layer$_lastChild = type$.nullable_Layer._as(_lastChild);
    }
  };
  A.OffsetLayer.prototype = {
    get$offset() {
      return this._layer$_offset;
    },
    set$offset(value) {
      type$.Offset._as(value);
      if (!B.boolConversionCheck(value.$eq(0, this._layer$_offset)))
        this.markNeedsAddToScene$0();
      this._layer$_offset = value;
    },
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      B.checkTypeBound($S, type$.Object, "S", "findAnnotations");
      $S._eval$1("AnnotationResult<0>")._as(result);
      type$.Offset._as(localPosition);
      B._asBool(onlyFirst);
      return this.super$ContainerLayer$findAnnotations(result, localPosition.$sub(0, this.get$offset()), onlyFirst, $S);
    },
    addToScene$1(builder) {
      var _this = this;
      type$.SceneBuilder._as(builder);
      _this.set$engineLayer(builder.pushOffset$3$oldLayer(_this.get$offset().get$dx(), _this.get$offset().get$dy(), type$.nullable_OffsetEngineLayer._as(_this._engineLayer)));
      _this.addChildrenToScene$1(builder);
      builder.pop$0();
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Layer$debugFillProperties(properties);
      properties.add$1(0, A.DiagnosticsProperty$("offset", this.get$offset(), true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.Offset));
    },
    _createSceneForImage$2$pixelRatio(bounds, pixelRatio) {
      var builder, transform, t1, t2, t3, t4;
      type$.Rect._as(bounds);
      B._asDouble(pixelRatio);
      builder = A.SceneBuilder_SceneBuilder();
      transform = A.Matrix4_Matrix4$diagonal3Values(pixelRatio, pixelRatio, 1);
      t1 = bounds.left;
      t2 = this.get$offset().get$dx();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = bounds.top;
      t4 = this.get$offset().get$dy();
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      transform.translate$2(-(t1 + t2), -(t3 + t4));
      builder.pushTransform$1(transform.get$storage());
      return this.buildScene$1(builder);
    },
    toImageSync$2$pixelRatio(bounds, pixelRatio) {
      var scene, t1, t2;
      type$.Rect._as(bounds);
      B._asDouble(pixelRatio);
      scene = this._createSceneForImage$2$pixelRatio(bounds, pixelRatio);
      try {
        t1 = bounds.get$width();
        if (typeof t1 !== "number")
          return B.iae(t1);
        t1 = D.JSNumber_methods.ceil$0(pixelRatio * t1);
        t2 = bounds.get$height();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t2 = scene.toImageSync$2(t1, D.JSNumber_methods.ceil$0(pixelRatio * t2));
        return t2;
      } finally {
        scene.dispose$0();
      }
    }
  };
  A.ClipRectLayer.prototype = {
    get$clipRect() {
      return this._layer$_clipRect;
    },
    set$clipRect(value) {
      type$.nullable_Rect._as(value);
      if (!B.boolConversionCheck(J.$eq$(value, this._layer$_clipRect))) {
        this._layer$_clipRect = value;
        this.markNeedsAddToScene$0();
      }
    },
    get$clipBehavior() {
      return this._layer$_clipBehavior;
    },
    set$clipBehavior(value) {
      type$.Clip._as(value);
      if (value !== this._layer$_clipBehavior) {
        this._layer$_clipBehavior = value;
        this.markNeedsAddToScene$0();
      }
    },
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      var t1;
      B.checkTypeBound($S, type$.Object, "S", "findAnnotations");
      $S._eval$1("AnnotationResult<0>")._as(result);
      type$.Offset._as(localPosition);
      B._asBool(onlyFirst);
      t1 = this.get$clipRect();
      t1.toString;
      if (!B.boolConversionCheck(J.contains$1$asx(t1, localPosition)))
        return false;
      return this.super$ContainerLayer$findAnnotations(result, localPosition, onlyFirst, $S);
    },
    addToScene$1(builder) {
      var t1, _this = this;
      type$.SceneBuilder._as(builder);
      t1 = _this.get$clipRect();
      t1.toString;
      _this.set$engineLayer(builder.pushClipRect$3$clipBehavior$oldLayer(t1, _this.get$clipBehavior(), type$.nullable_ClipRectEngineLayer._as(_this._engineLayer)));
      _this.addChildrenToScene$1(builder);
      builder.pop$0();
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Layer$debugFillProperties(properties);
      properties.add$1(0, A.DiagnosticsProperty$("clipRect", this.get$clipRect(), true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.Rect));
      properties.add$1(0, A.DiagnosticsProperty$("clipBehavior", this.get$clipBehavior(), true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.Clip));
    }
  };
  A.ClipRRectLayer.prototype = {
    get$clipRRect() {
      return this._layer$_clipRRect;
    },
    set$clipRRect(value) {
      type$.nullable_RRect._as(value);
      if (!B.boolConversionCheck(J.$eq$(value, this._layer$_clipRRect))) {
        this._layer$_clipRRect = value;
        this.markNeedsAddToScene$0();
      }
    },
    get$clipBehavior() {
      return this._layer$_clipBehavior;
    },
    set$clipBehavior(value) {
      type$.Clip._as(value);
      if (value !== this._layer$_clipBehavior) {
        this._layer$_clipBehavior = value;
        this.markNeedsAddToScene$0();
      }
    },
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      var t1;
      B.checkTypeBound($S, type$.Object, "S", "findAnnotations");
      $S._eval$1("AnnotationResult<0>")._as(result);
      type$.Offset._as(localPosition);
      B._asBool(onlyFirst);
      t1 = this.get$clipRRect();
      t1.toString;
      if (!B.boolConversionCheck(J.contains$1$asx(t1, localPosition)))
        return false;
      return this.super$ContainerLayer$findAnnotations(result, localPosition, onlyFirst, $S);
    },
    addToScene$1(builder) {
      var t1, _this = this;
      type$.SceneBuilder._as(builder);
      t1 = _this.get$clipRRect();
      t1.toString;
      _this.set$engineLayer(builder.pushClipRRect$3$clipBehavior$oldLayer(t1, _this.get$clipBehavior(), type$.nullable_ClipRRectEngineLayer._as(_this._engineLayer)));
      _this.addChildrenToScene$1(builder);
      builder.pop$0();
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Layer$debugFillProperties(properties);
      properties.add$1(0, A.DiagnosticsProperty$("clipRRect", this.get$clipRRect(), true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.RRect));
      properties.add$1(0, A.DiagnosticsProperty$("clipBehavior", this.get$clipBehavior(), true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.Clip));
    }
  };
  A.ClipPathLayer.prototype = {
    get$clipPath() {
      return this._layer$_clipPath;
    },
    set$clipPath(value) {
      var t1;
      type$.nullable_Path._as(value);
      t1 = this._layer$_clipPath;
      if (value == null ? t1 != null : value !== t1) {
        this._layer$_clipPath = value;
        this.markNeedsAddToScene$0();
      }
    },
    get$clipBehavior() {
      return this._layer$_clipBehavior;
    },
    set$clipBehavior(value) {
      type$.Clip._as(value);
      if (value !== this._layer$_clipBehavior) {
        this._layer$_clipBehavior = value;
        this.markNeedsAddToScene$0();
      }
    },
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      var t1;
      B.checkTypeBound($S, type$.Object, "S", "findAnnotations");
      $S._eval$1("AnnotationResult<0>")._as(result);
      type$.Offset._as(localPosition);
      B._asBool(onlyFirst);
      t1 = this.get$clipPath();
      t1.toString;
      if (!B.boolConversionCheck(J.contains$1$asx(t1, localPosition)))
        return false;
      return this.super$ContainerLayer$findAnnotations(result, localPosition, onlyFirst, $S);
    },
    addToScene$1(builder) {
      var t1, _this = this;
      type$.SceneBuilder._as(builder);
      t1 = _this.get$clipPath();
      t1.toString;
      _this.set$engineLayer(builder.pushClipPath$3$clipBehavior$oldLayer(t1, _this.get$clipBehavior(), type$.nullable_ClipPathEngineLayer._as(_this._engineLayer)));
      _this.addChildrenToScene$1(builder);
      builder.pop$0();
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Layer$debugFillProperties(properties);
      properties.add$1(0, A.DiagnosticsProperty$("clipBehavior", this.get$clipBehavior(), true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.Clip));
    }
  };
  A.TransformLayer.prototype = {
    get$transform() {
      return this._layer$_transform;
    },
    set$transform(value) {
      var _this = this;
      type$.nullable_Matrix4_2._as(value);
      if (B.boolConversionCheck(J.$eq$(value, _this._layer$_transform)))
        return;
      _this._layer$_transform = value;
      _this._inverseDirty = true;
      _this.markNeedsAddToScene$0();
    },
    addToScene$1(builder) {
      var t1, t2, _this = this;
      type$.SceneBuilder._as(builder);
      _this.set$_lastEffectiveTransform(_this.get$transform());
      if (!B.boolConversionCheck(J.$eq$(_this.get$offset(), C.Offset_0_0))) {
        t1 = A.Matrix4_Matrix4$translationValues0(_this.get$offset().get$dx(), _this.get$offset().get$dy(), 0);
        t2 = _this._lastEffectiveTransform;
        t2.toString;
        t1.multiply$1(t2);
        _this.set$_lastEffectiveTransform(t1);
      }
      _this.set$engineLayer(builder.pushTransform$2$oldLayer(_this._lastEffectiveTransform.get$storage(), type$.nullable_TransformEngineLayer._as(_this._engineLayer)));
      _this.addChildrenToScene$1(builder);
      builder.pop$0();
    },
    _transformOffset$1(localPosition) {
      var t1, _this = this;
      type$.Offset._as(localPosition);
      if (B.boolConversionCheck(_this._inverseDirty)) {
        t1 = _this.get$transform();
        t1.toString;
        _this.set$_invertedTransform(A.Matrix4_tryInvert0(A.PointerEvent_removePerspectiveTransform(t1)));
        _this._inverseDirty = false;
      }
      t1 = _this._invertedTransform;
      if (t1 == null)
        return null;
      return A.MatrixUtils_transformPoint(t1, localPosition);
    },
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      var transformedOffset;
      B.checkTypeBound($S, type$.Object, "S", "findAnnotations");
      $S._eval$1("AnnotationResult<0>")._as(result);
      type$.Offset._as(localPosition);
      B._asBool(onlyFirst);
      transformedOffset = this._transformOffset$1(localPosition);
      if (transformedOffset == null)
        return false;
      return this.super$OffsetLayer$findAnnotations(result, transformedOffset, onlyFirst, $S);
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$OffsetLayer$debugFillProperties(properties);
      properties.add$1(0, A.TransformProperty$("transform", this.get$transform(), C.C__NoDefaultValue, true));
    },
    set$_lastEffectiveTransform(_lastEffectiveTransform) {
      this._lastEffectiveTransform = type$.nullable_Matrix4_2._as(_lastEffectiveTransform);
    },
    set$_invertedTransform(_invertedTransform) {
      this._invertedTransform = type$.nullable_Matrix4_2._as(_invertedTransform);
    }
  };
  A.OpacityLayer.prototype = {
    get$alpha() {
      return this._layer$_alpha;
    },
    set$alpha(value) {
      var t1, _this = this;
      B._asIntQ(value);
      t1 = _this._layer$_alpha;
      if (value == null ? t1 != null : value !== t1) {
        if (value === 255 || B.boolConversionCheck(J.$eq$(t1, 255)))
          _this.set$engineLayer(null);
        _this._layer$_alpha = value;
        _this.markNeedsAddToScene$0();
      }
    },
    addToScene$1(builder) {
      var t1, _this = this;
      type$.SceneBuilder._as(builder);
      if (_this.get$firstChild() == null) {
        _this.set$engineLayer(null);
        return;
      }
      t1 = _this.get$alpha();
      t1.toString;
      if (t1 < 255)
        _this.set$engineLayer(builder.pushOpacity$3$offset$oldLayer(t1, _this.get$offset(), type$.nullable_OpacityEngineLayer._as(_this._engineLayer)));
      else
        _this.set$engineLayer(builder.pushOffset$3$oldLayer(_this.get$offset().get$dx(), _this.get$offset().get$dy(), type$.nullable_OffsetEngineLayer._as(_this._engineLayer)));
      _this.addChildrenToScene$1(builder);
      builder.pop$0();
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$OffsetLayer$debugFillProperties(properties);
      properties.add$1(0, A.IntProperty$("alpha", this.get$alpha(), C.C__NoDefaultValue, null, C.DiagnosticLevel_3, null));
    }
  };
  A._Layer_Object_DiagnosticableTreeMixin.prototype = {$isDiagnosticable: 1, $isDiagnosticableTree: 1, $isDiagnosticableTreeMixin: 1, $is_DiagnosticableTree_Object_Diagnosticable: 1};
  A.ParentData.prototype = {
    detach$0() {
    },
    toString$0(_) {
      return "<none>";
    }
  };
  A.PaintingContext.prototype = {
    paintChild$2(child, offset) {
      var _this = this;
      type$.RenderObject._as(child);
      type$.Offset._as(offset);
      if (B.boolConversionCheck(child.get$isRepaintBoundary())) {
        _this.stopRecordingIfNeeded$0();
        _this._compositeChild$2(child, offset);
      } else if (B.boolConversionCheck(child.get$_wasRepaintBoundary())) {
        child._layerHandle.set$layer(null);
        child._paintWithContext$2(_this, offset);
      } else
        child._paintWithContext$2(_this, offset);
    },
    _compositeChild$2(child, offset) {
      var t1;
      type$.RenderObject._as(child);
      type$.Offset._as(offset);
      if (B.boolConversionCheck(child._needsPaint) || !B.boolConversionCheck(child.get$_wasRepaintBoundary()))
        A.PaintingContext_repaintCompositedChild(child, true);
      else if (B.boolConversionCheck(child._needsCompositedLayerUpdate))
        A.PaintingContext_updateLayerProperties(child);
      t1 = child._layerHandle.get$layer();
      t1.toString;
      type$.OffsetLayer._as(t1);
      t1.set$offset(offset);
      this.appendLayer$1(t1);
    },
    appendLayer$1(layer) {
      type$.Layer_2._as(layer);
      layer.remove$0(0);
      this._containerLayer.append$1(layer);
    },
    get$_isRecording() {
      return this._canvas != null;
    },
    get$canvas() {
      if (this._canvas == null)
        this._startRecording$0();
      var t1 = this._canvas;
      t1.toString;
      return t1;
    },
    _startRecording$0() {
      var t1, t2, _this = this;
      _this._currentLayer = A.PictureLayer$(_this.estimatedBounds);
      _this.set$_recorder(A.RendererBinding_instance().createPictureRecorder$0());
      t1 = A.RendererBinding_instance();
      t2 = _this._recorder;
      t2.toString;
      _this.set$_canvas(t1.createCanvas$1(t2));
      t2 = _this._currentLayer;
      t2.toString;
      _this._containerLayer.append$1(t2);
    },
    stopRecordingIfNeeded$0() {
      var t1, _this = this;
      if (!B.boolConversionCheck(_this.get$_isRecording()))
        return;
      t1 = _this._currentLayer;
      t1.toString;
      t1.set$picture(_this._recorder.endRecording$0());
      _this._canvas = _this._recorder = _this._currentLayer = null;
    },
    setIsComplexHint$0() {
      if (this._currentLayer == null)
        this._startRecording$0();
      this._currentLayer.set$isComplexHint(true);
    },
    setWillChangeHint$0() {
      if (this._currentLayer == null)
        this._startRecording$0();
      this._currentLayer.set$willChangeHint(true);
    },
    addLayer$1(layer) {
      type$.Layer_2._as(layer);
      this.stopRecordingIfNeeded$0();
      this.appendLayer$1(layer);
    },
    pushLayer$4$childPaintBounds(childLayer, painter, offset, childPaintBounds) {
      var childContext, _this = this;
      type$.ContainerLayer_2._as(childLayer);
      type$.void_Function_PaintingContext_Offset._as(painter);
      type$.Offset._as(offset);
      type$.nullable_Rect._as(childPaintBounds);
      if (B.boolConversionCheck(childLayer.get$hasChildren()))
        childLayer.removeAllChildren$0();
      _this.stopRecordingIfNeeded$0();
      _this.appendLayer$1(childLayer);
      childContext = _this.createChildContext$2(childLayer, childPaintBounds == null ? _this.estimatedBounds : childPaintBounds);
      painter.call$2(childContext, offset);
      childContext.stopRecordingIfNeeded$0();
    },
    pushLayer$3(childLayer, painter, offset) {
      return this.pushLayer$4$childPaintBounds(childLayer, painter, offset, null);
    },
    createChildContext$2(childLayer, bounds) {
      return A.PaintingContext$(type$.ContainerLayer_2._as(childLayer), type$.Rect._as(bounds));
    },
    pushClipRect$6$clipBehavior$oldLayer(needsCompositing, offset, clipRect, painter, clipBehavior, oldLayer) {
      var offsetClipRect, layer, _this = this;
      B._asBool(needsCompositing);
      type$.Offset._as(offset);
      type$.Rect._as(clipRect);
      type$.void_Function_PaintingContext_Offset._as(painter);
      type$.Clip._as(clipBehavior);
      type$.nullable_ClipRectLayer._as(oldLayer);
      if (clipBehavior === C.Clip_0) {
        painter.call$2(_this, offset);
        return null;
      }
      offsetClipRect = clipRect.shift$1(offset);
      if (needsCompositing) {
        layer = oldLayer == null ? A.ClipRectLayer$() : oldLayer;
        layer.set$clipRect(offsetClipRect);
        layer.set$clipBehavior(clipBehavior);
        _this.pushLayer$4$childPaintBounds(layer, painter, offset, offsetClipRect);
        return layer;
      } else {
        _this.clipRectAndPaint$4(offsetClipRect, clipBehavior, offsetClipRect, new A.PaintingContext_pushClipRect_closure(_this, painter, offset));
        return null;
      }
    },
    pushClipRRect$7$clipBehavior$oldLayer(needsCompositing, offset, bounds, clipRRect, painter, clipBehavior, oldLayer) {
      var offsetBounds, offsetClipRRect, layer, _this = this;
      B._asBool(needsCompositing);
      type$.Offset._as(offset);
      type$.Rect._as(bounds);
      type$.RRect._as(clipRRect);
      type$.void_Function_PaintingContext_Offset._as(painter);
      type$.Clip._as(clipBehavior);
      type$.nullable_ClipRRectLayer._as(oldLayer);
      if (clipBehavior === C.Clip_0) {
        painter.call$2(_this, offset);
        return null;
      }
      offsetBounds = bounds.shift$1(offset);
      offsetClipRRect = clipRRect.shift$1(offset);
      if (needsCompositing) {
        layer = oldLayer == null ? A.ClipRRectLayer$() : oldLayer;
        layer.set$clipRRect(offsetClipRRect);
        layer.set$clipBehavior(clipBehavior);
        _this.pushLayer$4$childPaintBounds(layer, painter, offset, offsetBounds);
        return layer;
      } else {
        _this.clipRRectAndPaint$4(offsetClipRRect, clipBehavior, offsetBounds, new A.PaintingContext_pushClipRRect_closure(_this, painter, offset));
        return null;
      }
    },
    pushClipPath$7$clipBehavior$oldLayer(needsCompositing, offset, bounds, clipPath, painter, clipBehavior, oldLayer) {
      var offsetBounds, offsetClipPath, layer, _this = this;
      B._asBool(needsCompositing);
      type$.Offset._as(offset);
      type$.Rect._as(bounds);
      type$.Path._as(clipPath);
      type$.void_Function_PaintingContext_Offset._as(painter);
      type$.Clip._as(clipBehavior);
      type$.nullable_ClipPathLayer._as(oldLayer);
      if (clipBehavior === C.Clip_0) {
        painter.call$2(_this, offset);
        return null;
      }
      offsetBounds = bounds.shift$1(offset);
      offsetClipPath = clipPath.shift$1(offset);
      if (needsCompositing) {
        layer = oldLayer == null ? A.ClipPathLayer$() : oldLayer;
        layer.set$clipPath(offsetClipPath);
        layer.set$clipBehavior(clipBehavior);
        _this.pushLayer$4$childPaintBounds(layer, painter, offset, offsetBounds);
        return layer;
      } else {
        _this.clipPathAndPaint$4(offsetClipPath, clipBehavior, offsetBounds, new A.PaintingContext_pushClipPath_closure(_this, painter, offset));
        return null;
      }
    },
    pushTransform$5$oldLayer(needsCompositing, offset, transform, painter, oldLayer) {
      var effectiveTransform, layer, t1, _this = this;
      B._asBool(needsCompositing);
      type$.Offset._as(offset);
      type$.Matrix4_2._as(transform);
      type$.void_Function_PaintingContext_Offset._as(painter);
      type$.nullable_TransformLayer._as(oldLayer);
      effectiveTransform = A.Matrix4_Matrix4$translationValues0(offset.get$dx(), offset.get$dy(), 0);
      effectiveTransform.multiply$1(transform);
      effectiveTransform.translate$2(J.$negate$in(offset.get$dx()), J.$negate$in(offset.get$dy()));
      if (needsCompositing) {
        layer = oldLayer == null ? A.TransformLayer$(null) : oldLayer;
        layer.set$transform(effectiveTransform);
        _this.pushLayer$4$childPaintBounds(layer, painter, offset, A.MatrixUtils_inverseTransformRect(effectiveTransform, _this.estimatedBounds));
        return layer;
      } else {
        t1 = _this.get$canvas();
        t1.save$0();
        t1.transform$1(effectiveTransform.get$storage());
        painter.call$2(_this, offset);
        _this.get$canvas().restore$0();
        return null;
      }
    },
    pushOpacity$4$oldLayer(offset, alpha, painter, oldLayer) {
      var layer;
      type$.Offset._as(offset);
      B._asInt(alpha);
      type$.void_Function_PaintingContext_Offset._as(painter);
      type$.nullable_OpacityLayer._as(oldLayer);
      layer = oldLayer == null ? A.OpacityLayer$() : oldLayer;
      layer.set$alpha(alpha);
      layer.set$offset(offset);
      this.pushLayer$3(layer, painter, C.Offset_0_0);
      return layer;
    },
    toString$0(_) {
      var _this = this;
      return B.S(A.objectRuntimeType(_this, "PaintingContext")) + "#" + B.S(_this.get$hashCode(0)) + "(layer: " + B.S(_this._containerLayer) + ", canvas bounds: " + B.S(_this.estimatedBounds) + ")";
    },
    set$_recorder(_recorder) {
      this._recorder = type$.nullable_PictureRecorder._as(_recorder);
    },
    set$_canvas(_canvas) {
      this._canvas = type$.nullable_Canvas._as(_canvas);
    }
  };
  A.Constraints.prototype = {};
  A.RenderObject.prototype = {
    RenderObject$0() {
      var _this = this;
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(B.S(C.Type_RenderObject_ApM), "package:flutter/rendering.dart", _this);
      _this.set$_needsCompositing(B.boolConversionCheck(_this.get$isRepaintBoundary()) || B.boolConversionCheck(_this.get$alwaysNeedsCompositing()));
      _this.set$_wasRepaintBoundary(_this.get$isRepaintBoundary());
    },
    dispose$0() {
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectDisposed$1$object(this);
      this._layerHandle.set$layer(null);
    },
    setupParentData$1(child) {
      type$.RenderObject._as(child);
      if (!(child.parentData instanceof A.ParentData))
        child.parentData = A.ParentData$();
    },
    get$depth() {
      return this._object$_depth;
    },
    redepthChild$1(child) {
      var t1, t2;
      type$.RenderObject._as(child);
      t1 = child._object$_depth;
      t2 = this._object$_depth;
      if (typeof t1 !== "number")
        return t1.$le();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (t1 <= t2) {
        child.set$_object$_depth(t2 + 1);
        child.redepthChildren$0();
      }
    },
    redepthChildren$0() {
    },
    get$parent() {
      return this._object$_parent;
    },
    adoptChild$1(child) {
      var t1, _this = this;
      type$.RenderObject._as(child);
      _this.setupParentData$1(child);
      _this.markNeedsLayout$0();
      _this.markNeedsCompositingBitsUpdate$0();
      _this.markNeedsSemanticsUpdate$0();
      child._object$_parent = _this;
      if (B.boolConversionCheck(_this.get$attached())) {
        t1 = _this._object$_owner;
        t1.toString;
        child.attach$1(t1);
      }
      _this.redepthChild$1(child);
    },
    dropChild$1(child) {
      var _this = this;
      type$.RenderObject._as(child);
      A.RenderObject__cleanChildRelayoutBoundary(child);
      child.parentData.detach$0();
      child._object$_parent = child.parentData = null;
      if (B.boolConversionCheck(_this.get$attached()))
        child.detach$0();
      _this.markNeedsLayout$0();
      _this.markNeedsCompositingBitsUpdate$0();
      _this.markNeedsSemanticsUpdate$0();
    },
    visitChildren$1(visitor) {
      type$.void_Function_RenderObject._as(visitor);
    },
    _reportException$3(method, exception, stack) {
      B._asString(method);
      type$.Object._as(exception);
      type$.StackTrace._as(stack);
      A.FlutterError_reportError(A.FlutterErrorDetails$(A.ErrorDescription$("during " + method + "()"), exception, new A.RenderObject__reportException_closure(this), "rendering library", false, stack));
    },
    get$owner() {
      return this._object$_owner;
    },
    get$attached() {
      return this._object$_owner != null;
    },
    attach$1(owner) {
      var _this = this;
      _this._object$_owner = type$.PipelineOwner._as(owner);
      if (B.boolConversionCheck(_this._needsLayout) && _this._relayoutBoundary != null) {
        _this._needsLayout = false;
        _this.markNeedsLayout$0();
      }
      if (B.boolConversionCheck(_this._needsCompositingBitsUpdate)) {
        _this._needsCompositingBitsUpdate = false;
        _this.markNeedsCompositingBitsUpdate$0();
      }
      if (B.boolConversionCheck(_this._needsPaint) && _this._layerHandle.get$layer() != null) {
        _this._needsPaint = false;
        _this.markNeedsPaint$0();
      }
      if (B.boolConversionCheck(_this._needsSemanticsUpdate) && B.boolConversionCheck(_this.get$_semanticsConfiguration().get$isSemanticBoundary())) {
        _this._needsSemanticsUpdate = false;
        _this.markNeedsSemanticsUpdate$0();
      }
    },
    detach$0() {
      this._object$_owner = null;
    },
    get$constraints() {
      var t1 = this._constraints;
      if (t1 == null)
        throw B.wrapException(B.StateError$("A RenderObject does not have any constraints before it has been laid out."));
      return t1;
    },
    markNeedsLayout$0() {
      var t1, _this = this;
      if (B.boolConversionCheck(_this._needsLayout))
        return;
      t1 = _this._relayoutBoundary;
      if (t1 == null) {
        _this._needsLayout = true;
        if (_this.get$parent() != null)
          _this.markParentNeedsLayout$0();
        return;
      }
      if (!B.boolConversionCheck(J.$eq$(t1, _this)))
        _this.markParentNeedsLayout$0();
      else {
        _this._needsLayout = true;
        if (_this.get$owner() != null) {
          J.add$1$ax(_this.get$owner()._nodesNeedingLayout, _this);
          _this.get$owner().requestVisualUpdate$0();
        }
      }
    },
    markParentNeedsLayout$0() {
      this._needsLayout = true;
      var t1 = this.get$parent();
      t1.toString;
      if (!B.boolConversionCheck(this._doingThisLayoutWithCallback))
        t1.markNeedsLayout$0();
    },
    markNeedsLayoutForSizedByParentChange$0() {
      this.markNeedsLayout$0();
      this.markParentNeedsLayout$0();
    },
    _setRelayoutBoundary$1(value) {
      this._relayoutBoundary = type$.RenderObject._as(value);
      this.visitChildren$1(A.object_RenderObject__propagateRelayoutBoundaryToChild$closure());
    },
    scheduleInitialLayout$0() {
      var _this = this;
      _this._relayoutBoundary = _this;
      J.add$1$ax(_this.get$owner()._nodesNeedingLayout, _this);
    },
    _layoutWithoutResize$0() {
      var e, stack, exception, _this = this;
      try {
        _this.performLayout$0();
        _this.markNeedsSemanticsUpdate$0();
      } catch (exception) {
        e = B.unwrapException(exception);
        stack = B.getTraceFromException(exception);
        _this._reportException$3("performLayout", e, stack);
      }
      _this._needsLayout = false;
      _this.markNeedsPaint$0();
    },
    layout$2$parentUsesSize(constraints, parentUsesSize) {
      var e, stack, e0, stack0, t1, relayoutBoundary, exception, _this = this;
      type$.Constraints._as(constraints);
      B._asBool(parentUsesSize);
      t1 = B.boolConversionCheck($.debugProfileLayoutsEnabled);
      if (t1)
        A.FlutterTimeline_startSync(B.S(_this.get$runtimeType(0)), null);
      if (!parentUsesSize || B.boolConversionCheck(_this.get$sizedByParent()) || B.boolConversionCheck(constraints.get$isTight()) || !(_this.get$parent() instanceof A.RenderObject))
        relayoutBoundary = _this;
      else {
        t1 = _this.get$parent()._relayoutBoundary;
        t1.toString;
        relayoutBoundary = t1;
      }
      if (!B.boolConversionCheck(_this._needsLayout) && B.boolConversionCheck(constraints.$eq(0, _this._constraints))) {
        if (relayoutBoundary !== _this._relayoutBoundary)
          _this._setRelayoutBoundary$1(relayoutBoundary);
        t1 = B.boolConversionCheck($.debugProfileLayoutsEnabled);
        if (t1)
          A.FlutterTimeline_finishSync();
        return;
      }
      _this._constraints = constraints;
      t1 = _this._relayoutBoundary;
      if (t1 != null && relayoutBoundary !== t1)
        _this.visitChildren$1(A.object_RenderObject__cleanChildRelayoutBoundary$closure());
      _this._relayoutBoundary = relayoutBoundary;
      if (B.boolConversionCheck(_this.get$sizedByParent()))
        try {
          _this.performResize$0();
        } catch (exception) {
          e = B.unwrapException(exception);
          stack = B.getTraceFromException(exception);
          _this._reportException$3("performResize", e, stack);
        }
      try {
        _this.performLayout$0();
        _this.markNeedsSemanticsUpdate$0();
      } catch (exception) {
        e0 = B.unwrapException(exception);
        stack0 = B.getTraceFromException(exception);
        _this._reportException$3("performLayout", e0, stack0);
      }
      _this._needsLayout = false;
      _this.markNeedsPaint$0();
      t1 = B.boolConversionCheck($.debugProfileLayoutsEnabled);
      if (t1)
        A.FlutterTimeline_finishSync();
    },
    layout$1(constraints) {
      return this.layout$2$parentUsesSize(constraints, false);
    },
    get$sizedByParent() {
      return false;
    },
    get$isRepaintBoundary() {
      return false;
    },
    get$alwaysNeedsCompositing() {
      return false;
    },
    get$_wasRepaintBoundary() {
      return this.__RenderObject__wasRepaintBoundary_A;
    },
    set$_wasRepaintBoundary(value) {
      this.__RenderObject__wasRepaintBoundary_A = B._asBool(value);
    },
    updateCompositedLayer$1$oldLayer(oldLayer) {
      type$.nullable_OffsetLayer._as(oldLayer);
      return oldLayer == null ? A.OffsetLayer$(C.Offset_0_0) : oldLayer;
    },
    get$layer() {
      return this._layerHandle.get$layer();
    },
    set$layer(newLayer) {
      this._layerHandle.set$layer(type$.nullable_ContainerLayer._as(newLayer));
    },
    markNeedsCompositingBitsUpdate$0() {
      var t1, t2, _this = this;
      if (B.boolConversionCheck(_this._needsCompositingBitsUpdate))
        return;
      t1 = _this._needsCompositingBitsUpdate = true;
      if (_this.get$parent() instanceof A.RenderObject) {
        t2 = _this.get$parent();
        t2.toString;
        if (B.boolConversionCheck(t2._needsCompositingBitsUpdate))
          return;
        if ((B.boolConversionCheck(_this.get$_wasRepaintBoundary()) ? !B.boolConversionCheck(_this.get$isRepaintBoundary()) : t1) && !B.boolConversionCheck(t2.get$isRepaintBoundary())) {
          t2.markNeedsCompositingBitsUpdate$0();
          return;
        }
      }
      if (_this.get$owner() != null)
        J.add$1$ax(_this.get$owner()._nodesNeedingCompositingBitsUpdate, _this);
    },
    get$_needsCompositing() {
      return this.__RenderObject__needsCompositing_A;
    },
    set$_needsCompositing(value) {
      this.__RenderObject__needsCompositing_A = B._asBool(value);
    },
    get$needsCompositing() {
      return this.get$_needsCompositing();
    },
    _updateCompositingBits$0() {
      var oldNeedsCompositing, t1, _this = this;
      if (!B.boolConversionCheck(_this._needsCompositingBitsUpdate))
        return;
      oldNeedsCompositing = _this.get$_needsCompositing();
      _this.set$_needsCompositing(false);
      _this.visitChildren$1(new A.RenderObject__updateCompositingBits_closure(_this));
      if (B.boolConversionCheck(_this.get$isRepaintBoundary()) || B.boolConversionCheck(_this.get$alwaysNeedsCompositing()))
        _this.set$_needsCompositing(true);
      if (!B.boolConversionCheck(_this.get$isRepaintBoundary()) && B.boolConversionCheck(_this.get$_wasRepaintBoundary())) {
        _this._needsCompositedLayerUpdate = _this._needsPaint = false;
        t1 = _this.get$owner();
        if (t1 != null)
          J.remove$1$ax(t1._nodesNeedingPaint, _this);
        _this._needsCompositingBitsUpdate = false;
        _this.markNeedsPaint$0();
      } else if (oldNeedsCompositing !== _this.get$_needsCompositing()) {
        _this._needsCompositingBitsUpdate = false;
        _this.markNeedsPaint$0();
      } else
        _this._needsCompositingBitsUpdate = false;
    },
    markNeedsPaint$0() {
      var t1, _this = this;
      if (B.boolConversionCheck(_this._needsPaint))
        return;
      _this._needsPaint = true;
      if (B.boolConversionCheck(_this.get$isRepaintBoundary()) && B.boolConversionCheck(_this.get$_wasRepaintBoundary())) {
        if (_this.get$owner() != null) {
          J.add$1$ax(_this.get$owner()._nodesNeedingPaint, _this);
          _this.get$owner().requestVisualUpdate$0();
        }
      } else if (_this.get$parent() != null)
        _this.get$parent().markNeedsPaint$0();
      else {
        t1 = _this.get$owner();
        if (t1 != null)
          t1.requestVisualUpdate$0();
      }
    },
    markNeedsCompositedLayerUpdate$0() {
      var _this = this;
      if (B.boolConversionCheck(_this._needsCompositedLayerUpdate) || B.boolConversionCheck(_this._needsPaint))
        return;
      _this._needsCompositedLayerUpdate = true;
      if (B.boolConversionCheck(_this.get$isRepaintBoundary()) && B.boolConversionCheck(_this.get$_wasRepaintBoundary())) {
        if (_this.get$owner() != null) {
          J.add$1$ax(_this.get$owner()._nodesNeedingPaint, _this);
          _this.get$owner().requestVisualUpdate$0();
        }
      } else
        _this.markNeedsPaint$0();
    },
    _skippedPaintingOnLayer$0() {
      var t1,
        node = this.get$parent();
      for (; node instanceof A.RenderObject;) {
        if (B.boolConversionCheck(node.get$isRepaintBoundary())) {
          t1 = node._layerHandle;
          if (t1.get$layer() == null)
            break;
          if (B.boolConversionCheck(t1.get$layer().get$attached()))
            break;
          node._needsPaint = true;
        }
        node = node.get$parent();
      }
    },
    scheduleInitialPaint$1(rootLayer) {
      this._layerHandle.set$layer(type$.ContainerLayer_2._as(rootLayer));
      J.add$1$ax(this.get$owner()._nodesNeedingPaint, this);
    },
    replaceRootLayer$1(rootLayer) {
      var t1;
      type$.OffsetLayer._as(rootLayer);
      t1 = this._layerHandle;
      t1.get$layer().detach$0();
      t1.set$layer(rootLayer);
      this.markNeedsPaint$0();
    },
    _paintWithContext$2(context, offset) {
      var e, stack, t1, exception, _this = this;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      if (B.boolConversionCheck(_this._needsLayout))
        return;
      t1 = B.boolConversionCheck($.debugProfilePaintsEnabled);
      if (t1)
        A.FlutterTimeline_startSync(B.S(_this.get$runtimeType(0)), null);
      _this._needsCompositedLayerUpdate = _this._needsPaint = false;
      _this.set$_wasRepaintBoundary(_this.get$isRepaintBoundary());
      try {
        _this.paint$2(context, offset);
      } catch (exception) {
        e = B.unwrapException(exception);
        stack = B.getTraceFromException(exception);
        _this._reportException$3("paint", e, stack);
      }
      t1 = B.boolConversionCheck($.debugProfilePaintsEnabled);
      if (t1)
        A.FlutterTimeline_finishSync();
    },
    paint$2(context, offset) {
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
    },
    applyPaintTransform$2(child, transform) {
      type$.RenderObject._as(child);
      type$.Matrix4_2._as(transform);
    },
    paintsChild$1(child) {
      type$.RenderObject._as(child);
      return true;
    },
    getTransformTo$1(target) {
      var t1, t2, to, from, toPath, fromPath, fromDepth, toDepth, fromParent, t3, toParent, fromTransform, lastIndex, index, toTransform, _this = this, _null = null,
        _s33_ = " are not in the same render tree.";
      type$.nullable_RenderObject._as(target);
      t1 = target == null;
      if (t1) {
        t2 = _this.get$owner().get$rootNode();
        t2.toString;
        to = t2;
      } else
        to = target;
      for (t2 = type$.JSArray_RenderObject, from = _this, toPath = _null, fromPath = toPath; from !== to;) {
        fromDepth = from.get$depth();
        toDepth = to.get$depth();
        if (fromDepth >= toDepth) {
          fromParent = from.get$parent();
          if (fromParent == null)
            fromParent = B.throwExpression(A.FlutterError_FlutterError(B.S(target) + " and " + B.S(_this) + _s33_));
          if (fromPath == null) {
            fromPath = B._setArrayType([_this], t2);
            t3 = fromPath;
          } else
            t3 = fromPath;
          D.JSArray_methods.add$1(t3, fromParent);
          from = fromParent;
        }
        if (fromDepth <= toDepth) {
          toParent = to.get$parent();
          if (toParent == null)
            toParent = B.throwExpression(A.FlutterError_FlutterError(B.S(target) + " and " + B.S(_this) + _s33_));
          if (toPath == null) {
            target.toString;
            toPath = B._setArrayType([target], t2);
            t3 = toPath;
          } else
            t3 = toPath;
          D.JSArray_methods.add$1(t3, toParent);
          to = toParent;
        }
      }
      if (fromPath != null) {
        fromTransform = A.Matrix4_Matrix4$identity();
        t2 = fromPath.length;
        lastIndex = t1 ? t2 - 2 : t2 - 1;
        for (index = lastIndex; index > 0;) {
          t1 = fromPath.length;
          if (!(index < t1))
            return B.ioore(fromPath, index);
          t2 = fromPath[index];
          --index;
          if (!(index < t1))
            return B.ioore(fromPath, index);
          t2.applyPaintTransform$2(fromPath[index], fromTransform);
        }
      } else
        fromTransform = _null;
      if (toPath == null)
        return fromTransform == null ? A.Matrix4_Matrix4$identity() : fromTransform;
      toTransform = A.Matrix4_Matrix4$identity();
      for (index = toPath.length - 1; index > 0;) {
        t1 = toPath.length;
        if (!(index < t1))
          return B.ioore(toPath, index);
        t2 = toPath[index];
        --index;
        if (!(index < t1))
          return B.ioore(toPath, index);
        t2.applyPaintTransform$2(toPath[index], toTransform);
      }
      if (B.boolConversionCheck(J.$eq$(toTransform.invert$0(), 0)))
        return A.Matrix4$zero();
      if (fromTransform == null)
        t1 = _null;
      else {
        fromTransform.multiply$1(toTransform);
        t1 = fromTransform;
      }
      return t1 == null ? toTransform : t1;
    },
    describeApproximatePaintClip$1(child) {
      type$.RenderObject._as(child);
      return null;
    },
    describeSemanticsClip$1(child) {
      type$.nullable_RenderObject._as(child);
      return null;
    },
    scheduleInitialSemantics$0() {
      J.add$1$ax(this.get$owner()._nodesNeedingSemantics, this);
      this.get$owner().requestVisualUpdate$0();
    },
    describeSemanticsConfiguration$1(config) {
      type$.SemanticsConfiguration._as(config);
    },
    sendSemanticsEvent$1(semanticsEvent) {
      var t1, _this = this;
      type$.SemanticsEvent._as(semanticsEvent);
      if (_this.get$owner().get$semanticsOwner() == null)
        return;
      t1 = _this._semantics;
      if (t1 != null && !B.boolConversionCheck(t1.get$isMergedIntoParent()))
        _this._semantics.sendEvent$1(semanticsEvent);
      else if (_this.get$parent() != null)
        _this.get$parent().sendSemanticsEvent$1(semanticsEvent);
    },
    get$_semanticsConfiguration() {
      var t1, _this = this;
      if (_this._cachedSemanticsConfiguration == null) {
        t1 = A.SemanticsConfiguration$();
        _this._cachedSemanticsConfiguration = t1;
        _this.describeSemanticsConfiguration$1(t1);
      }
      t1 = _this._cachedSemanticsConfiguration;
      t1.toString;
      return t1;
    },
    get$debugSemantics() {
      return this._semantics;
    },
    clearSemantics$0() {
      this._needsSemanticsUpdate = true;
      this._semantics = null;
      this.visitChildren$1(new A.RenderObject_clearSemantics_closure());
    },
    markNeedsSemanticsUpdate$0() {
      var t1, wasSemanticsBoundary, mayProduceSiblingNodes, isEffectiveSemanticsBoundary, node, _this = this;
      if (!B.boolConversionCheck(_this.get$attached()) || _this.get$owner()._semanticsOwner == null) {
        _this._cachedSemanticsConfiguration = null;
        return;
      }
      if (_this._semantics != null) {
        t1 = _this._cachedSemanticsConfiguration;
        t1 = t1 == null ? null : t1.get$isSemanticBoundary();
        wasSemanticsBoundary = B.boolConversionCheck(t1 == null ? false : t1);
      } else
        wasSemanticsBoundary = false;
      t1 = _this._cachedSemanticsConfiguration;
      mayProduceSiblingNodes = (t1 == null ? null : t1.get$childConfigurationsDelegate()) != null || _this.get$_semanticsConfiguration().get$childConfigurationsDelegate() != null;
      _this._cachedSemanticsConfiguration = null;
      isEffectiveSemanticsBoundary = B.boolConversionCheck(_this.get$_semanticsConfiguration().get$isSemanticBoundary()) && wasSemanticsBoundary;
      node = _this;
      while (true) {
        if (node.get$parent() != null)
          t1 = mayProduceSiblingNodes || !isEffectiveSemanticsBoundary;
        else
          t1 = false;
        if (!t1)
          break;
        if (node !== _this && B.boolConversionCheck(node._needsSemanticsUpdate))
          break;
        node._needsSemanticsUpdate = true;
        if (isEffectiveSemanticsBoundary)
          mayProduceSiblingNodes = false;
        t1 = node.get$parent();
        t1.toString;
        isEffectiveSemanticsBoundary = t1.get$_semanticsConfiguration().get$isSemanticBoundary();
        if (isEffectiveSemanticsBoundary && t1._semantics == null)
          return;
        node = t1;
      }
      if (node !== _this && _this._semantics != null && B.boolConversionCheck(_this._needsSemanticsUpdate))
        J.remove$1$ax(_this.get$owner()._nodesNeedingSemantics, _this);
      if (!B.boolConversionCheck(node._needsSemanticsUpdate)) {
        node._needsSemanticsUpdate = true;
        if (_this.get$owner() != null) {
          J.add$1$ax(_this.get$owner()._nodesNeedingSemantics, node);
          _this.get$owner().requestVisualUpdate$0();
        }
      }
    },
    _updateSemantics$0() {
      var t1, t2, fragment, result, siblingNodes, t3, t4, _this = this, _null = null;
      if (B.boolConversionCheck(_this._needsLayout))
        return;
      A.FlutterTimeline_startSync("Semantics.GetFragment", _null);
      t1 = _this._semantics;
      if (t1 == null)
        t1 = _null;
      else {
        t1 = t1.get$parent();
        t1 = t1 == null ? _null : t1.get$isPartOfNodeMerging();
      }
      if (t1 == null)
        t1 = false;
      t2 = _this._semantics;
      t2 = t2 == null ? _null : t2.get$areUserActionsBlocked();
      fragment = _this._getSemanticsForParent$2$blockUserActions$mergeIntoParent(t2 == null ? false : t2, t1);
      A.FlutterTimeline_finishSync();
      type$._InterestingSemanticsFragment._as(fragment);
      t1 = type$.JSArray_SemanticsNode;
      result = B._setArrayType([], t1);
      siblingNodes = B._setArrayType([], t1);
      A.FlutterTimeline_startSync("Semantics.compileChildren", _null);
      t1 = _this._semantics;
      t2 = t1 == null;
      t3 = t2 ? _null : t1.parentSemanticsClipRect;
      t4 = t2 ? _null : t1.parentPaintClipRect;
      t1 = t2 ? _null : t1.elevationAdjustment;
      fragment.compileChildren$5$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result$siblingNodes(t1 == null ? 0 : t1, t4, t3, result, siblingNodes);
      A.FlutterTimeline_finishSync();
    },
    _getSemanticsForParent$2$blockUserActions$mergeIntoParent(blockUserActions, mergeIntoParent) {
      var config, blockChildInteractions, childrenMergeIntoParent, childConfigurations, explicitChildNode, childConfigurationsDelegate, t1, configToFragment, mergeUpFragments, siblingMergeFragmentGroups, t2, hasTags, result, _this = this, _box_0 = {};
      B._asBool(mergeIntoParent);
      B._asBool(blockUserActions);
      config = _this.get$_semanticsConfiguration();
      _box_0.dropSemanticsOfPreviousSiblings = config.isBlockingSemanticsOfPreviouslyPaintedNodes;
      _box_0.producesForkingFragment = !B.boolConversionCheck(config.get$hasBeenAnnotated()) && !B.boolConversionCheck(config.get$isSemanticBoundary());
      blockChildInteractions = blockUserActions || B.boolConversionCheck(config.isBlockingUserActions);
      childrenMergeIntoParent = mergeIntoParent || B.boolConversionCheck(config.get$isMergingSemanticsOfDescendants());
      childConfigurations = B._setArrayType([], type$.JSArray_SemanticsConfiguration);
      explicitChildNode = B.boolConversionCheck(config.explicitChildNodes) || _this.get$parent() == null;
      childConfigurationsDelegate = config.get$childConfigurationsDelegate();
      t1 = type$._InterestingSemanticsFragment;
      configToFragment = B.LinkedHashMap_LinkedHashMap$_empty(type$.SemanticsConfiguration, t1);
      mergeUpFragments = B._setArrayType([], type$.JSArray__InterestingSemanticsFragment);
      siblingMergeFragmentGroups = B._setArrayType([], type$.JSArray_List__InterestingSemanticsFragment);
      t2 = config.get$tagsForChildren();
      hasTags = t2 == null ? null : J.get$isNotEmpty$asx(t2);
      _this.visitChildrenForSemantics$1(new A.RenderObject__getSemanticsForParent_closure(_box_0, _this, childrenMergeIntoParent, blockChildInteractions, childConfigurations, mergeUpFragments, siblingMergeFragmentGroups, config, hasTags == null ? false : hasTags, childConfigurationsDelegate, configToFragment));
      if (explicitChildNode)
        for (t1 = D.JSArray_methods.get$iterator(mergeUpFragments); B.boolConversionCheck(t1.moveNext$0());)
          t1.get$current().markAsExplicit$0();
      else if (childConfigurationsDelegate != null) {
        result = childConfigurationsDelegate.call$1(childConfigurations);
        D.JSArray_methods.addAll$1(mergeUpFragments, J.map$1$1$ax(result.mergeUp, new A.RenderObject__getSemanticsForParent_closure0(_box_0, _this, configToFragment), t1));
        for (t2 = J.get$iterator$ax(result.siblingMergeGroups); B.boolConversionCheck(t2.moveNext$0());)
          D.JSArray_methods.add$1(siblingMergeFragmentGroups, J.toList$0$ax(J.map$1$1$ax(t2.get$current(), new A.RenderObject__getSemanticsForParent_closure1(_this, configToFragment), t1)));
      }
      _this._needsSemanticsUpdate = false;
      if (_this.get$parent() == null) {
        _this._marksExplicitInMergeGroup$2$isMergeUp(mergeUpFragments, true);
        D.JSArray_methods.forEach$1(siblingMergeFragmentGroups, _this.get$_marksExplicitInMergeGroup());
        result = A._RootSemanticsFragment$(_box_0.dropSemanticsOfPreviousSiblings, _this);
      } else if (B.boolConversionCheck(_box_0.producesForkingFragment))
        result = A._ContainerSemanticsFragment$(_box_0.dropSemanticsOfPreviousSiblings, siblingMergeFragmentGroups);
      else {
        _this._marksExplicitInMergeGroup$2$isMergeUp(mergeUpFragments, true);
        D.JSArray_methods.forEach$1(siblingMergeFragmentGroups, _this.get$_marksExplicitInMergeGroup());
        result = A._SwitchableSemanticsFragment$(blockUserActions, config, _box_0.dropSemanticsOfPreviousSiblings, mergeIntoParent, _this, siblingMergeFragmentGroups);
        if (B.boolConversionCheck(config.get$isSemanticBoundary()))
          result.markAsExplicit$0();
      }
      result.addAll$1(0, mergeUpFragments);
      return result;
    },
    _marksExplicitInMergeGroup$2$isMergeUp(mergeGroup, isMergeUp) {
      var toBeExplicit, t1, i, t2, fragment, j, siblingFragment;
      type$.List__InterestingSemanticsFragment._as(mergeGroup);
      B._asBool(isMergeUp);
      toBeExplicit = B.LinkedHashSet_LinkedHashSet$_empty(type$._InterestingSemanticsFragment);
      t1 = J.getInterceptor$asx(mergeGroup);
      i = 0;
      while (true) {
        t2 = t1.get$length(mergeGroup);
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (!(i < t2))
          break;
        c$0: {
          fragment = t1.$index(mergeGroup, i);
          if (!B.boolConversionCheck(fragment.get$hasConfigForParent()))
            break c$0;
          if (isMergeUp && !B.boolConversionCheck(this.get$_semanticsConfiguration().isCompatibleWith$1(fragment.get$config())))
            toBeExplicit.add$1(0, fragment);
          for (j = 0; j < i; ++j) {
            siblingFragment = t1.$index(mergeGroup, j);
            t2 = fragment.get$config();
            t2.toString;
            if (!B.boolConversionCheck(t2.isCompatibleWith$1(siblingFragment.get$config()))) {
              toBeExplicit.add$1(0, fragment);
              toBeExplicit.add$1(0, siblingFragment);
            }
          }
        }
        ++i;
      }
      for (t1 = toBeExplicit.get$iterator(0); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().markAsExplicit$0();
    },
    _marksExplicitInMergeGroup$1(mergeGroup) {
      return this._marksExplicitInMergeGroup$2$isMergeUp(mergeGroup, false);
    },
    visitChildrenForSemantics$1(visitor) {
      this.visitChildren$1(type$.void_Function_RenderObject._as(visitor));
    },
    assembleSemanticsNode$3(node, config, children) {
      type$.SemanticsNode._as(node);
      type$.SemanticsConfiguration._as(config);
      node.updateWith$2$childrenInInversePaintOrder$config(type$.List_SemanticsNode._as(type$.Iterable_SemanticsNode._as(children)), config);
    },
    handleEvent$2($event, entry) {
      type$.PointerEvent._as($event);
      type$.HitTestEntry_HitTestTarget._as(entry);
    },
    toStringShort$0() {
      var target, count, _this = this,
        header = A.describeIdentity(_this),
        t1 = _this._relayoutBoundary;
      if (t1 != null && !B.boolConversionCheck(J.$eq$(t1, _this))) {
        target = _this.get$parent();
        count = 1;
        while (true) {
          if (!(target != null && target !== _this._relayoutBoundary))
            break;
          target = target.get$parent();
          ++count;
        }
        header += " relayoutBoundary=up" + count;
      }
      if (B.boolConversionCheck(_this._needsLayout))
        header += " NEEDS-LAYOUT";
      if (B.boolConversionCheck(_this._needsPaint))
        header += " NEEDS-PAINT";
      if (B.boolConversionCheck(_this._needsCompositingBitsUpdate))
        header += " NEEDS-COMPOSITING-BITS-UPDATE";
      return !B.boolConversionCheck(_this.get$attached()) ? header + " DETACHED" : header;
    },
    toString$0(_) {
      return this.toStringShort$0();
    },
    toStringDeep$0() {
      return A.RenderObject__withDebugActiveLayoutCleared(new A.RenderObject_toStringDeep_closure(this, "", "", C.DiagnosticLevel_2), type$.String);
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$DiagnosticableTreeMixin$debugFillProperties(properties);
      properties.add$1(0, A.FlagProperty$("needsCompositing", _null, _null, "needs compositing", C.DiagnosticLevel_3, false, _this.get$_needsCompositing()));
      properties.add$1(0, A.DiagnosticsProperty$("creator", _null, true, _null, _null, _null, _null, C.DiagnosticLevel_2, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.nullable_Object));
      t1 = _this.parentData;
      properties.add$1(0, A.DiagnosticsProperty$("parentData", t1, true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, true, true, true, C.DiagnosticsTreeStyle_8, _null, type$.ParentData));
      properties.add$1(0, A.DiagnosticsProperty$("constraints", _this._constraints, true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, true, true, true, C.DiagnosticsTreeStyle_8, _null, type$.Constraints));
      properties.add$1(0, A.DiagnosticsProperty$("layer", _this._layerHandle.get$layer(), true, _null, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.ContainerLayer_2));
      properties.add$1(0, A.DiagnosticsProperty$("semantics node", _this._semantics, true, _null, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.SemanticsNode));
      properties.add$1(0, A.FlagProperty$("isBlockingSemanticsOfPreviouslyPaintedNodes", _null, _null, "blocks semantics of earlier render objects below the common boundary", C.DiagnosticLevel_3, false, _this.get$_semanticsConfiguration().isBlockingSemanticsOfPreviouslyPaintedNodes));
      properties.add$1(0, A.FlagProperty$("isSemanticBoundary", _null, _null, "semantic boundary", C.DiagnosticLevel_3, false, _this.get$_semanticsConfiguration().get$isSemanticBoundary()));
    },
    debugDescribeChildren$0() {
      return B._setArrayType([], type$.JSArray_DiagnosticsNode);
    },
    showOnScreen$4$curve$descendant$duration$rect(curve, descendant, duration, rect) {
      var t1;
      type$.nullable_RenderObject._as(descendant);
      type$.nullable_Rect._as(rect);
      type$.Duration._as(duration);
      type$.Curve._as(curve);
      if (this.get$parent() instanceof A.RenderObject) {
        t1 = this.get$parent();
        t1.toString;
        t1.showOnScreen$4$curve$descendant$duration$rect(curve, descendant == null ? this : descendant, duration, rect);
      }
    },
    showOnScreen$0() {
      return this.showOnScreen$4$curve$descendant$duration$rect(C.Cubic_WKj, null, D.Duration_0, null);
    },
    showOnScreen$2$descendant$rect(descendant, rect) {
      return this.showOnScreen$4$curve$descendant$duration$rect(C.Cubic_WKj, descendant, D.Duration_0, rect);
    },
    describeForError$2$style($name, style) {
      return this.toDiagnosticsNode$2$name$style(B._asString($name), type$.DiagnosticsTreeStyle._as(style));
    },
    describeForError$1($name) {
      return this.describeForError$2$style($name, C.DiagnosticsTreeStyle_10);
    },
    set$_object$_depth(_depth) {
      this._object$_depth = B._asInt(_depth);
    },
    $isDiagnosticable: 1,
    $isDiagnosticableTree: 1,
    $isDiagnosticableTreeMixin: 1,
    $isHitTestTarget: 1,
    $is_DiagnosticableTree_Object_Diagnosticable: 1
  };
  A.RenderObjectWithChildMixin.prototype = {
    get$child() {
      return this.RenderObjectWithChildMixin__child;
    },
    set$child(value) {
      var t1, _this = this;
      B._instanceType(_this)._eval$1("RenderObjectWithChildMixin.0?")._as(value);
      t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        _this.dropChild$1(t1);
      _this.set$_object$_child(value);
      t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        _this.adoptChild$1(t1);
    },
    redepthChildren$0() {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        this.redepthChild$1(t1);
    },
    visitChildren$1(visitor) {
      var t1;
      type$.void_Function_RenderObject._as(visitor);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        visitor.call$1(t1);
    },
    debugDescribeChildren$0() {
      var t1 = type$.JSArray_DiagnosticsNode;
      return this.get$child() != null ? B._setArrayType([this.get$child().toDiagnosticsNode$1$name("child")], t1) : B._setArrayType([], t1);
    },
    set$_object$_child(_child) {
      this.RenderObjectWithChildMixin__child = B._instanceType(this)._eval$1("RenderObjectWithChildMixin.0?")._as(_child);
    },
    $isDiagnosticable: 1,
    $isDiagnosticableTree: 1,
    $isDiagnosticableTreeMixin: 1,
    $isHitTestTarget: 1,
    $isRenderObject: 1,
    $is_DiagnosticableTree_Object_Diagnosticable: 1,
    $is_RenderObject_Object_DiagnosticableTreeMixin: 1
  };
  A._SemanticsFragment.prototype = {};
  A._ContainerSemanticsFragment.prototype = {
    addAll$1(_, fragments) {
      J.addAll$1$ax(this.mergeUpFragments, type$.Iterable__InterestingSemanticsFragment._as(fragments));
    },
    get$mergeUpFragments() {
      return this.mergeUpFragments;
    }
  };
  A._InterestingSemanticsFragment.prototype = {
    get$owner() {
      return J.get$first$ax(this._ancestorChain);
    },
    get$hasConfigForParent() {
      return this.get$config() != null;
    },
    get$mergeUpFragments() {
      return B._setArrayType([this], type$.JSArray__InterestingSemanticsFragment);
    },
    addTags$1(tags) {
      var t1;
      type$.Iterable_SemanticsTag._as(tags);
      if (this._object$_tagsForChildren == null)
        this.set$_object$_tagsForChildren(B.LinkedHashSet_LinkedHashSet$_empty(type$.SemanticsTag));
      t1 = this._object$_tagsForChildren;
      t1.toString;
      J.addAll$1$ax(t1, tags);
    },
    addAncestor$1(ancestor) {
      J.add$1$ax(this._ancestorChain, type$.RenderObject._as(ancestor));
    },
    set$_object$_tagsForChildren(_tagsForChildren) {
      this._object$_tagsForChildren = type$.nullable_Set_SemanticsTag._as(_tagsForChildren);
    }
  };
  A._RootSemanticsFragment.prototype = {
    compileChildren$5$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result$siblingNodes(elevationAdjustment, parentPaintClipRect, parentSemanticsClipRect, result, siblingNodes) {
      var t2, t3, children, _this = this,
        t1 = type$.nullable_Rect;
      t1._as(parentSemanticsClipRect);
      t1._as(parentPaintClipRect);
      B._asDouble(elevationAdjustment);
      t1 = type$.List_SemanticsNode;
      t1._as(result);
      t1._as(siblingNodes);
      t1 = _this.get$owner();
      if (t1._semantics == null) {
        t2 = _this.get$owner().get$showOnScreen();
        t3 = _this.get$owner().get$owner().get$semanticsOwner();
        t3.toString;
        t1._semantics = A.SemanticsNode$root(t3, t2);
      }
      t1 = _this.get$owner()._semantics;
      t1.toString;
      t1.set$rect(_this.get$owner().get$semanticBounds());
      children = B._setArrayType([], type$.JSArray_SemanticsNode);
      for (t2 = J.get$iterator$ax(_this._object$_children); B.boolConversionCheck(t2.moveNext$0());)
        t2.get$current().compileChildren$5$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result$siblingNodes(0, parentPaintClipRect, parentSemanticsClipRect, children, siblingNodes);
      t1.updateWith$2$childrenInInversePaintOrder$config(children, null);
      J.add$1$ax(result, t1);
    },
    get$config() {
      return null;
    },
    markAsExplicit$0() {
    },
    addAll$1(_, fragments) {
      J.addAll$1$ax(this._object$_children, type$.Iterable__InterestingSemanticsFragment._as(fragments));
    }
  };
  A._IncompleteSemanticsFragment.prototype = {
    compileChildren$5$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result$siblingNodes(elevationAdjustment, parentPaintClipRect, parentSemanticsClipRect, result, siblingNodes) {
      var t1 = type$.nullable_Rect;
      t1._as(parentSemanticsClipRect);
      t1._as(parentPaintClipRect);
      B._asDouble(elevationAdjustment);
      t1 = type$.List_SemanticsNode;
      t1._as(result);
      t1._as(siblingNodes);
    },
    markAsExplicit$0() {
    },
    get$config() {
      return this.config;
    }
  };
  A._SwitchableSemanticsFragment.prototype = {
    _SwitchableSemanticsFragment$6$blockUserActions$config$dropsSemanticsOfPreviousSiblings$mergeIntoParent$owner$siblingMergeGroups(blockUserActions, config, dropsSemanticsOfPreviousSiblings, mergeIntoParent, owner, siblingMergeGroups) {
      if (blockUserActions && !B.boolConversionCheck(this._config.isBlockingUserActions)) {
        this._ensureConfigIsWritable$0();
        this._config.isBlockingUserActions = true;
      }
    },
    _mergeSiblingGroup$4(parentSemanticsClipRect, parentPaintClipRect, result, usedSemanticsIds) {
      var t2, t3, t4, t5, tags, t6, t7, node, configuration, paintClipRect, semanticsClipRect, rect, t8, t9, fragmentRect, t10, t11, rect0, _null = null,
        t1 = type$.nullable_Rect;
      t1._as(parentSemanticsClipRect);
      t1._as(parentPaintClipRect);
      type$.List_SemanticsNode._as(result);
      type$.Set_int._as(usedSemanticsIds);
      for (t1 = J.get$iterator$ax(this._siblingMergeGroups), t2 = type$._SwitchableSemanticsFragment, t3 = type$.SemanticsTag, t4 = J.getInterceptor$ax(result); B.boolConversionCheck(t1.moveNext$0());) {
        t5 = t1.get$current();
        tags = B.LinkedHashSet_LinkedHashSet$_empty(t3);
        for (t6 = J.getInterceptor$ax(t5), t7 = t6.get$iterator(t5), node = _null, configuration = node, paintClipRect = configuration, semanticsClipRect = paintClipRect, rect = semanticsClipRect; B.boolConversionCheck(t7.moveNext$0());) {
          t8 = t7.get$current();
          if (t8.get$config() != null) {
            t2._as(t8);
            t8._mergesToSibling = true;
            if (node == null)
              node = t8.get$owner()._semantics;
            if (configuration == null)
              configuration = A.SemanticsConfiguration$();
            t9 = t8.get$config();
            t9.toString;
            configuration.absorb$1(t9);
            t9 = t8._computeSemanticsGeometry$2$parentPaintClipRect$parentSemanticsClipRect(parentPaintClipRect, parentSemanticsClipRect);
            t9.toString;
            fragmentRect = A.MatrixUtils_transformRect(t9.get$transform(), t9.get$rect());
            rect = rect == null ? _null : rect.expandToInclude$1(fragmentRect);
            if (rect == null)
              rect = fragmentRect;
            if (t9.get$semanticsClipRect() != null) {
              t10 = t9.get$transform();
              t11 = t9.get$semanticsClipRect();
              t11.toString;
              rect0 = A.MatrixUtils_transformRect(t10, t11);
              semanticsClipRect = semanticsClipRect == null ? _null : semanticsClipRect.intersect$1(rect0);
              if (semanticsClipRect == null)
                semanticsClipRect = rect0;
            }
            if (t9.get$paintClipRect() != null) {
              t10 = t9.get$transform();
              t9 = t9.get$paintClipRect();
              t9.toString;
              rect0 = A.MatrixUtils_transformRect(t10, t9);
              paintClipRect = paintClipRect == null ? _null : paintClipRect.intersect$1(rect0);
              if (paintClipRect == null)
                paintClipRect = rect0;
            }
            t8 = t8._object$_tagsForChildren;
            if (t8 != null)
              tags.addAll$1(0, t8);
          }
        }
        if (configuration != null && !B.boolConversionCheck(rect.get$isEmpty(0))) {
          if (node == null || B.boolConversionCheck(usedSemanticsIds.contains$1(0, node.get$id())))
            node = A.SemanticsNode$(_null, this.get$owner().get$showOnScreen());
          usedSemanticsIds.add$1(0, node.get$id());
          node.set$tags(tags);
          node.set$rect(rect);
          node.set$transform(_null);
          node.parentSemanticsClipRect = semanticsClipRect;
          node.parentPaintClipRect = paintClipRect;
          for (t5 = t6.get$iterator(t5); B.boolConversionCheck(t5.moveNext$0());) {
            t6 = t5.get$current();
            if (t6.get$config() != null)
              t6.get$owner()._semantics = node;
          }
          node.updateWith$1$config(configuration);
          t4.add$1(result, node);
        }
      }
    },
    compileChildren$5$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result$siblingNodes(elevationAdjustment, parentPaintClipRect, parentSemanticsClipRect, result, siblingNodes) {
      var usedSemanticsIds, compilingFragments, t2, t3, t4, t5, geometry, node, children, childSiblingNodes, t6, _this = this,
        t1 = type$.nullable_Rect;
      t1._as(parentSemanticsClipRect);
      t1._as(parentPaintClipRect);
      B._asDouble(elevationAdjustment);
      t1 = type$.List_SemanticsNode;
      t1._as(result);
      t1._as(siblingNodes);
      usedSemanticsIds = B.LinkedHashSet_LinkedHashSet$_empty(type$.int);
      compilingFragments = _this._object$_children;
      for (t1 = J.get$iterator$ax(_this._siblingMergeGroups); B.boolConversionCheck(t1.moveNext$0());)
        compilingFragments = J.followedBy$1$ax(compilingFragments, t1.get$current());
      if (!B.boolConversionCheck(_this._isExplicit)) {
        if (!B.boolConversionCheck(_this._mergesToSibling))
          _this.get$owner()._semantics = null;
        _this._mergeSiblingGroup$4(parentSemanticsClipRect, parentPaintClipRect, siblingNodes, usedSemanticsIds);
        for (t1 = J.get$iterator$ax(compilingFragments), t2 = _this._ancestorChain, t3 = J.getInterceptor$ax(t2); B.boolConversionCheck(t1.moveNext$0());) {
          t4 = t1.get$current();
          if (t4 instanceof A._SwitchableSemanticsFragment)
            if (B.boolConversionCheck(t4._isExplicit) && t4.get$owner()._semantics != null && B.boolConversionCheck(usedSemanticsIds.contains$1(0, t4.get$owner()._semantics.get$id())))
              t4.get$owner()._semantics = null;
          J.addAll$1$ax(t4._ancestorChain, t3.skip$1(t2, 1));
          t5 = _this._config.get$elevation();
          if (typeof t5 !== "number")
            return B.iae(t5);
          t4.compileChildren$5$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result$siblingNodes(elevationAdjustment + t5, parentPaintClipRect, parentSemanticsClipRect, result, siblingNodes);
        }
        return;
      }
      geometry = _this._computeSemanticsGeometry$2$parentPaintClipRect$parentSemanticsClipRect(parentPaintClipRect, parentSemanticsClipRect);
      t1 = !B.boolConversionCheck(_this._mergeIntoParent);
      if (t1) {
        t2 = geometry == null ? null : geometry.get$dropFromTree();
        t2 = B.boolConversionCheck(t2 == null ? false : t2);
      } else
        t2 = false;
      if (t2)
        return;
      t2 = _this.get$owner();
      node = t2._semantics;
      if (node == null)
        node = t2._semantics = A.SemanticsNode$(null, _this.get$owner().get$showOnScreen());
      node.set$tags(_this._object$_tagsForChildren);
      node.elevationAdjustment = elevationAdjustment;
      if (elevationAdjustment !== 0) {
        _this._ensureConfigIsWritable$0();
        t2 = _this._config;
        t3 = t2.get$elevation();
        if (typeof t3 !== "number")
          return t3.$add();
        t2.set$elevation(t3 + elevationAdjustment);
      }
      if (geometry != null) {
        node.set$rect(geometry.get$rect());
        node.set$transform(geometry.get$transform());
        node.set$parentSemanticsClipRect(geometry.get$semanticsClipRect());
        node.set$parentPaintClipRect(geometry.get$paintClipRect());
        if (t1 && B.boolConversionCheck(geometry.get$markAsHidden())) {
          _this._ensureConfigIsWritable$0();
          _this._config.set$isHidden(true);
        }
      }
      t1 = type$.JSArray_SemanticsNode;
      children = B._setArrayType([], t1);
      _this._mergeSiblingGroup$4(node.parentSemanticsClipRect, node.parentPaintClipRect, siblingNodes, usedSemanticsIds);
      for (t2 = J.get$iterator$ax(compilingFragments), t3 = J.getInterceptor$ax(siblingNodes); B.boolConversionCheck(t2.moveNext$0());) {
        t4 = t2.get$current();
        if (t4 instanceof A._SwitchableSemanticsFragment)
          if (B.boolConversionCheck(t4._isExplicit) && t4.get$owner()._semantics != null && B.boolConversionCheck(usedSemanticsIds.contains$1(0, t4.get$owner()._semantics.get$id())))
            t4.get$owner()._semantics = null;
        childSiblingNodes = B._setArrayType([], t1);
        t5 = node.parentSemanticsClipRect;
        t4.compileChildren$5$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result$siblingNodes(0, node.parentPaintClipRect, t5, children, childSiblingNodes);
        t3.addAll$1(siblingNodes, childSiblingNodes);
      }
      if (B.boolConversionCheck(_this._config.get$isSemanticBoundary()))
        _this.get$owner().assembleSemanticsNode$3(node, _this._config, children);
      else
        node.updateWith$2$childrenInInversePaintOrder$config(children, _this._config);
      t1 = J.getInterceptor$ax(result);
      t1.add$1(result, node);
      for (t2 = t3.get$iterator(siblingNodes), t4 = type$.SemanticsTag; B.boolConversionCheck(t2.moveNext$0());) {
        t5 = t2.get$current();
        t5.set$transform(node.get$transform());
        if (_this._object$_tagsForChildren != null) {
          if (t5.tags == null)
            t5.set$tags(B.LinkedHashSet_LinkedHashSet$_empty(t4));
          t5 = t5.tags;
          t5.toString;
          t6 = _this._object$_tagsForChildren;
          t6.toString;
          J.addAll$1$ax(t5, t6);
        }
      }
      t1.addAll$1(result, siblingNodes);
      t3.clear$0(siblingNodes);
    },
    _computeSemanticsGeometry$2$parentPaintClipRect$parentSemanticsClipRect(parentPaintClipRect, parentSemanticsClipRect) {
      var t1 = type$.nullable_Rect;
      t1._as(parentSemanticsClipRect);
      t1._as(parentPaintClipRect);
      return B.boolConversionCheck(this.get$_needsGeometryUpdate()) ? A._SemanticsGeometry$(this._ancestorChain, parentPaintClipRect, parentSemanticsClipRect) : null;
    },
    get$config() {
      return B.boolConversionCheck(this._isExplicit) ? null : this._config;
    },
    addAll$1(_, fragments) {
      var t1, t2, t3, t4, t5;
      for (t1 = J.get$iterator$ax(type$.Iterable__InterestingSemanticsFragment._as(fragments)), t2 = this._object$_children, t3 = J.getInterceptor$ax(t2); B.boolConversionCheck(t1.moveNext$0());) {
        t4 = t1.get$current();
        t3.add$1(t2, t4);
        if (t4.get$config() == null)
          continue;
        this._ensureConfigIsWritable$0();
        t5 = this._config;
        t4 = t4.get$config();
        t4.toString;
        t5.absorb$1(t4);
      }
    },
    addTags$1(tags) {
      var t1;
      type$.Iterable_SemanticsTag._as(tags);
      this.super$_InterestingSemanticsFragment$addTags(tags);
      t1 = J.getInterceptor$asx(tags);
      if (B.boolConversionCheck(t1.get$isNotEmpty(tags))) {
        this._ensureConfigIsWritable$0();
        t1.forEach$1(tags, this._config.get$addTagForChildren());
      }
    },
    _ensureConfigIsWritable$0() {
      var _this = this;
      if (!B.boolConversionCheck(_this._isConfigWritable)) {
        _this.set$_config(_this._config.copy$0());
        _this._isConfigWritable = true;
      }
    },
    markAsExplicit$0() {
      this._isExplicit = true;
    },
    get$_needsGeometryUpdate() {
      var t1 = J.get$length$asx(this._ancestorChain);
      if (typeof t1 !== "number")
        return t1.$gt();
      return t1 > 1;
    },
    set$_config(_config) {
      this._config = type$.SemanticsConfiguration._as(_config);
    }
  };
  A._SemanticsGeometry.prototype = {
    _SemanticsGeometry$3$ancestors$parentPaintClipRect$parentSemanticsClipRect(ancestors, parentPaintClipRect, parentSemanticsClipRect) {
      this._computeValues$3(parentSemanticsClipRect, parentPaintClipRect, ancestors);
    },
    get$_object$_transform() {
      return this.___SemanticsGeometry__transform_A;
    },
    set$_object$_transform(value) {
      this.___SemanticsGeometry__transform_A = type$.Matrix4_2._as(value);
    },
    get$_object$_rect() {
      return this.___SemanticsGeometry__rect_A;
    },
    set$_object$_rect(value) {
      this.___SemanticsGeometry__rect_A = type$.Rect._as(value);
    },
    get$transform() {
      return this.get$_object$_transform();
    },
    get$semanticsClipRect() {
      return this._semanticsClipRect;
    },
    get$paintClipRect() {
      return this._paintClipRect;
    },
    get$rect() {
      return this.get$_object$_rect();
    },
    _computeValues$3(parentSemanticsClipRect, parentPaintClipRect, ancestors) {
      var t2, index, semanticsParent, semanticsChild, clipPath, ancestor, t3, t4, t5, i, $parent, owner, paintRect, _this = this, _null = null,
        t1 = type$.nullable_Rect;
      t1._as(parentSemanticsClipRect);
      t1._as(parentPaintClipRect);
      type$.List_RenderObject._as(ancestors);
      _this.set$_object$_transform(A.Matrix4_Matrix4$identity());
      _this._semanticsClipRect = parentSemanticsClipRect;
      _this._paintClipRect = parentPaintClipRect;
      t1 = J.getInterceptor$asx(ancestors);
      t2 = t1.get$length(ancestors);
      if (typeof t2 !== "number")
        return t2.$sub();
      index = t2 - 1;
      t2 = type$.JSArray_RenderObject;
      for (; index > 0;) {
        semanticsParent = t1.$index(ancestors, index);
        --index;
        semanticsChild = t1.$index(ancestors, index);
        A._SemanticsGeometry__applyIntermediatePaintTransforms(semanticsParent, semanticsChild, _this.get$_object$_transform());
        if (semanticsParent === semanticsChild.get$parent())
          _this._computeClipRect$4(semanticsParent, semanticsChild, _this._semanticsClipRect, _this._paintClipRect);
        else {
          clipPath = B._setArrayType([semanticsChild], t2);
          ancestor = semanticsChild.get$parent();
          while (true) {
            t3 = ancestor == null;
            t4 = !t3;
            if (!(t4 && ancestor._semantics == null))
              break;
            D.JSArray_methods.add$1(clipPath, ancestor);
            ancestor = ancestor.get$parent();
          }
          if (t3)
            t5 = _null;
          else {
            t5 = ancestor._semantics;
            t5 = t5 == null ? _null : t5.parentPaintClipRect;
          }
          _this.set$_paintClipRect(t5);
          if (t3)
            t3 = _null;
          else {
            t3 = ancestor._semantics;
            t3 = t3 == null ? _null : t3.parentSemanticsClipRect;
          }
          _this.set$_semanticsClipRect(t3);
          if (t4)
            for (t3 = clipPath.length, i = t3 - 1, $parent = ancestor; i >= 0; --i) {
              if (!(i < t3))
                return B.ioore(clipPath, i);
              _this._computeClipRect$4($parent, clipPath[i], _this._semanticsClipRect, _this._paintClipRect);
              t3 = clipPath.length;
              if (!(i < t3))
                return B.ioore(clipPath, i);
              $parent = clipPath[i];
            }
        }
      }
      owner = t1.get$first(ancestors);
      t1 = _this._semanticsClipRect;
      t1 = t1 == null ? _null : t1.intersect$1(owner.get$semanticBounds());
      _this.set$_object$_rect(t1 == null ? owner.get$semanticBounds() : t1);
      t1 = _this._paintClipRect;
      if (t1 != null) {
        paintRect = t1.intersect$1(_this.get$_object$_rect());
        t1 = B.boolConversionCheck(paintRect.get$isEmpty(0)) && !B.boolConversionCheck(J.get$isEmpty$asx(_this.get$_object$_rect()));
        _this._markAsHidden = t1;
        if (!t1)
          _this.set$_object$_rect(paintRect);
      }
    },
    _computeClipRect$4($parent, child, parentSemanticsClipRect, parentPaintClipRect) {
      var additionalPaintClip, semanticsClip, _this = this,
        t1 = type$.RenderObject;
      t1._as($parent);
      t1._as(child);
      t1 = type$.nullable_Rect;
      t1._as(parentSemanticsClipRect);
      t1._as(parentPaintClipRect);
      t1 = $.$get$_SemanticsGeometry__temporaryTransformHolder();
      t1.setIdentity$0();
      $parent.applyPaintTransform$2(child, t1);
      additionalPaintClip = $parent.describeApproximatePaintClip$1(child);
      _this.set$_paintClipRect(A._SemanticsGeometry__transformRect(A._SemanticsGeometry__intersectRects(additionalPaintClip, parentPaintClipRect), t1));
      if (_this._paintClipRect == null)
        _this._semanticsClipRect = null;
      else {
        semanticsClip = $parent.describeSemanticsClip$1(child);
        _this.set$_semanticsClipRect(A._SemanticsGeometry__transformRect(semanticsClip == null ? A._SemanticsGeometry__intersectRects(parentSemanticsClipRect, additionalPaintClip) : semanticsClip, t1));
      }
    },
    get$dropFromTree() {
      return B.boolConversionCheck(J.get$isEmpty$asx(this.get$_object$_rect())) || B.boolConversionCheck(this.get$_object$_transform().isZero$0());
    },
    get$markAsHidden() {
      return this._markAsHidden;
    },
    set$_paintClipRect(_paintClipRect) {
      this._paintClipRect = type$.nullable_Rect._as(_paintClipRect);
    },
    set$_semanticsClipRect(_semanticsClipRect) {
      this._semanticsClipRect = type$.nullable_Rect._as(_semanticsClipRect);
    }
  };
  A.DiagnosticsDebugCreator.prototype = {};
  A._RenderObject_Object_DiagnosticableTreeMixin.prototype = {$isDiagnosticable: 1, $isDiagnosticableTree: 1, $isDiagnosticableTreeMixin: 1, $is_DiagnosticableTree_Object_Diagnosticable: 1};
  A.RenderProxyBox.prototype = {
    RenderProxyBox$1(child) {
      this.set$child(child);
    },
    $isRenderObjectWithChildMixin: 1,
    $isRenderProxyBoxMixin: 1
  };
  A.RenderProxyBoxMixin.prototype = {
    setupParentData$1(child) {
      type$.RenderObject._as(child);
      if (!(child.parentData instanceof A.ParentData))
        child.parentData = A.ParentData$();
    },
    computeDryBaseline$2(constraints, baseline) {
      var t1;
      type$.BoxConstraints._as(constraints);
      type$.TextBaseline._as(baseline);
      t1 = this.get$child();
      return t1 == null ? null : t1.getDryBaseline$2(constraints, baseline);
    },
    computeDryLayout$1(constraints) {
      var t1;
      type$.BoxConstraints._as(constraints);
      t1 = this.get$child();
      t1 = t1 == null ? null : t1.getDryLayout$1(constraints);
      return t1 == null ? this.computeSizeForNoChild$1(constraints) : t1;
    },
    performLayout$0() {
      var _this = this,
        t1 = _this.get$child();
      if (t1 == null)
        t1 = null;
      else
        t1.layout$2$parentUsesSize(_this.get$constraints(), true);
      t1 = t1 == null ? null : t1.get$size();
      _this.set$size(t1 == null ? _this.computeSizeForNoChild$1(_this.get$constraints()) : t1);
      return;
    },
    computeSizeForNoChild$1(constraints) {
      return type$.BoxConstraints._as(constraints).get$smallest();
    },
    hitTestChildren$2$position(result, position) {
      var t1;
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      t1 = this.get$child();
      t1 = t1 == null ? null : t1.hitTest$2$position(result, position);
      return t1 == null ? false : t1;
    },
    applyPaintTransform$2(child, transform) {
      type$.RenderObject._as(child);
      type$.Matrix4_2._as(transform);
    },
    paint$2(context, offset) {
      var child;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      child = this.get$child();
      if (child == null)
        return;
      context.paintChild$2(child, offset);
    },
    $isDiagnosticable: 1,
    $isDiagnosticableTree: 1,
    $isDiagnosticableTreeMixin: 1,
    $isHitTestTarget: 1,
    $isRenderBox: 1,
    $isRenderObject: 1,
    $isRenderObjectWithChildMixin: 1,
    $is_DiagnosticableTree_Object_Diagnosticable: 1,
    $is_RenderObject_Object_DiagnosticableTreeMixin: 1
  };
  A.RenderConstrainedBox.prototype = {
    get$additionalConstraints() {
      return this._proxy_box$_additionalConstraints;
    },
    set$additionalConstraints(value) {
      type$.BoxConstraints._as(value);
      if (B.boolConversionCheck(J.$eq$(this._proxy_box$_additionalConstraints, value)))
        return;
      this._proxy_box$_additionalConstraints = value;
      this.markNeedsLayout$0();
    },
    computeDryBaseline$2(constraints, baseline) {
      var t1;
      type$.BoxConstraints._as(constraints);
      type$.TextBaseline._as(baseline);
      t1 = this.get$child();
      return t1 == null ? null : t1.getDryBaseline$2(this._proxy_box$_additionalConstraints.enforce$1(constraints), baseline);
    },
    performLayout$0() {
      var t1, _this = this,
        constraints = _this.get$constraints();
      if (_this.get$child() != null) {
        t1 = _this.get$child();
        t1.toString;
        t1.layout$2$parentUsesSize(_this._proxy_box$_additionalConstraints.enforce$1(constraints), true);
        _this.set$size(_this.get$child().get$size());
      } else
        _this.set$size(_this._proxy_box$_additionalConstraints.enforce$1(constraints).constrain$1(C.Size_0_0));
    },
    computeDryLayout$1(constraints) {
      var t1;
      type$.BoxConstraints._as(constraints);
      t1 = this.get$child();
      t1 = t1 == null ? null : t1.getDryLayout$1(this._proxy_box$_additionalConstraints.enforce$1(constraints));
      return t1 == null ? this._proxy_box$_additionalConstraints.enforce$1(constraints).constrain$1(C.Size_0_0) : t1;
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$RenderBox$debugFillProperties(properties);
      properties.add$1(0, A.DiagnosticsProperty$("additionalConstraints", this.get$additionalConstraints(), true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.BoxConstraints));
    }
  };
  A.RenderSemanticsAnnotations.prototype = {
    RenderSemanticsAnnotations$7$blockUserActions$child$container$excludeSemantics$explicitChildNodes$properties$textDirection(blockUserActions, child, container, excludeSemantics, explicitChildNodes, properties, textDirection) {
      this._updateAttributedFields$1(this._proxy_box$_properties);
    },
    get$properties() {
      return this._proxy_box$_properties;
    },
    set$properties(value) {
      var _this = this;
      type$.SemanticsProperties._as(value);
      if (B.boolConversionCheck(J.$eq$(_this._proxy_box$_properties, value)))
        return;
      _this._proxy_box$_properties = value;
      _this._updateAttributedFields$1(value);
      _this.markNeedsSemanticsUpdate$0();
    },
    get$container() {
      return this._container;
    },
    set$container(value) {
      B._asBool(value);
      if (B.boolConversionCheck(J.$eq$(this.get$container(), value)))
        return;
      this._container = value;
      this.markNeedsSemanticsUpdate$0();
    },
    get$explicitChildNodes() {
      return this._explicitChildNodes;
    },
    set$explicitChildNodes(value) {
      B._asBool(value);
      if (B.boolConversionCheck(J.$eq$(this._explicitChildNodes, value)))
        return;
      this._explicitChildNodes = value;
      this.markNeedsSemanticsUpdate$0();
    },
    get$excludeSemantics() {
      return this._excludeSemantics;
    },
    set$excludeSemantics(value) {
      B._asBool(value);
      if (B.boolConversionCheck(J.$eq$(this._excludeSemantics, value)))
        return;
      this._excludeSemantics = value;
      this.markNeedsSemanticsUpdate$0();
    },
    get$blockUserActions() {
      return this._blockUserActions;
    },
    set$blockUserActions(value) {
      B._asBool(value);
      if (B.boolConversionCheck(J.$eq$(this._blockUserActions, value)))
        return;
      this._blockUserActions = value;
      this.markNeedsSemanticsUpdate$0();
    },
    _updateAttributedFields$1(value) {
      var _this = this;
      type$.SemanticsProperties._as(value);
      _this.set$_proxy_box$_attributedLabel(_this._effectiveAttributedLabel$1(value));
      _this.set$_proxy_box$_attributedValue(_this._effectiveAttributedValue$1(value));
      _this.set$_proxy_box$_attributedIncreasedValue(_this._effectiveAttributedIncreasedValue$1(value));
      _this.set$_proxy_box$_attributedDecreasedValue(_this._effectiveAttributedDecreasedValue$1(value));
      _this.set$_proxy_box$_attributedHint(_this._effectiveAttributedHint$1(value));
    },
    _effectiveAttributedLabel$1(value) {
      var t1;
      type$.SemanticsProperties._as(value);
      t1 = value.attributedLabel;
      if (t1 == null) {
        t1 = value.label;
        t1 = t1 == null ? null : A.AttributedString$(t1, C.List_empty2);
      }
      return t1;
    },
    _effectiveAttributedValue$1(value) {
      var t1;
      type$.SemanticsProperties._as(value);
      t1 = value.attributedValue;
      if (t1 == null) {
        t1 = value.value;
        t1 = t1 == null ? null : A.AttributedString$(t1, C.List_empty2);
      }
      return t1;
    },
    _effectiveAttributedIncreasedValue$1(value) {
      var t1;
      type$.SemanticsProperties._as(value);
      t1 = value.attributedIncreasedValue;
      if (t1 == null) {
        t1 = value.increasedValue;
        t1 = t1 == null ? null : A.AttributedString$(t1, C.List_empty2);
      }
      return t1;
    },
    _effectiveAttributedDecreasedValue$1(value) {
      var t1;
      type$.SemanticsProperties._as(value);
      t1 = this.get$properties().attributedDecreasedValue;
      if (t1 == null) {
        t1 = value.decreasedValue;
        t1 = t1 == null ? null : A.AttributedString$(t1, C.List_empty2);
      }
      return t1;
    },
    _effectiveAttributedHint$1(value) {
      var t1;
      type$.SemanticsProperties._as(value);
      t1 = value.attributedHint;
      if (t1 == null) {
        t1 = value.hint;
        t1 = t1 == null ? null : A.AttributedString$(t1, C.List_empty2);
      }
      return t1;
    },
    get$textDirection() {
      return this._proxy_box$_textDirection;
    },
    set$textDirection(value) {
      type$.nullable_TextDirection._as(value);
      if (B.boolConversionCheck(J.$eq$(this.get$textDirection(), value)))
        return;
      this._proxy_box$_textDirection = value;
      this.markNeedsSemanticsUpdate$0();
    },
    visitChildrenForSemantics$1(visitor) {
      type$.void_Function_RenderObject._as(visitor);
      if (B.boolConversionCheck(this.get$excludeSemantics()))
        return;
      this.super$RenderObject$visitChildrenForSemantics(visitor);
    },
    describeSemanticsConfiguration$1(config) {
      var t1, _this = this;
      type$.SemanticsConfiguration._as(config);
      _this.super$RenderObject$describeSemanticsConfiguration(config);
      config.set$isSemanticBoundary(_this.get$container());
      config.set$explicitChildNodes(_this.get$explicitChildNodes());
      config.set$isBlockingUserActions(_this.get$blockUserActions());
      t1 = _this._proxy_box$_properties.enabled;
      if (t1 != null)
        config.set$isEnabled(t1);
      t1 = _this._proxy_box$_properties.checked;
      if (t1 != null)
        config.set$isChecked(t1);
      t1 = _this._proxy_box$_properties.mixed;
      if (t1 != null)
        config.set$isCheckStateMixed(t1);
      t1 = _this._proxy_box$_properties.toggled;
      if (t1 != null)
        config.set$isToggled(t1);
      t1 = _this._proxy_box$_properties.selected;
      if (t1 != null)
        config.set$isSelected(t1);
      t1 = _this._proxy_box$_properties.button;
      if (t1 != null)
        config.set$isButton(t1);
      t1 = _this._proxy_box$_properties.expanded;
      if (t1 != null)
        config.set$isExpanded(t1);
      t1 = _this._proxy_box$_properties.link;
      if (t1 != null)
        config.set$isLink(t1);
      t1 = _this._proxy_box$_properties.slider;
      if (t1 != null)
        config.set$isSlider(t1);
      t1 = _this._proxy_box$_properties.keyboardKey;
      if (t1 != null)
        config.set$isKeyboardKey(t1);
      t1 = _this._proxy_box$_properties.header;
      if (t1 != null)
        config.set$isHeader(t1);
      t1 = _this._proxy_box$_properties.headingLevel;
      if (t1 != null)
        config.set$headingLevel(t1);
      t1 = _this._proxy_box$_properties.textField;
      if (t1 != null)
        config.set$isTextField(t1);
      t1 = _this._proxy_box$_properties.readOnly;
      if (t1 != null)
        config.set$isReadOnly(t1);
      t1 = _this._proxy_box$_properties.focusable;
      if (t1 != null)
        config.set$isFocusable(t1);
      t1 = _this._proxy_box$_properties.focused;
      if (t1 != null)
        config.set$isFocused(t1);
      t1 = _this._proxy_box$_properties.inMutuallyExclusiveGroup;
      if (t1 != null)
        config.set$isInMutuallyExclusiveGroup(t1);
      t1 = _this._proxy_box$_properties.obscured;
      if (t1 != null)
        config.set$isObscured(t1);
      t1 = _this._proxy_box$_properties.multiline;
      if (t1 != null)
        config.set$isMultiline(t1);
      t1 = _this._proxy_box$_properties.hidden;
      if (t1 != null)
        config.set$isHidden(t1);
      t1 = _this._proxy_box$_properties.image;
      if (t1 != null)
        config.set$isImage(t1);
      t1 = _this._proxy_box$_properties.identifier;
      if (t1 != null)
        config.set$identifier(t1);
      t1 = _this._proxy_box$_attributedLabel;
      if (t1 != null)
        config.set$attributedLabel(t1);
      t1 = _this._proxy_box$_attributedValue;
      if (t1 != null)
        config.set$attributedValue(t1);
      t1 = _this._proxy_box$_attributedIncreasedValue;
      if (t1 != null)
        config.set$attributedIncreasedValue(t1);
      t1 = _this._proxy_box$_attributedDecreasedValue;
      if (t1 != null)
        config.set$attributedDecreasedValue(t1);
      t1 = _this._proxy_box$_attributedHint;
      if (t1 != null)
        config.set$attributedHint(t1);
      t1 = _this._proxy_box$_properties.tooltip;
      if (t1 != null)
        config.set$tooltip(t1);
      t1 = _this._proxy_box$_properties.hintOverrides;
      if (t1 != null && B.boolConversionCheck(J.get$isNotEmpty$asx(t1)))
        config.set$hintOverrides(_this._proxy_box$_properties.hintOverrides);
      t1 = _this._proxy_box$_properties.scopesRoute;
      if (t1 != null)
        config.set$scopesRoute(t1);
      t1 = _this._proxy_box$_properties.namesRoute;
      if (t1 != null)
        config.set$namesRoute(t1);
      t1 = _this._proxy_box$_properties.liveRegion;
      if (t1 != null)
        config.set$liveRegion(t1);
      t1 = _this._proxy_box$_properties.maxValueLength;
      if (t1 != null)
        config.set$maxValueLength(t1);
      t1 = _this._proxy_box$_properties.currentValueLength;
      if (t1 != null)
        config.set$currentValueLength(t1);
      if (_this.get$textDirection() != null)
        config.set$textDirection(_this.get$textDirection());
      t1 = _this._proxy_box$_properties.sortKey;
      if (t1 != null)
        config.set$sortKey(t1);
      t1 = _this._proxy_box$_properties.tagForChildren;
      if (t1 != null)
        config.addTagForChildren$1(t1);
      if (_this._proxy_box$_properties.onTap != null)
        config.set$onTap(_this.get$_performTap());
      if (_this._proxy_box$_properties.onLongPress != null)
        config.set$onLongPress(_this.get$_performLongPress());
      if (_this._proxy_box$_properties.onDismiss != null)
        config.set$onDismiss(_this.get$_performDismiss());
      if (_this._proxy_box$_properties.onScrollLeft != null)
        config.set$onScrollLeft(_this.get$_performScrollLeft());
      if (_this._proxy_box$_properties.onScrollRight != null)
        config.set$onScrollRight(_this.get$_performScrollRight());
      if (_this._proxy_box$_properties.onScrollUp != null)
        config.set$onScrollUp(_this.get$_performScrollUp());
      if (_this._proxy_box$_properties.onScrollDown != null)
        config.set$onScrollDown(_this.get$_performScrollDown());
      if (_this._proxy_box$_properties.onIncrease != null)
        config.set$onIncrease(_this.get$_performIncrease());
      if (_this._proxy_box$_properties.onDecrease != null)
        config.set$onDecrease(_this.get$_performDecrease());
      if (_this._proxy_box$_properties.onCopy != null)
        config.set$onCopy(_this.get$_performCopy());
      if (_this._proxy_box$_properties.onCut != null)
        config.set$onCut(_this.get$_performCut());
      if (_this._proxy_box$_properties.onPaste != null)
        config.set$onPaste(_this.get$_performPaste());
      if (_this._proxy_box$_properties.onMoveCursorForwardByCharacter != null)
        config.set$onMoveCursorForwardByCharacter(_this.get$_performMoveCursorForwardByCharacter());
      if (_this._proxy_box$_properties.onMoveCursorBackwardByCharacter != null)
        config.set$onMoveCursorBackwardByCharacter(_this.get$_performMoveCursorBackwardByCharacter());
      t1 = _this._proxy_box$_properties;
      if (t1.onSetSelection != null)
        config.set$onSetSelection(_this.get$_performSetSelection());
      if (_this._proxy_box$_properties.onSetText != null)
        config.set$onSetText(_this.get$_performSetText());
      if (_this._proxy_box$_properties.onDidGainAccessibilityFocus != null)
        config.set$onDidGainAccessibilityFocus(_this.get$_performDidGainAccessibilityFocus());
      if (_this._proxy_box$_properties.onDidLoseAccessibilityFocus != null)
        config.set$onDidLoseAccessibilityFocus(_this.get$_performDidLoseAccessibilityFocus());
      if (_this._proxy_box$_properties.onFocus != null)
        config.set$onFocus(_this.get$_performFocus());
      t1 = _this._proxy_box$_properties.customSemanticsActions;
      if (t1 != null)
        config.set$customSemanticsActions(t1);
    },
    _performTap$0() {
      var t1 = this._proxy_box$_properties.onTap;
      if (t1 != null)
        t1.call$0();
    },
    _performLongPress$0() {
      var t1 = this._proxy_box$_properties.onLongPress;
      if (t1 != null)
        t1.call$0();
    },
    _performDismiss$0() {
      var t1 = this._proxy_box$_properties.onDismiss;
      if (t1 != null)
        t1.call$0();
    },
    _performScrollLeft$0() {
      var t1 = this._proxy_box$_properties.onScrollLeft;
      if (t1 != null)
        t1.call$0();
    },
    _performScrollRight$0() {
      var t1 = this._proxy_box$_properties.onScrollRight;
      if (t1 != null)
        t1.call$0();
    },
    _performScrollUp$0() {
      var t1 = this._proxy_box$_properties.onScrollUp;
      if (t1 != null)
        t1.call$0();
    },
    _performScrollDown$0() {
      var t1 = this._proxy_box$_properties.onScrollDown;
      if (t1 != null)
        t1.call$0();
    },
    _performIncrease$0() {
      var t1 = this._proxy_box$_properties.onIncrease;
      if (t1 != null)
        t1.call$0();
    },
    _performDecrease$0() {
      var t1 = this._proxy_box$_properties.onDecrease;
      if (t1 != null)
        t1.call$0();
    },
    _performCopy$0() {
      var t1 = this._proxy_box$_properties.onCopy;
      if (t1 != null)
        t1.call$0();
    },
    _performCut$0() {
      var t1 = this._proxy_box$_properties.onCut;
      if (t1 != null)
        t1.call$0();
    },
    _performPaste$0() {
      var t1 = this._proxy_box$_properties.onPaste;
      if (t1 != null)
        t1.call$0();
    },
    _performMoveCursorForwardByCharacter$1(extendSelection) {
      var t1;
      B._asBool(extendSelection);
      t1 = this._proxy_box$_properties.onMoveCursorForwardByCharacter;
      if (t1 != null)
        t1.call$1(extendSelection);
    },
    _performMoveCursorBackwardByCharacter$1(extendSelection) {
      var t1;
      B._asBool(extendSelection);
      t1 = this._proxy_box$_properties.onMoveCursorBackwardByCharacter;
      if (t1 != null)
        t1.call$1(extendSelection);
    },
    _performSetSelection$1(selection) {
      var t1;
      type$.TextSelection._as(selection);
      t1 = this._proxy_box$_properties.onSetSelection;
      if (t1 != null)
        t1.call$1(selection);
    },
    _performSetText$1(text) {
      var t1;
      B._asString(text);
      t1 = this._proxy_box$_properties.onSetText;
      if (t1 != null)
        t1.call$1(text);
    },
    _performDidGainAccessibilityFocus$0() {
      var t1 = this._proxy_box$_properties.onDidGainAccessibilityFocus;
      if (t1 != null)
        t1.call$0();
    },
    _performDidLoseAccessibilityFocus$0() {
      var t1 = this._proxy_box$_properties.onDidLoseAccessibilityFocus;
      if (t1 != null)
        t1.call$0();
    },
    _performFocus$0() {
      var t1 = this._proxy_box$_properties.onFocus;
      if (t1 != null)
        t1.call$0();
    },
    set$_proxy_box$_attributedLabel(_attributedLabel) {
      this._proxy_box$_attributedLabel = type$.nullable_AttributedString._as(_attributedLabel);
    },
    set$_proxy_box$_attributedValue(_attributedValue) {
      this._proxy_box$_attributedValue = type$.nullable_AttributedString._as(_attributedValue);
    },
    set$_proxy_box$_attributedIncreasedValue(_attributedIncreasedValue) {
      this._proxy_box$_attributedIncreasedValue = type$.nullable_AttributedString._as(_attributedIncreasedValue);
    },
    set$_proxy_box$_attributedDecreasedValue(_attributedDecreasedValue) {
      this._proxy_box$_attributedDecreasedValue = type$.nullable_AttributedString._as(_attributedDecreasedValue);
    },
    set$_proxy_box$_attributedHint(_attributedHint) {
      this._proxy_box$_attributedHint = type$.nullable_AttributedString._as(_attributedHint);
    }
  };
  A._RenderProxyBox_RenderBox_RenderObjectWithChildMixin.prototype = {
    attach$1(owner) {
      var t1;
      type$.PipelineOwner._as(owner);
      this.super$RenderObject$attach(owner);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.attach$1(owner);
    },
    detach$0() {
      this.super$RenderObject$detach();
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.detach$0();
    },
    $isRenderObjectWithChildMixin: 1
  };
  A._RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin.prototype = {
    computeDistanceToActualBaseline$1(baseline) {
      var t1;
      type$.TextBaseline._as(baseline);
      t1 = this.get$child();
      t1 = t1 == null ? null : t1.getDistanceToActualBaseline$1(baseline);
      return t1 == null ? this.super$RenderBox$computeDistanceToActualBaseline(baseline) : t1;
    },
    $isRenderObjectWithChildMixin: 1,
    $isRenderProxyBoxMixin: 1
  };
  A.SchedulerPhase.prototype = {
    _enumToString$0() {
      return "SchedulerPhase." + B.S(this._core$_name);
    }
  };
  A.CustomSemanticsAction.prototype = {
    get$hashCode(_) {
      return B.Object_hash(null, this.hint, this.action, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.CustomSemanticsAction && B.boolConversionCheck(J.$eq$(other.hint, this.hint)) && B.boolConversionCheck(J.$eq$(other.action, this.action));
    },
    toString$0(_) {
      return "CustomSemanticsAction(" + B.S(J.$index$asx($.CustomSemanticsAction__ids, this)) + ", label:null, hint:" + B.S(this.hint) + ", action:" + B.S(this.action) + ")";
    }
  };
  A.AttributedString.prototype = {
    $add(_, other) {
      var t1, t2, t3, newString, newAttributes, t4, offset, t5;
      type$.AttributedString._as(other);
      t1 = this.string;
      t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t2.get$isEmpty(t1)))
        return other;
      t3 = other.string;
      if (B.boolConversionCheck(J.get$isEmpty$asx(t3)))
        return this;
      newString = t2.$add(t1, t3);
      newAttributes = B.List_List$of(this.attributes, true, type$.StringAttribute);
      t3 = other.attributes;
      t4 = J.getInterceptor$asx(t3);
      if (B.boolConversionCheck(t4.get$isNotEmpty(t3))) {
        offset = t2.get$length(t1);
        for (t1 = t4.get$iterator(t3), t2 = J.getInterceptor$ax(newAttributes); B.boolConversionCheck(t1.moveNext$0());) {
          t3 = t1.get$current();
          t4 = t3.range;
          t5 = t4.start;
          if (typeof t5 !== "number")
            return t5.$add();
          t4 = t4.end;
          if (typeof t4 !== "number")
            return t4.$add();
          t2.add$1(newAttributes, t3.copy$1$range(A.TextRange$(t4 + offset, t5 + offset)));
        }
      }
      return A.AttributedString$(newString, newAttributes);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))) && other instanceof A.AttributedString && B.boolConversionCheck(J.$eq$(other.string, this.string)) && B.boolConversionCheck(A.listEquals(other.attributes, this.attributes, type$.StringAttribute));
    },
    get$hashCode(_) {
      return B.Object_hash(this.string, this.attributes, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return B.S(A.objectRuntimeType(this, "AttributedString")) + "('" + B.S(this.string) + "', attributes: " + B.S(this.attributes) + ")";
    }
  };
  A.AttributedStringProperty.prototype = {
    get$isInteresting() {
      if (B.boolConversionCheck(A.DiagnosticsProperty.prototype.get$isInteresting.call(this)))
        var t1 = this.get$value() != null && B.boolConversionCheck(J.get$isNotEmpty$asx(this.get$value().string));
      else
        t1 = false;
      return t1;
    },
    valueToString$1$parentConfiguration(parentConfiguration) {
      var text, _this = this;
      type$.nullable_TextTreeConfiguration._as(parentConfiguration);
      if (_this.get$value() == null)
        return "null";
      text = _this.get$value().string;
      if (parentConfiguration != null && !B.boolConversionCheck(parentConfiguration.lineBreakProperties))
        text = D.JSString_methods.replaceAll$2(text, "\n", "\\n");
      if (B.boolConversionCheck(J.get$isEmpty$asx(_this.get$value().attributes)))
        return '"' + text + '"';
      return '"' + text + '" ' + B.S(_this.get$value().attributes);
    }
  };
  A.SemanticsData.prototype = {
    hasFlag$1(flag) {
      var t1 = this.flags,
        t2 = type$.SemanticsFlag._as(flag).index;
      if (typeof t1 !== "number")
        return t1.$and();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return (t1 & t2) >>> 0 !== 0;
    },
    hasAction$1(action) {
      var t1 = this.actions,
        t2 = type$.SemanticsAction._as(action).index;
      if (typeof t1 !== "number")
        return t1.$and();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return (t1 & t2) >>> 0 !== 0;
    },
    toStringShort$0() {
      return A.objectRuntimeType(this, "SemanticsData");
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, t4, t5, t6, customSemanticsActionSummary, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.DiagnosticsProperty$("rect", _this.rect, true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, false, true, C.DiagnosticsTreeStyle_8, _null, type$.Rect));
      properties.add$1(0, A.TransformProperty$("transform", _this.transform, _null, false));
      properties.add$1(0, A.DoubleProperty$("elevation", _this.elevation, 0, _null, C.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.DoubleProperty$("thickness", _this.thickness, 0, _null, C.DiagnosticLevel_3, _null, _null));
      t1 = type$.JSArray_String;
      t2 = B._setArrayType([], t1);
      for (t3 = J.get$iterator$ax(A.SemanticsAction_values()), t4 = _this.actions; B.boolConversionCheck(t3.moveNext$0());) {
        t5 = t3.get$current();
        t6 = t5.index;
        if (typeof t4 !== "number")
          return t4.$and();
        if (typeof t6 !== "number")
          return B.iae(t6);
        if ((t4 & t6) >>> 0 !== 0)
          t2.push(t5.name);
      }
      t3 = _this.customSemanticsActionIds;
      t3.toString;
      t4 = type$.nullable_String;
      customSemanticsActionSummary = J.toList$0$ax(J.map$1$1$ax(t3, new A.SemanticsData_debugFillProperties_closure(), t4));
      t3 = type$.String;
      properties.add$1(0, A.IterableProperty$("actions", t2, C.C__NoDefaultValue, _null, C.DiagnosticLevel_3, C.DiagnosticsTreeStyle_8, t3));
      properties.add$1(0, A.IterableProperty$("customActions", customSemanticsActionSummary, C.C__NoDefaultValue, _null, C.DiagnosticLevel_3, C.DiagnosticsTreeStyle_8, t4));
      t1 = B._setArrayType([], t1);
      for (t2 = J.get$iterator$ax(A.SemanticsFlag_values()), t4 = _this.flags; B.boolConversionCheck(t2.moveNext$0());) {
        t5 = t2.get$current();
        t6 = t5.index;
        if (typeof t4 !== "number")
          return t4.$and();
        if (typeof t6 !== "number")
          return B.iae(t6);
        if ((t4 & t6) >>> 0 !== 0)
          t1.push(t5.name);
      }
      properties.add$1(0, A.IterableProperty$("flags", t1, C.C__NoDefaultValue, _null, C.DiagnosticLevel_3, C.DiagnosticsTreeStyle_8, t3));
      properties.add$1(0, A.StringProperty$("identifier", _this.identifier, "", true, true));
      properties.add$1(0, A.AttributedStringProperty$("label", _this.attributedLabel, C.C__NoDefaultValue));
      properties.add$1(0, A.AttributedStringProperty$("value", _this.attributedValue, C.C__NoDefaultValue));
      properties.add$1(0, A.AttributedStringProperty$("increasedValue", _this.attributedIncreasedValue, C.C__NoDefaultValue));
      properties.add$1(0, A.AttributedStringProperty$("decreasedValue", _this.attributedDecreasedValue, C.C__NoDefaultValue));
      properties.add$1(0, A.AttributedStringProperty$("hint", _this.attributedHint, C.C__NoDefaultValue));
      properties.add$1(0, A.StringProperty$("tooltip", _this.tooltip, "", true, true));
      properties.add$1(0, A.EnumProperty$("textDirection", _this.textDirection, _null, C.DiagnosticLevel_3, type$.TextDirection));
      t1 = _this.textSelection;
      t2 = t1 == null ? _null : t1.get$isValid();
      if (B.boolConversionCheck(t2 == null ? false : t2))
        properties.add$1(0, A.MessageProperty$("textSelection", "[" + B.S(t1.start) + ", " + B.S(t1.end) + "]", C.DiagnosticLevel_3));
      properties.add$1(0, A.IntProperty$("platformViewId", _this.platformViewId, _null, _null, C.DiagnosticLevel_3, _null));
      properties.add$1(0, A.IntProperty$("maxValueLength", _this.maxValueLength, _null, _null, C.DiagnosticLevel_3, _null));
      properties.add$1(0, A.IntProperty$("currentValueLength", _this.currentValueLength, _null, _null, C.DiagnosticLevel_3, _null));
      properties.add$1(0, A.IntProperty$("scrollChildren", _this.scrollChildCount, _null, _null, C.DiagnosticLevel_3, _null));
      properties.add$1(0, A.IntProperty$("scrollIndex", _this.scrollIndex, _null, _null, C.DiagnosticLevel_3, _null));
      properties.add$1(0, A.DoubleProperty$("scrollExtentMin", _this.scrollExtentMin, _null, _null, C.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.DoubleProperty$("scrollPosition", _this.scrollPosition, _null, _null, C.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.DoubleProperty$("scrollExtentMax", _this.scrollExtentMax, _null, _null, C.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.IntProperty$("headingLevel", _this.headingLevel, 0, _null, C.DiagnosticLevel_3, _null));
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A.SemanticsData && B.boolConversionCheck(J.$eq$(other.flags, _this.flags)) && B.boolConversionCheck(J.$eq$(other.actions, _this.actions)) && B.boolConversionCheck(J.$eq$(other.identifier, _this.identifier)) && B.boolConversionCheck(J.$eq$(other.attributedLabel, _this.attributedLabel)) && B.boolConversionCheck(J.$eq$(other.attributedValue, _this.attributedValue)) && B.boolConversionCheck(J.$eq$(other.attributedIncreasedValue, _this.attributedIncreasedValue)) && B.boolConversionCheck(J.$eq$(other.attributedDecreasedValue, _this.attributedDecreasedValue)) && B.boolConversionCheck(J.$eq$(other.attributedHint, _this.attributedHint)) && B.boolConversionCheck(J.$eq$(other.tooltip, _this.tooltip)) && B.boolConversionCheck(J.$eq$(other.textDirection, _this.textDirection)) && B.boolConversionCheck(J.$eq$(other.rect, _this.rect)) && B.boolConversionCheck(A.setEquals(other.tags, _this.tags, type$.SemanticsTag)) && B.boolConversionCheck(J.$eq$(other.scrollChildCount, _this.scrollChildCount)) && B.boolConversionCheck(J.$eq$(other.scrollIndex, _this.scrollIndex)) && B.boolConversionCheck(J.$eq$(other.textSelection, _this.textSelection)) && B.boolConversionCheck(J.$eq$(other.scrollPosition, _this.scrollPosition)) && B.boolConversionCheck(J.$eq$(other.scrollExtentMax, _this.scrollExtentMax)) && B.boolConversionCheck(J.$eq$(other.scrollExtentMin, _this.scrollExtentMin)) && B.boolConversionCheck(J.$eq$(other.platformViewId, _this.platformViewId)) && B.boolConversionCheck(J.$eq$(other.maxValueLength, _this.maxValueLength)) && B.boolConversionCheck(J.$eq$(other.currentValueLength, _this.currentValueLength)) && B.boolConversionCheck(J.$eq$(other.transform, _this.transform)) && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.thickness, _this.thickness)) && B.boolConversionCheck(J.$eq$(other.headingLevel, _this.headingLevel)) && B.boolConversionCheck(A.SemanticsData__sortedListsEqual(other.customSemanticsActionIds, _this.customSemanticsActionIds));
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.customSemanticsActionIds;
      t1 = t1 == null ? null : B.Object_hashAll(t1);
      return B.Object_hash(_this.flags, _this.actions, _this.identifier, _this.attributedLabel, _this.attributedValue, _this.attributedIncreasedValue, _this.attributedDecreasedValue, _this.attributedHint, _this.tooltip, _this.textDirection, _this.rect, _this.tags, _this.textSelection, _this.scrollChildCount, _this.scrollIndex, _this.scrollPosition, _this.scrollExtentMax, _this.scrollExtentMin, _this.platformViewId, B.Object_hash(_this.maxValueLength, _this.currentValueLength, _this.transform, _this.elevation, _this.thickness, _this.headingLevel, t1, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue));
    },
    $isDiagnosticable: 1
  };
  A._SemanticsDiagnosticableNode.prototype = {
    getChildren$0() {
      return this.value.debugDescribeChildren$1$childOrder(this.childOrder);
    }
  };
  A.SemanticsHintOverrides.prototype = {
    get$isNotEmpty(_) {
      return this.onTapHint != null || this.onLongPressHint != null;
    },
    get$hashCode(_) {
      return B.Object_hash(this.onTapHint, this.onLongPressHint, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.SemanticsHintOverrides && B.boolConversionCheck(J.$eq$(other.onTapHint, this.onTapHint)) && B.boolConversionCheck(J.$eq$(other.onLongPressHint, this.onLongPressHint));
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.StringProperty$("onTapHint", this.onTapHint, null, true, true));
      properties.add$1(0, A.StringProperty$("onLongPressHint", this.onLongPressHint, null, true, true));
    }
  };
  A.SemanticsProperties.prototype = {
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      t1 = type$.bool;
      properties.add$1(0, A.DiagnosticsProperty$("checked", _this.checked, true, _null, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, A.DiagnosticsProperty$("mixed", _this.mixed, true, _null, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, A.DiagnosticsProperty$("expanded", _this.expanded, true, _null, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, A.DiagnosticsProperty$("selected", _this.selected, true, _null, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, A.StringProperty$("identifier", _this.identifier, _null, true, true));
      properties.add$1(0, A.StringProperty$("label", _this.label, _null, true, true));
      properties.add$1(0, A.AttributedStringProperty$("attributedLabel", _this.attributedLabel, _null));
      t1 = _this.value;
      properties.add$1(0, A.StringProperty$("value", t1, _null, true, true));
      properties.add$1(0, A.AttributedStringProperty$("attributedValue", _this.attributedValue, _null));
      properties.add$1(0, A.StringProperty$("increasedValue", t1, _null, true, true));
      properties.add$1(0, A.AttributedStringProperty$("attributedIncreasedValue", _this.attributedIncreasedValue, _null));
      properties.add$1(0, A.StringProperty$("decreasedValue", t1, _null, true, true));
      properties.add$1(0, A.AttributedStringProperty$("attributedDecreasedValue", _this.attributedDecreasedValue, _null));
      properties.add$1(0, A.StringProperty$("hint", _this.hint, _null, true, true));
      properties.add$1(0, A.AttributedStringProperty$("attributedHint", _this.attributedHint, _null));
      properties.add$1(0, A.StringProperty$("tooltip", _this.tooltip, _null, true, true));
      properties.add$1(0, A.EnumProperty$("textDirection", _this.textDirection, _null, C.DiagnosticLevel_3, type$.TextDirection));
      properties.add$1(0, A.DiagnosticsProperty$("sortKey", _this.sortKey, true, _null, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.SemanticsSortKey));
      properties.add$1(0, A.DiagnosticsProperty$("hintOverrides", _this.hintOverrides, true, _null, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.SemanticsHintOverrides));
    },
    toStringShort$0() {
      return A.objectRuntimeType(this, "SemanticsProperties");
    }
  };
  A.SemanticsNode.prototype = {
    SemanticsNode$root$3$key$owner$showOnScreen(key, owner, showOnScreen) {
      this.attach$1(owner);
    },
    get$id() {
      return this._id;
    },
    get$transform() {
      return this._semantics$_transform;
    },
    set$transform(value) {
      type$.nullable_Matrix4_2._as(value);
      if (!B.boolConversionCheck(A.MatrixUtils_matrixEquals(this._semantics$_transform, value))) {
        this._semantics$_transform = value == null || B.boolConversionCheck(A.MatrixUtils_isIdentity(value)) ? null : value;
        this._markDirty$0();
      }
    },
    get$rect() {
      return this._semantics$_rect;
    },
    set$rect(value) {
      type$.Rect._as(value);
      if (!B.boolConversionCheck(J.$eq$(this._semantics$_rect, value))) {
        this._semantics$_rect = value;
        this._markDirty$0();
      }
    },
    get$isInvisible() {
      return !B.boolConversionCheck(this.get$isMergedIntoParent()) && B.boolConversionCheck(J.get$isEmpty$asx(this.get$rect()));
    },
    get$isMergedIntoParent() {
      return this.get$parent() != null && B.boolConversionCheck(this._isMergedIntoParent);
    },
    get$areUserActionsBlocked() {
      return this._areUserActionsBlocked;
    },
    get$isPartOfNodeMerging() {
      return B.boolConversionCheck(this.get$mergeAllDescendantsIntoThisNode()) || B.boolConversionCheck(this.get$isMergedIntoParent());
    },
    get$mergeAllDescendantsIntoThisNode() {
      return this._mergeAllDescendantsIntoThisNode;
    },
    _replaceChildren$1(newChildren) {
      var t1, t2, sawChange, t3, t4, i, _this = this;
      type$.List_SemanticsNode._as(newChildren);
      t1 = _this._semantics$_children;
      if (t1 != null)
        for (t1 = J.get$iterator$ax(t1); B.boolConversionCheck(t1.moveNext$0());)
          t1.get$current()._dead = true;
      for (t1 = J.getInterceptor$ax(newChildren), t2 = t1.get$iterator(newChildren); B.boolConversionCheck(t2.moveNext$0());)
        t2.get$current()._dead = false;
      t2 = _this._semantics$_children;
      sawChange = false;
      if (t2 != null)
        for (t2 = J.get$iterator$ax(t2); B.boolConversionCheck(t2.moveNext$0());) {
          t3 = t2.get$current();
          if (B.boolConversionCheck(t3._dead)) {
            if (B.boolConversionCheck(J.$eq$(t3.get$parent(), _this)))
              _this._semantics$_dropChild$1(t3);
            sawChange = true;
          }
        }
      for (t2 = t1.get$iterator(newChildren); B.boolConversionCheck(t2.moveNext$0());) {
        t3 = t2.get$current();
        if (!B.boolConversionCheck(J.$eq$(t3.get$parent(), _this))) {
          if (t3.get$parent() != null) {
            t4 = t3.get$parent();
            if (t4 != null)
              t4._semantics$_dropChild$1(t3);
          }
          _this._adoptChild$1(t3);
          sawChange = true;
        }
      }
      if (!sawChange && _this._semantics$_children != null) {
        i = 0;
        while (true) {
          t2 = _this._semantics$_children;
          t2.toString;
          t2 = J.get$length$asx(t2);
          if (typeof t2 !== "number")
            return B.iae(t2);
          if (!(i < t2))
            break;
          t2 = _this._semantics$_children;
          t2.toString;
          if (!B.boolConversionCheck(J.$eq$(J.$index$asx(t2, i).get$id(), t1.$index(newChildren, i).get$id()))) {
            sawChange = true;
            break;
          }
          ++i;
        }
      }
      _this.set$_semantics$_children(newChildren);
      if (sawChange)
        _this._markDirty$0();
    },
    get$hasChildren() {
      var t1 = this._semantics$_children;
      t1 = t1 == null ? null : J.get$isNotEmpty$asx(t1);
      return t1 == null ? false : t1;
    },
    visitChildren$1(visitor) {
      var t1;
      type$.bool_Function_SemanticsNode._as(visitor);
      t1 = this._semantics$_children;
      if (t1 != null)
        for (t1 = J.get$iterator$ax(t1); B.boolConversionCheck(t1.moveNext$0());)
          if (!B.boolConversionCheck(visitor.call$1(t1.get$current())))
            return;
    },
    _visitDescendants$1(visitor) {
      var t1, t2;
      type$.bool_Function_SemanticsNode._as(visitor);
      t1 = this._semantics$_children;
      if (t1 != null)
        for (t1 = J.get$iterator$ax(t1); B.boolConversionCheck(t1.moveNext$0());) {
          t2 = t1.get$current();
          if (!B.boolConversionCheck(visitor.call$1(t2)) || !B.boolConversionCheck(t2._visitDescendants$1(visitor)))
            return false;
        }
      return true;
    },
    get$owner() {
      return this._semantics$_owner;
    },
    get$attached() {
      return this._semantics$_owner != null;
    },
    get$parent() {
      return this._semantics$_parent;
    },
    get$depth() {
      return this._semantics$_depth;
    },
    _redepthChild$1(child) {
      var t1, t2;
      type$.SemanticsNode._as(child);
      t1 = child._semantics$_depth;
      t2 = this._semantics$_depth;
      if (typeof t1 !== "number")
        return t1.$le();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (t1 <= t2) {
        child.set$_semantics$_depth(t2 + 1);
        child._redepthChildren$0();
      }
    },
    _redepthChildren$0() {
      var t1 = this._semantics$_children;
      if (t1 != null)
        J.forEach$1$ax(t1, this.get$_redepthChild());
    },
    _updateChildMergeFlagRecursively$1(child) {
      var childShouldMergeToParent;
      type$.SemanticsNode._as(child);
      childShouldMergeToParent = this.get$isPartOfNodeMerging();
      if (childShouldMergeToParent === child._isMergedIntoParent)
        return;
      child._isMergedIntoParent = childShouldMergeToParent;
      this._markDirty$0();
      if (!B.boolConversionCheck(child.get$mergeAllDescendantsIntoThisNode()))
        child._updateChildrenMergeFlags$0();
    },
    _updateChildrenMergeFlags$0() {
      var t1 = this._semantics$_children;
      if (t1 != null)
        J.forEach$1$ax(t1, this.get$_updateChildMergeFlagRecursively());
    },
    _adoptChild$1(child) {
      var t1, _this = this;
      type$.SemanticsNode._as(child);
      child._semantics$_parent = _this;
      if (B.boolConversionCheck(_this.get$attached())) {
        t1 = _this._semantics$_owner;
        t1.toString;
        child.attach$1(t1);
      }
      _this._redepthChild$1(child);
      _this._updateChildMergeFlagRecursively$1(child);
    },
    _semantics$_dropChild$1(child) {
      type$.SemanticsNode._as(child);
      child._semantics$_parent = null;
      if (B.boolConversionCheck(this.get$attached()))
        child.detach$0();
    },
    attach$1(owner) {
      var t1, _this = this;
      type$.SemanticsOwner._as(owner);
      _this._semantics$_owner = owner;
      for (t1 = owner._nodes; B.boolConversionCheck(t1.containsKey$1(_this.get$id()));)
        _this.set$_id(A.SemanticsNode__generateNewId());
      J.$indexSet$ax(t1, _this.get$id(), _this);
      J.remove$1$ax(owner._detachedNodes, _this);
      if (B.boolConversionCheck(_this._semantics$_dirty)) {
        _this._semantics$_dirty = false;
        _this._markDirty$0();
      }
      t1 = _this._semantics$_children;
      if (t1 != null)
        for (t1 = J.get$iterator$ax(t1); B.boolConversionCheck(t1.moveNext$0());)
          t1.get$current().attach$1(owner);
    },
    detach$0() {
      var t1, t2, _this = this;
      J.remove$1$ax(_this.get$owner()._nodes, _this.get$id());
      J.add$1$ax(_this.get$owner()._detachedNodes, _this);
      _this._semantics$_owner = null;
      t1 = _this._semantics$_children;
      if (t1 != null)
        for (t1 = J.get$iterator$ax(t1); B.boolConversionCheck(t1.moveNext$0());) {
          t2 = t1.get$current();
          if (B.boolConversionCheck(J.$eq$(t2.get$parent(), _this)))
            t2.detach$0();
        }
      _this._markDirty$0();
    },
    _markDirty$0() {
      var _this = this;
      if (B.boolConversionCheck(_this._semantics$_dirty))
        return;
      _this._semantics$_dirty = true;
      if (B.boolConversionCheck(_this.get$attached()))
        J.add$1$ax(_this.get$owner()._dirtyNodes, _this);
    },
    _isDifferentFromCurrentSemanticAnnotation$1(config) {
      var _this = this;
      type$.SemanticsConfiguration._as(config);
      return !B.boolConversionCheck(J.$eq$(_this._attributedLabel, config.get$attributedLabel())) || !B.boolConversionCheck(J.$eq$(_this._attributedHint, config.get$attributedHint())) || !B.boolConversionCheck(J.$eq$(_this._elevation, config.get$elevation())) || !B.boolConversionCheck(J.$eq$(_this._thickness, config.get$thickness())) || !B.boolConversionCheck(J.$eq$(_this._attributedValue, config.get$attributedValue())) || !B.boolConversionCheck(J.$eq$(_this._attributedIncreasedValue, config.get$attributedIncreasedValue())) || !B.boolConversionCheck(J.$eq$(_this._attributedDecreasedValue, config.get$attributedDecreasedValue())) || !B.boolConversionCheck(J.$eq$(_this._tooltip, config.get$tooltip())) || !B.boolConversionCheck(J.$eq$(_this._flags, config._flags)) || !B.boolConversionCheck(J.$eq$(_this._textDirection, config.get$textDirection())) || !B.boolConversionCheck(J.$eq$(_this._sortKey, config._sortKey)) || !B.boolConversionCheck(J.$eq$(_this._textSelection, config._textSelection)) || !B.boolConversionCheck(J.$eq$(_this._scrollPosition, config._scrollPosition)) || !B.boolConversionCheck(J.$eq$(_this._scrollExtentMax, config._scrollExtentMax)) || !B.boolConversionCheck(J.$eq$(_this._scrollExtentMin, config._scrollExtentMin)) || !B.boolConversionCheck(J.$eq$(_this._actionsAsBits, config._actionsAsBits)) || !B.boolConversionCheck(J.$eq$(_this.indexInParent, config.get$indexInParent())) || !B.boolConversionCheck(J.$eq$(_this.get$platformViewId(), config.get$platformViewId())) || !B.boolConversionCheck(J.$eq$(_this._maxValueLength, config._maxValueLength)) || !B.boolConversionCheck(J.$eq$(_this._currentValueLength, config._currentValueLength)) || !B.boolConversionCheck(J.$eq$(_this._mergeAllDescendantsIntoThisNode, config.get$isMergingSemanticsOfDescendants())) || !B.boolConversionCheck(J.$eq$(_this._areUserActionsBlocked, config.isBlockingUserActions)) || !B.boolConversionCheck(J.$eq$(_this._headingLevel, config._headingLevel));
    },
    get$_effectiveActionsAsBits() {
      var t1 = B.boolConversionCheck(this._areUserActionsBlocked),
        t2 = this._actionsAsBits;
      if (t1) {
        t1 = $.$get$_kUnblockedUserActions();
        if (typeof t2 !== "number")
          return t2.$and();
        if (typeof t1 !== "number")
          return B.iae(t1);
        t1 = (t2 & t1) >>> 0;
      } else
        t1 = t2;
      return t1;
    },
    hasFlag$1(flag) {
      var t1, t2;
      type$.SemanticsFlag._as(flag);
      t1 = this._flags;
      t2 = flag.index;
      if (typeof t1 !== "number")
        return t1.$and();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return (t1 & t2) >>> 0 !== 0;
    },
    get$elevation() {
      return this._elevation;
    },
    get$thickness() {
      return this._thickness;
    },
    get$hintOverrides() {
      return this._hintOverrides;
    },
    get$textDirection() {
      return this._textDirection;
    },
    get$sortKey() {
      return this._sortKey;
    },
    get$scrollChildCount() {
      return this._scrollChildCount;
    },
    get$scrollIndex() {
      return this._scrollIndex;
    },
    get$scrollPosition() {
      return this._scrollPosition;
    },
    get$scrollExtentMax() {
      return this._scrollExtentMax;
    },
    get$scrollExtentMin() {
      return this._scrollExtentMin;
    },
    get$platformViewId() {
      return this._platformViewId;
    },
    get$maxValueLength() {
      return this._maxValueLength;
    },
    get$currentValueLength() {
      return this._currentValueLength;
    },
    _canPerformAction$1(action) {
      type$.SemanticsAction._as(action);
      return this._actions.containsKey$1(action);
    },
    updateWith$2$childrenInInversePaintOrder$config(childrenInInversePaintOrder, config) {
      var t1, _this = this;
      type$.nullable_SemanticsConfiguration._as(config);
      type$.nullable_List_SemanticsNode._as(childrenInInversePaintOrder);
      if (config == null)
        config = $.$get$SemanticsNode__kEmptyConfig();
      if (B.boolConversionCheck(_this._isDifferentFromCurrentSemanticAnnotation$1(config)))
        _this._markDirty$0();
      t1 = B.boolConversionCheck(J.$eq$(_this._mergeAllDescendantsIntoThisNode, config.get$isMergingSemanticsOfDescendants()));
      _this.set$_identifier(config.get$identifier());
      _this.set$_attributedLabel(config.get$attributedLabel());
      _this.set$_attributedValue(config.get$attributedValue());
      _this.set$_attributedIncreasedValue(config.get$attributedIncreasedValue());
      _this.set$_attributedDecreasedValue(config.get$attributedDecreasedValue());
      _this.set$_attributedHint(config.get$attributedHint());
      _this.set$_tooltip(config.get$tooltip());
      _this.set$_hintOverrides(config.get$hintOverrides());
      _this.set$_elevation(config.get$elevation());
      _this.set$_thickness(config.get$thickness());
      _this.set$_flags(config._flags);
      _this.set$_textDirection(config.get$textDirection());
      _this.set$_sortKey(config.get$sortKey());
      _this.set$_actions(E.LinkedHashMap_LinkedHashMap$of(config._actions, type$.SemanticsAction, type$.void_Function_nullable_Object));
      _this.set$_customSemanticsActions(E.LinkedHashMap_LinkedHashMap$of(config._customSemanticsActions, type$.CustomSemanticsAction, type$.void_Function));
      _this.set$_actionsAsBits(config._actionsAsBits);
      _this.set$_textSelection(config._textSelection);
      _this.set$_isMultiline(config.get$isMultiline());
      _this.set$_scrollPosition(config._scrollPosition);
      _this.set$_scrollExtentMax(config._scrollExtentMax);
      _this.set$_scrollExtentMin(config._scrollExtentMin);
      _this.set$_mergeAllDescendantsIntoThisNode(config.get$isMergingSemanticsOfDescendants());
      _this.set$_scrollChildCount(config.get$scrollChildCount());
      _this.set$_scrollIndex(config.get$scrollIndex());
      _this.set$indexInParent(config.get$indexInParent());
      _this.set$_platformViewId(config._platformViewId);
      _this.set$_maxValueLength(config._maxValueLength);
      _this.set$_currentValueLength(config._currentValueLength);
      _this.set$_areUserActionsBlocked(config.isBlockingUserActions);
      _this.set$_headingLevel(config._headingLevel);
      _this._replaceChildren$1(childrenInInversePaintOrder == null ? C.List_empty4 : childrenInInversePaintOrder);
      if (!t1)
        _this._updateChildrenMergeFlags$0();
    },
    updateWith$1$config(config) {
      return this.updateWith$2$childrenInInversePaintOrder$config(null, config);
    },
    getSemanticsData$0() {
      var t1, elevation, customSemanticsActionIds, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, _this = this, _box_0 = {};
      _box_0.flags = _this._flags;
      _box_0.actions = _this._actionsAsBits;
      _box_0.identifier = _this._identifier;
      _box_0.attributedLabel = _this._attributedLabel;
      _box_0.attributedValue = _this._attributedValue;
      _box_0.attributedIncreasedValue = _this._attributedIncreasedValue;
      _box_0.attributedDecreasedValue = _this._attributedDecreasedValue;
      _box_0.attributedHint = _this._attributedHint;
      _box_0.tooltip = _this._tooltip;
      _box_0.textDirection = _this._textDirection;
      t1 = _this.tags;
      _box_0.mergedTags = t1 == null ? null : B.LinkedHashSet_LinkedHashSet$of(t1, type$.SemanticsTag);
      _box_0.textSelection = _this._textSelection;
      _box_0.scrollChildCount = _this._scrollChildCount;
      _box_0.scrollIndex = _this._scrollIndex;
      _box_0.scrollPosition = _this._scrollPosition;
      _box_0.scrollExtentMax = _this._scrollExtentMax;
      _box_0.scrollExtentMin = _this._scrollExtentMin;
      _box_0.platformViewId = _this._platformViewId;
      _box_0.maxValueLength = _this._maxValueLength;
      _box_0.currentValueLength = _this._currentValueLength;
      _box_0.headingLevel = _this._headingLevel;
      elevation = _this._elevation;
      _box_0.thickness = _this._thickness;
      customSemanticsActionIds = B.LinkedHashSet_LinkedHashSet$_empty(type$.int);
      for (t1 = J.get$iterator$ax(_this._customSemanticsActions.get$keys()); B.boolConversionCheck(t1.moveNext$0());)
        customSemanticsActionIds.add$1(0, A.CustomSemanticsAction_getIdentifier(t1.get$current()));
      if (_this.get$hintOverrides() != null) {
        if (_this.get$hintOverrides().onTapHint != null) {
          t1 = _this.get$hintOverrides().onTapHint;
          t1.toString;
          customSemanticsActionIds.add$1(0, A.CustomSemanticsAction_getIdentifier(A.CustomSemanticsAction$overridingAction(C.SemanticsAction_1_tap, t1)));
        }
        if (_this.get$hintOverrides().onLongPressHint != null) {
          t1 = _this.get$hintOverrides().onLongPressHint;
          t1.toString;
          customSemanticsActionIds.add$1(0, A.CustomSemanticsAction_getIdentifier(A.CustomSemanticsAction$overridingAction(C.SemanticsAction_2_longPress, t1)));
        }
      }
      if (B.boolConversionCheck(_this.get$mergeAllDescendantsIntoThisNode()))
        _this._visitDescendants$1(new A.SemanticsNode_getSemanticsData_closure(_box_0, _this, customSemanticsActionIds));
      t1 = _box_0.flags;
      t2 = B.boolConversionCheck(_this._areUserActionsBlocked);
      t3 = _box_0.actions;
      if (t2) {
        t2 = $.$get$_kUnblockedUserActions();
        if (typeof t3 !== "number")
          return t3.$and();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t2 = (t3 & t2) >>> 0;
      } else
        t2 = t3;
      t3 = _box_0.identifier;
      t4 = _box_0.attributedLabel;
      t5 = _box_0.attributedValue;
      t6 = _box_0.attributedIncreasedValue;
      t7 = _box_0.attributedDecreasedValue;
      t8 = _box_0.attributedHint;
      t9 = _box_0.tooltip;
      t10 = _box_0.textDirection;
      t11 = _this.get$rect();
      t12 = _this.get$transform();
      t13 = _box_0.thickness;
      t14 = _box_0.mergedTags;
      t15 = _box_0.textSelection;
      t16 = _box_0.scrollChildCount;
      t17 = _box_0.scrollIndex;
      t18 = _box_0.scrollPosition;
      t19 = _box_0.scrollExtentMax;
      t20 = _box_0.scrollExtentMin;
      t21 = _box_0.platformViewId;
      t22 = _box_0.maxValueLength;
      t23 = _box_0.currentValueLength;
      t24 = customSemanticsActionIds.toList$0(0);
      J.sort$0$ax(t24);
      return A.SemanticsData$(t2, t7, t8, t6, t4, t5, t23, t24, elevation, t1, _box_0.headingLevel, t3, t22, t21, t11, t16, t19, t20, t17, t18, t14, t10, t15, t13, t9, t12);
    },
    _addToUpdate$2(builder, customSemanticsActionIdsUpdate) {
      var data, childrenInTraversalOrder, childrenInHitTestOrder, t1, childCount, sortedChildren, i, t2, customSemanticsActionIds, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, _this = this;
      type$.SemanticsUpdateBuilder._as(builder);
      type$.Set_int._as(customSemanticsActionIdsUpdate);
      data = _this.getSemanticsData$0();
      if (!B.boolConversionCheck(_this.get$hasChildren()) || B.boolConversionCheck(_this.get$mergeAllDescendantsIntoThisNode())) {
        childrenInTraversalOrder = $.$get$SemanticsNode__kEmptyChildList();
        childrenInHitTestOrder = childrenInTraversalOrder;
      } else {
        t1 = _this._semantics$_children;
        t1.toString;
        childCount = J.get$length$asx(t1);
        sortedChildren = _this._semantics$_childrenInTraversalOrder$0();
        childrenInTraversalOrder = A.NativeInt32List_NativeInt32List(childCount);
        for (t1 = J.getInterceptor$asx(sortedChildren), i = 0; i < childCount; ++i)
          D.NativeInt32List_methods.$indexSet(childrenInTraversalOrder, i, t1.$index(sortedChildren, i).get$id());
        childrenInHitTestOrder = A.NativeInt32List_NativeInt32List(childCount);
        for (i = childCount - 1; i >= 0; --i) {
          t1 = _this._semantics$_children;
          t1.toString;
          D.NativeInt32List_methods.$indexSet(childrenInHitTestOrder, i, J.$index$asx(t1, childCount - i - 1).get$id());
        }
      }
      t1 = data.customSemanticsActionIds;
      t2 = t1 == null ? null : J.get$isNotEmpty$asx(t1);
      if (B.boolConversionCheck(t2 == null ? false : t2)) {
        t1.toString;
        t2 = J.getInterceptor$asx(t1);
        customSemanticsActionIds = A.NativeInt32List_NativeInt32List(t2.get$length(t1));
        t3 = customSemanticsActionIds && D.NativeInt32List_methods;
        i = 0;
        while (true) {
          t4 = t2.get$length(t1);
          if (typeof t4 !== "number")
            return B.iae(t4);
          if (!(i < t4))
            break;
          t3.$indexSet(customSemanticsActionIds, i, t2.$index(t1, i));
          customSemanticsActionIdsUpdate.add$1(0, t2.$index(t1, i));
          ++i;
        }
      } else
        customSemanticsActionIds = null;
      t1 = _this.get$id();
      t2 = data.flags;
      t3 = data.actions;
      t4 = data.rect;
      t5 = data.identifier;
      t6 = data.attributedLabel;
      t7 = t6.string;
      t6 = t6.attributes;
      t8 = data.attributedValue;
      t9 = t8.string;
      t8 = t8.attributes;
      t10 = data.attributedIncreasedValue;
      t11 = t10.string;
      t10 = t10.attributes;
      t12 = data.attributedDecreasedValue;
      t13 = t12.string;
      t12 = t12.attributes;
      t14 = data.attributedHint;
      t15 = t14.string;
      t14 = t14.attributes;
      t16 = data.tooltip;
      t17 = data.textDirection;
      t18 = data.textSelection;
      t19 = t18 != null;
      t20 = t19 ? t18.baseOffset : -1;
      t18 = t19 ? t18.extentOffset : -1;
      t19 = data.platformViewId;
      if (t19 == null)
        t19 = -1;
      t21 = data.maxValueLength;
      if (t21 == null)
        t21 = -1;
      t22 = data.currentValueLength;
      if (t22 == null)
        t22 = -1;
      t23 = data.scrollChildCount;
      if (t23 == null)
        t23 = 0;
      t24 = data.scrollIndex;
      if (t24 == null)
        t24 = 0;
      t25 = data.scrollPosition;
      if (t25 == null)
        t25 = 0 / 0;
      t26 = data.scrollExtentMax;
      if (t26 == null)
        t26 = 0 / 0;
      t27 = data.scrollExtentMin;
      if (t27 == null)
        t27 = 0 / 0;
      t28 = data.transform;
      t28 = t28 == null ? null : t28.get$storage();
      if (t28 == null)
        t28 = $.$get$SemanticsNode__kIdentityTransform();
      t29 = data.elevation;
      t30 = data.thickness;
      t31 = customSemanticsActionIds == null ? $.$get$SemanticsNode__kEmptyCustomSemanticsActionsList() : customSemanticsActionIds;
      builder.updateNode$34$actions$additionalActions$childrenInHitTestOrder$childrenInTraversalOrder$currentValueLength$decreasedValue$decreasedValueAttributes$elevation$flags$headingLevel$hint$hintAttributes$id$identifier$increasedValue$increasedValueAttributes$label$labelAttributes$maxValueLength$platformViewId$rect$scrollChildren$scrollExtentMax$scrollExtentMin$scrollIndex$scrollPosition$textDirection$textSelectionBase$textSelectionExtent$thickness$tooltip$transform$value$valueAttributes(t3, t31, childrenInHitTestOrder, childrenInTraversalOrder, t22, t13, t12, t29, t2, data.headingLevel, t15, t14, t1, t5, t11, t10, t7, t6, t21, t19, t4, t23, t26, t27, t24, t25, t17, t20, t18, t30, t16, t28, t9, t8);
      _this._semantics$_dirty = false;
    },
    _semantics$_childrenInTraversalOrder$0() {
      var t1, childrenInDefaultOrder, everythingSorted, sortNodes, lastSortKey, position, t2, child, sortKey, isCompatibleWithPreviousSortKey,
        inheritedTextDirection = this.get$textDirection(),
        ancestor = this.get$parent();
      while (true) {
        t1 = inheritedTextDirection == null;
        if (!(t1 && ancestor != null))
          break;
        inheritedTextDirection = ancestor.get$textDirection();
        ancestor = ancestor.get$parent();
      }
      childrenInDefaultOrder = this._semantics$_children;
      if (!t1) {
        childrenInDefaultOrder.toString;
        childrenInDefaultOrder = A._childrenInDefaultOrder(childrenInDefaultOrder, inheritedTextDirection);
      }
      t1 = type$.JSArray__TraversalSortNode;
      everythingSorted = B._setArrayType([], t1);
      sortNodes = B._setArrayType([], t1);
      childrenInDefaultOrder.toString;
      t1 = J.getInterceptor$asx(childrenInDefaultOrder);
      lastSortKey = null;
      position = 0;
      while (true) {
        t2 = t1.get$length(childrenInDefaultOrder);
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (!(position < t2))
          break;
        child = t1.$index(childrenInDefaultOrder, position);
        sortKey = child.get$sortKey();
        lastSortKey = position > 0 ? t1.$index(childrenInDefaultOrder, position - 1).get$sortKey() : null;
        if (position !== 0)
          if (B.boolConversionCheck(J.$eq$(J.get$runtimeType$(sortKey), J.get$runtimeType$(lastSortKey)))) {
            t2 = sortKey == null || B.boolConversionCheck(J.$eq$(sortKey.name, lastSortKey.name));
            isCompatibleWithPreviousSortKey = t2;
          } else
            isCompatibleWithPreviousSortKey = false;
        else
          isCompatibleWithPreviousSortKey = true;
        if (!isCompatibleWithPreviousSortKey && B.boolConversionCheck(D.JSArray_methods.get$isNotEmpty(sortNodes))) {
          if (lastSortKey != null)
            D.JSArray_methods.sort$0(sortNodes);
          D.JSArray_methods.addAll$1(everythingSorted, sortNodes);
          D.JSArray_methods.clear$0(sortNodes);
        }
        D.JSArray_methods.add$1(sortNodes, A._TraversalSortNode$(child, position, sortKey));
        ++position;
      }
      if (lastSortKey != null)
        D.JSArray_methods.sort$0(sortNodes);
      D.JSArray_methods.addAll$1(everythingSorted, sortNodes);
      return J.toList$0$ax(D.JSArray_methods.map$1$1(everythingSorted, new A.SemanticsNode__childrenInTraversalOrder_closure(), type$.SemanticsNode));
    },
    sendEvent$1($event) {
      type$.SemanticsEvent._as($event);
      if (!B.boolConversionCheck(this.get$attached()))
        return;
      C.BasicMessageChannel_EyN.send$1($event.toMap$1$nodeId(this.get$id()));
    },
    _debugIsActionBlocked$1(action) {
      type$.SemanticsAction._as(action);
      return false;
    },
    toStringShort$0() {
      return B.S(A.objectRuntimeType(this, "SemanticsNode")) + "#" + B.S(this.get$id());
    },
    debugFillProperties$1(properties) {
      var inDirtyNodes, hideOwner, t1, t2, offset, scale, description, matrix, actions, customSemanticsActions, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$DiagnosticableTreeMixin$debugFillProperties(properties);
      if (B.boolConversionCheck(_this._semantics$_dirty)) {
        inDirtyNodes = _this.get$owner() != null && B.boolConversionCheck(J.contains$1$asx(_this.get$owner()._dirtyNodes, _this));
        properties.add$1(0, A.FlagProperty$("inDirtyNodes", _null, "STALE", "dirty", C.DiagnosticLevel_3, false, inDirtyNodes));
        hideOwner = inDirtyNodes;
      } else
        hideOwner = true;
      t1 = _this.get$owner();
      t2 = hideOwner ? C.DiagnosticLevel_0 : C.DiagnosticLevel_3;
      properties.add$1(0, A.DiagnosticsProperty$("owner", t1, true, C.C__NoDefaultValue, _null, _null, _null, t2, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.SemanticsOwner));
      properties.add$1(0, A.FlagProperty$("isMergedIntoParent", _null, _null, "merged up \u2b06\ufe0f", C.DiagnosticLevel_3, false, _this.get$isMergedIntoParent()));
      properties.add$1(0, A.FlagProperty$("mergeAllDescendantsIntoThisNode", _null, _null, "merge boundary \u26d4\ufe0f", C.DiagnosticLevel_3, false, _this.get$mergeAllDescendantsIntoThisNode()));
      if (_this.get$transform() != null) {
        t1 = _this.get$transform();
        t1.toString;
        offset = A.MatrixUtils_getAsTranslation(t1);
      } else
        offset = _null;
      if (offset != null)
        properties.add$1(0, A.DiagnosticsProperty$("rect", _this.get$rect().shift$1(offset), true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, false, true, C.DiagnosticsTreeStyle_8, _null, type$.Rect));
      else {
        if (_this.get$transform() != null) {
          t1 = _this.get$transform();
          t1.toString;
          scale = A.MatrixUtils_getAsScale(t1);
        } else
          scale = _null;
        if (scale != null)
          description = B.S(_this.get$rect()) + " scaled by " + B.S(D.JSNumber_methods.toStringAsFixed$1(scale, 1)) + "x";
        else {
          if (_this.get$transform() != null) {
            t1 = _this.get$transform();
            t1.toString;
            t1 = !B.boolConversionCheck(A.MatrixUtils_isIdentity(t1));
          } else
            t1 = false;
          if (t1) {
            matrix = J.join$1$ax(J.map$1$1$ax(J.take$1$ax(J.split$1$s(J.toString$0$(_this.get$transform()), "\n"), 4), new A.SemanticsNode_debugFillProperties_closure(), type$.String), "; ");
            description = B.S(_this.get$rect()) + " with transform [" + matrix + "]";
          } else
            description = _null;
        }
        properties.add$1(0, A.DiagnosticsProperty$("rect", _this.get$rect(), true, C.C__NoDefaultValue, description, _null, _null, C.DiagnosticLevel_3, false, false, true, C.DiagnosticsTreeStyle_8, _null, type$.Rect));
      }
      t1 = _this.tags;
      t1 = t1 == null ? _null : J.map$1$1$ax(t1, new A.SemanticsNode_debugFillProperties_closure0(), type$.String);
      t2 = type$.String;
      properties.add$1(0, A.IterableProperty$("tags", t1, _null, "[]", C.DiagnosticLevel_3, C.DiagnosticsTreeStyle_8, t2));
      actions = J.toList$0$ax(J.map$1$1$ax(_this._actions.get$keys(), new A.SemanticsNode_debugFillProperties_closure1(_this), t2));
      J.sort$0$ax(actions);
      t1 = type$.nullable_String;
      customSemanticsActions = J.toList$0$ax(J.map$1$1$ax(_this._customSemanticsActions.get$keys(), new A.SemanticsNode_debugFillProperties_closure2(), t1));
      properties.add$1(0, A.IterableProperty$("actions", actions, C.C__NoDefaultValue, _null, C.DiagnosticLevel_3, C.DiagnosticsTreeStyle_8, t2));
      properties.add$1(0, A.IterableProperty$("customActions", customSemanticsActions, C.C__NoDefaultValue, _null, C.DiagnosticLevel_3, C.DiagnosticsTreeStyle_8, t1));
      properties.add$1(0, A.IterableProperty$("flags", J.toList$0$ax(J.map$1$1$ax(J.where$1$ax(A.SemanticsFlag_values(), new A.SemanticsNode_debugFillProperties_closure3(_this)), new A.SemanticsNode_debugFillProperties_closure4(), t2)), C.C__NoDefaultValue, _null, C.DiagnosticLevel_3, C.DiagnosticsTreeStyle_8, t2));
      properties.add$1(0, A.FlagProperty$("isInvisible", _null, _null, "invisible", C.DiagnosticLevel_3, false, _this.get$isInvisible()));
      properties.add$1(0, A.FlagProperty$("isHidden", _null, _null, "HIDDEN", C.DiagnosticLevel_3, false, _this.hasFlag$1(C.SemanticsFlag_8192_isHidden)));
      properties.add$1(0, A.StringProperty$("identifier", _this._identifier, "", true, true));
      properties.add$1(0, A.AttributedStringProperty$("label", _this._attributedLabel, C.C__NoDefaultValue));
      properties.add$1(0, A.AttributedStringProperty$("value", _this._attributedValue, C.C__NoDefaultValue));
      properties.add$1(0, A.AttributedStringProperty$("increasedValue", _this._attributedIncreasedValue, C.C__NoDefaultValue));
      properties.add$1(0, A.AttributedStringProperty$("decreasedValue", _this._attributedDecreasedValue, C.C__NoDefaultValue));
      properties.add$1(0, A.AttributedStringProperty$("hint", _this._attributedHint, C.C__NoDefaultValue));
      properties.add$1(0, A.StringProperty$("tooltip", _this._tooltip, "", true, true));
      properties.add$1(0, A.EnumProperty$("textDirection", _this._textDirection, _null, C.DiagnosticLevel_3, type$.TextDirection));
      properties.add$1(0, A.DiagnosticsProperty$("sortKey", _this.get$sortKey(), true, _null, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.SemanticsSortKey));
      t1 = _this._textSelection;
      t1 = t1 == null ? _null : t1.get$isValid();
      if (B.boolConversionCheck(t1 == null ? false : t1))
        properties.add$1(0, A.MessageProperty$("text selection", "[" + B.S(_this._textSelection.start) + ", " + B.S(_this._textSelection.end) + "]", C.DiagnosticLevel_3));
      properties.add$1(0, A.IntProperty$("platformViewId", _this.get$platformViewId(), _null, _null, C.DiagnosticLevel_3, _null));
      properties.add$1(0, A.IntProperty$("maxValueLength", _this.get$maxValueLength(), _null, _null, C.DiagnosticLevel_3, _null));
      properties.add$1(0, A.IntProperty$("currentValueLength", _this.get$currentValueLength(), _null, _null, C.DiagnosticLevel_3, _null));
      properties.add$1(0, A.IntProperty$("scrollChildren", _this.get$scrollChildCount(), _null, _null, C.DiagnosticLevel_3, _null));
      properties.add$1(0, A.IntProperty$("scrollIndex", _this.get$scrollIndex(), _null, _null, C.DiagnosticLevel_3, _null));
      properties.add$1(0, A.DoubleProperty$("scrollExtentMin", _this.get$scrollExtentMin(), _null, _null, C.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.DoubleProperty$("scrollPosition", _this.get$scrollPosition(), _null, _null, C.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.DoubleProperty$("scrollExtentMax", _this.get$scrollExtentMax(), _null, _null, C.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.IntProperty$("indexInParent", _this.indexInParent, _null, _null, C.DiagnosticLevel_3, _null));
      properties.add$1(0, A.DoubleProperty$("elevation", _this.get$elevation(), 0, _null, C.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.DoubleProperty$("thickness", _this.get$thickness(), 0, _null, C.DiagnosticLevel_3, _null, _null));
    },
    toStringDeep$1$childOrder(childOrder) {
      return this.toDiagnosticsNode$1$childOrder(type$.DebugSemanticsDumpOrder._as(childOrder)).toStringDeep$3$minLevel$prefixLineOne$prefixOtherLines(C.DiagnosticLevel_2, "", null);
    },
    toDiagnosticsNode$3$childOrder$name$style(childOrder, $name, style) {
      B._asStringQ($name);
      type$.nullable_DiagnosticsTreeStyle._as(style);
      return A._SemanticsDiagnosticableNode$(type$.DebugSemanticsDumpOrder._as(childOrder), $name, style, this);
    },
    toDiagnosticsNode$1$style(style) {
      return this.toDiagnosticsNode$3$childOrder$name$style(C.DebugSemanticsDumpOrder_1, null, style);
    },
    toDiagnosticsNode$0() {
      return this.toDiagnosticsNode$3$childOrder$name$style(C.DebugSemanticsDumpOrder_1, null, C.DiagnosticsTreeStyle_1);
    },
    toDiagnosticsNode$1$childOrder(childOrder) {
      return this.toDiagnosticsNode$3$childOrder$name$style(childOrder, null, C.DiagnosticsTreeStyle_1);
    },
    debugDescribeChildren$1$childOrder(childOrder) {
      type$.DebugSemanticsDumpOrder._as(childOrder);
      return J.toList$0$ax(J.map$1$1$ax(this.debugListChildrenInOrder$1(childOrder), new A.SemanticsNode_debugDescribeChildren_closure(childOrder), type$.DiagnosticsNode));
    },
    debugDescribeChildren$0() {
      return this.debugDescribeChildren$1$childOrder(C.DebugSemanticsDumpOrder_0);
    },
    debugListChildrenInOrder$1(childOrder) {
      var t1;
      type$.DebugSemanticsDumpOrder._as(childOrder);
      t1 = this._semantics$_children;
      if (t1 == null)
        return C.List_empty4;
      switch (childOrder.index) {
        case 0:
          break;
        case 1:
          t1 = this._semantics$_childrenInTraversalOrder$0();
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    set$_id(_id) {
      this._id = B._asInt(_id);
    },
    set$parentSemanticsClipRect(parentSemanticsClipRect) {
      this.parentSemanticsClipRect = type$.nullable_Rect._as(parentSemanticsClipRect);
    },
    set$parentPaintClipRect(parentPaintClipRect) {
      this.parentPaintClipRect = type$.nullable_Rect._as(parentPaintClipRect);
    },
    set$indexInParent(indexInParent) {
      this.indexInParent = B._asIntQ(indexInParent);
    },
    set$_areUserActionsBlocked(_areUserActionsBlocked) {
      this._areUserActionsBlocked = B._asBool(_areUserActionsBlocked);
    },
    set$_mergeAllDescendantsIntoThisNode(_mergeAllDescendantsIntoThisNode) {
      this._mergeAllDescendantsIntoThisNode = B._asBool(_mergeAllDescendantsIntoThisNode);
    },
    set$_semantics$_children(_children) {
      this._semantics$_children = type$.nullable_List_SemanticsNode._as(_children);
    },
    set$_semantics$_depth(_depth) {
      this._semantics$_depth = B._asInt(_depth);
    },
    set$_actions(_actions) {
      this._actions = type$.Map_of_SemanticsAction_and_void_Function_nullable_Object._as(_actions);
    },
    set$_customSemanticsActions(_customSemanticsActions) {
      this._customSemanticsActions = type$.Map_of_CustomSemanticsAction_and_void_Function._as(_customSemanticsActions);
    },
    set$_actionsAsBits(_actionsAsBits) {
      this._actionsAsBits = B._asInt(_actionsAsBits);
    },
    set$tags(tags) {
      this.tags = type$.nullable_Set_SemanticsTag._as(tags);
    },
    set$_flags(_flags) {
      this._flags = B._asInt(_flags);
    },
    set$_identifier(_identifier) {
      this._identifier = B._asString(_identifier);
    },
    set$_attributedLabel(_attributedLabel) {
      this._attributedLabel = type$.AttributedString._as(_attributedLabel);
    },
    set$_attributedValue(_attributedValue) {
      this._attributedValue = type$.AttributedString._as(_attributedValue);
    },
    set$_attributedIncreasedValue(_attributedIncreasedValue) {
      this._attributedIncreasedValue = type$.AttributedString._as(_attributedIncreasedValue);
    },
    set$_attributedDecreasedValue(_attributedDecreasedValue) {
      this._attributedDecreasedValue = type$.AttributedString._as(_attributedDecreasedValue);
    },
    set$_attributedHint(_attributedHint) {
      this._attributedHint = type$.AttributedString._as(_attributedHint);
    },
    set$_tooltip(_tooltip) {
      this._tooltip = B._asString(_tooltip);
    },
    set$_elevation(_elevation) {
      this._elevation = B._asDouble(_elevation);
    },
    set$_thickness(_thickness) {
      this._thickness = B._asDouble(_thickness);
    },
    set$_hintOverrides(_hintOverrides) {
      this._hintOverrides = type$.nullable_SemanticsHintOverrides._as(_hintOverrides);
    },
    set$_textDirection(_textDirection) {
      this._textDirection = type$.nullable_TextDirection._as(_textDirection);
    },
    set$_sortKey(_sortKey) {
      this._sortKey = type$.nullable_SemanticsSortKey._as(_sortKey);
    },
    set$_textSelection(_textSelection) {
      this._textSelection = type$.nullable_TextSelection._as(_textSelection);
    },
    set$_isMultiline(_isMultiline) {
      B._asBoolQ(_isMultiline);
    },
    set$_scrollChildCount(_scrollChildCount) {
      this._scrollChildCount = B._asIntQ(_scrollChildCount);
    },
    set$_scrollIndex(_scrollIndex) {
      this._scrollIndex = B._asIntQ(_scrollIndex);
    },
    set$_scrollPosition(_scrollPosition) {
      this._scrollPosition = B._asDoubleQ(_scrollPosition);
    },
    set$_scrollExtentMax(_scrollExtentMax) {
      this._scrollExtentMax = B._asDoubleQ(_scrollExtentMax);
    },
    set$_scrollExtentMin(_scrollExtentMin) {
      this._scrollExtentMin = B._asDoubleQ(_scrollExtentMin);
    },
    set$_platformViewId(_platformViewId) {
      this._platformViewId = B._asIntQ(_platformViewId);
    },
    set$_maxValueLength(_maxValueLength) {
      this._maxValueLength = B._asIntQ(_maxValueLength);
    },
    set$_currentValueLength(_currentValueLength) {
      this._currentValueLength = B._asIntQ(_currentValueLength);
    },
    set$_headingLevel(_headingLevel) {
      this._headingLevel = B._asInt(_headingLevel);
    },
    $isDiagnosticable: 1,
    $isDiagnosticableTree: 1,
    $isDiagnosticableTreeMixin: 1,
    $is_DiagnosticableTree_Object_Diagnosticable: 1
  };
  A._BoxEdge.prototype = {
    compareTo$1(_, other) {
      return J.compareTo$1$ns(this.offset, type$._BoxEdge._as(other).offset);
    },
    $isComparable: 1
  };
  A._SemanticsSortGroup.prototype = {
    compareTo$1(_, other) {
      return J.compareTo$1$ns(this.startOffset, type$._SemanticsSortGroup._as(other).startOffset);
    },
    sortedWithinVerticalGroup$0() {
      var t1, t2, childRect, horizontalGroups, group, depth, t3,
        edges = B._setArrayType([], type$.JSArray__BoxEdge);
      for (t1 = J.get$iterator$ax(this.nodes); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        childRect = t2.get$rect().deflate$1(0.1);
        D.JSArray_methods.add$1(edges, A._BoxEdge$(true, t2, A._pointInParentCoordinates(t2, childRect.get$topLeft()).get$dx()));
        D.JSArray_methods.add$1(edges, A._BoxEdge$(false, t2, A._pointInParentCoordinates(t2, childRect.get$bottomRight()).get$dx()));
      }
      D.JSArray_methods.sort$0(edges);
      horizontalGroups = B._setArrayType([], type$.JSArray__SemanticsSortGroup);
      for (t1 = D.JSArray_methods.get$iterator(edges), t2 = this.textDirection, group = null, depth = 0; B.boolConversionCheck(t1.moveNext$0());) {
        t3 = t1.get$current();
        if (B.boolConversionCheck(t3.isLeadingEdge)) {
          ++depth;
          if (group == null)
            group = A._SemanticsSortGroup$(t3.offset, t2);
          J.add$1$ax(group.nodes, t3.node);
        } else
          --depth;
        if (depth === 0) {
          group.toString;
          D.JSArray_methods.add$1(horizontalGroups, group);
          group = null;
        }
      }
      D.JSArray_methods.sort$0(horizontalGroups);
      if (B.boolConversionCheck(J.$eq$(t2, C.TextDirection_0)))
        horizontalGroups = J.toList$0$ax(D.JSArray_methods.get$reversed(horizontalGroups));
      return J.toList$0$ax(J.expand$1$1$ax(horizontalGroups, new A._SemanticsSortGroup_sortedWithinVerticalGroup_closure(), type$.SemanticsNode));
    },
    sortedWithinKnot$0() {
      var t4, nodeMap, edges, t5, t6, t7, t8, center, t9, t10, direction, isLtrAndForward, isRtlAndForward, sortedIds, visitedIds, startNodes,
        t1 = this.nodes,
        t2 = J.getInterceptor$asx(t1),
        t3 = t2.get$length(t1);
      if (typeof t3 !== "number")
        return t3.$le();
      if (t3 <= 1)
        return t1;
      t3 = type$.int;
      t4 = type$.SemanticsNode;
      nodeMap = B.LinkedHashMap_LinkedHashMap$_empty(t3, t4);
      edges = B.LinkedHashMap_LinkedHashMap$_empty(t3, t3);
      for (t5 = t2.get$iterator(t1), t6 = this.textDirection, t7 = J.getInterceptor$(t6); B.boolConversionCheck(t5.moveNext$0());) {
        t8 = t5.get$current();
        nodeMap.$indexSet(0, t8.get$id(), t8);
        center = A._pointInParentCoordinates(t8, t8.get$rect().get$center());
        for (t9 = t2.get$iterator(t1); B.boolConversionCheck(t9.moveNext$0());) {
          t10 = t9.get$current();
          if (t8 === t10 || B.boolConversionCheck(J.$eq$(edges.$index(0, t10.get$id()), t8.get$id())))
            continue;
          direction = A._pointInParentCoordinates(t10, t10.get$rect().get$center()).$sub(0, center).get$direction();
          isLtrAndForward = B.boolConversionCheck(t7.$eq(t6, C.TextDirection_1)) && -0.7853981633974483 < direction && direction < 2.356194490192345;
          if (B.boolConversionCheck(t7.$eq(t6, C.TextDirection_0)))
            isRtlAndForward = direction < -2.356194490192345 || direction > 2.356194490192345;
          else
            isRtlAndForward = false;
          if (isLtrAndForward || isRtlAndForward)
            edges.$indexSet(0, t8.get$id(), t10.get$id());
        }
      }
      sortedIds = B._setArrayType([], type$.JSArray_int);
      visitedIds = B.LinkedHashSet_LinkedHashSet$_empty(t3);
      startNodes = t2.toList$0(t1);
      t1 = J.getInterceptor$ax(startNodes);
      t1.sort$1(startNodes, new A._SemanticsSortGroup_sortedWithinKnot_closure());
      J.forEach$1$ax(t1.map$1$1(startNodes, new A._SemanticsSortGroup_sortedWithinKnot_closure0(), t3), new A._SemanticsSortGroup_sortedWithinKnot_search(visitedIds, edges, sortedIds));
      return J.toList$0$ax(J.get$reversed$ax(J.toList$0$ax(D.JSArray_methods.map$1$1(sortedIds, new A._SemanticsSortGroup_sortedWithinKnot_closure1(nodeMap), t4))));
    },
    $isComparable: 1
  };
  A._TraversalSortNode.prototype = {
    compareTo$1(_, other) {
      var t1, t2;
      type$._TraversalSortNode._as(other);
      t1 = this.sortKey;
      if (t1 == null || other.sortKey == null) {
        t1 = this.position;
        t2 = other.position;
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return B.iae(t2);
        return t1 - t2;
      }
      t1.toString;
      t2 = other.sortKey;
      t2.toString;
      return J.compareTo$1$ns(t1, t2);
    },
    $isComparable: 1
  };
  A.SemanticsConfiguration.prototype = {
    get$isSemanticBoundary() {
      return this._isSemanticBoundary;
    },
    set$isSemanticBoundary(value) {
      this._isSemanticBoundary = B._asBool(value);
    },
    get$hasBeenAnnotated() {
      return this._hasBeenAnnotated;
    },
    get$_effectiveActionsAsBits() {
      var t1 = B.boolConversionCheck(this.isBlockingUserActions),
        t2 = this._actionsAsBits;
      if (t1) {
        t1 = $.$get$_kUnblockedUserActions();
        if (typeof t2 !== "number")
          return t2.$and();
        if (typeof t1 !== "number")
          return B.iae(t1);
        t1 = (t2 & t1) >>> 0;
      } else
        t1 = t2;
      return t1;
    },
    _addAction$2(action, handler) {
      var t1, t2, _this = this;
      type$.SemanticsAction._as(action);
      J.$indexSet$ax(_this._actions, action, type$.void_Function_nullable_Object._as(handler));
      t1 = _this._actionsAsBits;
      t2 = action.index;
      if (typeof t1 !== "number")
        return t1.$or();
      if (typeof t2 !== "number")
        return B.iae(t2);
      _this._actionsAsBits = (t1 | t2) >>> 0;
      _this._hasBeenAnnotated = true;
    },
    _addArgumentlessAction$2(action, handler) {
      this._addAction$2(type$.SemanticsAction._as(action), new A.SemanticsConfiguration__addArgumentlessAction_closure(type$.void_Function._as(handler)));
    },
    set$onTap(value) {
      type$.nullable_void_Function._as(value);
      value.toString;
      this._addArgumentlessAction$2(C.SemanticsAction_1_tap, value);
      this.set$_onTap(value);
    },
    set$onLongPress(value) {
      type$.nullable_void_Function._as(value);
      value.toString;
      this._addArgumentlessAction$2(C.SemanticsAction_2_longPress, value);
      this.set$_onLongPress(value);
    },
    set$onScrollLeft(value) {
      type$.nullable_void_Function._as(value);
      value.toString;
      this._addArgumentlessAction$2(C.SemanticsAction_4_scrollLeft, value);
      this.set$_onScrollLeft(value);
    },
    set$onDismiss(value) {
      type$.nullable_void_Function._as(value);
      value.toString;
      this._addArgumentlessAction$2(C.SemanticsAction_262144_dismiss, value);
      this.set$_onDismiss(value);
    },
    set$onScrollRight(value) {
      type$.nullable_void_Function._as(value);
      value.toString;
      this._addArgumentlessAction$2(C.SemanticsAction_8_scrollRight, value);
      this.set$_onScrollRight(value);
    },
    set$onScrollUp(value) {
      type$.nullable_void_Function._as(value);
      value.toString;
      this._addArgumentlessAction$2(C.SemanticsAction_16_scrollUp, value);
      this.set$_onScrollUp(value);
    },
    set$onScrollDown(value) {
      type$.nullable_void_Function._as(value);
      value.toString;
      this._addArgumentlessAction$2(C.SemanticsAction_32_scrollDown, value);
      this.set$_onScrollDown(value);
    },
    set$onIncrease(value) {
      type$.nullable_void_Function._as(value);
      value.toString;
      this._addArgumentlessAction$2(C.SemanticsAction_64_increase, value);
      this.set$_onIncrease(value);
    },
    set$onDecrease(value) {
      type$.nullable_void_Function._as(value);
      value.toString;
      this._addArgumentlessAction$2(C.SemanticsAction_128_decrease, value);
      this.set$_onDecrease(value);
    },
    set$onCopy(value) {
      type$.nullable_void_Function._as(value);
      value.toString;
      this._addArgumentlessAction$2(C.SemanticsAction_4096_copy, value);
      this.set$_onCopy(value);
    },
    set$onCut(value) {
      type$.nullable_void_Function._as(value);
      value.toString;
      this._addArgumentlessAction$2(C.SemanticsAction_8192_cut, value);
      this.set$_onCut(value);
    },
    set$onPaste(value) {
      type$.nullable_void_Function._as(value);
      value.toString;
      this._addArgumentlessAction$2(C.SemanticsAction_16384_paste, value);
      this.set$_onPaste(value);
    },
    set$onMoveCursorForwardByCharacter(value) {
      type$.nullable_void_Function_bool._as(value);
      this._addAction$2(C.SemanticsAction_512_moveCursorForwardByCharacter, new A.SemanticsConfiguration_onMoveCursorForwardByCharacter_closure(value));
      this.set$_onMoveCursorForwardByCharacter(value);
    },
    set$onMoveCursorBackwardByCharacter(value) {
      type$.nullable_void_Function_bool._as(value);
      this._addAction$2(C.SemanticsAction_A5q, new A.SemanticsConfiguration_onMoveCursorBackwardByCharacter_closure(value));
      this.set$_onMoveCursorBackwardByCharacter(value);
    },
    set$onSetSelection(value) {
      type$.nullable_void_Function_TextSelection._as(value);
      this._addAction$2(C.SemanticsAction_2048_setSelection, new A.SemanticsConfiguration_onSetSelection_closure(value));
      this.set$_onSetSelection(value);
    },
    set$onSetText(value) {
      type$.nullable_void_Function_String._as(value);
      this._addAction$2(C.SemanticsAction_2097152_setText, new A.SemanticsConfiguration_onSetText_closure(value));
      this.set$_onSetText(value);
    },
    set$onDidGainAccessibilityFocus(value) {
      type$.nullable_void_Function._as(value);
      value.toString;
      this._addArgumentlessAction$2(C.SemanticsAction_32768_didGainAccessibilityFocus, value);
      this.set$_onDidGainAccessibilityFocus(value);
    },
    set$onDidLoseAccessibilityFocus(value) {
      type$.nullable_void_Function._as(value);
      value.toString;
      this._addArgumentlessAction$2(C.SemanticsAction_65536_didLoseAccessibilityFocus, value);
      this.set$_onDidLoseAccessibilityFocus(value);
    },
    set$onFocus(value) {
      type$.nullable_void_Function._as(value);
      value.toString;
      this._addArgumentlessAction$2(C.SemanticsAction_4194304_focus, value);
      this.set$_onFocus(value);
    },
    get$childConfigurationsDelegate() {
      return this._childConfigurationsDelegate;
    },
    get$sortKey() {
      return this._sortKey;
    },
    set$sortKey(value) {
      this._sortKey = type$.nullable_SemanticsSortKey._as(value);
      this._hasBeenAnnotated = true;
    },
    get$indexInParent() {
      return this._indexInParent;
    },
    get$scrollChildCount() {
      return this._scrollChildCount;
    },
    get$scrollIndex() {
      return this._scrollIndex;
    },
    get$platformViewId() {
      return this._platformViewId;
    },
    get$maxValueLength() {
      return this._maxValueLength;
    },
    set$maxValueLength(value) {
      var t1;
      B._asIntQ(value);
      t1 = this.get$maxValueLength();
      if (value == null ? t1 == null : value === t1)
        return;
      this._maxValueLength = value;
      this._hasBeenAnnotated = true;
    },
    get$currentValueLength() {
      return this._currentValueLength;
    },
    set$currentValueLength(value) {
      var t1;
      B._asIntQ(value);
      t1 = this.get$currentValueLength();
      if (value == null ? t1 == null : value === t1)
        return;
      this._currentValueLength = value;
      this._hasBeenAnnotated = true;
    },
    get$isMergingSemanticsOfDescendants() {
      return this._isMergingSemanticsOfDescendants;
    },
    set$isMergingSemanticsOfDescendants(value) {
      this._isMergingSemanticsOfDescendants = B._asBool(value);
      this._hasBeenAnnotated = true;
    },
    set$customSemanticsActions(value) {
      var t1, _this = this;
      type$.Map_of_CustomSemanticsAction_and_void_Function._as(value);
      _this._hasBeenAnnotated = true;
      t1 = _this._actionsAsBits;
      if (typeof t1 !== "number")
        return t1.$or();
      _this._actionsAsBits = (t1 | 131072) >>> 0;
      _this.set$_customSemanticsActions(value);
      J.$indexSet$ax(_this._actions, C.SemanticsAction_131072_customAction, _this.get$_onCustomSemanticsAction());
    },
    _onCustomSemanticsAction$1(args) {
      var action, callback;
      args.toString;
      action = A.CustomSemanticsAction_getAction(B._asInt(args));
      if (action == null)
        return;
      callback = J.$index$asx(this._customSemanticsActions, action);
      if (callback != null)
        callback.call$0();
    },
    get$identifier() {
      return this._identifier;
    },
    set$identifier(identifier) {
      this._identifier = B._asString(identifier);
      this._hasBeenAnnotated = true;
    },
    set$label(label) {
      this._attributedLabel = A.AttributedString$(B._asString(label), C.List_empty2);
      this._hasBeenAnnotated = true;
    },
    get$attributedLabel() {
      return this._attributedLabel;
    },
    set$attributedLabel(attributedLabel) {
      this._attributedLabel = type$.AttributedString._as(attributedLabel);
      this._hasBeenAnnotated = true;
    },
    set$value(value) {
      this._attributedValue = A.AttributedString$(B._asString(value), C.List_empty2);
      this._hasBeenAnnotated = true;
    },
    get$attributedValue() {
      return this._attributedValue;
    },
    set$attributedValue(attributedValue) {
      this._attributedValue = type$.AttributedString._as(attributedValue);
      this._hasBeenAnnotated = true;
    },
    set$increasedValue(increasedValue) {
      this._attributedIncreasedValue = A.AttributedString$(B._asString(increasedValue), C.List_empty2);
      this._hasBeenAnnotated = true;
    },
    get$attributedIncreasedValue() {
      return this._attributedIncreasedValue;
    },
    set$attributedIncreasedValue(attributedIncreasedValue) {
      this._attributedIncreasedValue = type$.AttributedString._as(attributedIncreasedValue);
      this._hasBeenAnnotated = true;
    },
    set$decreasedValue(decreasedValue) {
      this._attributedDecreasedValue = A.AttributedString$(B._asString(decreasedValue), C.List_empty2);
      this._hasBeenAnnotated = true;
    },
    get$attributedDecreasedValue() {
      return this._attributedDecreasedValue;
    },
    set$attributedDecreasedValue(attributedDecreasedValue) {
      this._attributedDecreasedValue = type$.AttributedString._as(attributedDecreasedValue);
      this._hasBeenAnnotated = true;
    },
    set$hint(hint) {
      this._attributedHint = A.AttributedString$(B._asString(hint), C.List_empty2);
      this._hasBeenAnnotated = true;
    },
    get$attributedHint() {
      return this._attributedHint;
    },
    set$attributedHint(attributedHint) {
      this._attributedHint = type$.AttributedString._as(attributedHint);
      this._hasBeenAnnotated = true;
    },
    get$tooltip() {
      return this._tooltip;
    },
    set$tooltip(tooltip) {
      this._tooltip = B._asString(tooltip);
      this._hasBeenAnnotated = true;
    },
    get$hintOverrides() {
      return this._hintOverrides;
    },
    set$hintOverrides(value) {
      type$.nullable_SemanticsHintOverrides._as(value);
      if (value == null)
        return;
      this._hintOverrides = value;
      this._hasBeenAnnotated = true;
    },
    get$elevation() {
      return this._elevation;
    },
    set$elevation(value) {
      B._asDouble(value);
      if (value === this._elevation)
        return;
      this._elevation = value;
      this._hasBeenAnnotated = true;
    },
    get$thickness() {
      return this._thickness;
    },
    set$scopesRoute(value) {
      this._setFlag$2(C.SemanticsFlag_2048_scopesRoute, B._asBool(value));
    },
    set$namesRoute(value) {
      this._setFlag$2(C.SemanticsFlag_4096_namesRoute, B._asBool(value));
    },
    set$isImage(value) {
      this._setFlag$2(C.SemanticsFlag_16384_isImage, B._asBool(value));
    },
    set$liveRegion(value) {
      this._setFlag$2(C.SemanticsFlag_32768_isLiveRegion, B._asBool(value));
    },
    get$textDirection() {
      return this._textDirection;
    },
    set$textDirection(textDirection) {
      this._textDirection = type$.nullable_TextDirection._as(textDirection);
      this._hasBeenAnnotated = true;
    },
    set$isSelected(value) {
      this._setFlag$2(C.SemanticsFlag_4_isSelected, B._asBool(value));
    },
    set$isExpanded(value) {
      B._asBoolQ(value);
      this._setFlag$2(C.SemanticsFlag_67108864_hasExpandedState, true);
      value.toString;
      this._setFlag$2(C.SemanticsFlag_134217728_isExpanded, value);
    },
    set$isEnabled(value) {
      B._asBoolQ(value);
      this._setFlag$2(C.SemanticsFlag_64_hasEnabledState, true);
      value.toString;
      this._setFlag$2(C.SemanticsFlag_128_isEnabled, value);
    },
    set$isChecked(value) {
      B._asBoolQ(value);
      this._setFlag$2(C.SemanticsFlag_1_hasCheckedState, true);
      value.toString;
      this._setFlag$2(C.SemanticsFlag_2_isChecked, value);
    },
    set$isCheckStateMixed(value) {
      B._asBoolQ(value);
      this._setFlag$2(C.SemanticsFlag_1_hasCheckedState, true);
      value.toString;
      this._setFlag$2(C.SemanticsFlag_33554432_isCheckStateMixed, value);
    },
    set$isToggled(value) {
      B._asBoolQ(value);
      this._setFlag$2(C.SemanticsFlag_65536_hasToggledState, true);
      value.toString;
      this._setFlag$2(C.SemanticsFlag_131072_isToggled, value);
    },
    set$isInMutuallyExclusiveGroup(value) {
      this._setFlag$2(C.SemanticsFlag_256_isInMutuallyExclusiveGroup, B._asBool(value));
    },
    set$isFocusable(value) {
      this._setFlag$2(C.SemanticsFlag_2097152_isFocusable, B._asBool(value));
    },
    set$isFocused(value) {
      this._setFlag$2(C.SemanticsFlag_32_isFocused, B._asBool(value));
    },
    set$isButton(value) {
      this._setFlag$2(C.SemanticsFlag_8_isButton, B._asBool(value));
    },
    set$isLink(value) {
      this._setFlag$2(C.SemanticsFlag_4194304_isLink, B._asBool(value));
    },
    set$isHeader(value) {
      this._setFlag$2(C.SemanticsFlag_512_isHeader, B._asBool(value));
    },
    get$headingLevel() {
      return this._headingLevel;
    },
    set$headingLevel(value) {
      B._asInt(value);
      if (value === this.get$headingLevel())
        return;
      this._headingLevel = value;
      this._hasBeenAnnotated = true;
    },
    set$isSlider(value) {
      this._setFlag$2(C.SemanticsFlag_8388608_isSlider, B._asBool(value));
    },
    set$isKeyboardKey(value) {
      this._setFlag$2(C.SemanticsFlag_16777216_isKeyboardKey, B._asBool(value));
    },
    set$isHidden(value) {
      this._setFlag$2(C.SemanticsFlag_8192_isHidden, B._asBool(value));
    },
    set$isTextField(value) {
      this._setFlag$2(C.SemanticsFlag_16_isTextField, B._asBool(value));
    },
    set$isReadOnly(value) {
      this._setFlag$2(C.SemanticsFlag_1048576_isReadOnly, B._asBool(value));
    },
    set$isObscured(value) {
      this._setFlag$2(C.SemanticsFlag_1024_isObscured, B._asBool(value));
    },
    get$isMultiline() {
      return this._hasFlag$1(C.SemanticsFlag_524288_isMultiline);
    },
    set$isMultiline(value) {
      this._setFlag$2(C.SemanticsFlag_524288_isMultiline, B._asBool(value));
    },
    get$tagsForChildren() {
      return this._tagsForChildren;
    },
    addTagForChildren$1(tag) {
      var t1 = type$.SemanticsTag;
      t1._as(tag);
      if (this._tagsForChildren == null)
        this.set$_tagsForChildren(B.LinkedHashSet_LinkedHashSet$_empty(t1));
      t1 = this._tagsForChildren;
      t1.toString;
      J.add$1$ax(t1, tag);
    },
    _setFlag$2(flag, value) {
      var t1, t2, _this = this;
      type$.SemanticsFlag._as(flag);
      B._asBool(value);
      t1 = _this._flags;
      t2 = flag.index;
      if (value) {
        if (typeof t1 !== "number")
          return t1.$or();
        if (typeof t2 !== "number")
          return B.iae(t2);
        _this._flags = (t1 | t2) >>> 0;
      } else {
        t2 = J.$not$i(t2);
        if (typeof t1 !== "number")
          return t1.$and();
        if (typeof t2 !== "number")
          return B.iae(t2);
        _this._flags = (t1 & t2) >>> 0;
      }
      _this._hasBeenAnnotated = true;
    },
    _hasFlag$1(flag) {
      var t1, t2;
      type$.SemanticsFlag._as(flag);
      t1 = this._flags;
      t2 = flag.index;
      if (typeof t1 !== "number")
        return t1.$and();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return (t1 & t2) >>> 0 !== 0;
    },
    isCompatibleWith$1(other) {
      var t1, t2, _this = this;
      type$.nullable_SemanticsConfiguration._as(other);
      if (other == null || !B.boolConversionCheck(other.get$hasBeenAnnotated()) || !B.boolConversionCheck(_this.get$hasBeenAnnotated()))
        return true;
      t1 = _this._actionsAsBits;
      t2 = other._actionsAsBits;
      if (typeof t1 !== "number")
        return t1.$and();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if ((t1 & t2) >>> 0 !== 0)
        return false;
      t1 = _this._flags;
      t2 = other._flags;
      if (typeof t1 !== "number")
        return t1.$and();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if ((t1 & t2) >>> 0 !== 0)
        return false;
      if (_this._platformViewId != null && other._platformViewId != null)
        return false;
      if (_this._maxValueLength != null && other._maxValueLength != null)
        return false;
      if (_this._currentValueLength != null && other._currentValueLength != null)
        return false;
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(_this._attributedValue.string)) && B.boolConversionCheck(J.get$isNotEmpty$asx(other._attributedValue.string)))
        return false;
      return true;
    },
    absorb$1(child) {
      var t1, t2, t3, _this = this;
      type$.SemanticsConfiguration._as(child);
      if (!B.boolConversionCheck(child.get$hasBeenAnnotated()))
        return;
      t1 = child._actions;
      if (B.boolConversionCheck(child.isBlockingUserActions))
        J.forEach$1$ax(t1, new A.SemanticsConfiguration_absorb_closure(_this));
      else
        J.addAll$1$ax(_this._actions, t1);
      t1 = _this._actionsAsBits;
      t2 = child.get$_effectiveActionsAsBits();
      if (typeof t1 !== "number")
        return t1.$or();
      if (typeof t2 !== "number")
        return B.iae(t2);
      _this._actionsAsBits = (t1 | t2) >>> 0;
      J.addAll$1$ax(_this._customSemanticsActions, child._customSemanticsActions);
      t2 = _this._flags;
      t1 = child._flags;
      if (typeof t2 !== "number")
        return t2.$or();
      if (typeof t1 !== "number")
        return B.iae(t1);
      _this._flags = (t2 | t1) >>> 0;
      if (_this._textSelection == null)
        _this.set$_textSelection(child._textSelection);
      if (_this._scrollPosition == null)
        _this.set$_scrollPosition(child._scrollPosition);
      if (_this._scrollExtentMax == null)
        _this.set$_scrollExtentMax(child._scrollExtentMax);
      if (_this._scrollExtentMin == null)
        _this.set$_scrollExtentMin(child._scrollExtentMin);
      if (_this._hintOverrides == null)
        _this.set$_hintOverrides(child._hintOverrides);
      if (_this._indexInParent == null)
        _this.set$_indexInParent(child.get$indexInParent());
      if (_this._scrollIndex == null)
        _this.set$_scrollIndex(child._scrollIndex);
      if (_this._scrollChildCount == null)
        _this.set$_scrollChildCount(child._scrollChildCount);
      if (_this._platformViewId == null)
        _this.set$_platformViewId(child._platformViewId);
      if (_this._maxValueLength == null)
        _this.set$_maxValueLength(child._maxValueLength);
      if (_this._currentValueLength == null)
        _this.set$_currentValueLength(child._currentValueLength);
      if (_this.get$textDirection() == null)
        _this.set$textDirection(child.get$textDirection());
      if (_this._sortKey == null)
        _this.set$_sortKey(child._sortKey);
      if (B.boolConversionCheck(J.$eq$(_this._identifier, "")))
        _this.set$_identifier(child._identifier);
      t1 = _this._attributedLabel;
      t2 = _this.get$textDirection();
      _this.set$_attributedLabel(A._concatAttributedString(child._attributedLabel, child.get$textDirection(), t1, t2));
      if (B.boolConversionCheck(J.$eq$(_this._attributedValue.string, "")))
        _this.set$_attributedValue(child._attributedValue);
      if (B.boolConversionCheck(J.$eq$(_this._attributedIncreasedValue.string, "")))
        _this.set$_attributedIncreasedValue(child._attributedIncreasedValue);
      if (B.boolConversionCheck(J.$eq$(_this._attributedDecreasedValue.string, "")))
        _this.set$_attributedDecreasedValue(child._attributedDecreasedValue);
      t1 = _this._attributedHint;
      t2 = _this.get$textDirection();
      _this.set$_attributedHint(A._concatAttributedString(child._attributedHint, child.get$textDirection(), t1, t2));
      if (B.boolConversionCheck(J.$eq$(_this._tooltip, "")))
        _this.set$_tooltip(child._tooltip);
      t1 = _this._thickness;
      t2 = child._thickness;
      t3 = child._elevation;
      if (typeof t2 !== "number")
        return t2.$add();
      if (typeof t3 !== "number")
        return B.iae(t3);
      _this.set$_thickness(A.max(t1, t2 + t3, type$.double));
      _this._hasBeenAnnotated = B.boolConversionCheck(_this._hasBeenAnnotated) || B.boolConversionCheck(child._hasBeenAnnotated);
    },
    copy$0() {
      var _this = this,
        t1 = A.SemanticsConfiguration$();
      t1.set$_isSemanticBoundary(_this._isSemanticBoundary);
      t1.set$explicitChildNodes(_this.explicitChildNodes);
      t1.set$isBlockingSemanticsOfPreviouslyPaintedNodes(_this.isBlockingSemanticsOfPreviouslyPaintedNodes);
      t1.set$_hasBeenAnnotated(_this._hasBeenAnnotated);
      t1.set$_isMergingSemanticsOfDescendants(_this._isMergingSemanticsOfDescendants);
      t1.set$_textDirection(_this._textDirection);
      t1.set$_sortKey(_this._sortKey);
      t1.set$_identifier(_this._identifier);
      t1.set$_attributedLabel(_this._attributedLabel);
      t1.set$_attributedIncreasedValue(_this._attributedIncreasedValue);
      t1.set$_attributedValue(_this._attributedValue);
      t1.set$_attributedDecreasedValue(_this._attributedDecreasedValue);
      t1.set$_attributedHint(_this._attributedHint);
      t1.set$_hintOverrides(_this._hintOverrides);
      t1.set$_tooltip(_this._tooltip);
      t1.set$_elevation(_this._elevation);
      t1.set$_thickness(_this._thickness);
      t1.set$_flags(_this._flags);
      t1.set$_tagsForChildren(_this._tagsForChildren);
      t1.set$_textSelection(_this._textSelection);
      t1.set$_scrollPosition(_this._scrollPosition);
      t1.set$_scrollExtentMax(_this._scrollExtentMax);
      t1.set$_scrollExtentMin(_this._scrollExtentMin);
      t1.set$_actionsAsBits(_this._actionsAsBits);
      t1.set$_indexInParent(_this.get$indexInParent());
      t1.set$_scrollIndex(_this._scrollIndex);
      t1.set$_scrollChildCount(_this._scrollChildCount);
      t1.set$_platformViewId(_this._platformViewId);
      t1.set$_maxValueLength(_this._maxValueLength);
      t1.set$_currentValueLength(_this._currentValueLength);
      J.addAll$1$ax(t1._actions, _this._actions);
      J.addAll$1$ax(t1._customSemanticsActions, _this._customSemanticsActions);
      t1.set$isBlockingUserActions(_this.isBlockingUserActions);
      t1.set$_headingLevel(_this._headingLevel);
      return t1;
    },
    set$_isSemanticBoundary(_isSemanticBoundary) {
      this._isSemanticBoundary = B._asBool(_isSemanticBoundary);
    },
    set$isBlockingUserActions(isBlockingUserActions) {
      this.isBlockingUserActions = B._asBool(isBlockingUserActions);
    },
    set$explicitChildNodes(explicitChildNodes) {
      this.explicitChildNodes = B._asBool(explicitChildNodes);
    },
    set$isBlockingSemanticsOfPreviouslyPaintedNodes(isBlockingSemanticsOfPreviouslyPaintedNodes) {
      this.isBlockingSemanticsOfPreviouslyPaintedNodes = B._asBool(isBlockingSemanticsOfPreviouslyPaintedNodes);
    },
    set$_hasBeenAnnotated(_hasBeenAnnotated) {
      this._hasBeenAnnotated = B._asBool(_hasBeenAnnotated);
    },
    set$_actionsAsBits(_actionsAsBits) {
      this._actionsAsBits = B._asInt(_actionsAsBits);
    },
    set$_onTap(_onTap) {
      type$.nullable_void_Function._as(_onTap);
    },
    set$_onLongPress(_onLongPress) {
      type$.nullable_void_Function._as(_onLongPress);
    },
    set$_onScrollLeft(_onScrollLeft) {
      type$.nullable_void_Function._as(_onScrollLeft);
    },
    set$_onDismiss(_onDismiss) {
      type$.nullable_void_Function._as(_onDismiss);
    },
    set$_onScrollRight(_onScrollRight) {
      type$.nullable_void_Function._as(_onScrollRight);
    },
    set$_onScrollUp(_onScrollUp) {
      type$.nullable_void_Function._as(_onScrollUp);
    },
    set$_onScrollDown(_onScrollDown) {
      type$.nullable_void_Function._as(_onScrollDown);
    },
    set$_onIncrease(_onIncrease) {
      type$.nullable_void_Function._as(_onIncrease);
    },
    set$_onDecrease(_onDecrease) {
      type$.nullable_void_Function._as(_onDecrease);
    },
    set$_onCopy(_onCopy) {
      type$.nullable_void_Function._as(_onCopy);
    },
    set$_onCut(_onCut) {
      type$.nullable_void_Function._as(_onCut);
    },
    set$_onPaste(_onPaste) {
      type$.nullable_void_Function._as(_onPaste);
    },
    set$_onMoveCursorForwardByCharacter(_onMoveCursorForwardByCharacter) {
      type$.nullable_void_Function_bool._as(_onMoveCursorForwardByCharacter);
    },
    set$_onMoveCursorBackwardByCharacter(_onMoveCursorBackwardByCharacter) {
      type$.nullable_void_Function_bool._as(_onMoveCursorBackwardByCharacter);
    },
    set$_onSetSelection(_onSetSelection) {
      type$.nullable_void_Function_TextSelection._as(_onSetSelection);
    },
    set$_onSetText(_onSetText) {
      type$.nullable_void_Function_String._as(_onSetText);
    },
    set$_onDidGainAccessibilityFocus(_onDidGainAccessibilityFocus) {
      type$.nullable_void_Function._as(_onDidGainAccessibilityFocus);
    },
    set$_onDidLoseAccessibilityFocus(_onDidLoseAccessibilityFocus) {
      type$.nullable_void_Function._as(_onDidLoseAccessibilityFocus);
    },
    set$_onFocus(_onFocus) {
      type$.nullable_void_Function._as(_onFocus);
    },
    set$_sortKey(_sortKey) {
      this._sortKey = type$.nullable_SemanticsSortKey._as(_sortKey);
    },
    set$_indexInParent(_indexInParent) {
      this._indexInParent = B._asIntQ(_indexInParent);
    },
    set$_scrollChildCount(_scrollChildCount) {
      this._scrollChildCount = B._asIntQ(_scrollChildCount);
    },
    set$_scrollIndex(_scrollIndex) {
      this._scrollIndex = B._asIntQ(_scrollIndex);
    },
    set$_platformViewId(_platformViewId) {
      this._platformViewId = B._asIntQ(_platformViewId);
    },
    set$_maxValueLength(_maxValueLength) {
      this._maxValueLength = B._asIntQ(_maxValueLength);
    },
    set$_currentValueLength(_currentValueLength) {
      this._currentValueLength = B._asIntQ(_currentValueLength);
    },
    set$_isMergingSemanticsOfDescendants(_isMergingSemanticsOfDescendants) {
      this._isMergingSemanticsOfDescendants = B._asBool(_isMergingSemanticsOfDescendants);
    },
    set$_customSemanticsActions(_customSemanticsActions) {
      this._customSemanticsActions = type$.Map_of_CustomSemanticsAction_and_void_Function._as(_customSemanticsActions);
    },
    set$_identifier(_identifier) {
      this._identifier = B._asString(_identifier);
    },
    set$_attributedLabel(_attributedLabel) {
      this._attributedLabel = type$.AttributedString._as(_attributedLabel);
    },
    set$_attributedValue(_attributedValue) {
      this._attributedValue = type$.AttributedString._as(_attributedValue);
    },
    set$_attributedIncreasedValue(_attributedIncreasedValue) {
      this._attributedIncreasedValue = type$.AttributedString._as(_attributedIncreasedValue);
    },
    set$_attributedDecreasedValue(_attributedDecreasedValue) {
      this._attributedDecreasedValue = type$.AttributedString._as(_attributedDecreasedValue);
    },
    set$_attributedHint(_attributedHint) {
      this._attributedHint = type$.AttributedString._as(_attributedHint);
    },
    set$_tooltip(_tooltip) {
      this._tooltip = B._asString(_tooltip);
    },
    set$_hintOverrides(_hintOverrides) {
      this._hintOverrides = type$.nullable_SemanticsHintOverrides._as(_hintOverrides);
    },
    set$_elevation(_elevation) {
      this._elevation = B._asDouble(_elevation);
    },
    set$_thickness(_thickness) {
      this._thickness = B._asDouble(_thickness);
    },
    set$_textDirection(_textDirection) {
      this._textDirection = type$.nullable_TextDirection._as(_textDirection);
    },
    set$_headingLevel(_headingLevel) {
      this._headingLevel = B._asInt(_headingLevel);
    },
    set$_textSelection(_textSelection) {
      this._textSelection = type$.nullable_TextSelection._as(_textSelection);
    },
    set$_scrollPosition(_scrollPosition) {
      this._scrollPosition = B._asDoubleQ(_scrollPosition);
    },
    set$_scrollExtentMax(_scrollExtentMax) {
      this._scrollExtentMax = B._asDoubleQ(_scrollExtentMax);
    },
    set$_scrollExtentMin(_scrollExtentMin) {
      this._scrollExtentMin = B._asDoubleQ(_scrollExtentMin);
    },
    set$_tagsForChildren(_tagsForChildren) {
      this._tagsForChildren = type$.nullable_Set_SemanticsTag._as(_tagsForChildren);
    },
    set$_flags(_flags) {
      this._flags = B._asInt(_flags);
    }
  };
  A.DebugSemanticsDumpOrder.prototype = {
    _enumToString$0() {
      return "DebugSemanticsDumpOrder." + B.S(this._core$_name);
    }
  };
  A._SemanticsData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A._SemanticsNode_Object_DiagnosticableTreeMixin.prototype = {$isDiagnosticable: 1, $isDiagnosticableTree: 1, $isDiagnosticableTreeMixin: 1, $is_DiagnosticableTree_Object_Diagnosticable: 1};
  A.AssetBundle.prototype = {
    loadString$2$cache(key, cache) {
      return this.loadString$body$AssetBundle(B._asString(key), B._asBool(cache));
    },
    loadString$body$AssetBundle(key, cache) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, $async$self = this, data, t1;
      var $async$loadString$2$cache = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return B._asyncAwait($async$self.load$1(key), $async$loadString$2$cache);
            case 3:
              // returning from await.
              data = $async$result;
              t1 = D.NativeByteData_methods.get$lengthInBytes(data);
              if (typeof t1 !== "number") {
                $async$returnValue = t1.$lt();
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = D.C_Utf8Codec.decode$1(A.Uint8List_Uint8List$sublistView(data, 0, null));
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$loadString$2$cache, $async$completer);
    },
    toString$0(_) {
      return B.S(A.describeIdentity(this)) + "()";
    }
  };
  A.CachingAssetBundle.prototype = {
    loadString$2$cache(key, cache) {
      B._asString(key);
      if (B._asBool(cache))
        return this._stringCache.putIfAbsent$2(key, new A.CachingAssetBundle_loadString_closure(this, key));
      return this.super$AssetBundle$loadString(key, true);
    },
    clear$0(_) {
      J.clear$0$ax(this._stringCache);
      J.clear$0$ax(this._structuredDataCache);
      J.clear$0$ax(this._structuredBinaryDataCache);
    }
  };
  A.PlatformAssetBundle.prototype = {
    load$1(key) {
      var encoded, t1, future;
      B._asString(key);
      encoded = D.C_Utf8Codec.encode$1(A._Uri__Uri(null, A.Uri_encodeFull(key), null).path);
      t1 = A.ServicesBinding_instance().get$defaultBinaryMessenger().send$2("flutter/assets", A.ByteData_ByteData$sublistView(encoded));
      future = t1 == null ? null : t1.then$1$1(new A.PlatformAssetBundle_load_closure(key), type$.ByteData);
      if (future == null)
        throw B.wrapException(A.FlutterError$fromParts(B._setArrayType([A._errorSummaryWithKey(key), A.ErrorDescription$(string$.The_as)], type$.JSArray_DiagnosticsNode)));
      return future;
    }
  };
  A.KeyboardLockMode.prototype = {
    _enumToString$0() {
      return "KeyboardLockMode." + B.S(this._core$_name);
    }
  };
  A.KeyboardKey.prototype = {$isDiagnosticable: 1};
  A.LogicalKeyboardKey.prototype = {
    get$keyLabel() {
      var t1 = this.keyId,
        t2 = A.LogicalKeyboardKey__unicodeKeyLabel(t1);
      t1 = t2 == null ? C.Map_2b0gk.$index(0, t1) : t2;
      return t1 == null ? "" : t1;
    },
    get$debugName() {
      return null;
    },
    get$hashCode(_) {
      return J.get$hashCode$(this.keyId);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.LogicalKeyboardKey && B.boolConversionCheck(J.$eq$(other.keyId, this.keyId));
    },
    debugFillProperties$1(properties) {
      var _this = this;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.StringProperty$("keyId", "0x" + B.S(J.padLeft$2$s(J.toRadixString$1$n(_this.keyId, 16), 8, "0")), C.C__NoDefaultValue, true, true));
      properties.add$1(0, A.StringProperty$("keyLabel", _this.get$keyLabel(), C.C__NoDefaultValue, true, true));
      properties.add$1(0, A.StringProperty$("debugName", _this.get$debugName(), null, true, true));
    }
  };
  A._KeyboardKey_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.MethodCall.prototype = {
    toString$0(_) {
      return B.S(A.objectRuntimeType(this, "MethodCall")) + "(" + B.S(this.method) + ", " + B.S(this.$arguments) + ")";
    }
  };
  A.PlatformException.prototype = {
    toString$0(_) {
      var _this = this;
      return "PlatformException(" + B.S(_this.code) + ", " + B.S(_this.message) + ", " + B.S(_this.details) + ", " + B.S(_this.stacktrace) + ")";
    },
    $isException: 1
  };
  A.MissingPluginException.prototype = {
    toString$0(_) {
      return "MissingPluginException(" + B.S(this.message) + ")";
    },
    $isException: 1
  };
  A.StringCodec0.prototype = {
    decodeMessage$1(message) {
      type$.nullable_ByteData._as(message);
      if (message == null)
        return null;
      return D.C_Utf8Codec.decode$1(A.Uint8List_Uint8List$sublistView(message, 0, null));
    },
    encodeMessage$1(message) {
      B._asStringQ(message);
      if (message == null)
        return null;
      return A.ByteData_ByteData$sublistView(D.C_Utf8Codec.encode$1(message));
    },
    $isMessageCodec: 1
  };
  A.JSONMessageCodec0.prototype = {
    encodeMessage$1(message) {
      if (message == null)
        return null;
      return C.C_StringCodec0.encodeMessage$1(D.C_JsonCodec.encode$1(message));
    },
    decodeMessage$1(message) {
      var t1;
      type$.nullable_ByteData._as(message);
      if (message == null)
        return message;
      t1 = C.C_StringCodec0.decodeMessage$1(message);
      t1.toString;
      return D.C_JsonCodec.decode$1(t1);
    },
    $isMessageCodec: 1
  };
  A.JSONMethodCodec0.prototype = {
    encodeMethodCall$1(methodCall) {
      var t1;
      type$.MethodCall_2._as(methodCall);
      t1 = C.C_JSONMessageCodec0.encodeMessage$1(B.LinkedHashMap_LinkedHashMap$_literal(["method", methodCall.method, "args", methodCall.$arguments], type$.String, type$.nullable_Object));
      t1.toString;
      return t1;
    },
    decodeMethodCall$1(methodCall) {
      var method, $arguments, _null = null,
        decoded = C.C_JSONMessageCodec0.decodeMessage$1(type$.nullable_ByteData._as(methodCall));
      if (!type$.Map_dynamic_dynamic._is(decoded))
        throw B.wrapException(B.FormatException$("Expected method call Map, got " + B.S(decoded), _null, _null));
      method = decoded.$index(0, "method");
      $arguments = decoded.$index(0, "args");
      if (typeof method == "string")
        return A.MethodCall$(method, $arguments);
      throw B.wrapException(B.FormatException$("Invalid method call: " + B.S(decoded), _null, _null));
    },
    decodeEnvelope$1(envelope) {
      var t1, t2, t3, _null = null,
        decoded = C.C_JSONMessageCodec0.decodeMessage$1(type$.ByteData._as(envelope));
      if (!type$.List_dynamic._is(decoded))
        throw B.wrapException(B.FormatException$("Expected envelope List, got " + B.S(decoded), _null, _null));
      t1 = J.getInterceptor$asx(decoded);
      if (B.boolConversionCheck(J.$eq$(t1.get$length(decoded), 1)))
        return t1.$index(decoded, 0);
      t2 = false;
      if (B.boolConversionCheck(J.$eq$(t1.get$length(decoded), 3)))
        if (typeof t1.$index(decoded, 0) == "string")
          t2 = t1.$index(decoded, 1) == null || typeof t1.$index(decoded, 1) == "string";
      if (t2) {
        t2 = B._asString(t1.$index(decoded, 0));
        t3 = B._asStringQ(t1.$index(decoded, 1));
        throw B.wrapException(A.PlatformException$(t2, t1.$index(decoded, 2), t3, _null));
      }
      t2 = false;
      if (B.boolConversionCheck(J.$eq$(t1.get$length(decoded), 4)))
        if (typeof t1.$index(decoded, 0) == "string")
          if (t1.$index(decoded, 1) == null || typeof t1.$index(decoded, 1) == "string")
            t2 = t1.$index(decoded, 3) == null || typeof t1.$index(decoded, 3) == "string";
      if (t2) {
        t2 = B._asString(t1.$index(decoded, 0));
        t3 = B._asStringQ(t1.$index(decoded, 1));
        throw B.wrapException(A.PlatformException$(t2, t1.$index(decoded, 2), t3, B._asStringQ(t1.$index(decoded, 3))));
      }
      throw B.wrapException(B.FormatException$("Invalid envelope: " + B.S(decoded), _null, _null));
    },
    encodeSuccessEnvelope$1(result) {
      var t1 = C.C_JSONMessageCodec0.encodeMessage$1([result]);
      t1.toString;
      return t1;
    },
    encodeErrorEnvelope$3$code$details$message(code, details, message) {
      var t1 = C.C_JSONMessageCodec0.encodeMessage$1([B._asString(code), B._asStringQ(message), details]);
      t1.toString;
      return t1;
    },
    encodeErrorEnvelope$2$code$message(code, message) {
      return this.encodeErrorEnvelope$3$code$details$message(code, null, message);
    },
    $isMethodCodec0: 1
  };
  A.StandardMessageCodec0.prototype = {
    encodeMessage$1(message) {
      var buffer;
      if (message == null)
        return null;
      buffer = A.WriteBuffer_WriteBuffer(64);
      this.writeValue$2(buffer, message);
      return buffer.done$0();
    },
    decodeMessage$1(message) {
      var buffer, result;
      type$.nullable_ByteData._as(message);
      if (message == null)
        return null;
      buffer = A.ReadBuffer$(message);
      result = this.readValue$1(buffer);
      if (B.boolConversionCheck(buffer.get$hasRemaining()))
        throw B.wrapException(C.FormatException_rh8);
      return result;
    },
    writeValue$2(buffer, value) {
      var t1, asciiBytes, utf8Bytes, utf8Offset, t2, i, char, _this = this;
      type$.WriteBuffer_2._as(buffer);
      if (value == null)
        buffer.putUint8$1(0);
      else if (B._isBool(value))
        buffer.putUint8$1(value ? 1 : 2);
      else if (typeof value == "number") {
        buffer.putUint8$1(6);
        buffer.putFloat64$1(value);
      } else if (B._isInt(value))
        if (-2147483648 <= value && value <= 2147483647) {
          buffer.putUint8$1(3);
          buffer.putInt32$1(value);
        } else {
          buffer.putUint8$1(4);
          buffer.putInt64$1(value);
        }
      else if (typeof value == "string") {
        buffer.putUint8$1(7);
        t1 = value.length;
        asciiBytes = B.NativeUint8List_NativeUint8List(t1);
        t2 = asciiBytes.length;
        i = 0;
        while (true) {
          if (!(i < t1)) {
            utf8Bytes = null;
            utf8Offset = 0;
            break;
          }
          char = value.charCodeAt(i);
          if (char <= 127) {
            if (!(i < t2))
              return B.ioore(asciiBytes, i);
            asciiBytes[i] = char;
          } else {
            utf8Bytes = D.C_Utf8Codec.encode$1(D.JSString_methods.substring$1(value, i));
            utf8Offset = i;
            break;
          }
          ++i;
        }
        if (utf8Bytes != null) {
          _this.writeSize$2(buffer, utf8Offset + utf8Bytes.length);
          buffer.putUint8List$1(A.Uint8List_Uint8List$sublistView(asciiBytes, 0, utf8Offset));
          buffer.putUint8List$1(utf8Bytes);
        } else {
          _this.writeSize$2(buffer, t2);
          buffer.putUint8List$1(asciiBytes);
        }
      } else if (type$.Uint8List._is(value)) {
        buffer.putUint8$1(8);
        _this.writeSize$2(buffer, value.length);
        buffer.putUint8List$1(value);
      } else if (type$.Int32List._is(value)) {
        buffer.putUint8$1(9);
        _this.writeSize$2(buffer, value.length);
        buffer.putInt32List$1(value);
      } else if (type$.Float32List._is(value)) {
        buffer.putUint8$1(14);
        _this.writeSize$2(buffer, value.length);
        buffer.putFloat32List$1(value);
      } else if (type$.Float64List._is(value)) {
        buffer.putUint8$1(11);
        _this.writeSize$2(buffer, value.length);
        buffer.putFloat64List$1(value);
      } else if (type$.List_dynamic._is(value)) {
        buffer.putUint8$1(12);
        t1 = J.getInterceptor$asx(value);
        _this.writeSize$2(buffer, t1.get$length(value));
        for (t1 = t1.get$iterator(value); B.boolConversionCheck(t1.moveNext$0());)
          _this.writeValue$2(buffer, t1.get$current());
      } else if (type$.Map_dynamic_dynamic._is(value)) {
        buffer.putUint8$1(13);
        _this.writeSize$2(buffer, value.get$length(value));
        value.forEach$1(0, new A.StandardMessageCodec_writeValue_closure(_this, buffer));
      } else
        throw B.wrapException(B.ArgumentError$value(value, null, null));
    },
    readValue$1(buffer) {
      type$.ReadBuffer_2._as(buffer);
      if (!B.boolConversionCheck(buffer.get$hasRemaining()))
        throw B.wrapException(C.FormatException_rh8);
      return this.readValueOfType$2(buffer.getUint8$0(0), buffer);
    },
    readValueOfType$2(type, buffer) {
      var $length, result, t1, i, _this = this;
      B._asInt(type);
      type$.ReadBuffer_2._as(buffer);
      switch (type) {
        case 0:
          return null;
        case 1:
          return true;
        case 2:
          return false;
        case 3:
          return buffer.getInt32$0(0);
        case 4:
          return buffer.getInt64$0(0);
        case 6:
          return buffer.getFloat64$0(0);
        case 5:
        case 7:
          $length = _this.readSize$1(buffer);
          return D.C_Utf8Codec.get$decoder().convert$1(buffer.getUint8List$1($length));
        case 8:
          return buffer.getUint8List$1(_this.readSize$1(buffer));
        case 9:
          return buffer.getInt32List$1(_this.readSize$1(buffer));
        case 10:
          return buffer.getInt64List$1(_this.readSize$1(buffer));
        case 14:
          return buffer.getFloat32List$1(_this.readSize$1(buffer));
        case 11:
          return buffer.getFloat64List$1(_this.readSize$1(buffer));
        case 12:
          $length = _this.readSize$1(buffer);
          result = B.List_List$filled($length, null, false, type$.nullable_Object);
          for (t1 = J.getInterceptor$ax(result), i = 0; i < $length; ++i)
            t1.$indexSet(result, i, _this.readValue$1(buffer));
          return result;
        case 13:
          $length = _this.readSize$1(buffer);
          t1 = type$.nullable_Object;
          result = B.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
          for (i = 0; i < $length; ++i)
            result.$indexSet(0, _this.readValue$1(buffer), _this.readValue$1(buffer));
          return result;
        default:
          throw B.wrapException(C.FormatException_rh8);
      }
    },
    writeSize$2(buffer, value) {
      type$.WriteBuffer_2._as(buffer);
      B._asInt(value);
      if (value < 254)
        buffer.putUint8$1(value);
      else if (value <= 65535) {
        buffer.putUint8$1(254);
        buffer.putUint16$1(value);
      } else {
        buffer.putUint8$1(255);
        buffer.putUint32$1(value);
      }
    },
    readSize$1(buffer) {
      var value, t1;
      type$.ReadBuffer_2._as(buffer);
      value = buffer.getUint8$0(0);
      $label0$0: {
        if (254 === value) {
          t1 = buffer.getUint16$0(0);
          break $label0$0;
        }
        if (255 === value) {
          t1 = buffer.getUint32$0(0);
          break $label0$0;
        }
        t1 = value;
        break $label0$0;
      }
      return t1;
    },
    $isMessageCodec: 1
  };
  A.StandardMethodCodec0.prototype = {
    encodeMethodCall$1(methodCall) {
      var buffer;
      type$.MethodCall_2._as(methodCall);
      buffer = A.WriteBuffer_WriteBuffer(64);
      C.C_StandardMessageCodec.writeValue$2(buffer, methodCall.method);
      C.C_StandardMessageCodec.writeValue$2(buffer, methodCall.$arguments);
      return buffer.done$0();
    },
    decodeMethodCall$1(methodCall) {
      var buffer, method, $arguments;
      type$.nullable_ByteData._as(methodCall);
      methodCall.toString;
      buffer = A.ReadBuffer$(methodCall);
      method = C.C_StandardMessageCodec.readValue$1(buffer);
      $arguments = C.C_StandardMessageCodec.readValue$1(buffer);
      if (typeof method == "string" && !B.boolConversionCheck(buffer.get$hasRemaining()))
        return A.MethodCall$(method, $arguments);
      else
        throw B.wrapException(C.FormatException_4CA);
    },
    encodeSuccessEnvelope$1(result) {
      var buffer = A.WriteBuffer_WriteBuffer(64);
      buffer.putUint8$1(0);
      C.C_StandardMessageCodec.writeValue$2(buffer, result);
      return buffer.done$0();
    },
    encodeErrorEnvelope$3$code$details$message(code, details, message) {
      var buffer;
      B._asString(code);
      B._asStringQ(message);
      buffer = A.WriteBuffer_WriteBuffer(64);
      buffer.putUint8$1(1);
      C.C_StandardMessageCodec.writeValue$2(buffer, code);
      C.C_StandardMessageCodec.writeValue$2(buffer, message);
      C.C_StandardMessageCodec.writeValue$2(buffer, details);
      return buffer.done$0();
    },
    encodeErrorEnvelope$2$code$message(code, message) {
      return this.encodeErrorEnvelope$3$code$details$message(code, null, message);
    },
    decodeEnvelope$1(envelope) {
      var buffer, errorCode, errorMessage, errorDetails, errorStacktrace, t1;
      type$.ByteData._as(envelope);
      if (B.boolConversionCheck(J.$eq$(D.NativeByteData_methods.get$lengthInBytes(envelope), 0)))
        throw B.wrapException(C.FormatException_MKb);
      buffer = A.ReadBuffer$(envelope);
      if (B.boolConversionCheck(J.$eq$(buffer.getUint8$0(0), 0)))
        return C.C_StandardMessageCodec.readValue$1(buffer);
      errorCode = C.C_StandardMessageCodec.readValue$1(buffer);
      errorMessage = C.C_StandardMessageCodec.readValue$1(buffer);
      errorDetails = C.C_StandardMessageCodec.readValue$1(buffer);
      errorStacktrace = B.boolConversionCheck(buffer.get$hasRemaining()) ? B._asStringQ(C.C_StandardMessageCodec.readValue$1(buffer)) : null;
      if (typeof errorCode == "string")
        t1 = (errorMessage == null || typeof errorMessage == "string") && !B.boolConversionCheck(buffer.get$hasRemaining());
      else
        t1 = false;
      if (t1)
        throw B.wrapException(A.PlatformException$(errorCode, errorDetails, B._asStringQ(errorMessage), errorStacktrace));
      else
        throw B.wrapException(C.FormatException_E36);
    },
    $isMethodCodec0: 1
  };
  A.MouseCursorSession.prototype = {};
  A.MouseCursor0.prototype = {
    toString$0(_) {
      var debugDescription = this.get$debugDescription();
      return debugDescription;
    },
    $isDiagnosticable: 1
  };
  A._DeferringMouseCursor.prototype = {
    createSession$1(device) {
      B._asInt(device);
      throw B.wrapException(B.UnimplementedError$(null));
    },
    get$debugDescription() {
      return "defer";
    }
  };
  A._SystemMouseCursorSession.prototype = {
    get$cursor() {
      return type$.SystemMouseCursor._as(this.cursor);
    },
    activate$0() {
      return C.OptionalMethodChannel_EAC.invokeMethod$1$2("activateSystemCursor", B.LinkedHashMap_LinkedHashMap$_literal(["device", this.device, "kind", this.get$cursor().kind], type$.String, type$.dynamic), type$.void);
    },
    dispose$0() {
    }
  };
  A.SystemMouseCursor.prototype = {
    get$debugDescription() {
      return B.S(A.objectRuntimeType(this, "SystemMouseCursor")) + "(" + B.S(this.kind) + ")";
    },
    createSession$1(device) {
      return A._SystemMouseCursorSession$(this, B._asInt(device));
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.SystemMouseCursor && B.boolConversionCheck(J.$eq$(other.kind, this.kind));
    },
    get$hashCode(_) {
      return J.get$hashCode$(this.kind);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.DiagnosticsProperty$("kind", this.kind, true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_2, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.String));
    }
  };
  A._MouseCursor_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A._ProfiledBinaryMessenger.prototype = {
    sendWithPostfix$3(channel, postfix, message) {
      return this.sendWithPostfix$body$_ProfiledBinaryMessenger(B._asString(channel), B._asString(postfix), type$.nullable_ByteData._as(message));
    },
    sendWithPostfix$body$_ProfiledBinaryMessenger(channel, postfix, message) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.nullable_ByteData),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, timelineTask, result, timelineTask0, t1, t2, t3;
      var $async$sendWithPostfix$3 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.channelTypeName;
              t2 = channel + postfix;
              t3 = $async$self.codecTypeName;
              A._debugRecordUpStream(t1, t2, t3, message);
              timelineTask0 = A.TimelineTask$();
              timelineTask0.start$1("Platform Channel send " + channel + postfix);
              timelineTask = timelineTask0;
              result = null;
              $async$handler = 3;
              $async$goto = 6;
              return B._asyncAwait(A._wrapAwaitedExpression($async$self.proxy.send$2(channel, message), type$.nullable_ByteData), $async$sendWithPostfix$3);
            case 6:
              // returning from await.
              result = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              timelineTask.finish$0();
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              A._debugRecordDownStream(t1, t2, t3, result);
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return B._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return B._asyncStartSync($async$sendWithPostfix$3, $async$completer);
    },
    send$2(channel, message) {
      return this.sendWithPostfix$3(B._asString(channel), "", type$.nullable_ByteData._as(message));
    },
    setMessageHandler$2(channel, handler) {
      this.proxy.setMessageHandler$2(B._asString(channel), type$.nullable_nullable_Future_nullable_ByteData_Function_nullable_ByteData._as(handler));
    },
    $isBinaryMessenger: 1
  };
  A._PlatformChannelStats.prototype = {
    get$upBytes() {
      return this._upBytes;
    },
    addUpStream$1(bytes) {
      var t1, _this = this;
      B._asInt(bytes);
      t1 = _this._upCount;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_upCount(t1 + 1);
      t1 = _this._upBytes;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_upBytes(t1 + bytes);
    },
    get$downBytes() {
      return this._downBytes;
    },
    addDownStream$1(bytes) {
      var t1, _this = this;
      B._asInt(bytes);
      t1 = _this._downCount;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_downCount(t1 + 1);
      t1 = _this._downBytes;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_downBytes(t1 + bytes);
    },
    get$averageUpPayload() {
      var t1 = this._upBytes,
        t2 = this._upCount;
      if (typeof t1 !== "number")
        return t1.$div();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 / t2;
    },
    get$averageDownPayload() {
      var t1 = this._downBytes,
        t2 = this._downCount;
      if (typeof t1 !== "number")
        return t1.$div();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 / t2;
    },
    set$_upCount(_upCount) {
      this._upCount = B._asInt(_upCount);
    },
    set$_upBytes(_upBytes) {
      this._upBytes = B._asInt(_upBytes);
    },
    set$_downCount(_downCount) {
      this._downCount = B._asInt(_downCount);
    },
    set$_downBytes(_downBytes) {
      this._downBytes = B._asInt(_downBytes);
    }
  };
  A.BasicMessageChannel.prototype = {
    get$binaryMessenger() {
      var t1, t2, t3, _this = this,
        result = A._findBinaryMessenger();
      if (B.boolConversionCheck(A.shouldProfilePlatformChannels())) {
        t1 = $.$get$_profiledBinaryMessengers();
        t2 = J.getInterceptor$asx(t1);
        t3 = t2.$index(t1, _this);
        if (t3 == null) {
          t3 = A._ProfiledBinaryMessenger$(result, J.toString$0$(_this.get$runtimeType(0)), J.toString$0$(J.get$runtimeType$(_this.codec)));
          t2.$indexSet(t1, _this, t3);
          t1 = t3;
        } else
          t1 = t3;
      } else
        t1 = result;
      return t1;
    },
    send$1(message) {
      var t1 = this.$ti;
      return this.send$body$BasicMessageChannel(t1._precomputed1._as(message), t1._eval$1("1?"));
    },
    send$body$BasicMessageChannel(message, $async$type) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, t1, $async$temp1;
      var $async$send$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.codec;
              $async$temp1 = t1;
              $async$goto = 3;
              return B._asyncAwait(A._wrapAwaitedExpression($async$self.get$binaryMessenger().send$2($async$self.name, t1.encodeMessage$1(message)), type$.nullable_ByteData), $async$send$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.decodeMessage$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$send$1, $async$completer);
    },
    setMessageHandler$1(handler) {
      var t1, _this = this;
      _this.$ti._eval$1("Future<1>(1?)?")._as(handler);
      t1 = _this.name;
      if (handler == null)
        _this.get$binaryMessenger().setMessageHandler$2(t1, null);
      else
        _this.get$binaryMessenger().setMessageHandler$2(t1, new A.BasicMessageChannel_setMessageHandler_closure(_this, handler));
    }
  };
  A.MethodChannel.prototype = {
    get$binaryMessenger() {
      var t1, t2, t3, _this = this,
        result = A._findBinaryMessenger();
      if (B.boolConversionCheck(A.shouldProfilePlatformChannels())) {
        t1 = $.$get$_profiledBinaryMessengers();
        t2 = J.getInterceptor$asx(t1);
        t3 = t2.$index(t1, _this);
        if (t3 == null) {
          t3 = A._ProfiledBinaryMessenger$(result, J.toString$0$(_this.get$runtimeType(0)), J.toString$0$(J.get$runtimeType$(_this.codec)));
          t2.$indexSet(t1, _this, t3);
          t1 = t3;
        } else
          t1 = t3;
      } else
        t1 = result;
      return t1;
    },
    _invokeMethod$1$3$arguments$missingOk(method, $arguments, missingOk, $T) {
      return this._invokeMethod$body$MethodChannel(B._asString(method), $arguments, B._asBool(missingOk), $T, $T._eval$1("0?"));
    },
    _invokeMethod$body$MethodChannel(method, $arguments, missingOk, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, t1, input, t2, t3, result;
      var $async$_invokeMethod$1$3$arguments$missingOk = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.codec;
              input = t1.encodeMethodCall$1(A.MethodCall$(method, $arguments));
              t2 = type$.nullable_ByteData;
              t3 = $async$self.name;
              $async$goto = B.boolConversionCheck(A.shouldProfilePlatformChannels()) ? 3 : 5;
              break;
            case 3:
              // then
              $async$goto = 6;
              return B._asyncAwait(A._wrapAwaitedExpression(type$._ProfiledBinaryMessenger._as($async$self.get$binaryMessenger()).sendWithPostfix$3(t3, "#" + method, input), t2), $async$_invokeMethod$1$3$arguments$missingOk);
            case 6:
              // returning from await.
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$goto = 7;
              return B._asyncAwait(A._wrapAwaitedExpression($async$self.get$binaryMessenger().send$2(t3, input), t2), $async$_invokeMethod$1$3$arguments$missingOk);
            case 7:
              // returning from await.
            case 4:
              // join
              result = $async$result;
              if (result == null) {
                if (missingOk) {
                  $async$returnValue = null;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                throw B.wrapException(A.MissingPluginException$("No implementation found for method " + method + " on channel " + B.S(t3)));
              }
              $async$returnValue = $T._eval$1("0?")._as(t1.decodeEnvelope$1(result));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$_invokeMethod$1$3$arguments$missingOk, $async$completer);
    },
    invokeMethod$1$2(method, $arguments, $T) {
      return this._invokeMethod$1$3$arguments$missingOk(B._asString(method), $arguments, false, $T);
    },
    invokeMethod$1$1(method, $T) {
      return this.invokeMethod$1$2(method, null, $T);
    },
    invokeMapMethod$2$1(method, $K, $V) {
      return this.invokeMapMethod$body$MethodChannel(B._asString(method), $K, $V, $K._eval$1("@<0>")._bind$1($V)._eval$1("Map<1,2>?"));
    },
    invokeMapMethod$body$MethodChannel(method, $K, $V, $async$type) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, result;
      var $async$invokeMapMethod$2$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return B._asyncAwait($async$self.invokeMethod$1$2(method, null, type$.Map_dynamic_dynamic), $async$invokeMapMethod$2$1);
            case 3:
              // returning from await.
              result = $async$result;
              $async$returnValue = result == null ? null : result.cast$2$0(0, $K, $V);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$invokeMapMethod$2$1, $async$completer);
    },
    setMethodCallHandler$1(handler) {
      var t1, t2;
      type$.nullable_Future_dynamic_Function_MethodCall._as(handler);
      t1 = this.get$binaryMessenger();
      t2 = handler == null ? null : new A.MethodChannel_setMethodCallHandler_closure(this, handler);
      t1.setMessageHandler$2(this.name, t2);
    },
    _handleAsMethodCall$2(message, handler) {
      return this._handleAsMethodCall$body$MethodChannel(type$.nullable_ByteData._as(message), type$.Future_dynamic_Function_MethodCall._as(handler));
    },
    _handleAsMethodCall$body$MethodChannel(message, handler) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.nullable_ByteData),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, e, error, t2, exception, t3, t1, $call, $async$exception, $async$temp1;
      var $async$_handleAsMethodCall$2 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.codec;
              $call = t1.decodeMethodCall$1(message);
              $async$handler = 4;
              $async$temp1 = t1;
              $async$goto = 7;
              return B._asyncAwait(handler.call$1($call), $async$_handleAsMethodCall$2);
            case 7:
              // returning from await.
              t2 = $async$temp1.encodeSuccessEnvelope$1($async$result);
              $async$returnValue = t2;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t2 = B.unwrapException($async$exception);
              if (t2 instanceof A.PlatformException) {
                e = t2;
                t2 = e.code;
                t3 = e.message;
                $async$returnValue = t1.encodeErrorEnvelope$3$code$details$message(t2, e.details, t3);
                // goto return
                $async$goto = 1;
                break;
              } else if (t2 instanceof A.MissingPluginException) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              } else {
                error = t2;
                t1 = t1.encodeErrorEnvelope$2$code$message("error", J.toString$0$(error));
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              }
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return B._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return B._asyncStartSync($async$_handleAsMethodCall$2, $async$completer);
    }
  };
  A.OptionalMethodChannel.prototype = {
    invokeMethod$1$2(method, $arguments, $T) {
      return this.invokeMethod$body$OptionalMethodChannel(B._asString(method), $arguments, $T, $T._eval$1("0?"));
    },
    invokeMethod$1$1(method, $T) {
      return this.invokeMethod$1$2(method, null, $T);
    },
    invokeMethod$body$OptionalMethodChannel(method, $arguments, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this;
      var $async$invokeMethod$1$2 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $async$self.super$MethodChannel$_invokeMethod(method, $arguments, true, $T);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$invokeMethod$1$2, $async$completer);
    }
  };
  A.TextSelection.prototype = {
    toString$0(_) {
      var t1, t2, _this = this,
        _s17_ = ", isDirectional: ",
        typeName = A.objectRuntimeType(_this, "TextSelection");
      if (!B.boolConversionCheck(_this.get$isValid()))
        return typeName + ".invalid";
      t1 = _this.baseOffset;
      t2 = _this.isDirectional;
      return B.boolConversionCheck(_this.get$isCollapsed()) ? typeName + ".collapsed(offset: " + B.S(t1) + ", affinity: " + B.S(_this.affinity) + _s17_ + B.S(t2) + ")" : typeName + "(baseOffset: " + B.S(t1) + ", extentOffset: " + B.S(_this.extentOffset) + _s17_ + B.S(t2) + ")";
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!(other instanceof A.TextSelection))
        return false;
      if (!B.boolConversionCheck(_this.get$isValid()))
        return !B.boolConversionCheck(other.get$isValid());
      t1 = false;
      if (B.boolConversionCheck(J.$eq$(other.baseOffset, _this.baseOffset)))
        if (B.boolConversionCheck(J.$eq$(other.extentOffset, _this.extentOffset)))
          t1 = (!B.boolConversionCheck(_this.get$isCollapsed()) || B.boolConversionCheck(J.$eq$(other.affinity, _this.affinity))) && B.boolConversionCheck(J.$eq$(other.isDirectional, _this.isDirectional));
      return t1;
    },
    get$hashCode(_) {
      var affinityHash, _this = this;
      if (!B.boolConversionCheck(_this.get$isValid()))
        return B.Object_hash(J.$negate$in(D.JSInt_methods.get$hashCode(1)), J.$negate$in(D.JSInt_methods.get$hashCode(1)), C.TextAffinity_1.get$hashCode(0), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
      affinityHash = B.boolConversionCheck(_this.get$isCollapsed()) ? J.get$hashCode$(_this.affinity) : C.TextAffinity_1.get$hashCode(0);
      return B.Object_hash(J.get$hashCode$(_this.baseOffset), J.get$hashCode$(_this.extentOffset), affinityHash, J.get$hashCode$(_this.isDirectional), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    }
  };
  A.ActionDispatcher.prototype = {
    invokeAction$3(action, intent, context) {
      var t1, target;
      type$.Action_Intent._as(action);
      type$.Intent._as(intent);
      type$.nullable_BuildContext._as(context);
      if (context == null) {
        t1 = A.primaryFocus();
        target = t1 == null ? null : t1.get$context();
      } else
        target = context;
      return action._invoke$2(intent, target);
    },
    invokeActionIfEnabled$3(action, intent, context) {
      var t1, target;
      type$.Action_Intent._as(action);
      type$.Intent._as(intent);
      type$.nullable_BuildContext._as(context);
      if (context == null) {
        t1 = A.primaryFocus();
        target = t1 == null ? null : t1.get$context();
      } else
        target = context;
      if (B.boolConversionCheck(action._isEnabled$2(intent, target)))
        return new B._Record_2(true, action._invoke$2(intent, target));
      return C.Record2_false_null;
    },
    $isDiagnosticable: 1
  };
  A._ActionDispatcher_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.SizedBox.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A.RenderConstrainedBox$(this.get$_additionalConstraints());
    },
    get$_additionalConstraints() {
      return A.BoxConstraints$tightFor(this.height, this.width);
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$.RenderConstrainedBox._as(renderObject).set$additionalConstraints(this.get$_additionalConstraints());
    },
    toStringShort$0() {
      var t1, _0_4_isSet, _0_40, t2, _this = this, _null = null,
        _s8_ = "SizedBox",
        _0_1 = _this.width,
        _0_4 = _this.height;
      $label0$0: {
        t1 = _0_1;
        _0_4_isSet = 1 / 0 === t1;
        _0_40 = _null;
        if (_0_4_isSet) {
          t1 = _0_4;
          _0_40 = t1;
          t1 = 1 / 0 === t1;
        } else
          t1 = false;
        if (t1) {
          t1 = B.S(A.objectRuntimeType(_this, _s8_)) + ".expand";
          break $label0$0;
        }
        if (0 === _0_1)
          t1 = 0 === (_0_4_isSet ? _0_40 : _0_4);
        else
          t1 = false;
        if (t1) {
          t1 = B.S(A.objectRuntimeType(_this, _s8_)) + ".shrink";
          break $label0$0;
        }
        t1 = A.objectRuntimeType(_this, _s8_);
        break $label0$0;
      }
      t2 = _this.key;
      return t2 == null ? t1 : t1 + "-" + B.S(t2);
    },
    debugFillProperties$1(properties) {
      var t1, t2, level, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Widget$debugFillProperties(properties);
      t1 = _this.width;
      t2 = J.getInterceptor$(t1);
      if (!(B.boolConversionCheck(t2.$eq(t1, 1 / 0)) && B.boolConversionCheck(J.$eq$(_this.height, 1 / 0))))
        t2 = B.boolConversionCheck(t2.$eq(t1, 0)) && B.boolConversionCheck(J.$eq$(_this.height, 0));
      else
        t2 = true;
      level = t2 ? C.DiagnosticLevel_0 : C.DiagnosticLevel_3;
      properties.add$1(0, A.DoubleProperty$("width", t1, _null, _null, level, _null, _null));
      properties.add$1(0, A.DoubleProperty$("height", _this.height, _null, _null, level, _null, _null));
    }
  };
  A.Semantics.prototype = {
    createRenderObject$1(context) {
      var _this = this;
      return A.RenderSemanticsAnnotations$(_this.blockUserActions, _this.container, _this.excludeSemantics, _this.explicitChildNodes, _this.properties, _this._getTextDirection$1(type$.BuildContext._as(context)));
    },
    _getTextDirection$1(context) {
      var t1, t2;
      type$.BuildContext._as(context);
      t1 = this.properties;
      t2 = t1.textDirection;
      if (t2 != null)
        return t2;
      if (!(t1.attributedLabel != null || t1.label != null || t1.value != null || t1.hint != null || t1.tooltip != null))
        return null;
      return A.Directionality_maybeOf(context);
    },
    updateRenderObject$2(context, renderObject) {
      var _this = this;
      type$.BuildContext._as(context);
      type$.RenderSemanticsAnnotations._as(renderObject);
      renderObject.set$container(_this.container);
      renderObject.set$explicitChildNodes(_this.explicitChildNodes);
      renderObject.set$excludeSemantics(_this.excludeSemantics);
      renderObject.set$blockUserActions(_this.blockUserActions);
      renderObject.set$properties(_this.properties);
      renderObject.set$textDirection(_this._getTextDirection$1(context));
    },
    debugFillProperties$1(properties) {
      var t1, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, A.DiagnosticsProperty$("container", this.container, true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.bool));
      t1 = this.properties;
      properties.add$1(0, A.DiagnosticsProperty$("properties", t1, true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.SemanticsProperties));
      t1.debugFillProperties$1(properties);
    }
  };
  A.WidgetsBindingObserver.prototype = {
    didPopRoute$0() {
      return B.Future_Future$value(false, type$.bool);
    },
    handleStartBackGesture$1(backEvent) {
      type$.PredictiveBackEvent._as(backEvent);
      return false;
    },
    handleUpdateBackGestureProgress$1(backEvent) {
      type$.PredictiveBackEvent._as(backEvent);
    },
    handleCommitBackGesture$0() {
    },
    handleCancelBackGesture$0() {
    },
    didPushRoute$1(route) {
      B._asString(route);
      return B.Future_Future$value(false, type$.bool);
    },
    didPushRouteInformation$1(routeInformation) {
      var uri = type$.RouteInformation._as(routeInformation).get$uri(),
        t1 = B.boolConversionCheck(J.get$isEmpty$asx(uri.get$path())) ? "/" : uri.get$path(),
        t2 = B.boolConversionCheck(J.get$isEmpty$asx(uri.get$queryParametersAll())) ? null : uri.get$queryParametersAll();
      return this.didPushRoute$1(A.Uri_decodeComponent(J.toString$0$(A._Uri__Uri(B.boolConversionCheck(J.get$isEmpty$asx(uri.get$fragment())) ? null : uri.get$fragment(), t1, t2))));
    },
    didChangeMetrics$0() {
    },
    didChangeTextScaleFactor$0() {
    },
    didChangePlatformBrightness$0() {
    },
    didChangeLocales$1(locales) {
      type$.nullable_List_Locale._as(locales);
    },
    didChangeAppLifecycleState$1(state) {
      type$.AppLifecycleState._as(state);
    },
    didChangeViewFocus$1($event) {
      type$.ViewFocusEvent._as($event);
    },
    didRequestAppExit$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.AppExitResponse),
        $async$returnValue;
      var $async$didRequestAppExit$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = C.AppExitResponse_0;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$didRequestAppExit$0, $async$completer);
    },
    didHaveMemoryPressure$0() {
    },
    didChangeAccessibilityFeatures$0() {
    }
  };
  A.KeyEventResult.prototype = {
    _enumToString$0() {
      return "KeyEventResult." + B.S(this._core$_name);
    }
  };
  A._Autofocus.prototype = {
    applyIfValid$1(manager) {
      var t1;
      type$.FocusManager._as(manager);
      t1 = this.scope;
      if ((t1.get$parent() != null || t1 === manager.rootScope) && t1._manager === manager && t1.get$focusedChild() == null && B.boolConversionCheck(J.contains$1$asx(this.autofocusNode.get$ancestors(), t1)))
        this.autofocusNode._doRequestFocus$1$findFirstFocus(true);
    }
  };
  A.FocusAttachment.prototype = {
    get$isAttached() {
      return J.$eq$(this._node._attachment, this);
    },
    detach$0() {
      var t1, t2;
      if (B.boolConversionCheck(this.get$isAttached())) {
        t1 = this._node;
        if (!B.boolConversionCheck(t1.get$hasPrimaryFocus())) {
          t2 = t1._manager;
          t2 = t2 != null && B.boolConversionCheck(J.$eq$(t2._markedForFocus, t1));
        } else
          t2 = true;
        if (t2)
          t1.unfocus$1$disposition(C.UnfocusDisposition_1);
        t2 = t1._manager;
        if (t2 != null)
          t2._markDetached$1(t1);
        t2 = t1._focus_manager$_parent;
        if (t2 != null)
          t2._removeChild$1(t1);
        t1._attachment = null;
      }
    },
    reparent$1$parent($parent) {
      var t1, _this = this;
      type$.nullable_FocusNode._as($parent);
      if (B.boolConversionCheck(_this.get$isAttached())) {
        if ($parent == null) {
          t1 = _this._node.get$context();
          t1.toString;
          $parent = A.Focus_maybeOf(t1, true, true);
        }
        if ($parent == null)
          $parent = _this._node.get$context().get$owner().focusManager.rootScope;
        $parent._reparent$1(_this._node);
      }
    },
    reparent$0() {
      return this.reparent$1$parent(null);
    }
  };
  A.UnfocusDisposition.prototype = {
    _enumToString$0() {
      return "UnfocusDisposition." + B.S(this._core$_name);
    }
  };
  A.FocusNode.prototype = {
    FocusNode$7$canRequestFocus$debugLabel$descendantsAreFocusable$descendantsAreTraversable$onKey$onKeyEvent$skipTraversal(canRequestFocus, debugLabel, descendantsAreFocusable, descendantsAreTraversable, onKey, onKeyEvent, skipTraversal) {
      this.set$debugLabel(debugLabel);
      A.ChangeNotifier_maybeDispatchObjectCreation(this);
    },
    get$skipTraversal() {
      if (B.boolConversionCheck(this._skipTraversal))
        return true;
      for (var t1 = J.get$iterator$ax(this.get$ancestors()); B.boolConversionCheck(t1.moveNext$0());)
        if (!B.boolConversionCheck(t1.get$current().get$descendantsAreTraversable()))
          return true;
      return false;
    },
    set$skipTraversal(value) {
      var t1, _this = this;
      B._asBool(value);
      if (value !== _this._skipTraversal) {
        _this._skipTraversal = value;
        t1 = _this._manager;
        if (t1 != null)
          t1._markPropertiesChanged$1(_this);
      }
    },
    get$canRequestFocus() {
      return B.boolConversionCheck(this._canRequestFocus) && B.boolConversionCheck(J.every$1$ax(this.get$ancestors(), A.focus_manager_FocusNode__allowDescendantsToBeFocused$closure()));
    },
    set$canRequestFocus(value) {
      var t1, _this = this;
      B._asBool(value);
      if (value !== _this._canRequestFocus) {
        _this._canRequestFocus = value;
        if (B.boolConversionCheck(_this.get$hasFocus()) && !value)
          _this.unfocus$1$disposition(C.UnfocusDisposition_1);
        t1 = _this._manager;
        if (t1 != null)
          t1._markPropertiesChanged$1(_this);
      }
    },
    get$descendantsAreFocusable() {
      return this._descendantsAreFocusable;
    },
    set$descendantsAreFocusable(value) {
      var t1, _this = this;
      B._asBool(value);
      if (value === _this._descendantsAreFocusable)
        return;
      _this._descendantsAreFocusable = value;
      if (!value && B.boolConversionCheck(_this.get$hasFocus()))
        _this.unfocus$1$disposition(C.UnfocusDisposition_1);
      t1 = _this._manager;
      if (t1 != null)
        t1._markPropertiesChanged$1(_this);
    },
    get$descendantsAreTraversable() {
      return this._descendantsAreTraversable;
    },
    set$descendantsAreTraversable(value) {
      var t1, _this = this;
      B._asBool(value);
      if (value !== _this._descendantsAreTraversable) {
        _this._descendantsAreTraversable = value;
        t1 = _this._manager;
        if (t1 != null)
          t1._markPropertiesChanged$1(_this);
      }
    },
    get$context() {
      return this._focus_manager$_context;
    },
    get$parent() {
      return this._focus_manager$_parent;
    },
    get$children() {
      return this._focus_manager$_children;
    },
    get$debugLabel() {
      return null;
    },
    set$debugLabel(value) {
      B._asStringQ(value);
    },
    get$descendants() {
      var result, t1, t2, _this = this;
      if (_this._descendants == null) {
        result = B._setArrayType([], type$.JSArray_FocusNode);
        for (t1 = J.get$iterator$ax(_this._focus_manager$_children); B.boolConversionCheck(t1.moveNext$0());) {
          t2 = t1.get$current();
          D.JSArray_methods.addAll$1(result, t2.get$descendants());
          D.JSArray_methods.add$1(result, t2);
        }
        _this.set$_descendants(result);
      }
      t1 = _this._descendants;
      t1.toString;
      return t1;
    },
    get$traversalDescendants() {
      if (!B.boolConversionCheck(this.get$descendantsAreFocusable()))
        return C.C_EmptyIterable0;
      return J.where$1$ax(this.get$descendants(), new A.FocusNode_traversalDescendants_closure());
    },
    get$ancestors() {
      var result, $parent, t1, _this = this;
      if (_this._ancestors == null) {
        result = B._setArrayType([], type$.JSArray_FocusNode);
        $parent = _this._focus_manager$_parent;
        for (; $parent != null;) {
          D.JSArray_methods.add$1(result, $parent);
          $parent = $parent._focus_manager$_parent;
        }
        _this.set$_ancestors(result);
      }
      t1 = _this._ancestors;
      t1.toString;
      return t1;
    },
    get$hasFocus() {
      if (!B.boolConversionCheck(this.get$hasPrimaryFocus())) {
        var t1 = this._manager;
        if (t1 == null)
          t1 = null;
        else {
          t1 = t1.get$primaryFocus();
          t1 = t1 == null ? null : J.contains$1$asx(t1.get$ancestors(), this);
        }
        t1 = B.boolConversionCheck(t1 == null ? false : t1);
      } else
        t1 = true;
      return t1;
    },
    get$hasPrimaryFocus() {
      var t1 = this._manager;
      return J.$eq$(t1 == null ? null : t1.get$primaryFocus(), this);
    },
    get$nearestScope() {
      return this.get$enclosingScope();
    },
    _clearEnclosingScopeCache$0() {
      var t1, t2, _this = this,
        cachedScope = _this._enclosingScope;
      if (cachedScope == null)
        return;
      _this._enclosingScope = null;
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(_this.get$children())))
        for (t1 = J.get$iterator$ax(_this.get$children()); B.boolConversionCheck(t1.moveNext$0());) {
          t2 = t1.get$current();
          if (cachedScope === t2._enclosingScope)
            t2._clearEnclosingScopeCache$0();
        }
    },
    get$enclosingScope() {
      var t1,
        enclosingScope = this._enclosingScope;
      if (enclosingScope == null) {
        t1 = this.get$parent();
        enclosingScope = t1 == null ? null : t1.get$nearestScope();
        this.set$_enclosingScope(enclosingScope);
      }
      return enclosingScope;
    },
    get$rect() {
      var topLeft, bottomRight,
        t1 = this.get$context().findRenderObject$0();
      t1.toString;
      topLeft = A.MatrixUtils_transformPoint(t1.getTransformTo$1(null), t1.get$semanticBounds().get$topLeft());
      bottomRight = A.MatrixUtils_transformPoint(t1.getTransformTo$1(null), t1.get$semanticBounds().get$bottomRight());
      return A.Rect$fromLTRB(topLeft.get$dx(), topLeft.get$dy(), bottomRight.get$dx(), bottomRight.get$dy());
    },
    unfocus$1$disposition(disposition) {
      var t1, scope, _this = this;
      type$.UnfocusDisposition._as(disposition);
      if (!B.boolConversionCheck(_this.get$hasFocus())) {
        t1 = _this._manager;
        t1 = t1 == null || !B.boolConversionCheck(J.$eq$(t1._markedForFocus, _this));
      } else
        t1 = false;
      if (t1)
        return;
      scope = _this.get$enclosingScope();
      if (scope == null)
        return;
      switch (disposition.index) {
        case 0:
          if (B.boolConversionCheck(scope.get$canRequestFocus()))
            J.clear$0$ax(scope._focusedChildren);
          for (; !B.boolConversionCheck(scope.get$canRequestFocus());) {
            scope = scope.get$enclosingScope();
            if (scope == null) {
              t1 = _this._manager;
              scope = t1 == null ? null : t1.rootScope;
            }
          }
          scope._doRequestFocus$1$findFirstFocus(false);
          break;
        case 1:
          if (B.boolConversionCheck(scope.get$canRequestFocus()))
            J.remove$1$ax(scope._focusedChildren, _this);
          for (; !B.boolConversionCheck(scope.get$canRequestFocus());) {
            t1 = scope.get$enclosingScope();
            if (t1 != null)
              J.remove$1$ax(t1._focusedChildren, scope);
            scope = scope.get$enclosingScope();
            if (scope == null) {
              t1 = _this._manager;
              scope = t1 == null ? null : t1.rootScope;
            }
          }
          scope._doRequestFocus$1$findFirstFocus(true);
          break;
      }
    },
    unfocus$0() {
      return this.unfocus$1$disposition(C.UnfocusDisposition_0);
    },
    _markNextFocus$1(newFocus) {
      var t1, _this = this;
      type$.FocusNode._as(newFocus);
      t1 = _this._manager;
      if (t1 != null) {
        t1._markNextFocus$1(_this);
        return;
      }
      newFocus._setAsFocusedChildForScope$0();
      newFocus._notify$0();
      if (newFocus !== _this)
        _this._notify$0();
    },
    _removeChild$2$removeScopeFocus(node, removeScopeFocus) {
      var nodeScope, t1, t2;
      type$.FocusNode._as(node);
      if (B._asBool(removeScopeFocus)) {
        nodeScope = node.get$enclosingScope();
        if (nodeScope != null) {
          t1 = nodeScope._focusedChildren;
          t2 = J.getInterceptor$ax(t1);
          t2.remove$1(t1, node);
          J.forEach$1$ax(J.where$1$ax(node.get$descendants(), new A.FocusNode__removeChild_closure(nodeScope)), t2.get$remove(t1));
        }
      }
      node._focus_manager$_parent = null;
      node._clearEnclosingScopeCache$0();
      J.remove$1$ax(this._focus_manager$_children, node);
      for (t1 = J.get$iterator$ax(this.get$ancestors()); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().set$_descendants(null);
      this.set$_descendants(null);
    },
    _removeChild$1(node) {
      return this._removeChild$2$removeScopeFocus(node, true);
    },
    _updateManager$1(manager) {
      var t1, t2;
      type$.nullable_FocusManager._as(manager);
      this._manager = manager;
      for (t1 = J.get$iterator$ax(this.get$descendants()); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        t2._manager = manager;
        t2.set$_ancestors(null);
      }
    },
    _reparent$1(child) {
      var oldScope, hadFocus, t1, t2, _this = this;
      type$.FocusNode._as(child);
      if (B.boolConversionCheck(J.$eq$(child._focus_manager$_parent, _this)))
        return;
      oldScope = child.get$enclosingScope();
      hadFocus = child.get$hasFocus();
      t1 = child._focus_manager$_parent;
      if (t1 != null) {
        t2 = _this.get$nearestScope();
        t1._removeChild$2$removeScopeFocus(child, oldScope == null ? t2 != null : oldScope !== t2);
      }
      J.add$1$ax(_this._focus_manager$_children, child);
      child._focus_manager$_parent = _this;
      child.set$_ancestors(null);
      child._updateManager$1(_this._manager);
      for (t1 = J.get$iterator$ax(child.get$ancestors()); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().set$_descendants(null);
      if (hadFocus) {
        t1 = _this._manager;
        if (t1 != null) {
          t1 = t1.get$primaryFocus();
          if (t1 != null)
            t1._setAsFocusedChildForScope$0();
        }
      }
      if (oldScope != null && child.get$context() != null && !B.boolConversionCheck(J.$eq$(child.get$enclosingScope(), oldScope))) {
        t1 = child.get$context();
        t1.toString;
        t1 = A.FocusTraversalGroup_maybeOf(t1);
        if (t1 != null)
          t1.changedScope$2$node$oldScope(child, oldScope);
      }
      if (B.boolConversionCheck(child._requestFocusWhenReparented)) {
        child._doRequestFocus$1$findFirstFocus(true);
        child._requestFocusWhenReparented = false;
      }
    },
    attach$3$onKey$onKeyEvent(context, onKey, onKeyEvent) {
      var _this = this;
      type$.nullable_BuildContext._as(context);
      type$.nullable_KeyEventResult_Function_FocusNode_KeyEvent._as(onKeyEvent);
      type$.nullable_KeyEventResult_Function_FocusNode_RawKeyEvent._as(onKey);
      _this._focus_manager$_context = context;
      _this.set$onKey(onKey == null ? _this.onKey : onKey);
      _this.set$onKeyEvent(onKeyEvent == null ? _this.onKeyEvent : onKeyEvent);
      return _this._attachment = A.FocusAttachment$_(_this);
    },
    dispose$0() {
      var t1 = this._attachment;
      if (t1 != null)
        t1.detach$0();
      this.super$ChangeNotifier$dispose();
    },
    _notify$0() {
      var _this = this;
      if (_this._focus_manager$_parent == null)
        return;
      if (B.boolConversionCheck(_this.get$hasPrimaryFocus()))
        _this._setAsFocusedChildForScope$0();
      _this.notifyListeners$0();
    },
    requestFocus$1(node) {
      type$.nullable_FocusNode._as(node);
      if (node != null) {
        if (node._focus_manager$_parent == null)
          this._reparent$1(node);
        node._doRequestFocus$1$findFirstFocus(true);
        return;
      }
      this._doRequestFocus$1$findFirstFocus(true);
    },
    requestFocus$0() {
      return this.requestFocus$1(null);
    },
    _doRequestFocus$1$findFirstFocus(findFirstFocus) {
      var t1, _this = this;
      B._asBool(findFirstFocus);
      if (!B.boolConversionCheck(_this.get$canRequestFocus()))
        return;
      if (_this._focus_manager$_parent == null) {
        _this._requestFocusWhenReparented = true;
        return;
      }
      _this._setAsFocusedChildForScope$0();
      if (B.boolConversionCheck(_this.get$hasPrimaryFocus())) {
        t1 = _this._manager._markedForFocus;
        t1 = t1 == null || B.boolConversionCheck(J.$eq$(t1, _this));
      } else
        t1 = false;
      if (t1)
        return;
      _this._markNextFocus$1(_this);
    },
    _setAsFocusedChildForScope$0() {
      var t1, scopeFocus, scopeFocus0, t2, t3;
      for (t1 = J.get$iterator$ax(J.whereType$1$0$ax(this.get$ancestors(), type$.FocusScopeNode)), scopeFocus = this; B.boolConversionCheck(t1.moveNext$0()); scopeFocus = scopeFocus0) {
        scopeFocus0 = t1.get$current();
        t2 = scopeFocus0._focusedChildren;
        t3 = J.getInterceptor$ax(t2);
        t3.remove$1(t2, scopeFocus);
        t3.add$1(t2, scopeFocus);
      }
    },
    nextFocus$0() {
      var t1 = this.get$context();
      t1.toString;
      return A.FocusTraversalGroup_of(t1).next$1(this);
    },
    previousFocus$0() {
      var t1 = this.get$context();
      t1.toString;
      return A.FocusTraversalGroup_of(t1).previous$1(this);
    },
    focusInDirection$1(direction) {
      var t1;
      type$.TraversalDirection._as(direction);
      t1 = this.get$context();
      t1.toString;
      return A.FocusTraversalGroup_of(t1).inDirection$2(this, direction);
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$DiagnosticableTreeMixin$debugFillProperties(properties);
      properties.add$1(0, A.DiagnosticsProperty$("context", _this.get$context(), true, _null, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.BuildContext));
      properties.add$1(0, A.FlagProperty$("descendantsAreFocusable", true, "DESCENDANTS UNFOCUSABLE", _null, C.DiagnosticLevel_3, false, _this.get$descendantsAreFocusable()));
      properties.add$1(0, A.FlagProperty$("descendantsAreTraversable", true, "DESCENDANTS UNTRAVERSABLE", _null, C.DiagnosticLevel_3, false, _this.get$descendantsAreTraversable()));
      properties.add$1(0, A.FlagProperty$("canRequestFocus", true, "NOT FOCUSABLE", _null, C.DiagnosticLevel_3, false, _this.get$canRequestFocus()));
      properties.add$1(0, A.FlagProperty$("hasFocus", false, _null, "IN FOCUS PATH", C.DiagnosticLevel_3, false, B.boolConversionCheck(_this.get$hasFocus()) && !B.boolConversionCheck(_this.get$hasPrimaryFocus())));
      properties.add$1(0, A.FlagProperty$("hasPrimaryFocus", false, _null, "PRIMARY FOCUS", C.DiagnosticLevel_3, false, _this.get$hasPrimaryFocus()));
    },
    debugDescribeChildren$0() {
      var t1 = {};
      t1.count = 1;
      return J.toList$0$ax(J.map$1$1$ax(this._focus_manager$_children, new A.FocusNode_debugDescribeChildren_closure(t1), type$.DiagnosticsNode));
    },
    toStringShort$0() {
      var t1, hasDebugLabel, t2, t3, t4, extraData, _this = this;
      if (_this.get$debugLabel() != null) {
        t1 = _this.get$debugLabel();
        t1.toString;
        hasDebugLabel = B.boolConversionCheck(J.get$isNotEmpty$asx(t1));
      } else
        hasDebugLabel = false;
      t1 = B.S(hasDebugLabel ? _this.get$debugLabel() : "");
      t2 = B.boolConversionCheck(_this.get$hasFocus()) && hasDebugLabel ? " " : "";
      t3 = B.boolConversionCheck(_this.get$hasFocus()) && !B.boolConversionCheck(_this.get$hasPrimaryFocus()) ? "[IN FOCUS PATH]" : "";
      t4 = B.boolConversionCheck(_this.get$hasPrimaryFocus()) ? "[PRIMARY FOCUS]" : "";
      extraData = t1 + t2 + t3 + t4;
      t4 = B.S(A.describeIdentity(_this));
      return t4 + (B.boolConversionCheck(D.JSString_methods.get$isNotEmpty(extraData)) ? "(" + extraData + ")" : "");
    },
    set$onKey(onKey) {
      this.onKey = type$.nullable_KeyEventResult_Function_FocusNode_RawKeyEvent._as(onKey);
    },
    set$onKeyEvent(onKeyEvent) {
      this.onKeyEvent = type$.nullable_KeyEventResult_Function_FocusNode_KeyEvent._as(onKeyEvent);
    },
    set$_ancestors(_ancestors) {
      this._ancestors = type$.nullable_List_FocusNode._as(_ancestors);
    },
    set$_descendants(_descendants) {
      this._descendants = type$.nullable_List_FocusNode._as(_descendants);
    },
    set$_enclosingScope(_enclosingScope) {
      this._enclosingScope = type$.nullable_FocusScopeNode._as(_enclosingScope);
    },
    $isListenable: 1,
    $isChangeNotifier: 1,
    $isDiagnosticable: 1,
    $isDiagnosticableTree: 1,
    $isDiagnosticableTreeMixin: 1,
    $is_DiagnosticableTree_Object_Diagnosticable: 1
  };
  A.FocusScopeNode.prototype = {
    get$nearestScope() {
      return this;
    },
    get$descendantsAreFocusable() {
      return B.boolConversionCheck(this._canRequestFocus) && B.boolConversionCheck(A.FocusNode.prototype.get$descendantsAreFocusable.call(this));
    },
    get$focusedChild() {
      return A.IterableExtensions_get_lastOrNull(this._focusedChildren, type$.FocusNode);
    },
    get$traversalDescendants() {
      if (!B.boolConversionCheck(this.get$canRequestFocus()))
        return C.C_EmptyIterable0;
      return A.FocusNode.prototype.get$traversalDescendants.call(this);
    },
    setFirstFocus$1(scope) {
      type$.FocusScopeNode._as(scope);
      if (scope._focus_manager$_parent == null)
        this._reparent$1(scope);
      if (B.boolConversionCheck(this.get$hasFocus()))
        scope._doRequestFocus$1$findFirstFocus(true);
      else
        scope._setAsFocusedChildForScope$0();
    },
    autofocus$1(node) {
      var t1, _this = this;
      type$.FocusNode._as(node);
      if (node._focus_manager$_parent == null)
        _this._reparent$1(node);
      t1 = _this._manager;
      if (t1 != null)
        J.add$1$ax(t1._pendingAutofocuses, A._Autofocus$(node, _this));
      t1 = _this._manager;
      if (t1 != null)
        t1._markNeedsUpdate$0();
    },
    requestScopeFocus$0() {
      this._doRequestFocus$1$findFirstFocus(false);
    },
    _doRequestFocus$1$findFirstFocus(findFirstFocus) {
      var t1, t2, t3, focusedChild, _this = this;
      B._asBool(findFirstFocus);
      t1 = _this._focusedChildren;
      t2 = J.getInterceptor$asx(t1);
      while (true) {
        if (B.boolConversionCheck(t2.get$isNotEmpty(t1)))
          t3 = !B.boolConversionCheck(t2.get$last(t1).get$canRequestFocus()) || t2.get$last(t1).get$enclosingScope() == null;
        else
          t3 = false;
        if (!t3)
          break;
        t2.removeLast$0(t1);
      }
      focusedChild = _this.get$focusedChild();
      if (!findFirstFocus || focusedChild == null) {
        if (B.boolConversionCheck(_this.get$canRequestFocus())) {
          _this._setAsFocusedChildForScope$0();
          _this._markNextFocus$1(_this);
        }
        return;
      }
      focusedChild._doRequestFocus$1$findFirstFocus(true);
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$FocusNode$debugFillProperties(properties);
      t1 = this._focusedChildren;
      t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t2.get$isEmpty(t1)))
        return;
      t3 = type$.String;
      properties.add$1(0, A.IterableProperty$("focusedChildren", J.toList$0$ax(J.map$1$1$ax(t2.get$reversed(t1), new A.FocusScopeNode_debugFillProperties_closure(), t3)), C.C_EmptyIterable, "[]", C.DiagnosticLevel_3, C.DiagnosticsTreeStyle_8, t3));
      properties.add$1(0, A.DiagnosticsProperty$("traversalEdgeBehavior", this.traversalEdgeBehavior, true, C.TraversalEdgeBehavior_0, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.TraversalEdgeBehavior));
    }
  };
  A.FocusHighlightMode.prototype = {
    _enumToString$0() {
      return "FocusHighlightMode." + B.S(this._core$_name);
    }
  };
  A._FocusNode_Object_DiagnosticableTreeMixin.prototype = {$isDiagnosticable: 1, $isDiagnosticableTree: 1, $isDiagnosticableTreeMixin: 1, $is_DiagnosticableTree_Object_Diagnosticable: 1};
  A._FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier.prototype = {$isListenable: 1, $isChangeNotifier: 1, $isDiagnosticable: 1, $isDiagnosticableTree: 1, $isDiagnosticableTreeMixin: 1, $is_DiagnosticableTree_Object_Diagnosticable: 1};
  A.Focus.prototype = {
    get$_usingExternalFocus() {
      return false;
    },
    get$onKeyEvent() {
      var t1 = this._onKeyEvent;
      if (t1 == null) {
        t1 = this.focusNode;
        t1 = t1 == null ? null : t1.onKeyEvent;
      }
      return t1;
    },
    get$onKey() {
      var t1 = this._onKey;
      if (t1 == null) {
        t1 = this.focusNode;
        t1 = t1 == null ? null : t1.onKey;
      }
      return t1;
    },
    get$canRequestFocus() {
      var t1 = this._focus_scope$_canRequestFocus;
      if (t1 == null) {
        t1 = this.focusNode;
        t1 = t1 == null ? null : t1.get$canRequestFocus();
      }
      return t1 == null ? true : t1;
    },
    get$skipTraversal() {
      var t1 = this._focus_scope$_skipTraversal;
      if (t1 == null) {
        t1 = this.focusNode;
        t1 = t1 == null ? null : t1.get$skipTraversal();
      }
      return t1 == null ? false : t1;
    },
    get$descendantsAreFocusable() {
      var t1 = this._focus_scope$_descendantsAreFocusable;
      if (t1 == null) {
        t1 = this.focusNode;
        t1 = t1 == null ? null : t1.get$descendantsAreFocusable();
      }
      return t1 == null ? true : t1;
    },
    get$descendantsAreTraversable() {
      var t1 = this._focus_scope$_descendantsAreTraversable;
      if (t1 == null) {
        t1 = this.focusNode;
        t1 = t1 == null ? null : t1.get$descendantsAreTraversable();
      }
      return t1 == null ? true : t1;
    },
    get$debugLabel() {
      var t1 = this._debugLabel;
      if (t1 == null) {
        t1 = this.focusNode;
        t1 = t1 == null ? null : t1.get$debugLabel();
      }
      return t1;
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, A.StringProperty$("debugLabel", _this.get$debugLabel(), _null, true, true));
      properties.add$1(0, A.FlagProperty$("autofocus", false, _null, "AUTOFOCUS", C.DiagnosticLevel_3, false, _this.autofocus));
      properties.add$1(0, A.FlagProperty$("canRequestFocus", false, "NOT FOCUSABLE", _null, C.DiagnosticLevel_3, false, _this.get$canRequestFocus()));
      properties.add$1(0, A.FlagProperty$("descendantsAreFocusable", true, "DESCENDANTS UNFOCUSABLE", _null, C.DiagnosticLevel_3, false, _this.get$descendantsAreFocusable()));
      properties.add$1(0, A.FlagProperty$("descendantsAreTraversable", true, "DESCENDANTS UNTRAVERSABLE", _null, C.DiagnosticLevel_3, false, _this.get$descendantsAreTraversable()));
      properties.add$1(0, A.DiagnosticsProperty$("focusNode", _this.focusNode, true, _null, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.FocusNode));
    },
    createState$0() {
      return A._FocusState$();
    }
  };
  A._FocusState.prototype = {
    get$focusNode() {
      var _this = this,
        t1 = _this.get$widget().focusNode;
      if (t1 == null) {
        t1 = _this._internalNode;
        if (t1 == null) {
          t1 = _this._createNode$0();
          _this.set$_internalNode(t1);
        }
      }
      return t1;
    },
    get$_hadPrimaryFocus() {
      return this.___FocusState__hadPrimaryFocus_A;
    },
    set$_hadPrimaryFocus(value) {
      this.___FocusState__hadPrimaryFocus_A = B._asBool(value);
    },
    get$_couldRequestFocus() {
      return this.___FocusState__couldRequestFocus_A;
    },
    set$_couldRequestFocus(value) {
      this.___FocusState__couldRequestFocus_A = B._asBool(value);
    },
    get$_descendantsWereFocusable() {
      return this.___FocusState__descendantsWereFocusable_A;
    },
    set$_descendantsWereFocusable(value) {
      this.___FocusState__descendantsWereFocusable_A = B._asBool(value);
    },
    get$_descendantsWereTraversable() {
      return this.___FocusState__descendantsWereTraversable_A;
    },
    set$_descendantsWereTraversable(value) {
      this.___FocusState__descendantsWereTraversable_A = B._asBool(value);
    },
    initState$0() {
      this.super$State$initState0();
      this._initNode$0();
    },
    _initNode$0() {
      var t1, t2, t3, _this = this;
      if (!B.boolConversionCheck(_this.get$widget().get$_usingExternalFocus())) {
        _this.get$focusNode().set$descendantsAreFocusable(_this.get$widget().get$descendantsAreFocusable());
        _this.get$focusNode().set$descendantsAreTraversable(_this.get$widget().get$descendantsAreTraversable());
        _this.get$focusNode().set$skipTraversal(_this.get$widget().get$skipTraversal());
        if (_this.get$widget()._focus_scope$_canRequestFocus != null) {
          t1 = _this.get$focusNode();
          t2 = _this.get$widget()._focus_scope$_canRequestFocus;
          t2.toString;
          t1.set$canRequestFocus(t2);
        }
      }
      _this.set$_couldRequestFocus(_this.get$focusNode().get$canRequestFocus());
      _this.set$_descendantsWereFocusable(_this.get$focusNode().get$descendantsAreFocusable());
      _this.set$_descendantsWereTraversable(_this.get$focusNode().get$descendantsAreTraversable());
      _this.set$_hadPrimaryFocus(_this.get$focusNode().get$hasPrimaryFocus());
      t1 = _this.get$focusNode();
      t2 = _this.get$context();
      t3 = _this.get$widget().get$onKeyEvent();
      _this.set$_focusAttachment(t1.attach$3$onKey$onKeyEvent(t2, _this.get$widget().get$onKey(), t3));
      _this.get$focusNode().addListener$1(_this.get$_handleFocusChanged());
    },
    _createNode$0() {
      var _this = this,
        t1 = _this.get$widget().get$debugLabel();
      return A.FocusNode$(_this.get$widget().get$canRequestFocus(), t1, _this.get$widget().get$descendantsAreFocusable(), _this.get$widget().get$descendantsAreTraversable(), null, null, _this.get$widget().get$skipTraversal());
    },
    dispose$0() {
      var t1, _this = this;
      _this.get$focusNode().removeListener$1(_this.get$_handleFocusChanged());
      _this._focusAttachment.detach$0();
      t1 = _this._internalNode;
      if (t1 != null)
        t1.dispose$0();
      _this.super$State$dispose();
    },
    didChangeDependencies$0() {
      this.super$State$didChangeDependencies();
      var t1 = this._focusAttachment;
      if (t1 != null)
        t1.reparent$0();
      this._handleAutofocus$0();
    },
    _handleAutofocus$0() {
      var _this = this;
      if (!B.boolConversionCheck(_this._didAutofocus) && B.boolConversionCheck(_this.get$widget().autofocus)) {
        A.FocusScope_of(_this.get$context()).autofocus$1(_this.get$focusNode());
        _this._didAutofocus = true;
      }
    },
    deactivate$0() {
      this.super$State$deactivate();
      var t1 = this._focusAttachment;
      if (t1 != null)
        t1.reparent$0();
      this._didAutofocus = false;
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, _this = this;
      type$.Focus._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = oldWidget.focusNode;
      if (B.boolConversionCheck(J.$eq$(t1, _this.get$widget().focusNode))) {
        if (!B.boolConversionCheck(_this.get$widget().get$_usingExternalFocus())) {
          if (!B.boolConversionCheck(J.$eq$(_this.get$widget().get$onKey(), _this.get$focusNode().onKey)))
            _this.get$focusNode().set$onKey(_this.get$widget().get$onKey());
          if (!B.boolConversionCheck(J.$eq$(_this.get$widget().get$onKeyEvent(), _this.get$focusNode().onKeyEvent)))
            _this.get$focusNode().set$onKeyEvent(_this.get$widget().get$onKeyEvent());
          _this.get$focusNode().set$skipTraversal(_this.get$widget().get$skipTraversal());
          if (_this.get$widget()._focus_scope$_canRequestFocus != null) {
            t1 = _this.get$focusNode();
            t2 = _this.get$widget()._focus_scope$_canRequestFocus;
            t2.toString;
            t1.set$canRequestFocus(t2);
          }
          _this.get$focusNode().set$descendantsAreFocusable(_this.get$widget().get$descendantsAreFocusable());
          _this.get$focusNode().set$descendantsAreTraversable(_this.get$widget().get$descendantsAreTraversable());
        }
      } else {
        _this._focusAttachment.detach$0();
        if (t1 != null)
          t1.removeListener$1(_this.get$_handleFocusChanged());
        _this._initNode$0();
      }
      if (!B.boolConversionCheck(J.$eq$(oldWidget.autofocus, _this.get$widget().autofocus)))
        _this._handleAutofocus$0();
    },
    _handleFocusChanged$0() {
      var _this = this,
        hasPrimaryFocus = _this.get$focusNode().get$hasPrimaryFocus(),
        canRequestFocus = _this.get$focusNode().get$canRequestFocus(),
        descendantsAreFocusable = _this.get$focusNode().get$descendantsAreFocusable(),
        descendantsAreTraversable = _this.get$focusNode().get$descendantsAreTraversable(),
        t1 = _this.get$widget().onFocusChange;
      if (t1 != null)
        t1.call$1(_this.get$focusNode().get$hasFocus());
      if (!B.boolConversionCheck(J.$eq$(_this.get$_hadPrimaryFocus(), hasPrimaryFocus)))
        _this.setState$1(new A._FocusState__handleFocusChanged_closure(_this, hasPrimaryFocus));
      if (!B.boolConversionCheck(J.$eq$(_this.get$_couldRequestFocus(), canRequestFocus)))
        _this.setState$1(new A._FocusState__handleFocusChanged_closure0(_this, canRequestFocus));
      if (!B.boolConversionCheck(J.$eq$(_this.get$_descendantsWereFocusable(), descendantsAreFocusable)))
        _this.setState$1(new A._FocusState__handleFocusChanged_closure1(_this, descendantsAreFocusable));
      if (!B.boolConversionCheck(J.$eq$(_this.get$_descendantsWereTraversable(), descendantsAreTraversable)))
        _this.setState$1(new A._FocusState__handleFocusChanged_closure2(_this, descendantsAreTraversable));
    },
    build$1(context) {
      var t1, child, t2, t3, _this = this, _null = null;
      type$.BuildContext._as(context);
      t1 = _this._focusAttachment;
      t1.toString;
      t1.reparent$1$parent(_this.get$widget().parentNode);
      child = _this.get$widget().child;
      if (B.boolConversionCheck(_this.get$widget().includeSemantics)) {
        t1 = !B.boolConversionCheck(J.$eq$(A.defaultTargetPlatform(), C.TargetPlatform_2)) && B.boolConversionCheck(_this.get$_couldRequestFocus()) ? _this.get$focusNode().get$requestFocus() : _null;
        t2 = _this.get$_couldRequestFocus();
        t3 = _this.get$_hadPrimaryFocus();
        child = A.Semantics$(_null, _this.get$widget().child, false, _null, false, t2, t3, _null, _null, t1, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      }
      return A._FocusInheritedScope$(child, _this.get$focusNode());
    },
    set$_internalNode(_internalNode) {
      this._internalNode = type$.nullable_FocusNode._as(_internalNode);
    },
    set$_focusAttachment(_focusAttachment) {
      this._focusAttachment = type$.nullable_FocusAttachment._as(_focusAttachment);
    }
  };
  A.FocusScope.prototype = {
    createState$0() {
      return A._FocusScopeState$();
    }
  };
  A._FocusScopeWithExternalFocusNode.prototype = {
    get$_usingExternalFocus() {
      return true;
    },
    get$onKeyEvent() {
      return this.focusNode.onKeyEvent;
    },
    get$onKey() {
      return this.focusNode.onKey;
    },
    get$canRequestFocus() {
      return this.focusNode.get$canRequestFocus();
    },
    get$skipTraversal() {
      return this.focusNode.get$skipTraversal();
    },
    get$descendantsAreFocusable() {
      return this.focusNode.get$descendantsAreFocusable();
    },
    get$descendantsAreTraversable() {
      return this.focusNode.get$descendantsAreTraversable();
    },
    get$debugLabel() {
      return this.focusNode.get$debugLabel();
    }
  };
  A._FocusScopeState.prototype = {
    _createNode$0() {
      var t1 = this.get$widget().get$debugLabel();
      return A.FocusScopeNode$(this.get$widget().get$canRequestFocus(), t1, this.get$widget().get$skipTraversal());
    },
    build$1(context) {
      var t1, result, _this = this, _null = null;
      type$.BuildContext._as(context);
      t1 = _this._focusAttachment;
      t1.toString;
      t1.reparent$1$parent(_this.get$widget().parentNode);
      t1 = _this.get$focusNode();
      result = A._FocusInheritedScope$(_this.get$widget().child, t1);
      return B.boolConversionCheck(_this.get$widget().includeSemantics) ? A.Semantics$(_null, result, false, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null) : result;
    }
  };
  A._FocusInheritedScope.prototype = {};
  A._FocusTraversalGroupInfo.prototype = {};
  A.TraversalDirection.prototype = {
    _enumToString$0() {
      return "TraversalDirection." + B.S(this._core$_name);
    }
  };
  A.TraversalEdgeBehavior.prototype = {
    _enumToString$0() {
      return "TraversalEdgeBehavior." + B.S(this._core$_name);
    }
  };
  A.FocusTraversalPolicy.prototype = {
    _requestTabTraversalFocus$6$alignment$alignmentPolicy$curve$duration$forward(node, alignment, alignmentPolicy, curve, duration, $forward) {
      var t1, sortedChildren, nodeHadPrimaryFocus;
      type$.FocusNode._as(node);
      type$.nullable_ScrollPositionAlignmentPolicy._as(alignmentPolicy);
      B._asDoubleQ(alignment);
      type$.nullable_Duration._as(duration);
      type$.nullable_Curve._as(curve);
      B._asBool($forward);
      if (node instanceof A.FocusScopeNode) {
        if (node.get$focusedChild() != null) {
          t1 = node.get$focusedChild();
          t1.toString;
          return this._requestTabTraversalFocus$6$alignment$alignmentPolicy$curve$duration$forward(t1, alignment, alignmentPolicy, curve, duration, $forward);
        }
        sortedChildren = A.FocusTraversalPolicy__sortAllDescendants(node, node);
        t1 = J.getInterceptor$asx(sortedChildren);
        if (B.boolConversionCheck(t1.get$isNotEmpty(sortedChildren))) {
          this._requestTabTraversalFocus$6$alignment$alignmentPolicy$curve$duration$forward($forward ? t1.get$first(sortedChildren) : t1.get$last(sortedChildren), alignment, alignmentPolicy, curve, duration, $forward);
          return true;
        }
      }
      nodeHadPrimaryFocus = node.get$hasPrimaryFocus();
      this.requestFocusCallback.call$5$alignment$alignmentPolicy$curve$duration(node, alignment, alignmentPolicy, curve, duration);
      return !nodeHadPrimaryFocus;
    },
    _requestTabTraversalFocus$3$alignmentPolicy$forward(node, alignmentPolicy, $forward) {
      return this._requestTabTraversalFocus$6$alignment$alignmentPolicy$curve$duration$forward(node, null, alignmentPolicy, null, null, $forward);
    },
    findFirstFocus$2$ignoreCurrentFocus(currentNode, ignoreCurrentFocus) {
      return this._findInitialFocus$2$ignoreCurrentFocus(type$.FocusNode._as(currentNode), B._asBool(ignoreCurrentFocus));
    },
    findFirstFocus$1(currentNode) {
      return this.findFirstFocus$2$ignoreCurrentFocus(currentNode, false);
    },
    findLastFocus$2$ignoreCurrentFocus(currentNode, ignoreCurrentFocus) {
      return this._findInitialFocus$3$fromEnd$ignoreCurrentFocus(type$.FocusNode._as(currentNode), true, B._asBool(ignoreCurrentFocus));
    },
    findLastFocus$1(currentNode) {
      return this.findLastFocus$2$ignoreCurrentFocus(currentNode, false);
    },
    _findInitialFocus$3$fromEnd$ignoreCurrentFocus(currentNode, fromEnd, ignoreCurrentFocus) {
      var t1, candidate, t2, sorted;
      type$.FocusNode._as(currentNode);
      B._asBool(fromEnd);
      B._asBool(ignoreCurrentFocus);
      t1 = currentNode.get$nearestScope();
      t1.toString;
      candidate = t1.get$focusedChild();
      if (!ignoreCurrentFocus)
        t2 = candidate == null && B.boolConversionCheck(J.get$isNotEmpty$asx(t1.get$descendants()));
      else
        t2 = true;
      if (t2) {
        sorted = J.where$1$ax(A.FocusTraversalPolicy__sortAllDescendants(t1, currentNode), new A.FocusTraversalPolicy__findInitialFocus_closure());
        t1 = J.getInterceptor$asx(sorted);
        if (B.boolConversionCheck(t1.get$isEmpty(sorted)))
          candidate = null;
        else
          candidate = fromEnd ? t1.get$last(sorted) : t1.get$first(sorted);
      }
      return candidate == null ? currentNode : candidate;
    },
    _findInitialFocus$2$ignoreCurrentFocus(currentNode, ignoreCurrentFocus) {
      return this._findInitialFocus$3$fromEnd$ignoreCurrentFocus(currentNode, false, ignoreCurrentFocus);
    },
    invalidateScopeData$1(node) {
      type$.FocusScopeNode._as(node);
    },
    changedScope$2$node$oldScope(node, oldScope) {
      type$.nullable_FocusNode._as(node);
      type$.nullable_FocusScopeNode._as(oldScope);
    },
    next$1(currentNode) {
      return this._moveFocus$2$forward(type$.FocusNode._as(currentNode), true);
    },
    previous$1(currentNode) {
      return this._moveFocus$2$forward(type$.FocusNode._as(currentNode), false);
    },
    _moveFocus$2$forward(currentNode, $forward) {
      var t1, focusedChild, t2, firstFocus, sortedNodes, parentScope, previousNode, previousNode0, _this = this;
      type$.FocusNode._as(currentNode);
      B._asBool($forward);
      t1 = currentNode.get$nearestScope();
      t1.toString;
      _this.invalidateScopeData$1(t1);
      focusedChild = t1.get$focusedChild();
      t2 = focusedChild == null;
      if (t2) {
        firstFocus = $forward ? _this.findFirstFocus$1(currentNode) : _this.findLastFocus$1(currentNode);
        if (firstFocus != null)
          return _this._requestTabTraversalFocus$3$alignmentPolicy$forward(firstFocus, $forward ? C.ScrollPositionAlignmentPolicy_1 : C.ScrollPositionAlignmentPolicy_2, $forward);
      }
      if (t2)
        focusedChild = t1;
      sortedNodes = A.FocusTraversalPolicy__sortAllDescendants(t1, focusedChild);
      if ($forward && focusedChild === J.get$last$ax(sortedNodes))
        switch (t1.traversalEdgeBehavior) {
          case C.TraversalEdgeBehavior_1:
            focusedChild.unfocus$0();
            return false;
          case C.TraversalEdgeBehavior_2:
            parentScope = t1.get$enclosingScope();
            if (parentScope != null && parentScope !== A.FocusManager_instance().rootScope) {
              focusedChild.unfocus$0();
              parentScope.nextFocus$0();
              t1 = focusedChild.get$enclosingScope();
              return !B.boolConversionCheck(J.$eq$(t1 == null ? null : t1.get$focusedChild(), focusedChild));
            }
            return _this._requestTabTraversalFocus$3$alignmentPolicy$forward(J.get$first$ax(sortedNodes), C.ScrollPositionAlignmentPolicy_1, $forward);
          case C.TraversalEdgeBehavior_0:
            return _this._requestTabTraversalFocus$3$alignmentPolicy$forward(J.get$first$ax(sortedNodes), C.ScrollPositionAlignmentPolicy_1, $forward);
        }
      if (!$forward && focusedChild === J.get$first$ax(sortedNodes))
        switch (t1.traversalEdgeBehavior) {
          case C.TraversalEdgeBehavior_1:
            focusedChild.unfocus$0();
            return false;
          case C.TraversalEdgeBehavior_2:
            parentScope = t1.get$enclosingScope();
            if (parentScope != null && parentScope !== A.FocusManager_instance().rootScope) {
              focusedChild.unfocus$0();
              parentScope.previousFocus$0();
              t1 = focusedChild.get$enclosingScope();
              return !B.boolConversionCheck(J.$eq$(t1 == null ? null : t1.get$focusedChild(), focusedChild));
            }
            return _this._requestTabTraversalFocus$3$alignmentPolicy$forward(J.get$last$ax(sortedNodes), C.ScrollPositionAlignmentPolicy_2, $forward);
          case C.TraversalEdgeBehavior_0:
            return _this._requestTabTraversalFocus$3$alignmentPolicy$forward(J.get$last$ax(sortedNodes), C.ScrollPositionAlignmentPolicy_2, $forward);
        }
      for (t1 = J.get$iterator$ax($forward ? sortedNodes : J.get$reversed$ax(sortedNodes)), previousNode = null; B.boolConversionCheck(t1.moveNext$0()); previousNode = previousNode0) {
        previousNode0 = t1.get$current();
        if (previousNode === focusedChild)
          return _this._requestTabTraversalFocus$3$alignmentPolicy$forward(previousNode0, $forward ? C.ScrollPositionAlignmentPolicy_1 : C.ScrollPositionAlignmentPolicy_2, $forward);
      }
      return false;
    },
    $isDiagnosticable: 1,
    requestFocusCallback$2$alignmentPolicy(arg0, arg1) {
      return this.requestFocusCallback.call$2$alignmentPolicy(arg0, arg1);
    }
  };
  A._DirectionalPolicyDataEntry.prototype = {};
  A._DirectionalPolicyData.prototype = {};
  A.DirectionalFocusTraversalPolicyMixin.prototype = {
    findFirstFocusInDirection$2(currentNode, direction) {
      var sorted, t2, _0_1, t3, t4, _0_2, _null = null, _box_0 = {},
        t1 = type$.FocusNode;
      t1._as(currentNode);
      type$.TraversalDirection._as(direction);
      sorted = J.toList$0$ax(currentNode.get$nearestScope().get$traversalDescendants());
      _box_0.first = _box_0.vertical = null;
      switch (direction.index) {
        case 0:
          t2 = C.Record2_true_false;
          break;
        case 2:
          t2 = C.Record2_true_true;
          break;
        case 3:
          t2 = C.Record2_false_false;
          break;
        case 1:
          t2 = C.Record2_false_true;
          break;
        default:
          t2 = _null;
      }
      _0_1 = t2._0;
      t3 = _0_1;
      t4 = false;
      if (B._isBool(t3)) {
        _box_0.vertical = _0_1;
        _0_2 = t2._1;
        t2 = _0_2;
        t2 = B._isBool(t2);
        if (t2)
          _box_0.first = _0_2;
      } else
        t2 = t4;
      if (!t2)
        throw B.wrapException(B.StateError$("Pattern matching error"));
      A.mergeSort(sorted, new A.DirectionalFocusTraversalPolicyMixin_findFirstFocusInDirection_closure(_box_0), t1);
      return B.IterableExtensions_get_firstOrNull(sorted, t1);
    },
    _sortAndFilterHorizontally$3(direction, target, nodes) {
      var t1, sorted;
      type$.TraversalDirection._as(direction);
      type$.Rect._as(target);
      type$.Iterable_FocusNode._as(nodes);
      $label0$0: {
        if (C.TraversalDirection_3 === direction) {
          t1 = new A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure(target);
          break $label0$0;
        }
        if (C.TraversalDirection_1 === direction) {
          t1 = new A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0(target);
          break $label0$0;
        }
        t1 = C.TraversalDirection_0 === direction || C.TraversalDirection_2 === direction ? B.throwExpression(B.ArgumentError$("Invalid direction " + B.S(direction), null)) : null;
      }
      sorted = J.toList$0$ax(J.where$1$ax(nodes, t1));
      A.mergeSort(sorted, new A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1(), type$.FocusNode);
      return sorted;
    },
    _sortAndFilterVertically$3(direction, target, nodes) {
      var t1, sorted;
      type$.TraversalDirection._as(direction);
      type$.Rect._as(target);
      type$.Iterable_FocusNode._as(nodes);
      $label0$0: {
        if (C.TraversalDirection_0 === direction) {
          t1 = new A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure(target);
          break $label0$0;
        }
        if (C.TraversalDirection_2 === direction) {
          t1 = new A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0(target);
          break $label0$0;
        }
        t1 = C.TraversalDirection_3 === direction || C.TraversalDirection_1 === direction ? B.throwExpression(B.ArgumentError$("Invalid direction " + B.S(direction), null)) : null;
      }
      sorted = J.toList$0$ax(J.where$1$ax(nodes, t1));
      A.mergeSort(sorted, new A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1(), type$.FocusNode);
      return sorted;
    },
    _popPolicyDataIfNeeded$3(direction, nearestScope, focusedChild) {
      var policyData, t1, t2, t3, popOrInvalidate, _this = this;
      type$.TraversalDirection._as(direction);
      type$.FocusScopeNode._as(nearestScope);
      type$.FocusNode._as(focusedChild);
      policyData = J.$index$asx(_this.DirectionalFocusTraversalPolicyMixin__policyData, nearestScope);
      t1 = policyData != null;
      if (t1) {
        t2 = policyData.history;
        t3 = J.getInterceptor$asx(t2);
        t2 = B.boolConversionCheck(t3.get$isNotEmpty(t2)) && !B.boolConversionCheck(J.$eq$(t3.get$first(t2).direction, direction));
      } else
        t2 = false;
      if (t2) {
        t2 = policyData.history;
        t3 = J.getInterceptor$ax(t2);
        if (t3.get$last(t2).node.get$parent() == null) {
          _this.invalidateScopeData$1(nearestScope);
          return false;
        }
        popOrInvalidate = new A.DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate(_this, policyData, nearestScope);
        switch (direction.index) {
          case 2:
          case 0:
            switch (t3.get$first(t2).direction) {
              case C.TraversalDirection_3:
              case C.TraversalDirection_1:
                _this.invalidateScopeData$1(nearestScope);
                break;
              case C.TraversalDirection_0:
              case C.TraversalDirection_2:
                if (B.boolConversionCheck(popOrInvalidate.call$1(direction)))
                  return true;
                break;
            }
            break;
          case 3:
          case 1:
            switch (t3.get$first(t2).direction) {
              case C.TraversalDirection_3:
              case C.TraversalDirection_1:
                if (B.boolConversionCheck(popOrInvalidate.call$1(direction)))
                  return true;
                break;
              case C.TraversalDirection_0:
              case C.TraversalDirection_2:
                _this.invalidateScopeData$1(nearestScope);
                break;
            }
            break;
        }
      }
      if (t1 && B.boolConversionCheck(J.get$isEmpty$asx(policyData.history)))
        _this.invalidateScopeData$1(nearestScope);
      return false;
    },
    _pushPolicyData$3(direction, nearestScope, focusedChild) {
      var t1, t2, policyData, newEntry;
      type$.TraversalDirection._as(direction);
      type$.FocusScopeNode._as(nearestScope);
      type$.FocusNode._as(focusedChild);
      t1 = this.DirectionalFocusTraversalPolicyMixin__policyData;
      t2 = J.getInterceptor$asx(t1);
      policyData = t2.$index(t1, nearestScope);
      newEntry = A._DirectionalPolicyDataEntry$(direction, focusedChild);
      if (policyData != null)
        J.add$1$ax(policyData.history, newEntry);
      else
        t2.$indexSet(t1, nearestScope, A._DirectionalPolicyData$(B._setArrayType([newEntry], type$.JSArray__DirectionalPolicyDataEntry)));
    },
    inDirection$2(currentNode, direction) {
      var t1, focusedChild, firstFocus, t2, found, eligibleNodes, inBand, _this = this;
      type$.FocusNode._as(currentNode);
      type$.TraversalDirection._as(direction);
      t1 = currentNode.get$nearestScope();
      t1.toString;
      focusedChild = t1.get$focusedChild();
      if (focusedChild == null) {
        firstFocus = _this.findFirstFocusInDirection$2(currentNode, direction);
        if (firstFocus == null)
          firstFocus = currentNode;
        switch (direction.index) {
          case 0:
          case 3:
            _this.requestFocusCallback.call$2$alignmentPolicy(firstFocus, C.ScrollPositionAlignmentPolicy_2);
            break;
          case 1:
          case 2:
            _this.requestFocusCallback.call$2$alignmentPolicy(firstFocus, C.ScrollPositionAlignmentPolicy_1);
            break;
        }
        return true;
      }
      if (B.boolConversionCheck(_this._popPolicyDataIfNeeded$3(direction, t1, focusedChild)))
        return true;
      t2 = focusedChild.get$context();
      t2.toString;
      A.Scrollable_maybeOf(t2);
      t2 = direction.index;
      found = null;
      switch (t2) {
        case 2:
        case 0:
          eligibleNodes = _this._sortAndFilterVertically$3(direction, focusedChild.get$rect(), t1.get$traversalDescendants());
          if (B.boolConversionCheck(J.get$isEmpty$asx(eligibleNodes)))
            break;
          if (direction === C.TraversalDirection_0)
            eligibleNodes = J.get$reversed$ax(J.toList$0$ax(eligibleNodes));
          inBand = J.where$1$ax(eligibleNodes, new A.DirectionalFocusTraversalPolicyMixin_inDirection_closure(A.Rect$fromLTRB(focusedChild.get$rect().left, -1 / 0, focusedChild.get$rect().right, 1 / 0)));
          if (B.boolConversionCheck(J.get$isNotEmpty$asx(inBand))) {
            found = J.get$first$ax(A.DirectionalFocusTraversalPolicyMixin__sortByDistancePreferVertical(focusedChild.get$rect().get$center(), inBand));
            break;
          }
          found = J.get$first$ax(A.DirectionalFocusTraversalPolicyMixin__sortClosestEdgesByDistancePreferHorizontal(focusedChild.get$rect().get$center(), eligibleNodes));
          break;
        case 1:
        case 3:
          eligibleNodes = _this._sortAndFilterHorizontally$3(direction, focusedChild.get$rect(), t1.get$traversalDescendants());
          if (B.boolConversionCheck(J.get$isEmpty$asx(eligibleNodes)))
            break;
          if (direction === C.TraversalDirection_3)
            eligibleNodes = J.get$reversed$ax(J.toList$0$ax(eligibleNodes));
          inBand = J.where$1$ax(eligibleNodes, new A.DirectionalFocusTraversalPolicyMixin_inDirection_closure0(A.Rect$fromLTRB(-1 / 0, focusedChild.get$rect().top, 1 / 0, focusedChild.get$rect().bottom)));
          if (B.boolConversionCheck(J.get$isNotEmpty$asx(inBand))) {
            found = J.get$first$ax(A.DirectionalFocusTraversalPolicyMixin__sortByDistancePreferHorizontal(focusedChild.get$rect().get$center(), inBand));
            break;
          }
          found = J.get$first$ax(A.DirectionalFocusTraversalPolicyMixin__sortClosestEdgesByDistancePreferVertical(focusedChild.get$rect().get$center(), eligibleNodes));
          break;
      }
      if (found != null) {
        _this._pushPolicyData$3(direction, t1, focusedChild);
        switch (t2) {
          case 0:
          case 3:
            _this.requestFocusCallback.call$2$alignmentPolicy(found, C.ScrollPositionAlignmentPolicy_2);
            break;
          case 2:
          case 1:
            _this.requestFocusCallback.call$2$alignmentPolicy(found, C.ScrollPositionAlignmentPolicy_1);
            break;
        }
        return true;
      }
      return false;
    },
    $isDiagnosticable: 1,
    $isFocusTraversalPolicy: 1,
    $is_FocusTraversalPolicy_Object_Diagnosticable: 1
  };
  A._ReadingOrderSortData.prototype = {
    get$directionalAncestors() {
      var t1, _this = this;
      if (_this._directionalAncestors == null) {
        t1 = _this.node.get$context();
        t1.toString;
        _this.set$_directionalAncestors(new A._ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors().call$1(t1));
      }
      t1 = _this._directionalAncestors;
      t1.toString;
      return t1;
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.DiagnosticsProperty$("directionality", _this.directionality, true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.TextDirection));
      properties.add$1(0, A.StringProperty$("name", _this.node.get$debugLabel(), _null, true, true));
      properties.add$1(0, A.DiagnosticsProperty$("rect", _this.rect, true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.Rect));
    },
    set$_directionalAncestors(_directionalAncestors) {
      this._directionalAncestors = type$.nullable_List_Directionality._as(_directionalAncestors);
    },
    $isDiagnosticable: 1
  };
  A._ReadingOrderDirectionalGroupData.prototype = {
    get$directionality() {
      return J.get$first$ax(this.members).directionality;
    },
    get$rect() {
      var t1, t2, t3, _this = this;
      if (_this._focus_traversal$_rect == null)
        for (t1 = J.get$iterator$ax(J.map$1$1$ax(_this.members, new A._ReadingOrderDirectionalGroupData_rect_closure(), type$.Rect)); B.boolConversionCheck(t1.moveNext$0());) {
          t2 = t1.get$current();
          t3 = _this._focus_traversal$_rect;
          if (t3 == null) {
            _this._focus_traversal$_rect = t2;
            t3 = t2;
          }
          _this.set$_focus_traversal$_rect(t3.expandToInclude$1(t2));
        }
      t1 = _this._focus_traversal$_rect;
      t1.toString;
      return t1;
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.DiagnosticsProperty$("directionality", _this.get$directionality(), true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.TextDirection));
      properties.add$1(0, A.DiagnosticsProperty$("rect", _this.get$rect(), true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.Rect));
      t1 = type$.String;
      properties.add$1(0, A.IterableProperty$("members", J.map$1$1$ax(_this.members, new A._ReadingOrderDirectionalGroupData_debugFillProperties_closure(), t1), C.C__NoDefaultValue, "[]", C.DiagnosticLevel_3, C.DiagnosticsTreeStyle_8, t1));
    },
    set$_focus_traversal$_rect(_rect) {
      this._focus_traversal$_rect = type$.nullable_Rect._as(_rect);
    },
    $isDiagnosticable: 1
  };
  A.ReadingOrderTraversalPolicy.prototype = {
    _collectDirectionalityGroups$1(candidates) {
      var t1, currentDirection, t2, currentGroup, result, t3, currentDirection0;
      type$.Iterable__ReadingOrderSortData._as(candidates);
      t1 = J.getInterceptor$ax(candidates);
      currentDirection = t1.get$first(candidates).directionality;
      t2 = type$.JSArray__ReadingOrderSortData;
      currentGroup = B._setArrayType([], t2);
      result = B._setArrayType([], type$.JSArray__ReadingOrderDirectionalGroupData);
      for (t1 = t1.get$iterator(candidates); B.boolConversionCheck(t1.moveNext$0());) {
        t3 = t1.get$current();
        currentDirection0 = t3.directionality;
        if (B.boolConversionCheck(J.$eq$(currentDirection0, currentDirection))) {
          D.JSArray_methods.add$1(currentGroup, t3);
          continue;
        }
        D.JSArray_methods.add$1(result, A._ReadingOrderDirectionalGroupData$(currentGroup));
        currentGroup = B._setArrayType([t3], t2);
        currentDirection = currentDirection0;
      }
      if (B.boolConversionCheck(D.JSArray_methods.get$isNotEmpty(currentGroup)))
        D.JSArray_methods.add$1(result, A._ReadingOrderDirectionalGroupData$(currentGroup));
      for (t1 = D.JSArray_methods.get$iterator(result); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        t3 = t2.members;
        if (B.boolConversionCheck(J.$eq$(J.get$length$asx(t3), 1)))
          continue;
        t2 = t2.get$directionality();
        t2.toString;
        A._ReadingOrderSortData_sortWithDirectionality(t3, t2);
      }
      return result;
    },
    _pickNext$1(candidates) {
      var topmost, inBandOfTop, t1, nearestCommonDirectionality, bandGroups;
      type$.List__ReadingOrderSortData._as(candidates);
      A.mergeSort(candidates, new A.ReadingOrderTraversalPolicy__pickNext_closure(), type$._ReadingOrderSortData);
      topmost = J.get$first$ax(candidates);
      inBandOfTop = new A.ReadingOrderTraversalPolicy__pickNext_inBand().call$2(topmost, candidates);
      t1 = J.get$length$asx(inBandOfTop);
      if (typeof t1 !== "number")
        return t1.$le();
      if (t1 <= 1)
        return topmost;
      nearestCommonDirectionality = A._ReadingOrderSortData_commonDirectionalityOf(inBandOfTop);
      nearestCommonDirectionality.toString;
      A._ReadingOrderSortData_sortWithDirectionality(inBandOfTop, nearestCommonDirectionality);
      bandGroups = this._collectDirectionalityGroups$1(inBandOfTop);
      t1 = J.getInterceptor$asx(bandGroups);
      if (B.boolConversionCheck(J.$eq$(t1.get$length(bandGroups), 1)))
        return J.get$first$ax(t1.get$first(bandGroups).members);
      A._ReadingOrderDirectionalGroupData_sortWithDirectionality(bandGroups, nearestCommonDirectionality);
      return J.get$first$ax(t1.get$first(bandGroups).members);
    },
    sortDescendants$2(descendants, currentNode) {
      var t1, t2, sortedList, current, next;
      type$.Iterable_FocusNode._as(descendants);
      type$.FocusNode._as(currentNode);
      t1 = J.getInterceptor$asx(descendants);
      t2 = t1.get$length(descendants);
      if (typeof t2 !== "number")
        return t2.$le();
      if (t2 <= 1)
        return descendants;
      t2 = B._setArrayType([], type$.JSArray__ReadingOrderSortData);
      for (t1 = t1.get$iterator(descendants); B.boolConversionCheck(t1.moveNext$0());)
        t2.push(A._ReadingOrderSortData$(t1.get$current()));
      sortedList = B._setArrayType([], type$.JSArray_FocusNode);
      current = this._pickNext$1(t2);
      D.JSArray_methods.add$1(sortedList, current.node);
      D.JSArray_methods.remove$1(t2, current);
      for (; B.boolConversionCheck(D.JSArray_methods.get$isNotEmpty(t2));) {
        next = this._pickNext$1(t2);
        D.JSArray_methods.add$1(sortedList, next.node);
        D.JSArray_methods.remove$1(t2, next);
      }
      return sortedList;
    },
    $isDirectionalFocusTraversalPolicyMixin: 1
  };
  A.FocusTraversalGroup.prototype = {
    createState$0() {
      return A._FocusTraversalGroupState$();
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, A.DiagnosticsProperty$("policy", this.policy, true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.FocusTraversalPolicy));
    }
  };
  A._FocusTraversalGroupNode.prototype = {
    _FocusTraversalGroupNode$2$debugLabel$policy(debugLabel, policy) {
      A.ChangeNotifier_maybeDispatchObjectCreation(this);
    },
    set$policy(policy) {
      this.policy = type$.FocusTraversalPolicy._as(policy);
    }
  };
  A._FocusTraversalGroupState.prototype = {
    get$focusNode() {
      var result, _this = this,
        value = _this.___FocusTraversalGroupState_focusNode_FI;
      if (B.boolConversionCheck(A.isSentinel(value))) {
        result = A._FocusTraversalGroupNode$("FocusTraversalGroup", _this.get$widget().policy);
        _this.___FocusTraversalGroupState_focusNode_FI !== $ && B.throwLateFieldADI("focusNode");
        _this.___FocusTraversalGroupState_focusNode_FI = result;
        value = result;
      }
      return value;
    },
    dispose$0() {
      this.get$focusNode().dispose$0();
      this.super$State$dispose();
    },
    didUpdateWidget$1(oldWidget) {
      var _this = this;
      type$.FocusTraversalGroup._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      if (!B.boolConversionCheck(J.$eq$(oldWidget.policy, _this.get$widget().policy)))
        _this.get$focusNode().set$policy(_this.get$widget().policy);
    },
    build$1(context) {
      var t1, _this = this, _null = null;
      type$.BuildContext._as(context);
      t1 = _this.get$focusNode();
      _this.get$widget().toString;
      _this.get$widget().toString;
      return A.Focus$(false, false, _this.get$widget().child, _null, true, true, t1, false, _null, _null, _null, _null, _null, true);
    }
  };
  A._FocusTraversalPolicy_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin.prototype = {
    invalidateScopeData$1(node) {
      type$.FocusScopeNode._as(node);
      this.super$FocusTraversalPolicy$invalidateScopeData(node);
      J.remove$1$ax(this.DirectionalFocusTraversalPolicyMixin__policyData, node);
    },
    changedScope$2$node$oldScope(node, oldScope) {
      var t1;
      type$.nullable_FocusNode._as(node);
      type$.nullable_FocusScopeNode._as(oldScope);
      this.super$FocusTraversalPolicy$changedScope(node, oldScope);
      if (oldScope != null) {
        t1 = J.$index$asx(this.DirectionalFocusTraversalPolicyMixin__policyData, oldScope);
        if (t1 != null)
          J.removeWhere$1$ax(t1.history, new A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure(node));
      }
    },
    $isDirectionalFocusTraversalPolicyMixin: 1
  };
  A.__ReadingOrderDirectionalGroupData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.__ReadingOrderSortData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.GlobalKey.prototype = {
    get$_currentElement() {
      return J.$index$asx(A.WidgetsBinding_instance().get$buildOwner()._globalKeyRegistry, this);
    },
    get$currentContext() {
      return this.get$_currentElement();
    },
    get$currentState() {
      var state,
        element = this.get$_currentElement();
      if (element instanceof A.StatefulElement0) {
        state = element.get$state();
        if (B._instanceType(this)._precomputed1._is(state))
          return state;
      }
      return null;
    }
  };
  A.Widget.prototype = {
    toStringShort$0() {
      var type = A.objectRuntimeType(this, "Widget"),
        t1 = this.key;
      return t1 == null ? type : type + "-" + B.S(t1);
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.defaultDiagnosticsTreeStyle = C.DiagnosticsTreeStyle_3;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return this.super$Object$$eq(0, other);
    },
    get$hashCode(_) {
      return B.Object.prototype.get$hashCode.call(this, 0);
    }
  };
  A.StatelessWidget.prototype = {
    createElement$0() {
      return A.StatelessElement$0(this);
    }
  };
  A.StatefulWidget.prototype = {
    createElement$0() {
      return A.StatefulElement$0(this);
    }
  };
  A.State0.prototype = {
    get$widget() {
      var t1 = this._widget;
      t1.toString;
      return t1;
    },
    get$context() {
      var t1 = this._framework0$_element;
      t1.toString;
      return t1;
    },
    get$mounted() {
      return this._framework0$_element != null;
    },
    initState$0() {
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(B.S(C.Type_State_9a2), "package:flutter/widgets.dart", this);
    },
    didUpdateWidget$1(oldWidget) {
      B._instanceType(this)._eval$1("State0.T")._as(oldWidget);
    },
    setState$1(fn) {
      type$.void_Function._as(fn).call$0();
      this._framework0$_element.markNeedsBuild$0();
    },
    deactivate$0() {
    },
    activate$0() {
    },
    dispose$0() {
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectDisposed$1$object(this);
    },
    didChangeDependencies$0() {
    },
    debugFillProperties$1(properties) {
      var _this = this;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.ObjectFlagProperty$("_widget", _this._widget, "no widget", null, B._instanceType(_this)._eval$1("State0.T")));
      properties.add$1(0, A.ObjectFlagProperty$("_element", _this._framework0$_element, "not mounted", null, type$.StatefulElement));
    },
    set$_widget(_widget) {
      this._widget = B._instanceType(this)._eval$1("State0.T?")._as(_widget);
    },
    $isDiagnosticable: 1
  };
  A.ProxyWidget.prototype = {};
  A.InheritedWidget.prototype = {
    createElement$0() {
      return A.InheritedElement$(this);
    }
  };
  A.RenderObjectWidget.prototype = {
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$.RenderObject._as(renderObject);
    },
    didUnmountRenderObject$1(renderObject) {
      type$.RenderObject._as(renderObject);
    }
  };
  A.LeafRenderObjectWidget.prototype = {
    createElement$0() {
      return A.LeafRenderObjectElement$(this);
    }
  };
  A.SingleChildRenderObjectWidget.prototype = {
    createElement$0() {
      return A.SingleChildRenderObjectElement$(this);
    }
  };
  A._ElementLifecycle.prototype = {
    _enumToString$0() {
      return "_ElementLifecycle." + B.S(this._core$_name);
    }
  };
  A.Element0.prototype = {
    Element$1(widget) {
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(B.S(C.Type_Element_zvS), "package:flutter/widgets.dart", this);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return this === other;
    },
    get$slot() {
      return this._slot;
    },
    get$depth() {
      return this.get$_framework0$_depth();
    },
    get$_framework0$_depth() {
      return this.__Element__depth_A;
    },
    set$_framework0$_depth(value) {
      this.__Element__depth_A = B._asInt(value);
    },
    get$widget() {
      var t1 = this._widget;
      t1.toString;
      return t1;
    },
    get$mounted() {
      return this._widget != null;
    },
    get$owner() {
      return this._framework0$_owner;
    },
    get$buildScope() {
      var t1 = this._parentBuildScope;
      t1.toString;
      return t1;
    },
    get$renderObject() {
      for (var current = this; current != null;)
        if (B.boolConversionCheck(J.$eq$(current._framework0$_lifecycleState, C._ElementLifecycle_3)))
          break;
        else if (current instanceof A.RenderObjectElement)
          return current.get$renderObject();
        else
          current = current.get$renderObjectAttachingChild();
      return null;
    },
    get$renderObjectAttachingChild() {
      var t1 = {};
      t1.next = null;
      this.visitChildren$1(new A.Element_renderObjectAttachingChild_closure(t1));
      return t1.next;
    },
    describeElement$1($name) {
      var _null = null;
      return A.DiagnosticsProperty$(B._asString($name), this, true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_9, _null, type$.Element);
    },
    visitChildren$1(visitor) {
      type$.void_Function_Element._as(visitor);
    },
    visitChildElements$1(visitor) {
      this.visitChildren$1(type$.void_Function_Element._as(visitor));
    },
    updateChild$3(child, newWidget, newSlot) {
      var t1, newChild, isTimelineTracked, _this = this;
      type$.nullable_Element._as(child);
      type$.nullable_Widget._as(newWidget);
      if (newWidget == null) {
        if (child != null)
          _this.deactivateChild$1(child);
        return null;
      }
      if (child != null) {
        t1 = B.boolConversionCheck(J.$eq$(child.get$widget(), newWidget));
        if (t1) {
          if (!B.boolConversionCheck(J.$eq$(child.get$slot(), newSlot)))
            _this.updateSlotForChild$2(child, newSlot);
          newChild = child;
        } else {
          t1 = B.boolConversionCheck(A.Widget_canUpdate(child.get$widget(), newWidget));
          if (t1) {
            if (!B.boolConversionCheck(J.$eq$(child.get$slot(), newSlot)))
              _this.updateSlotForChild$2(child, newSlot);
            isTimelineTracked = B.boolConversionCheck(A._isProfileBuildsEnabledFor(newWidget));
            if (isTimelineTracked)
              A.FlutterTimeline_startSync(B.S(newWidget.get$runtimeType(0)), null);
            child.update$1(newWidget);
            if (isTimelineTracked)
              A.FlutterTimeline_finishSync();
            newChild = child;
          } else {
            _this.deactivateChild$1(child);
            newChild = _this.inflateWidget$2(newWidget, newSlot);
          }
        }
      } else
        newChild = _this.inflateWidget$2(newWidget, newSlot);
      return newChild;
    },
    updateChildren$4$forgottenChildren$slots(oldChildren, newWidgets, forgottenChildren, slots) {
      var replaceWithNullIfForgotten, slotFor, t1, t2, newChildrenBottom, t3, oldChildrenBottom, newChildren, t4, newChildrenTop, oldChildrenTop, previousChild, oldChild, newWidget, t5, oldKeyedChildren, key, oldChild0, _this = this;
      type$.List_Element._as(oldChildren);
      type$.List_Widget._as(newWidgets);
      type$.nullable_Set_Element._as(forgottenChildren);
      replaceWithNullIfForgotten = new A.Element_updateChildren_replaceWithNullIfForgotten0(forgottenChildren);
      slotFor = new A.Element_updateChildren_slotFor(type$.nullable_List_nullable_Object._as(slots));
      t1 = J.getInterceptor$asx(newWidgets);
      t2 = t1.get$length(newWidgets);
      if (typeof t2 !== "number")
        return t2.$sub();
      newChildrenBottom = t2 - 1;
      t2 = J.getInterceptor$asx(oldChildren);
      t3 = t2.get$length(oldChildren);
      if (typeof t3 !== "number")
        return t3.$sub();
      oldChildrenBottom = t3 - 1;
      t3 = type$.Element;
      newChildren = B.List_List$filled(t1.get$length(newWidgets), $.$get$_NullElement_instance(), false, t3);
      t4 = J.getInterceptor$ax(newChildren);
      newChildrenTop = 0;
      oldChildrenTop = 0;
      previousChild = null;
      while (true) {
        if (!(oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom))
          break;
        oldChild = replaceWithNullIfForgotten.call$1(t2.$index(oldChildren, oldChildrenTop));
        newWidget = t1.$index(newWidgets, newChildrenTop);
        if (oldChild == null || !B.boolConversionCheck(A.Widget_canUpdate(oldChild.get$widget(), newWidget)))
          break;
        t5 = _this.updateChild$3(oldChild, newWidget, slotFor.call$2(newChildrenTop, previousChild));
        t5.toString;
        t4.$indexSet(newChildren, newChildrenTop, t5);
        ++newChildrenTop;
        ++oldChildrenTop;
        previousChild = t5;
      }
      while (true) {
        t5 = oldChildrenTop <= oldChildrenBottom;
        if (!(t5 && newChildrenTop <= newChildrenBottom))
          break;
        oldChild = replaceWithNullIfForgotten.call$1(t2.$index(oldChildren, oldChildrenBottom));
        newWidget = t1.$index(newWidgets, newChildrenBottom);
        if (oldChild == null || !B.boolConversionCheck(A.Widget_canUpdate(oldChild.get$widget(), newWidget)))
          break;
        --oldChildrenBottom;
        --newChildrenBottom;
      }
      if (t5) {
        oldKeyedChildren = B.LinkedHashMap_LinkedHashMap$_empty(type$.Key, t3);
        for (; oldChildrenTop <= oldChildrenBottom;) {
          oldChild = replaceWithNullIfForgotten.call$1(t2.$index(oldChildren, oldChildrenTop));
          if (oldChild != null)
            if (oldChild.get$widget().key != null) {
              t3 = oldChild.get$widget().key;
              t3.toString;
              oldKeyedChildren.$indexSet(0, t3, oldChild);
            } else
              _this.deactivateChild$1(oldChild);
          ++oldChildrenTop;
        }
      } else
        oldKeyedChildren = null;
      for (; newChildrenTop <= newChildrenBottom; previousChild = t3) {
        newWidget = t1.$index(newWidgets, newChildrenTop);
        oldChild = null;
        if (t5) {
          key = newWidget.key;
          if (key != null) {
            oldChild0 = oldKeyedChildren.$index(0, key);
            if (oldChild0 != null) {
              if (B.boolConversionCheck(A.Widget_canUpdate(oldChild0.get$widget(), newWidget))) {
                oldKeyedChildren.remove$1(0, key);
                oldChild = oldChild0;
              }
            } else
              oldChild = oldChild0;
          }
        }
        t3 = _this.updateChild$3(oldChild, newWidget, slotFor.call$2(newChildrenTop, previousChild));
        t3.toString;
        t4.$indexSet(newChildren, newChildrenTop, t3);
        ++newChildrenTop;
      }
      t3 = t1.get$length(newWidgets);
      if (typeof t3 !== "number")
        return t3.$sub();
      newChildrenBottom = t3 - 1;
      t3 = t2.get$length(oldChildren);
      if (typeof t3 !== "number")
        return t3.$sub();
      oldChildrenBottom = t3 - 1;
      while (true) {
        if (!(oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom))
          break;
        t3 = _this.updateChild$3(t2.$index(oldChildren, oldChildrenTop), t1.$index(newWidgets, newChildrenTop), slotFor.call$2(newChildrenTop, previousChild));
        t3.toString;
        t4.$indexSet(newChildren, newChildrenTop, t3);
        ++newChildrenTop;
        ++oldChildrenTop;
        previousChild = t3;
      }
      if (t5 && B.boolConversionCheck(oldKeyedChildren.get$isNotEmpty(0)))
        for (t1 = J.get$iterator$ax(oldKeyedChildren.get$values()), t2 = forgottenChildren != null; B.boolConversionCheck(t1.moveNext$0());) {
          t3 = t1.get$current();
          if (!t2 || !B.boolConversionCheck(forgottenChildren.contains$1(0, t3)))
            _this.deactivateChild$1(t3);
        }
      return newChildren;
    },
    updateChildren$3$forgottenChildren(oldChildren, newWidgets, forgottenChildren) {
      return this.updateChildren$4$forgottenChildren$slots(oldChildren, newWidgets, forgottenChildren, null);
    },
    mount$2($parent, newSlot) {
      var t1, t2, key, _this = this;
      type$.nullable_Element._as($parent);
      _this._framework0$_parent = $parent;
      _this._slot = newSlot;
      _this._framework0$_lifecycleState = C._ElementLifecycle_10;
      t1 = $parent != null;
      if (t1) {
        t2 = $parent.get$depth();
        if (typeof t2 !== "number")
          return t2.$add();
        ++t2;
      } else
        t2 = 1;
      _this.set$_framework0$_depth(t2);
      if (t1) {
        _this.set$_framework0$_owner($parent.get$owner());
        _this.set$_parentBuildScope($parent.get$buildScope());
      }
      key = _this.get$widget().key;
      if (key instanceof A.GlobalKey)
        _this.get$owner()._registerGlobalKey$2(key, _this);
      _this._framework0$_updateInheritance$0();
      _this.attachNotificationTree$0();
    },
    update$1(newWidget) {
      this._widget = type$.Widget._as(newWidget);
    },
    updateSlotForChild$2(child, newSlot) {
      new A.Element_updateSlotForChild_visit(newSlot).call$1(type$.Element._as(child));
    },
    updateSlot$1(newSlot) {
      this._slot = newSlot;
    },
    _updateDepth$1(parentDepth) {
      var expectedDepth = B._asInt(parentDepth) + 1,
        t1 = this.get$_framework0$_depth();
      if (typeof t1 !== "number")
        return t1.$lt();
      if (t1 < expectedDepth) {
        this.set$_framework0$_depth(expectedDepth);
        this.visitChildren$1(new A.Element__updateDepth_closure(expectedDepth));
      }
    },
    _updateBuildScopeRecursively$0() {
      var _this = this,
        t1 = _this.get$buildScope(),
        t2 = _this._framework0$_parent;
      if (t1 == null ? (t2 == null ? null : t2.get$buildScope()) == null : t1 === (t2 == null ? null : t2.get$buildScope()))
        return;
      _this._framework0$_inDirtyList = false;
      t1 = _this._framework0$_parent;
      _this.set$_parentBuildScope(t1 == null ? null : t1.get$buildScope());
      _this.visitChildren$1(new A.Element__updateBuildScopeRecursively_closure());
    },
    detachRenderObject$0() {
      this.visitChildren$1(new A.Element_detachRenderObject_closure0());
      this._slot = null;
    },
    attachRenderObject$1(newSlot) {
      this.visitChildren$1(new A.Element_attachRenderObject_closure(newSlot));
      this._slot = newSlot;
    },
    _retakeInactiveElement$2(key, newWidget) {
      var element, $parent;
      type$.GlobalKey_State_StatefulWidget._as(key);
      type$.Widget._as(newWidget);
      element = key.get$_currentElement();
      if (element == null)
        return null;
      if (!B.boolConversionCheck(A.Widget_canUpdate(element.get$widget(), newWidget)))
        return null;
      $parent = element._framework0$_parent;
      if ($parent != null) {
        $parent.forgetChild$1(element);
        $parent.deactivateChild$1(element);
      }
      J.remove$1$ax(this.get$owner()._framework0$_inactiveElements, element);
      return element;
    },
    inflateWidget$2(newWidget, newSlot) {
      var isTimelineTracked, key, newChild, updatedChild, newChild0, isTimelineTracked0, exception, exception0, t1, _this = this;
      type$.Widget._as(newWidget);
      isTimelineTracked0 = B.boolConversionCheck(A._isProfileBuildsEnabledFor(newWidget));
      isTimelineTracked = isTimelineTracked0;
      if (B.boolConversionCheck(isTimelineTracked))
        A.FlutterTimeline_startSync(B.S(newWidget.get$runtimeType(0)), null);
      try {
        key = newWidget.key;
        if (key instanceof A.GlobalKey) {
          newChild = _this._retakeInactiveElement$2(key, newWidget);
          if (newChild != null) {
            try {
              newChild._activateWithParent$2(_this, newSlot);
            } catch (exception) {
              try {
                _this.deactivateChild$1(newChild);
              } catch (exception0) {
              }
              throw exception;
            }
            updatedChild = _this.updateChild$3(newChild, newWidget, newSlot);
            t1 = updatedChild;
            t1.toString;
            return t1;
          }
        }
        newChild0 = newWidget.createElement$0();
        newChild0.mount$2(_this, newSlot);
        return newChild0;
      } finally {
        if (B.boolConversionCheck(isTimelineTracked))
          A.FlutterTimeline_finishSync();
      }
    },
    deactivateChild$1(child) {
      type$.Element._as(child);
      child._framework0$_parent = null;
      child.detachRenderObject$0();
      J.add$1$ax(this.get$owner()._framework0$_inactiveElements, child);
    },
    forgetChild$1(child) {
      type$.Element._as(child);
    },
    _activateWithParent$2($parent, newSlot) {
      var _this = this;
      type$.Element._as($parent);
      _this._framework0$_parent = $parent;
      _this.set$_framework0$_owner($parent.get$owner());
      _this._updateDepth$1(_this._framework0$_parent.get$depth());
      _this._updateBuildScopeRecursively$0();
      A.Element__activateRecursively(_this);
      _this.attachRenderObject$1(newSlot);
    },
    activate$0() {
      var _this = this,
        t1 = _this._framework0$_dependencies,
        hadDependencies = t1 != null && B.boolConversionCheck(J.get$isNotEmpty$asx(t1)) || B.boolConversionCheck(_this._framework0$_hadUnsatisfiedDependencies);
      _this._framework0$_lifecycleState = C._ElementLifecycle_10;
      t1 = _this._framework0$_dependencies;
      if (t1 != null)
        J.clear$0$ax(t1);
      _this._framework0$_hadUnsatisfiedDependencies = false;
      _this._framework0$_updateInheritance$0();
      _this.attachNotificationTree$0();
      if (B.boolConversionCheck(_this._framework0$_dirty))
        _this.get$owner().scheduleBuildFor$1(_this);
      if (hadDependencies)
        _this.didChangeDependencies$0();
    },
    deactivate$0() {
      var _this = this,
        t1 = _this._framework0$_dependencies;
      if (t1 != null && B.boolConversionCheck(J.get$isNotEmpty$asx(t1))) {
        t1 = _this._framework0$_dependencies;
        t1.toString;
        t1 = J.get$iterator$ax(t1);
        for (; B.boolConversionCheck(t1.moveNext$0());)
          t1.get$current().removeDependent$1(_this);
      }
      _this.set$_framework0$_inheritedElements(null);
      _this._framework0$_lifecycleState = C._ElementLifecycle_20;
    },
    unmount$0() {
      var t1, key, _this = this;
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectDisposed$1$object(_this);
      t1 = _this._widget;
      key = t1 == null ? null : t1.key;
      if (key instanceof A.GlobalKey)
        _this.get$owner()._unregisterGlobalKey$2(key, _this);
      _this._widget = null;
      _this.set$_framework0$_dependencies(null);
      _this._framework0$_lifecycleState = C._ElementLifecycle_3;
    },
    findRenderObject$0() {
      return this.get$renderObject();
    },
    get$size() {
      var renderObject = this.findRenderObject$0();
      if (renderObject instanceof A.RenderBox)
        return renderObject.get$size();
      return null;
    },
    doesDependOnInheritedElement$1(ancestor) {
      var t1;
      type$.InheritedElement._as(ancestor);
      t1 = this._framework0$_dependencies;
      return t1 != null && B.boolConversionCheck(J.contains$1$asx(t1, ancestor));
    },
    dependOnInheritedElement$2$aspect(ancestor, aspect) {
      var _this = this,
        t1 = type$.InheritedElement;
      t1._as(ancestor);
      if (_this._framework0$_dependencies == null)
        _this.set$_framework0$_dependencies(B.HashSet_HashSet(t1));
      t1 = _this._framework0$_dependencies;
      t1.toString;
      J.add$1$ax(t1, ancestor);
      ancestor.updateDependencies$2(_this, aspect);
      return type$.InheritedWidget._as(ancestor.get$widget());
    },
    dependOnInheritedElement$1(ancestor) {
      return this.dependOnInheritedElement$2$aspect(ancestor, null);
    },
    dependOnInheritedWidgetOfExactType$1$0($T) {
      var t1, ancestor;
      B.checkTypeBound($T, type$.InheritedWidget, "T", "dependOnInheritedWidgetOfExactType");
      t1 = this._framework0$_inheritedElements;
      ancestor = t1 == null ? null : J.$index$asx(t1, B.createRuntimeType($T));
      if (ancestor != null)
        return $T._as(this.dependOnInheritedElement$2$aspect(ancestor, null));
      this._framework0$_hadUnsatisfiedDependencies = true;
      return null;
    },
    getInheritedWidgetOfExactType$1$0($T) {
      var t1;
      B.checkTypeBound($T, type$.InheritedWidget, "T", "getInheritedWidgetOfExactType");
      t1 = this.getElementForInheritedWidgetOfExactType$1$0($T);
      t1 = t1 == null ? null : t1.get$widget();
      return $T._eval$1("0?")._as(t1);
    },
    getElementForInheritedWidgetOfExactType$1$0($T) {
      var t1;
      B.checkTypeBound($T, type$.InheritedWidget, "T", "getElementForInheritedWidgetOfExactType");
      t1 = this._framework0$_inheritedElements;
      return t1 == null ? null : J.$index$asx(t1, B.createRuntimeType($T));
    },
    attachNotificationTree$0() {
      var t1 = this._framework0$_parent;
      this.set$_framework0$_notificationTree(t1 == null ? null : t1._framework0$_notificationTree);
    },
    _framework0$_updateInheritance$0() {
      var t1 = this._framework0$_parent;
      this.set$_framework0$_inheritedElements(t1 == null ? null : t1._framework0$_inheritedElements);
    },
    findAncestorStateOfType$1$0($T) {
      var ancestor, t1;
      B.checkTypeBound($T, type$.State_StatefulWidget, "T", "findAncestorStateOfType");
      ancestor = this._framework0$_parent;
      for (; t1 = ancestor == null, !t1;) {
        if (ancestor instanceof A.StatefulElement0 && $T._is(ancestor.get$state()))
          break;
        ancestor = ancestor._framework0$_parent;
      }
      type$.nullable_StatefulElement._as(ancestor);
      t1 = t1 ? null : ancestor.get$state();
      return $T._eval$1("0?")._as(t1);
    },
    findAncestorRenderObjectOfType$1$0($T) {
      var ancestor;
      B.checkTypeBound($T, type$.RenderObject, "T", "findAncestorRenderObjectOfType");
      ancestor = this._framework0$_parent;
      for (; ancestor != null;) {
        if (ancestor instanceof A.RenderObjectElement && $T._is(ancestor.get$renderObject()))
          return $T._as(ancestor.get$renderObject());
        ancestor = ancestor._framework0$_parent;
      }
      return null;
    },
    visitAncestorElements$1(visitor) {
      var ancestor;
      type$.bool_Function_Element._as(visitor);
      ancestor = this._framework0$_parent;
      while (true) {
        if (!(ancestor != null && B.boolConversionCheck(visitor.call$1(ancestor))))
          break;
        ancestor = ancestor._framework0$_parent;
      }
    },
    didChangeDependencies$0() {
      this.markNeedsBuild$0();
    },
    debugGetCreatorChain$1(limit) {
      var chain, node;
      B._asInt(limit);
      chain = B._setArrayType([], type$.JSArray_String);
      node = this;
      while (true) {
        if (!(chain.length < limit && node != null))
          break;
        D.JSArray_methods.add$1(chain, node.toStringShort$0());
        node = node._framework0$_parent;
      }
      if (node != null)
        D.JSArray_methods.add$1(chain, "\u22ef");
      return D.JSArray_methods.join$1(chain, " \u2190 ");
    },
    dispatchNotification$1(notification) {
      var t1;
      type$.Notification._as(notification);
      t1 = this._framework0$_notificationTree;
      if (t1 != null)
        t1.dispatchNotification$1(notification);
    },
    toStringShort$0() {
      var t1 = this._widget;
      t1 = t1 == null ? null : t1.toStringShort$0();
      return t1 == null ? B.S(A.describeIdentity(this)) + "(DEFUNCT)" : t1;
    },
    toDiagnosticsNode$2$name$style($name, style) {
      return A._ElementDiagnosticableTreeNode$(B._asStringQ($name), false, type$.nullable_DiagnosticsTreeStyle._as(style), this);
    },
    toDiagnosticsNode$0() {
      return this.toDiagnosticsNode$2$name$style(null, null);
    },
    debugFillProperties$1(properties) {
      var t1, deps, sortedDependencies, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.defaultDiagnosticsTreeStyle = C.DiagnosticsTreeStyle_3;
      if (!B.boolConversionCheck(J.$eq$(_this._framework0$_lifecycleState, C._ElementLifecycle_00)))
        properties.add$1(0, A.ObjectFlagProperty$("depth", _this.get$depth(), "no depth", _null, type$.int));
      properties.add$1(0, A.ObjectFlagProperty$("widget", _this._widget, "no widget", _null, type$.Widget));
      t1 = _this._widget;
      t1 = t1 == null ? _null : t1.key;
      properties.add$1(0, A.DiagnosticsProperty$("key", t1, true, _null, _null, _null, _null, C.DiagnosticLevel_0, false, false, true, C.DiagnosticsTreeStyle_8, _null, type$.Key));
      t1 = _this._widget;
      if (t1 != null)
        t1.debugFillProperties$1(properties);
      properties.add$1(0, A.FlagProperty$("dirty", _null, _null, "dirty", C.DiagnosticLevel_3, false, _this.get$dirty()));
      deps = _this._framework0$_dependencies;
      if (deps != null && B.boolConversionCheck(deps.get$isNotEmpty(deps))) {
        sortedDependencies = deps.toList$0(0);
        t1 = J.getInterceptor$ax(sortedDependencies);
        t1.sort$1(sortedDependencies, new A.Element_debugFillProperties_closure());
        properties.add$1(0, A.DiagnosticsProperty$("dependencies", deps, true, C.C__NoDefaultValue, J.toString$0$(J.toList$0$ax(t1.map$1$1(sortedDependencies, new A.Element_debugFillProperties_closure0(), type$.DiagnosticsNode))), _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.Set_InheritedElement));
      }
    },
    debugDescribeChildren$0() {
      var children = B._setArrayType([], type$.JSArray_DiagnosticsNode);
      this.visitChildren$1(new A.Element_debugDescribeChildren_closure(children));
      return children;
    },
    get$dirty() {
      return this._framework0$_dirty;
    },
    markNeedsBuild$0() {
      var _this = this;
      if (!B.boolConversionCheck(J.$eq$(_this._framework0$_lifecycleState, C._ElementLifecycle_10)))
        return;
      if (B.boolConversionCheck(_this.get$dirty()))
        return;
      _this._framework0$_dirty = true;
      _this.get$owner().scheduleBuildFor$1(_this);
    },
    rebuild$1$force(force) {
      var t1;
      B._asBool(force);
      if (B.boolConversionCheck(J.$eq$(this._framework0$_lifecycleState, C._ElementLifecycle_10)))
        t1 = !B.boolConversionCheck(this._framework0$_dirty) && !force;
      else
        t1 = true;
      if (t1)
        return;
      try {
        this.performRebuild$0();
      } finally {
      }
    },
    rebuild$0() {
      return this.rebuild$1$force(false);
    },
    performRebuild$0() {
      this._framework0$_dirty = false;
    },
    set$_framework0$_notificationTree(_notificationTree) {
      this._framework0$_notificationTree = type$.nullable__NotificationNode._as(_notificationTree);
    },
    set$_framework0$_owner(_owner) {
      this._framework0$_owner = type$.nullable_BuildOwner._as(_owner);
    },
    set$_parentBuildScope(_parentBuildScope) {
      this._parentBuildScope = type$.nullable_BuildScope._as(_parentBuildScope);
    },
    set$_framework0$_inheritedElements(_inheritedElements) {
      this._framework0$_inheritedElements = type$.nullable_PersistentHashMap_Type_InheritedElement._as(_inheritedElements);
    },
    set$_framework0$_dependencies(_dependencies) {
      this._framework0$_dependencies = type$.nullable_Set_InheritedElement._as(_dependencies);
    },
    $isBuildContext: 1
  };
  A._ElementDiagnosticableTreeNode.prototype = {};
  A.ErrorWidget.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A.RenderErrorBox$(this.message);
    },
    debugFillProperties$1(properties) {
      var t1;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      t1 = this._flutterError;
      if (t1 == null)
        properties.add$1(0, A.StringProperty$("message", this.message, C.C__NoDefaultValue, false, true));
      else
        properties.add$1(0, t1.toDiagnosticsNode$1$style(C.DiagnosticsTreeStyle_6));
    }
  };
  A.ComponentElement.prototype = {
    get$renderObjectAttachingChild() {
      return this._framework0$_child;
    },
    mount$2($parent, newSlot) {
      this.super$Element$mount0(type$.nullable_Element._as($parent), newSlot);
      this._firstBuild$0();
    },
    _firstBuild$0() {
      this.rebuild$0();
    },
    performRebuild$0() {
      var e, stack, e0, stack0, exception, built0, _this = this, built = null;
      try {
        built = _this.build$0();
        A.debugWidgetBuilderValue(_this.get$widget(), built);
      } catch (exception) {
        e = B.unwrapException(exception);
        stack = B.getTraceFromException(exception);
        built0 = A.ErrorWidget__defaultErrorWidgetBuilder(A._reportException(A.ErrorDescription$("building " + B.S(_this)), e, stack, new A.ComponentElement_performRebuild_closure(_this)));
        built = built0;
      } finally {
        _this.super$Element$performRebuild();
      }
      try {
        _this.set$_framework0$_child(_this.updateChild$3(_this._framework0$_child, built, _this.get$slot()));
      } catch (exception) {
        e0 = B.unwrapException(exception);
        stack0 = B.getTraceFromException(exception);
        built0 = A.ErrorWidget__defaultErrorWidgetBuilder(A._reportException(A.ErrorDescription$("building " + B.S(_this)), e0, stack0, new A.ComponentElement_performRebuild_closure0(_this)));
        built = built0;
        _this.set$_framework0$_child(_this.updateChild$3(null, built, _this.get$slot()));
      }
    },
    visitChildren$1(visitor) {
      var t1;
      type$.void_Function_Element._as(visitor);
      t1 = this._framework0$_child;
      if (t1 != null)
        visitor.call$1(t1);
    },
    forgetChild$1(child) {
      type$.Element._as(child);
      this._framework0$_child = null;
      this.super$Element$forgetChild(child);
    },
    set$_framework0$_child(_child) {
      this._framework0$_child = type$.nullable_Element._as(_child);
    }
  };
  A.StatelessElement0.prototype = {
    build$0() {
      return type$.StatelessWidget._as(this.get$widget()).build$1(this);
    },
    update$1(newWidget) {
      this.super$Element$update0(type$.StatelessWidget._as(newWidget));
      this.rebuild$1$force(true);
    }
  };
  A.StatefulElement0.prototype = {
    StatefulElement$10(widget) {
      this.get$state()._framework0$_element = this;
      this.get$state().set$_widget(widget);
    },
    build$0() {
      return this.get$state().build$1(this);
    },
    get$state() {
      var t1 = this._framework0$_state;
      t1.toString;
      return t1;
    },
    _firstBuild$0() {
      this.get$state().initState$0();
      this.get$state().didChangeDependencies$0();
      this.super$ComponentElement$_firstBuild();
    },
    performRebuild$0() {
      var _this = this;
      if (B.boolConversionCheck(_this._framework0$_didChangeDependencies)) {
        _this.get$state().didChangeDependencies$0();
        _this._framework0$_didChangeDependencies = false;
      }
      _this.super$ComponentElement$performRebuild();
    },
    update$1(newWidget) {
      var t2, _this = this,
        t1 = type$.StatefulWidget;
      _this.super$Element$update0(t1._as(newWidget));
      t2 = _this.get$state()._widget;
      t2.toString;
      _this.get$state().set$_widget(t1._as(_this.get$widget()));
      _this.get$state().didUpdateWidget$1(t2);
      _this.rebuild$1$force(true);
    },
    activate$0() {
      this.super$Element$activate();
      this.get$state().activate$0();
      this.markNeedsBuild$0();
    },
    deactivate$0() {
      this.get$state().deactivate$0();
      this.super$Element$deactivate0();
    },
    unmount$0() {
      var _this = this;
      _this.super$Element$unmount();
      _this.get$state().dispose$0();
      _this.get$state()._framework0$_element = null;
      _this.set$_framework0$_state(null);
    },
    dependOnInheritedElement$2$aspect(ancestor, aspect) {
      return this.super$Element$dependOnInheritedElement(type$.InheritedElement._as(type$.Element._as(ancestor)), aspect);
    },
    dependOnInheritedElement$1(ancestor) {
      return this.dependOnInheritedElement$2$aspect(ancestor, null);
    },
    didChangeDependencies$0() {
      this.super$Element$didChangeDependencies();
      this._framework0$_didChangeDependencies = true;
    },
    toDiagnosticsNode$2$name$style($name, style) {
      return A._ElementDiagnosticableTreeNode$(B._asStringQ($name), true, type$.nullable_DiagnosticsTreeStyle._as(style), this);
    },
    toDiagnosticsNode$0() {
      return this.toDiagnosticsNode$2$name$style(null, null);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Element$debugFillProperties(properties);
      properties.add$1(0, A.DiagnosticsProperty$("state", this._framework0$_state, true, _null, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.State_StatefulWidget));
    },
    set$_framework0$_state(_state) {
      this._framework0$_state = type$.nullable_State_StatefulWidget._as(_state);
    }
  };
  A.ProxyElement0.prototype = {
    build$0() {
      return type$.ProxyWidget._as(this.get$widget()).child;
    },
    update$1(newWidget) {
      var oldWidget, _this = this,
        t1 = type$.ProxyWidget;
      t1._as(newWidget);
      oldWidget = t1._as(_this.get$widget());
      _this.super$Element$update0(newWidget);
      _this.updated$1(oldWidget);
      _this.rebuild$1$force(true);
    },
    updated$1(oldWidget) {
      this.notifyClients$1(type$.ProxyWidget._as(oldWidget));
    }
  };
  A.InheritedElement.prototype = {
    _framework0$_updateInheritance$0() {
      var _this = this,
        t1 = _this._framework0$_parent,
        incomingWidgets = t1 == null ? null : t1._framework0$_inheritedElements;
      if (incomingWidgets == null)
        incomingWidgets = C.PersistentHashMap_null;
      _this.set$_framework0$_inheritedElements(incomingWidgets.put$2(J.get$runtimeType$(_this.get$widget()), _this));
    },
    getDependencies$1(dependent) {
      return J.$index$asx(this._dependents, type$.Element._as(dependent));
    },
    setDependencies$2(dependent, value) {
      J.$indexSet$ax(this._dependents, type$.Element._as(dependent), value);
    },
    updateDependencies$2(dependent, aspect) {
      this.setDependencies$2(type$.Element._as(dependent), null);
    },
    notifyDependent$2(oldWidget, dependent) {
      type$.InheritedWidget._as(oldWidget);
      type$.Element._as(dependent).didChangeDependencies$0();
    },
    removeDependent$1(dependent) {
      J.remove$1$ax(this._dependents, type$.Element._as(dependent));
    },
    updated$1(oldWidget) {
      var t1 = type$.InheritedWidget;
      t1._as(oldWidget);
      if (B.boolConversionCheck(t1._as(this.get$widget()).updateShouldNotify$1(oldWidget)))
        this.super$ProxyElement$updated(oldWidget);
    },
    notifyClients$1(oldWidget) {
      var t1;
      type$.InheritedWidget._as(oldWidget);
      for (t1 = J.get$iterator$ax(this._dependents.get$keys()); B.boolConversionCheck(t1.moveNext$0());)
        this.notifyDependent$2(oldWidget, t1.get$current());
    }
  };
  A.RenderObjectElement.prototype = {
    get$renderObject() {
      var t1 = this._framework0$_renderObject;
      t1.toString;
      return t1;
    },
    get$renderObjectAttachingChild() {
      return null;
    },
    _findAncestorRenderObjectElement$0() {
      var t1,
        ancestor = this._framework0$_parent;
      while (true) {
        t1 = ancestor == null;
        if (!(!t1 && !(ancestor instanceof A.RenderObjectElement)))
          break;
        ancestor = t1 ? null : ancestor._framework0$_parent;
      }
      return type$.nullable_RenderObjectElement._as(ancestor);
    },
    _findAncestorParentDataElements$0() {
      var ancestor = this._framework0$_parent,
        result = B._setArrayType([], type$.JSArray_ParentDataElement_ParentData),
        t1 = type$.Type;
      B.LinkedHashSet_LinkedHashSet$_empty(t1);
      B.LinkedHashSet_LinkedHashSet$_empty(t1);
      t1 = type$.ParentDataElement_ParentData;
      while (true) {
        if (!(ancestor != null && !(ancestor instanceof A.RenderObjectElement)))
          break;
        if (t1._is(ancestor))
          D.JSArray_methods.add$1(result, ancestor);
        ancestor = ancestor._framework0$_parent;
      }
      return result;
    },
    mount$2($parent, newSlot) {
      var _this = this;
      _this.super$Element$mount0(type$.nullable_Element._as($parent), newSlot);
      _this.set$_framework0$_renderObject(type$.RenderObjectWidget._as(_this.get$widget()).createRenderObject$1(_this));
      _this.attachRenderObject$1(newSlot);
      _this.super$Element$performRebuild();
    },
    update$1(newWidget) {
      this.super$Element$update0(type$.RenderObjectWidget._as(newWidget));
      this._performRebuild$0();
    },
    performRebuild$0() {
      this._performRebuild$0();
    },
    _performRebuild$0() {
      var _this = this;
      type$.RenderObjectWidget._as(_this.get$widget()).updateRenderObject$2(_this, _this.get$renderObject());
      _this.super$Element$performRebuild();
    },
    deactivate$0() {
      this.super$Element$deactivate0();
    },
    unmount$0() {
      var _this = this,
        oldWidget = type$.RenderObjectWidget._as(_this.get$widget());
      _this.super$Element$unmount();
      oldWidget.didUnmountRenderObject$1(_this.get$renderObject());
      _this._framework0$_renderObject.dispose$0();
      _this._framework0$_renderObject = null;
    },
    _updateParentData$1(parentDataWidget) {
      type$.ParentDataWidget_ParentData._as(parentDataWidget).applyParentData$1(this.get$renderObject());
    },
    updateSlot$1(newSlot) {
      var t1, _this = this,
        oldSlot = _this.get$slot();
      _this.super$Element$updateSlot(newSlot);
      t1 = _this._ancestorRenderObjectElement;
      if (t1 != null)
        t1.moveRenderObjectChild$3(_this.get$renderObject(), oldSlot, _this.get$slot());
    },
    attachRenderObject$1(newSlot) {
      var t1, t2, _this = this;
      _this._slot = newSlot;
      _this.set$_ancestorRenderObjectElement(_this._findAncestorRenderObjectElement$0());
      t1 = _this._ancestorRenderObjectElement;
      if (t1 != null)
        t1.insertRenderObjectChild$2(_this.get$renderObject(), newSlot);
      for (t1 = J.get$iterator$ax(_this._findAncestorParentDataElements$0()), t2 = type$.ParentDataWidget_ParentData; B.boolConversionCheck(t1.moveNext$0());)
        _this._updateParentData$1(t2._as(t1.get$current().get$widget()));
    },
    detachRenderObject$0() {
      var _this = this,
        t1 = _this._ancestorRenderObjectElement;
      if (t1 != null) {
        t1.removeRenderObjectChild$2(_this.get$renderObject(), _this.get$slot());
        _this._ancestorRenderObjectElement = null;
      }
      _this._slot = null;
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Element$debugFillProperties(properties);
      properties.add$1(0, A.DiagnosticsProperty$("renderObject", this._framework0$_renderObject, true, _null, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_8, _null, type$.RenderObject));
    },
    set$_framework0$_renderObject(_renderObject) {
      this._framework0$_renderObject = type$.nullable_RenderObject._as(_renderObject);
    },
    set$_ancestorRenderObjectElement(_ancestorRenderObjectElement) {
      this._ancestorRenderObjectElement = type$.nullable_RenderObjectElement._as(_ancestorRenderObjectElement);
    }
  };
  A.LeafRenderObjectElement.prototype = {
    forgetChild$1(child) {
      this.super$Element$forgetChild(type$.Element._as(child));
    },
    insertRenderObjectChild$2(child, slot) {
      type$.RenderObject._as(child);
    },
    moveRenderObjectChild$3(child, oldSlot, newSlot) {
      type$.RenderObject._as(child);
    },
    removeRenderObjectChild$2(child, slot) {
      type$.RenderObject._as(child);
    },
    debugDescribeChildren$0() {
      return this.get$widget().debugDescribeChildren$0();
    }
  };
  A.SingleChildRenderObjectElement.prototype = {
    visitChildren$1(visitor) {
      var t1;
      type$.void_Function_Element._as(visitor);
      t1 = this._framework0$_child;
      if (t1 != null)
        visitor.call$1(t1);
    },
    forgetChild$1(child) {
      type$.Element._as(child);
      this._framework0$_child = null;
      this.super$Element$forgetChild(child);
    },
    mount$2($parent, newSlot) {
      var _this = this;
      _this.super$RenderObjectElement$mount(type$.nullable_Element._as($parent), newSlot);
      _this.set$_framework0$_child(_this.updateChild$3(_this._framework0$_child, type$.SingleChildRenderObjectWidget._as(_this.get$widget()).child, null));
    },
    update$1(newWidget) {
      var _this = this,
        t1 = type$.SingleChildRenderObjectWidget;
      _this.super$RenderObjectElement$update(t1._as(newWidget));
      _this.set$_framework0$_child(_this.updateChild$3(_this._framework0$_child, t1._as(_this.get$widget()).child, null));
    },
    insertRenderObjectChild$2(child, slot) {
      type$.RenderObject._as(child);
      type$.RenderObjectWithChildMixin_RenderObject._as(this.get$renderObject()).set$child(child);
    },
    moveRenderObjectChild$3(child, oldSlot, newSlot) {
      type$.RenderObject._as(child);
    },
    removeRenderObjectChild$2(child, slot) {
      type$.RenderObject._as(child);
      type$.RenderObjectWithChildMixin_RenderObject._as(this.get$renderObject()).set$child(null);
    },
    set$_framework0$_child(_child) {
      this._framework0$_child = type$.nullable_Element._as(_child);
    }
  };
  A.DebugCreator.prototype = {
    toString$0(_) {
      return this.element.debugGetCreatorChain$1(12);
    }
  };
  A.IndexedSlot.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.IndexedSlot && B.boolConversionCheck(J.$eq$(this.index, other.index)) && B.boolConversionCheck(J.$eq$(this.value, other.value));
    },
    get$hashCode(_) {
      return B.Object_hash(this.index, this.value, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    }
  };
  A._NullElement.prototype = {};
  A._NullWidget.prototype = {
    createElement$0() {
      return B.throwExpression(B.UnimplementedError$(null));
    }
  };
  A._State_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.InheritedModel.prototype = {
    createElement$0() {
      return A.InheritedModelElement$(this, B._instanceType(this)._eval$1("InheritedModel.T"));
    },
    isSupportedAspect$1(aspect) {
      type$.Object._as(aspect);
      return true;
    }
  };
  A.InheritedModelElement.prototype = {
    updateDependencies$2(dependent, aspect) {
      var t1, dependencies, t2, _this = this;
      type$.Element._as(dependent);
      t1 = _this.$ti;
      dependencies = t1._eval$1("Set<1>?")._as(_this.getDependencies$1(dependent));
      t2 = dependencies == null;
      if (!t2 && B.boolConversionCheck(dependencies.get$isEmpty(dependencies)))
        return;
      if (aspect == null)
        _this.setDependencies$2(dependent, B.HashSet_HashSet(t1._precomputed1));
      else {
        t2 = t2 ? B.HashSet_HashSet(t1._precomputed1) : dependencies;
        J.add$1$ax(t2, t1._precomputed1._as(aspect));
        _this.setDependencies$2(dependent, t2);
      }
    },
    notifyDependent$2(oldWidget, dependent) {
      var dependencies,
        t1 = this.$ti,
        t2 = t1._eval$1("InheritedModel<1>");
      t2._as(oldWidget);
      type$.Element._as(dependent);
      dependencies = t1._eval$1("Set<1>?")._as(this.getDependencies$1(dependent));
      if (dependencies == null)
        return;
      if (B.boolConversionCheck(dependencies.get$isEmpty(dependencies)) || B.boolConversionCheck(t2._as(this.get$widget()).updateShouldNotifyDependent$2(oldWidget, dependencies)))
        dependent.didChangeDependencies$0();
    }
  };
  A.InheritedNotifier.prototype = {
    updateShouldNotify$1(oldWidget) {
      return !B.boolConversionCheck(J.$eq$(B._instanceType(this)._eval$1("InheritedNotifier<InheritedNotifier.T>")._as(oldWidget).notifier, this.notifier));
    },
    createElement$0() {
      return A._InheritedNotifierElement$(this, B._instanceType(this)._eval$1("InheritedNotifier.T"));
    }
  };
  A._InheritedNotifierElement.prototype = {
    _InheritedNotifierElement$1(widget, $T) {
      var t1 = widget.notifier;
      if (t1 != null)
        t1.addListener$1(this.get$_handleUpdate());
    },
    update$1(newWidget) {
      var oldNotifier, newNotifier, _this = this,
        t1 = _this.$ti._eval$1("InheritedNotifier<1>");
      t1._as(newWidget);
      oldNotifier = t1._as(_this.get$widget()).notifier;
      newNotifier = newWidget.notifier;
      if (!B.boolConversionCheck(J.$eq$(oldNotifier, newNotifier))) {
        if (oldNotifier != null)
          oldNotifier.removeListener$1(_this.get$_handleUpdate());
        if (newNotifier != null)
          newNotifier.addListener$1(_this.get$_handleUpdate());
      }
      _this.super$ProxyElement$update(newWidget);
    },
    build$0() {
      var _this = this;
      if (B.boolConversionCheck(_this._inherited_notifier$_dirty))
        _this.notifyClients$1(_this.$ti._eval$1("InheritedNotifier<1>")._as(_this.get$widget()));
      return _this.super$ProxyElement$build();
    },
    _handleUpdate$0() {
      this._inherited_notifier$_dirty = true;
      this.markNeedsBuild$0();
    },
    notifyClients$1(oldWidget) {
      this.super$InheritedElement$notifyClients(this.$ti._eval$1("InheritedNotifier<1>")._as(oldWidget));
      this._inherited_notifier$_dirty = false;
    },
    unmount$0() {
      var _this = this,
        t1 = _this.$ti._eval$1("InheritedNotifier<1>")._as(_this.get$widget()).notifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_handleUpdate());
      _this.super$Element$unmount();
    }
  };
  A._MediaQueryAspect.prototype = {
    _enumToString$0() {
      return "_MediaQueryAspect." + B.S(this._core$_name);
    }
  };
  A.MediaQuery.prototype = {
    updateShouldNotify$1(oldWidget) {
      return !B.boolConversionCheck(J.$eq$(this.data, type$.MediaQuery._as(oldWidget).data));
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, A.DiagnosticsProperty$("data", this.data, true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, false, true, C.DiagnosticsTreeStyle_8, _null, type$.MediaQueryData));
    },
    updateShouldNotifyDependent$2(oldWidget, dependencies) {
      type$.MediaQuery._as(oldWidget);
      return type$.Set_Object._as(dependencies).any$1(0, new A.MediaQuery_updateShouldNotifyDependent_closure(this, oldWidget));
    }
  };
  A.NavigationMode.prototype = {
    _enumToString$0() {
      return "NavigationMode." + B.S(this._core$_name);
    }
  };
  A.RouteInformation.prototype = {
    get$uri() {
      var t1 = this._router$_uri;
      if (t1 != null)
        return t1;
      null.toString;
      return A.Uri_parse(null);
    }
  };
  A.ScrollPositionAlignmentPolicy.prototype = {
    _enumToString$0() {
      return "ScrollPositionAlignmentPolicy." + B.S(this._core$_name);
    }
  };
  A.Matrix40.prototype = {
    get$storage() {
      return this._vector_math_64$_m4storage;
    },
    index$2(row, col) {
      B._asInt(row);
      return B._asInt(col) * 4 + row;
    },
    entry$2(row, col) {
      return J.$index$asx(this._vector_math_64$_m4storage, this.index$2(B._asInt(row), B._asInt(col)));
    },
    setFrom$1(arg) {
      var t2,
        argStorage = type$.Matrix4_2._as(arg)._vector_math_64$_m4storage,
        t1 = this._vector_math_64$_m4storage;
      if (15 >= argStorage.length)
        return B.ioore(argStorage, 15);
      t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, 15, argStorage[15]);
      t2.$indexSet(t1, 14, argStorage[14]);
      t2.$indexSet(t1, 13, argStorage[13]);
      t2.$indexSet(t1, 12, argStorage[12]);
      t2.$indexSet(t1, 11, argStorage[11]);
      t2.$indexSet(t1, 10, argStorage[10]);
      t2.$indexSet(t1, 9, argStorage[9]);
      t2.$indexSet(t1, 8, argStorage[8]);
      t2.$indexSet(t1, 7, argStorage[7]);
      t2.$indexSet(t1, 6, argStorage[6]);
      t2.$indexSet(t1, 5, argStorage[5]);
      t2.$indexSet(t1, 4, argStorage[4]);
      t2.$indexSet(t1, 3, argStorage[3]);
      t2.$indexSet(t1, 2, argStorage[2]);
      t2.$indexSet(t1, 1, argStorage[1]);
      t2.$indexSet(t1, 0, argStorage[0]);
    },
    toString$0(_) {
      var _this = this;
      return "[0] " + B.S(_this.getRow$1(0)) + "\n[1] " + B.S(_this.getRow$1(1)) + "\n[2] " + B.S(_this.getRow$1(2)) + "\n[3] " + B.S(_this.getRow$1(3)) + "\n";
    },
    $eq(_, other) {
      var t1, t2, t3, t4, t5;
      if (other == null)
        return false;
      if (other instanceof A.Matrix40) {
        t1 = this._vector_math_64$_m4storage;
        t2 = J.getInterceptor$asx(t1);
        t3 = t2.$index(t1, 0);
        t4 = other._vector_math_64$_m4storage;
        t5 = J.getInterceptor$asx(t4);
        t1 = B.boolConversionCheck(J.$eq$(t3, t5.$index(t4, 0))) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 1), t5.$index(t4, 1))) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 2), t5.$index(t4, 2))) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 3), t5.$index(t4, 3))) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 4), t5.$index(t4, 4))) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 5), t5.$index(t4, 5))) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 6), t5.$index(t4, 6))) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 7), t5.$index(t4, 7))) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 8), t5.$index(t4, 8))) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 9), t5.$index(t4, 9))) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 10), t5.$index(t4, 10))) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 11), t5.$index(t4, 11))) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 12), t5.$index(t4, 12))) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 13), t5.$index(t4, 13))) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 14), t5.$index(t4, 14))) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 15), t5.$index(t4, 15)));
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return B.Object_hashAll(this._vector_math_64$_m4storage);
    },
    setRow$2(row, arg) {
      var argStorage, t1, t2, t3, t4, _this = this;
      B._asInt(row);
      argStorage = type$.Vector4._as(arg)._v4storage;
      t1 = _this._vector_math_64$_m4storage;
      t2 = _this.index$2(row, 0);
      t3 = argStorage.length;
      if (0 >= t3)
        return B.ioore(argStorage, 0);
      t4 = J.getInterceptor$ax(t1);
      t4.$indexSet(t1, t2, argStorage[0]);
      t2 = _this.index$2(row, 1);
      if (1 >= t3)
        return B.ioore(argStorage, 1);
      t4.$indexSet(t1, t2, argStorage[1]);
      t2 = _this.index$2(row, 2);
      if (2 >= t3)
        return B.ioore(argStorage, 2);
      t4.$indexSet(t1, t2, argStorage[2]);
      t2 = _this.index$2(row, 3);
      if (3 >= t3)
        return B.ioore(argStorage, 3);
      t4.$indexSet(t1, t2, argStorage[3]);
    },
    getRow$1(row) {
      var r, rStorage, t1, t2, _this = this;
      B._asInt(row);
      r = A.Vector4$zero();
      rStorage = r._v4storage;
      t1 = _this._vector_math_64$_m4storage;
      t2 = J.getInterceptor$asx(t1);
      D.NativeFloat64List_methods.$indexSet(rStorage, 0, t2.$index(t1, _this.index$2(row, 0)));
      D.NativeFloat64List_methods.$indexSet(rStorage, 1, t2.$index(t1, _this.index$2(row, 1)));
      D.NativeFloat64List_methods.$indexSet(rStorage, 2, t2.$index(t1, _this.index$2(row, 2)));
      D.NativeFloat64List_methods.$indexSet(rStorage, 3, t2.$index(t1, _this.index$2(row, 3)));
      return r;
    },
    setColumn$2(column, arg) {
      var t2,
        entry = B._asInt(column) * 4,
        argStorage = type$.Vector4._as(arg)._v4storage,
        t1 = this._vector_math_64$_m4storage;
      if (3 >= argStorage.length)
        return B.ioore(argStorage, 3);
      t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, entry + 3, argStorage[3]);
      t2.$indexSet(t1, entry + 2, argStorage[2]);
      t2.$indexSet(t1, entry + 1, argStorage[1]);
      t2.$indexSet(t1, entry, argStorage[0]);
    },
    clone$0() {
      return A.Matrix4_Matrix4$copy0(this);
    },
    $mul(_, arg) {
      var _this = this;
      if (typeof arg == "number")
        return _this.scaled$1(arg);
      if (arg instanceof A.Vector4)
        return _this.transformed$1(arg);
      if (arg instanceof A.Vector3)
        return _this.transformed3$1(arg);
      if (arg instanceof A.Matrix40)
        return _this.multiplied$1(arg);
      throw B.wrapException(B.ArgumentError$(arg, null));
    },
    $add(_, arg) {
      var t1;
      type$.Matrix4_2._as(arg);
      t1 = this.clone$0();
      J.add$1$ax(t1, arg);
      return t1;
    },
    $sub(_, arg) {
      var t1;
      type$.Matrix4_2._as(arg);
      t1 = this.clone$0();
      t1.sub$1(arg);
      return t1;
    },
    translate$2(x, y) {
      var t1, tw, tx, ty, tz, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18;
      B._asDouble(y);
      t1 = x instanceof A.Vector4;
      tw = t1 ? x.get$w() : 1;
      if (x instanceof A.Vector3) {
        tx = x.get$x();
        ty = x.get$y();
        tz = x.get$z();
      } else if (t1) {
        tx = x.get$x();
        ty = x.get$y();
        tz = x.get$z();
      } else {
        if (typeof x != "number")
          throw B.wrapException(B.UnimplementedError$(null));
        ty = y;
        tx = x;
        tz = 0;
      }
      t1 = this._vector_math_64$_m4storage;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.$index(t1, 0);
      if (typeof t3 !== "number")
        return t3.$mul();
      t4 = t2.$index(t1, 4);
      if (typeof t4 !== "number")
        return t4.$mul();
      t5 = t2.$index(t1, 8);
      if (typeof t5 !== "number")
        return t5.$mul();
      t6 = t2.$index(t1, 12);
      if (typeof t6 !== "number")
        return t6.$mul();
      t7 = t2.$index(t1, 1);
      if (typeof t7 !== "number")
        return t7.$mul();
      t8 = t2.$index(t1, 5);
      if (typeof t8 !== "number")
        return t8.$mul();
      t9 = t2.$index(t1, 9);
      if (typeof t9 !== "number")
        return t9.$mul();
      t10 = t2.$index(t1, 13);
      if (typeof t10 !== "number")
        return t10.$mul();
      t11 = t2.$index(t1, 2);
      if (typeof t11 !== "number")
        return t11.$mul();
      t12 = t2.$index(t1, 6);
      if (typeof t12 !== "number")
        return t12.$mul();
      t13 = t2.$index(t1, 10);
      if (typeof t13 !== "number")
        return t13.$mul();
      t14 = t2.$index(t1, 14);
      if (typeof t14 !== "number")
        return t14.$mul();
      t15 = t2.$index(t1, 3);
      if (typeof t15 !== "number")
        return t15.$mul();
      t16 = t2.$index(t1, 7);
      if (typeof t16 !== "number")
        return t16.$mul();
      t17 = t2.$index(t1, 11);
      if (typeof t17 !== "number")
        return t17.$mul();
      t18 = t2.$index(t1, 15);
      if (typeof t18 !== "number")
        return t18.$mul();
      t2.$indexSet(t1, 12, t3 * tx + t4 * ty + t5 * tz + t6 * tw);
      t2.$indexSet(t1, 13, t7 * tx + t8 * ty + t9 * tz + t10 * tw);
      t2.$indexSet(t1, 14, t11 * tx + t12 * ty + t13 * tz + t14 * tw);
      t2.$indexSet(t1, 15, t15 * tx + t16 * ty + t17 * tz + t18 * tw);
    },
    leftTranslate$2(x, y) {
      var t1, tw, tx, ty, tz, t2, t3, t4;
      B._asDouble(y);
      t1 = x instanceof A.Vector4;
      tw = t1 ? x.get$w() : 1;
      if (x instanceof A.Vector3) {
        tx = x.get$x();
        ty = x.get$y();
        tz = x.get$z();
      } else if (t1) {
        tx = x.get$x();
        ty = x.get$y();
        tz = x.get$z();
      } else {
        if (typeof x != "number")
          throw B.wrapException(B.UnimplementedError$(null));
        ty = y;
        tx = x;
        tz = 0;
      }
      t1 = this._vector_math_64$_m4storage;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.$index(t1, 0);
      t4 = t2.$index(t1, 3);
      if (typeof t4 !== "number")
        return B.iae(t4);
      if (typeof t3 !== "number")
        return t3.$add();
      t2.$indexSet(t1, 0, t3 + tx * t4);
      t4 = t2.$index(t1, 1);
      t3 = t2.$index(t1, 3);
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (typeof t4 !== "number")
        return t4.$add();
      t2.$indexSet(t1, 1, t4 + ty * t3);
      t3 = t2.$index(t1, 2);
      t4 = t2.$index(t1, 3);
      if (typeof t4 !== "number")
        return B.iae(t4);
      if (typeof t3 !== "number")
        return t3.$add();
      t2.$indexSet(t1, 2, t3 + tz * t4);
      t4 = t2.$index(t1, 3);
      if (typeof t4 !== "number")
        return B.iae(t4);
      t2.$indexSet(t1, 3, tw * t4);
      t4 = t2.$index(t1, 4);
      t3 = t2.$index(t1, 7);
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (typeof t4 !== "number")
        return t4.$add();
      t2.$indexSet(t1, 4, t4 + tx * t3);
      t3 = t2.$index(t1, 5);
      t4 = t2.$index(t1, 7);
      if (typeof t4 !== "number")
        return B.iae(t4);
      if (typeof t3 !== "number")
        return t3.$add();
      t2.$indexSet(t1, 5, t3 + ty * t4);
      t4 = t2.$index(t1, 6);
      t3 = t2.$index(t1, 7);
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (typeof t4 !== "number")
        return t4.$add();
      t2.$indexSet(t1, 6, t4 + tz * t3);
      t3 = t2.$index(t1, 7);
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 7, tw * t3);
      t3 = t2.$index(t1, 8);
      t4 = t2.$index(t1, 11);
      if (typeof t4 !== "number")
        return B.iae(t4);
      if (typeof t3 !== "number")
        return t3.$add();
      t2.$indexSet(t1, 8, t3 + tx * t4);
      t4 = t2.$index(t1, 9);
      t3 = t2.$index(t1, 11);
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (typeof t4 !== "number")
        return t4.$add();
      t2.$indexSet(t1, 9, t4 + ty * t3);
      t3 = t2.$index(t1, 10);
      t4 = t2.$index(t1, 11);
      if (typeof t4 !== "number")
        return B.iae(t4);
      if (typeof t3 !== "number")
        return t3.$add();
      t2.$indexSet(t1, 10, t3 + tz * t4);
      t4 = t2.$index(t1, 11);
      if (typeof t4 !== "number")
        return B.iae(t4);
      t2.$indexSet(t1, 11, tw * t4);
      t4 = t2.$index(t1, 12);
      t3 = t2.$index(t1, 15);
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (typeof t4 !== "number")
        return t4.$add();
      t2.$indexSet(t1, 12, t4 + tx * t3);
      t3 = t2.$index(t1, 13);
      t4 = t2.$index(t1, 15);
      if (typeof t4 !== "number")
        return B.iae(t4);
      if (typeof t3 !== "number")
        return t3.$add();
      t2.$indexSet(t1, 13, t3 + ty * t4);
      t4 = t2.$index(t1, 14);
      t3 = t2.$index(t1, 15);
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (typeof t4 !== "number")
        return t4.$add();
      t2.$indexSet(t1, 14, t4 + tz * t3);
      t3 = t2.$index(t1, 15);
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 15, tw * t3);
    },
    scale$3(x, y, z) {
      var t1, sw, sx, sy, sz, t2, t3;
      B._asDoubleQ(y);
      B._asDoubleQ(z);
      t1 = x instanceof A.Vector4;
      sw = t1 ? x.get$w() : 1;
      if (x instanceof A.Vector3) {
        sx = x.get$x();
        sy = x.get$y();
        sz = x.get$z();
      } else if (t1) {
        sx = x.get$x();
        sy = x.get$y();
        sz = x.get$z();
      } else {
        if (typeof x == "number") {
          sy = y == null ? x : y;
          sz = z == null ? x : z;
        } else
          throw B.wrapException(B.UnimplementedError$(null));
        sx = x;
      }
      t1 = this._vector_math_64$_m4storage;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.$index(t1, 0);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 0, t3 * sx);
      t3 = t2.$index(t1, 1);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 1, t3 * sx);
      t3 = t2.$index(t1, 2);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 2, t3 * sx);
      t3 = t2.$index(t1, 3);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 3, t3 * sx);
      t3 = t2.$index(t1, 4);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 4, t3 * sy);
      t3 = t2.$index(t1, 5);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 5, t3 * sy);
      t3 = t2.$index(t1, 6);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 6, t3 * sy);
      t3 = t2.$index(t1, 7);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 7, t3 * sy);
      t3 = t2.$index(t1, 8);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 8, t3 * sz);
      t3 = t2.$index(t1, 9);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 9, t3 * sz);
      t3 = t2.$index(t1, 10);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 10, t3 * sz);
      t3 = t2.$index(t1, 11);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 11, t3 * sz);
      t3 = t2.$index(t1, 12);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 12, t3 * sw);
      t3 = t2.$index(t1, 13);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 13, t3 * sw);
      t3 = t2.$index(t1, 14);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 14, t3 * sw);
      t3 = t2.$index(t1, 15);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 15, t3 * sw);
    },
    scale$2(x, y) {
      return this.scale$3(x, y, null);
    },
    scaled$1(x) {
      var t1 = this.clone$0();
      t1.scale$3(x, null, null);
      return t1;
    },
    setZero$0() {
      var t1 = this._vector_math_64$_m4storage,
        t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, 0, 0);
      t2.$indexSet(t1, 1, 0);
      t2.$indexSet(t1, 2, 0);
      t2.$indexSet(t1, 3, 0);
      t2.$indexSet(t1, 4, 0);
      t2.$indexSet(t1, 5, 0);
      t2.$indexSet(t1, 6, 0);
      t2.$indexSet(t1, 7, 0);
      t2.$indexSet(t1, 8, 0);
      t2.$indexSet(t1, 9, 0);
      t2.$indexSet(t1, 10, 0);
      t2.$indexSet(t1, 11, 0);
      t2.$indexSet(t1, 12, 0);
      t2.$indexSet(t1, 13, 0);
      t2.$indexSet(t1, 14, 0);
      t2.$indexSet(t1, 15, 0);
    },
    setIdentity$0() {
      var t1 = this._vector_math_64$_m4storage,
        t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, 0, 1);
      t2.$indexSet(t1, 1, 0);
      t2.$indexSet(t1, 2, 0);
      t2.$indexSet(t1, 3, 0);
      t2.$indexSet(t1, 4, 0);
      t2.$indexSet(t1, 5, 1);
      t2.$indexSet(t1, 6, 0);
      t2.$indexSet(t1, 7, 0);
      t2.$indexSet(t1, 8, 0);
      t2.$indexSet(t1, 9, 0);
      t2.$indexSet(t1, 10, 1);
      t2.$indexSet(t1, 11, 0);
      t2.$indexSet(t1, 12, 0);
      t2.$indexSet(t1, 13, 0);
      t2.$indexSet(t1, 14, 0);
      t2.$indexSet(t1, 15, 1);
    },
    setTranslationRaw$3(x, y, z) {
      var t1, t2;
      B._asDouble(x);
      B._asDouble(y);
      t1 = this._vector_math_64$_m4storage;
      t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, 14, B._asDouble(z));
      t2.$indexSet(t1, 13, y);
      t2.$indexSet(t1, 12, x);
    },
    invert$0() {
      return this.copyInverse$1(this);
    },
    copyInverse$1(arg) {
      var argStorage, t1, a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33, b00, b01, b02, b03, b04, b05, b06, b07, b08, b09, b10, b11, det, invDet, t2, t3, t4;
      type$.Matrix4_2._as(arg);
      argStorage = arg._vector_math_64$_m4storage;
      t1 = argStorage.length;
      if (0 >= t1)
        return B.ioore(argStorage, 0);
      a00 = argStorage[0];
      if (1 >= t1)
        return B.ioore(argStorage, 1);
      a01 = argStorage[1];
      if (2 >= t1)
        return B.ioore(argStorage, 2);
      a02 = argStorage[2];
      if (3 >= t1)
        return B.ioore(argStorage, 3);
      a03 = argStorage[3];
      if (4 >= t1)
        return B.ioore(argStorage, 4);
      a10 = argStorage[4];
      if (5 >= t1)
        return B.ioore(argStorage, 5);
      a11 = argStorage[5];
      if (6 >= t1)
        return B.ioore(argStorage, 6);
      a12 = argStorage[6];
      if (7 >= t1)
        return B.ioore(argStorage, 7);
      a13 = argStorage[7];
      if (8 >= t1)
        return B.ioore(argStorage, 8);
      a20 = argStorage[8];
      if (9 >= t1)
        return B.ioore(argStorage, 9);
      a21 = argStorage[9];
      if (10 >= t1)
        return B.ioore(argStorage, 10);
      a22 = argStorage[10];
      if (11 >= t1)
        return B.ioore(argStorage, 11);
      a23 = argStorage[11];
      if (12 >= t1)
        return B.ioore(argStorage, 12);
      a30 = argStorage[12];
      if (13 >= t1)
        return B.ioore(argStorage, 13);
      a31 = argStorage[13];
      if (14 >= t1)
        return B.ioore(argStorage, 14);
      a32 = argStorage[14];
      if (15 >= t1)
        return B.ioore(argStorage, 15);
      a33 = argStorage[15];
      b00 = a00 * a11 - a01 * a10;
      b01 = a00 * a12 - a02 * a10;
      b02 = a00 * a13 - a03 * a10;
      b03 = a01 * a12 - a02 * a11;
      b04 = a01 * a13 - a03 * a11;
      b05 = a02 * a13 - a03 * a12;
      b06 = a20 * a31 - a21 * a30;
      b07 = a20 * a32 - a22 * a30;
      b08 = a20 * a33 - a23 * a30;
      b09 = a21 * a32 - a22 * a31;
      b10 = a21 * a33 - a23 * a31;
      b11 = a22 * a33 - a23 * a32;
      det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
      if (det === 0) {
        this.setFrom$1(arg);
        return 0;
      }
      invDet = 1 / det;
      t1 = this._vector_math_64$_m4storage;
      t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, 0, (a11 * b11 - a12 * b10 + a13 * b09) * invDet);
      t2.$indexSet(t1, 1, (-a01 * b11 + a02 * b10 - a03 * b09) * invDet);
      t2.$indexSet(t1, 2, (a31 * b05 - a32 * b04 + a33 * b03) * invDet);
      t2.$indexSet(t1, 3, (-a21 * b05 + a22 * b04 - a23 * b03) * invDet);
      t3 = -a10;
      t2.$indexSet(t1, 4, (t3 * b11 + a12 * b08 - a13 * b07) * invDet);
      t2.$indexSet(t1, 5, (a00 * b11 - a02 * b08 + a03 * b07) * invDet);
      t4 = -a30;
      t2.$indexSet(t1, 6, (t4 * b05 + a32 * b02 - a33 * b01) * invDet);
      t2.$indexSet(t1, 7, (a20 * b05 - a22 * b02 + a23 * b01) * invDet);
      t2.$indexSet(t1, 8, (a10 * b10 - a11 * b08 + a13 * b06) * invDet);
      t2.$indexSet(t1, 9, (-a00 * b10 + a01 * b08 - a03 * b06) * invDet);
      t2.$indexSet(t1, 10, (a30 * b04 - a31 * b02 + a33 * b00) * invDet);
      t2.$indexSet(t1, 11, (-a20 * b04 + a21 * b02 - a23 * b00) * invDet);
      t2.$indexSet(t1, 12, (t3 * b09 + a11 * b07 - a12 * b06) * invDet);
      t2.$indexSet(t1, 13, (a00 * b09 - a01 * b07 + a02 * b06) * invDet);
      t2.$indexSet(t1, 14, (t4 * b03 + a31 * b01 - a32 * b00) * invDet);
      t2.$indexSet(t1, 15, (a20 * b03 - a21 * b01 + a22 * b00) * invDet);
      return det;
    },
    add$1(_, o) {
      var t5,
        oStorage = type$.Matrix4_2._as(o)._vector_math_64$_m4storage,
        t1 = this._vector_math_64$_m4storage,
        t2 = J.getInterceptor$asx(t1),
        t3 = t2.$index(t1, 0),
        t4 = oStorage.length;
      if (0 >= t4)
        return B.ioore(oStorage, 0);
      t5 = oStorage[0];
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 0, t3 + t5);
      t5 = t2.$index(t1, 1);
      if (1 >= t4)
        return B.ioore(oStorage, 1);
      t3 = oStorage[1];
      if (typeof t5 !== "number")
        return t5.$add();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 1, t5 + t3);
      t3 = t2.$index(t1, 2);
      if (2 >= t4)
        return B.ioore(oStorage, 2);
      t5 = oStorage[2];
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 2, t3 + t5);
      t5 = t2.$index(t1, 3);
      if (3 >= t4)
        return B.ioore(oStorage, 3);
      t3 = oStorage[3];
      if (typeof t5 !== "number")
        return t5.$add();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 3, t5 + t3);
      t3 = t2.$index(t1, 4);
      if (4 >= t4)
        return B.ioore(oStorage, 4);
      t5 = oStorage[4];
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 4, t3 + t5);
      t5 = t2.$index(t1, 5);
      if (5 >= t4)
        return B.ioore(oStorage, 5);
      t3 = oStorage[5];
      if (typeof t5 !== "number")
        return t5.$add();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 5, t5 + t3);
      t3 = t2.$index(t1, 6);
      if (6 >= t4)
        return B.ioore(oStorage, 6);
      t5 = oStorage[6];
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 6, t3 + t5);
      t5 = t2.$index(t1, 7);
      if (7 >= t4)
        return B.ioore(oStorage, 7);
      t3 = oStorage[7];
      if (typeof t5 !== "number")
        return t5.$add();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 7, t5 + t3);
      t3 = t2.$index(t1, 8);
      if (8 >= t4)
        return B.ioore(oStorage, 8);
      t5 = oStorage[8];
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 8, t3 + t5);
      t5 = t2.$index(t1, 9);
      if (9 >= t4)
        return B.ioore(oStorage, 9);
      t3 = oStorage[9];
      if (typeof t5 !== "number")
        return t5.$add();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 9, t5 + t3);
      t3 = t2.$index(t1, 10);
      if (10 >= t4)
        return B.ioore(oStorage, 10);
      t5 = oStorage[10];
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 10, t3 + t5);
      t5 = t2.$index(t1, 11);
      if (11 >= t4)
        return B.ioore(oStorage, 11);
      t3 = oStorage[11];
      if (typeof t5 !== "number")
        return t5.$add();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 11, t5 + t3);
      t3 = t2.$index(t1, 12);
      if (12 >= t4)
        return B.ioore(oStorage, 12);
      t5 = oStorage[12];
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 12, t3 + t5);
      t5 = t2.$index(t1, 13);
      if (13 >= t4)
        return B.ioore(oStorage, 13);
      t3 = oStorage[13];
      if (typeof t5 !== "number")
        return t5.$add();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 13, t5 + t3);
      t3 = t2.$index(t1, 14);
      if (14 >= t4)
        return B.ioore(oStorage, 14);
      t5 = oStorage[14];
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 14, t3 + t5);
      t5 = t2.$index(t1, 15);
      if (15 >= t4)
        return B.ioore(oStorage, 15);
      t4 = oStorage[15];
      if (typeof t5 !== "number")
        return t5.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t2.$indexSet(t1, 15, t5 + t4);
    },
    sub$1(o) {
      var t5,
        oStorage = type$.Matrix4_2._as(o)._vector_math_64$_m4storage,
        t1 = this._vector_math_64$_m4storage,
        t2 = J.getInterceptor$asx(t1),
        t3 = t2.$index(t1, 0),
        t4 = oStorage.length;
      if (0 >= t4)
        return B.ioore(oStorage, 0);
      t5 = oStorage[0];
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 0, t3 - t5);
      t5 = t2.$index(t1, 1);
      if (1 >= t4)
        return B.ioore(oStorage, 1);
      t3 = oStorage[1];
      if (typeof t5 !== "number")
        return t5.$sub();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 1, t5 - t3);
      t3 = t2.$index(t1, 2);
      if (2 >= t4)
        return B.ioore(oStorage, 2);
      t5 = oStorage[2];
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 2, t3 - t5);
      t5 = t2.$index(t1, 3);
      if (3 >= t4)
        return B.ioore(oStorage, 3);
      t3 = oStorage[3];
      if (typeof t5 !== "number")
        return t5.$sub();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 3, t5 - t3);
      t3 = t2.$index(t1, 4);
      if (4 >= t4)
        return B.ioore(oStorage, 4);
      t5 = oStorage[4];
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 4, t3 - t5);
      t5 = t2.$index(t1, 5);
      if (5 >= t4)
        return B.ioore(oStorage, 5);
      t3 = oStorage[5];
      if (typeof t5 !== "number")
        return t5.$sub();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 5, t5 - t3);
      t3 = t2.$index(t1, 6);
      if (6 >= t4)
        return B.ioore(oStorage, 6);
      t5 = oStorage[6];
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 6, t3 - t5);
      t5 = t2.$index(t1, 7);
      if (7 >= t4)
        return B.ioore(oStorage, 7);
      t3 = oStorage[7];
      if (typeof t5 !== "number")
        return t5.$sub();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 7, t5 - t3);
      t3 = t2.$index(t1, 8);
      if (8 >= t4)
        return B.ioore(oStorage, 8);
      t5 = oStorage[8];
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 8, t3 - t5);
      t5 = t2.$index(t1, 9);
      if (9 >= t4)
        return B.ioore(oStorage, 9);
      t3 = oStorage[9];
      if (typeof t5 !== "number")
        return t5.$sub();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 9, t5 - t3);
      t3 = t2.$index(t1, 10);
      if (10 >= t4)
        return B.ioore(oStorage, 10);
      t5 = oStorage[10];
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 10, t3 - t5);
      t5 = t2.$index(t1, 11);
      if (11 >= t4)
        return B.ioore(oStorage, 11);
      t3 = oStorage[11];
      if (typeof t5 !== "number")
        return t5.$sub();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 11, t5 - t3);
      t3 = t2.$index(t1, 12);
      if (12 >= t4)
        return B.ioore(oStorage, 12);
      t5 = oStorage[12];
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 12, t3 - t5);
      t5 = t2.$index(t1, 13);
      if (13 >= t4)
        return B.ioore(oStorage, 13);
      t3 = oStorage[13];
      if (typeof t5 !== "number")
        return t5.$sub();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 13, t5 - t3);
      t3 = t2.$index(t1, 14);
      if (14 >= t4)
        return B.ioore(oStorage, 14);
      t5 = oStorage[14];
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 14, t3 - t5);
      t5 = t2.$index(t1, 15);
      if (15 >= t4)
        return B.ioore(oStorage, 15);
      t4 = oStorage[15];
      if (typeof t5 !== "number")
        return t5.$sub();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t2.$indexSet(t1, 15, t5 - t4);
    },
    multiply$1(arg) {
      var t1, t2, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33, argStorage, t3, n00, n01, n02, n03, n10, n11, n12, n13, n20, n21, n22, n23, n30, n31, n32, n33;
      type$.Matrix4_2._as(arg);
      t1 = this._vector_math_64$_m4storage;
      t2 = J.getInterceptor$asx(t1);
      m00 = t2.$index(t1, 0);
      m01 = t2.$index(t1, 4);
      m02 = t2.$index(t1, 8);
      m03 = t2.$index(t1, 12);
      m10 = t2.$index(t1, 1);
      m11 = t2.$index(t1, 5);
      m12 = t2.$index(t1, 9);
      m13 = t2.$index(t1, 13);
      m20 = t2.$index(t1, 2);
      m21 = t2.$index(t1, 6);
      m22 = t2.$index(t1, 10);
      m23 = t2.$index(t1, 14);
      m30 = t2.$index(t1, 3);
      m31 = t2.$index(t1, 7);
      m32 = t2.$index(t1, 11);
      m33 = t2.$index(t1, 15);
      argStorage = arg._vector_math_64$_m4storage;
      t3 = argStorage.length;
      if (0 >= t3)
        return B.ioore(argStorage, 0);
      n00 = argStorage[0];
      if (4 >= t3)
        return B.ioore(argStorage, 4);
      n01 = argStorage[4];
      if (8 >= t3)
        return B.ioore(argStorage, 8);
      n02 = argStorage[8];
      if (12 >= t3)
        return B.ioore(argStorage, 12);
      n03 = argStorage[12];
      n10 = argStorage[1];
      n11 = argStorage[5];
      n12 = argStorage[9];
      if (13 >= t3)
        return B.ioore(argStorage, 13);
      n13 = argStorage[13];
      n20 = argStorage[2];
      n21 = argStorage[6];
      n22 = argStorage[10];
      if (14 >= t3)
        return B.ioore(argStorage, 14);
      n23 = argStorage[14];
      n30 = argStorage[3];
      n31 = argStorage[7];
      n32 = argStorage[11];
      if (15 >= t3)
        return B.ioore(argStorage, 15);
      n33 = argStorage[15];
      t2.$indexSet(t1, 0, m00 * n00 + m01 * n10 + m02 * n20 + m03 * n30);
      t2.$indexSet(t1, 4, m00 * n01 + m01 * n11 + m02 * n21 + m03 * n31);
      t2.$indexSet(t1, 8, m00 * n02 + m01 * n12 + m02 * n22 + m03 * n32);
      t2.$indexSet(t1, 12, m00 * n03 + m01 * n13 + m02 * n23 + m03 * n33);
      t2.$indexSet(t1, 1, m10 * n00 + m11 * n10 + m12 * n20 + m13 * n30);
      t2.$indexSet(t1, 5, m10 * n01 + m11 * n11 + m12 * n21 + m13 * n31);
      t2.$indexSet(t1, 9, m10 * n02 + m11 * n12 + m12 * n22 + m13 * n32);
      t2.$indexSet(t1, 13, m10 * n03 + m11 * n13 + m12 * n23 + m13 * n33);
      t2.$indexSet(t1, 2, m20 * n00 + m21 * n10 + m22 * n20 + m23 * n30);
      t2.$indexSet(t1, 6, m20 * n01 + m21 * n11 + m22 * n21 + m23 * n31);
      t2.$indexSet(t1, 10, m20 * n02 + m21 * n12 + m22 * n22 + m23 * n32);
      t2.$indexSet(t1, 14, m20 * n03 + m21 * n13 + m22 * n23 + m23 * n33);
      t2.$indexSet(t1, 3, m30 * n00 + m31 * n10 + m32 * n20 + m33 * n30);
      t2.$indexSet(t1, 7, m30 * n01 + m31 * n11 + m32 * n21 + m33 * n31);
      t2.$indexSet(t1, 11, m30 * n02 + m31 * n12 + m32 * n22 + m33 * n32);
      t2.$indexSet(t1, 15, m30 * n03 + m31 * n13 + m32 * n23 + m33 * n33);
    },
    multiplied$1(arg) {
      var t1;
      type$.Matrix4_2._as(arg);
      t1 = this.clone$0();
      t1.multiply$1(arg);
      return t1;
    },
    transform3$1(arg) {
      var argStorage, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22;
      type$.Vector3._as(arg);
      argStorage = arg._v3storage;
      t1 = this._vector_math_64$_m4storage;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.$index(t1, 0);
      t4 = argStorage.length;
      if (0 >= t4)
        return B.ioore(argStorage, 0);
      t5 = argStorage[0];
      if (typeof t3 !== "number")
        return t3.$mul();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t6 = t2.$index(t1, 4);
      if (1 >= t4)
        return B.ioore(argStorage, 1);
      t7 = argStorage[1];
      if (typeof t6 !== "number")
        return t6.$mul();
      if (typeof t7 !== "number")
        return B.iae(t7);
      t8 = t2.$index(t1, 8);
      if (2 >= t4)
        return B.ioore(argStorage, 2);
      t4 = argStorage[2];
      if (typeof t8 !== "number")
        return t8.$mul();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t9 = t2.$index(t1, 12);
      if (typeof t9 !== "number")
        return B.iae(t9);
      t10 = t2.$index(t1, 1);
      t11 = argStorage[0];
      if (typeof t10 !== "number")
        return t10.$mul();
      if (typeof t11 !== "number")
        return B.iae(t11);
      t12 = t2.$index(t1, 5);
      t13 = argStorage[1];
      if (typeof t12 !== "number")
        return t12.$mul();
      if (typeof t13 !== "number")
        return B.iae(t13);
      t14 = t2.$index(t1, 9);
      t15 = argStorage[2];
      if (typeof t14 !== "number")
        return t14.$mul();
      if (typeof t15 !== "number")
        return B.iae(t15);
      t16 = t2.$index(t1, 13);
      if (typeof t16 !== "number")
        return B.iae(t16);
      t17 = t2.$index(t1, 2);
      t18 = argStorage[0];
      if (typeof t17 !== "number")
        return t17.$mul();
      if (typeof t18 !== "number")
        return B.iae(t18);
      t19 = t2.$index(t1, 6);
      t20 = argStorage[1];
      if (typeof t19 !== "number")
        return t19.$mul();
      if (typeof t20 !== "number")
        return B.iae(t20);
      t21 = t2.$index(t1, 10);
      t22 = argStorage[2];
      if (typeof t21 !== "number")
        return t21.$mul();
      if (typeof t22 !== "number")
        return B.iae(t22);
      t1 = t2.$index(t1, 14);
      if (typeof t1 !== "number")
        return B.iae(t1);
      argStorage[0] = t3 * t5 + t6 * t7 + t8 * t4 + t9;
      argStorage[1] = t10 * t11 + t12 * t13 + t14 * t15 + t16;
      argStorage[2] = t17 * t18 + t19 * t20 + t21 * t22 + t1;
      return arg;
    },
    transformed3$1(arg) {
      var out = A.Vector3_Vector3$copy(type$.Vector3._as(arg));
      return this.transform3$1(out);
    },
    transform$1(arg) {
      var argStorage, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32;
      type$.Vector4._as(arg);
      argStorage = arg._v4storage;
      t1 = this._vector_math_64$_m4storage;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.$index(t1, 0);
      t4 = argStorage.length;
      if (0 >= t4)
        return B.ioore(argStorage, 0);
      t5 = argStorage[0];
      if (typeof t3 !== "number")
        return t3.$mul();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t6 = t2.$index(t1, 4);
      if (1 >= t4)
        return B.ioore(argStorage, 1);
      t7 = argStorage[1];
      if (typeof t6 !== "number")
        return t6.$mul();
      if (typeof t7 !== "number")
        return B.iae(t7);
      t8 = t2.$index(t1, 8);
      if (2 >= t4)
        return B.ioore(argStorage, 2);
      t9 = argStorage[2];
      if (typeof t8 !== "number")
        return t8.$mul();
      if (typeof t9 !== "number")
        return B.iae(t9);
      t10 = t2.$index(t1, 12);
      if (3 >= t4)
        return B.ioore(argStorage, 3);
      t4 = argStorage[3];
      if (typeof t10 !== "number")
        return t10.$mul();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t11 = t2.$index(t1, 1);
      t12 = argStorage[0];
      if (typeof t11 !== "number")
        return t11.$mul();
      if (typeof t12 !== "number")
        return B.iae(t12);
      t13 = t2.$index(t1, 5);
      t14 = argStorage[1];
      if (typeof t13 !== "number")
        return t13.$mul();
      if (typeof t14 !== "number")
        return B.iae(t14);
      t15 = t2.$index(t1, 9);
      t16 = argStorage[2];
      if (typeof t15 !== "number")
        return t15.$mul();
      if (typeof t16 !== "number")
        return B.iae(t16);
      t17 = t2.$index(t1, 13);
      t18 = argStorage[3];
      if (typeof t17 !== "number")
        return t17.$mul();
      if (typeof t18 !== "number")
        return B.iae(t18);
      t19 = t2.$index(t1, 2);
      t20 = argStorage[0];
      if (typeof t19 !== "number")
        return t19.$mul();
      if (typeof t20 !== "number")
        return B.iae(t20);
      t21 = t2.$index(t1, 6);
      t22 = argStorage[1];
      if (typeof t21 !== "number")
        return t21.$mul();
      if (typeof t22 !== "number")
        return B.iae(t22);
      t23 = t2.$index(t1, 10);
      t24 = argStorage[2];
      if (typeof t23 !== "number")
        return t23.$mul();
      if (typeof t24 !== "number")
        return B.iae(t24);
      t25 = t2.$index(t1, 14);
      t26 = argStorage[3];
      if (typeof t25 !== "number")
        return t25.$mul();
      if (typeof t26 !== "number")
        return B.iae(t26);
      t27 = t2.$index(t1, 3);
      t28 = argStorage[0];
      if (typeof t27 !== "number")
        return t27.$mul();
      if (typeof t28 !== "number")
        return B.iae(t28);
      t29 = t2.$index(t1, 7);
      t30 = argStorage[1];
      if (typeof t29 !== "number")
        return t29.$mul();
      if (typeof t30 !== "number")
        return B.iae(t30);
      t31 = t2.$index(t1, 11);
      t32 = argStorage[2];
      if (typeof t31 !== "number")
        return t31.$mul();
      if (typeof t32 !== "number")
        return B.iae(t32);
      t1 = t2.$index(t1, 15);
      t2 = argStorage[3];
      if (typeof t1 !== "number")
        return t1.$mul();
      if (typeof t2 !== "number")
        return B.iae(t2);
      argStorage[0] = t3 * t5 + t6 * t7 + t8 * t9 + t10 * t4;
      argStorage[1] = t11 * t12 + t13 * t14 + t15 * t16 + t17 * t18;
      argStorage[2] = t19 * t20 + t21 * t22 + t23 * t24 + t25 * t26;
      argStorage[3] = t27 * t28 + t29 * t30 + t31 * t32 + t1 * t2;
      return arg;
    },
    perspectiveTransform$1(arg) {
      var argStorage, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, w_;
      type$.Vector3._as(arg);
      argStorage = arg._v3storage;
      t1 = this._vector_math_64$_m4storage;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.$index(t1, 0);
      t4 = argStorage.length;
      if (0 >= t4)
        return B.ioore(argStorage, 0);
      t5 = argStorage[0];
      if (typeof t3 !== "number")
        return t3.$mul();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t6 = t2.$index(t1, 4);
      if (1 >= t4)
        return B.ioore(argStorage, 1);
      t7 = argStorage[1];
      if (typeof t6 !== "number")
        return t6.$mul();
      if (typeof t7 !== "number")
        return B.iae(t7);
      t8 = t2.$index(t1, 8);
      if (2 >= t4)
        return B.ioore(argStorage, 2);
      t4 = argStorage[2];
      if (typeof t8 !== "number")
        return t8.$mul();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t9 = t2.$index(t1, 12);
      if (typeof t9 !== "number")
        return B.iae(t9);
      t10 = t2.$index(t1, 1);
      t11 = argStorage[0];
      if (typeof t10 !== "number")
        return t10.$mul();
      if (typeof t11 !== "number")
        return B.iae(t11);
      t12 = t2.$index(t1, 5);
      t13 = argStorage[1];
      if (typeof t12 !== "number")
        return t12.$mul();
      if (typeof t13 !== "number")
        return B.iae(t13);
      t14 = t2.$index(t1, 9);
      t15 = argStorage[2];
      if (typeof t14 !== "number")
        return t14.$mul();
      if (typeof t15 !== "number")
        return B.iae(t15);
      t16 = t2.$index(t1, 13);
      if (typeof t16 !== "number")
        return B.iae(t16);
      t17 = t2.$index(t1, 2);
      t18 = argStorage[0];
      if (typeof t17 !== "number")
        return t17.$mul();
      if (typeof t18 !== "number")
        return B.iae(t18);
      t19 = t2.$index(t1, 6);
      t20 = argStorage[1];
      if (typeof t19 !== "number")
        return t19.$mul();
      if (typeof t20 !== "number")
        return B.iae(t20);
      t21 = t2.$index(t1, 10);
      t22 = argStorage[2];
      if (typeof t21 !== "number")
        return t21.$mul();
      if (typeof t22 !== "number")
        return B.iae(t22);
      t23 = t2.$index(t1, 14);
      if (typeof t23 !== "number")
        return B.iae(t23);
      t24 = t2.$index(t1, 3);
      t25 = argStorage[0];
      if (typeof t24 !== "number")
        return t24.$mul();
      if (typeof t25 !== "number")
        return B.iae(t25);
      t26 = t2.$index(t1, 7);
      t27 = argStorage[1];
      if (typeof t26 !== "number")
        return t26.$mul();
      if (typeof t27 !== "number")
        return B.iae(t27);
      t28 = t2.$index(t1, 11);
      t29 = argStorage[2];
      if (typeof t28 !== "number")
        return t28.$mul();
      if (typeof t29 !== "number")
        return B.iae(t29);
      t1 = t2.$index(t1, 15);
      if (typeof t1 !== "number")
        return B.iae(t1);
      w_ = 1 / (t24 * t25 + t26 * t27 + t28 * t29 + t1);
      argStorage[0] = (t3 * t5 + t6 * t7 + t8 * t4 + t9) * w_;
      argStorage[1] = (t10 * t11 + t12 * t13 + t14 * t15 + t16) * w_;
      argStorage[2] = (t17 * t18 + t19 * t20 + t21 * t22 + t23) * w_;
      return arg;
    },
    transformed$1(arg) {
      var out = A.Vector4_Vector4$copy(type$.Vector4._as(arg));
      return this.transform$1(out);
    },
    isZero$0() {
      var t1 = this._vector_math_64$_m4storage,
        t2 = J.getInterceptor$asx(t1);
      return B.boolConversionCheck(J.$eq$(t2.$index(t1, 0), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 1), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 2), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 3), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 4), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 5), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 6), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 7), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 8), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 9), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 10), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 11), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 12), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 13), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 14), 0)) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 15), 0));
    }
  };
  A.Vector3.prototype = {
    get$storage() {
      return this._v3storage;
    },
    setValues$3(x, y, z) {
      var t1, t2;
      B._asDouble(x);
      B._asDouble(y);
      B._asDouble(z);
      t1 = this._v3storage;
      t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, 0, x);
      t2.$indexSet(t1, 1, y);
      t2.$indexSet(t1, 2, z);
    },
    setFrom$1(other) {
      var t3,
        otherStorage = type$.Vector3._as(other)._v3storage,
        t1 = this._v3storage,
        t2 = otherStorage.length;
      if (0 >= t2)
        return B.ioore(otherStorage, 0);
      t3 = J.getInterceptor$ax(t1);
      t3.$indexSet(t1, 0, otherStorage[0]);
      if (1 >= t2)
        return B.ioore(otherStorage, 1);
      t3.$indexSet(t1, 1, otherStorage[1]);
      if (2 >= t2)
        return B.ioore(otherStorage, 2);
      t3.$indexSet(t1, 2, otherStorage[2]);
    },
    toString$0(_) {
      return "[" + B.S(J.$index$asx(this.get$storage(), 0)) + "," + B.S(J.$index$asx(this.get$storage(), 1)) + "," + B.S(J.$index$asx(this.get$storage(), 2)) + "]";
    },
    $eq(_, other) {
      var t1, t2, t3, t4, t5;
      if (other == null)
        return false;
      if (other instanceof A.Vector3) {
        t1 = this._v3storage;
        t2 = J.getInterceptor$asx(t1);
        t3 = t2.$index(t1, 0);
        t4 = other._v3storage;
        t5 = J.getInterceptor$asx(t4);
        t1 = B.boolConversionCheck(J.$eq$(t3, t5.$index(t4, 0))) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 1), t5.$index(t4, 1))) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 2), t5.$index(t4, 2)));
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return B.Object_hashAll(this._v3storage);
    },
    $sub(_, other) {
      var t1;
      type$.Vector3._as(other);
      t1 = this.clone$0();
      t1.sub$1(other);
      return t1;
    },
    $add(_, other) {
      var t1;
      type$.Vector3._as(other);
      t1 = this.clone$0();
      J.add$1$ax(t1, other);
      return t1;
    },
    $mul(_, scale) {
      return this.scaled$1(B._asDouble(scale));
    },
    get$length(_) {
      return A.sqrt(this.get$length2());
    },
    get$length2() {
      var t5, t6, t7,
        t1 = this._v3storage,
        t2 = J.getInterceptor$asx(t1),
        t3 = t2.$index(t1, 0),
        t4 = t2.$index(t1, 0);
      if (typeof t3 !== "number")
        return t3.$mul();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t5 = t2.$index(t1, 1);
      t6 = t2.$index(t1, 1);
      if (typeof t5 !== "number")
        return t5.$mul();
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = t2.$index(t1, 2);
      t1 = t2.$index(t1, 2);
      if (typeof t7 !== "number")
        return t7.$mul();
      if (typeof t1 !== "number")
        return B.iae(t1);
      return t3 * t4 + t5 * t6 + t7 * t1;
    },
    dot$1(other) {
      var t5, t6, t7,
        otherStorage = type$.Vector3._as(other)._v3storage,
        t1 = this._v3storage,
        t2 = J.getInterceptor$asx(t1),
        t3 = t2.$index(t1, 0),
        t4 = otherStorage.length;
      if (0 >= t4)
        return B.ioore(otherStorage, 0);
      t5 = otherStorage[0];
      if (typeof t3 !== "number")
        return t3.$mul();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t6 = t2.$index(t1, 1);
      if (1 >= t4)
        return B.ioore(otherStorage, 1);
      t7 = otherStorage[1];
      if (typeof t6 !== "number")
        return t6.$mul();
      if (typeof t7 !== "number")
        return B.iae(t7);
      t1 = t2.$index(t1, 2);
      if (2 >= t4)
        return B.ioore(otherStorage, 2);
      t4 = otherStorage[2];
      if (typeof t1 !== "number")
        return t1.$mul();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return t3 * t5 + t6 * t7 + t1 * t4;
    },
    add$1(_, arg) {
      var t5,
        argStorage = type$.Vector3._as(arg)._v3storage,
        t1 = this._v3storage,
        t2 = J.getInterceptor$asx(t1),
        t3 = t2.$index(t1, 0),
        t4 = argStorage.length;
      if (0 >= t4)
        return B.ioore(argStorage, 0);
      t5 = argStorage[0];
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 0, t3 + t5);
      t5 = t2.$index(t1, 1);
      if (1 >= t4)
        return B.ioore(argStorage, 1);
      t3 = argStorage[1];
      if (typeof t5 !== "number")
        return t5.$add();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 1, t5 + t3);
      t3 = t2.$index(t1, 2);
      if (2 >= t4)
        return B.ioore(argStorage, 2);
      t4 = argStorage[2];
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t2.$indexSet(t1, 2, t3 + t4);
    },
    sub$1(arg) {
      var t5,
        argStorage = type$.Vector3._as(arg)._v3storage,
        t1 = this._v3storage,
        t2 = J.getInterceptor$asx(t1),
        t3 = t2.$index(t1, 0),
        t4 = argStorage.length;
      if (0 >= t4)
        return B.ioore(argStorage, 0);
      t5 = argStorage[0];
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 0, t3 - t5);
      t5 = t2.$index(t1, 1);
      if (1 >= t4)
        return B.ioore(argStorage, 1);
      t3 = argStorage[1];
      if (typeof t5 !== "number")
        return t5.$sub();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 1, t5 - t3);
      t3 = t2.$index(t1, 2);
      if (2 >= t4)
        return B.ioore(argStorage, 2);
      t4 = argStorage[2];
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t2.$indexSet(t1, 2, t3 - t4);
    },
    scale$1(arg) {
      var t1, t2, t3;
      B._asDouble(arg);
      t1 = this._v3storage;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.$index(t1, 2);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 2, t3 * arg);
      t3 = t2.$index(t1, 1);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 1, t3 * arg);
      t3 = t2.$index(t1, 0);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 0, t3 * arg);
    },
    scaled$1(arg) {
      var t1;
      B._asDouble(arg);
      t1 = this.clone$0();
      t1.scale$1(arg);
      return t1;
    },
    clone$0() {
      return A.Vector3_Vector3$copy(this);
    },
    get$x() {
      return J.$index$asx(this._v3storage, 0);
    },
    get$y() {
      return J.$index$asx(this._v3storage, 1);
    },
    get$z() {
      return J.$index$asx(this._v3storage, 2);
    },
    $isVector: 1
  };
  A.Vector4.prototype = {
    setValues$4(x_, y_, z_, w_) {
      var t1, t2;
      B._asDouble(x_);
      B._asDouble(y_);
      B._asDouble(z_);
      t1 = this._v4storage;
      t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, 3, B._asDouble(w_));
      t2.$indexSet(t1, 2, z_);
      t2.$indexSet(t1, 1, y_);
      t2.$indexSet(t1, 0, x_);
    },
    setFrom$1(other) {
      var t2,
        otherStorage = type$.Vector4._as(other)._v4storage,
        t1 = this._v4storage;
      if (3 >= otherStorage.length)
        return B.ioore(otherStorage, 3);
      t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, 3, otherStorage[3]);
      t2.$indexSet(t1, 2, otherStorage[2]);
      t2.$indexSet(t1, 1, otherStorage[1]);
      t2.$indexSet(t1, 0, otherStorage[0]);
    },
    toString$0(_) {
      var t1 = this._v4storage,
        t2 = J.getInterceptor$asx(t1);
      return B.S(t2.$index(t1, 0)) + "," + B.S(t2.$index(t1, 1)) + "," + B.S(t2.$index(t1, 2)) + "," + B.S(t2.$index(t1, 3));
    },
    $eq(_, other) {
      var t1, t2, t3, t4, t5;
      if (other == null)
        return false;
      if (other instanceof A.Vector4) {
        t1 = this._v4storage;
        t2 = J.getInterceptor$asx(t1);
        t3 = t2.$index(t1, 0);
        t4 = other._v4storage;
        t5 = J.getInterceptor$asx(t4);
        t1 = B.boolConversionCheck(J.$eq$(t3, t5.$index(t4, 0))) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 1), t5.$index(t4, 1))) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 2), t5.$index(t4, 2))) && B.boolConversionCheck(J.$eq$(t2.$index(t1, 3), t5.$index(t4, 3)));
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return B.Object_hashAll(this._v4storage);
    },
    $sub(_, other) {
      var t1;
      type$.Vector4._as(other);
      t1 = this.clone$0();
      t1.sub$1(other);
      return t1;
    },
    $add(_, other) {
      var t1;
      type$.Vector4._as(other);
      t1 = this.clone$0();
      J.add$1$ax(t1, other);
      return t1;
    },
    $mul(_, scale) {
      var t1;
      B._asDouble(scale);
      t1 = this.clone$0();
      t1.scale$1(scale);
      return t1;
    },
    get$length(_) {
      return A.sqrt(this.get$length2());
    },
    get$length2() {
      var t5, t6, t7, t8, t9,
        t1 = this._v4storage,
        t2 = J.getInterceptor$asx(t1),
        t3 = t2.$index(t1, 0),
        t4 = t2.$index(t1, 0);
      if (typeof t3 !== "number")
        return t3.$mul();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t5 = t2.$index(t1, 1);
      t6 = t2.$index(t1, 1);
      if (typeof t5 !== "number")
        return t5.$mul();
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = t2.$index(t1, 2);
      t8 = t2.$index(t1, 2);
      if (typeof t7 !== "number")
        return t7.$mul();
      if (typeof t8 !== "number")
        return B.iae(t8);
      t9 = t2.$index(t1, 3);
      t1 = t2.$index(t1, 3);
      if (typeof t9 !== "number")
        return t9.$mul();
      if (typeof t1 !== "number")
        return B.iae(t1);
      return t3 * t4 + t5 * t6 + t7 * t8 + t9 * t1;
    },
    add$1(_, arg) {
      var t5,
        argStorage = type$.Vector4._as(arg)._v4storage,
        t1 = this._v4storage,
        t2 = J.getInterceptor$asx(t1),
        t3 = t2.$index(t1, 0),
        t4 = argStorage.length;
      if (0 >= t4)
        return B.ioore(argStorage, 0);
      t5 = argStorage[0];
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 0, t3 + t5);
      t5 = t2.$index(t1, 1);
      if (1 >= t4)
        return B.ioore(argStorage, 1);
      t3 = argStorage[1];
      if (typeof t5 !== "number")
        return t5.$add();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 1, t5 + t3);
      t3 = t2.$index(t1, 2);
      if (2 >= t4)
        return B.ioore(argStorage, 2);
      t5 = argStorage[2];
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 2, t3 + t5);
      t5 = t2.$index(t1, 3);
      if (3 >= t4)
        return B.ioore(argStorage, 3);
      t4 = argStorage[3];
      if (typeof t5 !== "number")
        return t5.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t2.$indexSet(t1, 3, t5 + t4);
    },
    sub$1(arg) {
      var t5,
        argStorage = type$.Vector4._as(arg)._v4storage,
        t1 = this._v4storage,
        t2 = J.getInterceptor$asx(t1),
        t3 = t2.$index(t1, 0),
        t4 = argStorage.length;
      if (0 >= t4)
        return B.ioore(argStorage, 0);
      t5 = argStorage[0];
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 0, t3 - t5);
      t5 = t2.$index(t1, 1);
      if (1 >= t4)
        return B.ioore(argStorage, 1);
      t3 = argStorage[1];
      if (typeof t5 !== "number")
        return t5.$sub();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t2.$indexSet(t1, 1, t5 - t3);
      t3 = t2.$index(t1, 2);
      if (2 >= t4)
        return B.ioore(argStorage, 2);
      t5 = argStorage[2];
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t2.$indexSet(t1, 2, t3 - t5);
      t5 = t2.$index(t1, 3);
      if (3 >= t4)
        return B.ioore(argStorage, 3);
      t4 = argStorage[3];
      if (typeof t5 !== "number")
        return t5.$sub();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t2.$indexSet(t1, 3, t5 - t4);
    },
    scale$1(arg) {
      var t1, t2, t3;
      B._asDouble(arg);
      t1 = this._v4storage;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.$index(t1, 0);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 0, t3 * arg);
      t3 = t2.$index(t1, 1);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 1, t3 * arg);
      t3 = t2.$index(t1, 2);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 2, t3 * arg);
      t3 = t2.$index(t1, 3);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2.$indexSet(t1, 3, t3 * arg);
    },
    clone$0() {
      return A.Vector4_Vector4$copy(this);
    },
    get$x() {
      return J.$index$asx(this._v4storage, 0);
    },
    get$y() {
      return J.$index$asx(this._v4storage, 1);
    },
    get$z() {
      return J.$index$asx(this._v4storage, 2);
    },
    get$w() {
      return J.$index$asx(this._v4storage, 3);
    },
    $isVector: 1
  };
  var typesOffset = hunkHelpers.updateTypes(["~()", "~(JavaScriptObject)", "bool(FocusNode)", "bool(NotoFont)", "~(Element0)", "int(FocusNode,FocusNode)", "~(RenderObject)", "List<DiagnosticsNode>()", "~(int)", "~(bool)", "~(@)", "~(~())", "bool(Element0)", "bool(SemanticsObject)", "~(GestureMode)", "bool(Object?)", "~(Object?)", "_Channel()", "~(DiagnosticsNode)", "bool(~(ObjectEvent)?)", "double?(+(BoxConstraints,TextBaseline))", "_InterestingSemanticsFragment(SemanticsConfiguration)", "~(SemanticsNode)", "List<SemanticsNode>(_SemanticsSortGroup)", "int(_ReadingOrderSortData,_ReadingOrderSortData)", "HotRestartCacheHandler?()", "_PointerDeviceState()", "~(Surface)", "Surface()", "DateTime()", "EngineLineMetrics(ParagraphLine)", "Future<+(String,FontLoadError?)>()", "~(ParagraphLine)", "~(LayoutFragment)", "~(TextHeightStyle,TextHeightRuler)", "~(LineBreakType,int)", "~(EditingState?,TextEditingDeltaState?)", "JavaScriptObject?(int)", "~(CkCanvas)", "~(Size?)", "OffscreenCanvasViewRasterizer()", "RenderCanvas()", "~(ByteData?)", "~(CkPicture)", "~({allowPlatformDefault!bool})", "bool(DiagnosticsNode?)", "bool(StackFrame)", "ErrorDescription(String)", "String(DiagnosticsNode)", "CkCanvas(CkPictureRecorder)", "~(NotoFont)", "Future<~>()", "bool(DiagnosticsNode)", "SurfaceScene()", "Size()", "Size(BoxConstraints)", "bool(Color)", "int(_PersistedSurfaceMatch,_PersistedSurfaceMatch)", "~(List<_InterestingSemanticsFragment>{isMergeUp:bool})", "~({curve:Curve,descendant:RenderObject?,duration:Duration,rect:Rect?})", "int(PaintRequest,PaintRequest)", "~(PaintingContext,Offset)", "~(TextSelection)", "~(String)", "~(RenderingRenderCanvas,int)", "bool(SemanticsNode)", "SemanticsNode(_TraversalSortNode)", "String(SemanticsTag)", "String(SemanticsAction)", "String?(CustomSemanticsAction)", "bool(SemanticsFlag)", "String(SemanticsFlag)", "DiagnosticsNode(SemanticsNode)", "~(ViewFocusEvent)", "int(SemanticsNode,SemanticsNode)", "int(SemanticsNode)", "~(FocusNode{alignment:double?,alignmentPolicy:ScrollPositionAlignmentPolicy?,curve:Curve?,duration:Duration?})", "~(SemanticsTag)", "~(SemanticsAction,~(Object?))", "int(_PlatformChannelStats,_PlatformChannelStats)", "~(AppLifecycleState)", "bool(InheritedElement)", "~([FocusNode?])", "RegisteredFont?(ByteBuffer,String,String)", "DiagnosticsNode(FocusNode)", "String(FocusNode)", "~(_FocusTraversalGroupInfo)", "bool(_DirectionalPolicyDataEntry)", "MultiSurfaceViewRasterizer()", "bool(TraversalDirection)", "Set<Directionality>(_ReadingOrderSortData)", "~(JavaScriptObject,List<PointerData>)", "List<Directionality>(BuildContext)", "Rect(_ReadingOrderSortData)", "int(_ReadingOrderDirectionalGroupData,_ReadingOrderDirectionalGroupData)", "String(_ReadingOrderSortData)", "List<_ReadingOrderSortData>(_ReadingOrderSortData,Iterable<_ReadingOrderSortData>)", "bool(_ReadingOrderSortData)", "_ButtonSanitizer()", "Element0?(Element0)", "Object?(int,Element0?)", "int(InheritedElement,InheritedElement)", "DiagnosticsNode(InheritedElement)", "String(String,String)", "JavaScriptObject(int{params:Object?})", "int()", "~(Object,StackTrace)", "String(String)", "List<String>()", "List<String>(String,List<String>)", "~(FlutterErrorDetails{forceReport:bool})", "Iterable<String>(Iterable<String>)", "DiagnosticsNode(String)", "~(String?{wrapWidth:int?})", "StackFrame?(String)", "SemanticsNode(int)"]);
  A._canvasKitJsUrls_closure.prototype = {
    call$1(filename) {
      B._asString(filename);
      return B.S(A._canvasKitBaseUrl()) + filename;
    },
    $signature: 19
  };
  A.HtmlViewEmbedder_getOverlayCanvases_closure.prototype = {
    call$1(r) {
      var t1 = type$.CkPictureRecorder._as(r).get$recordingCanvas();
      t1.toString;
      return t1;
    },
    $signature: typesOffset + 49
  };
  A.HtmlViewEmbedder__updateDomForNewRendering_closure.prototype = {
    call$1(index) {
      return B._asInt(index) !== -1;
    },
    $signature: 58
  };
  A.HtmlViewEmbedder__updateDomForNewRendering_updateRenderCanvasWithDisplay.prototype = {
    call$2(renderCanvas, index) {
      var t2, t3, t4,
        t1 = type$.RenderingRenderCanvas;
      t1._as(renderCanvas);
      B._asInt(index);
      t2 = this.indexMap;
      t3 = J.getInterceptor$asx(t2);
      t4 = this.$this;
      if (!B.boolConversionCheck(J.$eq$(t3.$index(t2, index), -1))) {
        t1 = t1._as(J.$index$asx(t4._activeRendering.entities, t3.$index(t2, index)));
        renderCanvas.set$displayCanvas(t1.displayCanvas);
        t1.displayCanvas = null;
      } else
        renderCanvas.set$displayCanvas(t4.rasterizer.getOverlay$0());
    },
    $signature: typesOffset + 64
  };
  A.SkiaFontCollection__registerWithFontProvider_closure.prototype = {
    call$0() {
      return B._setArrayType([], type$.JSArray_JavaScriptObject);
    },
    $signature: 65
  };
  A.SkiaFontCollection__registerWithFontProvider_closure0.prototype = {
    call$0() {
      return B._setArrayType([], type$.JSArray_JavaScriptObject);
    },
    $signature: 65
  };
  A.SkiaFontCollection_registerDownloadedFonts_makeRegisterFont.prototype = {
    call$3(buffer, url, family) {
      var bytes, typeface;
      type$.ByteBuffer._as(buffer);
      B._asString(url);
      B._asString(family);
      bytes = D.NativeByteBuffer_methods.asUint8List$0(buffer);
      typeface = A.SkTypefaceFactoryExtension_MakeFreeTypeFaceFromData(B.getProperty(A.canvasKit(), "Typeface", type$.JavaScriptObject), D.NativeUint8List_methods.get$buffer(bytes));
      if (typeface != null)
        return A.RegisteredFont$(bytes, family, typeface);
      else {
        $.$get$printWarning().call$1("Failed to load font " + family + " at " + url);
        $.$get$printWarning().call$1("Verify that " + url + " contains a valid font.");
        return null;
      }
    },
    $signature: typesOffset + 83
  };
  A.Frame_raster_closure.prototype = {
    call$0() {
      this.layerTree.preroll$2$ignoreRasterCache(this.$this, this.ignoreRasterCache);
    },
    $signature: 0
  };
  A.Frame_raster_closure0.prototype = {
    call$0() {
      this.layerTree.paint$2$ignoreRasterCache(this.$this, this.ignoreRasterCache);
    },
    $signature: 0
  };
  A.MultiSurfaceRasterizer_createViewRasterizer_closure.prototype = {
    call$0() {
      return A.MultiSurfaceViewRasterizer$(this.view, this.$this);
    },
    $signature: typesOffset + 88
  };
  A.MultiSurfaceRasterizer_setResourceCacheMaxBytes_closure.prototype = {
    call$1(surface) {
      type$.Surface._as(surface).setSkiaResourceCacheMaxBytes$1(this.bytes);
    },
    $signature: typesOffset + 27
  };
  A.MultiSurfaceViewRasterizer_displayFactory_closure.prototype = {
    call$0() {
      return A.Surface$(true);
    },
    $signature: typesOffset + 28
  };
  A._finalizationRegistry_closure.prototype = {
    call$1(boxedUniq) {
      type$.UniqueRef_Object._as(A.ExternalDartReferenceToObject_get_toDartObject(boxedUniq, type$.nullable_Object)).collect$0();
    },
    $signature: 50
  };
  A.OffscreenCanvasRasterizer_createViewRasterizer_closure.prototype = {
    call$0() {
      return A.OffscreenCanvasViewRasterizer$(this.view, this.$this);
    },
    $signature: typesOffset + 40
  };
  A.OffscreenCanvasViewRasterizer_displayFactory_closure.prototype = {
    call$0() {
      return A.RenderCanvas$();
    },
    $signature: typesOffset + 41
  };
  A.CanvasKitRenderer_initialize_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, viewManager, t2, $async$temp1;
      var $async$call$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = self.window.flutterCanvasKit != null ? 2 : 4;
              break;
            case 2:
              // then
              t1 = self.window.flutterCanvasKit;
              t1.toString;
              A.canvasKit0(t1);
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = self.window.flutterCanvasKitLoaded != null ? 5 : 7;
              break;
            case 5:
              // then
              t1 = self.window.flutterCanvasKitLoaded;
              t1.toString;
              $async$temp1 = A;
              $async$goto = 8;
              return B._asyncAwait(A.promiseToFuture0(t1, type$.JavaScriptObject), $async$call$0);
            case 8:
              // returning from await.
              $async$temp1.canvasKit0($async$result);
              // goto join
              $async$goto = 6;
              break;
            case 7:
              // else
              $async$temp1 = A;
              $async$goto = 9;
              return B._asyncAwait(A.downloadCanvasKit(), $async$call$0);
            case 9:
              // returning from await.
              $async$temp1.canvasKit0($async$result);
              self.window.flutterCanvasKit = A.canvasKit();
            case 6:
              // join
            case 3:
              // join
              viewManager = A.EnginePlatformDispatcher_instance().get$viewManager();
              t1 = $async$self.$this;
              if (t1._onViewCreatedListener == null)
                for (t2 = J.get$iterator$ax(viewManager.get$views()); B.boolConversionCheck(t2.moveNext$0());)
                  t1._onViewCreated$1(t2.get$current().viewId);
              if (t1._onViewCreatedListener == null)
                t1.set$_onViewCreatedListener(viewManager.get$onViewCreated().listen$1(t1.get$_onViewCreated()));
              if (t1._onViewDisposedListener == null)
                t1.set$_onViewDisposedListener(viewManager.get$onViewDisposed().listen$1(t1.get$_onViewDisposed()));
              A.CanvasKitRenderer__instance(t1);
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 35
  };
  A.CkTextStyle_skTextStyle_closure.prototype = {
    call$0() {
      var decorationValue, t3, ckShadows, ckShadow, skFontFeatures, skFontFeature, skFontVariations, skFontVariation,
        t1 = this.$this,
        color = t1.color,
        decoration = t1.decoration,
        decorationColor = t1.decorationColor,
        decorationStyle = t1.decorationStyle,
        decorationThickness = t1.decorationThickness,
        fontWeight = t1.fontWeight,
        fontStyle = t1.fontStyle,
        textBaseline = t1.textBaseline,
        fontSize = t1.fontSize,
        letterSpacing = t1.letterSpacing,
        wordSpacing = t1.wordSpacing,
        height = t1.height,
        locale = t1.locale,
        background = t1.background,
        foreground = t1.foreground,
        shadows = t1.shadows,
        fontFeatures = t1.fontFeatures,
        fontVariations = t1.fontVariations,
        t2 = type$.JavaScriptObject,
        properties = t2._as({});
      if (background != null)
        A.SkTextStylePropertiesExtension_set_backgroundColor(properties, A.makeFreshSkColor(background.get$color()));
      if (color != null)
        A.SkTextStylePropertiesExtension_set_color(properties, A.makeFreshSkColor(color));
      if (decoration != null) {
        decorationValue = J.toInt$0$n(A.CanvasKitExtension_get_NoDecoration(A.canvasKit()));
        if (B.boolConversionCheck(decoration.contains$1(0, C.TextDecoration_1))) {
          t3 = J.toInt$0$n(A.CanvasKitExtension_get_UnderlineDecoration(A.canvasKit()));
          if (typeof t3 !== "number")
            return B.iae(t3);
          decorationValue = (decorationValue | t3) >>> 0;
        }
        if (B.boolConversionCheck(decoration.contains$1(0, C.TextDecoration_2))) {
          t3 = J.toInt$0$n(A.CanvasKitExtension_get_OverlineDecoration(A.canvasKit()));
          if (typeof t3 !== "number")
            return B.iae(t3);
          decorationValue = (decorationValue | t3) >>> 0;
        }
        if (B.boolConversionCheck(decoration.contains$1(0, C.TextDecoration_4))) {
          t3 = J.toInt$0$n(A.CanvasKitExtension_get_LineThroughDecoration(A.canvasKit()));
          if (typeof t3 !== "number")
            return B.iae(t3);
          decorationValue = (decorationValue | t3) >>> 0;
        }
        A.SkTextStylePropertiesExtension_set_decoration(properties, decorationValue);
      }
      if (decorationThickness != null)
        A.SkTextStylePropertiesExtension_set_decorationThickness(properties, decorationThickness);
      if (decorationColor != null)
        A.SkTextStylePropertiesExtension_set_decorationColor(properties, A.makeFreshSkColor(decorationColor));
      if (decorationStyle != null)
        B._setPropertyUnchecked(properties, "decorationStyle", A.toSkTextDecorationStyle(decorationStyle), t2);
      if (textBaseline != null)
        B._setPropertyUnchecked(properties, "textBaseline", A.toSkTextBaseline(textBaseline), t2);
      if (fontSize != null)
        A.SkTextStylePropertiesExtension_set_fontSize(properties, fontSize);
      if (letterSpacing != null)
        A.SkTextStylePropertiesExtension_set_letterSpacing(properties, letterSpacing);
      if (wordSpacing != null)
        A.SkTextStylePropertiesExtension_set_wordSpacing(properties, wordSpacing);
      if (height != null)
        A.SkTextStylePropertiesExtension_set_heightMultiplier(properties, height);
      switch (t1.leadingDistribution) {
        case null:
        case void 0:
          break;
        case C.TextLeadingDistribution_1:
          A.SkTextStylePropertiesExtension_set_halfLeading(properties, true);
          break;
        case C.TextLeadingDistribution_0:
          A.SkTextStylePropertiesExtension_set_halfLeading(properties, false);
          break;
      }
      if (locale != null)
        A.SkTextStylePropertiesExtension_set_locale(properties, locale.toLanguageTag$0());
      A.SkTextStylePropertiesExtension_set_fontFamilies(properties, t1.get$combinedFontFamilies());
      if (fontWeight != null || fontStyle != null)
        B._setPropertyUnchecked(properties, "fontStyle", A.toSkFontStyle(fontWeight, fontStyle), t2);
      if (foreground != null)
        A.SkTextStylePropertiesExtension_set_foregroundColor(properties, A.makeFreshSkColor(foreground.get$color()));
      if (shadows != null) {
        ckShadows = B._setArrayType([], type$.JSArray_JavaScriptObject);
        for (t1 = J.get$iterator$ax(shadows); B.boolConversionCheck(t1.moveNext$0());) {
          t3 = t1.get$current();
          ckShadow = t2._as({});
          A.SkTextShadowExtension_set_color(ckShadow, A.makeFreshSkColor(t3.color));
          A.SkTextShadowExtension_set_offset(ckShadow, A.toSkPoint(t3.offset));
          A.SkTextShadowExtension_set_blurRadius(ckShadow, t3.blurRadius);
          D.JSArray_methods.add$1(ckShadows, ckShadow);
        }
        A.SkTextStylePropertiesExtension_set_shadows(properties, ckShadows);
      }
      if (fontFeatures != null) {
        skFontFeatures = B._setArrayType([], type$.JSArray_JavaScriptObject);
        for (t1 = J.get$iterator$ax(fontFeatures); B.boolConversionCheck(t1.moveNext$0());) {
          t3 = t1.get$current();
          skFontFeature = t2._as({});
          A.SkFontFeatureExtension_set_name(skFontFeature, t3.get$feature());
          A.SkFontFeatureExtension_set_value(skFontFeature, t3.get$value());
          D.JSArray_methods.add$1(skFontFeatures, skFontFeature);
        }
        A.SkTextStylePropertiesExtension_set_fontFeatures(properties, skFontFeatures);
      }
      if (fontVariations != null) {
        skFontVariations = B._setArrayType([], type$.JSArray_JavaScriptObject);
        for (t1 = J.get$iterator$ax(fontVariations); B.boolConversionCheck(t1.moveNext$0());) {
          t3 = t1.get$current();
          skFontVariation = t2._as({});
          A.SkFontVariationExtension_set_axis(skFontVariation, t3.axis);
          A.SkFontVariationExtension_set_value(skFontVariation, t3.value);
          D.JSArray_methods.add$1(skFontVariations, skFontVariation);
        }
        A.SkTextStylePropertiesExtension_set_fontVariations(properties, skFontVariations);
      }
      return B._callMethodUnchecked1(A.canvasKit(), "TextStyle", properties, t2);
    },
    $signature: 25
  };
  A._computeCombinedFontFamilies_closure.prototype = {
    call$1(font) {
      return J.$eq$(this.fontFamily, B._asString(font));
    },
    $signature: 12
  };
  A.ClipboardMessageHandler_setDataMethodCall_closure.prototype = {
    call$1(success) {
      var t1 = this.callback;
      if (B._asBool(success)) {
        t1.toString;
        t1.call$1(C.C_JSONMethodCodec.encodeSuccessEnvelope$1(true));
      } else {
        t1.toString;
        t1.call$1(C.C_JSONMethodCodec.encodeErrorEnvelope$2$code$message("copy_fail", "Clipboard.setData failed"));
        this._box_0.errorEnvelopeEncoded = true;
      }
    },
    $signature: 26
  };
  A.ClipboardMessageHandler_setDataMethodCall_closure0.prototype = {
    call$1(_) {
      var t1;
      if (!B.boolConversionCheck(this._box_0.errorEnvelopeEncoded)) {
        t1 = this.callback;
        t1.toString;
        t1.call$1(C.C_JSONMethodCodec.encodeErrorEnvelope$2$code$message("copy_fail", "Clipboard.setData failed"));
      }
    },
    $signature: 2
  };
  A.ClipboardMessageHandler_getDataMethodCall_closure.prototype = {
    call$1(data) {
      var map = B.LinkedHashMap_LinkedHashMap$_literal(["text", B._asString(data)], type$.String, type$.dynamic),
        t1 = this.callback;
      t1.toString;
      t1.call$1(C.C_JSONMethodCodec.encodeSuccessEnvelope$1(map));
    },
    $signature: 61
  };
  A.ClipboardMessageHandler_getDataMethodCall_closure0.prototype = {
    call$1(error) {
      if (error instanceof B.UnimplementedError) {
        A.Future_Future$delayed(D.Duration_0, null, type$.void).then$1$1(new A.ClipboardMessageHandler_getDataMethodCall__closure(this.callback), type$.Null);
        return;
      }
      this.$this._reportGetDataFailure$3(this.callback, C.C_JSONMethodCodec, error);
    },
    $signature: 2
  };
  A.ClipboardMessageHandler_getDataMethodCall__closure.prototype = {
    call$1(_) {
      var t1 = this.callback;
      if (t1 != null)
        t1.call$1(null);
    },
    $signature: 4
  };
  A.ClipboardMessageHandler_hasStringsMethodCall_closure.prototype = {
    call$1(data) {
      var map = B.LinkedHashMap_LinkedHashMap$_literal(["value", D.JSString_methods.get$isNotEmpty(B._asString(data))], type$.String, type$.dynamic),
        t1 = this.callback;
      t1.toString;
      t1.call$1(C.C_JSONMethodCodec.encodeSuccessEnvelope$1(map));
    },
    $signature: 61
  };
  A.ClipboardMessageHandler_hasStringsMethodCall_closure0.prototype = {
    call$1(error) {
      var map, t1;
      if (error instanceof B.UnimplementedError) {
        A.Future_Future$delayed(D.Duration_0, null, type$.void).then$1$1(new A.ClipboardMessageHandler_hasStringsMethodCall__closure(this.callback), type$.Null);
        return;
      }
      map = B.LinkedHashMap_LinkedHashMap$_literal(["value", false], type$.String, type$.dynamic);
      t1 = this.callback;
      t1.toString;
      t1.call$1(C.C_JSONMethodCodec.encodeSuccessEnvelope$1(map));
    },
    $signature: 2
  };
  A.ClipboardMessageHandler_hasStringsMethodCall__closure.prototype = {
    call$1(_) {
      var t1 = this.callback;
      if (t1 != null)
        t1.call$1(null);
    },
    $signature: 4
  };
  A.DomConsoleExtension_get_warn_closure.prototype = {
    call$1(arg) {
      return A.DomConsoleExtension_warn(this._this, arg);
    },
    $signature: 9
  };
  A.DomNavigatorExtension_get_languages_closure.prototype = {
    call$1(any) {
      any.toString;
      return A.JSStringToString_get_toDart(B._asString(any));
    },
    $signature: 52
  };
  A.createDomResizeObserver_closure.prototype = {
    call$2(entries, observer) {
      var t1;
      type$.JSArray_nullable_Object._as(entries);
      t1 = type$.JavaScriptObject;
      t1._as(observer);
      this.fn.call$2(J.cast$1$0$ax(A.JSArrayToList_get_toDart(entries, type$.nullable_Object), t1), observer);
    },
    $signature: 76
  };
  A._ttPolicy_closure.prototype = {
    call$1(url) {
      var uri;
      B._asString(url);
      uri = A.Uri_parse(A.JSStringToString_get_toDart(url));
      if (B.boolConversionCheck(C.Set_OhoY3.contains$1(0, J.get$last$ax(uri.get$pathSegments()))))
        return B.StringToJSString_get_toJS(uri.toString$0(0));
      A.DomConsoleExtension_error(B.getProperty(self.window, "console", type$.JavaScriptObject), "URL rejected by TrustedTypes policy flutter-engine: " + url + "(download prevented)");
      return null;
    },
    $signature: 69
  };
  A.sendFontChangeMessage_closure.prototype = {
    call$1(_) {
      B._asDouble(_);
      $._fontChangeScheduled = false;
      A.EnginePlatformDispatcher_instance().invokeOnPlatformMessage$3("flutter/system", $.$get$_fontChangeMessage(), new A.sendFontChangeMessage__closure());
    },
    $signature: 29
  };
  A.sendFontChangeMessage__closure.prototype = {
    call$1(_) {
      type$.nullable_ByteData._as(_);
    },
    $signature: 7
  };
  A.FontFallbackManager$__closure.prototype = {
    call$1(font) {
      return J.$eq$(type$.NotoFont._as(font).name, "Noto Sans SC");
    },
    $signature: typesOffset + 3
  };
  A.FontFallbackManager$__closure0.prototype = {
    call$1(font) {
      return J.$eq$(type$.NotoFont._as(font).name, "Noto Sans TC");
    },
    $signature: typesOffset + 3
  };
  A.FontFallbackManager$__closure1.prototype = {
    call$1(font) {
      return J.$eq$(type$.NotoFont._as(font).name, "Noto Sans HK");
    },
    $signature: typesOffset + 3
  };
  A.FontFallbackManager$__closure2.prototype = {
    call$1(font) {
      return J.$eq$(type$.NotoFont._as(font).name, "Noto Sans JP");
    },
    $signature: typesOffset + 3
  };
  A.FontFallbackManager$__closure3.prototype = {
    call$1(font) {
      return J.$eq$(type$.NotoFont._as(font).name, "Noto Sans KR");
    },
    $signature: typesOffset + 3
  };
  A.FontFallbackManager$__closure4.prototype = {
    call$1(font) {
      return J.$eq$(type$.NotoFont._as(font).name, "Noto Sans Symbols");
    },
    $signature: typesOffset + 3
  };
  A.FontFallbackManager_addMissingCodePoints_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$call$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t1._ensureFallbackFonts$0();
              t1._scheduledCodePointCheck = false;
              $async$goto = 2;
              return B._asyncAwait(t1.get$downloadQueue().waitForIdle$0(), $async$call$0);
            case 2:
              // returning from await.
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 8
  };
  A.FontFallbackManager_findFontsForMissingCodePoints_closure.prototype = {
    call$1(font) {
      return J.$eq$(type$.NotoFont._as(font).coverCount, 0);
    },
    $signature: typesOffset + 3
  };
  A.FontFallbackManager__selectFont_closure.prototype = {
    call$1(font) {
      var t1;
      type$.NotoFont._as(font);
      t1 = this.$this;
      return font === t1._notoSansSC || font === t1._notoSansTC || font === t1._notoSansHK || font === t1._notoSansJP || font === t1._notoSansKR;
    },
    $signature: typesOffset + 3
  };
  A.FallbackFontDownloadQueue_startDownloads_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, url, e, t1, t2, t3, t4, exception, $async$exception;
      var $async$call$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              t1 = $async$self.$this;
              t2 = B.S(t1.get$fallbackFontUrlPrefix());
              t3 = $async$self.font;
              t4 = t3.url;
              url = t2 + B.S(t4);
              $async$goto = 7;
              return B._asyncAwait(t1.fallbackManager.registry.loadFallbackFont$2(t3.name, url), $async$call$0);
            case 7:
              // returning from await.
              J.add$1$ax($async$self.downloadedFontFamilies, t4);
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              e = B.unwrapException($async$exception);
              t1 = $async$self.$this;
              t2 = t1.pendingFonts;
              t3 = $async$self.font;
              t4 = t3.url;
              J.remove$1$ax(t2, t4);
              $.$get$printWarning().call$1("Failed to load font " + B.S(t3.name) + " at " + B.S(t1.get$fallbackFontUrlPrefix()) + B.S(t4));
              $.$get$printWarning().call$1(J.toString$0$(e));
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              J.add$1$ax($async$self.$this.downloadedFonts, $async$self.font);
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return B._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return B._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 8
  };
  A.PersistedPicture__applyBitmapPaint_closure.prototype = {
    call$0() {
      var bitmapCanvas,
        t1 = this.$this,
        t2 = t1._optimalLocalCullRect;
      t2.toString;
      bitmapCanvas = t1.__engine$_canvas = t1._findOrCreateCanvas$1(t2);
      bitmapCanvas.setElementCache$1(t1._elementCache);
      t2 = t1.rootElement;
      t2.toString;
      A.removeAllChildren(t2);
      B._callMethodUnchecked1(t2, "append", bitmapCanvas.rootElement, type$.void);
      bitmapCanvas.clear$0(0);
      t2 = t1.picture.recordingCanvas;
      t2.toString;
      t1 = t1._optimalLocalCullRect;
      t1.toString;
      t2.apply$2(bitmapCanvas, t1);
    },
    $signature: 0
  };
  A.HtmlRenderer_initialize_closure.prototype = {
    call$0() {
      A.lineLookup();
    },
    $signature: 0
  };
  A.SurfaceSceneBuilder_build_closure.prototype = {
    call$0() {
      var t4,
        t1 = this.$this,
        t2 = t1._surfaceStack,
        t3 = J.getInterceptor$asx(t2);
      while (true) {
        t4 = t3.get$length(t2);
        if (typeof t4 !== "number")
          return t4.$gt();
        if (!(t4 > 1))
          break;
        t1.pop$0();
      }
      t1.get$_persistedScene().preroll$1(A.PrerollSurfaceContext$());
    },
    $signature: 0
  };
  A.SurfaceSceneBuilder_build_closure0.prototype = {
    call$0() {
      var t2, t3,
        t1 = this.$this;
      if ($.SurfaceSceneBuilder__lastFrameScene == null)
        t1.get$_persistedScene().build$0();
      else {
        t2 = t1.get$_persistedScene();
        t3 = $.SurfaceSceneBuilder__lastFrameScene;
        t3.toString;
        t2.update$1(t3);
      }
      A.commitScene(t1.get$_persistedScene());
      $.SurfaceSceneBuilder__lastFrameScene = t1.get$_persistedScene();
      return A.SurfaceScene$(t1.get$_persistedScene().rootElement, this.recorder);
    },
    $signature: typesOffset + 53
  };
  A.NormalizedGradient_NormalizedGradient_closure.prototype = {
    call$1(c) {
      var t1 = type$.Color._as(c).get$alpha();
      if (typeof t1 !== "number")
        return t1.$lt();
      return t1 < 1;
    },
    $signature: typesOffset + 56
  };
  A.GradientLinear_createImageBitmap_closure.prototype = {
    call$0() {
      var _this = this,
        t1 = B.boolConversionCheck(_this.createDataUrl),
        t2 = $.glRenderer,
        t3 = _this.shaderBounds,
        t4 = _this.gl,
        t5 = _this.glProgram,
        t6 = _this.normalizedGradient,
        t7 = _this.widthInPixels,
        t8 = _this.heightInPixels;
      if (t1) {
        t2.toString;
        return t2.drawRectToImageUrl$6(A.Rect$fromLTWH(0, 0, t3.get$width(), t3.get$height()), t4, t5, t6, t7, t8);
      } else {
        t2.toString;
        t1 = t2.drawRect$6(A.Rect$fromLTWH(0, 0, t3.get$width(), t3.get$height()), t4, t5, t6, t7, t8);
        t1.toString;
        return t1;
      }
    },
    $signature: 88
  };
  A.commitScene_closure.prototype = {
    call$2(a, b) {
      var aSize, bSize, t2,
        t1 = type$.PaintRequest;
      t1._as(a);
      t1._as(b);
      t1 = a.canvasSize;
      t2 = t1.get$height();
      t1 = t1.get$width();
      if (typeof t2 !== "number")
        return t2.$mul();
      if (typeof t1 !== "number")
        return B.iae(t1);
      aSize = t2 * t1;
      t1 = b.canvasSize;
      t2 = t1.get$height();
      t1 = t1.get$width();
      if (typeof t2 !== "number")
        return t2.$mul();
      if (typeof t1 !== "number")
        return B.iae(t1);
      bSize = t2 * t1;
      return J.compareTo$1$ns(bSize, aSize);
    },
    $signature: typesOffset + 60
  };
  A.PersistedContainerSurface__matchChildren_closure.prototype = {
    call$2(m1, m2) {
      var t2,
        t1 = type$._PersistedSurfaceMatch;
      t1._as(m1);
      t1._as(m2);
      t1 = m1.matchQuality;
      t1.toString;
      t2 = m2.matchQuality;
      t2.toString;
      return J.compareTo$1$ns(t1, t2);
    },
    $signature: typesOffset + 57
  };
  A.preventDefaultListener_closure.prototype = {
    call$1($event) {
      B._callMethodUnchecked0(type$.JavaScriptObject._as($event), "preventDefault", type$.void);
    },
    $signature: 1
  };
  A.FallbackFontComponent__activeFonts_closure.prototype = {
    call$1(font) {
      return type$.NotoFont._as(font).enabled;
    },
    $signature: typesOffset + 3
  };
  A.EnginePlatformDispatcher_closure.prototype = {
    call$1(_) {
      B._asInt(_);
      this.$this.invokeOnMetricsChanged$0();
    },
    $signature: 30
  };
  A.EnginePlatformDispatcher_invokeOnKeyData_closure.prototype = {
    call$0() {
      return this.callback.call$1(this.onKeyData.call$1(this.data));
    },
    $signature: 0
  };
  A.EnginePlatformDispatcher__zonedPlatformMessageResponseCallback_closure.prototype = {
    call$1(data) {
      var t1 = type$.nullable_ByteData;
      this.registrationZone.runUnaryGuarded$1$2(this.callback, t1._as(data), t1);
    },
    $signature: 7
  };
  A.EnginePlatformDispatcher__sendPlatformMessage_closure.prototype = {
    call$1(_) {
      this.$this.replyToPlatformMessage$2(this.callback, C.C_JSONMethodCodec.encodeSuccessEnvelope$1(true));
    },
    $signature: 4
  };
  A.EnginePlatformDispatcher__sendPlatformMessage_closure0.prototype = {
    call$1(success) {
      this.$this.replyToPlatformMessage$2(this.callback, C.C_JSONMethodCodec.encodeSuccessEnvelope$1(B._asBool(success)));
    },
    $signature: 26
  };
  A.EnginePlatformDispatcher__sendPlatformMessage_closure1.prototype = {
    call$1(handled) {
      var t1 = this.callback;
      if (B._asBool(handled))
        this.$this.replyToPlatformMessage$2(t1, C.C_JSONMethodCodec.encodeSuccessEnvelope$1(true));
      else if (t1 != null)
        t1.call$1(null);
    },
    $signature: 26
  };
  A.EnginePlatformDispatcher__addLocaleChangedListener_closure.prototype = {
    call$1(_) {
      var t1;
      type$.JavaScriptObject._as(_);
      t1 = this.$this;
      t1.updateLocales$0();
      t1.invokeOnLocaleChanged$0();
    },
    $signature: 1
  };
  A.EnginePlatformDispatcher__addFontSizeObserver_closure.prototype = {
    call$2(mutations, _) {
      var t1, t2, t3, mutation;
      type$.JSArray_nullable_Object._as(mutations);
      t1 = type$.JavaScriptObject;
      t1._as(_);
      for (t2 = J.get$iterator$ax(A.JSArrayToList_get_toDart(mutations, type$.nullable_Object)), t3 = this.$this; B.boolConversionCheck(t2.moveNext$0());) {
        mutation = t2.get$current();
        mutation.toString;
        t1._as(mutation);
        if (B.boolConversionCheck(J.$eq$(A.DomMutationRecordExtension_get_type(mutation), "attributes")) && B.boolConversionCheck(J.$eq$(A.DomMutationRecordExtension_get_attributeName(mutation), "style")))
          t3._updateTextScaleFactor$1(A.findBrowserTextScaleFactor());
      }
    },
    $signature: 84
  };
  A.EnginePlatformDispatcher__setAppLifecycleState_closure.prototype = {
    call$1(_) {
      type$.nullable_ByteData._as(_);
    },
    $signature: 7
  };
  A.EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure.prototype = {
    call$1($event) {
      var t1 = A.DomMediaQueryListEventExtension_get_matches(type$.JavaScriptObject._as($event));
      t1.toString;
      t1 = B.boolConversionCheck(t1) ? C.Brightness_0 : C.Brightness_1;
      this.$this._updatePlatformBrightness$1(t1);
    },
    $signature: 1
  };
  A.EnginePlatformDispatcher_replyToPlatformMessage_closure.prototype = {
    call$1(_) {
      var t1 = this.callback;
      if (t1 != null)
        t1.call$1(this.data);
    },
    $signature: 4
  };
  A.invoke2_closure.prototype = {
    call$0() {
      this.callback.call$2(this.arg1, this.arg2);
    },
    $signature: 0
  };
  A._BrowserAppLifecycleState__focusListener_closure.prototype = {
    call$1($event) {
      type$.JavaScriptObject._as($event);
      this.$this.onAppLifecycleStateChange$1(C.AppLifecycleState_1);
    },
    $signature: 1
  };
  A._BrowserAppLifecycleState__blurListener_closure.prototype = {
    call$1($event) {
      type$.JavaScriptObject._as($event);
      this.$this.onAppLifecycleStateChange$1(C.AppLifecycleState_2);
    },
    $signature: 1
  };
  A._BrowserAppLifecycleState__visibilityChangeListener_closure.prototype = {
    call$1($event) {
      type$.JavaScriptObject._as($event);
      if (B.boolConversionCheck(J.$eq$(A.DomHTMLDocumentExtension_get_visibilityState(self.document), "visible")))
        this.$this.onAppLifecycleStateChange$1(C.AppLifecycleState_1);
      else if (B.boolConversionCheck(J.$eq$(A.DomHTMLDocumentExtension_get_visibilityState(self.document), "hidden")))
        this.$this.onAppLifecycleStateChange$1(C.AppLifecycleState_3);
    },
    $signature: 1
  };
  A.ViewFocusBinding__handleFocusin_closure.prototype = {
    call$1($event) {
      this.$this._handleFocusChange$1(B.getProperty(type$.JavaScriptObject._as($event), "target", type$.nullable_JavaScriptObject));
    },
    $signature: 1
  };
  A.ViewFocusBinding__handleFocusout_closure.prototype = {
    call$1($event) {
      this.$this._handleFocusChange$1(B.getProperty(type$.JavaScriptObject._as($event), "relatedTarget", type$.nullable_JavaScriptObject));
    },
    $signature: 1
  };
  A.ViewFocusBinding__handleKeyDown_closure.prototype = {
    call$1($event) {
      var t1 = A.DomKeyboardEventExtension_get_shiftKey(type$.JavaScriptObject._as($event));
      if (B.boolConversionCheck(t1 == null ? false : t1))
        this.$this._viewFocusDirection = C.ViewFocusDirection_2;
    },
    $signature: 1
  };
  A.ViewFocusBinding__handleKeyUp_closure.prototype = {
    call$1($event) {
      type$.JavaScriptObject._as($event);
      this.$this._viewFocusDirection = C.ViewFocusDirection_1;
    },
    $signature: 1
  };
  A.PlatformViewManager_renderContent_closure.prototype = {
    call$0() {
      var t2, t3, t4, t5, $content, _this = this,
        wrapper = A.DomDocumentExtension_createElement(self.document, "flt-platform-view"),
        t1 = _this.viewId;
      A.DomElementExtension_set_id(wrapper, A.getPlatformViewDomId(t1));
      A.DomElementExtension_setAttribute(wrapper, "slot", _this.slotName);
      t2 = _this.$this;
      t3 = _this.viewType;
      t4 = J.$index$asx(t2._factories, t3);
      t4.toString;
      t5 = type$.JavaScriptObject;
      if (type$.Object_Function_int_$named_params_nullable_Object._is(t4))
        $content = t5._as(t4.call$2$params(t1, _this.params));
      else {
        type$.Object_Function_int._as(t4);
        $content = t5._as(t4.call$1(t1));
      }
      t2._ensureContentCorrectlySized$2($content, t3);
      B._callMethodUnchecked1(wrapper, "append", $content, type$.void);
      return wrapper;
    },
    $signature: 25
  };
  A.SafariPointerEventWorkaround_workAroundMissingPointerEvents_closure.prototype = {
    call$1(_) {
      type$.JavaScriptObject._as(_);
    },
    $signature: 1
  };
  A._BaseAdapter_addEventListener_loggedHandler.prototype = {
    call$1($event) {
      type$.JavaScriptObject._as($event);
      if (B.boolConversionCheck(A.EngineSemantics_instance().receiveGlobalEvent$1($event)))
        this.handler.call$1($event);
    },
    $signature: 1
  };
  A._WheelEventListenerMixin__convertWheelEventToPointerData_closure.prototype = {
    call$1$allowPlatformDefault(allowPlatformDefault) {
      var t1;
      B._asBool(allowPlatformDefault);
      t1 = this.$this;
      t1.set$_lastWheelEventAllowedDefault(J.$or$bn(t1._lastWheelEventAllowedDefault, allowPlatformDefault));
    },
    call$0() {
      return this.call$1$allowPlatformDefault(false);
    },
    $signature: 87
  };
  A._PointerAdapter__ensureSanitizer_closure.prototype = {
    call$0() {
      return A._ButtonSanitizer$();
    },
    $signature: typesOffset + 98
  };
  A._PointerAdapter__addPointerEventListener_closure.prototype = {
    call$1($event) {
      type$.JavaScriptObject._as($event);
      if (B.boolConversionCheck(this.checkModifiers))
        this.$this._checkModifiersState$1($event);
      this.handler.call$1($event);
    },
    $signature: 1
  };
  A._PointerAdapter_setup_closure.prototype = {
    call$1($event) {
      var t1, device, pointerData, sanitizer, t2, up, t3;
      type$.JavaScriptObject._as($event);
      t1 = this.$this;
      device = t1._getPointerId$1($event);
      pointerData = B._setArrayType([], type$.JSArray_PointerData);
      sanitizer = t1._ensureSanitizer$1(device);
      t2 = A.DomMouseEventExtension_get_buttons($event);
      t2.toString;
      up = sanitizer.sanitizeMissingRightClickUp$1$buttons(J.toInt$0$n(t2));
      if (up != null)
        t1._convertEventsToPointerData$3$data$details$event(pointerData, up, $event);
      t2 = J.toInt$0$n(A.DomMouseEventExtension_get_button($event));
      t3 = A.DomMouseEventExtension_get_buttons($event);
      t3.toString;
      t1._convertEventsToPointerData$3$data$details$event(pointerData, sanitizer.sanitizeDownEvent$2$button$buttons(t2, J.toInt$0$n(t3)), $event);
      t1.__engine$_callback$2($event, pointerData);
      if (B.boolConversionCheck(J.$eq$(B.getProperty($event, "target", type$.nullable_JavaScriptObject), t1.get$_viewTarget()))) {
        B._callMethodUnchecked0($event, "preventDefault", type$.void);
        A.Timer_Timer(D.Duration_0, new A._PointerAdapter_setup__closure(t1));
      }
    },
    $signature: 13
  };
  A._PointerAdapter_setup__closure.prototype = {
    call$0() {
      A.EnginePlatformDispatcher_instance().requestViewFocusChange$3$direction$state$viewId(C.ViewFocusDirection_0, C.ViewFocusState_1, this.$this.get$_view().viewId);
    },
    $signature: 0
  };
  A._PointerAdapter_setup_closure0.prototype = {
    call$1($event) {
      var t1, sanitizer, pointerData, t2, t3, t4, up;
      type$.JavaScriptObject._as($event);
      t1 = this.$this;
      sanitizer = t1._ensureSanitizer$1(t1._getPointerId$1($event));
      pointerData = B._setArrayType([], type$.JSArray_PointerData);
      for (t2 = J.get$iterator$ax(t1._expandEvents$1($event)); B.boolConversionCheck(t2.moveNext$0());) {
        t3 = t2.get$current();
        t4 = A.DomMouseEventExtension_get_buttons(t3);
        t4.toString;
        up = sanitizer.sanitizeMissingRightClickUp$1$buttons(J.toInt$0$n(t4));
        if (up != null)
          t1._convertEventsToPointerData$3$data$details$event(pointerData, up, t3);
        t4 = A.DomMouseEventExtension_get_buttons(t3);
        t4.toString;
        t1._convertEventsToPointerData$3$data$details$event(pointerData, sanitizer.sanitizeMoveEvent$1$buttons(J.toInt$0$n(t4)), t3);
      }
      t1.__engine$_callback$2($event, pointerData);
    },
    $signature: 13
  };
  A._PointerAdapter_setup_closure1.prototype = {
    call$1($event) {
      var t1, sanitizer, pointerData, t2, details;
      type$.JavaScriptObject._as($event);
      t1 = this.$this;
      sanitizer = t1._ensureSanitizer$1(t1._getPointerId$1($event));
      pointerData = B._setArrayType([], type$.JSArray_PointerData);
      t2 = A.DomMouseEventExtension_get_buttons($event);
      t2.toString;
      details = sanitizer.sanitizeLeaveEvent$1$buttons(J.toInt$0$n(t2));
      if (details != null) {
        t1._convertEventsToPointerData$3$data$details$event(pointerData, details, $event);
        t1.__engine$_callback$2($event, pointerData);
      }
    },
    $signature: 13
  };
  A._PointerAdapter_setup_closure2.prototype = {
    call$1($event) {
      var t1, device, pointerData, t2, t3, details;
      type$.JavaScriptObject._as($event);
      t1 = this.$this;
      device = t1._getPointerId$1($event);
      if (B.boolConversionCheck(t1._hasSanitizer$1(device))) {
        pointerData = B._setArrayType([], type$.JSArray_PointerData);
        t2 = t1._getSanitizer$1(device);
        t3 = A.DomMouseEventExtension_get_buttons($event);
        details = t2.sanitizeUpEvent$1$buttons(t3 == null ? null : J.toInt$0$n(t3));
        t1._removePointerIfUnhoverable$1($event);
        if (details != null) {
          t1._convertEventsToPointerData$3$data$details$event(pointerData, details, $event);
          t1.__engine$_callback$2($event, pointerData);
        }
      }
    },
    $signature: 13
  };
  A._PointerAdapter_setup_closure3.prototype = {
    call$1($event) {
      var t1, device, pointerData, details;
      type$.JavaScriptObject._as($event);
      t1 = this.$this;
      device = t1._getPointerId$1($event);
      if (B.boolConversionCheck(t1._hasSanitizer$1(device))) {
        pointerData = B._setArrayType([], type$.JSArray_PointerData);
        details = t1._getSanitizer$1(device).sanitizeCancelEvent$0();
        t1._removePointerIfUnhoverable$1($event);
        t1._convertEventsToPointerData$3$data$details$event(pointerData, details, $event);
        t1.__engine$_callback$2($event, pointerData);
      }
    },
    $signature: 13
  };
  A._PointerAdapter_setup_closure4.prototype = {
    call$1($event) {
      this.$this._handleWheelEvent$1(type$.JavaScriptObject._as($event));
    },
    $signature: 1
  };
  A._GlobalPointerState_ensurePointerDeviceState_closure.prototype = {
    call$0() {
      return A._PointerDeviceState$(this.x, this.y);
    },
    $signature: typesOffset + 26
  };
  A.Instrumentation_incrementCounter_closure.prototype = {
    call$0() {
      this.$this.toString;
      return;
    },
    $signature: 0
  };
  A.AccessibilityAnnouncements_announce_closure.prototype = {
    call$0() {
      return B._callMethodUnchecked0(this.messageElement, "remove", type$.void);
    },
    $signature: 0
  };
  A.Dialog_closure.prototype = {
    call$0() {
      if (B.boolConversionCheck(this.semanticsObject.owner.get$hasNodeRequestingFocus()))
        return;
      this.$this._setDefaultFocus$0();
    },
    $signature: 0
  };
  A.Dialog__setDefaultFocus_closure.prototype = {
    call$1(node) {
      var roleManager = type$.SemanticsObject._as(node).primaryRole;
      if (roleManager == null)
        return true;
      return !roleManager.focusAsRouteDefault$0();
    },
    $signature: typesOffset + 13
  };
  A.RouteName_update_closure.prototype = {
    call$0() {
      var t2,
        t1 = this.$this;
      if (!B.boolConversionCheck(t1.get$isDisposed())) {
        t1._lookUpNearestAncestorDialog$0();
        t2 = t1._dialog;
        if (t2 != null)
          t2.describeBy$1(t1);
      }
    },
    $signature: 0
  };
  A.AccessibilityFocusManager_manage_closure.prototype = {
    call$1(_) {
      type$.JavaScriptObject._as(_);
      return this.$this._setFocusFromDom$1(true);
    },
    $signature: 1
  };
  A.AccessibilityFocusManager_manage_closure0.prototype = {
    call$1(_) {
      type$.JavaScriptObject._as(_);
      return this.$this._setFocusFromDom$1(false);
    },
    $signature: 1
  };
  A.AccessibilityFocusManager_changeFocus_closure.prototype = {
    call$0() {
      var t1 = this.target;
      if (!B.boolConversionCheck(J.$eq$(this.$this.__engine$_target, t1)))
        return;
      A.DomElementExtension_focus(t1._values[2], null);
    },
    $signature: 0
  };
  A.Incrementable_closure.prototype = {
    call$1(_) {
      var t1, t2, t3, newInputValue;
      type$.JavaScriptObject._as(_);
      t1 = this.$this;
      t2 = t1.__engine$_element;
      t3 = A.DomHTMLInputElementExtension_get_disabled(t2);
      t3.toString;
      if (B.boolConversionCheck(t3))
        return;
      t1._pendingResync = true;
      t2 = A.DomHTMLInputElementExtension_get_value(t2);
      t2.toString;
      newInputValue = A.int_parse(t2, null);
      t2 = t1._currentSurrogateValue;
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (newInputValue > t2) {
        t1.set$_currentSurrogateValue(t2 + 1);
        A.EnginePlatformDispatcher_instance().invokeOnSemanticsAction$3(this.semanticsObject.id, C.SemanticsAction_64_increase, null);
      } else if (newInputValue < t2) {
        t1.set$_currentSurrogateValue(t2 - 1);
        A.EnginePlatformDispatcher_instance().invokeOnSemanticsAction$3(this.semanticsObject.id, C.SemanticsAction_128_decrease, null);
      }
    },
    $signature: 1
  };
  A.Incrementable_closure0.prototype = {
    call$1(mode) {
      type$.GestureMode._as(mode);
      this.$this.update$0();
    },
    $signature: typesOffset + 14
  };
  A._computeLabelHintValue_closure.prototype = {
    call$1(element) {
      return J.get$isNotEmpty$asx(D.JSString_methods.trim$0(B._asString(element)));
    },
    $signature: 12
  };
  A.Scrollable_update_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._neutralizeDomScrollPosition$0();
      t1.semanticsObject.recomputePositionAndSize$0();
    },
    $signature: 0
  };
  A.Scrollable_update_closure0.prototype = {
    call$1(_) {
      type$.GestureMode._as(_);
      this.$this._gestureModeDidChange$0();
    },
    $signature: typesOffset + 14
  };
  A.Scrollable_update_closure1.prototype = {
    call$1(_) {
      type$.JavaScriptObject._as(_);
      this.$this._recomputeScrollPosition$0();
    },
    $signature: 1
  };
  A.EngineSemantics__now_closure.prototype = {
    call$0() {
      return A.DateTime$now();
    },
    $signature: typesOffset + 29
  };
  A.EngineSemantics__getGestureModeClock_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (B.boolConversionCheck(J.$eq$(t1._gestureMode, C.GestureMode_1)))
        return;
      t1._gestureMode = C.GestureMode_1;
      t1._notifyGestureModeListeners$0();
    },
    $signature: 0
  };
  A.EngineSemanticsOwner_closure.prototype = {
    call$0() {
      var t1 = this.$this._rootSemanticsElement;
      if (t1 != null)
        B._callMethodUnchecked0(t1, "remove", type$.void);
    },
    $signature: 0
  };
  A.EngineSemanticsOwner__finalizeTree_closure.prototype = {
    call$1(node) {
      type$.SemanticsObject._as(node);
      if (J.$index$asx(this.$this._attachments, node.id) == null)
        J.add$1$ax(this.removals, node);
      return true;
    },
    $signature: typesOffset + 13
  };
  A.DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure.prototype = {
    call$1($event) {
      this.$this.tryEnableSemantics$1(type$.JavaScriptObject._as($event));
    },
    $signature: 1
  };
  A.MobileSemanticsEnabler_tryEnableSemantics_closure.prototype = {
    call$0() {
      this.$this.dispose$0();
      A.EngineSemantics_instance().set$semanticsEnabled(true);
    },
    $signature: 0
  };
  A.MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure.prototype = {
    call$1($event) {
      this.$this.tryEnableSemantics$1(type$.JavaScriptObject._as($event));
    },
    $signature: 1
  };
  A.Tappable_closure.prototype = {
    call$1(click) {
      type$.JavaScriptObject._as(click);
      $.$get$PointerBinding_clickDebouncer().onClick$3(click, this.semanticsObject.id, this.$this._isListening);
    },
    $signature: 1
  };
  A.TextField__initializeForBlink_closure.prototype = {
    call$1($event) {
      type$.JavaScriptObject._as($event);
      if (!B.boolConversionCheck(J.$eq$(A.EngineSemantics_instance().get$gestureMode(), C.GestureMode_1)))
        return;
      A.EnginePlatformDispatcher_instance().invokeOnSemanticsAction$3(this.$this.semanticsObject.id, C.SemanticsAction_32768_didGainAccessibilityFocus, null);
    },
    $signature: 1
  };
  A.TextField__initializeForBlink_closure0.prototype = {
    call$1($event) {
      type$.JavaScriptObject._as($event);
      if (!B.boolConversionCheck(J.$eq$(A.EngineSemantics_instance().get$gestureMode(), C.GestureMode_1)))
        return;
      A.EnginePlatformDispatcher_instance().invokeOnSemanticsAction$3(this.$this.semanticsObject.id, C.SemanticsAction_65536_didLoseAccessibilityFocus, null);
    },
    $signature: 1
  };
  A.TextField__initializeForWebkit_closure.prototype = {
    call$1($event) {
      var t1;
      type$.JavaScriptObject._as($event);
      t1 = this._box_0;
      t1.lastPointerDownOffsetX = A.DomMouseEventExtension_get_clientX($event);
      t1.lastPointerDownOffsetY = A.DomMouseEventExtension_get_clientY($event);
    },
    $signature: 1
  };
  A.TextField__initializeForWebkit_closure0.prototype = {
    call$1($event) {
      var t1, t2, t3, deltaX, deltaY;
      type$.JavaScriptObject._as($event);
      t1 = this._box_0;
      t2 = t1.lastPointerDownOffsetX;
      if (t2 != null) {
        t3 = A.DomMouseEventExtension_get_clientX($event);
        if (typeof t3 !== "number")
          return t3.$sub();
        if (typeof t2 !== "number")
          return B.iae(t2);
        deltaX = t3 - t2;
        t2 = A.DomMouseEventExtension_get_clientY($event);
        t3 = t1.lastPointerDownOffsetY;
        t3.toString;
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t3 !== "number")
          return B.iae(t3);
        deltaY = t2 - t3;
        if (deltaX * deltaX + deltaY * deltaY < 324) {
          t2 = this.$this;
          A.EnginePlatformDispatcher_instance().invokeOnSemanticsAction$3(t2.semanticsObject.id, C.SemanticsAction_1_tap, null);
          t2._invokeIosWorkaround$0();
        }
      }
      t1.lastPointerDownOffsetY = t1.lastPointerDownOffsetX = null;
    },
    $signature: 1
  };
  A.TextField__invokeIosWorkaround_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.editableElement;
      if (t2 != null)
        A.DomCSSStyleDeclarationExtension_set_transform(B.getProperty(t2, "style", type$.JavaScriptObject), "");
      t1._positionInputElementTimer = null;
    },
    $signature: 0
  };
  A.TextField__invokeIosWorkaround_closure0.prototype = {
    call$1($event) {
      var t1, t2;
      type$.JavaScriptObject._as($event);
      t1 = this.$this;
      t1.setAttribute$2("role", "textbox");
      B._callMethodUnchecked0(t1.get$activeEditableElement(), "remove", type$.void);
      t2 = $.SemanticsTextEditingStrategy__instance;
      if (t2 != null)
        t2.deactivate$1(t1);
      A.DomElementExtension_focus(t1.get$element(), null);
      t1.editableElement = null;
    },
    $signature: 1
  };
  A.TextField_update_closure.prototype = {
    call$0() {
      A.DomElementExtension_focus(this.$this.get$activeEditableElement(), null);
    },
    $signature: 0
  };
  A.StandardMessageCodec_writeValue_closure0.prototype = {
    call$2(key, value) {
      var t1 = this.$this,
        t2 = this.buffer;
      t1.writeValue$2(t2, key);
      t1.writeValue$2(t2, value);
    },
    $signature: 31
  };
  A.CanvasParagraph_computeLineMetrics_closure.prototype = {
    call$1(line) {
      return type$.ParagraphLine._as(line).lineMetrics;
    },
    $signature: typesOffset + 30
  };
  A.HtmlFontCollection_loadAssetFonts_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.Record_2_String_and_nullable_FontLoadError),
        $async$returnValue, $async$self = this, t1, t2, $async$temp1, $async$temp2;
      var $async$call$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.fontAsset;
              t2 = t1.asset;
              $async$temp1 = B;
              $async$temp2 = t2;
              $async$goto = 3;
              return B._asyncAwait($async$self.$this._loadFontAsset$3($async$self.family.name, t2, t1.descriptors), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = new $async$temp1._Record_2($async$temp2, $async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: typesOffset + 31
  };
  A.Spanometer_clearRulersCache_closure.prototype = {
    call$2(style, ruler) {
      type$.TextHeightStyle._as(style);
      type$.TextHeightRuler._as(ruler).dispose$0();
    },
    $signature: typesOffset + 34
  };
  A._computeLineBreakFragments_setBreak.prototype = {
    call$2(type, debugRuleNumber) {
      var fragmentEnd, t1, t2, _this = this;
      type$.LineBreakType._as(type);
      B._asInt(debugRuleNumber);
      fragmentEnd = type === C.LineBreakType_3 ? J.get$length$asx(_this.text) : _this._box_0.index;
      t1 = _this._box_0;
      if (B.boolConversionCheck(J.$eq$(t1.prev1, C.LineCharProperty_5))) {
        t2 = t1.trailingSpaces;
        if (typeof t2 !== "number")
          return t2.$add();
        t1.trailingSpaces = t2 + 1;
      } else {
        t2 = t1.prev1;
        if (B.boolConversionCheck(A._isHardBreak(t2)) || B.boolConversionCheck(J.$eq$(t2, C.LineCharProperty_4))) {
          t2 = t1.trailingNewlines;
          if (typeof t2 !== "number")
            return t2.$add();
          t1.trailingNewlines = t2 + 1;
          t2 = t1.trailingSpaces;
          if (typeof t2 !== "number")
            return t2.$add();
          t1.trailingSpaces = t2 + 1;
        }
      }
      if (type === C.LineBreakType_1)
        return;
      J.add$1$ax(_this.fragments, A.LineBreakFragment$(t1.fragmentStart, fragmentEnd, type, t1.trailingNewlines, t1.trailingSpaces));
      t1.fragmentStart = t1.index;
      t1.trailingSpaces = t1.trailingNewlines = 0;
      t1.prev1 = t1.prev2 = null;
    },
    $signature: typesOffset + 35
  };
  A.EngineAutofillForm_addInputEventListeners_addSubscriptionForKey.prototype = {
    call$1(key) {
      var t1, t2;
      B._asString(key);
      t1 = this.$this;
      t2 = t1.elements;
      t2.toString;
      t2 = J.$index$asx(t2, key);
      t2.toString;
      J.add$1$ax(this.subscriptions, A.DomSubscription$(t2, "input", new A.EngineAutofillForm_addInputEventListeners_addSubscriptionForKey_closure(t1, key, t2)));
    },
    $signature: 23
  };
  A.EngineAutofillForm_addInputEventListeners_addSubscriptionForKey_closure.prototype = {
    call$1(e) {
      var t1, t2, t3, t4;
      type$.JavaScriptObject._as(e);
      t1 = this.$this;
      t2 = t1.items;
      t2.toString;
      t3 = this.key;
      t4 = J.getInterceptor$asx(t2);
      if (t4.$index(t2, t3) == null)
        throw B.wrapException(B.StateError$("AutofillInfo must have a valid uniqueIdentifier."));
      else {
        t2 = t4.$index(t2, t3);
        t2.toString;
        t1.handleChange$2(this.element, t2);
      }
    },
    $signature: 1
  };
  A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure.prototype = {
    call$1($event) {
      B._callMethodUnchecked0(type$.JavaScriptObject._as($event), "preventDefault", type$.void);
    },
    $signature: 1
  };
  A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0.prototype = {
    call$1($event) {
      B._callMethodUnchecked0(type$.JavaScriptObject._as($event), "preventDefault", type$.void);
    },
    $signature: 1
  };
  A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1.prototype = {
    call$1($event) {
      B._callMethodUnchecked0(type$.JavaScriptObject._as($event), "preventDefault", type$.void);
    },
    $signature: 1
  };
  A.DefaultTextEditingStrategy__moveFocusToFlutterView_closure.prototype = {
    call$0() {
      var t2,
        t1 = this.element;
      if (B.boolConversionCheck(J.$eq$(t1, B.getProperty(self.document, "activeElement", type$.nullable_JavaScriptObject)))) {
        t2 = this.view;
        if (t2 != null)
          A.DomElementExtension_focus(t2.get$dom().rootElement, true);
      }
      if (B.boolConversionCheck(this.removeElement))
        B._callMethodUnchecked0(t1, "remove", type$.void);
    },
    $signature: 0
  };
  A.IOSTextEditingStrategy_addEventHandlers_closure.prototype = {
    call$1(_) {
      type$.JavaScriptObject._as(_);
      this.$this._schedulePlacement$0();
    },
    $signature: 1
  };
  A.IOSTextEditingStrategy__addTapListener_closure.prototype = {
    call$1(_) {
      var t1;
      type$.JavaScriptObject._as(_);
      t1 = this.$this;
      if (B.boolConversionCheck(t1._canPosition)) {
        t1.initializeElementPlacement$0();
        t1._schedulePlacement$0();
      }
    },
    $signature: 1
  };
  A.IOSTextEditingStrategy__schedulePlacement_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._canPosition = true;
      t1.placeElement$0();
    },
    $signature: 0
  };
  A.FirefoxTextEditingStrategy_addEventHandlers_closure.prototype = {
    call$1($event) {
      this.$this.handleChange$1(type$.JavaScriptObject._as($event));
    },
    $signature: 1
  };
  A.saveForms_closure.prototype = {
    call$2(identifier, form) {
      B._asString(identifier);
      B._callMethodUnchecked0(J.get$first$ax(A.DomElementExtension_getElementsByClassName(type$.JavaScriptObject._as(form), "submitBtn")), "click", type$.void);
    },
    $signature: 77
  };
  A.TextEditingChannel_handleTextInput_closure.prototype = {
    call$0() {
      A.EnginePlatformDispatcher_instance().replyToPlatformMessage$2(this.callback, C.C_JSONMethodCodec.encodeSuccessEnvelope$1(true));
    },
    $signature: 0
  };
  A.HybridTextEditing__startEditing_closure0.prototype = {
    call$2(editingState, editingDeltaState) {
      var t1;
      type$.nullable_EditingState._as(editingState);
      type$.nullable_TextEditingDeltaState._as(editingDeltaState);
      t1 = this.$this;
      if (B.boolConversionCheck(t1.configuration.enableDeltaModel))
        t1.get$channel().updateEditingStateWithDelta$2(t1._clientId, editingDeltaState);
      else
        t1.get$channel().updateEditingState$2(t1._clientId, editingState);
    },
    $signature: typesOffset + 36
  };
  A.HybridTextEditing__startEditing_closure.prototype = {
    call$1(inputAction) {
      var t1;
      B._asStringQ(inputAction);
      t1 = this.$this;
      t1.get$channel().performAction$2(t1._clientId, inputAction);
    },
    $signature: 78
  };
  A.EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage_closure.prototype = {
    call$1(e) {
      return D.JSNumber_methods.toDouble$0(B._asNum(e));
    },
    $signature: 80
  };
  A.CustomElementDimensionsProvider_closure.prototype = {
    call$1(_) {
      B._asDouble(_);
      this.$this._broadcastSize$1(null);
    },
    $signature: 29
  };
  A.CustomElementDimensionsProvider_closure0.prototype = {
    call$2(entries, _) {
      var t1, t2;
      type$.List_JavaScriptObject._as(entries);
      type$.JavaScriptObject._as(_);
      for (t1 = J.get$iterator$ax(entries), t2 = this.$this; B.boolConversionCheck(t1.moveNext$0());) {
        t1.get$current();
        t2._broadcastSize$1(null);
      }
    },
    $signature: 83
  };
  A._hotRestartCache_closure.prototype = {
    call$0() {
      return null;
    },
    $signature: typesOffset + 25
  };
  A.ViewConstraints_toString_describe.prototype = {
    call$3(min, max, dim) {
      B._asDouble(min);
      B._asDouble(max);
      B._asString(dim);
      if (min === max)
        return dim + "=" + B.S(D.JSNumber_methods.toStringAsFixed$1(min, 1));
      return B.S(D.JSNumber_methods.toStringAsFixed$1(min, 1)) + "<=" + dim + "<=" + B.S(D.JSNumber_methods.toStringAsFixed$1(max, 1));
    },
    $signature: 66
  };
  A.nullFuture_closure.prototype = {
    call$0() {
      return B.Future_Future$value(null, type$.Null);
    },
    $signature: 35
  };
  A.Primitives_initTicker_closure.prototype = {
    call$0() {
      return D.JSNumber_methods.floor$0(1000 * this.performance.now());
    },
    $signature: 48
  };
  A._SyncBroadcastStreamController__sendData_closure.prototype = {
    call$1(subscription) {
      this.$this.$ti._eval$1("_BufferingStreamSubscription<1>")._as(subscription)._async$_add$1(this.data);
    },
    $signature() {
      return this.$this.$ti._eval$1("~(_BufferingStreamSubscription<1>)");
    }
  };
  A._SyncBroadcastStreamController__sendDone_closure.prototype = {
    call$1(subscription) {
      this.$this.$ti._eval$1("_BufferingStreamSubscription<1>")._as(subscription)._close$0();
    },
    $signature() {
      return this.$this.$ti._eval$1("~(_BufferingStreamSubscription<1>)");
    }
  };
  A.Future_Future_closure.prototype = {
    call$0() {
      var e, s, exception, computationResult = null;
      try {
        computationResult = this.computation.call$0();
      } catch (exception) {
        e = B.unwrapException(exception);
        s = B.getTraceFromException(exception);
        A._completeWithErrorCallback(this.result, e, s);
        return;
      }
      this.result._complete$1(computationResult);
    },
    $signature: 0
  };
  A.Future_Future$delayed_closure.prototype = {
    call$0() {
      var computationResult, e, s, exception, _this = this,
        t1 = _this.computation;
      if (t1 == null) {
        _this.T._as(null);
        _this.result._complete$1(null);
      } else {
        computationResult = null;
        try {
          computationResult = t1.call$0();
        } catch (exception) {
          e = B.unwrapException(exception);
          s = B.getTraceFromException(exception);
          A._completeWithErrorCallback(_this.result, e, s);
          return;
        }
        _this.result._complete$1(computationResult);
      }
    },
    $signature: 0
  };
  A._BufferingStreamSubscription__sendDone_sendDone.prototype = {
    call$0() {
      var t2,
        t1 = this.$this;
      if (!B.boolConversionCheck(t1.get$_waitsForCancel()))
        return;
      t2 = t1._state;
      if (typeof t2 !== "number")
        return t2.$or();
      t1._state = (t2 | 74) >>> 0;
      t1._zone.runGuarded$1(t1._onDone);
      t2 = t1._state;
      if (typeof t2 !== "number")
        return t2.$and();
      t1._state = (t2 & 4294967231) >>> 0;
    },
    $signature: 0
  };
  A._PendingEvents_schedule_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        oldState = t1._state;
      t1._state = 0;
      if (oldState === 3)
        return;
      t1.handleNext$1(this.dispatch);
    },
    $signature: 0
  };
  A.LinkedHashMap_LinkedHashMap$from_closure.prototype = {
    call$2(k, v) {
      J.$indexSet$ax(this.result, this.K._as(k), this.V._as(v));
    },
    $signature: 31
  };
  A._Uri__makeQueryFromParameters_closure.prototype = {
    call$2(key, value) {
      var t1, t2;
      B._asString(key);
      if (typeof value == "string")
        this.params.set(key, value);
      else if (value == null)
        this.params.set(key, "");
      else
        for (t1 = J.get$iterator$ax(type$.Iterable_dynamic._as(value)), t2 = this.params; B.boolConversionCheck(t1.moveNext$0());) {
          value = t1.get$current();
          if (typeof value == "string")
            t2.append(key, value);
          else if (value == null)
            t2.append(key, "");
          else
            B._asStringQ(value);
        }
    },
    $signature: 33
  };
  A.Uri__parseIPv4Address_error.prototype = {
    call$2(msg, position) {
      throw B.wrapException(B.FormatException$("Illegal IPv4 address, " + B._asString(msg), this.host, B._asInt(position)));
    },
    $signature: 97
  };
  A.Uri_parseIPv6Address_error.prototype = {
    call$2(msg, position) {
      throw B.wrapException(B.FormatException$("Illegal IPv6 address, " + B._asString(msg), this.host, B._asIntQ(position)));
    },
    $signature: 101
  };
  A.Uri_parseIPv6Address_parseHex.prototype = {
    call$2(start, end) {
      var value;
      B._asInt(start);
      B._asInt(end);
      if (end - start > 4)
        this.error.call$2("an IPv6 part can only contain a maximum of 4 hex digits", start);
      value = A.int_parse(J.substring$2$s(this.host, start, end), 16);
      if (value < 0 || value > 65535)
        this.error.call$2("each part must be in the range of `0x0..0xFFFF`", start);
      return value;
    },
    $signature: 104
  };
  A._Uri__makePath_closure.prototype = {
    call$1(s) {
      return A._Uri__uriEncode(C.List_M2I0, B._asString(s), D.C_Utf8Codec, false);
    },
    $signature: 19
  };
  A._Uri__makeQueryFromParametersDefault_writeParameter.prototype = {
    call$2(key, value) {
      var t1, t2;
      B._asString(key);
      B._asStringQ(value);
      t1 = this.result;
      t2 = this._box_0;
      t1.write$1(t2.separator);
      t2.separator = "&";
      t1.write$1(A.Uri_encodeQueryComponent(key));
      if (value != null && B.boolConversionCheck(D.JSString_methods.get$isNotEmpty(value))) {
        t1.write$1("=");
        t1.write$1(A.Uri_encodeQueryComponent(value));
      }
    },
    $signature: 120
  };
  A._Uri__makeQueryFromParametersDefault_closure.prototype = {
    call$2(key, value) {
      var t1, t2;
      B._asString(key);
      if (value == null || typeof value == "string")
        this.writeParameter.call$2(key, B._asStringQ(value));
      else
        for (t1 = J.get$iterator$ax(type$.Iterable_dynamic._as(value)), t2 = this.writeParameter; B.boolConversionCheck(t1.moveNext$0());)
          t2.call$2(key, B._asString(t1.get$current()));
    },
    $signature: 33
  };
  A._Uri__splitQueryStringAll_parsePair.prototype = {
    call$3(start, equalsIndex, end) {
      var t1, t2, key, value;
      B._asInt(start);
      B._asInt(equalsIndex);
      B._asInt(end);
      if (start === end)
        return;
      t1 = this.query;
      t2 = this.encoding;
      if (equalsIndex < 0) {
        key = A._Uri__uriDecode(t1, start, end, t2, true);
        value = "";
      } else {
        key = A._Uri__uriDecode(t1, start, equalsIndex, t2, true);
        value = A._Uri__uriDecode(t1, equalsIndex + 1, end, t2, true);
      }
      J.add$1$ax(this.result.putIfAbsent$2(key, A.core__Uri__createList$closure()), value);
    },
    $signature: 140
  };
  A._createTables_build.prototype = {
    call$2(state, defaultTransition) {
      var t1 = J.$index$asx(this.tables, B._asInt(state));
      J.fillRange$3$x(t1, 0, 96, B._asIntQ(defaultTransition));
      return t1;
    },
    $signature: 142
  };
  A._createTables_setChars.prototype = {
    call$3(target, chars, transition) {
      var t1, t2, i, t3;
      type$.Uint8List._as(target);
      B._asString(chars);
      B._asInt(transition);
      for (t1 = chars.length, t2 = target.length, i = 0; i < t1; ++i) {
        t3 = chars.charCodeAt(i) ^ 96;
        if (!(t3 < t2))
          return B.ioore(target, t3);
        target[t3] = transition;
      }
    },
    $signature: 47
  };
  A._createTables_setRange.prototype = {
    call$3(target, range, transition) {
      var t1, i, n, t2;
      type$.Uint8List._as(target);
      B._asString(range);
      B._asInt(transition);
      t1 = range.length;
      if (0 >= t1)
        return B.ioore(range, 0);
      i = range.charCodeAt(0);
      if (1 >= t1)
        return B.ioore(range, 1);
      n = range.charCodeAt(1);
      t1 = target.length;
      for (; i <= n; ++i) {
        t2 = (i ^ 96) >>> 0;
        if (!(t2 < t1))
          return B.ioore(target, t2);
        target[t2] = transition;
      }
    },
    $signature: 47
  };
  A._performance_closure.prototype = {
    call$0() {
      var performance,
        t1 = type$.nullable_Object,
        value = B.getProperty(B.staticInteropGlobalContext(), "performance", t1);
      if (value != null && B.boolConversionCheck(B.JSAnyUtilityExtension_instanceOfString(value, "Object"))) {
        performance = A._JSPerformance_constructor_(type$.JSObject._as(value));
        if (B.getProperty(performance, "measure", t1) != null && B.getProperty(performance, "mark", t1) != null)
          return performance;
      }
      return null;
    },
    $signature: 75
  };
  A._json_closure.prototype = {
    call$0() {
      var value = B.getProperty(B.staticInteropGlobalContext(), "JSON", type$.nullable_Object);
      if (value != null && B.boolConversionCheck(B.JSAnyUtilityExtension_instanceOfString(value, "Object")))
        return type$.JSObject._as(value);
      throw B.wrapException(B.UnsupportedError$("Missing JSON.parse() support"));
    },
    $signature: 46
  };
  A.jsify__convert.prototype = {
    call$1(o) {
      var t1, convertedMap, key, convertedList;
      if (B.boolConversionCheck(A._noJsifyRequired(o)))
        return o;
      t1 = this._convertedObjects;
      if (B.boolConversionCheck(t1.containsKey$1(o)))
        return J.$index$asx(t1, o);
      if (type$.Map_of_nullable_Object_and_nullable_Object._is(o)) {
        convertedMap = {};
        J.$indexSet$ax(t1, o, convertedMap);
        for (t1 = J.get$iterator$ax(o.get$keys()); B.boolConversionCheck(t1.moveNext$0());) {
          key = t1.get$current();
          convertedMap[key] = this.call$1(o.$index(0, key));
        }
        return convertedMap;
      } else if (type$.Iterable_nullable_Object._is(o)) {
        convertedList = [];
        J.$indexSet$ax(t1, o, convertedList);
        D.JSArray_methods.addAll$1(convertedList, J.map$1$1$ax(o, this, type$.dynamic));
        return convertedList;
      } else
        return o;
    },
    $signature: 34
  };
  A.promiseToFuture_closure.prototype = {
    call$1(r) {
      return this.completer.complete$1(this.T._eval$1("0/?")._as(r));
    },
    $signature: 17
  };
  A.promiseToFuture_closure0.prototype = {
    call$1(e) {
      if (e == null)
        return this.completer.completeError$1(A.NullRejectionException$(e === undefined));
      return this.completer.completeError$1(e);
    },
    $signature: 17
  };
  A.dartify_convert.prototype = {
    call$1(o) {
      var t1, t2, dartObject, originalKeys, dartKeys, t3, i, jsKey, dartKey, l, $length;
      if (B.boolConversionCheck(A._noDartifyRequired(o)))
        return o;
      t1 = this._convertedObjects;
      o.toString;
      if (B.boolConversionCheck(t1.containsKey$1(o)))
        return J.$index$asx(t1, o);
      if (B.boolConversionCheck(A._isJavaScriptDate(o)))
        return A._dateToDateTime(o);
      if (B.boolConversionCheck(A._isJavaScriptRegExp(o)))
        throw B.wrapException(B.ArgumentError$("structured clone of RegExp", null));
      if (B.boolConversionCheck(A._isJavaScriptPromise(o)))
        return A.promiseToFuture(o, type$.nullable_Object);
      if (B.boolConversionCheck(A.isJavaScriptSimpleObject(o))) {
        t2 = type$.nullable_Object;
        dartObject = B.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
        J.$indexSet$ax(t1, o, dartObject);
        originalKeys = A.objectKeys(o);
        dartKeys = [];
        for (t1 = J.getInterceptor$ax(originalKeys), t3 = t1.get$iterator(originalKeys); B.boolConversionCheck(t3.moveNext$0());)
          dartKeys.push(A.dartify(t3.get$current()));
        i = 0;
        while (true) {
          t3 = t1.get$length(originalKeys);
          if (typeof t3 !== "number")
            return B.iae(t3);
          if (!(i < t3))
            break;
          jsKey = t1.$index(originalKeys, i);
          if (!(i < dartKeys.length))
            return B.ioore(dartKeys, i);
          dartKey = dartKeys[i];
          if (jsKey != null)
            dartObject.$indexSet(0, dartKey, this.call$1(B.getProperty(o, jsKey, t2)));
          ++i;
        }
        return dartObject;
      }
      if (B.boolConversionCheck(A.isJavaScriptArray(o))) {
        l = o;
        dartObject = [];
        J.$indexSet$ax(t1, o, dartObject);
        $length = B.getProperty(o, "length", type$.int);
        for (t1 = J.getInterceptor$asx(l), i = 0; i < $length; ++i)
          dartObject.push(this.call$1(t1.$index(l, i)));
        return dartObject;
      }
      return o;
    },
    $signature: 34
  };
  A.ChannelBuffers_push_closure.prototype = {
    call$0() {
      return A._Channel$(1);
    },
    $signature: typesOffset + 17
  };
  A.ChannelBuffers_setListener_closure.prototype = {
    call$0() {
      return A._Channel$(1);
    },
    $signature: typesOffset + 17
  };
  A.FlutterErrorDetails_summary_formatException.prototype = {
    call$0() {
      return J.trimLeft$0$s(J.$index$asx(J.split$1$s(this.$this.exceptionAsString$0(), "\n"), 0));
    },
    $signature: 10
  };
  A.FlutterErrorDetails_summary_closure.prototype = {
    call$1(node) {
      return J.$eq$(type$.nullable_DiagnosticsNode._as(node).get$level(), C.DiagnosticLevel_6);
    },
    $signature: typesOffset + 45
  };
  A.FlutterErrorDetails_summary_closure0.prototype = {
    call$0() {
      return null;
    },
    $signature: 5
  };
  A.FlutterErrorDetails_debugFillProperties_closure.prototype = {
    call$1(frame) {
      return J.$eq$(type$.StackFrame._as(frame).packageScheme, "dart");
    },
    $signature: typesOffset + 46
  };
  A.FlutterError_FlutterError_closure.prototype = {
    call$1(line) {
      return A.ErrorDescription$(B._asString(line));
    },
    $signature: typesOffset + 47
  };
  A.FlutterError_defaultStackFilter_closure.prototype = {
    call$1(value) {
      return B._asInt(value) + 1;
    },
    $signature: 42
  };
  A.FlutterError_defaultStackFilter_closure0.prototype = {
    call$1(value) {
      return B._asInt(value) + 1;
    },
    $signature: 42
  };
  A.FlutterError_toString_closure.prototype = {
    call$1(node) {
      return J.trimRight$0$s(this.renderer.render$1(type$.DiagnosticsNode._as(node)));
    },
    $signature: typesOffset + 48
  };
  A.debugPrintStack_closure.prototype = {
    call$1(line) {
      B._asString(line);
      return B.boolConversionCheck(D.JSString_methods.contains$1(line, "StackTrace.current")) || B.boolConversionCheck(D.JSString_methods.contains$1(line, "dart-sdk/lib/_internal")) || B.boolConversionCheck(D.JSString_methods.contains$1(line, "dart:sdk_internal"));
    },
    $signature: 12
  };
  A.ChangeNotifier_notifyListeners_closure.prototype = {
    call$0() {
      var _null = null,
        t1 = this.$this;
      return B._setArrayType([A.DiagnosticsProperty$("The " + B.S(J.get$runtimeType$(t1)) + " sending notification was", t1, true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_9, _null, type$.ChangeNotifier)], type$.JSArray_DiagnosticsNode);
    },
    $signature: typesOffset + 7
  };
  A._defaultCompare_closure.prototype = {
    call$2(value1, value2) {
      var t1 = this.T;
      t1._as(value1);
      t1._as(value2);
      return J.compareTo$1$ns(type$.Comparable_dynamic._as(value1), value2);
    },
    $signature() {
      return this.T._eval$1("int(0,0)");
    }
  };
  A._PrefixedStringBuilder__wordWrapLine_noWrap.prototype = {
    call$1(index) {
      var t1, t2, t3, t4, t5;
      B._asInt(index);
      for (t1 = this._box_0, t2 = this.wrapRanges, t3 = J.getInterceptor$asx(t2); true;) {
        t4 = t1.currentChunk;
        t5 = t3.get$length(t2);
        if (typeof t4 !== "number")
          return t4.$ge();
        if (typeof t5 !== "number")
          return B.iae(t5);
        if (t4 >= t5)
          return true;
        t4 = t1.currentChunk;
        if (typeof t4 !== "number")
          return t4.$add();
        t4 = t3.$index(t2, t4 + 1);
        if (typeof t4 !== "number")
          return B.iae(t4);
        if (index < t4)
          break;
        t4 = t1.currentChunk;
        if (typeof t4 !== "number")
          return t4.$add();
        t1.currentChunk = t4 + 2;
      }
      t1 = t3.$index(t2, t1.currentChunk);
      if (typeof t1 !== "number")
        return B.iae(t1);
      return index < t1;
    },
    $signature: 58
  };
  A.TextTreeRenderer__debugRender_visitor.prototype = {
    call$1(node) {
      var t1, t2, t3, t4, t5, t6;
      for (t1 = J.get$iterator$ax(type$.DiagnosticsNode._as(node).getChildren$0()), t2 = this._box_0, t3 = this.descendants, t4 = J.getInterceptor$ax(t3); B.boolConversionCheck(t1.moveNext$0());) {
        t5 = t1.get$current();
        t6 = t2.lines;
        if (typeof t6 !== "number")
          return t6.$lt();
        if (t6 < 25) {
          t6 = t2.depth;
          if (typeof t6 !== "number")
            return t6.$add();
          t2.depth = t6 + 1;
          t4.add$1(t3, B.S(t2.prefixOtherLines) + B.S(D.JSString_methods.$mul("  ", t2.depth)) + B.S(t5));
          t6 = t2.depth;
          if (typeof t6 !== "number")
            return t6.$lt();
          if (t6 < 5)
            this.call$1(t5);
          t5 = t2.depth;
          if (typeof t5 !== "number")
            return t5.$sub();
          t2.depth = t5 - 1;
        } else if (t6 === 25)
          t4.add$1(t3, B.S(t2.prefixOtherLines) + "  ...(descendants list truncated after " + B.S(t2.lines) + " lines)");
        t5 = t2.lines;
        if (typeof t5 !== "number")
          return t5.$add();
        t2.lines = t5 + 1;
      }
    },
    $signature: typesOffset + 18
  };
  A.TextTreeRenderer__debugRender_closure.prototype = {
    call$1(n) {
      type$.DiagnosticsNode._as(n);
      this.$this.toString;
      return !B.boolConversionCheck(n.isFiltered$1(C.DiagnosticLevel_2));
    },
    $signature: typesOffset + 52
  };
  A.IterableProperty_valueToString_closure.prototype = {
    call$1(v) {
      var t1 = this.$this.$ti._precomputed1;
      t1._as(v);
      if (B.boolConversionCheck(J.$eq$(B.createRuntimeType(t1), C.Type_double_23F)) && typeof v == "number")
        return A.debugFormatDouble(v);
      else
        return J.toString$0$(v);
    },
    $signature() {
      return this.$this.$ti._eval$1("String(1)");
    }
  };
  A.FlutterMemoryAllocations__tryDefragmentListeners_closure.prototype = {
    call$1(e) {
      return type$.nullable_void_Function_ObjectEvent._as(e) == null;
    },
    $signature: typesOffset + 19
  };
  A.FlutterMemoryAllocations_hasListeners_closure.prototype = {
    call$1(l) {
      return type$.nullable_void_Function_ObjectEvent._as(l) != null;
    },
    $signature: typesOffset + 19
  };
  A.FlutterMemoryAllocations_dispatchObjectEvent_closure.prototype = {
    call$0() {
      var _null = null;
      return B._setArrayType([A.DiagnosticsProperty$("The " + B.S(this.type) + " sending notification was", this.event.object, true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_9, _null, type$.Object)], type$.JSArray_DiagnosticsNode);
    },
    $signature: typesOffset + 7
  };
  A.debugPrintThrottled_closure.prototype = {
    call$1(line) {
      return A.debugWordWrap(B._asString(line), this.wrapWidth);
    },
    $signature: 67
  };
  A.StackFrame_fromStackString_closure.prototype = {
    call$1(line) {
      return D.JSString_methods.get$isNotEmpty(B._asString(line));
    },
    $signature: 12
  };
  A.SynchronousFuture_whenComplete_closure.prototype = {
    call$1(value) {
      return this.$this._synchronous_future$_value;
    },
    $signature() {
      return this.$this.$ti._eval$1("1(@)");
    }
  };
  A.ClipContext_clipPathAndPaint_closure.prototype = {
    call$1(doAntiAlias) {
      B._asBool(doAntiAlias);
      return this.$this.get$canvas().clipPath$2$doAntiAlias(this.path, doAntiAlias);
    },
    $signature: 20
  };
  A.ClipContext_clipRRectAndPaint_closure.prototype = {
    call$1(doAntiAlias) {
      B._asBool(doAntiAlias);
      return this.$this.get$canvas().clipRRect$2$doAntiAlias(this.rrect, doAntiAlias);
    },
    $signature: 20
  };
  A.ClipContext_clipRectAndPaint_closure.prototype = {
    call$1(doAntiAlias) {
      B._asBool(doAntiAlias);
      return this.$this.get$canvas().clipRect$2$doAntiAlias(this.rect, doAntiAlias);
    },
    $signature: 20
  };
  A.BoxConstraints_toString_describe.prototype = {
    call$3(min, max, dim) {
      B._asDouble(min);
      B._asDouble(max);
      B._asString(dim);
      if (min === max)
        return dim + "=" + B.S(D.JSNumber_methods.toStringAsFixed$1(min, 1));
      return B.S(D.JSNumber_methods.toStringAsFixed$1(min, 1)) + "<=" + dim + "<=" + B.S(D.JSNumber_methods.toStringAsFixed$1(max, 1));
    },
    $signature: 66
  };
  A._DryLayout_memoize_closure.prototype = {
    call$0() {
      return this.computer.call$1(this.input);
    },
    $signature: typesOffset + 54
  };
  A._Baseline_memoize_ifAbsent.prototype = {
    call$0() {
      return this.computer.call$1(this.input);
    },
    $signature: 91
  };
  A.RenderBox_getDistanceToActualBaseline_closure.prototype = {
    call$1(pair) {
      return A.BaselineOffset_constructor_(this.$this.computeDistanceToActualBaseline$1(type$.Record_2_BoxConstraints_and_TextBaseline._as(pair)._1));
    },
    $signature: typesOffset + 20
  };
  A.PaintingContext_pushClipRect_closure.prototype = {
    call$0() {
      return this.painter.call$2(this.$this, this.offset);
    },
    $signature: 0
  };
  A.PaintingContext_pushClipRRect_closure.prototype = {
    call$0() {
      return this.painter.call$2(this.$this, this.offset);
    },
    $signature: 0
  };
  A.PaintingContext_pushClipPath_closure.prototype = {
    call$0() {
      return this.painter.call$2(this.$this, this.offset);
    },
    $signature: 0
  };
  A.RenderObject__reportException_closure.prototype = {
    call$0() {
      var t1 = B._setArrayType([], type$.JSArray_DiagnosticsNode),
        t2 = this.$this;
      t1.push(t2.describeForError$1("The following RenderObject was being processed when the exception was fired"));
      t1.push(t2.describeForError$2$style("RenderObject", C.DiagnosticsTreeStyle_11));
      return t1;
    },
    $signature: typesOffset + 7
  };
  A.RenderObject__updateCompositingBits_closure.prototype = {
    call$1(child) {
      type$.RenderObject._as(child);
      child._updateCompositingBits$0();
      if (B.boolConversionCheck(child.get$needsCompositing()))
        this.$this.set$_needsCompositing(true);
    },
    $signature: typesOffset + 6
  };
  A.RenderObject_clearSemantics_closure.prototype = {
    call$1(child) {
      type$.RenderObject._as(child).clearSemantics$0();
    },
    $signature: typesOffset + 6
  };
  A.RenderObject__getSemanticsForParent_closure.prototype = {
    call$1(renderChild) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, _this = this,
        parentFragment = type$.RenderObject._as(renderChild)._getSemanticsForParent$2$blockUserActions$mergeIntoParent(_this.blockChildInteractions, _this.childrenMergeIntoParent);
      if (B.boolConversionCheck(parentFragment.dropsSemanticsOfPreviousSiblings)) {
        J.clear$0$ax(_this.childConfigurations);
        J.clear$0$ax(_this.mergeUpFragments);
        J.clear$0$ax(_this.siblingMergeFragmentGroups);
        if (!B.boolConversionCheck(_this.config.get$isSemanticBoundary()))
          _this._box_0.dropSemanticsOfPreviousSiblings = true;
      }
      for (t1 = J.get$iterator$ax(parentFragment.get$mergeUpFragments()), t2 = _this.mergeUpFragments, t3 = J.getInterceptor$ax(t2), t4 = _this.childConfigurationsDelegate != null, t5 = _this.hasTags, t6 = _this.$this, t7 = _this.config, t8 = _this.childConfigurations, t9 = J.getInterceptor$ax(t8), t10 = _this.configToFragment, t11 = J.getInterceptor$ax(t10); B.boolConversionCheck(t1.moveNext$0());) {
        t12 = t1.get$current();
        t12.addAncestor$1(t6);
        if (B.boolConversionCheck(t5)) {
          t13 = t7.get$tagsForChildren();
          t13.toString;
          t12.addTags$1(t13);
        }
        if (t4 && t12.get$config() != null) {
          t13 = t12.get$config();
          t13.toString;
          t9.add$1(t8, t13);
          t13 = t12.get$config();
          t13.toString;
          t11.$indexSet(t10, t13, t12);
        } else
          t3.add$1(t2, t12);
      }
      if (parentFragment instanceof A._ContainerSemanticsFragment)
        for (t1 = J.get$iterator$ax(parentFragment.siblingMergeGroups), t2 = _this.siblingMergeFragmentGroups, t3 = J.getInterceptor$ax(t2); B.boolConversionCheck(t1.moveNext$0());) {
          t4 = t1.get$current();
          for (t8 = J.get$iterator$ax(t4); B.boolConversionCheck(t8.moveNext$0());) {
            t9 = t8.get$current();
            t9.addAncestor$1(t6);
            if (B.boolConversionCheck(t5)) {
              t10 = t7.get$tagsForChildren();
              t10.toString;
              t9.addTags$1(t10);
            }
          }
          t3.add$1(t2, t4);
        }
    },
    $signature: typesOffset + 6
  };
  A.RenderObject__getSemanticsForParent_closure0.prototype = {
    call$1(config) {
      var fragment;
      type$.SemanticsConfiguration._as(config);
      fragment = J.$index$asx(this.configToFragment, config);
      if (fragment == null) {
        this._box_0.producesForkingFragment = false;
        return A._IncompleteSemanticsFragment$(config, this.$this);
      }
      return fragment;
    },
    $signature: typesOffset + 21
  };
  A.RenderObject__getSemanticsForParent_closure1.prototype = {
    call$1(config) {
      var t1;
      type$.SemanticsConfiguration._as(config);
      t1 = J.$index$asx(this.configToFragment, config);
      return t1 == null ? A._IncompleteSemanticsFragment$(config, this.$this) : t1;
    },
    $signature: typesOffset + 21
  };
  A.RenderObject_toStringDeep_closure.prototype = {
    call$0() {
      var _this = this;
      return _this.$this.super$DiagnosticableTreeMixin$toStringDeep(_this.minLevel, _this.prefixLineOne, _this.prefixOtherLines);
    },
    $signature: 10
  };
  A.SemanticsData_debugFillProperties_closure.prototype = {
    call$1(actionId) {
      A.CustomSemanticsAction_getAction(B._asInt(actionId)).toString;
      return null;
    },
    $signature: 96
  };
  A.SemanticsNode_getSemanticsData_closure.prototype = {
    call$1(node) {
      var t1, t2, t3, t4, t5;
      type$.SemanticsNode._as(node);
      t1 = this._box_0;
      t2 = t1.flags;
      t3 = node._flags;
      if (typeof t2 !== "number")
        return t2.$or();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t1.flags = (t2 | t3) >>> 0;
      t3 = t1.actions;
      t2 = node.get$_effectiveActionsAsBits();
      if (typeof t3 !== "number")
        return t3.$or();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t1.actions = (t3 | t2) >>> 0;
      if (t1.textDirection == null)
        t1.textDirection = node._textDirection;
      if (t1.textSelection == null)
        t1.textSelection = node._textSelection;
      if (t1.scrollChildCount == null)
        t1.scrollChildCount = node._scrollChildCount;
      if (t1.scrollIndex == null)
        t1.scrollIndex = node._scrollIndex;
      if (t1.scrollPosition == null)
        t1.scrollPosition = node._scrollPosition;
      if (t1.scrollExtentMax == null)
        t1.scrollExtentMax = node._scrollExtentMax;
      if (t1.scrollExtentMin == null)
        t1.scrollExtentMin = node._scrollExtentMin;
      if (t1.platformViewId == null)
        t1.platformViewId = node._platformViewId;
      if (t1.maxValueLength == null)
        t1.maxValueLength = node._maxValueLength;
      if (t1.currentValueLength == null)
        t1.currentValueLength = node._currentValueLength;
      t1.headingLevel = node._headingLevel;
      if (B.boolConversionCheck(J.$eq$(t1.identifier, "")))
        t1.identifier = node._identifier;
      if (B.boolConversionCheck(J.$eq$(t1.attributedValue.string, "")))
        t1.attributedValue = node._attributedValue;
      if (B.boolConversionCheck(J.$eq$(t1.attributedIncreasedValue.string, "")))
        t1.attributedIncreasedValue = node._attributedIncreasedValue;
      if (B.boolConversionCheck(J.$eq$(t1.attributedDecreasedValue.string, "")))
        t1.attributedDecreasedValue = node._attributedDecreasedValue;
      if (B.boolConversionCheck(J.$eq$(t1.tooltip, "")))
        t1.tooltip = node._tooltip;
      t2 = node.tags;
      if (t2 != null) {
        t3 = t1.mergedTags;
        J.addAll$1$ax(t3 == null ? t1.mergedTags = B.LinkedHashSet_LinkedHashSet$_empty(type$.SemanticsTag) : t3, t2);
      }
      for (t2 = J.get$iterator$ax(this.$this._customSemanticsActions.get$keys()), t3 = this.customSemanticsActionIds, t4 = J.getInterceptor$ax(t3); B.boolConversionCheck(t2.moveNext$0());)
        t4.add$1(t3, A.CustomSemanticsAction_getIdentifier(t2.get$current()));
      if (node.get$hintOverrides() != null) {
        if (node.get$hintOverrides().onTapHint != null) {
          t2 = node.get$hintOverrides().onTapHint;
          t2.toString;
          t4.add$1(t3, A.CustomSemanticsAction_getIdentifier(A.CustomSemanticsAction$overridingAction(C.SemanticsAction_1_tap, t2)));
        }
        if (node.get$hintOverrides().onLongPressHint != null) {
          t2 = node.get$hintOverrides().onLongPressHint;
          t2.toString;
          t4.add$1(t3, A.CustomSemanticsAction_getIdentifier(A.CustomSemanticsAction$overridingAction(C.SemanticsAction_2_longPress, t2)));
        }
      }
      t2 = t1.attributedLabel;
      t3 = t1.textDirection;
      t4 = node._attributedLabel;
      t5 = node._textDirection;
      t1.attributedLabel = A._concatAttributedString(t4, t5, t2, t3);
      t2 = t1.attributedHint;
      t1.attributedHint = A._concatAttributedString(node._attributedHint, t5, t2, t3);
      t3 = t1.thickness;
      t2 = node._thickness;
      t5 = node._elevation;
      if (typeof t2 !== "number")
        return t2.$add();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t1.thickness = A.max(t3, t2 + t5, type$.double);
      return true;
    },
    $signature: typesOffset + 65
  };
  A.SemanticsNode__childrenInTraversalOrder_closure.prototype = {
    call$1(sortNode) {
      return type$._TraversalSortNode._as(sortNode).node;
    },
    $signature: typesOffset + 66
  };
  A.SemanticsNode_debugFillProperties_closure.prototype = {
    call$1(line) {
      return D.JSString_methods.substring$1(B._asString(line), 4);
    },
    $signature: 19
  };
  A.SemanticsNode_debugFillProperties_closure0.prototype = {
    call$1(tag) {
      return type$.SemanticsTag._as(tag).name;
    },
    $signature: typesOffset + 67
  };
  A.SemanticsNode_debugFillProperties_closure1.prototype = {
    call$1(action) {
      var t1;
      type$.SemanticsAction._as(action);
      t1 = B.S(action.name);
      return t1 + (B.boolConversionCheck(this.$this._debugIsActionBlocked$1(action)) ? "\ud83d\udeab\ufe0f" : "");
    },
    $signature: typesOffset + 68
  };
  A.SemanticsNode_debugFillProperties_closure2.prototype = {
    call$1(action) {
      type$.CustomSemanticsAction._as(action);
      return null;
    },
    $signature: typesOffset + 69
  };
  A.SemanticsNode_debugFillProperties_closure3.prototype = {
    call$1(flag) {
      return this.$this.hasFlag$1(type$.SemanticsFlag._as(flag));
    },
    $signature: typesOffset + 70
  };
  A.SemanticsNode_debugFillProperties_closure4.prototype = {
    call$1(flag) {
      return type$.SemanticsFlag._as(flag).name;
    },
    $signature: typesOffset + 71
  };
  A.SemanticsNode_debugDescribeChildren_closure.prototype = {
    call$1(node) {
      return type$.SemanticsNode._as(node).toDiagnosticsNode$1$childOrder(this.childOrder);
    },
    $signature: typesOffset + 72
  };
  A._SemanticsSortGroup_sortedWithinVerticalGroup_closure.prototype = {
    call$1(group) {
      return type$._SemanticsSortGroup._as(group).sortedWithinKnot$0();
    },
    $signature: typesOffset + 23
  };
  A._SemanticsSortGroup_sortedWithinKnot_closure.prototype = {
    call$2(a, b) {
      var aTopLeft, bTopLeft, verticalDiff,
        t1 = type$.SemanticsNode;
      t1._as(a);
      t1._as(b);
      aTopLeft = A._pointInParentCoordinates(a, a.get$rect().get$topLeft());
      bTopLeft = A._pointInParentCoordinates(b, b.get$rect().get$topLeft());
      verticalDiff = J.compareTo$1$ns(aTopLeft.get$dy(), bTopLeft.get$dy());
      if (verticalDiff !== 0)
        return -verticalDiff;
      return J.$negate$in(J.compareTo$1$ns(aTopLeft.get$dx(), bTopLeft.get$dx()));
    },
    $signature: typesOffset + 74
  };
  A._SemanticsSortGroup_sortedWithinKnot_search.prototype = {
    call$1(id) {
      var t1, t2, _this = this;
      B._asInt(id);
      t1 = _this.visitedIds;
      t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t2.contains$1(t1, id)))
        return;
      t2.add$1(t1, id);
      t1 = _this.edges;
      if (B.boolConversionCheck(t1.containsKey$1(id))) {
        t1 = J.$index$asx(t1, id);
        t1.toString;
        _this.call$1(t1);
      }
      J.add$1$ax(_this.sortedIds, id);
    },
    $signature: 30
  };
  A._SemanticsSortGroup_sortedWithinKnot_closure0.prototype = {
    call$1(node) {
      return type$.SemanticsNode._as(node).get$id();
    },
    $signature: typesOffset + 75
  };
  A._SemanticsSortGroup_sortedWithinKnot_closure1.prototype = {
    call$1(id) {
      var t1 = J.$index$asx(this.nodeMap, B._asInt(id));
      t1.toString;
      return t1;
    },
    $signature: typesOffset + 115
  };
  A._childrenInDefaultOrder_closure.prototype = {
    call$1(group) {
      return type$._SemanticsSortGroup._as(group).sortedWithinVerticalGroup$0();
    },
    $signature: typesOffset + 23
  };
  A.SemanticsConfiguration__addArgumentlessAction_closure.prototype = {
    call$1(args) {
      this.handler.call$0();
    },
    $signature: 9
  };
  A.SemanticsConfiguration_onMoveCursorForwardByCharacter_closure.prototype = {
    call$1(args) {
      args.toString;
      this.value.call$1(B._asBool(args));
    },
    $signature: 9
  };
  A.SemanticsConfiguration_onMoveCursorBackwardByCharacter_closure.prototype = {
    call$1(args) {
      args.toString;
      this.value.call$1(B._asBool(args));
    },
    $signature: 9
  };
  A.SemanticsConfiguration_onSetSelection_closure.prototype = {
    call$1(args) {
      var selection, t1, t2, t3;
      args.toString;
      selection = type$.Map_dynamic_dynamic._as(args).cast$2$0(0, type$.String, type$.int);
      t1 = this.value;
      t1.toString;
      t2 = selection.$index(0, "base");
      t2.toString;
      t3 = selection.$index(0, "extent");
      t3.toString;
      t1.call$1(A.TextSelection$(C.TextAffinity_1, t2, t3, false));
    },
    $signature: 9
  };
  A.SemanticsConfiguration_onSetText_closure.prototype = {
    call$1(args) {
      args.toString;
      this.value.call$1(B._asString(args));
    },
    $signature: 9
  };
  A.SemanticsConfiguration_absorb_closure.prototype = {
    call$2(key, value) {
      var t1, t2;
      type$.SemanticsAction._as(key);
      type$.void_Function_nullable_Object._as(value);
      t1 = $.$get$_kUnblockedUserActions();
      t2 = key.index;
      if (typeof t1 !== "number")
        return t1.$and();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if ((t1 & t2) >>> 0 > 0)
        J.$indexSet$ax(this.$this._actions, key, value);
    },
    $signature: typesOffset + 78
  };
  A.CachingAssetBundle_loadString_closure.prototype = {
    call$0() {
      return this.$this.super$AssetBundle$loadString(this.key, true);
    },
    $signature: 36
  };
  A.PlatformAssetBundle_load_closure.prototype = {
    call$1(asset) {
      type$.nullable_ByteData._as(asset);
      if (asset == null)
        throw B.wrapException(A.FlutterError$fromParts(B._setArrayType([A._errorSummaryWithKey(this.key), A.ErrorDescription$(string$.The_as)], type$.JSArray_DiagnosticsNode)));
      return asset;
    },
    $signature: 99
  };
  A.StandardMessageCodec_writeValue_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this,
        t2 = this.buffer;
      t1.writeValue$2(t2, key);
      t1.writeValue$2(t2, value);
    },
    $signature: 24
  };
  A._debugLaunchProfilePlatformChannels_closure.prototype = {
    call$2(x, y) {
      var t2, t3, t4,
        t1 = type$._PlatformChannelStats;
      t1._as(x);
      t1._as(y);
      t1 = y.get$upBytes();
      t2 = y.get$downBytes();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = x.get$upBytes();
      t4 = x.get$downBytes();
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return t1 + t2 - (t3 + t4);
    },
    $signature: typesOffset + 79
  };
  A.BasicMessageChannel_setMessageHandler_closure.prototype = {
    call$1(message) {
      return this.$call$body$BasicMessageChannel_setMessageHandler_closure(type$.nullable_ByteData._as(message));
    },
    $call$body$BasicMessageChannel_setMessageHandler_closure(message) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.nullable_ByteData),
        $async$returnValue, $async$self = this, t1, $async$temp1;
      var $async$call$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this.codec;
              $async$temp1 = t1;
              $async$goto = 3;
              return B._asyncAwait($async$self.handler.call$1(t1.decodeMessage$1(message)), $async$call$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.encodeMessage$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 40
  };
  A.MethodChannel_setMethodCallHandler_closure.prototype = {
    call$1(message) {
      return this.$this._handleAsMethodCall$2(type$.nullable_ByteData._as(message), this.handler);
    },
    $signature: 40
  };
  A._getParent_closure.prototype = {
    call$1(ancestor) {
      this.parent.set$finalLocalValue(type$.Element._as(ancestor));
      return false;
    },
    $signature: typesOffset + 12
  };
  A.Actions__findDispatcher_closure.prototype = {
    call$1(element) {
      var found = type$._ActionsScope._as(type$.InheritedElement._as(element).get$widget()).dispatcher;
      if (found != null) {
        this._box_0.dispatcher = found;
        return true;
      }
      return false;
    },
    $signature: typesOffset + 81
  };
  A.FocusNode_traversalDescendants_closure.prototype = {
    call$1(node) {
      type$.FocusNode._as(node);
      return !B.boolConversionCheck(node.get$skipTraversal()) && B.boolConversionCheck(node.get$canRequestFocus());
    },
    $signature: typesOffset + 2
  };
  A.FocusNode__removeChild_closure.prototype = {
    call$1(descendant) {
      return J.$eq$(type$.FocusNode._as(descendant).get$enclosingScope(), this.nodeScope);
    },
    $signature: typesOffset + 2
  };
  A.FocusNode_debugDescribeChildren_closure.prototype = {
    call$1(child) {
      var t1, t2;
      type$.FocusNode._as(child);
      t1 = this._box_0;
      t2 = t1.count;
      if (typeof t2 !== "number")
        return t2.$add();
      t1.count = t2 + 1;
      return child.toDiagnosticsNode$1$name("Child " + B.S(t2));
    },
    $signature: typesOffset + 84
  };
  A.FocusScopeNode_debugFillProperties_closure.prototype = {
    call$1(child) {
      return type$.FocusNode._as(child).toStringShort$0();
    },
    $signature: typesOffset + 85
  };
  A._FocusState__handleFocusChanged_closure.prototype = {
    call$0() {
      this.$this.set$_hadPrimaryFocus(this.hasPrimaryFocus);
    },
    $signature: 0
  };
  A._FocusState__handleFocusChanged_closure0.prototype = {
    call$0() {
      this.$this.set$_couldRequestFocus(this.canRequestFocus);
    },
    $signature: 0
  };
  A._FocusState__handleFocusChanged_closure1.prototype = {
    call$0() {
      this.$this.set$_descendantsWereFocusable(this.descendantsAreFocusable);
    },
    $signature: 0
  };
  A._FocusState__handleFocusChanged_closure2.prototype = {
    call$0() {
      this.$this.set$_descendantsWereTraversable(this.descendantsAreTraversable);
    },
    $signature: 0
  };
  A._getAncestor_closure.prototype = {
    call$1(ancestor) {
      var t1, t2, count;
      type$.Element._as(ancestor);
      t1 = this._box_0;
      t2 = t1.count;
      if (typeof t2 !== "number")
        return t2.$sub();
      count = t2 - 1;
      t1.count = count;
      if (count === 0) {
        t1.target = ancestor;
        return false;
      }
      return true;
    },
    $signature: typesOffset + 12
  };
  A.FocusTraversalPolicy__findInitialFocus_closure.prototype = {
    call$1(node) {
      return A.FocusTraversalPolicy__canRequestTraversalFocus(type$.FocusNode._as(node));
    },
    $signature: typesOffset + 2
  };
  A.FocusTraversalPolicy__sortAllDescendants_visitGroups.prototype = {
    call$1(info) {
      var t1, t2, t3, t4, t5, t6;
      for (t1 = J.get$iterator$ax(type$._FocusTraversalGroupInfo._as(info).members), t2 = this.sortedDescendants, t3 = J.getInterceptor$ax(t2), t4 = this.groups, t5 = J.getInterceptor$asx(t4); B.boolConversionCheck(t1.moveNext$0());) {
        t6 = t1.get$current();
        if (B.boolConversionCheck(t4.containsKey$1(t6))) {
          t6 = t5.$index(t4, t6);
          t6.toString;
          this.call$1(t6);
        } else
          t3.add$1(t2, t6);
      }
    },
    $signature: typesOffset + 86
  };
  A.FocusTraversalPolicy__sortAllDescendants_closure.prototype = {
    call$1(node) {
      type$.FocusNode._as(node);
      return node !== this.currentNode && !B.boolConversionCheck(A.FocusTraversalPolicy__canRequestTraversalFocus(node));
    },
    $signature: typesOffset + 2
  };
  A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure.prototype = {
    call$1(entry) {
      return J.$eq$(type$._DirectionalPolicyDataEntry._as(entry).node, this.node);
    },
    $signature: typesOffset + 87
  };
  A.DirectionalFocusTraversalPolicyMixin_findFirstFocusInDirection_closure.prototype = {
    call$2(a, b) {
      var t1 = type$.FocusNode;
      t1._as(a);
      t1._as(b);
      t1 = this._box_0;
      if (B.boolConversionCheck(t1.vertical))
        if (B.boolConversionCheck(t1.first))
          return J.compareTo$1$ns(a.get$rect().top, b.get$rect().top);
        else
          return J.compareTo$1$ns(b.get$rect().bottom, a.get$rect().bottom);
      else if (B.boolConversionCheck(t1.first))
        return J.compareTo$1$ns(a.get$rect().left, b.get$rect().left);
      else
        return J.compareTo$1$ns(b.get$rect().right, a.get$rect().right);
    },
    $signature: typesOffset + 5
  };
  A.DirectionalFocusTraversalPolicyMixin__sortByDistancePreferVertical_closure.prototype = {
    call$2(nodeA, nodeB) {
      var a, b, vertical,
        t1 = type$.FocusNode;
      t1._as(nodeA);
      t1._as(nodeB);
      a = nodeA.get$rect().get$center();
      b = nodeB.get$rect().get$center();
      t1 = this.target;
      vertical = A.DirectionalFocusTraversalPolicyMixin__verticalCompare(t1, a, b);
      if (vertical === 0)
        return A.DirectionalFocusTraversalPolicyMixin__horizontalCompare(t1, a, b);
      return vertical;
    },
    $signature: typesOffset + 5
  };
  A.DirectionalFocusTraversalPolicyMixin__sortByDistancePreferHorizontal_closure.prototype = {
    call$2(nodeA, nodeB) {
      var a, b, horizontal,
        t1 = type$.FocusNode;
      t1._as(nodeA);
      t1._as(nodeB);
      a = nodeA.get$rect().get$center();
      b = nodeB.get$rect().get$center();
      t1 = this.target;
      horizontal = A.DirectionalFocusTraversalPolicyMixin__horizontalCompare(t1, a, b);
      if (horizontal === 0)
        return A.DirectionalFocusTraversalPolicyMixin__verticalCompare(t1, a, b);
      return horizontal;
    },
    $signature: typesOffset + 5
  };
  A.DirectionalFocusTraversalPolicyMixin__sortClosestEdgesByDistancePreferHorizontal_closure.prototype = {
    call$2(nodeA, nodeB) {
      var horizontal,
        t1 = type$.FocusNode;
      t1._as(nodeA);
      t1._as(nodeB);
      t1 = this.target;
      horizontal = A.DirectionalFocusTraversalPolicyMixin__horizontalCompareClosestEdge(t1, nodeA.get$rect(), nodeB.get$rect());
      if (horizontal === 0)
        return A.DirectionalFocusTraversalPolicyMixin__verticalCompare(t1, nodeA.get$rect().get$center(), nodeB.get$rect().get$center());
      return horizontal;
    },
    $signature: typesOffset + 5
  };
  A.DirectionalFocusTraversalPolicyMixin__sortClosestEdgesByDistancePreferVertical_closure.prototype = {
    call$2(nodeA, nodeB) {
      var vertical,
        t1 = type$.FocusNode;
      t1._as(nodeA);
      t1._as(nodeB);
      t1 = this.target;
      vertical = A.DirectionalFocusTraversalPolicyMixin__verticalCompareClosestEdge(t1, nodeA.get$rect(), nodeB.get$rect());
      if (vertical === 0)
        return A.DirectionalFocusTraversalPolicyMixin__horizontalCompare(t1, nodeA.get$rect().get$center(), nodeB.get$rect().get$center());
      return vertical;
    },
    $signature: typesOffset + 5
  };
  A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure.prototype = {
    call$1(node) {
      var t1, t2;
      type$.FocusNode._as(node);
      t1 = this.target;
      if (!B.boolConversionCheck(J.$eq$(node.get$rect(), t1))) {
        t2 = node.get$rect().get$center().get$dx();
        t1 = t1.left;
        if (typeof t2 !== "number")
          return t2.$le();
        if (typeof t1 !== "number")
          return B.iae(t1);
        t1 = t2 <= t1;
      } else
        t1 = false;
      return t1;
    },
    $signature: typesOffset + 2
  };
  A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0.prototype = {
    call$1(node) {
      var t1, t2;
      type$.FocusNode._as(node);
      t1 = this.target;
      if (!B.boolConversionCheck(J.$eq$(node.get$rect(), t1))) {
        t2 = node.get$rect().get$center().get$dx();
        t1 = t1.right;
        if (typeof t2 !== "number")
          return t2.$ge();
        if (typeof t1 !== "number")
          return B.iae(t1);
        t1 = t2 >= t1;
      } else
        t1 = false;
      return t1;
    },
    $signature: typesOffset + 2
  };
  A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1.prototype = {
    call$2(a, b) {
      var t1 = type$.FocusNode;
      t1._as(a);
      t1._as(b);
      return J.compareTo$1$ns(a.get$rect().get$center().get$dx(), b.get$rect().get$center().get$dx());
    },
    $signature: typesOffset + 5
  };
  A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure.prototype = {
    call$1(node) {
      var t1, t2;
      type$.FocusNode._as(node);
      t1 = this.target;
      if (!B.boolConversionCheck(J.$eq$(node.get$rect(), t1))) {
        t2 = node.get$rect().get$center().get$dy();
        t1 = t1.top;
        if (typeof t2 !== "number")
          return t2.$le();
        if (typeof t1 !== "number")
          return B.iae(t1);
        t1 = t2 <= t1;
      } else
        t1 = false;
      return t1;
    },
    $signature: typesOffset + 2
  };
  A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0.prototype = {
    call$1(node) {
      var t1, t2;
      type$.FocusNode._as(node);
      t1 = this.target;
      if (!B.boolConversionCheck(J.$eq$(node.get$rect(), t1))) {
        t2 = node.get$rect().get$center().get$dy();
        t1 = t1.bottom;
        if (typeof t2 !== "number")
          return t2.$ge();
        if (typeof t1 !== "number")
          return B.iae(t1);
        t1 = t2 >= t1;
      } else
        t1 = false;
      return t1;
    },
    $signature: typesOffset + 2
  };
  A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1.prototype = {
    call$2(a, b) {
      var t1 = type$.FocusNode;
      t1._as(a);
      t1._as(b);
      return J.compareTo$1$ns(a.get$rect().get$center().get$dy(), b.get$rect().get$center().get$dy());
    },
    $signature: typesOffset + 5
  };
  A.DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate.prototype = {
    call$1(direction) {
      var lastNode, t1, t2, alignmentPolicy, _this = this;
      type$.TraversalDirection._as(direction);
      lastNode = J.removeLast$0$ax(_this.policyData.history).node;
      t1 = lastNode.get$context();
      t1.toString;
      t1 = A.Scrollable_maybeOf(t1);
      t2 = A.primaryFocus().get$context();
      t2.toString;
      if (!B.boolConversionCheck(J.$eq$(t1, A.Scrollable_maybeOf(t2)))) {
        _this.$this.invalidateScopeData$1(_this.nearestScope);
        return false;
      }
      switch (direction.index) {
        case 0:
        case 3:
          alignmentPolicy = C.ScrollPositionAlignmentPolicy_2;
          break;
        case 1:
        case 2:
          alignmentPolicy = C.ScrollPositionAlignmentPolicy_1;
          break;
        default:
          alignmentPolicy = null;
      }
      _this.$this.requestFocusCallback$2$alignmentPolicy(lastNode, alignmentPolicy);
      return true;
    },
    $signature: typesOffset + 89
  };
  A.DirectionalFocusTraversalPolicyMixin_inDirection_closure.prototype = {
    call$1(node) {
      return !B.boolConversionCheck(J.get$isEmpty$asx(type$.FocusNode._as(node).get$rect().intersect$1(this.band)));
    },
    $signature: typesOffset + 2
  };
  A.DirectionalFocusTraversalPolicyMixin_inDirection_closure0.prototype = {
    call$1(node) {
      return !B.boolConversionCheck(J.get$isEmpty$asx(type$.FocusNode._as(node).get$rect().intersect$1(this.band)));
    },
    $signature: typesOffset + 2
  };
  A._ReadingOrderSortData_commonDirectionalityOf_closure.prototype = {
    call$1(member) {
      return J.toSet$0$ax(type$._ReadingOrderSortData._as(member).get$directionalAncestors());
    },
    $signature: typesOffset + 90
  };
  A._ReadingOrderSortData_sortWithDirectionality_closure.prototype = {
    call$2(a, b) {
      var t1 = type$._ReadingOrderSortData;
      t1._as(a);
      t1._as(b);
      switch (this.directionality) {
        case C.TextDirection_1:
          t1 = J.compareTo$1$ns(a.rect.left, b.rect.left);
          break;
        case C.TextDirection_0:
          t1 = J.compareTo$1$ns(b.rect.right, a.rect.right);
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    $signature: typesOffset + 24
  };
  A._ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors.prototype = {
    call$1(context) {
      var result, t1, directionalityElement, t2;
      type$.BuildContext._as(context);
      result = B._setArrayType([], type$.JSArray_Directionality);
      t1 = type$.Directionality;
      directionalityElement = context.getElementForInheritedWidgetOfExactType$1$0(t1);
      for (; directionalityElement != null;) {
        D.JSArray_methods.add$1(result, t1._as(directionalityElement.get$widget()));
        t2 = A._getAncestor(directionalityElement);
        directionalityElement = t2 == null ? null : t2.getElementForInheritedWidgetOfExactType$1$0(t1);
      }
      return result;
    },
    $signature: typesOffset + 92
  };
  A._ReadingOrderDirectionalGroupData_rect_closure.prototype = {
    call$1(data) {
      return type$._ReadingOrderSortData._as(data).rect;
    },
    $signature: typesOffset + 93
  };
  A._ReadingOrderDirectionalGroupData_sortWithDirectionality_closure.prototype = {
    call$2(a, b) {
      var t1 = type$._ReadingOrderDirectionalGroupData;
      t1._as(a);
      t1._as(b);
      switch (this.directionality) {
        case C.TextDirection_1:
          t1 = J.compareTo$1$ns(a.get$rect().left, b.get$rect().left);
          break;
        case C.TextDirection_0:
          t1 = J.compareTo$1$ns(b.get$rect().right, a.get$rect().right);
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    $signature: typesOffset + 94
  };
  A._ReadingOrderDirectionalGroupData_debugFillProperties_closure.prototype = {
    call$1(member) {
      type$._ReadingOrderSortData._as(member);
      return '"' + B.S(member.node.get$debugLabel()) + '"(' + B.S(member.rect) + ")";
    },
    $signature: typesOffset + 95
  };
  A.ReadingOrderTraversalPolicy__pickNext_closure.prototype = {
    call$2(a, b) {
      var t1 = type$._ReadingOrderSortData;
      t1._as(a);
      t1._as(b);
      return J.compareTo$1$ns(a.rect.top, b.rect.top);
    },
    $signature: typesOffset + 24
  };
  A.ReadingOrderTraversalPolicy__pickNext_inBand.prototype = {
    call$2(current, candidates) {
      var t1 = type$._ReadingOrderSortData._as(current).rect;
      return J.toList$0$ax(J.where$1$ax(type$.Iterable__ReadingOrderSortData._as(candidates), new A.ReadingOrderTraversalPolicy__pickNext_inBand_closure(A.Rect$fromLTRB(-1 / 0, t1.top, 1 / 0, t1.bottom))));
    },
    $signature: typesOffset + 96
  };
  A.ReadingOrderTraversalPolicy__pickNext_inBand_closure.prototype = {
    call$1(item) {
      return !B.boolConversionCheck(J.get$isEmpty$asx(type$._ReadingOrderSortData._as(item).rect.intersect$1(this.band)));
    },
    $signature: typesOffset + 97
  };
  A.Element_renderObjectAttachingChild_closure.prototype = {
    call$1(child) {
      this._box_0.next = type$.Element._as(child);
    },
    $signature: typesOffset + 4
  };
  A.Element_updateChildren_replaceWithNullIfForgotten0.prototype = {
    call$1(child) {
      var t1;
      type$.Element._as(child);
      t1 = this.forgottenChildren;
      return t1 != null && B.boolConversionCheck(J.contains$1$asx(t1, child)) ? null : child;
    },
    $signature: typesOffset + 99
  };
  A.Element_updateChildren_slotFor.prototype = {
    call$2(newChildIndex, previousChild) {
      var t1, t2;
      B._asInt(newChildIndex);
      t1 = type$.nullable_Element;
      t1._as(previousChild);
      t2 = this.slots;
      return t2 != null ? J.$index$asx(t2, newChildIndex) : A.IndexedSlot$(newChildIndex, previousChild, t1);
    },
    $signature: typesOffset + 100
  };
  A.Element_updateSlotForChild_visit.prototype = {
    call$1(element) {
      var descendant;
      type$.Element._as(element);
      element.updateSlot$1(this.newSlot);
      descendant = element.get$renderObjectAttachingChild();
      if (descendant != null)
        this.call$1(descendant);
    },
    $signature: typesOffset + 4
  };
  A.Element__updateDepth_closure.prototype = {
    call$1(child) {
      type$.Element._as(child)._updateDepth$1(this.expectedDepth);
    },
    $signature: typesOffset + 4
  };
  A.Element__updateBuildScopeRecursively_closure.prototype = {
    call$1(child) {
      type$.Element._as(child)._updateBuildScopeRecursively$0();
    },
    $signature: typesOffset + 4
  };
  A.Element_detachRenderObject_closure0.prototype = {
    call$1(child) {
      type$.Element._as(child).detachRenderObject$0();
    },
    $signature: typesOffset + 4
  };
  A.Element_attachRenderObject_closure.prototype = {
    call$1(child) {
      type$.Element._as(child).attachRenderObject$1(this.newSlot);
    },
    $signature: typesOffset + 4
  };
  A.Element_debugFillProperties_closure.prototype = {
    call$2(a, b) {
      var t1 = type$.InheritedElement;
      t1._as(a);
      t1._as(b);
      return J.compareTo$1$ns(a.toStringShort$0(), b.toStringShort$0());
    },
    $signature: typesOffset + 101
  };
  A.Element_debugFillProperties_closure0.prototype = {
    call$1(element) {
      return type$.InheritedElement._as(element).get$widget().toDiagnosticsNode$1$style(C.DiagnosticsTreeStyle_1);
    },
    $signature: typesOffset + 102
  };
  A.Element_debugDescribeChildren_closure.prototype = {
    call$1(child) {
      J.add$1$ax(this.children, type$.Element._as(child).toDiagnosticsNode$0());
    },
    $signature: typesOffset + 4
  };
  A.ComponentElement_performRebuild_closure.prototype = {
    call$0() {
      var t1 = B._setArrayType([], type$.JSArray_DiagnosticsNode);
      J.add$1$ax(t1, A.DiagnosticsDebugCreator$(A.DebugCreator$(this.$this)));
      return t1;
    },
    $signature: typesOffset + 7
  };
  A.ComponentElement_performRebuild_closure0.prototype = {
    call$0() {
      var t1 = B._setArrayType([], type$.JSArray_DiagnosticsNode);
      J.add$1$ax(t1, A.DiagnosticsDebugCreator$(A.DebugCreator$(this.$this)));
      return t1;
    },
    $signature: typesOffset + 7
  };
  A.InheritedModel__findModels_closure.prototype = {
    call$1(ancestor) {
      this._box_0.modelParent = type$.Element._as(ancestor);
      return false;
    },
    $signature: typesOffset + 12
  };
  A.MediaQuery_updateShouldNotifyDependent_closure.prototype = {
    call$1(dependency) {
      var t1, _this = this;
      type$.Object._as(dependency);
      if (dependency instanceof A._MediaQueryAspect) {
        switch (dependency.index) {
          case 0:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.size, _this.oldWidget.data.size));
            break;
          case 1:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.get$orientation(), _this.oldWidget.data.get$orientation()));
            break;
          case 2:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.devicePixelRatio, _this.oldWidget.data.devicePixelRatio));
            break;
          case 3:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.get$textScaleFactor(), _this.oldWidget.data.get$textScaleFactor()));
            break;
          case 4:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.get$textScaler(), _this.oldWidget.data.get$textScaler()));
            break;
          case 5:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.platformBrightness, _this.oldWidget.data.platformBrightness));
            break;
          case 6:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.padding, _this.oldWidget.data.padding));
            break;
          case 7:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.viewInsets, _this.oldWidget.data.viewInsets));
            break;
          case 9:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.viewPadding, _this.oldWidget.data.viewPadding));
            break;
          case 12:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.invertColors, _this.oldWidget.data.invertColors));
            break;
          case 13:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.highContrast, _this.oldWidget.data.highContrast));
            break;
          case 14:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.onOffSwitchLabels, _this.oldWidget.data.onOffSwitchLabels));
            break;
          case 15:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.disableAnimations, _this.oldWidget.data.disableAnimations));
            break;
          case 16:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.boldText, _this.oldWidget.data.boldText));
            break;
          case 17:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.navigationMode, _this.oldWidget.data.navigationMode));
            break;
          case 18:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.gestureSettings, _this.oldWidget.data.gestureSettings));
            break;
          case 19:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.displayFeatures, _this.oldWidget.data.displayFeatures));
            break;
          case 8:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.systemGestureInsets, _this.oldWidget.data.systemGestureInsets));
            break;
          case 11:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.accessibleNavigation, _this.oldWidget.data.accessibleNavigation));
            break;
          case 10:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.alwaysUse24HourFormat, _this.oldWidget.data.alwaysUse24HourFormat));
            break;
          case 20:
            t1 = !B.boolConversionCheck(J.$eq$(_this.$this.data.supportsShowingSystemContextMenu, _this.oldWidget.data.supportsShowingSystemContextMenu));
            break;
          default:
            t1 = null;
        }
        B.boolConversionCheck(t1);
      } else
        t1 = false;
      return t1;
    },
    $signature: 107
  };
  A.Scrollable_ensureVisible_closure.prototype = {
    call$1(_) {
      type$.List_void._as(_);
      return null;
    },
    $signature: 108
  };
  (function aliases() {
    var _ = A._SaveStackTracking.prototype;
    _.super$_SaveStackTracking$clear = _.clear$0;
    _.super$_SaveStackTracking$save = _.save$0;
    _.super$_SaveStackTracking$restore = _.restore$0;
    _.super$_SaveStackTracking$translate = _.translate$2;
    _.super$_SaveStackTracking$scale = _.scale$2;
    _.super$_SaveStackTracking$transform = _.transform$1;
    _.super$_SaveStackTracking$clipRect = _.clipRect$1;
    _.super$_SaveStackTracking$clipRRect = _.clipRRect$1;
    _.super$_SaveStackTracking$clipPath = _.clipPath$1;
    _ = A.ContainerLayer.prototype;
    _.super$ContainerLayer$preroll = _.preroll$2;
    _ = A._DomClip.prototype;
    _.super$_DomClip$createElement = _.createElement$0;
    _ = A.PersistedSurface.prototype;
    _.super$PersistedSurface$revive = _.revive$0;
    _.super$PersistedSurface$build = _.build$0;
    _.super$PersistedSurface$adoptElements = _.adoptElements$1;
    _.super$PersistedSurface$update = _.update$1;
    _.super$PersistedSurface$retain = _.retain$0;
    _.super$PersistedSurface$discard = _.discard$0;
    _.super$PersistedSurface$preroll = _.preroll$1;
    _ = A.PersistedContainerSurface.prototype;
    _.super$PersistedContainerSurface$recomputeTransformAndClip = _.recomputeTransformAndClip$0;
    _.super$PersistedContainerSurface$update = _.update$1;
    _.super$PersistedContainerSurface$discard = _.discard$0;
    _ = A.PrimaryRoleManager.prototype;
    _.super$PrimaryRoleManager$update = _.update$0;
    _.super$PrimaryRoleManager$dispose = _.dispose$0;
    _ = A.DefaultTextEditingStrategy.prototype;
    _.super$DefaultTextEditingStrategy$initializeTextEditing = _.initializeTextEditing$3$onAction$onChange;
    _.super$DefaultTextEditingStrategy$updateElementStyle = _.updateElementStyle$1;
    _.super$DefaultTextEditingStrategy$disable = _.disable$0;
    _.super$DefaultTextEditingStrategy$enable = _.enable$3$onAction$onChange;
    _ = A.DimensionsProvider.prototype;
    _.super$DimensionsProvider$close = _.close$0;
    _ = A.EngineFlutterView.prototype;
    _.super$EngineFlutterView$dispose = _.dispose$0;
    _ = A._BroadcastStreamController.prototype;
    _.super$_BroadcastStreamController$_addEventError = _._addEventError$0;
    _ = A.Color.prototype;
    _.super$Color$$eq = _.$eq;
    _.super$Color$toString = _.toString$0;
    _ = A.ParametricCurve.prototype;
    _.super$ParametricCurve$transform = _.transform$1;
    _ = A.ChangeNotifier.prototype;
    _.super$ChangeNotifier$addListener = _.addListener$1;
    _.super$ChangeNotifier$removeListener = _.removeListener$1;
    _.super$ChangeNotifier$dispose = _.dispose$0;
    _ = A.DiagnosticsProperty.prototype;
    _.super$DiagnosticsProperty$valueToString = _.valueToString$1$parentConfiguration;
    _ = A.Diagnosticable.prototype;
    _.super$Diagnosticable$toStringShort = _.toStringShort$0;
    _.super$Diagnosticable$debugFillProperties = _.debugFillProperties$1;
    _ = A.DiagnosticableTreeMixin.prototype;
    _.super$DiagnosticableTreeMixin$toStringDeep = _.toStringDeep$3$minLevel$prefixLineOne$prefixOtherLines;
    _.super$DiagnosticableTreeMixin$toStringShort = _.toStringShort$0;
    _.super$DiagnosticableTreeMixin$debugFillProperties = _.debugFillProperties$1;
    _ = A.EdgeInsetsGeometry.prototype;
    _.super$EdgeInsetsGeometry$add = _.add$1;
    _ = A.BoxParentData.prototype;
    _.super$BoxParentData$toString = _.toString$0;
    _ = A.RenderBox.prototype;
    _.super$RenderBox$computeDistanceToActualBaseline = _.computeDistanceToActualBaseline$1;
    _.super$RenderBox$markNeedsLayout = _.markNeedsLayout$0;
    _.super$RenderBox$performResize = _.performResize$0;
    _.super$RenderBox$hitTest = _.hitTest$2$position;
    _.super$RenderBox$debugFillProperties = _.debugFillProperties$1;
    _ = A.Layer0.prototype;
    _.super$Layer$_fireCompositionCallbacks = _._fireCompositionCallbacks$1$includeChildren;
    _.super$Layer$dispose = _.dispose$0;
    _.super$Layer$updateSubtreeNeedsAddToScene = _.updateSubtreeNeedsAddToScene$0;
    _.super$Layer$attach = _.attach$1;
    _.super$Layer$detach = _.detach$0;
    _.super$Layer$debugFillProperties = _.debugFillProperties$1;
    _ = A.ContainerLayer0.prototype;
    _.super$ContainerLayer$findAnnotations = _.findAnnotations$1$3$onlyFirst;
    _.super$ContainerLayer$attach = _.attach$1;
    _.super$ContainerLayer$detach = _.detach$0;
    _ = A.OffsetLayer.prototype;
    _.super$OffsetLayer$findAnnotations = _.findAnnotations$1$3$onlyFirst;
    _.super$OffsetLayer$debugFillProperties = _.debugFillProperties$1;
    _ = A.ParentData.prototype;
    _.super$ParentData$detach = _.detach$0;
    _ = A.RenderObject.prototype;
    _.super$RenderObject$dispose = _.dispose$0;
    _.super$RenderObject$attach = _.attach$1;
    _.super$RenderObject$detach = _.detach$0;
    _.super$RenderObject$markNeedsLayout = _.markNeedsLayout$0;
    _.super$RenderObject$applyPaintTransform = _.applyPaintTransform$2;
    _.super$RenderObject$describeSemanticsConfiguration = _.describeSemanticsConfiguration$1;
    _.super$RenderObject$clearSemantics = _.clearSemantics$0;
    _.super$RenderObject$visitChildrenForSemantics = _.visitChildrenForSemantics$1;
    _.super$RenderObject$assembleSemanticsNode = _.assembleSemanticsNode$3;
    _.super$RenderObject$handleEvent = _.handleEvent$2;
    _.super$RenderObject$toStringShort = _.toStringShort$0;
    _.super$RenderObject$debugFillProperties = _.debugFillProperties$1;
    _ = A._InterestingSemanticsFragment.prototype;
    _.super$_InterestingSemanticsFragment$addTags = _.addTags$1;
    _ = A.RenderProxyBoxMixin.prototype;
    _.super$RenderProxyBoxMixin$computeDryBaseline = _.computeDryBaseline$2;
    _.super$RenderProxyBoxMixin$computeDryLayout = _.computeDryLayout$1;
    _.super$RenderProxyBoxMixin$performLayout = _.performLayout$0;
    _.super$RenderProxyBoxMixin$hitTestChildren = _.hitTestChildren$2$position;
    _.super$RenderProxyBoxMixin$paint = _.paint$2;
    _ = A._RenderProxyBox_RenderBox_RenderObjectWithChildMixin.prototype;
    _.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach = _.attach$1;
    _.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach = _.detach$0;
    _ = A._RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin.prototype;
    _.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin$computeDistanceToActualBaseline = _.computeDistanceToActualBaseline$1;
    _ = A.AssetBundle.prototype;
    _.super$AssetBundle$loadString = _.loadString$2$cache;
    _ = A.MethodChannel.prototype;
    _.super$MethodChannel$_invokeMethod = _._invokeMethod$1$3$arguments$missingOk;
    _ = A.WidgetsBindingObserver.prototype;
    _.super$WidgetsBindingObserver$didChangeAppLifecycleState = _.didChangeAppLifecycleState$1;
    _ = A.FocusNode.prototype;
    _.super$FocusNode$debugFillProperties = _.debugFillProperties$1;
    _ = A.FocusTraversalPolicy.prototype;
    _.super$FocusTraversalPolicy$invalidateScopeData = _.invalidateScopeData$1;
    _.super$FocusTraversalPolicy$changedScope = _.changedScope$2$node$oldScope;
    _ = A.Widget.prototype;
    _.super$Widget$toStringShort = _.toStringShort$0;
    _.super$Widget$debugFillProperties = _.debugFillProperties$1;
    _ = A.State0.prototype;
    _.super$State$initState0 = _.initState$0;
    _.super$State$didUpdateWidget = _.didUpdateWidget$1;
    _.super$State$deactivate = _.deactivate$0;
    _.super$State$activate = _.activate$0;
    _.super$State$dispose = _.dispose$0;
    _.super$State$didChangeDependencies = _.didChangeDependencies$0;
    _.super$State$debugFillProperties = _.debugFillProperties$1;
    _ = A.Element0.prototype;
    _.super$Element$mount0 = _.mount$2;
    _.super$Element$update0 = _.update$1;
    _.super$Element$updateSlot = _.updateSlot$1;
    _.super$Element$attachRenderObject = _.attachRenderObject$1;
    _.super$Element$inflateWidget = _.inflateWidget$2;
    _.super$Element$forgetChild = _.forgetChild$1;
    _.super$Element$activate = _.activate$0;
    _.super$Element$deactivate0 = _.deactivate$0;
    _.super$Element$unmount = _.unmount$0;
    _.super$Element$dependOnInheritedElement = _.dependOnInheritedElement$2$aspect;
    _.super$Element$didChangeDependencies = _.didChangeDependencies$0;
    _.super$Element$debugFillProperties = _.debugFillProperties$1;
    _.super$Element$performRebuild = _.performRebuild$0;
    _ = A.ComponentElement.prototype;
    _.super$ComponentElement$_firstBuild = _._firstBuild$0;
    _.super$ComponentElement$performRebuild = _.performRebuild$0;
    _ = A.ProxyElement0.prototype;
    _.super$ProxyElement$build = _.build$0;
    _.super$ProxyElement$update = _.update$1;
    _.super$ProxyElement$updated = _.updated$1;
    _ = A.InheritedElement.prototype;
    _.super$InheritedElement$notifyClients = _.notifyClients$1;
    _ = A.RenderObjectElement.prototype;
    _.super$RenderObjectElement$mount = _.mount$2;
    _.super$RenderObjectElement$update = _.update$1;
    _.super$RenderObjectElement$performRebuild = _.performRebuild$0;
    _.super$RenderObjectElement$deactivate = _.deactivate$0;
    _.super$RenderObjectElement$unmount = _.unmount$0;
    _.super$RenderObjectElement$updateSlot = _.updateSlot$1;
  })();
  (function installTearOffs() {
    var _static_2 = hunkHelpers._static_2,
      _static_1 = hunkHelpers._static_1,
      _static = hunkHelpers.installStaticTearOff,
      _static_0 = hunkHelpers._static_0,
      _instance_0_u = hunkHelpers._instance_0u,
      _instance_1_u = hunkHelpers._instance_1u,
      _instance_1_i = hunkHelpers._instance_1i,
      _instance_2_u = hunkHelpers._instance_2u,
      _instance = hunkHelpers.installInstanceTearOff;
    _static_2(A, "_engine__canvasKitWasmModuleUrl$closure", "canvasKitWasmModuleUrl", 103);
    _static_1(A, "_engine_BitmapCanvas__onEvictElement$closure", "BitmapCanvas__onEvictElement", 1);
    _static(A, "_engine___defaultFactory$closure", 1, null, ["call$2$params", "call$1"], ["_defaultFactory", function(viewId) {
      return A._defaultFactory(viewId, null);
    }], 104, 0);
    _static_0(A, "_engine_SizedSpanRepresentation__updateSizes$closure", "SizedSpanRepresentation__updateSizes", 0);
    _static_1(A, "_engine___emptyCallback$closure", "_emptyCallback", 10);
    _instance_0_u(A.AlarmClock.prototype, "get$_timerDidFire", "_timerDidFire$0", 0);
    _instance_1_u(A.CkCanvas.prototype, "get$drawPicture", "drawPicture$1", 43);
    _instance_1_u(A.HtmlViewEmbedder.prototype, "get$disposeView", "disposeView$1", 8);
    _instance_1_u(A.CkNWayCanvas.prototype, "get$addCanvas", "addCanvas$1", 38);
    var _;
    _instance_1_u(_ = A.CanvasKitRenderer.prototype, "get$_onViewCreated", "_onViewCreated$1", 8);
    _instance_1_u(_, "get$_onViewDisposed", "_onViewDisposed$1", 8);
    _instance_1_u(_ = A.Surface.prototype, "get$_contextRestoredListener", "_contextRestoredListener$1", 1);
    _instance_1_u(_, "get$_contextLostListener", "_contextLostListener$1", 1);
    _instance_1_i(_ = A.FallbackFontDownloadQueue.prototype, "get$add", "add$1", 50);
    _instance_0_u(_, "get$startDownloads", "startDownloads$0", 51);
    _instance_1_u(A.HighContrastSupport.prototype, "get$_onHighContrastChange", "_onHighContrastChange$1", 1);
    _instance_0_u(_ = A.EnginePlatformDispatcher.prototype, "get$dispose", "dispose$0", 0);
    _instance_1_u(_, "get$invokeOnViewFocusChange", "invokeOnViewFocusChange$1", 73);
    _instance_1_u(_, "get$_setAppLifecycleState", "_setAppLifecycleState$1", 80);
    _instance_1_u(_, "get$_updateHighContrast", "_updateHighContrast$1", 9);
    _instance_1_u(A._BrowserAppLifecycleState.prototype, "get$_onViewCountChanged", "_onViewCountChanged$1", 10);
    _instance_1_u(A.ViewFocusBinding.prototype, "get$_handleViewCreated", "_handleViewCreated$1", 8);
    _instance_2_u(_ = A.ClickDebouncer.prototype, "get$onPointerData", "onPointerData$2", 91);
    _instance_0_u(_, "get$_onTimerExpired", "_onTimerExpired$0", 0);
    _instance_1_u(A.TextLayoutService.prototype, "get$_positionLineFragments", "_positionLineFragments$1", 32);
    _instance_1_u(A.Spanometer.prototype, "get$measureFragment", "measureFragment$1", 33);
    _instance_0_u(A.RulerHost.prototype, "get$dispose", "dispose$0", 0);
    _instance_1_u(_ = A.CompositionAwareMixin.prototype, "get$_handleCompositionStart", "_handleCompositionStart$1", 1);
    _instance_1_u(_, "get$_handleCompositionUpdate", "_handleCompositionUpdate$1", 1);
    _instance_1_u(_, "get$_handleCompositionEnd", "_handleCompositionEnd$1", 1);
    _instance_1_u(_ = A.DefaultTextEditingStrategy.prototype, "get$handleChange", "handleChange$1", 1);
    _instance_1_u(_, "get$handleBeforeInput", "handleBeforeInput$1", 1);
    _instance_1_u(_, "get$handleBlur", "handleBlur$1", 1);
    _instance_1_u(_, "get$maybeSendAction", "maybeSendAction$1", 1);
    _instance_1_u(A.FullPageDimensionsProvider.prototype, "get$_onVisualViewportResize", "_onVisualViewportResize$1", 1);
    _instance_1_u(A.DisplayDprStream.prototype, "get$_onDprMediaQueryChange", "_onDprMediaQueryChange$1", 1);
    _instance_1_u(A.FlutterViewManager.prototype, "get$disposeAndUnregisterView", "disposeAndUnregisterView$1", 37);
    _instance_0_u(_ = A.EngineFlutterView.prototype, "get$dispose", "dispose$0", 0);
    _instance_1_u(_, "get$_didResize", "_didResize$1", 39);
    _static_0(A, "_js_helper_Primitives_dateNow$closure", "Primitives_dateNow", 105);
    _instance_1_i(A.ConstantStringSet.prototype, "get$contains", "contains$1", 15);
    _instance_1_i(A.GeneralConstantSet.prototype, "get$contains", "contains$1", 15);
    _static_1(A, "async___nullDataHandler$closure", "_nullDataHandler", 10);
    _static_2(A, "async___nullErrorHandler$closure", "_nullErrorHandler", 106);
    _static_0(A, "async___nullDoneHandler$closure", "_nullDoneHandler", 0);
    _instance_1_i(A._BroadcastStreamController.prototype, "get$add", "add$1", 16);
    _instance_0_u(A._DoneStreamSubscription.prototype, "get$_onMicrotask", "_onMicrotask$0", 0);
    _static_1(A, "core_Uri_decodeComponent$closure", "Uri_decodeComponent", 107);
    _static_0(A, "core__Uri__createList$closure", "_Uri__createList", 108);
    _static_2(A, "core___toUnmodifiableStringList$closure", "_toUnmodifiableStringList", 109);
    _instance_1_u(A._StoredMessage.prototype, "get$invoke", "invoke$1", 42);
    _instance_0_u(A._Channel.prototype, "get$_drainStep", "_drainStep$0", 0);
    _instance(A.PointerData.prototype, "get$respond", 0, 0, null, ["call$1$allowPlatformDefault"], ["respond$1$allowPlatformDefault"], 44, 0, 0);
    _static(A, "assertions_FlutterError_dumpErrorToConsole$closure", 1, null, ["call$2$forceReport", "call$1"], ["FlutterError_dumpErrorToConsole", function(details) {
      return A.FlutterError_dumpErrorToConsole(details, false);
    }], 110, 0);
    _static_1(A, "assertions_FlutterError_defaultStackFilter$closure", "FlutterError_defaultStackFilter", 111);
    _static_1(A, "assertions_DiagnosticsStackTrace__createStackFrame$closure", "DiagnosticsStackTrace__createStackFrame", 112);
    _instance_1_u(_ = A.ChangeNotifier.prototype, "get$addListener", "addListener$1", 11);
    _instance_1_u(_, "get$removeListener", "removeListener$1", 11);
    _instance_0_u(_, "get$notifyListeners", "notifyListeners$0", 0);
    _instance_1_i(A.DiagnosticPropertiesBuilder.prototype, "get$add", "add$1", 18);
    _static(A, "print__debugPrintThrottled$closure", 1, null, ["call$2$wrapWidth", "call$1"], ["debugPrintThrottled", function(message) {
      return A.debugPrintThrottled(message, null);
    }], 113, 0);
    _static_0(A, "print___debugPrintTask$closure", "_debugPrintTask", 0);
    _static_1(A, "stack_frame_StackFrame_fromStackTraceLine$closure", "StackFrame_fromStackTraceLine", 114);
    _instance_1_u(_ = A.RenderBox.prototype, "get$_computeDryLayout", "_computeDryLayout$1", 55);
    _instance_1_u(_, "get$_computeDryBaseline", "_computeDryBaseline$1", 20);
    _static_1(A, "object_RenderObject__cleanChildRelayoutBoundary$closure", "RenderObject__cleanChildRelayoutBoundary", 6);
    _static_1(A, "object_RenderObject__propagateRelayoutBoundaryToChild$closure", "RenderObject__propagateRelayoutBoundaryToChild", 6);
    _instance_1_u(_ = A.RenderObject.prototype, "get$redepthChild", "redepthChild$1", 6);
    _instance_0_u(_, "get$markNeedsPaint", "markNeedsPaint$0", 0);
    _instance_0_u(_, "get$markNeedsSemanticsUpdate", "markNeedsSemanticsUpdate$0", 0);
    _instance(_, "get$_marksExplicitInMergeGroup", 0, 1, null, ["call$2$isMergeUp", "call$1"], ["_marksExplicitInMergeGroup$2$isMergeUp", "_marksExplicitInMergeGroup$1"], 58, 0, 0);
    _instance(_, "get$showOnScreen", 0, 0, null, ["call$4$curve$descendant$duration$rect", "call$0", "call$2$descendant$rect"], ["showOnScreen$4$curve$descendant$duration$rect", "showOnScreen$0", "showOnScreen$2$descendant$rect"], 59, 0, 0);
    _instance(A.RenderProxyBoxMixin.prototype, "get$paint", 0, 2, null, ["call$2"], ["paint$2"], 61, 0, 1);
    _instance_0_u(_ = A.RenderSemanticsAnnotations.prototype, "get$_performTap", "_performTap$0", 0);
    _instance_0_u(_, "get$_performLongPress", "_performLongPress$0", 0);
    _instance_0_u(_, "get$_performDismiss", "_performDismiss$0", 0);
    _instance_0_u(_, "get$_performScrollLeft", "_performScrollLeft$0", 0);
    _instance_0_u(_, "get$_performScrollRight", "_performScrollRight$0", 0);
    _instance_0_u(_, "get$_performScrollUp", "_performScrollUp$0", 0);
    _instance_0_u(_, "get$_performScrollDown", "_performScrollDown$0", 0);
    _instance_0_u(_, "get$_performIncrease", "_performIncrease$0", 0);
    _instance_0_u(_, "get$_performDecrease", "_performDecrease$0", 0);
    _instance_0_u(_, "get$_performCopy", "_performCopy$0", 0);
    _instance_0_u(_, "get$_performCut", "_performCut$0", 0);
    _instance_0_u(_, "get$_performPaste", "_performPaste$0", 0);
    _instance_1_u(_, "get$_performMoveCursorForwardByCharacter", "_performMoveCursorForwardByCharacter$1", 9);
    _instance_1_u(_, "get$_performMoveCursorBackwardByCharacter", "_performMoveCursorBackwardByCharacter$1", 9);
    _instance_1_u(_, "get$_performSetSelection", "_performSetSelection$1", 62);
    _instance_1_u(_, "get$_performSetText", "_performSetText$1", 63);
    _instance_0_u(_, "get$_performDidGainAccessibilityFocus", "_performDidGainAccessibilityFocus$0", 0);
    _instance_0_u(_, "get$_performDidLoseAccessibilityFocus", "_performDidLoseAccessibilityFocus$0", 0);
    _instance_0_u(_, "get$_performFocus", "_performFocus$0", 0);
    _instance_1_u(_ = A.SemanticsNode.prototype, "get$_redepthChild", "_redepthChild$1", 22);
    _instance_1_u(_, "get$_updateChildMergeFlagRecursively", "_updateChildMergeFlagRecursively$1", 22);
    _instance_1_u(_ = A.SemanticsConfiguration.prototype, "get$_onCustomSemanticsAction", "_onCustomSemanticsAction$1", 16);
    _instance_1_u(_, "get$addTagForChildren", "addTagForChildren$1", 77);
    _static_1(A, "focus_manager_FocusNode__allowDescendantsToBeFocused$closure", "FocusNode__allowDescendantsToBeFocused", 2);
    _instance(A.FocusNode.prototype, "get$requestFocus", 0, 0, null, ["call$1", "call$0"], ["requestFocus$1", "requestFocus$0"], 82, 0, 0);
    _instance_0_u(A._FocusState.prototype, "get$_handleFocusChanged", "_handleFocusChanged$0", 0);
    _static(A, "focus_traversal_FocusTraversalPolicy_defaultTraversalRequestFocusCallback$closure", 1, null, ["call$5$alignment$alignmentPolicy$curve$duration", "call$1", "call$2$duration", "call$3$curve$duration", "call$2$alignmentPolicy"], ["FocusTraversalPolicy_defaultTraversalRequestFocusCallback", function(node) {
      var _null = null;
      return A.FocusTraversalPolicy_defaultTraversalRequestFocusCallback(node, _null, _null, _null, _null);
    }, function(node, duration) {
      return A.FocusTraversalPolicy_defaultTraversalRequestFocusCallback(node, null, null, null, duration);
    }, function(node, curve, duration) {
      return A.FocusTraversalPolicy_defaultTraversalRequestFocusCallback(node, null, null, curve, duration);
    }, function(node, alignmentPolicy) {
      return A.FocusTraversalPolicy_defaultTraversalRequestFocusCallback(node, null, alignmentPolicy, null, null);
    }], 76, 0);
    _static_1(A, "framework0_Element__activateRecursively$closure", "Element__activateRecursively", 4);
    _instance_1_u(A.State0.prototype, "get$setState", "setState$1", 11);
    _instance_0_u(A._InheritedNotifierElement.prototype, "get$_handleUpdate", "_handleUpdate$0", 0);
  })();
  (function inheritance() {
    var _mixinHard = hunkHelpers.mixinHard,
      _inheritMany = hunkHelpers.inheritMany,
      _inherit = hunkHelpers.inherit;
    _inheritMany(B.Object, [A.AlarmClock, A._SaveStackTracking, A.ContextStateHandle, A.CkCanvas, A.CanvasKitCanvas, A.DisplayCanvasFactory, A.HtmlViewEmbedder, A.Mutator, A.EmbedderFrameContext, A.SkiaFontCollection, A.RegisteredFont, A.UnregisteredFont, A.FontDownloadResult, A.SkiaFallbackRegistry, A.CkImage, A.Layer, A.PrerollContext, A.PaintContext, A.LayerScene, A.LayerSceneBuilder, A.LayerTree, A.Frame, A.CompositorContext, A.Rasterizer, A.ViewRasterizer, A.CkNWayCanvas, A.NativeMemoryFinalizationRegistry, A.UniqueRef, A.CountedRef, A.Rendering, A.RenderingEntity, A.CkPaint, A.CkPath, A.CkPicture, A.CkPictureRecorder, A.DisplayCanvas, A.RenderQueue, A.CanvasKitRenderer, A.SimpleCkShader, A.CkSurface, A.CkParagraphStyle, A.CkTextStyle, A.CkParagraph, A.CkLineMetrics, A.CkParagraphBuilder, A.ClipboardMessageHandler, A.ClipboardAPICopyStrategy, A.ClipboardAPIPasteStrategy, A.ExecCommandCopyStrategy, A.ExecCommandPasteStrategy, A.FlutterConfiguration, A.Display, A.ScreenOrientation, A.HttpFetchResponseImpl, A.HttpFetchPayloadImpl, A.HttpFetchNoPayloadError, A.HttpFetchError, A.DomSubscription, A.DomPoint, A._DomListIterator, A._DomTouchListIterator, A.DomIteratorWrapper, A.EngineCanvas, A.SaveStackEntry, A.SaveClipEntry, A._SaveElementStackEntry, A.SaveElementStackTracking, A.FontFallbackManager, A._UnicodePropertyLookup, A.FallbackFontDownloadQueue, A.AssetFontsResult, A.FrameReference, A.CrossFrameCache, A._CrossFrameCacheItem, A.FrameTimingRecorder, A.SvgBlendMode, A.SurfaceCanvas, A._DomClip, A.PersistedSurface, A.SvgFilterBuilder, A.SvgFilter, A.SurfacePaint, A.SurfacePaintData, A.Conic, A.QuadBounds, A.ConicBounds, A._ConicPair, A.CubicBounds, A.SurfacePath, A.PathIterator, A.PathRef, A.PathRefIterator, A.QuadRoots, A.SkQuadCoefficients, A.PathWinding, A.EnginePictureRecorder, A.EnginePicture, A.PaintRequest, A.RecordingCanvas, A.PaintCommand, A._PaintBounds, A.RenderStrategy, A._WebGlRenderer, A.HtmlRenderer, A.SurfaceScene, A.SurfaceSceneBuilder, A.NormalizedGradient, A.SharedCanvas, A.EngineGradient, A.ShaderBuilder, A.ShaderMethod, A.ShaderDeclaration, A._PersistedSurfaceMatch, A.PrerollSurfaceContext, A.ContextMenu, A.MouseCursor, A.NotoFont, A.FallbackFontComponent, A.HighContrastSupport, A.PlatformDispatcher, A.ViewConfiguration0, A.PlatformConfiguration, A.AppLifecycleState0, A.ViewFocusBinding, A.PlatformViewManager, A.PlatformViewMessageHandler, A.SafariPointerEventWorkaround, A.PointerBinding, A.ClickDebouncer, A.PointerSupportDetector, A.Listener, A._BaseAdapter, A._WheelEventListenerMixin, A._SanitizedDetails, A._ButtonSanitizer, A._PointerDeviceState, A._GlobalPointerState, A.PointerDataConverter, A.Instrumentation, A.RRectRenderer, A.GlProgram, A.GlContext, A.OffScreenCanvas, A.AccessibilityAnnouncements, A.PrimaryRoleManager, A.RoleManager, A.AccessibilityFocusManager, A.LabelRepresentationBehavior, A.EngineAccessibilityFeatures, A.EngineAccessibilityFeaturesBuilder, A.SemanticsObject, A.EngineSemantics, A.EngineSemanticsOwner, A.SemanticsHelper, A.SemanticsEnabler, A._DefaultTextEditingStrategy_Object_CompositionAwareMixin, A.MethodCall0, A.StringCodec, A.JSONMessageCodec, A.JSONMethodCodec, A.StandardMessageCodec, A.StandardMethodCodec, A.WriteBuffer0, A.ReadBuffer0, A.SurfaceShadowData, A.CanvasParagraph, A.ParagraphSpan, A.StyleNode, A.CanvasParagraphBuilder, A.HtmlFontCollection, A.TextFragmenter, A.TextFragment, A._FragmentMetrics, A._FragmentPosition, A._FragmentBox, A.TextLayoutService, A.LineBuilder, A.Spanometer, A.RulerHost, A.TextPaintService, A.EngineLineMetrics, A.ParagraphLine, A.EngineParagraphStyle, A.EngineTextStyle, A.TextHeightStyle, A.TextDimensions, A.TextHeightRuler, A.UnicodeRange, A.UnicodePropertyLookup, A.BrowserAutofillHints, A.CompositionAwareMixin, A.EngineInputAction, A.EngineInputType, A.TextCapitalizationConfig, A.EngineAutofillForm, A.AutofillInfo, A.TextEditingDeltaState, A.EditingState, A.InputConfiguration, A.TextInputCommand, A.TextEditingChannel, A.HybridTextEditing, A.EditableTextStyle, A.EditableTextGeometry, A.LruCache, A.BitmapSize, A.Matrix4, A.FastMatrix32, A.DimensionsProvider, A.DisplayDprStream, A.DomManager, A.CustomElementEmbeddingStrategy, A.FullPageEmbeddingStrategy, A.FlutterViewManager, A.GlobalHtmlAttributes, A.EngineFlutterView, A.ViewPadding, A.ViewConstraints, A._BufferingStreamSubscription, A._BroadcastStreamController, A._DelayedEvent, A._DelayedDone, A._PendingEvents, A._DoneStreamSubscription, A._DoubleLinkedQueueEntry, A._DoubleLinkedQueueIterator, A._ListQueueIterator, A._Base64Encoder, A._Base64Decoder, A.DateTime, A.Stopwatch, A._Uri, A.UriData, A._SimpleUri, A.Expando, A.TimelineTask, A._AsyncBlock, A._SyncBlock, A.NullRejectionException, A._ChannelCallbackRecord, A._StoredMessage, A._Channel, A.ChannelBuffers, A.OffsetBase, A.Rect, A.Radius, A.RRect, A.Color, A.MaskFilter, A.FrameTiming, A.Locale, A.SemanticsActionEvent, A.PointerData, A.PointerDataPacket, A.SemanticsAction, A.SemanticsFlag, A.GlyphInfo, A.TextDecoration, A.TextBox, A.TextPosition, A.TextRange, A.ParagraphConstraints, A.GestureSettings, A.BrowserDetection, A.ParametricCurve, A.DiagnosticsNode, A._FlutterErrorDetails_Object_Diagnosticable, A.Listenable, A.ChangeNotifier, A.TextTreeConfiguration, A._PrefixedStringBuilder, A._NoDefaultValue, A.TextTreeRenderer, A.DiagnosticPropertiesBuilder, A.Diagnosticable, A._DiagnosticableTree_Object_Diagnosticable, A.DiagnosticableTreeMixin, A.Key, A.ObjectEvent, A.FlutterMemoryAllocations, A.PersistentHashMap, A._TrieNode, A.WriteBuffer, A.ReadBuffer, A.StackFrame, A.SynchronousFuture, A.HitTestEntry, A.ClipContext, A.EdgeInsetsGeometry, A._LinearTextScaler, A.Constraints, A.ParentData, A._DryLayout, A._Baseline, A._LayoutCacheStorage, A._RenderObject_Object_DiagnosticableTreeMixin, A.AnnotationResult, A._Layer_Object_DiagnosticableTreeMixin, A.LayerHandle, A.RenderObjectWithChildMixin, A._SemanticsFragment, A._SemanticsGeometry, A.RenderProxyBoxMixin, A.CustomSemanticsAction, A.AttributedString, A._SemanticsData_Object_Diagnosticable, A._SemanticsNode_Object_DiagnosticableTreeMixin, A._BoxEdge, A._SemanticsSortGroup, A._TraversalSortNode, A.SemanticsConfiguration, A.AssetBundle, A._KeyboardKey_Object_Diagnosticable, A.MethodCall, A.PlatformException, A.MissingPluginException, A.StringCodec0, A.JSONMessageCodec0, A.JSONMethodCodec0, A.StandardMessageCodec0, A.StandardMethodCodec0, A.MouseCursorSession, A._MouseCursor_Object_Diagnosticable, A._ProfiledBinaryMessenger, A._PlatformChannelStats, A.BasicMessageChannel, A.MethodChannel, A._ActionDispatcher_Object_Diagnosticable, A.WidgetsBindingObserver, A._Autofocus, A.FocusAttachment, A._FocusNode_Object_DiagnosticableTreeMixin, A._State_Object_Diagnosticable, A._FocusTraversalGroupInfo, A._FocusTraversalPolicy_Object_Diagnosticable, A._DirectionalPolicyDataEntry, A._DirectionalPolicyData, A.DirectionalFocusTraversalPolicyMixin, A.__ReadingOrderSortData_Object_Diagnosticable, A.__ReadingOrderDirectionalGroupData_Object_Diagnosticable, A.DebugCreator, A.IndexedSlot, A.RouteInformation, A.Matrix40, A.Vector3, A.Vector4]);
    _inherit(A.CanvasPool, A._SaveStackTracking);
    _inheritMany(B.Closure, [A._canvasKitJsUrls_closure, A.HtmlViewEmbedder_getOverlayCanvases_closure, A.HtmlViewEmbedder__updateDomForNewRendering_closure, A.SkiaFontCollection_registerDownloadedFonts_makeRegisterFont, A.MultiSurfaceRasterizer_setResourceCacheMaxBytes_closure, A._finalizationRegistry_closure, A._computeCombinedFontFamilies_closure, A.ClipboardMessageHandler_setDataMethodCall_closure, A.ClipboardMessageHandler_setDataMethodCall_closure0, A.ClipboardMessageHandler_getDataMethodCall_closure, A.ClipboardMessageHandler_getDataMethodCall_closure0, A.ClipboardMessageHandler_getDataMethodCall__closure, A.ClipboardMessageHandler_hasStringsMethodCall_closure, A.ClipboardMessageHandler_hasStringsMethodCall_closure0, A.ClipboardMessageHandler_hasStringsMethodCall__closure, A.DomConsoleExtension_get_warn_closure, A.DomNavigatorExtension_get_languages_closure, A._ttPolicy_closure, A.sendFontChangeMessage_closure, A.sendFontChangeMessage__closure, A.FontFallbackManager$__closure, A.FontFallbackManager$__closure0, A.FontFallbackManager$__closure1, A.FontFallbackManager$__closure2, A.FontFallbackManager$__closure3, A.FontFallbackManager$__closure4, A.FontFallbackManager_findFontsForMissingCodePoints_closure, A.FontFallbackManager__selectFont_closure, A.NormalizedGradient_NormalizedGradient_closure, A.preventDefaultListener_closure, A.FallbackFontComponent__activeFonts_closure, A.EnginePlatformDispatcher_closure, A.EnginePlatformDispatcher__zonedPlatformMessageResponseCallback_closure, A.EnginePlatformDispatcher__sendPlatformMessage_closure, A.EnginePlatformDispatcher__sendPlatformMessage_closure0, A.EnginePlatformDispatcher__sendPlatformMessage_closure1, A.EnginePlatformDispatcher__addLocaleChangedListener_closure, A.EnginePlatformDispatcher__setAppLifecycleState_closure, A.EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure, A.EnginePlatformDispatcher_replyToPlatformMessage_closure, A._BrowserAppLifecycleState__focusListener_closure, A._BrowserAppLifecycleState__blurListener_closure, A._BrowserAppLifecycleState__visibilityChangeListener_closure, A.ViewFocusBinding__handleFocusin_closure, A.ViewFocusBinding__handleFocusout_closure, A.ViewFocusBinding__handleKeyDown_closure, A.ViewFocusBinding__handleKeyUp_closure, A.SafariPointerEventWorkaround_workAroundMissingPointerEvents_closure, A._BaseAdapter_addEventListener_loggedHandler, A._WheelEventListenerMixin__convertWheelEventToPointerData_closure, A._PointerAdapter__addPointerEventListener_closure, A._PointerAdapter_setup_closure, A._PointerAdapter_setup_closure0, A._PointerAdapter_setup_closure1, A._PointerAdapter_setup_closure2, A._PointerAdapter_setup_closure3, A._PointerAdapter_setup_closure4, A.Dialog__setDefaultFocus_closure, A.AccessibilityFocusManager_manage_closure, A.AccessibilityFocusManager_manage_closure0, A.Incrementable_closure, A.Incrementable_closure0, A._computeLabelHintValue_closure, A.Scrollable_update_closure0, A.Scrollable_update_closure1, A.EngineSemanticsOwner__finalizeTree_closure, A.DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure, A.MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure, A.Tappable_closure, A.TextField__initializeForBlink_closure, A.TextField__initializeForBlink_closure0, A.TextField__initializeForWebkit_closure, A.TextField__initializeForWebkit_closure0, A.TextField__invokeIosWorkaround_closure0, A.CanvasParagraph_computeLineMetrics_closure, A.EngineAutofillForm_addInputEventListeners_addSubscriptionForKey, A.EngineAutofillForm_addInputEventListeners_addSubscriptionForKey_closure, A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure, A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0, A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1, A.IOSTextEditingStrategy_addEventHandlers_closure, A.IOSTextEditingStrategy__addTapListener_closure, A.FirefoxTextEditingStrategy_addEventHandlers_closure, A.HybridTextEditing__startEditing_closure, A.EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage_closure, A.CustomElementDimensionsProvider_closure, A.ViewConstraints_toString_describe, A._SyncBroadcastStreamController__sendData_closure, A._SyncBroadcastStreamController__sendDone_closure, A._Uri__makePath_closure, A._Uri__splitQueryStringAll_parsePair, A._createTables_setChars, A._createTables_setRange, A.jsify__convert, A.promiseToFuture_closure, A.promiseToFuture_closure0, A.dartify_convert, A.FlutterErrorDetails_summary_closure, A.FlutterErrorDetails_debugFillProperties_closure, A.FlutterError_FlutterError_closure, A.FlutterError_defaultStackFilter_closure, A.FlutterError_defaultStackFilter_closure0, A.FlutterError_toString_closure, A.debugPrintStack_closure, A._PrefixedStringBuilder__wordWrapLine_noWrap, A.TextTreeRenderer__debugRender_visitor, A.TextTreeRenderer__debugRender_closure, A.IterableProperty_valueToString_closure, A.FlutterMemoryAllocations__tryDefragmentListeners_closure, A.FlutterMemoryAllocations_hasListeners_closure, A.debugPrintThrottled_closure, A.StackFrame_fromStackString_closure, A.SynchronousFuture_whenComplete_closure, A.ClipContext_clipPathAndPaint_closure, A.ClipContext_clipRRectAndPaint_closure, A.ClipContext_clipRectAndPaint_closure, A.BoxConstraints_toString_describe, A.RenderBox_getDistanceToActualBaseline_closure, A.RenderObject__updateCompositingBits_closure, A.RenderObject_clearSemantics_closure, A.RenderObject__getSemanticsForParent_closure, A.RenderObject__getSemanticsForParent_closure0, A.RenderObject__getSemanticsForParent_closure1, A.SemanticsData_debugFillProperties_closure, A.SemanticsNode_getSemanticsData_closure, A.SemanticsNode__childrenInTraversalOrder_closure, A.SemanticsNode_debugFillProperties_closure, A.SemanticsNode_debugFillProperties_closure0, A.SemanticsNode_debugFillProperties_closure1, A.SemanticsNode_debugFillProperties_closure2, A.SemanticsNode_debugFillProperties_closure3, A.SemanticsNode_debugFillProperties_closure4, A.SemanticsNode_debugDescribeChildren_closure, A._SemanticsSortGroup_sortedWithinVerticalGroup_closure, A._SemanticsSortGroup_sortedWithinKnot_search, A._SemanticsSortGroup_sortedWithinKnot_closure0, A._SemanticsSortGroup_sortedWithinKnot_closure1, A._childrenInDefaultOrder_closure, A.SemanticsConfiguration__addArgumentlessAction_closure, A.SemanticsConfiguration_onMoveCursorForwardByCharacter_closure, A.SemanticsConfiguration_onMoveCursorBackwardByCharacter_closure, A.SemanticsConfiguration_onSetSelection_closure, A.SemanticsConfiguration_onSetText_closure, A.PlatformAssetBundle_load_closure, A.BasicMessageChannel_setMessageHandler_closure, A.MethodChannel_setMethodCallHandler_closure, A._getParent_closure, A.Actions__findDispatcher_closure, A.FocusNode_traversalDescendants_closure, A.FocusNode__removeChild_closure, A.FocusNode_debugDescribeChildren_closure, A.FocusScopeNode_debugFillProperties_closure, A._getAncestor_closure, A.FocusTraversalPolicy__findInitialFocus_closure, A.FocusTraversalPolicy__sortAllDescendants_visitGroups, A.FocusTraversalPolicy__sortAllDescendants_closure, A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure, A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure, A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0, A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure, A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0, A.DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate, A.DirectionalFocusTraversalPolicyMixin_inDirection_closure, A.DirectionalFocusTraversalPolicyMixin_inDirection_closure0, A._ReadingOrderSortData_commonDirectionalityOf_closure, A._ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors, A._ReadingOrderDirectionalGroupData_rect_closure, A._ReadingOrderDirectionalGroupData_debugFillProperties_closure, A.ReadingOrderTraversalPolicy__pickNext_inBand_closure, A.Element_renderObjectAttachingChild_closure, A.Element_updateChildren_replaceWithNullIfForgotten0, A.Element_updateSlotForChild_visit, A.Element__updateDepth_closure, A.Element__updateBuildScopeRecursively_closure, A.Element_detachRenderObject_closure0, A.Element_attachRenderObject_closure, A.Element_debugFillProperties_closure0, A.Element_debugDescribeChildren_closure, A.InheritedModel__findModels_closure, A.MediaQuery_updateShouldNotifyDependent_closure, A.Scrollable_ensureVisible_closure]);
    _inheritMany(B.Closure2Args, [A.HtmlViewEmbedder__updateDomForNewRendering_updateRenderCanvasWithDisplay, A.createDomResizeObserver_closure, A.commitScene_closure, A.PersistedContainerSurface__matchChildren_closure, A.EnginePlatformDispatcher__addFontSizeObserver_closure, A.StandardMessageCodec_writeValue_closure0, A.Spanometer_clearRulersCache_closure, A._computeLineBreakFragments_setBreak, A.saveForms_closure, A.HybridTextEditing__startEditing_closure0, A.CustomElementDimensionsProvider_closure0, A.LinkedHashMap_LinkedHashMap$from_closure, A._Uri__makeQueryFromParameters_closure, A.Uri__parseIPv4Address_error, A.Uri_parseIPv6Address_error, A.Uri_parseIPv6Address_parseHex, A._Uri__makeQueryFromParametersDefault_writeParameter, A._Uri__makeQueryFromParametersDefault_closure, A._createTables_build, A._defaultCompare_closure, A._SemanticsSortGroup_sortedWithinKnot_closure, A.SemanticsConfiguration_absorb_closure, A.StandardMessageCodec_writeValue_closure, A._debugLaunchProfilePlatformChannels_closure, A.DirectionalFocusTraversalPolicyMixin_findFirstFocusInDirection_closure, A.DirectionalFocusTraversalPolicyMixin__sortByDistancePreferVertical_closure, A.DirectionalFocusTraversalPolicyMixin__sortByDistancePreferHorizontal_closure, A.DirectionalFocusTraversalPolicyMixin__sortClosestEdgesByDistancePreferHorizontal_closure, A.DirectionalFocusTraversalPolicyMixin__sortClosestEdgesByDistancePreferVertical_closure, A.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1, A.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1, A._ReadingOrderSortData_sortWithDirectionality_closure, A._ReadingOrderDirectionalGroupData_sortWithDirectionality_closure, A.ReadingOrderTraversalPolicy__pickNext_closure, A.ReadingOrderTraversalPolicy__pickNext_inBand, A.Element_updateChildren_slotFor, A.Element_debugFillProperties_closure]);
    _inheritMany(B._Enum, [A.MutatorType, A.CanvasKitVariant, A.IntlSegmenterGranularity, A.PersistedSurfaceState, A.Assertiveness, A._CheckableKind, A.LabelRepresentation, A.PrimaryRole, A.AccessibilityMode, A.GestureMode, A.EnabledState, A.LineBreakType, A.FragmentFlow, A._ComparisonResult, A._FindBreakDirection, A.TextCapitalization, A.TransformKind, A.LineCharProperty, A.WordCharProperty, A.ClipOp, A.PathFillType, A.StrokeCap, A.StrokeJoin, A.PaintingStyle, A.BlendMode, A.Clip, A.BlurStyle, A.FilterQuality, A.FramePhase, A._FrameTimingInfo, A.AppLifecycleState, A.AppExitResponse, A.DartPerformanceMode, A.ViewFocusState, A.ViewFocusDirection, A.PointerChange, A.PointerDeviceKind, A.PointerSignalKind, A.FontStyle, A.PlaceholderAlignment, A.TextAlign, A.TextBaseline, A.TextDecorationStyle, A.TextLeadingDistribution, A.TextDirection, A.TextAffinity, A.BoxHeightStyle, A.BoxWidthStyle, A.TileMode, A.Brightness, A.BrowserEngine, A.OperatingSystem, A.DiagnosticLevel, A.DiagnosticsTreeStyle, A._WordWrapParseMode, A.TargetPlatform, A._WordWrapParseMode0, A.GestureDisposition, A.Axis, A.AxisDirection, A.SchedulerPhase, A.DebugSemanticsDumpOrder, A.KeyboardLockMode, A.KeyEventResult, A.UnfocusDisposition, A.FocusHighlightMode, A.TraversalDirection, A.TraversalEdgeBehavior, A._ElementLifecycle, A._MediaQueryAspect, A.NavigationMode, A.ScrollPositionAlignmentPolicy]);
    _inheritMany(B.Iterable, [A.MutatorsStack, A._DomListWrapper, A._DomTouchListWrapper, A.DoubleLinkedQueue]);
    _inheritMany(B.Closure0Args, [A.SkiaFontCollection__registerWithFontProvider_closure, A.SkiaFontCollection__registerWithFontProvider_closure0, A.Frame_raster_closure, A.Frame_raster_closure0, A.MultiSurfaceRasterizer_createViewRasterizer_closure, A.MultiSurfaceViewRasterizer_displayFactory_closure, A.OffscreenCanvasRasterizer_createViewRasterizer_closure, A.OffscreenCanvasViewRasterizer_displayFactory_closure, A.CanvasKitRenderer_initialize_closure, A.CkTextStyle_skTextStyle_closure, A.FontFallbackManager_addMissingCodePoints_closure, A.FallbackFontDownloadQueue_startDownloads_closure, A.PersistedPicture__applyBitmapPaint_closure, A.HtmlRenderer_initialize_closure, A.SurfaceSceneBuilder_build_closure, A.SurfaceSceneBuilder_build_closure0, A.GradientLinear_createImageBitmap_closure, A.EnginePlatformDispatcher_invokeOnKeyData_closure, A.invoke2_closure, A.PlatformViewManager_renderContent_closure, A._PointerAdapter__ensureSanitizer_closure, A._PointerAdapter_setup__closure, A._GlobalPointerState_ensurePointerDeviceState_closure, A.Instrumentation_incrementCounter_closure, A.AccessibilityAnnouncements_announce_closure, A.Dialog_closure, A.RouteName_update_closure, A.AccessibilityFocusManager_changeFocus_closure, A.Scrollable_update_closure, A.EngineSemantics__now_closure, A.EngineSemantics__getGestureModeClock_closure, A.EngineSemanticsOwner_closure, A.MobileSemanticsEnabler_tryEnableSemantics_closure, A.TextField__invokeIosWorkaround_closure, A.TextField_update_closure, A.HtmlFontCollection_loadAssetFonts_closure, A.DefaultTextEditingStrategy__moveFocusToFlutterView_closure, A.IOSTextEditingStrategy__schedulePlacement_closure, A.TextEditingChannel_handleTextInput_closure, A._hotRestartCache_closure, A.nullFuture_closure, A.Primitives_initTicker_closure, A.Future_Future_closure, A.Future_Future$delayed_closure, A._BufferingStreamSubscription__sendDone_sendDone, A._PendingEvents_schedule_closure, A._performance_closure, A._json_closure, A.ChannelBuffers_push_closure, A.ChannelBuffers_setListener_closure, A.FlutterErrorDetails_summary_formatException, A.FlutterErrorDetails_summary_closure0, A.ChangeNotifier_notifyListeners_closure, A.FlutterMemoryAllocations_dispatchObjectEvent_closure, A._DryLayout_memoize_closure, A._Baseline_memoize_ifAbsent, A.PaintingContext_pushClipRect_closure, A.PaintingContext_pushClipRRect_closure, A.PaintingContext_pushClipPath_closure, A.RenderObject__reportException_closure, A.RenderObject_toStringDeep_closure, A.CachingAssetBundle_loadString_closure, A._FocusState__handleFocusChanged_closure, A._FocusState__handleFocusChanged_closure0, A._FocusState__handleFocusChanged_closure1, A._FocusState__handleFocusChanged_closure2, A.ComponentElement_performRebuild_closure, A.ComponentElement_performRebuild_closure0]);
    _inheritMany(A.Layer, [A.ContainerLayer, A.PictureLayer0]);
    _inheritMany(A.ContainerLayer, [A.RootLayer, A.ClipPathEngineLayer, A.ClipRectEngineLayer, A.ClipRRectEngineLayer, A.OpacityEngineLayer, A.TransformEngineLayer]);
    _inherit(A.OffsetEngineLayer, A.TransformEngineLayer);
    _inheritMany(A.Rasterizer, [A.MultiSurfaceRasterizer, A.OffscreenCanvasRasterizer]);
    _inheritMany(A.ViewRasterizer, [A.MultiSurfaceViewRasterizer, A.OffscreenCanvasViewRasterizer]);
    _inheritMany(A.RenderingEntity, [A.RenderingRenderCanvas, A.RenderingPlatformView]);
    _inheritMany(A.DisplayCanvas, [A.RenderCanvas, A.Surface]);
    _inherit(A.CkGradientLinear, A.SimpleCkShader);
    _inheritMany(B.Error, [A.CanvasKitError, A.FontLoadError, A._FlutterError_Error_DiagnosticableTreeMixin]);
    _inherit(A.EngineFlutterDisplay, A.Display);
    _inheritMany(A.FontLoadError, [A.FontNotFoundError, A.FontDownloadError, A.FontInvalidDataError]);
    _inheritMany(A.EngineCanvas, [A.BitmapCanvas, A._DomCanvas_EngineCanvas_SaveElementStackTracking]);
    _inheritMany(A.PersistedSurface, [A.PersistedContainerSurface, A.PersistedLeafSurface]);
    _inheritMany(A.PersistedContainerSurface, [A._PersistedClipRect_PersistedContainerSurface__DomClip, A._PersistedClipRRect_PersistedContainerSurface__DomClip, A.PersistedClipPath, A.PersistedOffset, A.PersistedOpacity, A.PersistedScene, A.PersistedTransform]);
    _inherit(A.PersistedClipRect, A._PersistedClipRect_PersistedContainerSurface__DomClip);
    _inherit(A.PersistedClipRRect, A._PersistedClipRRect_PersistedContainerSurface__DomClip);
    _inherit(A.DomCanvas, A._DomCanvas_EngineCanvas_SaveElementStackTracking);
    _inherit(A.PersistedPicture, A.PersistedLeafSurface);
    _inheritMany(A.PaintCommand, [A.DrawCommand, A.PaintSave, A.PaintRestore, A.PaintTranslate, A.PaintScale, A.PaintTransform]);
    _inheritMany(A.DrawCommand, [A.PaintClipRect, A.PaintClipRRect, A.PaintClipPath, A.PaintDrawPaint, A.PaintDrawRect, A.PaintDrawRRect, A.PaintDrawDRRect, A.PaintDrawOval, A.PaintDrawCircle, A.PaintDrawPath, A.PaintDrawShadow, A.PaintDrawImageRect, A.PaintDrawParagraph]);
    _inherit(A.GradientLinear, A.EngineGradient);
    _inheritMany(null, [A.ModeHtmlColorFilter, A.MatrixHtmlColorFilter]);
    _inherit(A.EnginePlatformDispatcher, A.PlatformDispatcher);
    _inherit(A._BrowserAppLifecycleState, A.AppLifecycleState0);
    _inherit(A.__PointerAdapter__BaseAdapter__WheelEventListenerMixin, A._BaseAdapter);
    _inherit(A._PointerAdapter, A.__PointerAdapter__BaseAdapter__WheelEventListenerMixin);
    _inherit(A.RRectToCanvasRenderer, A.RRectRenderer);
    _inheritMany(A.PrimaryRoleManager, [A.Checkable, A.Dialog, A.Heading, A.ImageRoleManager, A.Incrementable, A.Link, A.PlatformViewRoleManager, A.Scrollable, A.GenericRole, A.Button, A.TextField]);
    _inheritMany(A.RoleManager, [A.RouteName, A.Focusable, A.LabelAndValue, A.LiveRegion, A.Tappable]);
    _inheritMany(A.LabelRepresentationBehavior, [A.AriaLabelRepresentation, A.DomTextRepresentation, A.SizedSpanRepresentation]);
    _inheritMany(A.SemanticsEnabler, [A.DesktopSemanticsEnabler, A.MobileSemanticsEnabler]);
    _inherit(A.DefaultTextEditingStrategy, A._DefaultTextEditingStrategy_Object_CompositionAwareMixin);
    _inheritMany(A.DefaultTextEditingStrategy, [A.SemanticsTextEditingStrategy, A.GloballyPositionedTextEditingStrategy, A.SafariDesktopTextEditingStrategy]);
    _inherit(A._TypedDataBuffer, B.ListBase);
    _inherit(A._IntBuffer, A._TypedDataBuffer);
    _inherit(A.Uint8Buffer, A._IntBuffer);
    _inheritMany(A.StyleNode, [A.ChildStyleNode, A.RootStyleNode]);
    _inheritMany(A.TextFragmenter, [A.LayoutFragmenter, A.FWLineBreakFragmenter, A.V8LineBreakFragmenter, A.BidiFragmenter]);
    _inheritMany(A.TextFragment, [A._CombinedFragment, A.LineBreakFragment, A.BidiFragment]);
    _inherit(A._LayoutFragment__CombinedFragment__FragmentMetrics, A._CombinedFragment);
    _inherit(A._LayoutFragment__CombinedFragment__FragmentMetrics__FragmentPosition, A._LayoutFragment__CombinedFragment__FragmentMetrics);
    _inherit(A._LayoutFragment__CombinedFragment__FragmentMetrics__FragmentPosition__FragmentBox, A._LayoutFragment__CombinedFragment__FragmentMetrics__FragmentPosition);
    _inherit(A.LayoutFragment, A._LayoutFragment__CombinedFragment__FragmentMetrics__FragmentPosition__FragmentBox);
    _inherit(A.EllipsisFragment, A.LayoutFragment);
    _inheritMany(A.EngineInputAction, [A.NoInputAction, A.EnterInputAction, A.DoneInputAction, A.GoInputAction, A.NextInputAction, A.PreviousInputAction, A.SearchInputAction, A.SendInputAction]);
    _inheritMany(A.EngineInputType, [A.NoTextInputType, A.MultilineInputType, A.TextInputType0, A.NumberInputType, A.DecimalInputType, A.PhoneInputType, A.EmailInputType, A.UrlInputType]);
    _inherit(A.MultilineNoTextInputType, A.MultilineInputType);
    _inheritMany(A.GloballyPositionedTextEditingStrategy, [A.IOSTextEditingStrategy, A.AndroidTextEditingStrategy, A.FirefoxTextEditingStrategy]);
    _inheritMany(A.TextInputCommand, [A.TextInputSetClient, A.TextInputUpdateConfig, A.TextInputSetEditingState, A.TextInputShow, A.TextInputSetEditableSizeAndTransform, A.TextInputSetStyle, A.TextInputClearClient, A.TextInputHide, A.TextInputSetMarkedTextRect, A.TextInputSetCaretRect, A.TextInputRequestAutofill, A.TextInputFinishAutofillContext]);
    _inheritMany(A.DimensionsProvider, [A.CustomElementDimensionsProvider, A.FullPageDimensionsProvider]);
    _inherit(A._EngineFlutterViewImpl, A.EngineFlutterView);
    _inherit(A.ConstantSet, B.SetBase);
    _inheritMany(A.ConstantSet, [A.ConstantStringSet, A.GeneralConstantSet]);
    _inherit(A._StreamImpl, B.Stream);
    _inherit(A._ControllerStream, A._StreamImpl);
    _inherit(A._BroadcastStream, A._ControllerStream);
    _inherit(A._ControllerSubscription, A._BufferingStreamSubscription);
    _inherit(A._BroadcastSubscription, A._ControllerSubscription);
    _inheritMany(A._BroadcastStreamController, [A._SyncBroadcastStreamController, A._AsyncBroadcastStreamController]);
    _inherit(A._DelayedData, A._DelayedEvent);
    _inheritMany(A._DoubleLinkedQueueEntry, [A._DoubleLinkedQueueElement, A._DoubleLinkedQueueSentinel]);
    _inherit(A.ListQueue, B.ListIterable);
    _inheritMany(B.Encoding, [A.AsciiCodec, A.Latin1Codec]);
    _inheritMany(B.Converter, [A._UnicodeSubsetEncoder, A._UnicodeSubsetDecoder, A.Base64Encoder, A.Base64Decoder]);
    _inheritMany(A._UnicodeSubsetEncoder, [A.AsciiEncoder, A.Latin1Encoder]);
    _inheritMany(B.StringConversionSink, [A._UnicodeSubsetEncoderSink, A._Base64DecoderSink]);
    _inheritMany(A._UnicodeSubsetDecoder, [A.AsciiDecoder, A.Latin1Decoder]);
    _inheritMany(B.ByteConversionSink, [A._ErrorHandlingAsciiDecoderSink, A._SimpleAsciiDecoderSink, A._Base64EncoderSink, A._Latin1DecoderSink]);
    _inherit(A.Base64Codec, B.Codec);
    _inherit(A._BufferCachingBase64Encoder, A._Base64Encoder);
    _inheritMany(A._Base64EncoderSink, [A._AsciiBase64EncoderSink, A._Utf8Base64EncoderSink]);
    _inherit(A._Latin1AllowInvalidDecoderSink, A._Latin1DecoderSink);
    _inherit(A._DataUri, A._Uri);
    _inheritMany(A.OffsetBase, [A.Offset, A.Size]);
    _inherit(A.Curve, A.ParametricCurve);
    _inheritMany(A.Curve, [A.Cubic, A.FlippedCurve]);
    _inheritMany(A.DiagnosticsNode, [A.DiagnosticsProperty, A.DiagnosticsBlock, A.DiagnosticableNode]);
    _inheritMany(A.DiagnosticsProperty, [A._ErrorDiagnostic, A.ErrorSpacer, A.MessageProperty, A.StringProperty, A._NumProperty, A.FlagProperty, A.IterableProperty, A.EnumProperty, A.ObjectFlagProperty, A.TransformProperty, A.DiagnosticsDebugCreator, A.AttributedStringProperty]);
    _inheritMany(A._ErrorDiagnostic, [A.ErrorDescription, A.ErrorSummary, A.ErrorHint]);
    _inherit(A.FlutterErrorDetails, A._FlutterErrorDetails_Object_Diagnosticable);
    _inherit(A.FlutterError, A._FlutterError_Error_DiagnosticableTreeMixin);
    _inherit(A.DiagnosticsStackTrace, A.DiagnosticsBlock);
    _inheritMany(A.DiagnosticableNode, [A._FlutterErrorDetailsNode, A.DiagnosticableTreeNode, A._SemanticsDiagnosticableNode]);
    _inherit(A.ValueNotifier, A.ChangeNotifier);
    _inheritMany(A._NumProperty, [A.DoubleProperty, A.IntProperty]);
    _inherit(A.DiagnosticableTree, A._DiagnosticableTree_Object_Diagnosticable);
    _inheritMany(A.Key, [A.LocalKey, A.GlobalKey]);
    _inherit(A.UniqueKey, A.LocalKey);
    _inheritMany(A.ObjectEvent, [A.ObjectCreated, A.ObjectDisposed]);
    _inheritMany(A._TrieNode, [A._FullNode, A._CompressedNode, A._HashCollisionNode]);
    _inheritMany(A.EdgeInsetsGeometry, [A.EdgeInsets, A._MixedEdgeInsets]);
    _inherit(A.BoxConstraints, A.Constraints);
    _inherit(A.BoxHitTestEntry, A.HitTestEntry);
    _inherit(A.BoxParentData, A.ParentData);
    _inherit(A.RenderObject, A._RenderObject_Object_DiagnosticableTreeMixin);
    _inherit(A.RenderBox, A.RenderObject);
    _inheritMany(A.RenderBox, [A.RenderErrorBox, A._RenderProxyBox_RenderBox_RenderObjectWithChildMixin]);
    _inherit(A.Layer0, A._Layer_Object_DiagnosticableTreeMixin);
    _inheritMany(A.Layer0, [A.PictureLayer, A.ContainerLayer0]);
    _inheritMany(A.ContainerLayer0, [A.OffsetLayer, A.ClipRectLayer, A.ClipRRectLayer, A.ClipPathLayer]);
    _inheritMany(A.OffsetLayer, [A.TransformLayer, A.OpacityLayer]);
    _inherit(A.PaintingContext, A.ClipContext);
    _inheritMany(A._SemanticsFragment, [A._ContainerSemanticsFragment, A._InterestingSemanticsFragment]);
    _inheritMany(A._InterestingSemanticsFragment, [A._RootSemanticsFragment, A._IncompleteSemanticsFragment, A._SwitchableSemanticsFragment]);
    _inherit(A._RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin, A._RenderProxyBox_RenderBox_RenderObjectWithChildMixin);
    _inherit(A.RenderProxyBox, A._RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin);
    _inheritMany(A.RenderProxyBox, [A.RenderConstrainedBox, A.RenderSemanticsAnnotations]);
    _inherit(A.SemanticsData, A._SemanticsData_Object_Diagnosticable);
    _inheritMany(A.DiagnosticableTree, [A.SemanticsHintOverrides, A.SemanticsProperties, A.Widget, A.Element0]);
    _inherit(A.SemanticsNode, A._SemanticsNode_Object_DiagnosticableTreeMixin);
    _inherit(A.CachingAssetBundle, A.AssetBundle);
    _inherit(A.PlatformAssetBundle, A.CachingAssetBundle);
    _inherit(A.KeyboardKey, A._KeyboardKey_Object_Diagnosticable);
    _inherit(A.LogicalKeyboardKey, A.KeyboardKey);
    _inherit(A.MouseCursor0, A._MouseCursor_Object_Diagnosticable);
    _inheritMany(A.MouseCursor0, [A._DeferringMouseCursor, A.SystemMouseCursor]);
    _inherit(A._SystemMouseCursorSession, A.MouseCursorSession);
    _inherit(A.OptionalMethodChannel, A.MethodChannel);
    _inherit(A.TextSelection, A.TextRange);
    _inherit(A.ActionDispatcher, A._ActionDispatcher_Object_Diagnosticable);
    _inheritMany(A.Widget, [A.RenderObjectWidget, A.StatefulWidget, A.ProxyWidget, A.StatelessWidget, A._NullWidget]);
    _inheritMany(A.RenderObjectWidget, [A.SingleChildRenderObjectWidget, A.LeafRenderObjectWidget]);
    _inheritMany(A.SingleChildRenderObjectWidget, [A.SizedBox, A.Semantics]);
    _inherit(A._FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier, A._FocusNode_Object_DiagnosticableTreeMixin);
    _inherit(A.FocusNode, A._FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier);
    _inheritMany(A.FocusNode, [A.FocusScopeNode, A._FocusTraversalGroupNode]);
    _inheritMany(A.StatefulWidget, [A.Focus, A.FocusTraversalGroup]);
    _inherit(A.State0, A._State_Object_Diagnosticable);
    _inheritMany(A.State0, [A._FocusState, A._FocusTraversalGroupState]);
    _inherit(A.FocusScope, A.Focus);
    _inherit(A._FocusScopeWithExternalFocusNode, A.FocusScope);
    _inherit(A._FocusScopeState, A._FocusState);
    _inherit(A.InheritedWidget, A.ProxyWidget);
    _inheritMany(A.InheritedWidget, [A.InheritedNotifier, A.InheritedModel]);
    _inherit(A._FocusInheritedScope, A.InheritedNotifier);
    _inherit(A.FocusTraversalPolicy, A._FocusTraversalPolicy_Object_Diagnosticable);
    _inherit(A._ReadingOrderSortData, A.__ReadingOrderSortData_Object_Diagnosticable);
    _inherit(A._ReadingOrderDirectionalGroupData, A.__ReadingOrderDirectionalGroupData_Object_Diagnosticable);
    _inherit(A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin, A.FocusTraversalPolicy);
    _inherit(A.ReadingOrderTraversalPolicy, A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin);
    _inherit(A._ElementDiagnosticableTreeNode, A.DiagnosticableTreeNode);
    _inherit(A.ErrorWidget, A.LeafRenderObjectWidget);
    _inheritMany(A.Element0, [A.ComponentElement, A.RenderObjectElement, A._NullElement]);
    _inheritMany(A.ComponentElement, [A.StatelessElement0, A.StatefulElement0, A.ProxyElement0]);
    _inherit(A.InheritedElement, A.ProxyElement0);
    _inheritMany(A.RenderObjectElement, [A.LeafRenderObjectElement, A.SingleChildRenderObjectElement]);
    _inheritMany(A.InheritedElement, [A.InheritedModelElement, A._InheritedNotifierElement]);
    _inherit(A.MediaQuery, A.InheritedModel);
    _mixinHard(A._DefaultTextEditingStrategy_Object_CompositionAwareMixin, A.CompositionAwareMixin);
    _mixinHard(A._DomCanvas_EngineCanvas_SaveElementStackTracking, A.SaveElementStackTracking);
    _mixinHard(A._LayoutFragment__CombinedFragment__FragmentMetrics, A._FragmentMetrics);
    _mixinHard(A._LayoutFragment__CombinedFragment__FragmentMetrics__FragmentPosition, A._FragmentPosition);
    _mixinHard(A._LayoutFragment__CombinedFragment__FragmentMetrics__FragmentPosition__FragmentBox, A._FragmentBox);
    _mixinHard(A._PersistedClipRRect_PersistedContainerSurface__DomClip, A._DomClip);
    _mixinHard(A._PersistedClipRect_PersistedContainerSurface__DomClip, A._DomClip);
    _mixinHard(A.__PointerAdapter__BaseAdapter__WheelEventListenerMixin, A._WheelEventListenerMixin);
    _mixinHard(A._FlutterError_Error_DiagnosticableTreeMixin, A.DiagnosticableTreeMixin);
    _mixinHard(A._FlutterErrorDetails_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A._DiagnosticableTree_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A._Layer_Object_DiagnosticableTreeMixin, A.DiagnosticableTreeMixin);
    _mixinHard(A._RenderObject_Object_DiagnosticableTreeMixin, A.DiagnosticableTreeMixin);
    _mixinHard(A._RenderProxyBox_RenderBox_RenderObjectWithChildMixin, A.RenderObjectWithChildMixin);
    _mixinHard(A._RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin, A.RenderProxyBoxMixin);
    _mixinHard(A._SemanticsData_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A._SemanticsNode_Object_DiagnosticableTreeMixin, A.DiagnosticableTreeMixin);
    _mixinHard(A._KeyboardKey_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A._MouseCursor_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A._ActionDispatcher_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A._FocusNode_Object_DiagnosticableTreeMixin, A.DiagnosticableTreeMixin);
    _mixinHard(A._FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier, A.ChangeNotifier);
    _mixinHard(A._FocusTraversalPolicy_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin, A.DirectionalFocusTraversalPolicyMixin);
    _mixinHard(A.__ReadingOrderDirectionalGroupData_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A.__ReadingOrderSortData_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A._State_Object_Diagnosticable, A.Diagnosticable);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"CanvasPool":{"_SaveStackTracking":[]},"CanvasKitCanvas":{"Canvas":[]},"CkColorFilter":{"CkManagedSkImageFilterConvertible":[],"ImageFilter":[]},"CkBlendModeColorFilter":{"CkColorFilter":[],"CkManagedSkImageFilterConvertible":[],"ImageFilter":[]},"CkMatrixColorFilter":{"CkColorFilter":[],"CkManagedSkImageFilterConvertible":[],"ImageFilter":[]},"CkLinearToSrgbGammaColorFilter":{"CkColorFilter":[],"CkManagedSkImageFilterConvertible":[],"ImageFilter":[]},"CkSrgbToLinearGammaColorFilter":{"CkColorFilter":[],"CkManagedSkImageFilterConvertible":[],"ImageFilter":[]},"MutatorType":{"_Enum":[],"Enum":[]},"MutatorsStack":{"Iterable":["Mutator"],"Iterable.E":"Mutator"},"SkiaFontCollection":{"FlutterFontCollection":[]},"SkiaFallbackRegistry":{"FallbackFontRegistry":[]},"CkImage":{"Image":[],"StackTraceDebugger":[]},"CkManagedSkImageFilterConvertible":{"ImageFilter":[]},"CkImageFilter":{"CkManagedSkImageFilterConvertible":[],"ImageFilter":[]},"_CkMatrixImageFilter":{"CkImageFilter":[],"CkManagedSkImageFilterConvertible":[],"ImageFilter":[]},"Layer":{"EngineLayer":[]},"ContainerLayer":{"Layer":[],"EngineLayer":[]},"RootLayer":{"ContainerLayer":[],"Layer":[],"EngineLayer":[]},"BackdropFilterEngineLayer":{"ContainerLayer":[],"Layer":[],"BackdropFilterEngineLayer0":[],"EngineLayer":[]},"ClipPathEngineLayer":{"ContainerLayer":[],"Layer":[],"ClipPathEngineLayer0":[],"EngineLayer":[]},"ClipRectEngineLayer":{"ContainerLayer":[],"Layer":[],"ClipRectEngineLayer0":[],"EngineLayer":[]},"ClipRRectEngineLayer":{"ContainerLayer":[],"Layer":[],"ClipRRectEngineLayer0":[],"EngineLayer":[]},"OpacityEngineLayer":{"ContainerLayer":[],"Layer":[],"OpacityEngineLayer0":[],"EngineLayer":[]},"TransformEngineLayer":{"ContainerLayer":[],"Layer":[],"TransformEngineLayer0":[],"EngineLayer":[]},"OffsetEngineLayer":{"TransformEngineLayer":[],"ContainerLayer":[],"Layer":[],"TransformEngineLayer0":[],"OffsetEngineLayer0":[],"EngineLayer":[]},"ImageFilterEngineLayer":{"ContainerLayer":[],"Layer":[],"ImageFilterEngineLayer0":[],"EngineLayer":[]},"PictureLayer0":{"Layer":[],"EngineLayer":[]},"LayerScene":{"Scene":[]},"LayerSceneBuilder":{"SceneBuilder":[]},"MultiSurfaceRasterizer":{"Rasterizer":[]},"MultiSurfaceViewRasterizer":{"ViewRasterizer":[]},"OffscreenCanvasRasterizer":{"Rasterizer":[]},"OffscreenCanvasViewRasterizer":{"ViewRasterizer":[]},"RenderingRenderCanvas":{"RenderingEntity":[]},"RenderingPlatformView":{"RenderingEntity":[]},"CkPaint":{"Paint":[]},"CkFragmentProgram":{"FragmentProgram":[]},"CkFragmentShader":{"FragmentShader":[],"CkShader":[],"Shader":[]},"CkPath":{"Path":[]},"CkPicture":{"ScenePicture":[],"Picture":[]},"CkPictureRecorder":{"PictureRecorder":[]},"RenderCanvas":{"DisplayCanvas":[]},"CanvasKitVariant":{"_Enum":[],"Enum":[]},"CanvasKitRenderer":{"Renderer":[]},"CkShader":{"Shader":[]},"SimpleCkShader":{"CkShader":[],"Shader":[]},"CkGradientLinear":{"SimpleCkShader":[],"CkShader":[],"Gradient":[],"Shader":[]},"Surface":{"DisplayCanvas":[]},"CkParagraphStyle":{"ParagraphStyle":[]},"CkTextStyle":{"TextStyle0":[]},"CkStrutStyle":{"StrutStyle0":[]},"CkParagraph":{"Paragraph":[]},"CkLineMetrics":{"LineMetrics":[]},"CkParagraphBuilder":{"ParagraphBuilder":[]},"IntlSegmenterGranularity":{"_Enum":[],"Enum":[]},"CanvasKitError":{"Error":[]},"ClipboardAPICopyStrategy":{"CopyToClipboardStrategy":[]},"ClipboardAPIPasteStrategy":{"PasteFromClipboardStrategy":[]},"ExecCommandCopyStrategy":{"CopyToClipboardStrategy":[]},"ExecCommandPasteStrategy":{"PasteFromClipboardStrategy":[]},"ColorFilterType":{"_Enum":[],"Enum":[]},"EngineColorFilter":{"SceneImageFilter":[],"ColorFilter":[],"ImageFilter":[]},"EngineFlutterDisplay":{"Display":[]},"HttpFetchResponseImpl":{"HttpFetchResponse":[]},"MockHttpFetchResponse":{"HttpFetchResponse":[]},"HttpFetchPayloadImpl":{"HttpFetchPayload":[]},"HttpFetchNoPayloadError":{"Exception":[]},"HttpFetchError":{"Exception":[]},"_DomListIterator":{"Iterator":["1"]},"_DomListWrapper":{"Iterable":["1"],"Iterable.E":"1"},"_DomTouchListIterator":{"Iterator":["1"]},"_DomTouchListWrapper":{"Iterable":["1"],"Iterable.E":"1"},"DomIteratorWrapper":{"Iterator":["1"]},"SaveElementStackTracking":{"EngineCanvas":[]},"FontLoadError":{"Error":[]},"FontNotFoundError":{"FontLoadError":[],"Error":[]},"FontDownloadError":{"FontLoadError":[],"Error":[]},"FontInvalidDataError":{"FontLoadError":[],"Error":[]},"PersistedBackdropFilter":{"PersistedContainerSurface":[],"PersistedSurface":[],"BackdropFilterEngineLayer0":[],"EngineLayer":[]},"BitmapCanvas":{"EngineCanvas":[]},"SurfaceCanvas":{"Canvas":[]},"_DomClip":{"PersistedContainerSurface":[],"PersistedSurface":[],"EngineLayer":[]},"PersistedClipRect":{"_PersistedClipRect_PersistedContainerSurface__DomClip":[],"_DomClip":[],"PersistedContainerSurface":[],"PersistedSurface":[],"ClipRectEngineLayer0":[],"EngineLayer":[]},"PersistedClipRRect":{"_PersistedClipRRect_PersistedContainerSurface__DomClip":[],"_DomClip":[],"PersistedContainerSurface":[],"PersistedSurface":[],"ClipRRectEngineLayer0":[],"EngineLayer":[]},"PersistedClipPath":{"PersistedContainerSurface":[],"PersistedSurface":[],"ClipPathEngineLayer0":[],"EngineLayer":[]},"DomCanvas":{"_DomCanvas_EngineCanvas_SaveElementStackTracking":[],"SaveElementStackTracking":[],"EngineCanvas":[]},"HtmlImage":{"Image":[]},"PersistedImageFilter":{"PersistedContainerSurface":[],"PersistedSurface":[],"ImageFilterEngineLayer0":[],"EngineLayer":[]},"PersistedOffset":{"PersistedContainerSurface":[],"PersistedSurface":[],"OffsetEngineLayer0":[],"EngineLayer":[]},"PersistedOpacity":{"PersistedContainerSurface":[],"PersistedSurface":[],"OpacityEngineLayer0":[],"EngineLayer":[]},"SurfacePaint":{"Paint":[]},"HtmlFragmentProgram":{"FragmentProgram":[]},"SurfacePath":{"Path":[]},"EnginePictureRecorder":{"PictureRecorder":[]},"EnginePicture":{"Picture":[]},"PersistedPicture":{"PersistedLeafSurface":[],"PersistedSurface":[],"EngineLayer":[]},"DrawCommand":{"PaintCommand":[]},"PaintSave":{"PaintCommand":[]},"PaintRestore":{"PaintCommand":[]},"PaintTranslate":{"PaintCommand":[]},"PaintScale":{"PaintCommand":[]},"PaintTransform":{"PaintCommand":[]},"PaintClipRect":{"DrawCommand":[],"PaintCommand":[]},"PaintClipRRect":{"DrawCommand":[],"PaintCommand":[]},"PaintClipPath":{"DrawCommand":[],"PaintCommand":[]},"PaintDrawPaint":{"DrawCommand":[],"PaintCommand":[]},"PaintDrawRect":{"DrawCommand":[],"PaintCommand":[]},"PaintDrawRRect":{"DrawCommand":[],"PaintCommand":[]},"PaintDrawDRRect":{"DrawCommand":[],"PaintCommand":[]},"PaintDrawOval":{"DrawCommand":[],"PaintCommand":[]},"PaintDrawCircle":{"DrawCommand":[],"PaintCommand":[]},"PaintDrawPath":{"DrawCommand":[],"PaintCommand":[]},"PaintDrawShadow":{"DrawCommand":[],"PaintCommand":[]},"PaintDrawImageRect":{"DrawCommand":[],"PaintCommand":[]},"PaintDrawParagraph":{"DrawCommand":[],"PaintCommand":[]},"_WebGlRenderer":{"GlRenderer":[]},"HtmlRenderer":{"Renderer":[]},"SurfaceScene":{"Scene":[]},"PersistedScene":{"PersistedContainerSurface":[],"PersistedSurface":[],"EngineLayer":[]},"SurfaceSceneBuilder":{"SceneBuilder":[]},"EngineImageShader":{"ImageShader":[],"Shader":[]},"EngineGradient":{"Gradient":[],"Shader":[]},"GradientLinear":{"EngineGradient":[],"Gradient":[],"Shader":[]},"EngineImageFilter":{"ImageFilter":[]},"_MatrixEngineImageFilter":{"EngineImageFilter":[],"ImageFilter":[]},"EngineHtmlColorFilter":{"EngineImageFilter":[],"ImageFilter":[]},"ModeHtmlColorFilter":{"EngineHtmlColorFilter":[],"EngineImageFilter":[],"ImageFilter":[]},"MatrixHtmlColorFilter":{"EngineHtmlColorFilter":[],"EngineImageFilter":[],"ImageFilter":[]},"PersistedSurfaceState":{"_Enum":[],"Enum":[]},"PersistedSurface":{"EngineLayer":[]},"PersistedLeafSurface":{"PersistedSurface":[],"EngineLayer":[]},"PersistedContainerSurface":{"PersistedSurface":[],"EngineLayer":[]},"PersistedTransform":{"PersistedContainerSurface":[],"PersistedSurface":[],"TransformEngineLayer0":[],"EngineLayer":[]},"EnginePlatformDispatcher":{"PlatformDispatcher":[]},"_BrowserAppLifecycleState":{"AppLifecycleState0":[]},"_WheelEventListenerMixin":{"_BaseAdapter":[]},"_PointerAdapter":{"__PointerAdapter__BaseAdapter__WheelEventListenerMixin":[],"_WheelEventListenerMixin":[],"_BaseAdapter":[]},"RRectToCanvasRenderer":{"RRectRenderer":[]},"ScenePicture":{"Picture":[]},"Assertiveness":{"_Enum":[],"Enum":[]},"_CheckableKind":{"_Enum":[],"Enum":[]},"Checkable":{"PrimaryRoleManager":[]},"Dialog":{"PrimaryRoleManager":[]},"RouteName":{"RoleManager":[]},"Focusable":{"RoleManager":[]},"Heading":{"PrimaryRoleManager":[]},"ImageRoleManager":{"PrimaryRoleManager":[]},"Incrementable":{"PrimaryRoleManager":[]},"LabelRepresentation":{"_Enum":[],"Enum":[]},"AriaLabelRepresentation":{"LabelRepresentationBehavior":[]},"DomTextRepresentation":{"LabelRepresentationBehavior":[]},"SizedSpanRepresentation":{"LabelRepresentationBehavior":[]},"LabelAndValue":{"RoleManager":[]},"Link":{"PrimaryRoleManager":[]},"LiveRegion":{"RoleManager":[]},"PlatformViewRoleManager":{"PrimaryRoleManager":[]},"Scrollable":{"PrimaryRoleManager":[]},"EngineAccessibilityFeatures":{"AccessibilityFeatures":[]},"SemanticsUpdate":{"SemanticsUpdate0":[]},"PrimaryRole":{"_Enum":[],"Enum":[]},"Role":{"_Enum":[],"Enum":[]},"GenericRole":{"PrimaryRoleManager":[]},"AccessibilityMode":{"_Enum":[],"Enum":[]},"GestureMode":{"_Enum":[],"Enum":[]},"SemanticsUpdatePhase":{"_Enum":[],"Enum":[]},"EnabledState":{"_Enum":[],"Enum":[]},"DesktopSemanticsEnabler":{"SemanticsEnabler":[]},"MobileSemanticsEnabler":{"SemanticsEnabler":[]},"Button":{"PrimaryRoleManager":[]},"Tappable":{"RoleManager":[]},"SemanticsTextEditingStrategy":{"DefaultTextEditingStrategy":[],"_DefaultTextEditingStrategy_Object_CompositionAwareMixin":[],"CompositionAwareMixin":[],"TextEditingStrategy":[]},"TextField":{"PrimaryRoleManager":[]},"_TypedDataBuffer":{"ListBase":["1"],"List":["1"],"_ListIterable":["1"],"EfficientLengthIterable":["1"],"HideEfficientLengthIterable":["1"],"Iterable":["1"]},"_IntBuffer":{"_TypedDataBuffer":["int"],"ListBase":["int"],"List":["int"],"_ListIterable":["int"],"EfficientLengthIterable":["int"],"HideEfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8Buffer":{"_IntBuffer":[],"_TypedDataBuffer":["int"],"ListBase":["int"],"List":["int"],"_ListIterable":["int"],"EfficientLengthIterable":["int"],"HideEfficientLengthIterable":["int"],"Iterable":["int"],"ListBase.E":"int","_TypedDataBuffer.E":"int"},"StringCodec":{"MessageCodec0":["String"]},"JSONMessageCodec":{"MessageCodec0":["@"]},"JSONMethodCodec":{"MethodCodec":[]},"StandardMessageCodec":{"MessageCodec0":["@"]},"StandardMethodCodec":{"MethodCodec":[]},"UniformType":{"_Enum":[],"Enum":[]},"CanvasParagraph":{"Paragraph":[]},"PlaceholderSpan0":{"ParagraphPlaceholder":[],"ParagraphSpan":[]},"ChildStyleNode":{"StyleNode":[]},"RootStyleNode":{"StyleNode":[]},"CanvasParagraphBuilder":{"ParagraphBuilder":[]},"HtmlFontCollection":{"FlutterFontCollection":[]},"LayoutFragmenter":{"TextFragmenter":[]},"_CombinedFragment":{"TextFragment":[]},"LayoutFragment":{"_LayoutFragment__CombinedFragment__FragmentMetrics__FragmentPosition__FragmentBox":[],"_LayoutFragment__CombinedFragment__FragmentMetrics__FragmentPosition":[],"_FragmentBox":[],"_LayoutFragment__CombinedFragment__FragmentMetrics":[],"_FragmentPosition":[],"_FragmentMetrics":[],"_CombinedFragment":[],"TextFragment":[]},"_FragmentMetrics":{"_CombinedFragment":[],"TextFragment":[]},"_FragmentPosition":{"_FragmentMetrics":[],"_CombinedFragment":[],"TextFragment":[]},"_FragmentBox":{"_FragmentPosition":[],"_FragmentMetrics":[],"_CombinedFragment":[],"TextFragment":[]},"EllipsisFragment":{"LayoutFragment":[],"_LayoutFragment__CombinedFragment__FragmentMetrics__FragmentPosition__FragmentBox":[],"_LayoutFragment__CombinedFragment__FragmentMetrics__FragmentPosition":[],"_FragmentBox":[],"_LayoutFragment__CombinedFragment__FragmentMetrics":[],"_FragmentPosition":[],"_FragmentMetrics":[],"_CombinedFragment":[],"TextFragment":[]},"LineBreakType":{"_Enum":[],"Enum":[]},"LineBreakFragmenter":{"TextFragmenter":[]},"FWLineBreakFragmenter":{"LineBreakFragmenter":[],"TextFragmenter":[]},"V8LineBreakFragmenter":{"LineBreakFragmenter":[],"TextFragmenter":[]},"LineBreakFragment":{"TextFragment":[]},"EngineLineMetrics":{"LineMetrics":[]},"EngineParagraphStyle":{"ParagraphStyle":[]},"EngineTextStyle":{"TextStyle0":[]},"EngineStrutStyle":{"StrutStyle0":[]},"FragmentFlow":{"_Enum":[],"Enum":[]},"BidiFragmenter":{"TextFragmenter":[]},"BidiFragment":{"TextFragment":[]},"_ComparisonResult":{"_Enum":[],"Enum":[]},"_FindBreakDirection":{"_Enum":[],"Enum":[]},"NoInputAction":{"EngineInputAction":[]},"EnterInputAction":{"EngineInputAction":[]},"DoneInputAction":{"EngineInputAction":[]},"GoInputAction":{"EngineInputAction":[]},"NextInputAction":{"EngineInputAction":[]},"PreviousInputAction":{"EngineInputAction":[]},"SearchInputAction":{"EngineInputAction":[]},"SendInputAction":{"EngineInputAction":[]},"NoTextInputType":{"EngineInputType":[]},"MultilineNoTextInputType":{"MultilineInputType":[],"EngineInputType":[]},"TextInputType0":{"EngineInputType":[]},"NumberInputType":{"EngineInputType":[]},"DecimalInputType":{"EngineInputType":[]},"PhoneInputType":{"EngineInputType":[]},"EmailInputType":{"EngineInputType":[]},"UrlInputType":{"EngineInputType":[]},"MultilineInputType":{"EngineInputType":[]},"TextCapitalization":{"_Enum":[],"Enum":[]},"GloballyPositionedTextEditingStrategy":{"DefaultTextEditingStrategy":[],"_DefaultTextEditingStrategy_Object_CompositionAwareMixin":[],"CompositionAwareMixin":[],"TextEditingStrategy":[]},"SafariDesktopTextEditingStrategy":{"DefaultTextEditingStrategy":[],"_DefaultTextEditingStrategy_Object_CompositionAwareMixin":[],"CompositionAwareMixin":[],"TextEditingStrategy":[]},"DefaultTextEditingStrategy":{"_DefaultTextEditingStrategy_Object_CompositionAwareMixin":[],"CompositionAwareMixin":[],"TextEditingStrategy":[]},"IOSTextEditingStrategy":{"GloballyPositionedTextEditingStrategy":[],"DefaultTextEditingStrategy":[],"_DefaultTextEditingStrategy_Object_CompositionAwareMixin":[],"CompositionAwareMixin":[],"TextEditingStrategy":[]},"AndroidTextEditingStrategy":{"GloballyPositionedTextEditingStrategy":[],"DefaultTextEditingStrategy":[],"_DefaultTextEditingStrategy_Object_CompositionAwareMixin":[],"CompositionAwareMixin":[],"TextEditingStrategy":[]},"FirefoxTextEditingStrategy":{"GloballyPositionedTextEditingStrategy":[],"DefaultTextEditingStrategy":[],"_DefaultTextEditingStrategy_Object_CompositionAwareMixin":[],"CompositionAwareMixin":[],"TextEditingStrategy":[]},"TextInputSetClient":{"TextInputCommand":[]},"TextInputUpdateConfig":{"TextInputCommand":[]},"TextInputSetEditingState":{"TextInputCommand":[]},"TextInputShow":{"TextInputCommand":[]},"TextInputSetEditableSizeAndTransform":{"TextInputCommand":[]},"TextInputSetStyle":{"TextInputCommand":[]},"TextInputClearClient":{"TextInputCommand":[]},"TextInputHide":{"TextInputCommand":[]},"TextInputSetMarkedTextRect":{"TextInputCommand":[]},"TextInputSetCaretRect":{"TextInputCommand":[]},"TextInputRequestAutofill":{"TextInputCommand":[]},"TextInputFinishAutofillContext":{"TextInputCommand":[]},"TransformKind":{"_Enum":[],"Enum":[]},"CustomElementDimensionsProvider":{"DimensionsProvider":[]},"FullPageDimensionsProvider":{"DimensionsProvider":[]},"CustomElementEmbeddingStrategy":{"EmbeddingStrategy":[]},"FullPageEmbeddingStrategy":{"EmbeddingStrategy":[]},"EngineFlutterView":{"FlutterView":[]},"_EngineFlutterViewImpl":{"EngineFlutterView":[],"FlutterView":[]},"EngineFlutterWindow":{"EngineFlutterView":[],"SingletonFlutterWindow":[],"FlutterView":[]},"ViewPadding":{"ViewPadding0":[]},"ViewConstraints":{"ViewConstraints0":[]},"_DefaultTextEditingStrategy_Object_CompositionAwareMixin":{"CompositionAwareMixin":[]},"_DomCanvas_EngineCanvas_SaveElementStackTracking":{"SaveElementStackTracking":[],"EngineCanvas":[]},"_LayoutFragment__CombinedFragment__FragmentMetrics":{"_FragmentMetrics":[],"_CombinedFragment":[],"TextFragment":[]},"_LayoutFragment__CombinedFragment__FragmentMetrics__FragmentPosition":{"_LayoutFragment__CombinedFragment__FragmentMetrics":[],"_FragmentPosition":[],"_FragmentMetrics":[],"_CombinedFragment":[],"TextFragment":[]},"_LayoutFragment__CombinedFragment__FragmentMetrics__FragmentPosition__FragmentBox":{"_LayoutFragment__CombinedFragment__FragmentMetrics__FragmentPosition":[],"_FragmentBox":[],"_LayoutFragment__CombinedFragment__FragmentMetrics":[],"_FragmentPosition":[],"_FragmentMetrics":[],"_CombinedFragment":[],"TextFragment":[]},"_PersistedClipRRect_PersistedContainerSurface__DomClip":{"_DomClip":[],"PersistedContainerSurface":[],"PersistedSurface":[],"EngineLayer":[]},"_PersistedClipRect_PersistedContainerSurface__DomClip":{"_DomClip":[],"PersistedContainerSurface":[],"PersistedSurface":[],"EngineLayer":[]},"__PointerAdapter__BaseAdapter__WheelEventListenerMixin":{"_WheelEventListenerMixin":[],"_BaseAdapter":[]},"CastQueue":{"Queue":["2"],"_QueueIterable":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"HideEfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"ConstantSet":{"SetBase":["1"],"Set":["1"],"_SetIterable":["1"],"EfficientLengthIterable":["1"],"HideEfficientLengthIterable":["1"],"Iterable":["1"]},"ConstantStringSet":{"ConstantSet":["1"],"SetBase":["1"],"Set":["1"],"_SetIterable":["1"],"EfficientLengthIterable":["1"],"HideEfficientLengthIterable":["1"],"Iterable":["1"]},"GeneralConstantSet":{"ConstantSet":["1"],"SetBase":["1"],"Set":["1"],"_SetIterable":["1"],"EfficientLengthIterable":["1"],"HideEfficientLengthIterable":["1"],"Iterable":["1"]},"LineCharProperty":{"_Enum":[],"Enum":[]},"WordCharProperty":{"_Enum":[],"Enum":[]},"_BroadcastStream":{"_ControllerStream":["1"],"_StreamImpl":["1"],"Stream":["1"]},"_BroadcastSubscription":{"_ControllerSubscription":["1"],"_BufferingStreamSubscription":["1"],"StreamSubscription":["1"],"_EventSink":["1"],"_EventDispatch":["1"]},"_BroadcastStreamController":{"_StreamControllerBase":["1"],"StreamController":["1"],"StreamSink":["1"],"EventSink":["1"],"Sink":["1"],"StreamConsumer":["1"],"_StreamControllerLifecycle":["1"],"_EventSink":["1"],"_EventDispatch":["1"]},"_SyncBroadcastStreamController":{"_BroadcastStreamController":["1"],"_StreamControllerBase":["1"],"SynchronousStreamController":["1"],"StreamController":["1"],"StreamSink":["1"],"EventSink":["1"],"Sink":["1"],"StreamConsumer":["1"],"_StreamControllerLifecycle":["1"],"_EventSink":["1"],"_EventDispatch":["1"]},"_AsyncBroadcastStreamController":{"_BroadcastStreamController":["1"],"_StreamControllerBase":["1"],"StreamController":["1"],"StreamSink":["1"],"EventSink":["1"],"Sink":["1"],"StreamConsumer":["1"],"_StreamControllerLifecycle":["1"],"_EventSink":["1"],"_EventDispatch":["1"]},"EventSink":{"Sink":["1"]},"StreamSink":{"EventSink":["1"],"Sink":["1"],"StreamConsumer":["1"]},"StreamController":{"StreamSink":["1"],"EventSink":["1"],"Sink":["1"],"StreamConsumer":["1"]},"SynchronousStreamController":{"StreamController":["1"],"StreamSink":["1"],"EventSink":["1"],"Sink":["1"],"StreamConsumer":["1"]},"_StreamControllerBase":{"StreamController":["1"],"StreamSink":["1"],"EventSink":["1"],"Sink":["1"],"StreamConsumer":["1"],"_StreamControllerLifecycle":["1"],"_EventSink":["1"],"_EventDispatch":["1"]},"_ControllerStream":{"_StreamImpl":["1"],"Stream":["1"]},"_ControllerSubscription":{"_BufferingStreamSubscription":["1"],"StreamSubscription":["1"],"_EventSink":["1"],"_EventDispatch":["1"]},"_BufferingStreamSubscription":{"StreamSubscription":["1"],"_EventSink":["1"],"_EventDispatch":["1"]},"_StreamImpl":{"Stream":["1"]},"_DelayedData":{"_DelayedEvent":["1"]},"_DelayedDone":{"_DelayedEvent":["@"]},"_DoneStreamSubscription":{"StreamSubscription":["1"]},"_QueueIterable":{"EfficientLengthIterable":["1"],"HideEfficientLengthIterable":["1"],"Iterable":["1"]},"Queue":{"_QueueIterable":["1"],"EfficientLengthIterable":["1"],"HideEfficientLengthIterable":["1"],"Iterable":["1"]},"_DoubleLinkedQueueElement":{"_DoubleLinkedQueueEntry":["1"],"DoubleLinkedQueueEntry":["1"]},"_DoubleLinkedQueueSentinel":{"_DoubleLinkedQueueEntry":["1"]},"DoubleLinkedQueue":{"Queue":["1"],"_QueueIterable":["1"],"EfficientLengthIterable":["1"],"HideEfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_DoubleLinkedQueueIterator":{"Iterator":["1"]},"ListQueue":{"Queue":["1"],"ListIterable":["1"],"_QueueIterable":["1"],"EfficientLengthIterable":["1"],"HideEfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"_ListQueueIterator":{"Iterator":["1"]},"AsciiCodec":{"Encoding":[],"Codec":["String","List<int>"],"Codec.S":"String","Codec.T":"List<int>"},"_UnicodeSubsetEncoder":{"Converter":["String","List<int>"],"StreamTransformerBase":["String","List<int>"],"StreamTransformer":["String","List<int>"]},"AsciiEncoder":{"_UnicodeSubsetEncoder":[],"Converter":["String","List<int>"],"StreamTransformerBase":["String","List<int>"],"StreamTransformer":["String","List<int>"],"Converter.T":"List<int>","Converter.S":"String"},"_UnicodeSubsetEncoderSink":{"StringConversionSink":[],"ChunkedConversionSink":["String"],"Sink":["String"]},"_UnicodeSubsetDecoder":{"Converter":["List<int>","String"],"StreamTransformerBase":["List<int>","String"],"StreamTransformer":["List<int>","String"]},"AsciiDecoder":{"_UnicodeSubsetDecoder":[],"Converter":["List<int>","String"],"StreamTransformerBase":["List<int>","String"],"StreamTransformer":["List<int>","String"],"Converter.T":"String","Converter.S":"List<int>"},"_ErrorHandlingAsciiDecoderSink":{"ByteConversionSink":[],"ChunkedConversionSink":["List<int>"],"Sink":["List<int>"]},"_SimpleAsciiDecoderSink":{"ByteConversionSink":[],"ChunkedConversionSink":["List<int>"],"Sink":["List<int>"]},"Base64Codec":{"Codec":["List<int>","String"],"Codec.S":"List<int>","Codec.T":"String"},"Base64Encoder":{"Converter":["List<int>","String"],"StreamTransformerBase":["List<int>","String"],"StreamTransformer":["List<int>","String"],"Converter.T":"String","Converter.S":"List<int>"},"_BufferCachingBase64Encoder":{"_Base64Encoder":[]},"_Base64EncoderSink":{"ByteConversionSink":[],"ChunkedConversionSink":["List<int>"],"Sink":["List<int>"]},"_AsciiBase64EncoderSink":{"_Base64EncoderSink":[],"ByteConversionSink":[],"ChunkedConversionSink":["List<int>"],"Sink":["List<int>"]},"_Utf8Base64EncoderSink":{"_Base64EncoderSink":[],"ByteConversionSink":[],"ChunkedConversionSink":["List<int>"],"Sink":["List<int>"]},"Base64Decoder":{"Converter":["String","List<int>"],"StreamTransformerBase":["String","List<int>"],"StreamTransformer":["String","List<int>"],"Converter.T":"List<int>","Converter.S":"String"},"_Base64DecoderSink":{"StringConversionSink":[],"ChunkedConversionSink":["String"],"Sink":["String"]},"Latin1Codec":{"Encoding":[],"Codec":["String","List<int>"],"Codec.S":"String","Codec.T":"List<int>"},"Latin1Encoder":{"_UnicodeSubsetEncoder":[],"Converter":["String","List<int>"],"StreamTransformerBase":["String","List<int>"],"StreamTransformer":["String","List<int>"],"Converter.T":"List<int>","Converter.S":"String"},"Latin1Decoder":{"_UnicodeSubsetDecoder":[],"Converter":["List<int>","String"],"StreamTransformerBase":["List<int>","String"],"StreamTransformer":["List<int>","String"],"Converter.T":"String","Converter.S":"List<int>"},"_Latin1DecoderSink":{"ByteConversionSink":[],"ChunkedConversionSink":["List<int>"],"Sink":["List<int>"]},"_Latin1AllowInvalidDecoderSink":{"_Latin1DecoderSink":[],"ByteConversionSink":[],"ChunkedConversionSink":["List<int>"],"Sink":["List<int>"]},"DateTime":{"Comparable":["DateTime"]},"_PlatformUri":{"Uri":[]},"_Uri":{"_PlatformUri":[],"Uri":[]},"_SimpleUri":{"_PlatformUri":[],"Uri":[]},"_DataUri":{"_Uri":[],"_PlatformUri":[],"Uri":[]},"NullRejectionException":{"Exception":[]},"ClipOp":{"_Enum":[],"Enum":[]},"PathFillType":{"_Enum":[],"Enum":[]},"TransformEngineLayer0":{"EngineLayer":[]},"OffsetEngineLayer0":{"EngineLayer":[]},"ClipRectEngineLayer0":{"EngineLayer":[]},"ClipRRectEngineLayer0":{"EngineLayer":[]},"ClipPathEngineLayer0":{"EngineLayer":[]},"OpacityEngineLayer0":{"EngineLayer":[]},"ImageFilterEngineLayer0":{"EngineLayer":[]},"BackdropFilterEngineLayer0":{"EngineLayer":[]},"Offset":{"OffsetBase":[]},"Size":{"OffsetBase":[]},"StrokeCap":{"_Enum":[],"Enum":[]},"StrokeJoin":{"_Enum":[],"Enum":[]},"PaintingStyle":{"_Enum":[],"Enum":[]},"BlendMode":{"_Enum":[],"Enum":[]},"Clip":{"_Enum":[],"Enum":[]},"Gradient":{"Shader":[]},"ColorFilter":{"ImageFilter":[]},"BlurStyle":{"_Enum":[],"Enum":[]},"FilterQuality":{"_Enum":[],"Enum":[]},"FragmentShader":{"Shader":[]},"FramePhase":{"_Enum":[],"Enum":[]},"_FrameTimingInfo":{"_Enum":[],"Enum":[]},"AppLifecycleState":{"_Enum":[],"Enum":[]},"AppExitResponse":{"_Enum":[],"Enum":[]},"DartPerformanceMode":{"_Enum":[],"Enum":[]},"ViewFocusState":{"_Enum":[],"Enum":[]},"ViewFocusDirection":{"_Enum":[],"Enum":[]},"PointerChange":{"_Enum":[],"Enum":[]},"PointerDeviceKind":{"_Enum":[],"Enum":[]},"PointerSignalKind":{"_Enum":[],"Enum":[]},"FontStyle":{"_Enum":[],"Enum":[]},"PlaceholderAlignment":{"_Enum":[],"Enum":[]},"TextAlign":{"_Enum":[],"Enum":[]},"TextBaseline":{"_Enum":[],"Enum":[]},"TextDecorationStyle":{"_Enum":[],"Enum":[]},"TextLeadingDistribution":{"_Enum":[],"Enum":[]},"TextDirection":{"_Enum":[],"Enum":[]},"TextAffinity":{"_Enum":[],"Enum":[]},"BoxHeightStyle":{"_Enum":[],"Enum":[]},"BoxWidthStyle":{"_Enum":[],"Enum":[]},"TileMode":{"_Enum":[],"Enum":[]},"SingletonFlutterWindow":{"FlutterView":[]},"Brightness":{"_Enum":[],"Enum":[]},"BrowserEngine":{"_Enum":[],"Enum":[]},"OperatingSystem":{"_Enum":[],"Enum":[]},"Curve":{"ParametricCurve":["double"]},"Cubic":{"Curve":[],"ParametricCurve":["double"]},"FlippedCurve":{"Curve":[],"ParametricCurve":["double"]},"_ErrorDiagnostic":{"DiagnosticsProperty":["List<Object>"],"DiagnosticsNode":[]},"ErrorDescription":{"_ErrorDiagnostic":[],"DiagnosticsProperty":["List<Object>"],"DiagnosticsNode":[],"DiagnosticsProperty.T":"List<Object>"},"ErrorSummary":{"_ErrorDiagnostic":[],"DiagnosticsProperty":["List<Object>"],"DiagnosticsNode":[],"DiagnosticsProperty.T":"List<Object>"},"ErrorHint":{"_ErrorDiagnostic":[],"DiagnosticsProperty":["List<Object>"],"DiagnosticsNode":[],"DiagnosticsProperty.T":"List<Object>"},"ErrorSpacer":{"DiagnosticsProperty":["~"],"DiagnosticsNode":[],"DiagnosticsProperty.T":"~"},"FlutterErrorDetails":{"_FlutterErrorDetails_Object_Diagnosticable":[],"Diagnosticable":[]},"FlutterError":{"_FlutterError_Error_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"AssertionError":[],"Error":[],"Diagnosticable":[]},"DiagnosticsStackTrace":{"DiagnosticsBlock":[],"DiagnosticsNode":[]},"_FlutterErrorDetailsNode":{"DiagnosticableNode":["FlutterErrorDetails"],"DiagnosticsNode":[],"DiagnosticableNode.T":"FlutterErrorDetails"},"_FlutterError_Error_DiagnosticableTreeMixin":{"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Error":[],"Diagnosticable":[]},"_FlutterErrorDetails_Object_Diagnosticable":{"Diagnosticable":[]},"ValueListenable":{"Listenable":[]},"ChangeNotifier":{"Listenable":[]},"ValueNotifier":{"ChangeNotifier":[],"ValueListenable":["1"],"Listenable":[],"ValueNotifier.T":"1"},"DiagnosticLevel":{"_Enum":[],"Enum":[]},"DiagnosticsTreeStyle":{"_Enum":[],"Enum":[]},"_WordWrapParseMode":{"_Enum":[],"Enum":[]},"MessageProperty":{"DiagnosticsProperty":["~"],"DiagnosticsNode":[],"DiagnosticsProperty.T":"~"},"StringProperty":{"DiagnosticsProperty":["String"],"DiagnosticsNode":[],"DiagnosticsProperty.T":"String"},"_NumProperty":{"DiagnosticsProperty":["1"],"DiagnosticsNode":[]},"DoubleProperty":{"_NumProperty":["double"],"DiagnosticsProperty":["double"],"DiagnosticsNode":[],"DiagnosticsProperty.T":"double"},"IntProperty":{"_NumProperty":["int"],"DiagnosticsProperty":["int"],"DiagnosticsNode":[],"DiagnosticsProperty.T":"int"},"FlagProperty":{"DiagnosticsProperty":["bool"],"DiagnosticsNode":[],"DiagnosticsProperty.T":"bool"},"IterableProperty":{"DiagnosticsProperty":["Iterable<1>"],"DiagnosticsNode":[],"DiagnosticsProperty.T":"Iterable<1>"},"EnumProperty":{"DiagnosticsProperty":["1"],"DiagnosticsNode":[],"DiagnosticsProperty.T":"1"},"ObjectFlagProperty":{"DiagnosticsProperty":["1"],"DiagnosticsNode":[],"DiagnosticsProperty.T":"1"},"DiagnosticsProperty":{"DiagnosticsNode":[],"DiagnosticsProperty.T":"1"},"DiagnosticableNode":{"DiagnosticsNode":[],"DiagnosticableNode.T":"1"},"DiagnosticableTreeNode":{"DiagnosticableNode":["DiagnosticableTree"],"DiagnosticsNode":[],"DiagnosticableNode.T":"DiagnosticableTree"},"DiagnosticableTree":{"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"DiagnosticableTreeMixin":{"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"DiagnosticsBlock":{"DiagnosticsNode":[]},"_DiagnosticableTree_Object_Diagnosticable":{"Diagnosticable":[]},"LocalKey":{"Key":[]},"UniqueKey":{"LocalKey":[],"Key":[]},"ObjectCreated":{"ObjectEvent":[]},"ObjectDisposed":{"ObjectEvent":[]},"_FullNode":{"_TrieNode":[]},"_CompressedNode":{"_TrieNode":[]},"_HashCollisionNode":{"_TrieNode":[]},"TargetPlatform":{"_Enum":[],"Enum":[]},"_WordWrapParseMode0":{"_Enum":[],"Enum":[]},"SynchronousFuture":{"Future":["1"]},"GestureDisposition":{"_Enum":[],"Enum":[]},"HitTestEntry":{"HitTestEntry.T":"1"},"Axis":{"_Enum":[],"Enum":[]},"AxisDirection":{"_Enum":[],"Enum":[]},"EdgeInsets":{"EdgeInsetsGeometry":[]},"_MixedEdgeInsets":{"EdgeInsetsGeometry":[]},"TransformProperty":{"DiagnosticsProperty":["Matrix40"],"DiagnosticsNode":[],"DiagnosticsProperty.T":"Matrix40"},"_LinearTextScaler":{"TextScaler":[]},"BoxConstraints":{"Constraints":[]},"BoxHitTestResult":{"HitTestResult":[]},"BoxHitTestEntry":{"HitTestEntry":["RenderBox"],"HitTestEntry.T":"RenderBox"},"BoxParentData":{"ParentData":[]},"_DryLayout":{"_CachedLayoutCalculation":["BoxConstraints","Size"]},"_Baseline":{"_CachedLayoutCalculation":["+(BoxConstraints,TextBaseline)","double?"]},"_IntrinsicDimension":{"_Enum":[],"Enum":[],"_CachedLayoutCalculation":["double","double"]},"RenderBox":{"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"RenderErrorBox":{"RenderBox":[],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"Layer0":{"_Layer_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"PictureLayer":{"Layer0":[],"_Layer_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ContainerLayer0":{"Layer0":[],"_Layer_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"OffsetLayer":{"ContainerLayer0":[],"Layer0":[],"_Layer_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ClipRectLayer":{"ContainerLayer0":[],"Layer0":[],"_Layer_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ClipRRectLayer":{"ContainerLayer0":[],"Layer0":[],"_Layer_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ClipPathLayer":{"ContainerLayer0":[],"Layer0":[],"_Layer_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"TransformLayer":{"OffsetLayer":[],"ContainerLayer0":[],"Layer0":[],"_Layer_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"OpacityLayer":{"OffsetLayer":[],"ContainerLayer0":[],"Layer0":[],"_Layer_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_Layer_Object_DiagnosticableTreeMixin":{"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"PaintingContext":{"ClipContext":[]},"PipelineOwner":{"_PipelineOwner_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"RenderObject":{"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"RenderObjectWithChildMixin":{"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"_ContainerSemanticsFragment":{"_SemanticsFragment":[]},"_InterestingSemanticsFragment":{"_SemanticsFragment":[]},"_RootSemanticsFragment":{"_InterestingSemanticsFragment":[],"_SemanticsFragment":[]},"_IncompleteSemanticsFragment":{"_InterestingSemanticsFragment":[],"_SemanticsFragment":[]},"_SwitchableSemanticsFragment":{"_InterestingSemanticsFragment":[],"_SemanticsFragment":[]},"DiagnosticsDebugCreator":{"DiagnosticsProperty":["Object"],"DiagnosticsNode":[],"DiagnosticsProperty.T":"Object"},"_RenderObject_Object_DiagnosticableTreeMixin":{"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"RenderProxyBox":{"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"RenderProxyBoxMixin":{"RenderObjectWithChildMixin":["1"],"RenderBox":[],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"RenderConstrainedBox":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"RenderSemanticsAnnotations":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":{"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"SchedulerPhase":{"_Enum":[],"Enum":[]},"SchedulerBinding":{"BindingBase":[]},"AttributedStringProperty":{"DiagnosticsProperty":["AttributedString"],"DiagnosticsNode":[],"DiagnosticsProperty.T":"AttributedString"},"SemanticsData":{"_SemanticsData_Object_Diagnosticable":[],"Diagnosticable":[]},"_SemanticsDiagnosticableNode":{"DiagnosticableNode":["SemanticsNode"],"DiagnosticsNode":[],"DiagnosticableNode.T":"SemanticsNode"},"SemanticsHintOverrides":{"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"SemanticsProperties":{"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"SemanticsNode":{"_SemanticsNode_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_BoxEdge":{"Comparable":["_BoxEdge"]},"_SemanticsSortGroup":{"Comparable":["_SemanticsSortGroup"]},"_TraversalSortNode":{"Comparable":["_TraversalSortNode"]},"SemanticsOwner":{"ChangeNotifier":[],"Listenable":[]},"DebugSemanticsDumpOrder":{"_Enum":[],"Enum":[]},"SemanticsSortKey":{"_SemanticsSortKey_Object_Diagnosticable":[],"Diagnosticable":[],"Comparable":["SemanticsSortKey"]},"_SemanticsData_Object_Diagnosticable":{"Diagnosticable":[]},"_SemanticsNode_Object_DiagnosticableTreeMixin":{"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"CachingAssetBundle":{"AssetBundle":[]},"PlatformAssetBundle":{"CachingAssetBundle":[],"AssetBundle":[]},"KeyboardLockMode":{"_Enum":[],"Enum":[]},"KeyEvent":{"_KeyEvent_Object_Diagnosticable":[],"Diagnosticable":[]},"KeyDownEvent":{"KeyEvent":[],"_KeyEvent_Object_Diagnosticable":[],"Diagnosticable":[]},"KeyRepeatEvent":{"KeyEvent":[],"_KeyEvent_Object_Diagnosticable":[],"Diagnosticable":[]},"KeyboardKey":{"_KeyboardKey_Object_Diagnosticable":[],"Diagnosticable":[]},"LogicalKeyboardKey":{"KeyboardKey":[],"_KeyboardKey_Object_Diagnosticable":[],"Diagnosticable":[]},"_KeyboardKey_Object_Diagnosticable":{"Diagnosticable":[]},"PlatformException":{"Exception":[]},"MissingPluginException":{"Exception":[]},"StringCodec0":{"MessageCodec":["String"]},"JSONMessageCodec0":{"MessageCodec":["Object?"]},"JSONMethodCodec0":{"MethodCodec0":[]},"StandardMessageCodec0":{"MessageCodec":["Object?"]},"StandardMethodCodec0":{"MethodCodec0":[]},"MouseCursor0":{"_MouseCursor_Object_Diagnosticable":[],"Diagnosticable":[]},"_DeferringMouseCursor":{"MouseCursor0":[],"_MouseCursor_Object_Diagnosticable":[],"Diagnosticable":[]},"_SystemMouseCursorSession":{"MouseCursorSession":[]},"SystemMouseCursor":{"MouseCursor0":[],"_MouseCursor_Object_Diagnosticable":[],"Diagnosticable":[]},"_MouseCursor_Object_Diagnosticable":{"Diagnosticable":[]},"_ProfiledBinaryMessenger":{"BinaryMessenger":[]},"OptionalMethodChannel":{"MethodChannel":[]},"TextSelection":{"TextRange":[]},"Intent":{"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"Action":{"_Action_Object_Diagnosticable":[],"Diagnosticable":[]},"ActionDispatcher":{"_ActionDispatcher_Object_Diagnosticable":[],"Diagnosticable":[]},"_ActionsScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_ActionDispatcher_Object_Diagnosticable":{"Diagnosticable":[]},"Directionality":{"_UbiquitousInheritedWidget":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"SizedBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"Semantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"WidgetsBinding":{"RendererBinding":[],"ServicesBinding":[],"SemanticsBinding":[],"GestureBinding":[],"SchedulerBinding":[],"BindingBase":[],"HitTestable":[],"HitTestDispatcher":[],"HitTestTarget":[]},"KeyEventResult":{"_Enum":[],"Enum":[]},"UnfocusDisposition":{"_Enum":[],"Enum":[]},"FocusNode":{"_FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier":[],"_FocusNode_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"ChangeNotifier":[],"Diagnosticable":[],"Listenable":[]},"FocusScopeNode":{"FocusNode":[],"_FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier":[],"_FocusNode_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"ChangeNotifier":[],"Diagnosticable":[],"Listenable":[]},"FocusHighlightMode":{"_Enum":[],"Enum":[]},"FocusManager":{"_FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier":[],"_FocusManager_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"ChangeNotifier":[],"Diagnosticable":[],"Listenable":[]},"_FocusNode_Object_DiagnosticableTreeMixin":{"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier":{"_FocusNode_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"ChangeNotifier":[],"Diagnosticable":[],"Listenable":[]},"Focus":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_FocusState":{"State0":["Focus"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"Focus"},"FocusScope":{"Focus":[],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_FocusScopeWithExternalFocusNode":{"FocusScope":[],"Focus":[],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_FocusScopeState":{"_FocusState":[],"State0":["Focus"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"Focus"},"_FocusInheritedScope":{"InheritedNotifier":["FocusNode"],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"InheritedNotifier.T":"FocusNode"},"TraversalDirection":{"_Enum":[],"Enum":[]},"TraversalEdgeBehavior":{"_Enum":[],"Enum":[]},"FocusTraversalPolicy":{"_FocusTraversalPolicy_Object_Diagnosticable":[],"Diagnosticable":[]},"DirectionalFocusTraversalPolicyMixin":{"FocusTraversalPolicy":[],"_FocusTraversalPolicy_Object_Diagnosticable":[],"Diagnosticable":[]},"_ReadingOrderSortData":{"__ReadingOrderSortData_Object_Diagnosticable":[],"Diagnosticable":[]},"_ReadingOrderDirectionalGroupData":{"__ReadingOrderDirectionalGroupData_Object_Diagnosticable":[],"Diagnosticable":[]},"ReadingOrderTraversalPolicy":{"_ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin":[],"DirectionalFocusTraversalPolicyMixin":[],"FocusTraversalPolicy":[],"_FocusTraversalPolicy_Object_Diagnosticable":[],"Diagnosticable":[]},"FocusTraversalGroup":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_FocusTraversalGroupNode":{"FocusNode":[],"_FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier":[],"_FocusNode_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"ChangeNotifier":[],"Diagnosticable":[],"Listenable":[]},"_FocusTraversalGroupState":{"State0":["FocusTraversalGroup"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"FocusTraversalGroup"},"_FocusTraversalPolicy_Object_Diagnosticable":{"Diagnosticable":[]},"_ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin":{"DirectionalFocusTraversalPolicyMixin":[],"FocusTraversalPolicy":[],"_FocusTraversalPolicy_Object_Diagnosticable":[],"Diagnosticable":[]},"__ReadingOrderDirectionalGroupData_Object_Diagnosticable":{"Diagnosticable":[]},"__ReadingOrderSortData_Object_Diagnosticable":{"Diagnosticable":[]},"GlobalKey":{"Key":[]},"StatelessWidget":{"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"StatefulWidget":{"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_StateLifecycle0":{"_Enum":[],"Enum":[]},"State0":{"_State_Object_Diagnosticable":[],"Diagnosticable":[]},"ProxyWidget":{"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ParentDataWidget":{"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"InheritedWidget":{"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"RenderObjectWidget":{"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"LeafRenderObjectWidget":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"SingleChildRenderObjectWidget":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_ElementLifecycle":{"_Enum":[],"Enum":[]},"Element0":{"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"_ElementDiagnosticableTreeNode":{"DiagnosticableTreeNode":[],"DiagnosticableNode":["DiagnosticableTree"],"DiagnosticsNode":[],"DiagnosticableNode.T":"DiagnosticableTree"},"ErrorWidget":{"LeafRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ComponentElement":{"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"StatelessElement0":{"ComponentElement":[],"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"StatefulElement0":{"ComponentElement":[],"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"ProxyElement0":{"ComponentElement":[],"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"ParentDataElement":{"ProxyElement0":[],"ComponentElement":[],"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"InheritedElement":{"ProxyElement0":[],"ComponentElement":[],"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"RenderObjectElement":{"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"LeafRenderObjectElement":{"RenderObjectElement":[],"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"SingleChildRenderObjectElement":{"RenderObjectElement":[],"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"_NullElement":{"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"_NullWidget":{"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_State_Object_Diagnosticable":{"Diagnosticable":[]},"Widget":{"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"InheritedModel":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"InheritedModelElement":{"InheritedElement":[],"ProxyElement0":[],"ComponentElement":[],"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"InheritedNotifier":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_InheritedNotifierElement":{"InheritedElement":[],"ProxyElement0":[],"ComponentElement":[],"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"_MediaQueryAspect":{"_Enum":[],"Enum":[]},"MediaQuery":{"InheritedModel":["_MediaQueryAspect"],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"InheritedModel.T":"_MediaQueryAspect"},"NavigationMode":{"_Enum":[],"Enum":[]},"ScrollPositionAlignmentPolicy":{"_Enum":[],"Enum":[]},"_ScrollableScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ScrollableState":{"_ScrollableState_State_TickerProviderStateMixin_RestorationMixin":[],"_ScrollableState_State_TickerProviderStateMixin":[],"TickerProviderStateMixin":["Scrollable0"],"RestorationMixin":["Scrollable0"],"State0":["Scrollable0"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[],"ScrollContext":[]},"Vector3":{"Vector":[]},"Vector4":{"Vector":[]},"GestureBinding":{"BindingBase":[],"HitTestable":[],"HitTestDispatcher":[],"HitTestTarget":[]},"PointerEvent":{"_PointerEvent_Object_Diagnosticable":[],"Diagnosticable":[]},"PointerHoverEvent":{"_PointerHoverEvent_PointerEvent__PointerEventDescription__CopyPointerHoverEvent":[],"_PointerHoverEvent_PointerEvent__PointerEventDescription":[],"_PointerEventDescription":[],"_CopyPointerHoverEvent":[],"PointerEvent":[],"_PointerEvent_Object_Diagnosticable":[],"Diagnosticable":[]},"PointerEnterEvent":{"_PointerEnterEvent_PointerEvent__PointerEventDescription__CopyPointerEnterEvent":[],"_PointerEnterEvent_PointerEvent__PointerEventDescription":[],"_PointerEventDescription":[],"_CopyPointerEnterEvent":[],"PointerEvent":[],"_PointerEvent_Object_Diagnosticable":[],"Diagnosticable":[]},"PointerExitEvent":{"_PointerExitEvent_PointerEvent__PointerEventDescription__CopyPointerExitEvent":[],"_PointerExitEvent_PointerEvent__PointerEventDescription":[],"_PointerEventDescription":[],"_CopyPointerExitEvent":[],"PointerEvent":[],"_PointerEvent_Object_Diagnosticable":[],"Diagnosticable":[]},"PointerDownEvent":{"_PointerDownEvent_PointerEvent__PointerEventDescription__CopyPointerDownEvent":[],"_PointerDownEvent_PointerEvent__PointerEventDescription":[],"_PointerEventDescription":[],"_CopyPointerDownEvent":[],"PointerEvent":[],"_PointerEvent_Object_Diagnosticable":[],"Diagnosticable":[]},"PointerMoveEvent":{"_PointerMoveEvent_PointerEvent__PointerEventDescription__CopyPointerMoveEvent":[],"_PointerMoveEvent_PointerEvent__PointerEventDescription":[],"_PointerEventDescription":[],"_CopyPointerMoveEvent":[],"PointerEvent":[],"_PointerEvent_Object_Diagnosticable":[],"Diagnosticable":[]},"PointerUpEvent":{"_PointerUpEvent_PointerEvent__PointerEventDescription__CopyPointerUpEvent":[],"_PointerUpEvent_PointerEvent__PointerEventDescription":[],"_PointerEventDescription":[],"_CopyPointerUpEvent":[],"PointerEvent":[],"_PointerEvent_Object_Diagnosticable":[],"Diagnosticable":[]},"PointerSignalEvent":{"_PointerSignalEvent_PointerEvent__RespondablePointerEvent":[],"_RespondablePointerEvent":[],"PointerEvent":[],"_PointerEvent_Object_Diagnosticable":[],"Diagnosticable":[]},"PointerPanZoomStartEvent":{"_PointerPanZoomStartEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomStartEvent":[],"_PointerPanZoomStartEvent_PointerEvent__PointerEventDescription":[],"_PointerEventDescription":[],"_CopyPointerPanZoomStartEvent":[],"PointerEvent":[],"_PointerEvent_Object_Diagnosticable":[],"Diagnosticable":[]},"PointerPanZoomUpdateEvent":{"_PointerPanZoomUpdateEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomUpdateEvent":[],"_PointerPanZoomUpdateEvent_PointerEvent__PointerEventDescription":[],"_PointerEventDescription":[],"_CopyPointerPanZoomUpdateEvent":[],"PointerEvent":[],"_PointerEvent_Object_Diagnosticable":[],"Diagnosticable":[]},"PointerPanZoomEndEvent":{"_PointerPanZoomEndEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomEndEvent":[],"_PointerPanZoomEndEvent_PointerEvent__PointerEventDescription":[],"_PointerEventDescription":[],"_CopyPointerPanZoomEndEvent":[],"PointerEvent":[],"_PointerEvent_Object_Diagnosticable":[],"Diagnosticable":[]},"PointerCancelEvent":{"_PointerCancelEvent_PointerEvent__PointerEventDescription__CopyPointerCancelEvent":[],"_PointerCancelEvent_PointerEvent__PointerEventDescription":[],"_PointerEventDescription":[],"_CopyPointerCancelEvent":[],"PointerEvent":[],"_PointerEvent_Object_Diagnosticable":[],"Diagnosticable":[]},"PaintingBinding":{"ServicesBinding":[],"SchedulerBinding":[],"BindingBase":[]},"RendererBinding":{"ServicesBinding":[],"SemanticsBinding":[],"GestureBinding":[],"SchedulerBinding":[],"HitTestable":[],"BindingBase":[],"HitTestDispatcher":[],"HitTestTarget":[]},"SemanticsBinding":{"BindingBase":[]},"ServicesBinding":{"SchedulerBinding":[],"BindingBase":[]},"MouseTrackerAnnotation":{"_MouseTrackerAnnotation_Object_Diagnosticable":[],"Diagnosticable":[]},"RawKeyEvent":{"_RawKeyEvent_Object_Diagnosticable":[],"Diagnosticable":[]},"_ViewScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_PipelineOwnerScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_WidgetInspectorService":{"__WidgetInspectorService_Object_WidgetInspectorService":[],"WidgetInspectorService":[]},"InspectorSelection":{"_InspectorSelection_Object_ChangeNotifier":[],"ChangeNotifier":[],"Listenable":[]},"_InspectorSelection_Object_ChangeNotifier":{"ChangeNotifier":[],"Listenable":[]},"__WidgetInspectorService_Object_WidgetInspectorService":{"WidgetInspectorService":[]}}'));
  var string$ = {
    _recor: '"recorder" must not already be associated with another Canvas.',
    ABCDEFx2b: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
    ABCDEFx2d: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
    Cannot: "Cannot fire new event. Controller is already firing an event",
    The_as: "The asset does not exist or has empty data."
  };
  var type$ = (function rtii() {
    var findType = B.findType;
    return {
      Action_Intent: findType("Action<Intent>"),
      AppExitResponse: findType("AppExitResponse"),
      AppLifecycleState: findType("AppLifecycleState"),
      AssertionError: findType("AssertionError"),
      Assertiveness: findType("Assertiveness"),
      AssetFontsResult: findType("AssetFontsResult"),
      AttributedString: findType("AttributedString"),
      AutofillInfo: findType("AutofillInfo"),
      BitmapCanvas: findType("BitmapCanvas"),
      BitmapSize: findType("BitmapSize"),
      BlendMode: findType("BlendMode"),
      BoxConstraints: findType("BoxConstraints"),
      BoxHeightStyle: findType("BoxHeightStyle"),
      BoxHitTestEntry: findType("BoxHitTestEntry"),
      BoxHitTestResult: findType("BoxHitTestResult"),
      BoxParentData: findType("BoxParentData"),
      BoxWidthStyle: findType("BoxWidthStyle"),
      Brightness: findType("Brightness"),
      BuildContext: findType("BuildContext"),
      ByteBuffer: findType("ByteBuffer"),
      ByteData: findType("ByteData"),
      CanvasKitRenderer: findType("CanvasKitRenderer"),
      CanvasKitVariant: findType("CanvasKitVariant"),
      CanvasParagraph: findType("CanvasParagraph"),
      ChangeNotifier: findType("ChangeNotifier"),
      CkCanvas: findType("CkCanvas"),
      CkImage: findType("CkImage"),
      CkPaint: findType("CkPaint"),
      CkParagraph: findType("CkParagraph"),
      CkParagraphStyle: findType("CkParagraphStyle"),
      CkPath: findType("CkPath"),
      CkPicture: findType("CkPicture"),
      CkPictureRecorder: findType("CkPictureRecorder"),
      CkStrutStyle: findType("CkStrutStyle"),
      CkTextStyle: findType("CkTextStyle"),
      Clip: findType("Clip"),
      ClipOp: findType("ClipOp"),
      ClipPathEngineLayer: findType("ClipPathEngineLayer"),
      ClipRRectEngineLayer: findType("ClipRRectEngineLayer"),
      ClipRectEngineLayer: findType("ClipRectEngineLayer"),
      Color: findType("Color"),
      Comparable_dynamic: findType("Comparable<@>"),
      Conic: findType("Conic"),
      ConstantStringMap_String_String: findType("ConstantStringMap<String,String>"),
      ConstantStringSet_String: findType("ConstantStringSet<String>"),
      Constraints: findType("Constraints"),
      ContainerLayer: findType("ContainerLayer"),
      ContainerLayer_2: findType("ContainerLayer0"),
      CountedRef_CkImage_JavaScriptObject: findType("CountedRef<CkImage,JavaScriptObject>"),
      Curve: findType("Curve"),
      CustomSemanticsAction: findType("CustomSemanticsAction"),
      DartPerformanceMode: findType("DartPerformanceMode"),
      DateTime: findType("DateTime"),
      DebugSemanticsDumpOrder: findType("DebugSemanticsDumpOrder"),
      DiagnosticLevel: findType("DiagnosticLevel"),
      DiagnosticPropertiesBuilder: findType("DiagnosticPropertiesBuilder"),
      Diagnosticable: findType("Diagnosticable"),
      DiagnosticableTree: findType("DiagnosticableTree"),
      DiagnosticsNode: findType("DiagnosticsNode"),
      DiagnosticsTreeStyle: findType("DiagnosticsTreeStyle"),
      Dialog: findType("Dialog"),
      Directionality: findType("Directionality"),
      DisplayCanvas: findType("DisplayCanvas"),
      DomPoint: findType("DomPoint"),
      DomSubscription: findType("DomSubscription"),
      DrawCommand: findType("DrawCommand"),
      Duration: findType("Duration"),
      EdgeInsets: findType("EdgeInsets"),
      EdgeInsetsGeometry: findType("EdgeInsetsGeometry"),
      EditableTextGeometry: findType("EditableTextGeometry"),
      EditableTextStyle: findType("EditableTextStyle"),
      EditingState: findType("EditingState"),
      EfficientLengthIterable_dynamic: findType("EfficientLengthIterable<@>"),
      Element: findType("Element0"),
      EmbeddedViewParams: findType("EmbeddedViewParams"),
      EngineAccessibilityFeatures: findType("EngineAccessibilityFeatures"),
      EngineCanvas: findType("EngineCanvas"),
      EngineFlutterView: findType("EngineFlutterView"),
      EngineLayer: findType("EngineLayer"),
      EngineLineMetrics: findType("EngineLineMetrics"),
      EngineParagraphStyle: findType("EngineParagraphStyle"),
      EnginePicture: findType("EnginePicture"),
      EnginePictureRecorder: findType("EnginePictureRecorder"),
      EngineTextStyle: findType("EngineTextStyle"),
      Error: findType("Error"),
      Exception: findType("Exception"),
      FallbackFontComponent: findType("FallbackFontComponent"),
      FallbackFontDownloadQueue: findType("FallbackFontDownloadQueue"),
      FilterQuality: findType("FilterQuality"),
      Float32List: findType("Float32List"),
      Float64List: findType("Float64List"),
      FlutterError: findType("FlutterError"),
      FlutterErrorDetails: findType("FlutterErrorDetails"),
      FlutterView: findType("FlutterView"),
      Focus: findType("Focus"),
      FocusManager: findType("FocusManager"),
      FocusNode: findType("FocusNode"),
      FocusScopeNode: findType("FocusScopeNode"),
      FocusTraversalGroup: findType("FocusTraversalGroup"),
      FocusTraversalPolicy: findType("FocusTraversalPolicy"),
      FontDownloadResult: findType("FontDownloadResult"),
      FontFallbackManager: findType("FontFallbackManager"),
      FontFeature: findType("FontFeature"),
      FontLoadError: findType("FontLoadError"),
      FontManifest: findType("FontManifest"),
      FontVariation: findType("FontVariation"),
      Frame: findType("Frame"),
      FramePhase: findType("FramePhase"),
      Function: findType("Function"),
      Future_String: findType("Future<String>"),
      Future_dynamic: findType("Future<@>"),
      Future_dynamic_Function_MethodCall: findType("Future<@>(MethodCall)"),
      Future_void: findType("Future<~>"),
      GeneralConstantSet_int: findType("GeneralConstantSet<int>"),
      GestureBinding: findType("GestureBinding"),
      GestureMode: findType("GestureMode"),
      GlContext: findType("GlContext"),
      GlProgram: findType("GlProgram"),
      GlobalKey_State_StatefulWidget: findType("GlobalKey<State0<StatefulWidget>>"),
      HitTestEntry_HitTestTarget: findType("HitTestEntry<HitTestTarget>"),
      HtmlImage: findType("HtmlImage"),
      HttpFetchResponse: findType("HttpFetchResponse"),
      HybridTextEditing: findType("HybridTextEditing"),
      Image: findType("Image"),
      InheritedElement: findType("InheritedElement"),
      InheritedWidget: findType("InheritedWidget"),
      InputConfiguration: findType("InputConfiguration"),
      Int16List: findType("Int16List"),
      Int32List: findType("Int32List"),
      Int8List: findType("Int8List"),
      Intent: findType("Intent"),
      Iterable_FocusNode: findType("Iterable<FocusNode>"),
      Iterable_SemanticsNode: findType("Iterable<SemanticsNode>"),
      Iterable_SemanticsTag: findType("Iterable<SemanticsTag>"),
      Iterable_String: findType("Iterable<String>"),
      Iterable__InterestingSemanticsFragment: findType("Iterable<_InterestingSemanticsFragment>"),
      Iterable__ReadingOrderSortData: findType("Iterable<_ReadingOrderSortData>"),
      Iterable_dynamic: findType("Iterable<@>"),
      Iterable_nullable_Object: findType("Iterable<Object?>"),
      JSArray_BidiFragment: findType("JSArray<BidiFragment>"),
      JSArray_CkCanvas: findType("JSArray<CkCanvas>"),
      JSArray_CkPicture: findType("JSArray<CkPicture>"),
      JSArray_CkPictureRecorder: findType("JSArray<CkPictureRecorder>"),
      JSArray_CkTextStyle: findType("JSArray<CkTextStyle>"),
      JSArray_Conic: findType("JSArray<Conic>"),
      JSArray_DiagnosticsNode: findType("JSArray<DiagnosticsNode>"),
      JSArray_Directionality: findType("JSArray<Directionality>"),
      JSArray_DomSubscription: findType("JSArray<DomSubscription>"),
      JSArray_EngineFlutterDisplay: findType("JSArray<EngineFlutterDisplay>"),
      JSArray_FallbackFontComponent: findType("JSArray<FallbackFontComponent>"),
      JSArray_FocusNode: findType("JSArray<FocusNode>"),
      JSArray_FontLoadError: findType("JSArray<FontLoadError>"),
      JSArray_FrameReference_dynamic: findType("JSArray<FrameReference<@>>"),
      JSArray_FrameTiming: findType("JSArray<FrameTiming>"),
      JSArray_Future_FontDownloadResult: findType("JSArray<Future<FontDownloadResult>>"),
      JSArray_Future_Record_2_String_and_nullable_FontLoadError: findType("JSArray<Future<+(String,FontLoadError?)>>"),
      JSArray_Future_void: findType("JSArray<Future<~>>"),
      JSArray_InheritedElement: findType("JSArray<InheritedElement>"),
      JSArray_JavaScriptObject: findType("JSArray<JavaScriptObject>"),
      JSArray_Layer: findType("JSArray<Layer>"),
      JSArray_LayoutFragment: findType("JSArray<LayoutFragment>"),
      JSArray_LineBreakFragment: findType("JSArray<LineBreakFragment>"),
      JSArray_LineMetrics: findType("JSArray<LineMetrics>"),
      JSArray_List__InterestingSemanticsFragment: findType("JSArray<List<_InterestingSemanticsFragment>>"),
      JSArray_Listener: findType("JSArray<Listener>"),
      JSArray_Locale: findType("JSArray<Locale>"),
      JSArray_Map_String_dynamic: findType("JSArray<Map<String,@>>"),
      JSArray_Matrix4: findType("JSArray<Matrix4>"),
      JSArray_Mutator: findType("JSArray<Mutator>"),
      JSArray_NotoFont: findType("JSArray<NotoFont>"),
      JSArray_Object: findType("JSArray<Object>"),
      JSArray_Offset: findType("JSArray<Offset>"),
      JSArray_PaintCommand: findType("JSArray<PaintCommand>"),
      JSArray_PaintRequest: findType("JSArray<PaintRequest>"),
      JSArray_ParagraphLine: findType("JSArray<ParagraphLine>"),
      JSArray_ParagraphSpan: findType("JSArray<ParagraphSpan>"),
      JSArray_ParentDataElement_ParentData: findType("JSArray<ParentDataElement<ParentData>>"),
      JSArray_PersistedContainerSurface: findType("JSArray<PersistedContainerSurface>"),
      JSArray_PersistedSurface: findType("JSArray<PersistedSurface>"),
      JSArray_PointerData: findType("JSArray<PointerData>"),
      JSArray_Radius: findType("JSArray<Radius>"),
      JSArray_Record_2_SizedSpanRepresentation_representation_and_Size_targetSize: findType("JSArray<+representation,targetSize(SizedSpanRepresentation,Size)>"),
      JSArray_Record_2_String_and_UnregisteredFont: findType("JSArray<+(String,UnregisteredFont)>"),
      JSArray_Record_3_List_PointerData_data_and_JavaScriptObject_event_and_Duration_timeStamp: findType("JSArray<+data,event,timeStamp(List<PointerData>,JavaScriptObject,Duration)>"),
      JSArray_Record_3_Size_domSize_and_SizedSpanRepresentation_representation_and_Size_targetSize: findType("JSArray<+domSize,representation,targetSize(Size,SizedSpanRepresentation,Size)>"),
      JSArray_RegisteredFont: findType("JSArray<RegisteredFont>"),
      JSArray_RenderObject: findType("JSArray<RenderObject>"),
      JSArray_RenderingEntity: findType("JSArray<RenderingEntity>"),
      JSArray_RoleManager: findType("JSArray<RoleManager>"),
      JSArray_SaveClipEntry: findType("JSArray<SaveClipEntry>"),
      JSArray_SaveStackEntry: findType("JSArray<SaveStackEntry>"),
      JSArray_SemanticsConfiguration: findType("JSArray<SemanticsConfiguration>"),
      JSArray_SemanticsNode: findType("JSArray<SemanticsNode>"),
      JSArray_SemanticsObject: findType("JSArray<SemanticsObject>"),
      JSArray_ShaderDeclaration: findType("JSArray<ShaderDeclaration>"),
      JSArray_ShaderMethod: findType("JSArray<ShaderMethod>"),
      JSArray_StreamSubscription_void: findType("JSArray<StreamSubscription<~>>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_StyleNode: findType("JSArray<StyleNode>"),
      JSArray_TextBox: findType("JSArray<TextBox>"),
      JSArray_Uint8List: findType("JSArray<Uint8List>"),
      JSArray_UnregisteredFont: findType("JSArray<UnregisteredFont>"),
      JSArray__BoxEdge: findType("JSArray<_BoxEdge>"),
      JSArray__DirectionalPolicyDataEntry: findType("JSArray<_DirectionalPolicyDataEntry>"),
      JSArray__InterestingSemanticsFragment: findType("JSArray<_InterestingSemanticsFragment>"),
      JSArray__PersistedSurfaceMatch: findType("JSArray<_PersistedSurfaceMatch>"),
      JSArray__ReadingOrderDirectionalGroupData: findType("JSArray<_ReadingOrderDirectionalGroupData>"),
      JSArray__ReadingOrderSortData: findType("JSArray<_ReadingOrderSortData>"),
      JSArray__SaveElementStackEntry: findType("JSArray<_SaveElementStackEntry>"),
      JSArray__SemanticsSortGroup: findType("JSArray<_SemanticsSortGroup>"),
      JSArray__TraversalSortNode: findType("JSArray<_TraversalSortNode>"),
      JSArray_bool: findType("JSArray<bool>"),
      JSArray_double: findType("JSArray<double>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_nullable_LayoutFragment: findType("JSArray<LayoutFragment?>"),
      JSArray_nullable_Object: findType("JSArray<Object?>"),
      JSArray_nullable_PersistedSurface: findType("JSArray<PersistedSurface?>"),
      JSArray_nullable_Rect: findType("JSArray<Rect?>"),
      JSArray_nullable_String: findType("JSArray<String?>"),
      JSArray_nullable__AsyncBlock: findType("JSArray<_AsyncBlock?>"),
      JSArray_of_void_Function: findType("JSArray<~()>"),
      JSArray_of_void_Function_AppLifecycleState: findType("JSArray<~(AppLifecycleState)>"),
      JSArray_of_void_Function_GestureMode: findType("JSArray<~(GestureMode)>"),
      JSArray_of_void_Function_bool: findType("JSArray<~(bool)>"),
      JSIndexable_dynamic: findType("JSIndexable<@>"),
      JSObject: findType("JSObject"),
      JavaScriptObject: findType("JavaScriptObject"),
      Key: findType("Key"),
      KeyData: findType("KeyData"),
      LabelRepresentation: findType("LabelRepresentation"),
      Layer: findType("Layer"),
      LayerScene: findType("LayerScene"),
      LayerTree: findType("LayerTree"),
      Layer_2: findType("Layer0"),
      LayoutFragment: findType("LayoutFragment"),
      LineBreakType: findType("LineBreakType"),
      LineCharProperty: findType("LineCharProperty"),
      List_CkPicture: findType("List<CkPicture>"),
      List_Color: findType("List<Color>"),
      List_Conic: findType("List<Conic>"),
      List_Element: findType("List<Element0>"),
      List_FallbackFontComponent: findType("List<FallbackFontComponent>"),
      List_FrameTiming: findType("List<FrameTiming>"),
      List_JavaScriptObject: findType("List<JavaScriptObject>"),
      List_LayoutFragment: findType("List<LayoutFragment>"),
      List_NotoFont: findType("List<NotoFont>"),
      List_PointerData: findType("List<PointerData>"),
      List_RenderObject: findType("List<RenderObject>"),
      List_SemanticsNode: findType("List<SemanticsNode>"),
      List_SemanticsObject: findType("List<SemanticsObject>"),
      List_String: findType("List<String>"),
      List_TextBox: findType("List<TextBox>"),
      List_Widget: findType("List<Widget>"),
      List__InterestingSemanticsFragment: findType("List<_InterestingSemanticsFragment>"),
      List__ReadingOrderSortData: findType("List<_ReadingOrderSortData>"),
      List_double: findType("List<double>"),
      List_dynamic: findType("List<@>"),
      List_int: findType("List<int>"),
      List_nullable_Object: findType("List<Object?>"),
      List_of_nullable_void_Function: findType("List<~()?>"),
      List_of_void_Function: findType("List<~()>"),
      List_void: findType("List<~>"),
      Map_String_String: findType("Map<String,String>"),
      Map_String_dynamic: findType("Map<String,@>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      Map_int_SemanticsObject: findType("Map<int,SemanticsObject>"),
      Map_of_CustomSemanticsAction_and_void_Function: findType("Map<CustomSemanticsAction,~()>"),
      Map_of_SemanticsAction_and_void_Function_nullable_Object: findType("Map<SemanticsAction,~(Object?)>"),
      Map_of_String_and_List_String: findType("Map<String,List<String>>"),
      Map_of_String_and_nullable_GlProgram: findType("Map<String,GlProgram?>"),
      Map_of_String_and_nullable_Object: findType("Map<String,Object?>"),
      Map_of_nullable_Object_and_nullable_Object: findType("Map<Object?,Object?>"),
      Matrix4: findType("Matrix4"),
      Matrix4_2: findType("Matrix40"),
      MediaQuery: findType("MediaQuery"),
      MediaQueryData: findType("MediaQueryData"),
      MethodCall: findType("MethodCall0"),
      MethodCall_2: findType("MethodCall"),
      MethodCodec: findType("MethodCodec"),
      MultiSurfaceViewRasterizer: findType("MultiSurfaceViewRasterizer"),
      Mutator: findType("Mutator"),
      NativeFloat32List: findType("NativeFloat32List"),
      NativeUint16List: findType("NativeUint16List"),
      NativeUint8List: findType("NativeUint8List"),
      NormalizedGradient: findType("NormalizedGradient"),
      Notification: findType("Notification"),
      NotoFont: findType("NotoFont"),
      Null: findType("Null"),
      Object: findType("Object"),
      ObjectEvent: findType("ObjectEvent"),
      Object_Function_int: findType("Object(int)"),
      Object_Function_int_$named_params_nullable_Object: findType("Object(int{params:Object?})"),
      OffscreenCanvasViewRasterizer: findType("OffscreenCanvasViewRasterizer"),
      Offset: findType("Offset"),
      OffsetBase: findType("OffsetBase"),
      OffsetEngineLayer: findType("OffsetEngineLayer"),
      OffsetLayer: findType("OffsetLayer"),
      OpacityEngineLayer: findType("OpacityEngineLayer"),
      Paint: findType("Paint"),
      PaintContext: findType("PaintContext"),
      PaintRequest: findType("PaintRequest"),
      PaintingContext: findType("PaintingContext"),
      PaintingStyle: findType("PaintingStyle"),
      Paragraph: findType("Paragraph"),
      ParagraphConstraints: findType("ParagraphConstraints"),
      ParagraphLine: findType("ParagraphLine"),
      ParagraphStyle: findType("ParagraphStyle"),
      ParentData: findType("ParentData"),
      ParentDataElement_ParentData: findType("ParentDataElement<ParentData>"),
      ParentDataWidget_ParentData: findType("ParentDataWidget<ParentData>"),
      Path: findType("Path"),
      PathFillType: findType("PathFillType"),
      PathRef: findType("PathRef"),
      PersistedClipPath: findType("PersistedClipPath"),
      PersistedClipRRect: findType("PersistedClipRRect"),
      PersistedClipRect: findType("PersistedClipRect"),
      PersistedContainerSurface: findType("PersistedContainerSurface"),
      PersistedOffset: findType("PersistedOffset"),
      PersistedOpacity: findType("PersistedOpacity"),
      PersistedPicture: findType("PersistedPicture"),
      PersistedScene: findType("PersistedScene"),
      PersistedSurface: findType("PersistedSurface"),
      PersistedSurfaceState: findType("PersistedSurfaceState"),
      PersistedTransform: findType("PersistedTransform"),
      Picture: findType("Picture"),
      PictureRecorder: findType("PictureRecorder"),
      PipelineOwner: findType("PipelineOwner"),
      PlaceholderSpan: findType("PlaceholderSpan0"),
      PlatformConfiguration: findType("PlatformConfiguration"),
      PointerBinding: findType("PointerBinding"),
      PointerChange: findType("PointerChange"),
      PointerDataPacket: findType("PointerDataPacket"),
      PointerDeviceKind: findType("PointerDeviceKind"),
      PointerEvent: findType("PointerEvent"),
      PredictiveBackEvent: findType("PredictiveBackEvent"),
      PrerollContext: findType("PrerollContext"),
      PrerollSurfaceContext: findType("PrerollSurfaceContext"),
      PrimaryRole: findType("PrimaryRole"),
      PrimaryRoleManager: findType("PrimaryRoleManager"),
      ProxyWidget: findType("ProxyWidget"),
      RRect: findType("RRect"),
      Radius: findType("Radius"),
      ReadBuffer: findType("ReadBuffer0"),
      ReadBuffer_2: findType("ReadBuffer"),
      Record_2_BoxConstraints_and_TextBaseline: findType("+(BoxConstraints,TextBaseline)"),
      Record_2_String_and_nullable_FontLoadError: findType("+(String,FontLoadError?)"),
      Rect: findType("Rect"),
      RenderBox: findType("RenderBox"),
      RenderCanvas: findType("RenderCanvas"),
      RenderConstrainedBox: findType("RenderConstrainedBox"),
      RenderObject: findType("RenderObject"),
      RenderObjectWidget: findType("RenderObjectWidget"),
      RenderObjectWithChildMixin_RenderObject: findType("RenderObjectWithChildMixin<RenderObject>"),
      RenderSemanticsAnnotations: findType("RenderSemanticsAnnotations"),
      RendererBinding: findType("RendererBinding"),
      Rendering: findType("Rendering"),
      RenderingEntity: findType("RenderingEntity"),
      RenderingRenderCanvas: findType("RenderingRenderCanvas"),
      RoleManager: findType("RoleManager"),
      RouteInformation: findType("RouteInformation"),
      RouteName: findType("RouteName"),
      SaveClipEntry: findType("SaveClipEntry"),
      Scene: findType("Scene"),
      SceneBuilder: findType("SceneBuilder"),
      SchedulerBinding: findType("SchedulerBinding"),
      SemanticsAction: findType("SemanticsAction"),
      SemanticsActionEvent: findType("SemanticsActionEvent"),
      SemanticsBinding: findType("SemanticsBinding"),
      SemanticsConfiguration: findType("SemanticsConfiguration"),
      SemanticsEvent: findType("SemanticsEvent"),
      SemanticsFlag: findType("SemanticsFlag"),
      SemanticsHintOverrides: findType("SemanticsHintOverrides"),
      SemanticsNode: findType("SemanticsNode"),
      SemanticsNodeUpdate: findType("SemanticsNodeUpdate"),
      SemanticsObject: findType("SemanticsObject"),
      SemanticsOwner: findType("SemanticsOwner"),
      SemanticsProperties: findType("SemanticsProperties"),
      SemanticsSortKey: findType("SemanticsSortKey"),
      SemanticsTag: findType("SemanticsTag"),
      SemanticsUpdate: findType("SemanticsUpdate0"),
      SemanticsUpdateBuilder: findType("SemanticsUpdateBuilder"),
      ServicesBinding: findType("ServicesBinding"),
      Set_Directionality: findType("Set<Directionality>"),
      Set_InheritedElement: findType("Set<InheritedElement>"),
      Set_Object: findType("Set<Object>"),
      Set_String: findType("Set<String>"),
      Set_int: findType("Set<int>"),
      ShaderDeclaration: findType("ShaderDeclaration"),
      Shadow: findType("Shadow"),
      SingleChildRenderObjectWidget: findType("SingleChildRenderObjectWidget"),
      Sink_List_int: findType("Sink<List<int>>"),
      Sink_String: findType("Sink<String>"),
      Size: findType("Size"),
      Size_Function_BoxConstraints: findType("Size(BoxConstraints)"),
      Spanometer: findType("Spanometer"),
      StackFrame: findType("StackFrame"),
      StackTrace: findType("StackTrace"),
      StandardMessageCodec: findType("StandardMessageCodec"),
      State_StatefulWidget: findType("State0<StatefulWidget>"),
      StatefulElement: findType("StatefulElement0"),
      StatefulWidget: findType("StatefulWidget"),
      StatelessWidget: findType("StatelessWidget"),
      StreamSubscription_dynamic: findType("StreamSubscription<@>"),
      StreamSubscription_int: findType("StreamSubscription<int>"),
      StreamSubscription_nullable_Size: findType("StreamSubscription<Size?>"),
      String: findType("String"),
      StringAttribute: findType("StringAttribute"),
      StringBuffer: findType("StringBuffer"),
      StringConversionSink: findType("StringConversionSink"),
      StringSink: findType("StringSink"),
      Surface: findType("Surface"),
      SurfacePaint: findType("SurfacePaint"),
      SurfacePaintData: findType("SurfacePaintData"),
      SurfacePath: findType("SurfacePath"),
      SurfaceScene: findType("SurfaceScene"),
      SystemMouseCursor: findType("SystemMouseCursor"),
      TextBaseline: findType("TextBaseline"),
      TextBox: findType("TextBox"),
      TextDecoration: findType("TextDecoration"),
      TextDirection: findType("TextDirection"),
      TextField: findType("TextField"),
      TextHeightRuler: findType("TextHeightRuler"),
      TextHeightStyle: findType("TextHeightStyle"),
      TextInputCommand: findType("TextInputCommand"),
      TextPosition: findType("TextPosition"),
      TextSelection: findType("TextSelection"),
      TextStyle: findType("TextStyle0"),
      TextTreeConfiguration: findType("TextTreeConfiguration"),
      TileMode: findType("TileMode"),
      TransformEngineLayer: findType("TransformEngineLayer"),
      TraversalDirection: findType("TraversalDirection"),
      TraversalEdgeBehavior: findType("TraversalEdgeBehavior"),
      Type: findType("Type"),
      TypedData: findType("TypedData"),
      Uint16List: findType("Uint16List"),
      Uint32List: findType("Uint32List"),
      Uint8ClampedList: findType("Uint8ClampedList"),
      Uint8List: findType("Uint8List"),
      UnfocusDisposition: findType("UnfocusDisposition"),
      UnicodeRange_TextDirection: findType("UnicodeRange<TextDirection>"),
      UniqueRef_JavaScriptObject: findType("UniqueRef<JavaScriptObject>"),
      UniqueRef_Object: findType("UniqueRef<Object>"),
      Uri: findType("Uri"),
      Vector3: findType("Vector3"),
      Vector4: findType("Vector4"),
      ViewClipChain: findType("ViewClipChain"),
      ViewFocusDirection: findType("ViewFocusDirection"),
      ViewFocusEvent: findType("ViewFocusEvent"),
      ViewFocusState: findType("ViewFocusState"),
      ViewPadding: findType("ViewPadding"),
      ViewRasterizer: findType("ViewRasterizer"),
      Widget: findType("Widget"),
      WidgetsBinding: findType("WidgetsBinding"),
      WriteBuffer: findType("WriteBuffer0"),
      WriteBuffer_2: findType("WriteBuffer"),
      Zone: findType("Zone"),
      _ActionsScope: findType("_ActionsScope"),
      _BaseAdapter: findType("_BaseAdapter"),
      _BoxEdge: findType("_BoxEdge"),
      _ButtonSanitizer: findType("_ButtonSanitizer"),
      _Channel: findType("_Channel"),
      _ConicPair: findType("_ConicPair"),
      _DelayedEvent_dynamic: findType("_DelayedEvent<@>"),
      _DirectionalPolicyData: findType("_DirectionalPolicyData"),
      _DirectionalPolicyDataEntry: findType("_DirectionalPolicyDataEntry"),
      _DomClip: findType("_DomClip"),
      _EventDispatch_dynamic: findType("_EventDispatch<@>"),
      _FocusInheritedScope: findType("_FocusInheritedScope"),
      _FocusTraversalGroupInfo: findType("_FocusTraversalGroupInfo"),
      _FrameTimingInfo: findType("_FrameTimingInfo"),
      _InterestingSemanticsFragment: findType("_InterestingSemanticsFragment"),
      _LayoutCacheStorage: findType("_LayoutCacheStorage"),
      _PersistedSurfaceMatch: findType("_PersistedSurfaceMatch"),
      _PipelineOwnerScope: findType("_PipelineOwnerScope"),
      _PlatformChannelStats: findType("_PlatformChannelStats"),
      _PointerDeviceState: findType("_PointerDeviceState"),
      _ProfiledBinaryMessenger: findType("_ProfiledBinaryMessenger"),
      _ReadingOrderDirectionalGroupData: findType("_ReadingOrderDirectionalGroupData"),
      _ReadingOrderSortData: findType("_ReadingOrderSortData"),
      _SanitizedDetails: findType("_SanitizedDetails"),
      _ScrollableScope: findType("_ScrollableScope"),
      _SemanticsSortGroup: findType("_SemanticsSortGroup"),
      _StoredMessage: findType("_StoredMessage"),
      _SwitchableSemanticsFragment: findType("_SwitchableSemanticsFragment"),
      _TraversalSortNode: findType("_TraversalSortNode"),
      _TrieNode: findType("_TrieNode"),
      _UnicodePropertyLookup_FallbackFontComponent: findType("_UnicodePropertyLookup<FallbackFontComponent>"),
      bool: findType("bool"),
      bool_Function_Element: findType("bool(Element0)"),
      bool_Function_SemanticsNode: findType("bool(SemanticsNode)"),
      bool_Function_SemanticsObject: findType("bool(SemanticsObject)"),
      double: findType("double"),
      dynamic: findType("@"),
      dynamic_Function: findType("@()"),
      dynamic_Function_JavaScriptObject: findType("@(JavaScriptObject)"),
      int: findType("int"),
      nullable_AccessibilityFeatures: findType("AccessibilityFeatures?"),
      nullable_AttributedString: findType("AttributedString?"),
      nullable_BitmapCanvas: findType("BitmapCanvas?"),
      nullable_BlendMode: findType("BlendMode?"),
      nullable_Brightness: findType("Brightness?"),
      nullable_BuildContext: findType("BuildContext?"),
      nullable_BuildOwner: findType("BuildOwner0?"),
      nullable_BuildScope: findType("BuildScope?"),
      nullable_ByteData: findType("ByteData?"),
      nullable_Canvas: findType("Canvas?"),
      nullable_CkPaint: findType("CkPaint?"),
      nullable_CkShader: findType("CkShader?"),
      nullable_CkSurface: findType("CkSurface?"),
      nullable_Clip: findType("Clip?"),
      nullable_ClipPathEngineLayer: findType("ClipPathEngineLayer0?"),
      nullable_ClipPathLayer: findType("ClipPathLayer?"),
      nullable_ClipRRectEngineLayer: findType("ClipRRectEngineLayer0?"),
      nullable_ClipRRectLayer: findType("ClipRRectLayer?"),
      nullable_ClipRectEngineLayer: findType("ClipRectEngineLayer0?"),
      nullable_ClipRectLayer: findType("ClipRectLayer?"),
      nullable_Color: findType("Color?"),
      nullable_Completer_void: findType("Completer<~>?"),
      nullable_ContainerLayer: findType("ContainerLayer0?"),
      nullable_CrossFrameCache_JavaScriptObject: findType("CrossFrameCache<JavaScriptObject>?"),
      nullable_Curve: findType("Curve?"),
      nullable_DateTime: findType("DateTime?"),
      nullable_DiagnosticsNode: findType("DiagnosticsNode?"),
      nullable_DiagnosticsTreeStyle: findType("DiagnosticsTreeStyle?"),
      nullable_DisplayCanvas: findType("DisplayCanvas?"),
      nullable_Duration: findType("Duration?"),
      nullable_EditingState: findType("EditingState?"),
      nullable_Element: findType("Element0?"),
      nullable_EngineCanvas: findType("EngineCanvas?"),
      nullable_EngineColorFilter: findType("EngineColorFilter?"),
      nullable_EngineFlutterView: findType("EngineFlutterView?"),
      nullable_EngineFlutterWindow: findType("EngineFlutterWindow?"),
      nullable_EngineLayer: findType("EngineLayer?"),
      nullable_EngineStrutStyle: findType("EngineStrutStyle?"),
      nullable_FilterQuality: findType("FilterQuality?"),
      nullable_Float32List: findType("Float32List?"),
      nullable_FlutterView: findType("FlutterView?"),
      nullable_FocusAttachment: findType("FocusAttachment?"),
      nullable_FocusManager: findType("FocusManager?"),
      nullable_FocusNode: findType("FocusNode?"),
      nullable_FocusScopeNode: findType("FocusScopeNode?"),
      nullable_FontLoadError: findType("FontLoadError?"),
      nullable_FontStyle: findType("FontStyle?"),
      nullable_FontWeight: findType("FontWeight?"),
      nullable_FrameTimingRecorder: findType("FrameTimingRecorder?"),
      nullable_Function: findType("Function?"),
      nullable_Future_dynamic: findType("Future<@>?"),
      nullable_Future_dynamic_Function_MethodCall: findType("Future<@>(MethodCall)?"),
      nullable_Future_void: findType("Future<~>?"),
      nullable_GlProgram: findType("GlProgram?"),
      nullable_HtmlViewEmbedder: findType("HtmlViewEmbedder?"),
      nullable_InputConfiguration: findType("InputConfiguration?"),
      nullable_Int32List: findType("Int32List?"),
      nullable_JSArray_nullable_Object: findType("JSArray<Object?>?"),
      nullable_JavaScriptObject: findType("JavaScriptObject?"),
      nullable_KeyEventResult_Function_FocusNode_KeyEvent: findType("KeyEventResult(FocusNode,KeyEvent)?"),
      nullable_KeyEventResult_Function_FocusNode_RawKeyEvent: findType("KeyEventResult(FocusNode,RawKeyEvent)?"),
      nullable_Layer: findType("Layer0?"),
      nullable_List_Directionality: findType("List<Directionality>?"),
      nullable_List_FocusNode: findType("List<FocusNode>?"),
      nullable_List_FontFeature: findType("List<FontFeature>?"),
      nullable_List_FontVariation: findType("List<FontVariation>?"),
      nullable_List_JavaScriptObject: findType("List<JavaScriptObject>?"),
      nullable_List_LayoutFragment: findType("List<LayoutFragment>?"),
      nullable_List_Locale: findType("List<Locale>?"),
      nullable_List_RoleManager: findType("List<RoleManager>?"),
      nullable_List_SaveClipEntry: findType("List<SaveClipEntry>?"),
      nullable_List_SemanticsNode: findType("List<SemanticsNode>?"),
      nullable_List_SemanticsObject: findType("List<SemanticsObject>?"),
      nullable_List_Shadow: findType("List<Shadow>?"),
      nullable_List_String: findType("List<String>?"),
      nullable_List_StringAttribute: findType("List<StringAttribute>?"),
      nullable_List_double: findType("List<double>?"),
      nullable_List_dynamic: findType("List<@>?"),
      nullable_List_int: findType("List<int>?"),
      nullable_List_nullable_Object: findType("List<Object?>?"),
      nullable_List_of_nullable_void_Function_ObjectEvent: findType("List<~(ObjectEvent)?>?"),
      nullable_Locale: findType("Locale?"),
      nullable_Map_BoxConstraints_Size: findType("Map<BoxConstraints,Size>?"),
      nullable_Map_String_dynamic: findType("Map<String,@>?"),
      nullable_Map_dynamic_dynamic: findType("Map<@,@>?"),
      nullable_Map_of_BoxConstraints_and_nullable_double: findType("Map<BoxConstraints,double?>?"),
      nullable_MaskFilter: findType("MaskFilter?"),
      nullable_Matrix4: findType("Matrix4?"),
      nullable_Matrix4_2: findType("Matrix40?"),
      nullable_NativeFloat32List: findType("NativeFloat32List?"),
      nullable_Object: findType("Object?"),
      nullable_OffsetEngineLayer: findType("OffsetEngineLayer0?"),
      nullable_OffsetLayer: findType("OffsetLayer?"),
      nullable_OpacityEngineLayer: findType("OpacityEngineLayer0?"),
      nullable_OpacityLayer: findType("OpacityLayer?"),
      nullable_Paint: findType("Paint?"),
      nullable_PaintingStyle: findType("PaintingStyle?"),
      nullable_Paragraph: findType("Paragraph?"),
      nullable_ParagraphSpan: findType("ParagraphSpan?"),
      nullable_Path: findType("Path?"),
      nullable_PersistedClipPath: findType("PersistedClipPath?"),
      nullable_PersistedClipRect: findType("PersistedClipRect?"),
      nullable_PersistedContainerSurface: findType("PersistedContainerSurface?"),
      nullable_PersistedOffset: findType("PersistedOffset?"),
      nullable_PersistedOpacity: findType("PersistedOpacity?"),
      nullable_PersistedPicture: findType("PersistedPicture?"),
      nullable_PersistedSurface: findType("PersistedSurface?"),
      nullable_PersistedTransform: findType("PersistedTransform?"),
      nullable_PersistentHashMap_Type_InheritedElement: findType("PersistentHashMap<Type,InheritedElement>?"),
      nullable_Picture: findType("Picture?"),
      nullable_PictureRecorder: findType("PictureRecorder?"),
      nullable_PointerSignalKind: findType("PointerSignalKind?"),
      nullable_RRect: findType("RRect?"),
      nullable_Radius: findType("Radius?"),
      nullable_Record_2_int_and_int: findType("+(int,int)?"),
      nullable_Record_3_Completer_void_completer_and_nullable_FrameTimingRecorder_recorder_and_Scene_scene: findType("+completer,recorder,scene(Completer<~>,FrameTimingRecorder?,Scene)?"),
      nullable_Record_3_List_Record_3_List_PointerData_data_and_JavaScriptObject_event_and_Duration_timeStamp_queue_and_JavaScriptObject_target_and_Timer_timer: findType("+queue,target,timer(List<+data,event,timeStamp(List<PointerData>,JavaScriptObject,Duration)>,JavaScriptObject,Timer)?"),
      nullable_Rect: findType("Rect?"),
      nullable_RenderObject: findType("RenderObject?"),
      nullable_RenderObjectElement: findType("RenderObjectElement?"),
      nullable_SafariPointerEventWorkaround: findType("SafariPointerEventWorkaround?"),
      nullable_ScrollPositionAlignmentPolicy: findType("ScrollPositionAlignmentPolicy?"),
      nullable_SemanticsConfiguration: findType("SemanticsConfiguration?"),
      nullable_SemanticsHintOverrides: findType("SemanticsHintOverrides?"),
      nullable_SemanticsSortKey: findType("SemanticsSortKey?"),
      nullable_Set_Element: findType("Set<Element0>?"),
      nullable_Set_FlutterView: findType("Set<FlutterView>?"),
      nullable_Set_InheritedElement: findType("Set<InheritedElement>?"),
      nullable_Set_SemanticsTag: findType("Set<SemanticsTag>?"),
      nullable_Shader: findType("Shader?"),
      nullable_Size: findType("Size?"),
      nullable_StackFrame: findType("StackFrame?"),
      nullable_State_StatefulWidget: findType("State0<StatefulWidget>?"),
      nullable_StatefulElement: findType("StatefulElement0?"),
      nullable_StreamSubscription_double: findType("StreamSubscription<double>?"),
      nullable_StreamSubscription_int: findType("StreamSubscription<int>?"),
      nullable_String: findType("String?"),
      nullable_StrokeCap: findType("StrokeCap?"),
      nullable_StrokeJoin: findType("StrokeJoin?"),
      nullable_StrutStyle: findType("StrutStyle0?"),
      nullable_SurfacePaint: findType("SurfacePaint?"),
      nullable_TextAlign: findType("TextAlign?"),
      nullable_TextBaseline: findType("TextBaseline?"),
      nullable_TextDecoration: findType("TextDecoration?"),
      nullable_TextDecorationStyle: findType("TextDecorationStyle?"),
      nullable_TextDirection: findType("TextDirection?"),
      nullable_TextEditingDeltaState: findType("TextEditingDeltaState?"),
      nullable_TextHeightBehavior: findType("TextHeightBehavior?"),
      nullable_TextLeadingDistribution: findType("TextLeadingDistribution?"),
      nullable_TextSelection: findType("TextSelection?"),
      nullable_TextTreeConfiguration: findType("TextTreeConfiguration?"),
      nullable_Timer: findType("Timer?"),
      nullable_TransformEngineLayer: findType("TransformEngineLayer0?"),
      nullable_TransformLayer: findType("TransformLayer?"),
      nullable_TypedData: findType("TypedData?"),
      nullable_Uri: findType("Uri?"),
      nullable_Widget: findType("Widget?"),
      nullable_Zone: findType("Zone?"),
      nullable__DelayedEvent_dynamic: findType("_DelayedEvent<@>?"),
      nullable__NotificationNode: findType("_NotificationNode?"),
      nullable__TrieNode: findType("_TrieNode?"),
      nullable_bool: findType("bool?"),
      nullable_bool_Function_KeyData: findType("bool(KeyData)?"),
      nullable_bool_Function_Object: findType("bool(Object)?"),
      nullable_double: findType("double?"),
      nullable_double_Function_Record_2_BoxConstraints_and_TextBaseline: findType("double?(+(BoxConstraints,TextBaseline))"),
      nullable_nullable_Future_nullable_ByteData_Function_nullable_ByteData: findType("Future<ByteData?>?(ByteData?)?"),
      nullable_num: findType("num?"),
      nullable_void_Function: findType("~()?"),
      nullable_void_Function_$named_allowPlatformDefault_bool: findType("~({allowPlatformDefault:bool})?"),
      nullable_void_Function_2_nullable_EditingState_and_nullable_TextEditingDeltaState: findType("~(EditingState?,TextEditingDeltaState?)?"),
      nullable_void_Function_Duration: findType("~(Duration)?"),
      nullable_void_Function_GestureMode: findType("~(GestureMode)?"),
      nullable_void_Function_List_FrameTiming: findType("~(List<FrameTiming>)?"),
      nullable_void_Function_ObjectEvent: findType("~(ObjectEvent)?"),
      nullable_void_Function_PointerDataPacket: findType("~(PointerDataPacket)?"),
      nullable_void_Function_SemanticsActionEvent: findType("~(SemanticsActionEvent)?"),
      nullable_void_Function_String: findType("~(String)?"),
      nullable_void_Function_TextSelection: findType("~(TextSelection)?"),
      nullable_void_Function_ViewFocusEvent: findType("~(ViewFocusEvent)?"),
      nullable_void_Function_bool: findType("~(bool)?"),
      nullable_void_Function_nullable_ByteData: findType("~(ByteData?)?"),
      nullable_void_Function_nullable_String: findType("~(String?)?"),
      num: findType("num"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_2_nullable_ByteData_and_void_Function_nullable_ByteData: findType("~(ByteData?,~(ByteData?))"),
      void_Function_2_nullable_EditingState_and_nullable_TextEditingDeltaState: findType("~(EditingState?,TextEditingDeltaState?)"),
      void_Function_AppLifecycleState: findType("~(AppLifecycleState)"),
      void_Function_Element: findType("~(Element0)"),
      void_Function_GestureMode: findType("~(GestureMode)"),
      void_Function_JavaScriptObject: findType("~(JavaScriptObject)"),
      void_Function_Object: findType("~(Object)"),
      void_Function_Object_StackTrace: findType("~(Object,StackTrace)"),
      void_Function_PaintingContext_Offset: findType("~(PaintingContext,Offset)"),
      void_Function_RenderObject: findType("~(RenderObject)"),
      void_Function_bool: findType("~(bool)"),
      void_Function_nullable_ByteData: findType("~(ByteData?)"),
      void_Function_nullable_Object: findType("~(Object?)"),
      void_Function_nullable_String: findType("~(String?)")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    C.AccessibilityMode_0 = new A.AccessibilityMode(0, "unknown");
    C.AppExitResponse_0 = new A.AppExitResponse(0, "exit");
    C.AppLifecycleState_0 = new A.AppLifecycleState(0, "detached");
    C.AppLifecycleState_1 = new A.AppLifecycleState(1, "resumed");
    C.AppLifecycleState_2 = new A.AppLifecycleState(2, "inactive");
    C.AppLifecycleState_3 = new A.AppLifecycleState(3, "hidden");
    C.AppLifecycleState_4 = new A.AppLifecycleState(4, "paused");
    C.AsciiDecoder_false_127 = new A.AsciiDecoder(false, 127);
    C.AsciiEncoder_127 = new A.AsciiEncoder(127);
    C.Assertiveness_0 = new A.Assertiveness(0, "polite");
    C.Assertiveness_1 = new A.Assertiveness(1, "assertive");
    C.AxisDirection_0 = new A.AxisDirection(0, "up");
    C.AxisDirection_1 = new A.AxisDirection(1, "right");
    C.AxisDirection_2 = new A.AxisDirection(2, "down");
    C.AxisDirection_3 = new A.AxisDirection(3, "left");
    C.Axis_0 = new A.Axis(0, "horizontal");
    C.Axis_1 = new A.Axis(1, "vertical");
    C.C_JSONMessageCodec0 = new A.JSONMessageCodec0();
    C.C_StandardMessageCodec = new A.StandardMessageCodec0();
    C.BasicMessageChannel_EyN = new A.BasicMessageChannel("flutter/accessibility", C.C_StandardMessageCodec, B.findType("BasicMessageChannel<Object?>"));
    C.C_StringCodec0 = new A.StringCodec0();
    C.FragmentFlow_2 = new A.FragmentFlow(2, "previous");
    C.BidiFragment_ZCw = new A.BidiFragment(null, C.FragmentFlow_2, 0, 0);
    C.BitmapSize_0_0 = new A.BitmapSize(0, 0);
    C.BitmapSize_1_1 = new A.BitmapSize(1, 1);
    C.BlendMode_13 = new A.BlendMode(13, "modulate");
    C.BlendMode_20 = new A.BlendMode(20, "hardLight");
    C.BlendMode_26 = new A.BlendMode(26, "saturation");
    C.BlendMode_3 = new A.BlendMode(3, "srcOver");
    C.BlurStyle_0 = new A.BlurStyle(0, "normal");
    C.Radius_0_0 = new A.Radius(0, 0);
    C.BoxHeightStyle_0 = new A.BoxHeightStyle(0, "tight");
    C.BoxWidthStyle_0 = new A.BoxWidthStyle(0, "tight");
    C.Brightness_0 = new A.Brightness(0, "dark");
    C.Brightness_1 = new A.Brightness(1, "light");
    C.BrowserEngine_0 = new A.BrowserEngine(0, "blink");
    C.BrowserEngine_1 = new A.BrowserEngine(1, "webkit");
    C.BrowserEngine_2 = new A.BrowserEngine(2, "firefox");
    C.C_ActionDispatcher = new A.ActionDispatcher();
    C.C_AsciiCodec = new A.AsciiCodec();
    C.C_Base64Encoder = new A.Base64Encoder();
    C.C_Base64Codec = new A.Base64Codec();
    C.C_Base64Decoder = new A.Base64Decoder();
    C.C_DecimalInputType = new A.DecimalInputType();
    C.C_DoneInputAction = new A.DoneInputAction();
    C.C_EmailInputType = new A.EmailInputType();
    C.C_EmptyIterable0 = new B.EmptyIterable(B.findType("EmptyIterable<FocusNode>"));
    C.C_EmptyIterable = new B.EmptyIterable(B.findType("EmptyIterable<String>"));
    C.C_EnterInputAction = new A.EnterInputAction();
    C.C_GestureSettings = new A.GestureSettings();
    C.C_GoInputAction = new A.GoInputAction();
    C.C_JSONMessageCodec = new A.JSONMessageCodec();
    C.C_JSONMethodCodec = new A.JSONMethodCodec();
    C.C_Latin1Codec = new A.Latin1Codec();
    C.Offset_0_0 = new A.Offset(0, 0);
    C.C_MultilineInputType = new A.MultilineInputType();
    C.C_MultilineNoTextInputType = new A.MultilineNoTextInputType();
    C.C_NextInputAction = new A.NextInputAction();
    C.C_NoInputAction = new A.NoInputAction();
    C.C_NoTextInputType = new A.NoTextInputType();
    C.C_NumberInputType = new A.NumberInputType();
    C.C_Object = new B.Object();
    C.TargetPlatform_0 = new A.TargetPlatform(0, "android");
    C.TargetPlatform_2 = new A.TargetPlatform(2, "iOS");
    C.TargetPlatform_4 = new A.TargetPlatform(4, "macOS");
    C.C_PaintRestore = new A.PaintRestore();
    C.C_PaintSave = new A.PaintSave();
    C.C_PhoneInputType = new A.PhoneInputType();
    C.C_PointerSupportDetector = new A.PointerSupportDetector();
    C.C_PreviousInputAction = new A.PreviousInputAction();
    C.C_ScreenOrientation = new A.ScreenOrientation();
    C.C_SearchInputAction = new A.SearchInputAction();
    C.C_SendInputAction = new A.SendInputAction();
    C.C_StandardMessageCodec0 = new A.StandardMessageCodec();
    C.C_StandardMethodCodec = new A.StandardMethodCodec();
    C.C_StringCodec = new A.StringCodec();
    C.C_TextInputClearClient = new A.TextInputClearClient();
    C.C_TextInputHide = new A.TextInputHide();
    C.C_TextInputRequestAutofill = new A.TextInputRequestAutofill();
    C.C_TextInputSetCaretRect = new A.TextInputSetCaretRect();
    C.C_TextInputSetMarkedTextRect = new A.TextInputSetMarkedTextRect();
    C.C_TextInputShow = new A.TextInputShow();
    C.C_TextInputType = new A.TextInputType0();
    C.C_TextInputUpdateConfig = new A.TextInputUpdateConfig();
    C.C_UrlInputType = new A.UrlInputType();
    C.ViewPadding_0_0_0_0 = new A.ViewPadding(0, 0, 0, 0);
    C.List_empty3 = B._setArrayType(makeConstList([]), B.findType("JSArray<DisplayFeature>"));
    C.C_ViewConfiguration = new A.ViewConfiguration0();
    C.C__Baseline = new A._Baseline();
    C.C__DeferringMouseCursor = new A._DeferringMouseCursor();
    C.C__DelayedDone = new A._DelayedDone();
    C.C__DryLayout = new A._DryLayout();
    C.SystemMouseCursor_basic = new A.SystemMouseCursor("basic");
    C.C__NoDefaultValue = new A._NoDefaultValue();
    C.ClipOp_0 = new A.ClipOp(0, "difference");
    C.ClipOp_1 = new A.ClipOp(1, "intersect");
    C.Clip_0 = new A.Clip(0, "none");
    C.Clip_1 = new A.Clip(1, "hardEdge");
    C.Clip_2 = new A.Clip(2, "antiAlias");
    C.Clip_3 = new A.Clip(3, "antiAliasWithSaveLayer");
    C.Color_0 = new A.Color(0);
    C.Color_4039164096 = new A.Color(4039164096);
    C.Color_4281348144 = new A.Color(4281348144);
    C.Cubic_WKj = new A.Cubic(0.25, 0.1, 0.25, 1);
    C.DebugSemanticsDumpOrder_0 = new A.DebugSemanticsDumpOrder(0, "inverseHitTest");
    C.DebugSemanticsDumpOrder_1 = new A.DebugSemanticsDumpOrder(1, "traversalOrder");
    C.DiagnosticLevel_0 = new A.DiagnosticLevel(0, "hidden");
    C.DiagnosticLevel_1 = new A.DiagnosticLevel(1, "fine");
    C.DiagnosticLevel_2 = new A.DiagnosticLevel(2, "debug");
    C.DiagnosticLevel_3 = new A.DiagnosticLevel(3, "info");
    C.DiagnosticLevel_4 = new A.DiagnosticLevel(4, "warning");
    C.DiagnosticLevel_5 = new A.DiagnosticLevel(5, "hint");
    C.DiagnosticLevel_6 = new A.DiagnosticLevel(6, "summary");
    C.DiagnosticLevel_7 = new A.DiagnosticLevel(7, "error");
    C.DiagnosticsTreeStyle_0 = new A.DiagnosticsTreeStyle(0, "none");
    C.DiagnosticsTreeStyle_1 = new A.DiagnosticsTreeStyle(1, "sparse");
    C.DiagnosticsTreeStyle_10 = new A.DiagnosticsTreeStyle(10, "shallow");
    C.DiagnosticsTreeStyle_11 = new A.DiagnosticsTreeStyle(11, "truncateChildren");
    C.DiagnosticsTreeStyle_2 = new A.DiagnosticsTreeStyle(2, "offstage");
    C.DiagnosticsTreeStyle_3 = new A.DiagnosticsTreeStyle(3, "dense");
    C.DiagnosticsTreeStyle_4 = new A.DiagnosticsTreeStyle(4, "transition");
    C.DiagnosticsTreeStyle_5 = new A.DiagnosticsTreeStyle(5, "error");
    C.DiagnosticsTreeStyle_6 = new A.DiagnosticsTreeStyle(6, "whitespace");
    C.DiagnosticsTreeStyle_7 = new A.DiagnosticsTreeStyle(7, "flat");
    C.DiagnosticsTreeStyle_8 = new A.DiagnosticsTreeStyle(8, "singleLine");
    C.DiagnosticsTreeStyle_9 = new A.DiagnosticsTreeStyle(9, "errorProperty");
    C.Duration_100000 = new B.Duration(100000);
    C.Duration_1000000 = new B.Duration(1000000);
    C.Duration_200000 = new B.Duration(200000);
    C.Duration_2000000 = new B.Duration(2000000);
    C.Duration_300000 = new B.Duration(300000);
    C.Duration_50000 = new B.Duration(50000);
    C.Duration_500000 = new B.Duration(500000);
    C.EdgeInsets_0_0_0_0 = new A.EdgeInsets(0, 0, 0, 0);
    C.EnabledState_0 = new A.EnabledState(0, "noOpinion");
    C.EnabledState_1 = new A.EnabledState(1, "enabled");
    C.EnabledState_2 = new A.EnabledState(2, "disabled");
    C.EngineAccessibilityFeatures_0 = new A.EngineAccessibilityFeatures(0);
    C.FilterQuality_0 = new A.FilterQuality(0, "none");
    C.FilterQuality_2 = new A.FilterQuality(2, "medium");
    C.FilterQuality_3 = new A.FilterQuality(3, "high");
    C.FocusHighlightMode_0 = new A.FocusHighlightMode(0, "touch");
    C.FocusHighlightMode_1 = new A.FocusHighlightMode(1, "traditional");
    C.FontStyle_0 = new A.FontStyle(0, "normal");
    C.FormatException_4CA = new B.FormatException("Invalid method call", null, null);
    C.FormatException_E36 = new B.FormatException("Invalid envelope", null, null);
    C.FormatException_MKb = new B.FormatException("Expected envelope, got nothing", null, null);
    C.FormatException_rh8 = new B.FormatException("Message corrupted", null, null);
    C.FragmentFlow_0 = new A.FragmentFlow(0, "ltr");
    C.FragmentFlow_1 = new A.FragmentFlow(1, "rtl");
    C.FragmentFlow_3 = new A.FragmentFlow(3, "sandwich");
    C.FramePhase_0 = new A.FramePhase(0, "vsyncStart");
    C.FramePhase_1 = new A.FramePhase(1, "buildStart");
    C.FramePhase_2 = new A.FramePhase(2, "buildFinish");
    C.FramePhase_3 = new A.FramePhase(3, "rasterStart");
    C.FramePhase_4 = new A.FramePhase(4, "rasterFinish");
    C.GestureDisposition_0 = new A.GestureDisposition(0, "accepted");
    C.GestureDisposition_1 = new A.GestureDisposition(1, "rejected");
    C.GestureMode_0 = new A.GestureMode(0, "pointerEvents");
    C.GestureMode_1 = new A.GestureMode(1, "browserGestures");
    C.IntlSegmenterGranularity_0 = new A.IntlSegmenterGranularity(0, "grapheme");
    C.IntlSegmenterGranularity_1 = new A.IntlSegmenterGranularity(1, "word");
    C.KeyEventResult_0 = new A.KeyEventResult(0, "handled");
    C.KeyEventResult_1 = new A.KeyEventResult(1, "ignored");
    C.KeyEventResult_2 = new A.KeyEventResult(2, "skipRemainingHandlers");
    C.LogicalKeyboardKey_4294967562 = new A.LogicalKeyboardKey(4294967562);
    C.KeyboardLockMode_YYi = new A.KeyboardLockMode(C.LogicalKeyboardKey_4294967562, 0, "numLock");
    C.LabelRepresentation_0 = new A.LabelRepresentation(0, "ariaLabel");
    C.LabelRepresentation_1 = new A.LabelRepresentation(1, "domText");
    C.LabelRepresentation_2 = new A.LabelRepresentation(2, "sizedSpan");
    C.Latin1Decoder_false_255 = new A.Latin1Decoder(false, 255);
    C.Latin1Encoder_255 = new A.Latin1Encoder(255);
    C.LineBreakType_0 = new A.LineBreakType(0, "opportunity");
    C.LineBreakType_1 = new A.LineBreakType(1, "prohibited");
    C.LineBreakType_2 = new A.LineBreakType(2, "mandatory");
    C.LineBreakType_3 = new A.LineBreakType(3, "endOfText");
    C.LineCharProperty_0 = new A.LineCharProperty(0, "CM");
    C.LineCharProperty_1 = new A.LineCharProperty(1, "BA");
    C.LineCharProperty_10 = new A.LineCharProperty(10, "PO");
    C.LineCharProperty_11 = new A.LineCharProperty(11, "OP");
    C.LineCharProperty_12 = new A.LineCharProperty(12, "CP");
    C.LineCharProperty_13 = new A.LineCharProperty(13, "IS");
    C.LineCharProperty_14 = new A.LineCharProperty(14, "HY");
    C.LineCharProperty_15 = new A.LineCharProperty(15, "SY");
    C.LineCharProperty_16 = new A.LineCharProperty(16, "NU");
    C.LineCharProperty_17 = new A.LineCharProperty(17, "CL");
    C.LineCharProperty_18 = new A.LineCharProperty(18, "GL");
    C.LineCharProperty_19 = new A.LineCharProperty(19, "BB");
    C.LineCharProperty_2 = new A.LineCharProperty(2, "LF");
    C.LineCharProperty_20 = new A.LineCharProperty(20, "HL");
    C.LineCharProperty_21 = new A.LineCharProperty(21, "JL");
    C.LineCharProperty_22 = new A.LineCharProperty(22, "JV");
    C.LineCharProperty_23 = new A.LineCharProperty(23, "JT");
    C.LineCharProperty_24 = new A.LineCharProperty(24, "NS");
    C.LineCharProperty_25 = new A.LineCharProperty(25, "ZW");
    C.LineCharProperty_26 = new A.LineCharProperty(26, "ZWJ");
    C.LineCharProperty_27 = new A.LineCharProperty(27, "B2");
    C.LineCharProperty_28 = new A.LineCharProperty(28, "IN");
    C.LineCharProperty_29 = new A.LineCharProperty(29, "WJ");
    C.LineCharProperty_3 = new A.LineCharProperty(3, "BK");
    C.LineCharProperty_30 = new A.LineCharProperty(30, "ID");
    C.LineCharProperty_31 = new A.LineCharProperty(31, "EB");
    C.LineCharProperty_32 = new A.LineCharProperty(32, "H2");
    C.LineCharProperty_33 = new A.LineCharProperty(33, "H3");
    C.LineCharProperty_34 = new A.LineCharProperty(34, "CB");
    C.LineCharProperty_35 = new A.LineCharProperty(35, "RI");
    C.LineCharProperty_36 = new A.LineCharProperty(36, "EM");
    C.LineCharProperty_4 = new A.LineCharProperty(4, "CR");
    C.LineCharProperty_5 = new A.LineCharProperty(5, "SP");
    C.LineCharProperty_6 = new A.LineCharProperty(6, "EX");
    C.LineCharProperty_7 = new A.LineCharProperty(7, "QU");
    C.LineCharProperty_8 = new A.LineCharProperty(8, "AL");
    C.LineCharProperty_9 = new A.LineCharProperty(9, "PR");
    C.List_0 = B._setArrayType(makeConstList([0, 4, 12, 1, 5, 13, 3, 7, 15]), type$.JSArray_int);
    C.List_0_1 = B._setArrayType(makeConstList([0, 1]), type$.JSArray_double);
    C.List_239_191_189 = B._setArrayType(makeConstList([239, 191, 189]), type$.JSArray_int);
    C.List_2jN = B._setArrayType(makeConstList([0, 0, 32722, 12287, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    C.List_42A = B._setArrayType(makeConstList([0, 0, 65490, 45055, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    C.TextAlign_0 = new A.TextAlign(0, "left");
    C.TextAlign_1 = new A.TextAlign(1, "right");
    C.TextAlign_2 = new A.TextAlign(2, "center");
    C.TextAlign_3 = new A.TextAlign(3, "justify");
    C.TextAlign_4 = new A.TextAlign(4, "start");
    C.TextAlign_5 = new A.TextAlign(5, "end");
    C.List_44l = B._setArrayType(makeConstList([C.TextAlign_0, C.TextAlign_1, C.TextAlign_2, C.TextAlign_3, C.TextAlign_4, C.TextAlign_5]), B.findType("JSArray<TextAlign>"));
    C.List_4AN = B._setArrayType(makeConstList([0, 0, 32754, 11263, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    C.List_65533 = B._setArrayType(makeConstList([65533]), type$.JSArray_int);
    C.List_Assertiveness_0_Assertiveness_1 = B._setArrayType(makeConstList([C.Assertiveness_0, C.Assertiveness_1]), B.findType("JSArray<Assertiveness>"));
    C.List_GVy = B._setArrayType(makeConstList([0, 0, 26624, 1023, 65534, 2047, 65534, 2047]), type$.JSArray_int);
    C.Locale_en_US = new A.Locale("en", "US");
    C.List_Locale_en_US = B._setArrayType(makeConstList([C.Locale_en_US]), type$.JSArray_Locale);
    C.List_M2I0 = B._setArrayType(makeConstList([0, 0, 32722, 12287, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    C.List_M2I = B._setArrayType(makeConstList([0, 0, 65490, 12287, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    C.List_OGJ = B._setArrayType(makeConstList(["pointerdown", "pointermove", "pointerleave", "pointerup", "pointercancel", "touchstart", "touchend", "touchmove", "touchcancel", "mousedown", "mousemove", "mouseleave", "mouseup", "keyup", "keydown"]), type$.JSArray_String);
    C.TextAffinity_0 = new A.TextAffinity(0, "upstream");
    C.TextAffinity_1 = new A.TextAffinity(1, "downstream");
    C.List_TextAffinity_0_TextAffinity_1 = B._setArrayType(makeConstList([C.TextAffinity_0, C.TextAffinity_1]), B.findType("JSArray<TextAffinity>"));
    C.TextDirection_0 = new A.TextDirection(0, "rtl");
    C.TextDirection_1 = new A.TextDirection(1, "ltr");
    C.List_TextDirection_0_TextDirection_1 = B._setArrayType(makeConstList([C.TextDirection_0, C.TextDirection_1]), B.findType("JSArray<TextDirection>"));
    C.List_VOY = B._setArrayType(makeConstList([0, 0, 32776, 33792, 1, 10240, 0, 0]), type$.JSArray_int);
    C.List_click_scroll = B._setArrayType(makeConstList(["click", "scroll"]), type$.JSArray_String);
    C.List_empty1 = B._setArrayType(makeConstList([]), type$.JSArray_DiagnosticsNode);
    C.List_empty17 = B._setArrayType(makeConstList([]), type$.JSArray_Locale);
    C.List_empty18 = B._setArrayType(makeConstList([]), type$.JSArray_PointerData);
    C.List_empty4 = B._setArrayType(makeConstList([]), type$.JSArray_SemanticsNode);
    C.List_empty = B._setArrayType(makeConstList([]), type$.JSArray_String);
    C.List_empty2 = B._setArrayType(makeConstList([]), B.findType("JSArray<StringAttribute>"));
    C.List_empty7 = B._setArrayType(makeConstList([]), type$.JSArray_TextBox);
    C.List_empty19 = B._setArrayType(makeConstList([]), B.findType("JSArray<Widget>"));
    C.List_empty0 = B._setArrayType(makeConstList([]), type$.JSArray_int);
    C.WordCharProperty_0 = new A.WordCharProperty(0, "DoubleQuote");
    C.WordCharProperty_1 = new A.WordCharProperty(1, "SingleQuote");
    C.WordCharProperty_2 = new A.WordCharProperty(2, "HebrewLetter");
    C.WordCharProperty_3 = new A.WordCharProperty(3, "CR");
    C.WordCharProperty_4 = new A.WordCharProperty(4, "LF");
    C.WordCharProperty_5 = new A.WordCharProperty(5, "Newline");
    C.WordCharProperty_6 = new A.WordCharProperty(6, "Extend");
    C.WordCharProperty_7 = new A.WordCharProperty(7, "RegionalIndicator");
    C.WordCharProperty_8 = new A.WordCharProperty(8, "Format");
    C.WordCharProperty_9 = new A.WordCharProperty(9, "Katakana");
    C.WordCharProperty_10 = new A.WordCharProperty(10, "ALetter");
    C.WordCharProperty_11 = new A.WordCharProperty(11, "MidLetter");
    C.WordCharProperty_12 = new A.WordCharProperty(12, "MidNum");
    C.WordCharProperty_13 = new A.WordCharProperty(13, "MidNumLet");
    C.WordCharProperty_14 = new A.WordCharProperty(14, "Numeric");
    C.WordCharProperty_15 = new A.WordCharProperty(15, "ExtendNumLet");
    C.WordCharProperty_16 = new A.WordCharProperty(16, "ZWJ");
    C.WordCharProperty_17 = new A.WordCharProperty(17, "WSegSpace");
    C.WordCharProperty_18 = new A.WordCharProperty(18, "Unknown");
    C.List_f0x = B._setArrayType(makeConstList([C.WordCharProperty_0, C.WordCharProperty_1, C.WordCharProperty_2, C.WordCharProperty_3, C.WordCharProperty_4, C.WordCharProperty_5, C.WordCharProperty_6, C.WordCharProperty_7, C.WordCharProperty_8, C.WordCharProperty_9, C.WordCharProperty_10, C.WordCharProperty_11, C.WordCharProperty_12, C.WordCharProperty_13, C.WordCharProperty_14, C.WordCharProperty_15, C.WordCharProperty_16, C.WordCharProperty_17, C.WordCharProperty_18]), B.findType("JSArray<WordCharProperty>"));
    C.List_grL = B._setArrayType(makeConstList([C.LineCharProperty_0, C.LineCharProperty_1, C.LineCharProperty_2, C.LineCharProperty_3, C.LineCharProperty_4, C.LineCharProperty_5, C.LineCharProperty_6, C.LineCharProperty_7, C.LineCharProperty_8, C.LineCharProperty_9, C.LineCharProperty_10, C.LineCharProperty_11, C.LineCharProperty_12, C.LineCharProperty_13, C.LineCharProperty_14, C.LineCharProperty_15, C.LineCharProperty_16, C.LineCharProperty_17, C.LineCharProperty_18, C.LineCharProperty_19, C.LineCharProperty_20, C.LineCharProperty_21, C.LineCharProperty_22, C.LineCharProperty_23, C.LineCharProperty_24, C.LineCharProperty_25, C.LineCharProperty_26, C.LineCharProperty_27, C.LineCharProperty_28, C.LineCharProperty_29, C.LineCharProperty_30, C.LineCharProperty_31, C.LineCharProperty_32, C.LineCharProperty_33, C.LineCharProperty_34, C.LineCharProperty_35, C.LineCharProperty_36]), B.findType("JSArray<LineCharProperty>"));
    C.CanvasKitVariant_0 = new A.CanvasKitVariant(0, "auto");
    C.CanvasKitVariant_1 = new A.CanvasKitVariant(1, "full");
    C.CanvasKitVariant_2 = new A.CanvasKitVariant(2, "chromium");
    C.List_mfb = B._setArrayType(makeConstList([C.CanvasKitVariant_0, C.CanvasKitVariant_1, C.CanvasKitVariant_2]), B.findType("JSArray<CanvasKitVariant>"));
    C.List_null = B._setArrayType(makeConstList(["null"]), type$.JSArray_String);
    C.List_piR = B._setArrayType(makeConstList([0, 0, 24576, 1023, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    C.TargetPlatform_1 = new A.TargetPlatform(1, "fuchsia");
    C.TargetPlatform_3 = new A.TargetPlatform(3, "linux");
    C.TargetPlatform_5 = new A.TargetPlatform(5, "windows");
    C.List_twE = B._setArrayType(makeConstList([0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0]), type$.JSArray_double);
    C.List_w0I = B._setArrayType(makeConstList([0, 0, 65498, 45055, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    C.LogicalKeyboardKey_4294967304 = new A.LogicalKeyboardKey(4294967304);
    C.LogicalKeyboardKey_4294967323 = new A.LogicalKeyboardKey(4294967323);
    C.LogicalKeyboardKey_4294967423 = new A.LogicalKeyboardKey(4294967423);
    C.LogicalKeyboardKey_8589934848 = new A.LogicalKeyboardKey(8589934848);
    C.LogicalKeyboardKey_8589934849 = new A.LogicalKeyboardKey(8589934849);
    C.LogicalKeyboardKey_8589934850 = new A.LogicalKeyboardKey(8589934850);
    C.LogicalKeyboardKey_8589934851 = new A.LogicalKeyboardKey(8589934851);
    C.LogicalKeyboardKey_8589934852 = new A.LogicalKeyboardKey(8589934852);
    C.LogicalKeyboardKey_8589934853 = new A.LogicalKeyboardKey(8589934853);
    C.LogicalKeyboardKey_8589934854 = new A.LogicalKeyboardKey(8589934854);
    C.LogicalKeyboardKey_8589934855 = new A.LogicalKeyboardKey(8589934855);
    C.LogicalKeyboardKey_8589935088 = new A.LogicalKeyboardKey(8589935088);
    C.LogicalKeyboardKey_8589935090 = new A.LogicalKeyboardKey(8589935090);
    C.LogicalKeyboardKey_8589935092 = new A.LogicalKeyboardKey(8589935092);
    C.LogicalKeyboardKey_8589935094 = new A.LogicalKeyboardKey(8589935094);
    C.LogicalKeyboardKey_8589935150 = new A.LogicalKeyboardKey(8589935150);
    C.LogicalKeyboardKey_8589935153 = new A.LogicalKeyboardKey(8589935153);
    C.LogicalKeyboardKey_8589935154 = new A.LogicalKeyboardKey(8589935154);
    C.LogicalKeyboardKey_8589935155 = new A.LogicalKeyboardKey(8589935155);
    C.LogicalKeyboardKey_8589935156 = new A.LogicalKeyboardKey(8589935156);
    C.LogicalKeyboardKey_8589935158 = new A.LogicalKeyboardKey(8589935158);
    C.LogicalKeyboardKey_8589935159 = new A.LogicalKeyboardKey(8589935159);
    C.LogicalKeyboardKey_8589935160 = new A.LogicalKeyboardKey(8589935160);
    C.LogicalKeyboardKey_8589935161 = new A.LogicalKeyboardKey(8589935161);
    C.LogicalKeyboardKey_4294968065 = new A.LogicalKeyboardKey(4294968065);
    C.LogicalKeyboardKey_4294968066 = new A.LogicalKeyboardKey(4294968066);
    C.LogicalKeyboardKey_4294968067 = new A.LogicalKeyboardKey(4294968067);
    C.LogicalKeyboardKey_4294968068 = new A.LogicalKeyboardKey(4294968068);
    C.LogicalKeyboardKey_4294968069 = new A.LogicalKeyboardKey(4294968069);
    C.LogicalKeyboardKey_4294967309 = new A.LogicalKeyboardKey(4294967309);
    C.LogicalKeyboardKey_8589935117 = new A.LogicalKeyboardKey(8589935117);
    C.LogicalKeyboardKey_4294968070 = new A.LogicalKeyboardKey(4294968070);
    C.LogicalKeyboardKey_4294968071 = new A.LogicalKeyboardKey(4294968071);
    C.LogicalKeyboardKey_4294968072 = new A.LogicalKeyboardKey(4294968072);
    C.Map_2b0gk = new B.GeneralConstantMap([32, "Space", 33, "Exclamation", 34, "Quote", 35, "Number Sign", 36, "Dollar", 37, "Percent", 38, "Ampersand", 39, "Quote Single", 40, "Parenthesis Left", 41, "Parenthesis Right", 42, "Asterisk", 43, "Add", 44, "Comma", 45, "Minus", 46, "Period", 47, "Slash", 48, "Digit 0", 49, "Digit 1", 50, "Digit 2", 51, "Digit 3", 52, "Digit 4", 53, "Digit 5", 54, "Digit 6", 55, "Digit 7", 56, "Digit 8", 57, "Digit 9", 58, "Colon", 59, "Semicolon", 60, "Less", 61, "Equal", 62, "Greater", 63, "Question", 64, "At", 91, "Bracket Left", 92, "Backslash", 93, "Bracket Right", 94, "Caret", 95, "Underscore", 96, "Backquote", 97, "Key A", 98, "Key B", 99, "Key C", 100, "Key D", 101, "Key E", 102, "Key F", 103, "Key G", 104, "Key H", 105, "Key I", 106, "Key J", 107, "Key K", 108, "Key L", 109, "Key M", 110, "Key N", 111, "Key O", 112, "Key P", 113, "Key Q", 114, "Key R", 115, "Key S", 116, "Key T", 117, "Key U", 118, "Key V", 119, "Key W", 120, "Key X", 121, "Key Y", 122, "Key Z", 123, "Brace Left", 124, "Bar", 125, "Brace Right", 126, "Tilde", 4294967297, "Unidentified", 4294967304, "Backspace", 4294967305, "Tab", 4294967309, "Enter", 4294967323, "Escape", 4294967423, "Delete", 4294967553, "Accel", 4294967555, "Alt Graph", 4294967556, "Caps Lock", 4294967558, "Fn", 4294967559, "Fn Lock", 4294967560, "Hyper", 4294967562, "Num Lock", 4294967564, "Scroll Lock", 4294967566, "Super", 4294967567, "Symbol", 4294967568, "Symbol Lock", 4294967569, "Shift Level 5", 4294968065, "Arrow Down", 4294968066, "Arrow Left", 4294968067, "Arrow Right", 4294968068, "Arrow Up", 4294968069, "End", 4294968070, "Home", 4294968071, "Page Down", 4294968072, "Page Up", 4294968321, "Clear", 4294968322, "Copy", 4294968323, "Cr Sel", 4294968324, "Cut", 4294968325, "Erase Eof", 4294968326, "Ex Sel", 4294968327, "Insert", 4294968328, "Paste", 4294968329, "Redo", 4294968330, "Undo", 4294968577, "Accept", 4294968578, "Again", 4294968579, "Attn", 4294968580, "Cancel", 4294968581, "Context Menu", 4294968582, "Execute", 4294968583, "Find", 4294968584, "Help", 4294968585, "Pause", 4294968586, "Play", 4294968587, "Props", 4294968588, "Select", 4294968589, "Zoom In", 4294968590, "Zoom Out", 4294968833, "Brightness Down", 4294968834, "Brightness Up", 4294968835, "Camera", 4294968836, "Eject", 4294968837, "Log Off", 4294968838, "Power", 4294968839, "Power Off", 4294968840, "Print Screen", 4294968841, "Hibernate", 4294968842, "Standby", 4294968843, "Wake Up", 4294969089, "All Candidates", 4294969090, "Alphanumeric", 4294969091, "Code Input", 4294969092, "Compose", 4294969093, "Convert", 4294969094, "Final Mode", 4294969095, "Group First", 4294969096, "Group Last", 4294969097, "Group Next", 4294969098, "Group Previous", 4294969099, "Mode Change", 4294969100, "Next Candidate", 4294969101, "Non Convert", 4294969102, "Previous Candidate", 4294969103, "Process", 4294969104, "Single Candidate", 4294969105, "Hangul Mode", 4294969106, "Hanja Mode", 4294969107, "Junja Mode", 4294969108, "Eisu", 4294969109, "Hankaku", 4294969110, "Hiragana", 4294969111, "Hiragana Katakana", 4294969112, "Kana Mode", 4294969113, "Kanji Mode", 4294969114, "Katakana", 4294969115, "Romaji", 4294969116, "Zenkaku", 4294969117, "Zenkaku Hankaku", 4294969345, "F1", 4294969346, "F2", 4294969347, "F3", 4294969348, "F4", 4294969349, "F5", 4294969350, "F6", 4294969351, "F7", 4294969352, "F8", 4294969353, "F9", 4294969354, "F10", 4294969355, "F11", 4294969356, "F12", 4294969357, "F13", 4294969358, "F14", 4294969359, "F15", 4294969360, "F16", 4294969361, "F17", 4294969362, "F18", 4294969363, "F19", 4294969364, "F20", 4294969365, "F21", 4294969366, "F22", 4294969367, "F23", 4294969368, "F24", 4294969601, "Soft 1", 4294969602, "Soft 2", 4294969603, "Soft 3", 4294969604, "Soft 4", 4294969605, "Soft 5", 4294969606, "Soft 6", 4294969607, "Soft 7", 4294969608, "Soft 8", 4294969857, "Close", 4294969858, "Mail Forward", 4294969859, "Mail Reply", 4294969860, "Mail Send", 4294969861, "Media Play Pause", 4294969863, "Media Stop", 4294969864, "Media Track Next", 4294969865, "Media Track Previous", 4294969866, "New", 4294969867, "Open", 4294969868, "Print", 4294969869, "Save", 4294969870, "Spell Check", 4294969871, "Audio Volume Down", 4294969872, "Audio Volume Up", 4294969873, "Audio Volume Mute", 4294970113, "Launch Application 2", 4294970114, "Launch Calendar", 4294970115, "Launch Mail", 4294970116, "Launch Media Player", 4294970117, "Launch Music Player", 4294970118, "Launch Application 1", 4294970119, "Launch Screen Saver", 4294970120, "Launch Spreadsheet", 4294970121, "Launch Web Browser", 4294970122, "Launch Web Cam", 4294970123, "Launch Word Processor", 4294970124, "Launch Contacts", 4294970125, "Launch Phone", 4294970126, "Launch Assistant", 4294970127, "Launch Control Panel", 4294970369, "Browser Back", 4294970370, "Browser Favorites", 4294970371, "Browser Forward", 4294970372, "Browser Home", 4294970373, "Browser Refresh", 4294970374, "Browser Search", 4294970375, "Browser Stop", 4294970625, "Audio Balance Left", 4294970626, "Audio Balance Right", 4294970627, "Audio Bass Boost Down", 4294970628, "Audio Bass Boost Up", 4294970629, "Audio Fader Front", 4294970630, "Audio Fader Rear", 4294970631, "Audio Surround Mode Next", 4294970632, "AVR Input", 4294970633, "AVR Power", 4294970634, "Channel Down", 4294970635, "Channel Up", 4294970636, "Color F0 Red", 4294970637, "Color F1 Green", 4294970638, "Color F2 Yellow", 4294970639, "Color F3 Blue", 4294970640, "Color F4 Grey", 4294970641, "Color F5 Brown", 4294970642, "Closed Caption Toggle", 4294970643, "Dimmer", 4294970644, "Display Swap", 4294970645, "Exit", 4294970646, "Favorite Clear 0", 4294970647, "Favorite Clear 1", 4294970648, "Favorite Clear 2", 4294970649, "Favorite Clear 3", 4294970650, "Favorite Recall 0", 4294970651, "Favorite Recall 1", 4294970652, "Favorite Recall 2", 4294970653, "Favorite Recall 3", 4294970654, "Favorite Store 0", 4294970655, "Favorite Store 1", 4294970656, "Favorite Store 2", 4294970657, "Favorite Store 3", 4294970658, "Guide", 4294970659, "Guide Next Day", 4294970660, "Guide Previous Day", 4294970661, "Info", 4294970662, "Instant Replay", 4294970663, "Link", 4294970664, "List Program", 4294970665, "Live Content", 4294970666, "Lock", 4294970667, "Media Apps", 4294970668, "Media Fast Forward", 4294970669, "Media Last", 4294970670, "Media Pause", 4294970671, "Media Play", 4294970672, "Media Record", 4294970673, "Media Rewind", 4294970674, "Media Skip", 4294970675, "Next Favorite Channel", 4294970676, "Next User Profile", 4294970677, "On Demand", 4294970678, "P In P Down", 4294970679, "P In P Move", 4294970680, "P In P Toggle", 4294970681, "P In P Up", 4294970682, "Play Speed Down", 4294970683, "Play Speed Reset", 4294970684, "Play Speed Up", 4294970685, "Random Toggle", 4294970686, "Rc Low Battery", 4294970687, "Record Speed Next", 4294970688, "Rf Bypass", 4294970689, "Scan Channels Toggle", 4294970690, "Screen Mode Next", 4294970691, "Settings", 4294970692, "Split Screen Toggle", 4294970693, "STB Input", 4294970694, "STB Power", 4294970695, "Subtitle", 4294970696, "Teletext", 4294970697, "TV", 4294970698, "TV Input", 4294970699, "TV Power", 4294970700, "Video Mode Next", 4294970701, "Wink", 4294970702, "Zoom Toggle", 4294970703, "DVR", 4294970704, "Media Audio Track", 4294970705, "Media Skip Backward", 4294970706, "Media Skip Forward", 4294970707, "Media Step Backward", 4294970708, "Media Step Forward", 4294970709, "Media Top Menu", 4294970710, "Navigate In", 4294970711, "Navigate Next", 4294970712, "Navigate Out", 4294970713, "Navigate Previous", 4294970714, "Pairing", 4294970715, "Media Close", 4294970882, "Audio Bass Boost Toggle", 4294970884, "Audio Treble Down", 4294970885, "Audio Treble Up", 4294970886, "Microphone Toggle", 4294970887, "Microphone Volume Down", 4294970888, "Microphone Volume Up", 4294970889, "Microphone Volume Mute", 4294971137, "Speech Correction List", 4294971138, "Speech Input Toggle", 4294971393, "App Switch", 4294971394, "Call", 4294971395, "Camera Focus", 4294971396, "End Call", 4294971397, "Go Back", 4294971398, "Go Home", 4294971399, "Headset Hook", 4294971400, "Last Number Redial", 4294971401, "Notification", 4294971402, "Manner Mode", 4294971403, "Voice Dial", 4294971649, "TV 3 D Mode", 4294971650, "TV Antenna Cable", 4294971651, "TV Audio Description", 4294971652, "TV Audio Description Mix Down", 4294971653, "TV Audio Description Mix Up", 4294971654, "TV Contents Menu", 4294971655, "TV Data Service", 4294971656, "TV Input Component 1", 4294971657, "TV Input Component 2", 4294971658, "TV Input Composite 1", 4294971659, "TV Input Composite 2", 4294971660, "TV Input HDMI 1", 4294971661, "TV Input HDMI 2", 4294971662, "TV Input HDMI 3", 4294971663, "TV Input HDMI 4", 4294971664, "TV Input VGA 1", 4294971665, "TV Media Context", 4294971666, "TV Network", 4294971667, "TV Number Entry", 4294971668, "TV Radio Service", 4294971669, "TV Satellite", 4294971670, "TV Satellite BS", 4294971671, "TV Satellite CS", 4294971672, "TV Satellite Toggle", 4294971673, "TV Terrestrial Analog", 4294971674, "TV Terrestrial Digital", 4294971675, "TV Timer", 4294971905, "Key 11", 4294971906, "Key 12", 8589934592, "Suspend", 8589934593, "Resume", 8589934594, "Sleep", 8589934595, "Abort", 8589934608, "Lang 1", 8589934609, "Lang 2", 8589934610, "Lang 3", 8589934611, "Lang 4", 8589934612, "Lang 5", 8589934624, "Intl Backslash", 8589934625, "Intl Ro", 8589934626, "Intl Yen", 8589934848, "Control Left", 8589934849, "Control Right", 8589934850, "Shift Left", 8589934851, "Shift Right", 8589934852, "Alt Left", 8589934853, "Alt Right", 8589934854, "Meta Left", 8589934855, "Meta Right", 8589935088, "Control", 8589935090, "Shift", 8589935092, "Alt", 8589935094, "Meta", 8589935117, "Numpad Enter", 8589935144, "Numpad Paren Left", 8589935145, "Numpad Paren Right", 8589935146, "Numpad Multiply", 8589935147, "Numpad Add", 8589935148, "Numpad Comma", 8589935149, "Numpad Subtract", 8589935150, "Numpad Decimal", 8589935151, "Numpad Divide", 8589935152, "Numpad 0", 8589935153, "Numpad 1", 8589935154, "Numpad 2", 8589935155, "Numpad 3", 8589935156, "Numpad 4", 8589935157, "Numpad 5", 8589935158, "Numpad 6", 8589935159, "Numpad 7", 8589935160, "Numpad 8", 8589935161, "Numpad 9", 8589935165, "Numpad Equal", 8589935361, "Game Button 1", 8589935362, "Game Button 2", 8589935363, "Game Button 3", 8589935364, "Game Button 4", 8589935365, "Game Button 5", 8589935366, "Game Button 6", 8589935367, "Game Button 7", 8589935368, "Game Button 8", 8589935369, "Game Button 9", 8589935370, "Game Button 10", 8589935371, "Game Button 11", 8589935372, "Game Button 12", 8589935373, "Game Button 13", 8589935374, "Game Button 14", 8589935375, "Game Button 15", 8589935376, "Game Button 16", 8589935377, "Game Button A", 8589935378, "Game Button B", 8589935379, "Game Button C", 8589935380, "Game Button Left 1", 8589935381, "Game Button Left 2", 8589935382, "Game Button Mode", 8589935383, "Game Button Right 1", 8589935384, "Game Button Right 2", 8589935385, "Game Button Select", 8589935386, "Game Button Start", 8589935387, "Game Button Thumb Left", 8589935388, "Game Button Thumb Right", 8589935389, "Game Button X", 8589935390, "Game Button Y", 8589935391, "Game Button Z"], B.findType("GeneralConstantMap<int,String>"));
    C.LogicalKeyboardKey_32 = new A.LogicalKeyboardKey(32);
    C.LogicalKeyboardKey_97 = new A.LogicalKeyboardKey(97);
    C.LogicalKeyboardKey_98 = new A.LogicalKeyboardKey(98);
    C.LogicalKeyboardKey_99 = new A.LogicalKeyboardKey(99);
    C.LogicalKeyboardKey_101 = new A.LogicalKeyboardKey(101);
    C.LogicalKeyboardKey_102 = new A.LogicalKeyboardKey(102);
    C.LogicalKeyboardKey_110 = new A.LogicalKeyboardKey(110);
    C.LogicalKeyboardKey_112 = new A.LogicalKeyboardKey(112);
    C.LogicalKeyboardKey_116 = new A.LogicalKeyboardKey(116);
    C.LogicalKeyboardKey_118 = new A.LogicalKeyboardKey(118);
    C.LogicalKeyboardKey_120 = new A.LogicalKeyboardKey(120);
    C.LogicalKeyboardKey_122 = new A.LogicalKeyboardKey(122);
    C.LogicalKeyboardKey_4294967305 = new A.LogicalKeyboardKey(4294967305);
    C.LogicalKeyboardKey_4294968588 = new A.LogicalKeyboardKey(4294968588);
    C.LogicalKeyboardKey_8589935377 = new A.LogicalKeyboardKey(8589935377);
    C.SemanticsFlag_1_hasCheckedState = new A.SemanticsFlag(1, "hasCheckedState");
    C.SemanticsFlag_2_isChecked = new A.SemanticsFlag(2, "isChecked");
    C.SemanticsFlag_4_isSelected = new A.SemanticsFlag(4, "isSelected");
    C.SemanticsFlag_8_isButton = new A.SemanticsFlag(8, "isButton");
    C.SemanticsFlag_16_isTextField = new A.SemanticsFlag(16, "isTextField");
    C.SemanticsFlag_32_isFocused = new A.SemanticsFlag(32, "isFocused");
    C.SemanticsFlag_64_hasEnabledState = new A.SemanticsFlag(64, "hasEnabledState");
    C.SemanticsFlag_128_isEnabled = new A.SemanticsFlag(128, "isEnabled");
    C.SemanticsFlag_256_isInMutuallyExclusiveGroup = new A.SemanticsFlag(256, "isInMutuallyExclusiveGroup");
    C.SemanticsFlag_512_isHeader = new A.SemanticsFlag(512, "isHeader");
    C.SemanticsFlag_1024_isObscured = new A.SemanticsFlag(1024, "isObscured");
    C.SemanticsFlag_2048_scopesRoute = new A.SemanticsFlag(2048, "scopesRoute");
    C.SemanticsFlag_4096_namesRoute = new A.SemanticsFlag(4096, "namesRoute");
    C.SemanticsFlag_8192_isHidden = new A.SemanticsFlag(8192, "isHidden");
    C.SemanticsFlag_16384_isImage = new A.SemanticsFlag(16384, "isImage");
    C.SemanticsFlag_32768_isLiveRegion = new A.SemanticsFlag(32768, "isLiveRegion");
    C.SemanticsFlag_65536_hasToggledState = new A.SemanticsFlag(65536, "hasToggledState");
    C.SemanticsFlag_131072_isToggled = new A.SemanticsFlag(131072, "isToggled");
    C.SemanticsFlag_262144_hasImplicitScrolling = new A.SemanticsFlag(262144, "hasImplicitScrolling");
    C.SemanticsFlag_524288_isMultiline = new A.SemanticsFlag(524288, "isMultiline");
    C.SemanticsFlag_1048576_isReadOnly = new A.SemanticsFlag(1048576, "isReadOnly");
    C.SemanticsFlag_2097152_isFocusable = new A.SemanticsFlag(2097152, "isFocusable");
    C.SemanticsFlag_4194304_isLink = new A.SemanticsFlag(4194304, "isLink");
    C.SemanticsFlag_8388608_isSlider = new A.SemanticsFlag(8388608, "isSlider");
    C.SemanticsFlag_16777216_isKeyboardKey = new A.SemanticsFlag(16777216, "isKeyboardKey");
    C.SemanticsFlag_33554432_isCheckStateMixed = new A.SemanticsFlag(33554432, "isCheckStateMixed");
    C.SemanticsFlag_67108864_hasExpandedState = new A.SemanticsFlag(67108864, "hasExpandedState");
    C.SemanticsFlag_134217728_isExpanded = new A.SemanticsFlag(134217728, "isExpanded");
    C.Map_2r4me = new B.GeneralConstantMap([1, C.SemanticsFlag_1_hasCheckedState, 2, C.SemanticsFlag_2_isChecked, 4, C.SemanticsFlag_4_isSelected, 8, C.SemanticsFlag_8_isButton, 16, C.SemanticsFlag_16_isTextField, 32, C.SemanticsFlag_32_isFocused, 64, C.SemanticsFlag_64_hasEnabledState, 128, C.SemanticsFlag_128_isEnabled, 256, C.SemanticsFlag_256_isInMutuallyExclusiveGroup, 512, C.SemanticsFlag_512_isHeader, 1024, C.SemanticsFlag_1024_isObscured, 2048, C.SemanticsFlag_2048_scopesRoute, 4096, C.SemanticsFlag_4096_namesRoute, 8192, C.SemanticsFlag_8192_isHidden, 16384, C.SemanticsFlag_16384_isImage, 32768, C.SemanticsFlag_32768_isLiveRegion, 65536, C.SemanticsFlag_65536_hasToggledState, 131072, C.SemanticsFlag_131072_isToggled, 262144, C.SemanticsFlag_262144_hasImplicitScrolling, 524288, C.SemanticsFlag_524288_isMultiline, 1048576, C.SemanticsFlag_1048576_isReadOnly, 2097152, C.SemanticsFlag_2097152_isFocusable, 4194304, C.SemanticsFlag_4194304_isLink, 8388608, C.SemanticsFlag_8388608_isSlider, 16777216, C.SemanticsFlag_16777216_isKeyboardKey, 33554432, C.SemanticsFlag_33554432_isCheckStateMixed, 67108864, C.SemanticsFlag_67108864_hasExpandedState, 134217728, C.SemanticsFlag_134217728_isExpanded], B.findType("GeneralConstantMap<int,SemanticsFlag>"));
    C.Object_MOK = {in: 0, iw: 1, ji: 2, jw: 3, mo: 4, aam: 5, adp: 6, aue: 7, ayx: 8, bgm: 9, bjd: 10, ccq: 11, cjr: 12, cka: 13, cmk: 14, coy: 15, cqu: 16, drh: 17, drw: 18, gav: 19, gfx: 20, ggn: 21, gti: 22, guv: 23, hrr: 24, ibi: 25, ilw: 26, jeg: 27, kgc: 28, kgh: 29, koj: 30, krm: 31, ktr: 32, kvs: 33, kwq: 34, kxe: 35, kzj: 36, kzt: 37, lii: 38, lmm: 39, meg: 40, mst: 41, mwj: 42, myt: 43, nad: 44, ncp: 45, nnx: 46, nts: 47, oun: 48, pcr: 49, pmc: 50, pmu: 51, ppa: 52, ppr: 53, pry: 54, puz: 55, sca: 56, skk: 57, tdu: 58, thc: 59, thx: 60, tie: 61, tkk: 62, tlw: 63, tmp: 64, tne: 65, tnf: 66, tsf: 67, uok: 68, xba: 69, xia: 70, xkh: 71, xsj: 72, ybd: 73, yma: 74, ymt: 75, yos: 76, yuu: 77};
    C.Map_43kKQ = new B.ConstantStringMap(C.Object_MOK, ["id", "he", "yi", "jv", "ro", "aas", "dz", "ktz", "nun", "bcg", "drl", "rki", "mom", "cmr", "xch", "pij", "quh", "khk", "prs", "dev", "vaj", "gvr", "nyc", "duz", "jal", "opa", "gal", "oyb", "tdf", "kml", "kwv", "bmf", "dtp", "gdj", "yam", "tvd", "dtp", "dtp", "raq", "rmx", "cir", "mry", "vaj", "mry", "xny", "kdz", "ngv", "pij", "vaj", "adx", "huw", "phr", "bfy", "lcq", "prt", "pub", "hle", "oyb", "dtp", "tpo", "oyb", "ras", "twm", "weo", "tyj", "kak", "prs", "taj", "ema", "cax", "acn", "waw", "suj", "rki", "lrr", "mtm", "zom", "yug"], type$.ConstantStringMap_String_String);
    C.Object_BeS = {alias: 0, allScroll: 1, basic: 2, cell: 3, click: 4, contextMenu: 5, copy: 6, forbidden: 7, grab: 8, grabbing: 9, help: 10, move: 11, none: 12, noDrop: 13, precise: 14, progress: 15, text: 16, resizeColumn: 17, resizeDown: 18, resizeDownLeft: 19, resizeDownRight: 20, resizeLeft: 21, resizeLeftRight: 22, resizeRight: 23, resizeRow: 24, resizeUp: 25, resizeUpDown: 26, resizeUpLeft: 27, resizeUpRight: 28, resizeUpLeftDownRight: 29, resizeUpRightDownLeft: 30, verticalText: 31, wait: 32, zoomIn: 33, zoomOut: 34};
    C.Map_WZ6cQ = new B.ConstantStringMap(C.Object_BeS, ["alias", "all-scroll", "default", "cell", "pointer", "context-menu", "copy", "not-allowed", "grab", "grabbing", "help", "move", "none", "no-drop", "crosshair", "progress", "text", "col-resize", "s-resize", "sw-resize", "se-resize", "w-resize", "ew-resize", "e-resize", "row-resize", "n-resize", "ns-resize", "nw-resize", "ne-resize", "nwse-resize", "nesw-resize", "vertical-text", "wait", "zoom-in", "zoom-out"], type$.ConstantStringMap_String_String);
    C.Map_empty0 = new B.ConstantStringMap(D.Object_empty, [], B.findType("ConstantStringMap<PersistedSurface,PersistedSurface>"));
    C.Map_empty = new B.ConstantStringMap(D.Object_empty, [], B.findType("ConstantStringMap<String,List<String>>"));
    C.SemanticsAction_1_tap = new A.SemanticsAction(1, "tap");
    C.SemanticsAction_2_longPress = new A.SemanticsAction(2, "longPress");
    C.SemanticsAction_4_scrollLeft = new A.SemanticsAction(4, "scrollLeft");
    C.SemanticsAction_8_scrollRight = new A.SemanticsAction(8, "scrollRight");
    C.SemanticsAction_16_scrollUp = new A.SemanticsAction(16, "scrollUp");
    C.SemanticsAction_32_scrollDown = new A.SemanticsAction(32, "scrollDown");
    C.SemanticsAction_64_increase = new A.SemanticsAction(64, "increase");
    C.SemanticsAction_128_decrease = new A.SemanticsAction(128, "decrease");
    C.SemanticsAction_256_showOnScreen = new A.SemanticsAction(256, "showOnScreen");
    C.SemanticsAction_512_moveCursorForwardByCharacter = new A.SemanticsAction(512, "moveCursorForwardByCharacter");
    C.SemanticsAction_A5q = new A.SemanticsAction(1024, "moveCursorBackwardByCharacter");
    C.SemanticsAction_2048_setSelection = new A.SemanticsAction(2048, "setSelection");
    C.SemanticsAction_4096_copy = new A.SemanticsAction(4096, "copy");
    C.SemanticsAction_8192_cut = new A.SemanticsAction(8192, "cut");
    C.SemanticsAction_16384_paste = new A.SemanticsAction(16384, "paste");
    C.SemanticsAction_32768_didGainAccessibilityFocus = new A.SemanticsAction(32768, "didGainAccessibilityFocus");
    C.SemanticsAction_65536_didLoseAccessibilityFocus = new A.SemanticsAction(65536, "didLoseAccessibilityFocus");
    C.SemanticsAction_131072_customAction = new A.SemanticsAction(131072, "customAction");
    C.SemanticsAction_262144_dismiss = new A.SemanticsAction(262144, "dismiss");
    C.SemanticsAction_524288_moveCursorForwardByWord = new A.SemanticsAction(524288, "moveCursorForwardByWord");
    C.SemanticsAction_1048576_moveCursorBackwardByWord = new A.SemanticsAction(1048576, "moveCursorBackwardByWord");
    C.SemanticsAction_2097152_setText = new A.SemanticsAction(2097152, "setText");
    C.SemanticsAction_4194304_focus = new A.SemanticsAction(4194304, "focus");
    C.Map_guMi7 = new B.GeneralConstantMap([1, C.SemanticsAction_1_tap, 2, C.SemanticsAction_2_longPress, 4, C.SemanticsAction_4_scrollLeft, 8, C.SemanticsAction_8_scrollRight, 16, C.SemanticsAction_16_scrollUp, 32, C.SemanticsAction_32_scrollDown, 64, C.SemanticsAction_64_increase, 128, C.SemanticsAction_128_decrease, 256, C.SemanticsAction_256_showOnScreen, 512, C.SemanticsAction_512_moveCursorForwardByCharacter, 1024, C.SemanticsAction_A5q, 2048, C.SemanticsAction_2048_setSelection, 4096, C.SemanticsAction_4096_copy, 8192, C.SemanticsAction_8192_cut, 16384, C.SemanticsAction_16384_paste, 32768, C.SemanticsAction_32768_didGainAccessibilityFocus, 65536, C.SemanticsAction_65536_didLoseAccessibilityFocus, 131072, C.SemanticsAction_131072_customAction, 262144, C.SemanticsAction_262144_dismiss, 524288, C.SemanticsAction_524288_moveCursorForwardByWord, 1048576, C.SemanticsAction_1048576_moveCursorBackwardByWord, 2097152, C.SemanticsAction_2097152_setText, 4194304, C.SemanticsAction_4194304_focus], B.findType("GeneralConstantMap<int,SemanticsAction>"));
    C.Object_iRg = {BU: 0, DD: 1, FX: 2, TP: 3, YD: 4, ZR: 5};
    C.Map_jnSVN = new B.ConstantStringMap(C.Object_iRg, ["MM", "DE", "FR", "TL", "YE", "CD"], type$.ConstantStringMap_String_String);
    C.Object_2Px = {Abort: 0, Again: 1, AltLeft: 2, AltRight: 3, ArrowDown: 4, ArrowLeft: 5, ArrowRight: 6, ArrowUp: 7, AudioVolumeDown: 8, AudioVolumeMute: 9, AudioVolumeUp: 10, Backquote: 11, Backslash: 12, Backspace: 13, BracketLeft: 14, BracketRight: 15, BrightnessDown: 16, BrightnessUp: 17, BrowserBack: 18, BrowserFavorites: 19, BrowserForward: 20, BrowserHome: 21, BrowserRefresh: 22, BrowserSearch: 23, BrowserStop: 24, CapsLock: 25, Comma: 26, ContextMenu: 27, ControlLeft: 28, ControlRight: 29, Convert: 30, Copy: 31, Cut: 32, Delete: 33, Digit0: 34, Digit1: 35, Digit2: 36, Digit3: 37, Digit4: 38, Digit5: 39, Digit6: 40, Digit7: 41, Digit8: 42, Digit9: 43, DisplayToggleIntExt: 44, Eject: 45, End: 46, Enter: 47, Equal: 48, Esc: 49, Escape: 50, F1: 51, F10: 52, F11: 53, F12: 54, F13: 55, F14: 56, F15: 57, F16: 58, F17: 59, F18: 60, F19: 61, F2: 62, F20: 63, F21: 64, F22: 65, F23: 66, F24: 67, F3: 68, F4: 69, F5: 70, F6: 71, F7: 72, F8: 73, F9: 74, Find: 75, Fn: 76, FnLock: 77, GameButton1: 78, GameButton10: 79, GameButton11: 80, GameButton12: 81, GameButton13: 82, GameButton14: 83, GameButton15: 84, GameButton16: 85, GameButton2: 86, GameButton3: 87, GameButton4: 88, GameButton5: 89, GameButton6: 90, GameButton7: 91, GameButton8: 92, GameButton9: 93, GameButtonA: 94, GameButtonB: 95, GameButtonC: 96, GameButtonLeft1: 97, GameButtonLeft2: 98, GameButtonMode: 99, GameButtonRight1: 100, GameButtonRight2: 101, GameButtonSelect: 102, GameButtonStart: 103, GameButtonThumbLeft: 104, GameButtonThumbRight: 105, GameButtonX: 106, GameButtonY: 107, GameButtonZ: 108, Help: 109, Home: 110, Hyper: 111, Insert: 112, IntlBackslash: 113, IntlRo: 114, IntlYen: 115, KanaMode: 116, KeyA: 117, KeyB: 118, KeyC: 119, KeyD: 120, KeyE: 121, KeyF: 122, KeyG: 123, KeyH: 124, KeyI: 125, KeyJ: 126, KeyK: 127, KeyL: 128, KeyM: 129, KeyN: 130, KeyO: 131, KeyP: 132, KeyQ: 133, KeyR: 134, KeyS: 135, KeyT: 136, KeyU: 137, KeyV: 138, KeyW: 139, KeyX: 140, KeyY: 141, KeyZ: 142, KeyboardLayoutSelect: 143, Lang1: 144, Lang2: 145, Lang3: 146, Lang4: 147, Lang5: 148, LaunchApp1: 149, LaunchApp2: 150, LaunchAssistant: 151, LaunchControlPanel: 152, LaunchMail: 153, LaunchScreenSaver: 154, MailForward: 155, MailReply: 156, MailSend: 157, MediaFastForward: 158, MediaPause: 159, MediaPlay: 160, MediaPlayPause: 161, MediaRecord: 162, MediaRewind: 163, MediaSelect: 164, MediaStop: 165, MediaTrackNext: 166, MediaTrackPrevious: 167, MetaLeft: 168, MetaRight: 169, MicrophoneMuteToggle: 170, Minus: 171, NonConvert: 172, NumLock: 173, Numpad0: 174, Numpad1: 175, Numpad2: 176, Numpad3: 177, Numpad4: 178, Numpad5: 179, Numpad6: 180, Numpad7: 181, Numpad8: 182, Numpad9: 183, NumpadAdd: 184, NumpadBackspace: 185, NumpadClear: 186, NumpadClearEntry: 187, NumpadComma: 188, NumpadDecimal: 189, NumpadDivide: 190, NumpadEnter: 191, NumpadEqual: 192, NumpadMemoryAdd: 193, NumpadMemoryClear: 194, NumpadMemoryRecall: 195, NumpadMemoryStore: 196, NumpadMemorySubtract: 197, NumpadMultiply: 198, NumpadParenLeft: 199, NumpadParenRight: 200, NumpadSubtract: 201, Open: 202, PageDown: 203, PageUp: 204, Paste: 205, Pause: 206, Period: 207, Power: 208, PrintScreen: 209, PrivacyScreenToggle: 210, Props: 211, Quote: 212, Resume: 213, ScrollLock: 214, Select: 215, SelectTask: 216, Semicolon: 217, ShiftLeft: 218, ShiftRight: 219, ShowAllWindows: 220, Slash: 221, Sleep: 222, Space: 223, Super: 224, Suspend: 225, Tab: 226, Turbo: 227, Undo: 228, WakeUp: 229, ZoomToggle: 230};
    C.Map_ntMYA = new B.ConstantStringMap(C.Object_2Px, [458907, 458873, 458978, 458982, 458833, 458832, 458831, 458834, 458881, 458879, 458880, 458805, 458801, 458794, 458799, 458800, 786544, 786543, 786980, 786986, 786981, 786979, 786983, 786977, 786982, 458809, 458806, 458853, 458976, 458980, 458890, 458876, 458875, 458828, 458791, 458782, 458783, 458784, 458785, 458786, 458787, 458788, 458789, 458790, 65717, 786616, 458829, 458792, 458798, 458793, 458793, 458810, 458819, 458820, 458821, 458856, 458857, 458858, 458859, 458860, 458861, 458862, 458811, 458863, 458864, 458865, 458866, 458867, 458812, 458813, 458814, 458815, 458816, 458817, 458818, 458878, 18, 19, 392961, 392970, 392971, 392972, 392973, 392974, 392975, 392976, 392962, 392963, 392964, 392965, 392966, 392967, 392968, 392969, 392977, 392978, 392979, 392980, 392981, 392982, 392983, 392984, 392985, 392986, 392987, 392988, 392989, 392990, 392991, 458869, 458826, 16, 458825, 458852, 458887, 458889, 458888, 458756, 458757, 458758, 458759, 458760, 458761, 458762, 458763, 458764, 458765, 458766, 458767, 458768, 458769, 458770, 458771, 458772, 458773, 458774, 458775, 458776, 458777, 458778, 458779, 458780, 458781, 787101, 458896, 458897, 458898, 458899, 458900, 786836, 786834, 786891, 786847, 786826, 786865, 787083, 787081, 787084, 786611, 786609, 786608, 786637, 786610, 786612, 786819, 786615, 786613, 786614, 458979, 458983, 24, 458797, 458891, 458835, 458850, 458841, 458842, 458843, 458844, 458845, 458846, 458847, 458848, 458849, 458839, 458939, 458968, 458969, 458885, 458851, 458836, 458840, 458855, 458963, 458962, 458961, 458960, 458964, 458837, 458934, 458935, 458838, 458868, 458830, 458827, 458877, 458824, 458807, 458854, 458822, 23, 458915, 458804, 21, 458823, 458871, 786850, 458803, 458977, 458981, 787103, 458808, 65666, 458796, 17, 20, 458795, 22, 458874, 65667, 786994], B.findType("ConstantStringMap<String,int>"));
    C.Object_type_0 = {type: 0};
    C.Map_wEY7l = new B.ConstantStringMap(C.Object_type_0, ["line"], type$.ConstantStringMap_String_String);
    C.C_StandardMethodCodec0 = new A.StandardMethodCodec0();
    C.MutatorType_0 = new A.MutatorType(0, "clipRect");
    C.MutatorType_1 = new A.MutatorType(1, "clipRRect");
    C.MutatorType_2 = new A.MutatorType(2, "clipPath");
    C.MutatorType_3 = new A.MutatorType(3, "transform");
    C.MutatorType_4 = new A.MutatorType(4, "opacity");
    C.NavigationMode_0 = new A.NavigationMode(0, "traditional");
    C.OperatingSystem_0 = new A.OperatingSystem(0, "iOs");
    C.OperatingSystem_1 = new A.OperatingSystem(1, "android");
    C.OperatingSystem_2 = new A.OperatingSystem(2, "linux");
    C.OperatingSystem_3 = new A.OperatingSystem(3, "windows");
    C.OperatingSystem_4 = new A.OperatingSystem(4, "macOs");
    C.OperatingSystem_5 = new A.OperatingSystem(5, "unknown");
    C.C_JSONMethodCodec0 = new A.JSONMethodCodec0();
    C.OptionalMethodChannel_86y = new A.OptionalMethodChannel("flutter/navigation", C.C_JSONMethodCodec0);
    C.OptionalMethodChannel_EAC = new A.OptionalMethodChannel("flutter/mousecursor", C.C_StandardMethodCodec0);
    C.OptionalMethodChannel_ENd = new A.OptionalMethodChannel("flutter/platform", C.C_JSONMethodCodec0);
    C.PaintingStyle_0 = new A.PaintingStyle(0, "fill");
    C.PaintingStyle_1 = new A.PaintingStyle(1, "stroke");
    C.PathFillType_0 = new A.PathFillType(0, "nonZero");
    C.PathFillType_1 = new A.PathFillType(1, "evenOdd");
    C.PersistedSurfaceState_0 = new A.PersistedSurfaceState(0, "created");
    C.PersistedSurfaceState_1 = new A.PersistedSurfaceState(1, "active");
    C.PersistedSurfaceState_2 = new A.PersistedSurfaceState(2, "pendingRetention");
    C.PersistedSurfaceState_3 = new A.PersistedSurfaceState(3, "pendingUpdate");
    C.PersistedSurfaceState_4 = new A.PersistedSurfaceState(4, "released");
    C.PersistentHashMap_null = new A.PersistentHashMap(null, B.findType("PersistentHashMap<Type,InheritedElement>"));
    C.PlaceholderAlignment_0 = new A.PlaceholderAlignment(0, "baseline");
    C.PlaceholderAlignment_1 = new A.PlaceholderAlignment(1, "aboveBaseline");
    C.PlaceholderAlignment_2 = new A.PlaceholderAlignment(2, "belowBaseline");
    C.PlaceholderAlignment_3 = new A.PlaceholderAlignment(3, "top");
    C.PlaceholderAlignment_4 = new A.PlaceholderAlignment(4, "bottom");
    C.PlaceholderAlignment_5 = new A.PlaceholderAlignment(5, "middle");
    C.Size_0_0 = new A.Size(0, 0);
    C.PointerChange_0 = new A.PointerChange(0, "cancel");
    C.PointerChange_1 = new A.PointerChange(1, "add");
    C.PointerChange_2 = new A.PointerChange(2, "remove");
    C.PointerChange_3 = new A.PointerChange(3, "hover");
    C.PointerChange_4 = new A.PointerChange(4, "down");
    C.PointerChange_5 = new A.PointerChange(5, "move");
    C.PointerChange_6 = new A.PointerChange(6, "up");
    C.PointerChange_7 = new A.PointerChange(7, "panZoomStart");
    C.PointerChange_8 = new A.PointerChange(8, "panZoomUpdate");
    C.PointerChange_9 = new A.PointerChange(9, "panZoomEnd");
    C.PointerDeviceKind_0 = new A.PointerDeviceKind(0, "touch");
    C.PointerDeviceKind_1 = new A.PointerDeviceKind(1, "mouse");
    C.PointerDeviceKind_2 = new A.PointerDeviceKind(2, "stylus");
    C.PointerDeviceKind_3 = new A.PointerDeviceKind(3, "invertedStylus");
    C.PointerDeviceKind_4 = new A.PointerDeviceKind(4, "trackpad");
    C.PointerDeviceKind_5 = new A.PointerDeviceKind(5, "unknown");
    C.PointerSignalKind_0 = new A.PointerSignalKind(0, "none");
    C.PointerSignalKind_1 = new A.PointerSignalKind(1, "scroll");
    C.PointerSignalKind_2 = new A.PointerSignalKind(2, "scrollInertiaCancel");
    C.PointerSignalKind_3 = new A.PointerSignalKind(3, "scale");
    C.PointerSignalKind_4 = new A.PointerSignalKind(4, "unknown");
    C.PrimaryRole_0 = new A.PrimaryRole(0, "incrementable");
    C.PrimaryRole_1 = new A.PrimaryRole(1, "scrollable");
    C.PrimaryRole_10 = new A.PrimaryRole(10, "link");
    C.PrimaryRole_2 = new A.PrimaryRole(2, "button");
    C.PrimaryRole_3 = new A.PrimaryRole(3, "textField");
    C.PrimaryRole_4 = new A.PrimaryRole(4, "checkable");
    C.PrimaryRole_5 = new A.PrimaryRole(5, "heading");
    C.PrimaryRole_6 = new A.PrimaryRole(6, "image");
    C.PrimaryRole_7 = new A.PrimaryRole(7, "dialog");
    C.PrimaryRole_8 = new A.PrimaryRole(8, "platformView");
    C.PrimaryRole_9 = new A.PrimaryRole(9, "generic");
    C.Radius_jxw = new A.Radius(-1 / 0, -1 / 0);
    C.Record2_false_false = new B._Record_2(false, false);
    C.Record2_false_null = new B._Record_2(false, null);
    C.Record2_false_true = new B._Record_2(false, true);
    C.Record2_true_false = new B._Record_2(true, false);
    C.Record2_true_true = new B._Record_2(true, true);
    C.Rect_0_0_0_0 = new A.Rect(0, 0, 0, 0);
    C.Rect_tsf = new A.Rect(-1000000000, -1000000000, 1000000000, 1000000000);
    C.SchedulerPhase_00 = new A.SchedulerPhase(0, "idle");
    C.SchedulerPhase_1 = new A.SchedulerPhase(1, "transientCallbacks");
    C.SchedulerPhase_2 = new A.SchedulerPhase(2, "midFrameMicrotasks");
    C.SchedulerPhase_3 = new A.SchedulerPhase(3, "persistentCallbacks");
    C.SchedulerPhase_4 = new A.SchedulerPhase(4, "postFrameCallbacks");
    C.ScrollPositionAlignmentPolicy_0 = new A.ScrollPositionAlignmentPolicy(0, "explicit");
    C.ScrollPositionAlignmentPolicy_1 = new A.ScrollPositionAlignmentPolicy(1, "keepVisibleAtEnd");
    C.ScrollPositionAlignmentPolicy_2 = new A.ScrollPositionAlignmentPolicy(2, "keepVisibleAtStart");
    C.Set_2h4Ve = new A.GeneralConstantSet([C.OperatingSystem_4, C.OperatingSystem_2, C.OperatingSystem_3], B.findType("GeneralConstantSet<OperatingSystem>"));
    C.Object_F2x = {click: 0, keyup: 1, keydown: 2, mouseup: 3, mousedown: 4, pointerdown: 5, pointerup: 6};
    C.Set_2nPij = new A.ConstantStringSet(C.Object_F2x, 7, type$.ConstantStringSet_String);
    C.Object_2tv = {click: 0, touchstart: 1, touchend: 2, pointerdown: 3, pointermove: 4, pointerup: 5};
    C.Set_3bBbi = new A.ConstantStringSet(C.Object_2tv, 6, type$.ConstantStringSet_String);
    C.Set_GJovi = new A.GeneralConstantSet([32, 8203], type$.GeneralConstantSet_int);
    C.Object_8aB = {serif: 0, "sans-serif": 1, monospace: 2, cursive: 3, fantasy: 4, "system-ui": 5, math: 6, emoji: 7, fangsong: 8};
    C.Set_GbU0l = new A.ConstantStringSet(C.Object_8aB, 9, type$.ConstantStringSet_String);
    C.Object_V1p = {"canvaskit.js": 0};
    C.Set_OhoY3 = new A.ConstantStringSet(C.Object_V1p, 1, type$.ConstantStringSet_String);
    C.Set_k2M5 = new A.GeneralConstantSet([10, 11, 12, 13, 133, 8232, 8233], type$.GeneralConstantSet_int);
    C.Size_100000_100000 = new A.Size(100000, 100000);
    C.StackFrame_DV7 = new A.StackFrame("<asynchronous suspension>", -1, "", "", "", -1, -1, "", "asynchronous suspension");
    C.StackFrame_cg9 = new A.StackFrame("...", -1, "", "", "", -1, -1, "", "...");
    C.StrokeCap_0 = new A.StrokeCap(0, "butt");
    C.StrokeJoin_0 = new A.StrokeJoin(0, "miter");
    C.SvgBlendMode_0 = new A.SvgBlendMode(0);
    C.SvgBlendMode_09 = new A.SvgBlendMode(0);
    C.SvgBlendMode_07 = new A.SvgBlendMode(0);
    C.SvgBlendMode_05 = new A.SvgBlendMode(0);
    C.SvgBlendMode_06 = new A.SvgBlendMode(0);
    C.SvgBlendMode_04 = new A.SvgBlendMode(0);
    C.SvgBlendMode_08 = new A.SvgBlendMode(0);
    C.SvgBlendMode_03 = new A.SvgBlendMode(0);
    C.SvgBlendMode_01 = new A.SvgBlendMode(0);
    C.SvgBlendMode_02 = new A.SvgBlendMode(0);
    C.SvgBlendMode_00 = new A.SvgBlendMode(0);
    C.SvgBlendMode_010 = new A.SvgBlendMode(0);
    C.SvgBlendMode_1 = new A.SvgBlendMode(1);
    C.SvgBlendMode_10 = new A.SvgBlendMode(10);
    C.SvgBlendMode_11 = new A.SvgBlendMode(11);
    C.SvgBlendMode_12 = new A.SvgBlendMode(12);
    C.SvgBlendMode_13 = new A.SvgBlendMode(13);
    C.SvgBlendMode_14 = new A.SvgBlendMode(14);
    C.SvgBlendMode_15 = new A.SvgBlendMode(15);
    C.SvgBlendMode_16 = new A.SvgBlendMode(16);
    C.SvgBlendMode_2 = new A.SvgBlendMode(2);
    C.SvgBlendMode_3 = new A.SvgBlendMode(3);
    C.SvgBlendMode_4 = new A.SvgBlendMode(4);
    C.SvgBlendMode_5 = new A.SvgBlendMode(5);
    C.SvgBlendMode_6 = new A.SvgBlendMode(6);
    C.SvgBlendMode_7 = new A.SvgBlendMode(7);
    C.SvgBlendMode_8 = new A.SvgBlendMode(8);
    C.SvgBlendMode_9 = new A.SvgBlendMode(9);
    C.TextBaseline_0 = new A.TextBaseline(0, "alphabetic");
    C.TextBaseline_1 = new A.TextBaseline(1, "ideographic");
    C.TextCapitalization_3 = new A.TextCapitalization(3, "none");
    C.TextCapitalizationConfig_TextCapitalization_3 = new A.TextCapitalizationConfig(C.TextCapitalization_3);
    C.TextCapitalization_0 = new A.TextCapitalization(0, "words");
    C.TextCapitalization_1 = new A.TextCapitalization(1, "sentences");
    C.TextCapitalization_2 = new A.TextCapitalization(2, "characters");
    C.TextDecoration_0 = new A.TextDecoration(0);
    C.TextDecoration_1 = new A.TextDecoration(1);
    C.TextDecoration_2 = new A.TextDecoration(2);
    C.TextDecoration_4 = new A.TextDecoration(4);
    C.TextLeadingDistribution_0 = new A.TextLeadingDistribution(0, "proportional");
    C.TextLeadingDistribution_1 = new A.TextLeadingDistribution(1, "even");
    C.TextPosition_0_TextAffinity_1 = new A.TextPosition(0, C.TextAffinity_1);
    C.TextRange_m1_m1 = new A.TextRange(-1, -1);
    C.TextDecorationStyle_1 = new A.TextDecorationStyle(1, "double");
    C.TileMode_0 = new A.TileMode(0, "clamp");
    C.TileMode_3 = new A.TileMode(3, "decal");
    C.TransformKind_0 = new A.TransformKind(0, "identity");
    C.TransformKind_1 = new A.TransformKind(1, "transform2d");
    C.TransformKind_2 = new A.TransformKind(2, "complex");
    C.TraversalDirection_0 = new A.TraversalDirection(0, "up");
    C.TraversalDirection_1 = new A.TraversalDirection(1, "right");
    C.TraversalDirection_2 = new A.TraversalDirection(2, "down");
    C.TraversalDirection_3 = new A.TraversalDirection(3, "left");
    C.TraversalEdgeBehavior_0 = new A.TraversalEdgeBehavior(0, "closedLoop");
    C.TraversalEdgeBehavior_1 = new A.TraversalEdgeBehavior(1, "leaveFlutterView");
    C.TraversalEdgeBehavior_2 = new A.TraversalEdgeBehavior(2, "parentScope");
    C.Type_ChangeNotifier_JQE = B.typeLiteral("ChangeNotifier");
    C.Type_Element_zvS = B.typeLiteral("Element0");
    C.Type_Layer_yG7 = B.typeLiteral("Layer0");
    C.Type_LayoutFragment_GQf = B.typeLiteral("LayoutFragment");
    C.Type_ParagraphLine_UB7 = B.typeLiteral("ParagraphLine");
    C.Type_RenderObject_ApM = B.typeLiteral("RenderObject");
    C.Type_RenderingPlatformView_IIV = B.typeLiteral("RenderingPlatformView");
    C.Type_RenderingRenderCanvas_gsm = B.typeLiteral("RenderingRenderCanvas");
    C.Type_State_9a2 = B.typeLiteral("State0<StatefulWidget>");
    C.Type_double_23F = B.typeLiteral("double");
    C.UnfocusDisposition_0 = new A.UnfocusDisposition(0, "scope");
    C.UnfocusDisposition_1 = new A.UnfocusDisposition(1, "previouslyFocusedChild");
    C.UnicodeRange_11264_55297_TextDirection_1 = new A.UnicodeRange(11264, 55297, C.TextDirection_1, type$.UnicodeRange_TextDirection);
    C.UnicodeRange_1425_1775_TextDirection_0 = new A.UnicodeRange(1425, 1775, C.TextDirection_0, type$.UnicodeRange_TextDirection);
    C.UnicodeRange_1786_2303_TextDirection_0 = new A.UnicodeRange(1786, 2303, C.TextDirection_0, type$.UnicodeRange_TextDirection);
    C.UnicodeRange_192_214_TextDirection_1 = new A.UnicodeRange(192, 214, C.TextDirection_1, type$.UnicodeRange_TextDirection);
    C.UnicodeRange_216_246_TextDirection_1 = new A.UnicodeRange(216, 246, C.TextDirection_1, type$.UnicodeRange_TextDirection);
    C.UnicodeRange_2304_8191_TextDirection_1 = new A.UnicodeRange(2304, 8191, C.TextDirection_1, type$.UnicodeRange_TextDirection);
    C.UnicodeRange_248_696_TextDirection_1 = new A.UnicodeRange(248, 696, C.TextDirection_1, type$.UnicodeRange_TextDirection);
    C.UnicodeRange_55298_55299_TextDirection_0 = new A.UnicodeRange(55298, 55299, C.TextDirection_0, type$.UnicodeRange_TextDirection);
    C.UnicodeRange_55300_55353_TextDirection_1 = new A.UnicodeRange(55300, 55353, C.TextDirection_1, type$.UnicodeRange_TextDirection);
    C.UnicodeRange_55354_55355_TextDirection_0 = new A.UnicodeRange(55354, 55355, C.TextDirection_0, type$.UnicodeRange_TextDirection);
    C.UnicodeRange_55356_56319_TextDirection_1 = new A.UnicodeRange(55356, 56319, C.TextDirection_1, type$.UnicodeRange_TextDirection);
    C.UnicodeRange_63744_64284_TextDirection_1 = new A.UnicodeRange(63744, 64284, C.TextDirection_1, type$.UnicodeRange_TextDirection);
    C.UnicodeRange_64285_65023_TextDirection_0 = new A.UnicodeRange(64285, 65023, C.TextDirection_0, type$.UnicodeRange_TextDirection);
    C.UnicodeRange_65024_65135_TextDirection_1 = new A.UnicodeRange(65024, 65135, C.TextDirection_1, type$.UnicodeRange_TextDirection);
    C.UnicodeRange_65136_65276_TextDirection_0 = new A.UnicodeRange(65136, 65276, C.TextDirection_0, type$.UnicodeRange_TextDirection);
    C.UnicodeRange_65277_65535_TextDirection_1 = new A.UnicodeRange(65277, 65535, C.TextDirection_1, type$.UnicodeRange_TextDirection);
    C.UnicodeRange_65_90_TextDirection_1 = new A.UnicodeRange(65, 90, C.TextDirection_1, type$.UnicodeRange_TextDirection);
    C.UnicodeRange_768_1424_TextDirection_1 = new A.UnicodeRange(768, 1424, C.TextDirection_1, type$.UnicodeRange_TextDirection);
    C.UnicodeRange_8206_8206_TextDirection_1 = new A.UnicodeRange(8206, 8206, C.TextDirection_1, type$.UnicodeRange_TextDirection);
    C.UnicodeRange_8207_8207_TextDirection_0 = new A.UnicodeRange(8207, 8207, C.TextDirection_0, type$.UnicodeRange_TextDirection);
    C.UnicodeRange_97_122_TextDirection_1 = new A.UnicodeRange(97, 122, C.TextDirection_1, type$.UnicodeRange_TextDirection);
    C.ViewFocusDirection_0 = new A.ViewFocusDirection(0, "undefined");
    C.ViewFocusDirection_1 = new A.ViewFocusDirection(1, "forward");
    C.ViewFocusDirection_2 = new A.ViewFocusDirection(2, "backward");
    C.ViewFocusState_0 = new A.ViewFocusState(0, "unfocused");
    C.ViewFocusState_1 = new A.ViewFocusState(1, "focused");
    C._CheckableKind_0 = new A._CheckableKind(0, "checkbox");
    C._CheckableKind_1 = new A._CheckableKind(1, "radio");
    C._CheckableKind_2 = new A._CheckableKind(2, "toggle");
    C._ComparisonResult_0 = new A._ComparisonResult(0, "inside");
    C._ComparisonResult_1 = new A._ComparisonResult(1, "higher");
    C._ComparisonResult_2 = new A._ComparisonResult(2, "lower");
    C._ElementLifecycle_00 = new A._ElementLifecycle(0, "initial");
    C._ElementLifecycle_10 = new A._ElementLifecycle(1, "active");
    C._ElementLifecycle_20 = new A._ElementLifecycle(2, "inactive");
    C._ElementLifecycle_3 = new A._ElementLifecycle(3, "defunct");
    C._FindBreakDirection_1_0_forward = new A._FindBreakDirection(1, 0, "forward");
    C._FindBreakDirection_m1_1_backward = new A._FindBreakDirection(-1, 1, "backward");
    C._FrameTimingInfo_0 = new A._FrameTimingInfo(0, "layerCacheCount");
    C._FrameTimingInfo_1 = new A._FrameTimingInfo(1, "layerCacheBytes");
    C._FrameTimingInfo_2 = new A._FrameTimingInfo(2, "pictureCacheCount");
    C._FrameTimingInfo_3 = new A._FrameTimingInfo(3, "pictureCacheBytes");
    C._LinearTextScaler_1 = new A._LinearTextScaler(1);
    C._MediaQueryAspect_11 = new A._MediaQueryAspect(11, "accessibleNavigation");
    C._MediaQueryAspect_13 = new A._MediaQueryAspect(13, "highContrast");
    C._MediaQueryAspect_16 = new A._MediaQueryAspect(16, "boldText");
    C._MediaQueryAspect_17 = new A._MediaQueryAspect(17, "navigationMode");
    C._MediaQueryAspect_18 = new A._MediaQueryAspect(18, "gestureSettings");
    C._MediaQueryAspect_2 = new A._MediaQueryAspect(2, "devicePixelRatio");
    C._MediaQueryAspect_4 = new A._MediaQueryAspect(4, "textScaler");
    C._MediaQueryAspect_5 = new A._MediaQueryAspect(5, "platformBrightness");
    C._MediaQueryAspect_6 = new A._MediaQueryAspect(6, "padding");
    C._NullWidget_null = new A._NullWidget(null);
    C._WordWrapParseMode_00 = new A._WordWrapParseMode(0, "inSpace");
    C._WordWrapParseMode_0 = new A._WordWrapParseMode0(0, "inSpace");
    C._WordWrapParseMode_10 = new A._WordWrapParseMode(1, "inWord");
    C._WordWrapParseMode_1 = new A._WordWrapParseMode0(1, "inWord");
    C._WordWrapParseMode_20 = new A._WordWrapParseMode(2, "atBreak");
    C._WordWrapParseMode_2 = new A._WordWrapParseMode0(2, "atBreak");
  })();
  (function staticFields() {
    $._cachedIsChrome110OrOlder = null;
    $._cachedWebGLVersion = null;
    $.__canvasKit = B._Cell$named("canvasKit");
    $.CanvasKitRenderer____instance = B._Cell$named("_instance");
    $.CanvasKitRenderer__programs = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, B.findType("Future<FragmentProgram>"));
    $.Surface__didWarnAboutWebGlInitializationFailure = false;
    $._testFonts = B._setArrayType(["FlutterTest", "Ahem"], type$.JSArray_String);
    $._configuration = null;
    $.debugCanvasCount = 0;
    $._fontChangeScheduled = false;
    $.frameReferences = B._setArrayType([], type$.JSArray_FrameReference_dynamic);
    $.FrameTimingRecorder__frameTimings = B._setArrayType([], type$.JSArray_FrameTiming);
    $.FrameTimingRecorder__currentFrameVsyncStart = 0;
    $.FrameTimingRecorder__currentFrameBuildStart = 0;
    $.SvgFilterBuilder__filterIdCounter = 0;
    $._clipIdCounter = 0;
    $._recycledCanvases = B._setArrayType([], B.findType("JSArray<BitmapCanvas>"));
    $.paintQueue = B._setArrayType([], type$.JSArray_PaintRequest);
    $.glRenderer = null;
    $.HtmlRenderer____instance = B._Cell$named("_instance");
    $.ResourceManager__instance = null;
    $.SurfaceSceneBuilder__didWarnAboutPerformanceOverlay = false;
    $.SurfaceSceneBuilder__lastFrameScene = null;
    $.VertexShaders__baseVertexShader = null;
    $.retainedSurfaces = B._setArrayType([], type$.JSArray_PersistedSurface);
    $._hotRestartListeners = B._setArrayType([], type$.JSArray_of_void_Function);
    $._assetManager = null;
    $.KeyboardBinding__instance = null;
    $.NotoFont__index = 0;
    $.scheduleFrameCallback = null;
    $._WheelEventListenerMixin__defaultScrollLineHeight = null;
    $._PointerDeviceState__pointerCount = 0;
    $.GlContext____programCache = B._Cell$named("_programCache");
    $.OffScreenCanvas__supported = null;
    $.SizedSpanRepresentation__resizeQueue = null;
    $.EngineSemantics__instance = null;
    $.SemanticsTextEditingStrategy__instance = null;
    $._lastContextFont = null;
    $.Spanometer__rulers = B.LinkedHashMap_LinkedHashMap$_empty(type$.TextHeightStyle, type$.TextHeightRuler);
    $._lineLookup = null;
    $._lastStart = -1;
    $._lastEnd = -1;
    $._lastText = "";
    $._lastCssFont = "";
    $._lastWidth = -1;
    $.formsOnTheDom = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.JavaScriptObject);
    $._ellipseFeatureDetected = null;
    $._nextViewId = 1;
    $._window = null;
    $.Primitives_timerFrequency = 0;
    $.Primitives_timerTicks = A._js_helper_Primitives_dateNow$closure();
    $._taskId = 1;
    $._eventNameToCount = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.int);
    $.Timeline__stack = B._setArrayType([], B.findType("JSArray<_SyncBlock?>"));
    $.Picture_onCreate = null;
    $.Picture_onDispose = null;
    $.Image_onCreate = null;
    $.Image_onDispose = null;
    $.FlutterErrorDetails_propertiesTransformers = B._setArrayType([], B.findType("JSArray<Iterable<DiagnosticsNode>(Iterable<DiagnosticsNode>)>"));
    $.FlutterError_onError = A.assertions_FlutterError_dumpErrorToConsole$closure();
    $.FlutterError__errorCount = 0;
    $.FlutterError__stackFilters = B._setArrayType([], B.findType("JSArray<StackFilter>"));
    $._debugPrintedCharacters = 0;
    $._debugPrintCompleter = null;
    $._debugPrintScheduled = false;
    $.GestureBinding__instance = null;
    $.PaintingBinding__instance = null;
    $.RendererBinding__instance = null;
    $.RenderBox__debugIntrinsicsDepth = 0;
    $.debugProfileLayoutsEnabled = false;
    $.debugProfilePaintsEnabled = false;
    $.SchedulerBinding__instance = null;
    $.SemanticsBinding__instance = null;
    $.CustomSemanticsAction__nextId = 0;
    $.CustomSemanticsAction__actions = B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.CustomSemanticsAction);
    $.CustomSemanticsAction__ids = B.LinkedHashMap_LinkedHashMap$_empty(type$.CustomSemanticsAction, type$.int);
    $.SemanticsNode__lastIdentifier = 0;
    $.ServicesBinding__instance = null;
    $.debugProfilePlatformChannels = false;
    $._profilePlatformChannelsIsRunning = false;
    $._profilePlatformChannelsStats = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$._PlatformChannelStats);
    $.WidgetsBinding__instance = null;
    $.debugProfileBuildsEnabled = false;
    $.debugProfileBuildsEnabledUserWidgets = false;
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal,
      _lazy = hunkHelpers.lazy;
    _lazyFinal($, "CanvasPool__runBuffer", "$get$CanvasPool__runBuffer", () => A.NativeFloat32List_NativeFloat32List(8));
    _lazyFinal($, "_clipOpIntersect", "$get$_clipOpIntersect", () => {
      var t1 = type$.JavaScriptObject;
      return B.getProperty(B.getProperty(A.canvasKit(), "ClipOp", t1), "Intersect", t1);
    });
    _lazyFinal($, "_skFontSlants", "$get$_skFontSlants", () => {
      var _s9_ = "FontSlant",
        t1 = type$.JavaScriptObject;
      return B._setArrayType([B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Upright", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Italic", t1)], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_skFontWeights", "$get$_skFontWeights", () => {
      var _s10_ = "FontWeight",
        t1 = type$.JavaScriptObject;
      return B._setArrayType([B.getProperty(B.getProperty(A.canvasKit(), _s10_, t1), "Thin", t1), B.getProperty(B.getProperty(A.canvasKit(), _s10_, t1), "ExtraLight", t1), B.getProperty(B.getProperty(A.canvasKit(), _s10_, t1), "Light", t1), B.getProperty(B.getProperty(A.canvasKit(), _s10_, t1), "Normal", t1), B.getProperty(B.getProperty(A.canvasKit(), _s10_, t1), "Medium", t1), B.getProperty(B.getProperty(A.canvasKit(), _s10_, t1), "SemiBold", t1), B.getProperty(B.getProperty(A.canvasKit(), _s10_, t1), "Bold", t1), B.getProperty(B.getProperty(A.canvasKit(), _s10_, t1), "ExtraBold", t1), B.getProperty(B.getProperty(A.canvasKit(), _s10_, t1), "ExtraBlack", t1)], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_skTextDirections", "$get$_skTextDirections", () => {
      var _s13_ = "TextDirection",
        t1 = type$.JavaScriptObject;
      return B._setArrayType([B.getProperty(B.getProperty(A.canvasKit(), _s13_, t1), "RTL", t1), B.getProperty(B.getProperty(A.canvasKit(), _s13_, t1), "LTR", t1)], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_skTextAligns", "$get$_skTextAligns", () => {
      var _s9_ = "TextAlign",
        t1 = type$.JavaScriptObject;
      return B._setArrayType([B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Left", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Right", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Center", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Justify", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Start", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "End", t1)], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_skTextHeightBehaviors", "$get$_skTextHeightBehaviors", () => {
      var _s18_ = "TextHeightBehavior",
        t1 = type$.JavaScriptObject;
      return B._setArrayType([B.getProperty(B.getProperty(A.canvasKit(), _s18_, t1), "All", t1), B.getProperty(B.getProperty(A.canvasKit(), _s18_, t1), "DisableFirstAscent", t1), B.getProperty(B.getProperty(A.canvasKit(), _s18_, t1), "DisableLastDescent", t1), B.getProperty(B.getProperty(A.canvasKit(), _s18_, t1), "DisableAll", t1)], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_skRectHeightStyles", "$get$_skRectHeightStyles", () => {
      var _s15_ = "RectHeightStyle",
        t1 = type$.JavaScriptObject;
      return B._setArrayType([B.getProperty(B.getProperty(A.canvasKit(), _s15_, t1), "Tight", t1), B.getProperty(B.getProperty(A.canvasKit(), _s15_, t1), "Max", t1), B.getProperty(B.getProperty(A.canvasKit(), _s15_, t1), "IncludeLineSpacingMiddle", t1), B.getProperty(B.getProperty(A.canvasKit(), _s15_, t1), "IncludeLineSpacingTop", t1), B.getProperty(B.getProperty(A.canvasKit(), _s15_, t1), "IncludeLineSpacingBottom", t1), B.getProperty(B.getProperty(A.canvasKit(), _s15_, t1), "Strut", t1)], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_skRectWidthStyles", "$get$_skRectWidthStyles", () => {
      var _s14_ = "RectWidthStyle",
        t1 = type$.JavaScriptObject;
      return B._setArrayType([B.getProperty(B.getProperty(A.canvasKit(), _s14_, t1), "Tight", t1), B.getProperty(B.getProperty(A.canvasKit(), _s14_, t1), "Max", t1)], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_skClipOps", "$get$_skClipOps", () => {
      var t1 = type$.JavaScriptObject;
      return B._setArrayType([B.getProperty(B.getProperty(A.canvasKit(), "ClipOp", t1), "Difference", t1), B.getProperty(B.getProperty(A.canvasKit(), "ClipOp", t1), "Intersect", t1)], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_skFillTypes", "$get$_skFillTypes", () => {
      var _s8_ = "FillType",
        t1 = type$.JavaScriptObject;
      return B._setArrayType([B.getProperty(B.getProperty(A.canvasKit(), _s8_, t1), "Winding", t1), B.getProperty(B.getProperty(A.canvasKit(), _s8_, t1), "EvenOdd", t1)], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_skPaintStyles", "$get$_skPaintStyles", () => {
      var _s10_ = "PaintStyle",
        t1 = type$.JavaScriptObject;
      return B._setArrayType([B.getProperty(B.getProperty(A.canvasKit(), _s10_, t1), "Fill", t1), B.getProperty(B.getProperty(A.canvasKit(), _s10_, t1), "Stroke", t1)], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_skBlendModes", "$get$_skBlendModes", () => {
      var _s9_ = "BlendMode",
        t1 = type$.JavaScriptObject;
      return B._setArrayType([B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Clear", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Src", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Dst", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "SrcOver", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "DstOver", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "SrcIn", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "DstIn", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "SrcOut", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "DstOut", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "SrcATop", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "DstATop", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Xor", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Plus", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Modulate", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Screen", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Overlay", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Darken", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Lighten", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "ColorDodge", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "ColorBurn", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "HardLight", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "SoftLight", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Difference", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Exclusion", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Multiply", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Hue", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Saturation", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Color", t1), B.getProperty(B.getProperty(A.canvasKit(), _s9_, t1), "Luminosity", t1)], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_skTileModes", "$get$_skTileModes", () => {
      var _s8_ = "TileMode",
        t1 = type$.JavaScriptObject;
      return B._setArrayType([B.getProperty(B.getProperty(A.canvasKit(), _s8_, t1), "Clamp", t1), B.getProperty(B.getProperty(A.canvasKit(), _s8_, t1), "Repeat", t1), B.getProperty(B.getProperty(A.canvasKit(), _s8_, t1), "Mirror", t1), B.getProperty(B.getProperty(A.canvasKit(), _s8_, t1), "Decal", t1)], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_kDefaultSkColorStops", "$get$_kDefaultSkColorStops", () => {
      var t1 = A.NativeFloat32List_NativeFloat32List(2),
        t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, 0, 0);
      t2.$indexSet(t1, 1, 1);
      return t1;
    });
    _lazyFinal($, "_sharedSkColor1", "$get$_sharedSkColor1", () => A.mallocFloat32List(4));
    _lazyFinal($, "_skTextDecorationStyles", "$get$_skTextDecorationStyles", () => {
      var _s15_ = "DecorationStyle",
        t1 = type$.JavaScriptObject;
      return B._setArrayType([B.getProperty(B.getProperty(A.canvasKit(), _s15_, t1), "Solid", t1), B.getProperty(B.getProperty(A.canvasKit(), _s15_, t1), "Double", t1), B.getProperty(B.getProperty(A.canvasKit(), _s15_, t1), "Dotted", t1), B.getProperty(B.getProperty(A.canvasKit(), _s15_, t1), "Dashed", t1), B.getProperty(B.getProperty(A.canvasKit(), _s15_, t1), "Wavy", t1)], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_skTextBaselines", "$get$_skTextBaselines", () => {
      var _s12_ = "TextBaseline",
        t1 = type$.JavaScriptObject;
      return B._setArrayType([B.getProperty(B.getProperty(A.canvasKit(), _s12_, t1), "Alphabetic", t1), B.getProperty(B.getProperty(A.canvasKit(), _s12_, t1), "Ideographic", t1)], type$.JSArray_JavaScriptObject);
    });
    _lazy($, "_robotoUrl", "$get$_robotoUrl", () => B.S(A.configuration().get$fontFallbackBaseUrl()) + "roboto/v20/KFOmCnqEu92Fr1Me5WZLCzYlKw.ttf");
    _lazy($, "_finalizationRegistry", "$get$_finalizationRegistry", () => {
      var t1 = type$.Object;
      return B._callConstructorUnchecked1(B._getPropertyTrustType(B._getPropertyTrustType(B.staticInteropGlobalContext(), "window", t1), "FinalizationRegistry", t1), B._functionToJS1(new A._finalizationRegistry_closure()), type$.JavaScriptObject);
    });
    _lazy($, "nativeMemoryFinalizationRegistry", "$get$nativeMemoryFinalizationRegistry", () => A.NativeMemoryFinalizationRegistry$());
    _lazyFinal($, "_ckRequiresClientICU", "$get$_ckRequiresClientICU", () => A.SkParagraphBuilderNamespaceExtension_RequiresClientICU(B.getProperty(A.canvasKit(), "ParagraphBuilder", type$.JavaScriptObject)));
    _lazyFinal($, "CkParagraphBuilder__defaultTextForeground", "$get$CkParagraphBuilder__defaultTextForeground", () => {
      var t1 = type$.Object;
      return A._callConstructorUnchecked0(B._getPropertyTrustType(B._getPropertyTrustType(B._getPropertyTrustType(B.staticInteropGlobalContext(), "window", t1), "flutterCanvasKit", t1), "Paint", t1), type$.JavaScriptObject);
    });
    _lazyFinal($, "CkParagraphBuilder__defaultTextBackground", "$get$CkParagraphBuilder__defaultTextBackground", () => {
      var t1 = type$.Object;
      t1 = A._callConstructorUnchecked0(B._getPropertyTrustType(B._getPropertyTrustType(B._getPropertyTrustType(B.staticInteropGlobalContext(), "window", t1), "flutterCanvasKit", t1), "Paint", t1), type$.JavaScriptObject);
      A.SkPaintExtension_setColorInt(t1, 0);
      return t1;
    });
    _lazyFinal($, "segmentationCache", "$get$segmentationCache", () => {
      var t1 = type$.String,
        t2 = B.findType("+breaks,graphemes,words(Uint32List,Uint32List,Uint32List)"),
        t3 = A.LruCache$(100000, t1, t2),
        t4 = A.LruCache$(10000, t1, t2);
      return new B._Record_3_large_medium_small(A.LruCache$(20, t1, t2), t4, t3);
    });
    _lazyFinal($, "_intlSegmenters", "$get$_intlSegmenters", () => B.LinkedHashMap_LinkedHashMap$_literal([C.IntlSegmenterGranularity_0, A.createIntlSegmenter("grapheme"), C.IntlSegmenterGranularity_1, A.createIntlSegmenter("word")], B.findType("IntlSegmenterGranularity"), type$.JavaScriptObject));
    _lazyFinal($, "_v8LineBreaker", "$get$_v8LineBreaker", () => A.createV8BreakIterator());
    _lazyFinal($, "EngineFlutterDisplay__instance", "$get$EngineFlutterDisplay__instance", () => {
      var t1 = type$.nullable_JavaScriptObject,
        t2 = B.getProperty(self.window, "screen", t1);
      t2 = t2 == null ? null : B.getProperty(t2, "width", type$.double);
      if (t2 == null)
        t2 = 0;
      t1 = B.getProperty(self.window, "screen", t1);
      t1 = t1 == null ? null : B.getProperty(t1, "height", type$.double);
      return A.EngineFlutterDisplay$(0, 60, A.Size$(t2, t1 == null ? 0 : t1));
    });
    _lazyFinal($, "_ttPolicy", "$get$_ttPolicy", () => {
      var t2,
        t1 = B.getProperty(self.window, "trustedTypes", type$.nullable_JavaScriptObject);
      t1.toString;
      t2 = type$.JavaScriptObject;
      return B._callMethodUnchecked2(t1, "createPolicy", B.StringToJSString_get_toJS("flutter-engine"), t2._as({createScriptURL: B._functionToJS1(new A._ttPolicy_closure())}), t2);
    });
    _lazy($, "browserSupportsFinalizationRegistry", "$get$browserSupportsFinalizationRegistry", () => self.window.FinalizationRegistry != null);
    _lazy($, "browserSupportsOffscreenCanvas", "$get$browserSupportsOffscreenCanvas", () => self.window.OffscreenCanvas != null);
    _lazyFinal($, "_fontChangeMessage", "$get$_fontChangeMessage", () => C.C_JSONMessageCodec.encodeMessage$1(B.LinkedHashMap_LinkedHashMap$_literal(["type", "fontsChange"], type$.String, type$.dynamic)));
    _lazy($, "FrameTimingRecorder__frameTimingsLastSubmitTime", "$get$FrameTimingRecorder__frameTimingsLastSubmitTime", () => A.FrameTimingRecorder__nowMicros());
    _lazyFinal($, "kSvgResourceHeader", "$get$kSvgResourceHeader", () => {
      var t1 = A.createSVGSVGElement();
      A.DomElementExtension_setAttribute(t1, "width", 0);
      A.DomElementExtension_setAttribute(t1, "height", 0);
      A.DomCSSStyleDeclarationExtension_set_position(B.getProperty(t1, "style", type$.JavaScriptObject), "absolute");
      return t1;
    });
    _lazyFinal($, "_PaintBounds__tempRectData", "$get$_PaintBounds__tempRectData", () => A.NativeFloat32List_NativeFloat32List(4));
    _lazy($, "_sharedCanvas", "$get$_sharedCanvas", () => A.SharedCanvas$());
    _lazyFinal($, "VertexShaders_vertexIndicesForRect", "$get$VertexShaders_vertexIndicesForRect", () => A.NativeUint16List_NativeUint16List$fromList(B._setArrayType([0, 1, 2, 2, 3, 0], type$.JSArray_int)));
    _lazyFinal($, "kPhysicalControlLeft", "$get$kPhysicalControlLeft", () => 458976);
    _lazyFinal($, "kPhysicalControlRight", "$get$kPhysicalControlRight", () => 458980);
    _lazyFinal($, "preventDefaultListener", "$get$preventDefaultListener", () => A.createDomEventListener(new A.preventDefaultListener_closure()));
    _lazy($, "HighContrastSupport_instance", "$get$HighContrastSupport_instance", () => A.HighContrastSupport$());
    _lazyFinal($, "EnginePlatformDispatcher__instance", "$get$EnginePlatformDispatcher__instance", () => A.EnginePlatformDispatcher$());
    _lazy($, "PlatformViewManager_instance", "$get$PlatformViewManager_instance", () => A.PlatformViewManager$());
    _lazy($, "PlatformViewMessageHandler_instance", "$get$PlatformViewMessageHandler_instance", () => A.PlatformViewMessageHandler$($.$get$PlatformViewManager_instance()));
    _lazyFinal($, "PointerBinding__defaultSafariWorkaround", "$get$PointerBinding__defaultSafariWorkaround", () => A.SafariPointerEventWorkaround$_());
    _lazyFinal($, "PointerBinding_clickDebouncer", "$get$PointerBinding_clickDebouncer", () => A.ClickDebouncer$());
    _lazyFinal($, "PointerDataConverter_globalPointerState", "$get$PointerDataConverter_globalPointerState", () => A._GlobalPointerState$());
    _lazyFinal($, "Instrumentation__instance", "$get$Instrumentation__instance", () => A.Instrumentation$_());
    _lazyFinal($, "_renderer", "$get$_renderer", () => A.Renderer_Renderer$_internal());
    _lazyFinal($, "HtmlFontCollection_notPunctuation", "$get$HtmlFontCollection_notPunctuation", () => B.RegExp_RegExp("[a-z0-9\\s]+", false, false));
    _lazyFinal($, "HtmlFontCollection_startWithDigit", "$get$HtmlFontCollection_startWithDigit", () => B.RegExp_RegExp("\\b\\d", true, false));
    _lazyFinal($, "textContext", "$get$textContext", () => A.DomCanvasElementExtension_get_context2D(A.createDomCanvasElement(0, 0)));
    _lazyFinal($, "Spanometer__rulerHost", "$get$Spanometer__rulerHost", () => A.RulerHost$());
    _lazyFinal($, "_textDirectionLookup", "$get$_textDirectionLookup", () => A.UnicodePropertyLookup$(B._setArrayType([C.UnicodeRange_65_90_TextDirection_1, C.UnicodeRange_97_122_TextDirection_1, C.UnicodeRange_192_214_TextDirection_1, C.UnicodeRange_216_246_TextDirection_1, C.UnicodeRange_248_696_TextDirection_1, C.UnicodeRange_768_1424_TextDirection_1, C.UnicodeRange_1425_1775_TextDirection_0, C.UnicodeRange_1786_2303_TextDirection_0, C.UnicodeRange_2304_8191_TextDirection_1, C.UnicodeRange_8206_8206_TextDirection_1, C.UnicodeRange_8207_8207_TextDirection_0, C.UnicodeRange_11264_55297_TextDirection_1, C.UnicodeRange_55298_55299_TextDirection_0, C.UnicodeRange_55300_55353_TextDirection_1, C.UnicodeRange_55354_55355_TextDirection_0, C.UnicodeRange_55356_56319_TextDirection_1, C.UnicodeRange_63744_64284_TextDirection_1, C.UnicodeRange_64285_65023_TextDirection_0, C.UnicodeRange_65024_65135_TextDirection_1, C.UnicodeRange_65136_65276_TextDirection_0, C.UnicodeRange_65277_65535_TextDirection_1], B.findType("JSArray<UnicodeRange<TextDirection>>")), null, type$.nullable_TextDirection));
    _lazy($, "wordLookup", "$get$wordLookup", () => A.UnicodePropertyLookup_UnicodePropertyLookup$fromPackedData("000a!E000b000cF000d!D000w!R000y!A0013!B0018!M001a!N001c001lO001m!L001n!M001t002iK002n!P002p003eK003p!F004q!K004t!I0051!K0053!L0056!K005c005yK0060006uK006w00k7K00ke00lbK00lc00ofG00og00okK00om00onK00oq00otK00ou!M00ov!K00p2!K00p3!L00p400p6K00p8!K00pa00ptK00pv00s5K00s700w1K00w300w9G00wa010vK010x011yK01210124K0126!K0127!L0128013cK013d!M013e!K013l014tG014v!G014x014yG01500151G0153!G015c0162C0167016aC016b!K016c!L016o016tI01700171M0174017eG017g!I017k018qK018r019bG019c019lO019n!O019o!M019q019rK019s!G019t01cjK01cl!K01cm01csG01ct!I01cv01d0G01d101d2K01d301d4G01d601d9G01da01dbK01dc01dlO01dm01doK01dr!K01e7!I01e8!K01e9!G01ea01f3K01f401fuG01fx01idK01ie01ioG01ip!K01j401jdO01je01kaK01kb01kjG01kk01klK01ko!M01kq!K01kt!G01kw01lhK01li01llG01lm!K01ln01lvG01lw!K01lx01lzG01m0!K01m101m5G01mo01ncK01nd01nfG01nk01nuK01pc01pwK01py01qfK01qr01r5G01r6!I01r701s3G01s401tlK01tm01toG01tp!K01tq01u7G01u8!K01u901ufG01ug01upK01uq01urG01uu01v3O01v501vkK01vl01vnG01vp01vwK01vz01w0K01w301woK01wq01wwK01wy!K01x201x5K01x8!G01x9!K01xa01xgG01xj01xkG01xn01xpG01xq!K01xz!G01y401y5K01y701y9K01ya01ybG01ye01ynO01yo01ypK01z0!K01z2!G01z501z7G01z901zeK01zj01zkK01zn0208K020a020gK020i020jK020l020mK020o020pK020s!G020u020yG02130214G02170219G021d!G021l021oK021q!K021y0227O02280229G022a022cK022d!G022p022rG022t0231K02330235K0237023sK023u0240K02420243K02450249K024c!G024d!K024e024lG024n024pG024r024tG024w!K025c025dK025e025fG025i025rO0261!K02620267G0269026bG026d026kK026n026oK026r027cK027e027kK027m027nK027p027tK027w!G027x!K027y0284G02870288G028b028dG028l028nG028s028tK028v028xK028y028zG0292029bO029d!K029u!G029v!K029x02a2K02a602a8K02aa02adK02ah02aiK02ak!K02am02anK02ar02asK02aw02ayK02b202bdK02bi02bmG02bq02bsG02bu02bxG02c0!K02c7!G02cm02cvO02dc02dgG02dh02doK02dq02dsK02du02egK02ei02exK02f1!K02f202f8G02fa02fcG02fe02fhG02fp02fqG02fs02fuK02g002g1K02g202g3G02g602gfO02gw!K02gx02gzG02h102h8K02ha02hcK02he02i0K02i202ibK02id02ihK02ik!G02il!K02im02isG02iu02iwG02iy02j1G02j902jaG02ji!K02jk02jlK02jm02jnG02jq02jzO02k102k2K02kg02kjG02kk02ksK02ku02kwK02ky02m2K02m302m4G02m5!K02m602mcG02me02mgG02mi02mlG02mm!K02ms02muK02mv!G02n302n5K02n602n7G02na02njO02nu02nzK02o102o3G02o502omK02oq02pdK02pf02pnK02pp!K02ps02pyK02q2!G02q702qcG02qe!G02qg02qnG02qu02r3O02r602r7G02sx!G02t002t6G02tj02tqG02ts02u1O02wh!G02wk02wsG02x402x9G02xc02xlO02yo!K02zc02zdG02zk02ztO0305!G0307!G0309!G030e030fG030g030nK030p031oK031t032cG032e032fG032g032kK032l032vG032x033wG0346!G036z037iG037k037tO03860389G038e038gG038i038kG038n038tG038x0390G039e039pG039r!G039s03a1O03a203a5G03a803b9K03bb!K03bh!K03bk03cqK03cs03m0K03m203m5K03m803meK03mg!K03mi03mlK03mo03nsK03nu03nxK03o003owK03oy03p1K03p403paK03pc!K03pe03phK03pk03pyK03q003rkK03rm03rpK03rs03tmK03tp03trG03uo03v3K03vk03xxK03y003y5K03y904fgK04fj04fzK04g0!R04g104gqK04gw04iyK04j204jcK04jk04jwK04jy04k1K04k204k4G04kg04kxK04ky04l0G04lc04ltK04lu04lvG04m804mkK04mm04moK04mq04mrG04ok04pfG04pp!G04ps04q1O04qz04r1G04r2!I04r404rdO04rk04u0K04u804ucK04ud04ueG04uf04vcK04vd!G04ve!K04vk04xhK04xs04ymK04yo04yzG04z404zfG04zq04zzO053k053tO054w055iK055j055nG0579057iG057k058cG058f!G058g058pO058w0595O059s05a8G05c005c4G05c505dfK05dg05dwG05dx05e3K05e805ehO05ez05f7G05fk05fmG05fn05ggK05gh05gtG05gu05gvK05gw05h5O05h605idK05ie05irG05j405k3K05k405knG05kw05l5O05l905lbK05lc05llO05lm05mlK05mo05mwK05n405oaK05od05ofK05ow05oyG05p005pkG05pl05poK05pp!G05pq05pvK05pw!G05px05pyK05pz05q1G05q2!K05q805vjK05vk05x5G05x705xbG05xc0651K06540659K065c066dK066g066lK066o066vK066x!K066z!K0671!K0673067xK0680069gK069i069oK069q!K069u069wK069y06a4K06a806abK06ae06ajK06ao06b0K06b606b8K06ba06bgK06bk06bqR06bs06buR06bw!G06bx!Q06by06bzI06c806c9N06ck!N06cn!L06co06cpF06cq06cuI06cv!P06db06dcP06dg!M06dw!P06e7!R06e806ecI06ee06enI06ep!K06f3!K06fk06fwK06hc06i8G06iq!K06iv!K06iy06j7K06j9!K06jd06jhK06jo!K06jq!K06js!K06ju06jxK06jz06k9K06kc06kfK06kl06kpK06ku!K06lc06mgK079207ahK08ow08q6K08q808riK08rk08v8K08vf08viK08vj08vlG08vm08vnK08w008x1K08x3!K08x9!K08xc08yvK08z3!K08zj!G08zk0906K090g090mK090o090uK090w0912K0914091aK091c091iK091k091qK091s091yK09200926K09280933G094f!K09hc!R09hh!K09ii09inG09ip09itJ09iz09j0K09ll09lmG09ln09loJ09ls09oaJ09oc09ofJ09ol09prK09pt09seK09sw09trK09v409vjJ0a1c0a2mJ0a2o0a53J0vls0wi4K0wk00wl9K0wlc0wssK0wsw0wtbK0wtc0wtlO0wtm0wtnK0wu80wviK0wvj0wvmG0wvo0wvxG0wvz0wwtK0wwu0wwvG0www0wz3K0wz40wz5G0wzs0x4vK0x4y0x56K0x6d0x6pK0x6q!G0x6r0x6tK0x6u!G0x6v0x6yK0x6z!G0x700x7mK0x7n0x7rG0x7w!G0x8g0x9vK0xa80xa9G0xaa0xbnK0xbo0xc5G0xcg0xcpO0xcw0xddG0xde0xdjK0xdn!K0xdp0xdqK0xdr!G0xds0xe1O0xe20xetK0xeu0xf1G0xf40xfqK0xfr0xg3G0xgg0xh8K0xhc0xhfG0xhg0xiqK0xir0xj4G0xjj!K0xjk0xjtO0xk5!G0xkg0xkpO0xkw0xm0K0xm10xmeG0xmo0xmqK0xmr!G0xms0xmzK0xn00xn1G0xn40xndO0xob0xodG0xps!G0xpu0xpwG0xpz0xq0G0xq60xq7G0xq9!G0xr40xreK0xrf0xrjG0xrm0xroK0xrp0xrqG0xs10xs6K0xs90xseK0xsh0xsmK0xsw0xt2K0xt40xtaK0xtc0xuxK0xv40xyaK0xyb0xyiG0xyk0xylG0xyo0xyxO0xz416lfK16ls16meK16mj16nvK1dkw1dl2K1dlf1dljK1dlp!C1dlq!G1dlr1dm0C1dm21dmeC1dmg1dmkC1dmm!C1dmo1dmpC1dmr1dmsC1dmu1dn3C1dn41dptK1dqr1e0tK1e1c1e33K1e361e4nK1e5s1e63K1e681e6nG1e6o!M1e6r!L1e6s!M1e741e7jG1e7n1e7oP1e8d1e8fP1e8g!M1e8i!N1e8k!M1e8l!L1e9c1e9gK1e9i1ed8K1edb!I1edj!N1edo!M1edq!N1eds1ee1O1ee2!L1ee3!M1ee91eeyK1ef3!P1ef51efuK1eg61ehpJ1ehq1ehrG1ehs1eimK1eiq1eivK1eiy1ej3K1ej61ejbK1eje1ejgK1ek91ekbI1ekg1ekrK1ekt1eliK1elk1em2K1em41em5K1em71emlK1emo1en1K1eo01ereK1etc1eusK1eyl!G1f281f30K1f341f4gK1f4w!G1f5s1f6nK1f711f7uK1f801f91K1f921f96G1f9c1fa5K1fa81fb7K1fbc1fbjK1fbl1fbpK1fcw1fh9K1fhc1fhlO1fhs1firK1fiw1fjvK1fk01fl3K1flc1fmrK1fr41fzqK1g001g0lK1g0w1g13K1g5c1g5hK1g5k!K1g5m1g6tK1g6v1g6wK1g70!K1g731g7pK1g801g8mK1g8w1g9qK1gbk1gc2K1gc41gc5K1gcg1gd1K1gdc1ge1K1gg01ghjK1ghq1ghrK1gjk!K1gjl1gjnG1gjp1gjqG1gjw1gjzG1gk01gk3K1gk51gk7K1gk91gl1K1gl41gl6G1glb!G1gm81gn0K1gn41gnwK1gow1gp3K1gp51gpwK1gpx1gpyG1gqo1gs5K1gsg1gt1K1gtc1gtuK1gu81gupK1gxs1gzsK1h1c1h2qK1h341h4iK1h4w1h5vK1h5w1h5zG1h681h6hO1hfk1hgpK1hgr1hgsG1hgw1hgxK1hj41hjwK1hk7!K1hkg1hl1K1hl21hlcG1ho01hokK1hpc1hpyK1hq81hqaG1hqb1hrrK1hrs1hs6G1ht21htbO1htr1htuG1htv1hv3K1hv41hveG1hvh!I1hvx!I1hw01hwoK1hww1hx5O1hxc1hxeG1hxf1hyeK1hyf1hysG1hyu1hz3O1hz8!K1hz91hzaG1hzb!K1hzk1i0iK1i0j!G1i0m!K1i0w1i0yG1i0z1i2aK1i2b1i2oG1i2p1i2sK1i2x1i30G1i321i33G1i341i3dO1i3e!K1i3g!K1i4g1i4xK1i4z1i5nK1i5o1i5zG1i66!G1i801i86K1i88!K1i8a1i8dK1i8f1i8tK1i8v1i94K1i9c1iamK1ian1iayG1ib41ibdO1ibk1ibnG1ibp1ibwK1ibz1ic0K1ic31icoK1icq1icwK1icy1iczK1id11id5K1id71id8G1id9!K1ida1idgG1idj1idkG1idn1idpG1ids!K1idz!G1ie51ie9K1iea1iebG1iee1iekG1ieo1iesG1iio1ik4K1ik51ikmG1ikn1ikqK1ikw1il5O1ila!G1ilb1ildK1im81injK1ink1io3G1io41io5K1io7!K1iog1iopO1itc1iumK1iun1iutG1iuw1iv4G1ivs1ivvK1ivw1ivxG1iww1iy7K1iy81iyoG1iys!K1iz41izdO1j0g1j1mK1j1n1j1zG1j20!K1j281j2hO1j4t1j57G1j5c1j5lO1jb41jcbK1jcc1jcqG1jfk1jhbK1jhc1jhlO1ji71jieK1jih!K1jik1jirK1jit1jiuK1jiw1jjjK1jjk1jjpG1jjr1jjsG1jjv1jjyG1jjz!K1jk0!G1jk1!K1jk21jk3G1jkg1jkpO1jmo1jmvK1jmy1jo0K1jo11jo7G1joa1jogG1joh!K1joj!K1jok!G1jpc!K1jpd1jpmG1jpn1jqqK1jqr1jqxG1jqy!K1jqz1jr2G1jrb!G1jrk!K1jrl1jrvG1jrw1jt5K1jt61jtlG1jtp!K1juo1jw8K1k3k1k3sK1k3u1k4uK1k4v1k52G1k541k5bG1k5c!K1k5s1k61O1k6q1k7jK1k7m1k87G1k891k8mG1kao1kauK1kaw1kaxK1kaz1kc0K1kc11kc6G1kca!G1kcc1kcdG1kcf1kclG1kcm!K1kcn!G1kcw1kd5O1kdc1kdhK1kdj1kdkK1kdm1kehK1kei1kemG1keo1kepG1ker1kevG1kew!K1kf41kfdO1ko01koiK1koj1komG1kts!K1kw01lllK1log1lriK1ls01lxfK1o1s1oviK1ovk1ovsI1s001sg6K1z401zjsK1zk01zkuK1zkw1zl5O1zo01zotK1zow1zp0G1zpc1zqnK1zqo1zquG1zr41zr7K1zrk1zrtO1zs31zsnK1zst1ztbK20cg20e7K20hs20juK20jz!G20k0!K20k120ljG20lr20luG20lv20m7K20o020o1K20o3!K20o4!G20og20ohG2dc0!J2dlw2dlzJ2fpc2fsaK2fsg2fssK2fsw2ft4K2ftc2ftlK2ftp2ftqG2fts2ftvI2jxh2jxlG2jxp2jxuG2jxv2jy2I2jy32jyaG2jyd2jyjG2jze2jzhG2k3m2k3oG2kg02kicK2kie2kkcK2kke2kkfK2kki!K2kkl2kkmK2kkp2kksK2kku2kl5K2kl7!K2kl92klfK2klh2kn9K2knb2kneK2knh2knoK2knq2knwK2kny2kopK2kor2kouK2kow2kp0K2kp2!K2kp62kpcK2kpe2kytK2kyw2kzkK2kzm2l0aK2l0c2l16K2l182l1wK2l1y2l2sK2l2u2l3iK2l3k2l4eK2l4g2l54K2l562l60K2l622l6qK2l6s2l6zK2l722l8fO2lmo2lo6G2lob2lpoG2lpx!G2lqc!G2lqz2lr3G2lr52lrjG2mtc2mtiG2mtk2mu0G2mu32mu9G2mub2mucG2mue2muiG2n0g2n1oK2n1s2n1yG2n1z2n25K2n282n2hO2n2m!K2ncw2ne3K2ne42ne7G2ne82nehO2oe82ojoK2ok02ok6G2olc2on7K2on82oneG2onf!K2onk2ontO2pkw2pkzK2pl12plrK2plt2pluK2plw!K2plz!K2pm12pmaK2pmc2pmfK2pmh!K2pmj!K2pmq!K2pmv!K2pmx!K2pmz!K2pn12pn3K2pn52pn6K2pn8!K2pnb!K2pnd!K2pnf!K2pnh!K2pnj!K2pnl2pnmK2pno!K2pnr2pnuK2pnw2po2K2po42po7K2po92pocK2poe!K2pog2popK2por2pp7K2ppd2ppfK2pph2pplK2ppn2pq3K2q7k2q89K2q8g2q95K2q9c2qa1K2qcm2qdbH2qrf2qrjG2sc02sc9Ojny9!Ijnz4jo1rGjo5cjobzG", 231, C.List_f0x, C.WordCharProperty_18, B.findType("WordCharProperty")));
    _lazyFinal($, "BrowserAutofillHints__singletonInstance", "$get$BrowserAutofillHints__singletonInstance", () => A.BrowserAutofillHints$_());
    _lazyFinal($, "textEditing", "$get$textEditing", () => A.HybridTextEditing$());
    _lazyFinal($, "_tempRectData", "$get$_tempRectData", () => A.NativeFloat32List_NativeFloat32List(4));
    _lazyFinal($, "_tempPointData", "$get$_tempPointData", () => A.NativeFloat32List_NativeFloat32List(16));
    _lazyFinal($, "_tempPointMatrix", "$get$_tempPointMatrix", () => A.Matrix4$fromFloat32List($.$get$_tempPointData()));
    _lazy($, "printWarning", "$get$printWarning", () => A.DomConsoleExtension_get_warn(B.getProperty(self.window, "console", type$.JavaScriptObject)));
    _lazy($, "DisplayDprStream_instance", "$get$DisplayDprStream_instance", () => A.DisplayDprStream$(A.EngineFlutterDisplay_instance()));
    _lazyFinal($, "_hotRestartCache", "$get$_hotRestartCache", () => new A._hotRestartCache_closure().call$0());
    _lazyFinal($, "nullFuture", "$get$nullFuture", () => D.C__RootZone.run$1$1(new A.nullFuture_closure(), B.findType("Future<Null>")));
    _lazyFinal($, "Future__nullFuture", "$get$Future__nullFuture", () => B.findType("_Future<Null>")._as($.$get$nullFuture()));
    _lazyFinal($, "_Base64Decoder__inverseAlphabet", "$get$_Base64Decoder__inverseAlphabet", () => A.NativeInt8List_NativeInt8List$fromList(B._setArrayType([-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, 62, -2, 62, -2, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -2, -2, -2, -1, -2, -2, -2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -2, -2, -2, -2, 63, -2, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -2, -2, -2, -2, -2], type$.JSArray_int)));
    _lazy($, "_Base64Decoder__emptyBuffer", "$get$_Base64Decoder__emptyBuffer", () => B.NativeUint8List_NativeUint8List(0));
    _lazyFinal($, "_Uri__needsNoEncoding", "$get$_Uri__needsNoEncoding", () => B.RegExp_RegExp("^[\\-\\.0-9A-Z_a-z~]*$", true, false));
    _lazyFinal($, "_Uri__useURLSearchParams", "$get$_Uri__useURLSearchParams", () => typeof URLSearchParams == "function");
    _lazyFinal($, "Stopwatch__frequency", "$get$Stopwatch__frequency", () => A.Stopwatch__initTicker());
    _lazyFinal($, "_scannerTables", "$get$_scannerTables", () => A._createTables());
    _lazy($, "_performance", "$get$_performance", () => new A._performance_closure().call$0());
    _lazy($, "_json", "$get$_json", () => new A._json_closure().call$0());
    _lazyFinal($, "Endian_host", "$get$Endian_host", () => B.boolConversionCheck(J.$eq$(J.getInt8$1$x(A.ByteData_ByteData$view(J.get$buffer$x(A.NativeUint16List_NativeUint16List$fromList(B._setArrayType([1], type$.JSArray_int)))), 0), 1)) ? D.C_Endian : D.C_Endian0);
    _lazyFinal($, "channelBuffers", "$get$channelBuffers", () => A.ChannelBuffers$());
    _lazyFinal($, "BrowserDetection_instance", "$get$BrowserDetection_instance", () => A.BrowserDetection$_());
    _lazy($, "browser", "$get$browser", () => $.$get$BrowserDetection_instance());
    _lazyFinal($, "_browserPlatform", "$get$_browserPlatform", () => A._operatingSystemToTargetPlatform($.$get$browser().get$operatingSystem()));
    _lazyFinal($, "ChangeNotifier__emptyListeners", "$get$ChangeNotifier__emptyListeners", () => B.List_List$filled(0, null, false, type$.nullable_void_Function));
    _lazyFinal($, "sparseTextConfiguration", "$get$sparseTextConfiguration", () => A.TextTreeConfiguration$(true, "", ":", "", "", "", "", "", true, false, "\n", true, "\u2502", "", "\u2514\u2500", "\u251c\u2500", " ", " ", "\u2502 ", "  ", "", true, ""));
    _lazyFinal($, "dashedTextConfiguration", "$get$dashedTextConfiguration", () => A.TextTreeConfiguration$(true, "", ":", "", "", "", "", "", true, false, "\n", true, "\u254e", "", "\u2514\u254c", "\u254e\u254c", " ", " ", "\u2502 ", "  ", "", true, ""));
    _lazyFinal($, "denseTextConfiguration", "$get$denseTextConfiguration", () => A.TextTreeConfiguration$(false, "", ":", ")", "", "(", "", "", false, false, "\n", false, "\u2502", "", "\u2514", "\u251c", "", "", "\u2502", " ", ", ", true, ""));
    _lazyFinal($, "transitionTextConfiguration", "$get$transitionTextConfiguration", () => A.TextTreeConfiguration$(false, ":", " \u2550\u2550\u2550", "", "", "", "  ", " \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550", false, true, "\n", true, "\u2502", "", "\u2558\u2550\u2566\u2550\u2550 ", "\u255e\u2550\u2566\u2550\u2550 ", " \u2551 ", "", "", "", "", true, ""));
    _lazyFinal($, "errorTextConfiguration", "$get$errorTextConfiguration", () => A.TextTreeConfiguration$(false, "", ":", "", "\u2550\u2550\u2561 ", "", "", " \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550", false, false, "\n", true, "\u2502", "\u2550\u2550\u2550\u2550\u2550", "\u2558\u2550\u2566", "\u255e\u2550\u2566", " \u2551 ", "", "", "", "", true, " \u255e\u2550\u2550"));
    _lazyFinal($, "whitespaceTextConfiguration", "$get$whitespaceTextConfiguration", () => A.TextTreeConfiguration$(false, ":", ":", "", "", "", "", "", false, false, "\n", true, " ", "", "", "", " ", "  ", "", "", "", true, ""));
    _lazyFinal($, "flatTextConfiguration", "$get$flatTextConfiguration", () => A.TextTreeConfiguration$(false, ":", ":", "", "", "", "", "", false, false, "\n", true, "", "", "", "", "", "", "", "", "", true, ""));
    _lazyFinal($, "singleLineTextConfiguration", "$get$singleLineTextConfiguration", () => A.TextTreeConfiguration$(false, "", ":", ")", "", "(", "", "", true, false, "", false, "", "", "", "", "", "", "  ", "  ", ", ", false, ""));
    _lazyFinal($, "errorPropertyTextConfiguration", "$get$errorPropertyTextConfiguration", () => A.TextTreeConfiguration$(false, "", ":", ")", "", "(", "", "", true, true, "\n", false, "", "", "", "", "", "", "  ", "  ", ", ", false, ""));
    _lazyFinal($, "shallowTextConfiguration", "$get$shallowTextConfiguration", () => A.TextTreeConfiguration$(false, ":", ":", "", "", "", "", "", false, false, "\n", true, " ", "", "", "", " ", "  ", "", "", "", false, ""));
    _lazyFinal($, "FlutterMemoryAllocations_instance", "$get$FlutterMemoryAllocations_instance", () => A.FlutterMemoryAllocations$_());
    _lazyFinal($, "_CompressedNode_empty", "$get$_CompressedNode_empty", () => A._CompressedNode$_empty());
    _lazyFinal($, "_CompressedNode__emptyArray", "$get$_CompressedNode__emptyArray", () => A._makeArray(0));
    _lazyFinal($, "_debugPrintBuffer", "$get$_debugPrintBuffer", () => A.ListQueue$(null, type$.String));
    _lazyFinal($, "_debugPrintStopwatch", "$get$_debugPrintStopwatch", () => A.Stopwatch$());
    _lazyFinal($, "_indentPattern", "$get$_indentPattern", () => B.RegExp_RegExp("^ *(?:[-+*] |[0-9]+[.):] )?", true, false));
    _lazyFinal($, "WriteBuffer__zeroBuffer", "$get$WriteBuffer__zeroBuffer", () => B.NativeUint8List_NativeUint8List(8));
    _lazyFinal($, "MatrixUtils__minMax", "$get$MatrixUtils__minMax", () => A.NativeFloat64List_NativeFloat64List(4));
    _lazy($, "RenderErrorBox_backgroundColor", "$get$RenderErrorBox_backgroundColor", () => A.RenderErrorBox__initBackgroundColor());
    _lazy($, "RenderErrorBox_textStyle", "$get$RenderErrorBox_textStyle", () => A.RenderErrorBox__initTextStyle());
    _lazy($, "RenderErrorBox_paragraphStyle", "$get$RenderErrorBox_paragraphStyle", () => {
      var _null = null;
      return A.ParagraphStyle_ParagraphStyle(_null, _null, _null, _null, _null, _null, _null, _null, _null, C.TextAlign_0, C.TextDirection_1, _null);
    });
    _lazyFinal($, "_SemanticsGeometry__temporaryTransformHolder", "$get$_SemanticsGeometry__temporaryTransformHolder", () => A.Matrix4$zero());
    _lazyFinal($, "_kUnblockedUserActions", "$get$_kUnblockedUserActions", () => 98304);
    _lazyFinal($, "SemanticsNode__kEmptyConfig", "$get$SemanticsNode__kEmptyConfig", () => A.SemanticsConfiguration$());
    _lazyFinal($, "SemanticsNode__kEmptyChildList", "$get$SemanticsNode__kEmptyChildList", () => A.NativeInt32List_NativeInt32List(0));
    _lazyFinal($, "SemanticsNode__kEmptyCustomSemanticsActionsList", "$get$SemanticsNode__kEmptyCustomSemanticsActionsList", () => A.NativeInt32List_NativeInt32List(0));
    _lazyFinal($, "SemanticsNode__kIdentityTransform", "$get$SemanticsNode__kIdentityTransform", () => A.SemanticsNode__initIdentityTransform());
    _lazyFinal($, "rootBundle", "$get$rootBundle", () => A._initRootBundle());
    _lazyFinal($, "_profiledBinaryMessengers", "$get$_profiledBinaryMessengers", () => A.Expando$(B.findType("BinaryMessenger")));
    _lazy($, "_NullElement_instance", "$get$_NullElement_instance", () => A._NullElement$());
  })();
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.clients.dart.js_2", e: "endPart", h: h});
})($__dart_deferred_initializers__, "0LOIQEZ0jHTmp0ptJLutJ4GdZZ0=");
;
//# sourceMappingURL=main.clients.dart.js_2.part.js.map
