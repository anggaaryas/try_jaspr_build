// Generated by dart2js (NullSafetyMode.sound, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.5.3.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "home.client.dart.js_1", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var J = {
    JSArray_JSArray$allocateFixed($length, $E) {
      if ($length < 0 || $length > 4294967295)
        throw B.wrapException(B.RangeError$range($length, 0, 4294967295, "length", null));
      return J.JSArray_JSArray$markFixed(new Array($length), $E);
    },
    getInterceptor$(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumNotInt.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof B.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ansx(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof B.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof B.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax(receiver) {
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof B.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$bn(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (receiver == null)
        return receiver;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (!(receiver instanceof B.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$i(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumNotInt.prototype;
      }
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof B.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$in(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumNotInt.prototype;
      }
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof B.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$n(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof B.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$ns(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof B.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$s(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof B.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$x(receiver) {
      if (receiver == null)
        return receiver;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof B.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$z(receiver) {
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof B.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    set$length$asx(receiver, value) {
      return J.getInterceptor$asx(receiver).set$length(receiver, value);
    },
    get$add$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$add(receiver);
    },
    get$buffer$x(receiver) {
      return J.getInterceptor$x(receiver).get$buffer(receiver);
    },
    get$codeUnits$s(receiver) {
      return J.getInterceptor$s(receiver).get$codeUnits(receiver);
    },
    get$elementSizeInBytes$x(receiver) {
      return J.getInterceptor$x(receiver).get$elementSizeInBytes(receiver);
    },
    get$first$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$first(receiver);
    },
    get$hashCode$(receiver) {
      return J.getInterceptor$(receiver).get$hashCode(receiver);
    },
    get$isEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
    },
    get$isFinite$n(receiver) {
      return J.getInterceptor$n(receiver).get$isFinite(receiver);
    },
    get$isNaN$n(receiver) {
      return J.getInterceptor$n(receiver).get$isNaN(receiver);
    },
    get$isNotEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
    },
    get$iterator$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$last$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$last(receiver);
    },
    get$length$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    get$lengthInBytes$x(receiver) {
      return J.getInterceptor$x(receiver).get$lengthInBytes(receiver);
    },
    get$remove$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$remove(receiver);
    },
    get$reversed$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$reversed(receiver);
    },
    get$runtimeType$(receiver) {
      return J.getInterceptor$(receiver).get$runtimeType(receiver);
    },
    get$sign$in(receiver) {
      if (typeof receiver === "number")
        return receiver > 0 ? 1 : receiver < 0 ? -1 : receiver;
      return J.getInterceptor$in(receiver).get$sign(receiver);
    },
    get$single$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$single(receiver);
    },
    $add$ansx(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver + a0;
      return J.getInterceptor$ansx(receiver).$add(receiver, a0);
    },
    $div$n(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver / a0;
      return J.getInterceptor$n(receiver).$div(receiver, a0);
    },
    $eq$(receiver, a0) {
      if (receiver == null)
        return a0 == null;
      if (typeof receiver != "object")
        return a0 != null && receiver === a0;
      return J.getInterceptor$(receiver).$eq(receiver, a0);
    },
    $ge$n(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver >= a0;
      return J.getInterceptor$n(receiver).$ge(receiver, a0);
    },
    $gt$n(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver > a0;
      return J.getInterceptor$n(receiver).$gt(receiver, a0);
    },
    $index$asx(receiver, a0) {
      if (typeof a0 === "number")
        if (Array.isArray(receiver) || typeof receiver == "string" || B.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
          if (a0 >>> 0 === a0 && a0 < receiver.length)
            return receiver[a0];
      return J.getInterceptor$asx(receiver).$index(receiver, a0);
    },
    $indexSet$ax(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
    },
    $le$n(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver <= a0;
      return J.getInterceptor$n(receiver).$le(receiver, a0);
    },
    $mul$ns(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver * a0;
      return J.getInterceptor$ns(receiver).$mul(receiver, a0);
    },
    $negate$in(receiver) {
      if (typeof receiver == "number")
        return -receiver;
      return J.getInterceptor$in(receiver).$negate(receiver);
    },
    $not$i(receiver) {
      if (typeof receiver == "number" && Math.floor(receiver) == receiver)
        return ~receiver >>> 0;
      return J.getInterceptor$i(receiver).$not(receiver);
    },
    $or$bn(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return (receiver | a0) >>> 0;
      return J.getInterceptor$bn(receiver).$or(receiver, a0);
    },
    $sub$n(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver - a0;
      return J.getInterceptor$n(receiver).$sub(receiver, a0);
    },
    abs$0$in(receiver) {
      if (typeof receiver === "number")
        return Math.abs(receiver);
      return J.getInterceptor$in(receiver).abs$0(receiver);
    },
    add$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).add$1(receiver, a0);
    },
    add$2$ax(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).add$2(receiver, a0, a1);
    },
    addAll$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).addAll$1(receiver, a0);
    },
    addAll$3$ax(receiver, a0, a1, a2) {
      return J.getInterceptor$ax(receiver).addAll$3(receiver, a0, a1, a2);
    },
    allMatches$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).allMatches$1(receiver, a0);
    },
    allMatches$2$s(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).allMatches$2(receiver, a0, a1);
    },
    any$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).any$1(receiver, a0);
    },
    asByteData$0$x(receiver) {
      return J.getInterceptor$x(receiver).asByteData$0(receiver);
    },
    asByteData$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).asByteData$2(receiver, a0, a1);
    },
    asFloat32List$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).asFloat32List$2(receiver, a0, a1);
    },
    asFloat64List$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).asFloat64List$2(receiver, a0, a1);
    },
    asInt32List$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).asInt32List$2(receiver, a0, a1);
    },
    asInt64List$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).asInt64List$2(receiver, a0, a1);
    },
    asUint8List$0$x(receiver) {
      return J.getInterceptor$x(receiver).asUint8List$0(receiver);
    },
    asUint8List$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).asUint8List$2(receiver, a0, a1);
    },
    cast$1$0$ax(receiver, $T1) {
      return J.getInterceptor$ax(receiver).cast$1$0(receiver, $T1);
    },
    cast$2$0$ax(receiver, $T1, $T2) {
      return J.getInterceptor$ax(receiver).cast$2$0(receiver, $T1, $T2);
    },
    ceil$0$n(receiver) {
      return J.getInterceptor$n(receiver).ceil$0(receiver);
    },
    ceilToDouble$0$n(receiver) {
      return J.getInterceptor$n(receiver).ceilToDouble$0(receiver);
    },
    clamp$1$minimum$n(receiver, a0) {
      return J.getInterceptor$n(receiver).clamp$1$minimum(receiver, a0);
    },
    clamp$2$n(receiver, a0, a1) {
      return J.getInterceptor$n(receiver).clamp$2(receiver, a0, a1);
    },
    clear$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).clear$0(receiver);
    },
    codeUnitAt$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).codeUnitAt$1(receiver, a0);
    },
    compareTo$1$ns(receiver, a0) {
      return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
    },
    contains$1$asx(receiver, a0) {
      return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
    },
    elementAt$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    every$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).every$1(receiver, a0);
    },
    expand$1$1$ax(receiver, a0, $T1) {
      return J.getInterceptor$ax(receiver).expand$1$1(receiver, a0, $T1);
    },
    fillRange$3$x(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).fillRange$3(receiver, a0, a1, a2);
    },
    firstWhere$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).firstWhere$1(receiver, a0);
    },
    firstWhere$2$orElse$ax(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).firstWhere$2$orElse(receiver, a0, a1);
    },
    floor$0$n(receiver) {
      return J.getInterceptor$n(receiver).floor$0(receiver);
    },
    floorToDouble$0$n(receiver) {
      return J.getInterceptor$n(receiver).floorToDouble$0(receiver);
    },
    fold$1$2$ax(receiver, a0, a1, $T1) {
      return J.getInterceptor$ax(receiver).fold$1$2(receiver, a0, a1, $T1);
    },
    followedBy$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).followedBy$1(receiver, a0);
    },
    forEach$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
    },
    getFloat64$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).getFloat64$2(receiver, a0, a1);
    },
    getInt32$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).getInt32$2(receiver, a0, a1);
    },
    getInt64$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).getInt64$2(receiver, a0, a1);
    },
    getInt8$1$x(receiver, a0) {
      return J.getInterceptor$x(receiver).getInt8$1(receiver, a0);
    },
    getRange$2$ax(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).getRange$2(receiver, a0, a1);
    },
    getUint16$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).getUint16$2(receiver, a0, a1);
    },
    getUint32$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).getUint32$2(receiver, a0, a1);
    },
    getUint8$1$x(receiver, a0) {
      return J.getInterceptor$x(receiver).getUint8$1(receiver, a0);
    },
    indexOf$1$asx(receiver, a0) {
      return J.getInterceptor$asx(receiver).indexOf$1(receiver, a0);
    },
    indexWhere$2$ax(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).indexWhere$2(receiver, a0, a1);
    },
    insert$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).insert$1(receiver, a0);
    },
    insert$2$ax(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).insert$2(receiver, a0, a1);
    },
    insertAll$2$ax(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).insertAll$2(receiver, a0, a1);
    },
    join$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).join$0(receiver);
    },
    join$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).join$1(receiver, a0);
    },
    lastWhere$1$z(receiver, a0) {
      return J.getInterceptor$z(receiver).lastWhere$1(receiver, a0);
    },
    map$1$1$ax(receiver, a0, $T1) {
      return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
    },
    map$2$1$ax(receiver, a0, $T1, $T2) {
      return J.getInterceptor$ax(receiver).map$2$1(receiver, a0, $T1, $T2);
    },
    matchAsPrefix$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).matchAsPrefix$1(receiver, a0);
    },
    matchAsPrefix$2$s(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).matchAsPrefix$2(receiver, a0, a1);
    },
    padLeft$2$s(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).padLeft$2(receiver, a0, a1);
    },
    remove$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).remove$0(receiver);
    },
    remove$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).remove$1(receiver, a0);
    },
    remove$1$1$ax(receiver, a0, $T1) {
      return J.getInterceptor$ax(receiver).remove$1$1(receiver, a0, $T1);
    },
    removeAt$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).removeAt$1(receiver, a0);
    },
    removeLast$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).removeLast$0(receiver);
    },
    removeRange$2$ax(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).removeRange$2(receiver, a0, a1);
    },
    removeWhere$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).removeWhere$1(receiver, a0);
    },
    replaceAll$2$s(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).replaceAll$2(receiver, a0, a1);
    },
    replaceFirst$2$s(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).replaceFirst$2(receiver, a0, a1);
    },
    round$0$n(receiver) {
      return J.getInterceptor$n(receiver).round$0(receiver);
    },
    setAll$2$ax(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).setAll$2(receiver, a0, a1);
    },
    setFloat64$3$x(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).setFloat64$3(receiver, a0, a1, a2);
    },
    setInt32$3$x(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).setInt32$3(receiver, a0, a1, a2);
    },
    setInt64$3$x(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).setInt64$3(receiver, a0, a1, a2);
    },
    setRange$3$ax(receiver, a0, a1, a2) {
      return J.getInterceptor$ax(receiver).setRange$3(receiver, a0, a1, a2);
    },
    setRange$4$ax(receiver, a0, a1, a2, a3) {
      return J.getInterceptor$ax(receiver).setRange$4(receiver, a0, a1, a2, a3);
    },
    setUint16$3$x(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).setUint16$3(receiver, a0, a1, a2);
    },
    setUint32$3$x(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).setUint32$3(receiver, a0, a1, a2);
    },
    skip$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).skip$1(receiver, a0);
    },
    skipWhile$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).skipWhile$1(receiver, a0);
    },
    sort$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).sort$0(receiver);
    },
    sort$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).sort$1(receiver, a0);
    },
    split$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).split$1(receiver, a0);
    },
    startsWith$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).startsWith$1(receiver, a0);
    },
    sublist$2$ax(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).sublist$2(receiver, a0, a1);
    },
    substring$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).substring$1(receiver, a0);
    },
    substring$2$s(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).substring$2(receiver, a0, a1);
    },
    take$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).take$1(receiver, a0);
    },
    toDouble$0$n(receiver) {
      return J.getInterceptor$n(receiver).toDouble$0(receiver);
    },
    toInt$0$n(receiver) {
      return J.getInterceptor$n(receiver).toInt$0(receiver);
    },
    toList$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).toList$0(receiver);
    },
    toList$1$growable$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).toList$1$growable(receiver, a0);
    },
    toLowerCase$0$s(receiver) {
      return J.getInterceptor$s(receiver).toLowerCase$0(receiver);
    },
    toRadixString$1$n(receiver, a0) {
      return J.getInterceptor$n(receiver).toRadixString$1(receiver, a0);
    },
    toSet$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).toSet$0(receiver);
    },
    toString$0$(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    toString$1$minLevel$(receiver, a0) {
      return J.getInterceptor$(receiver).toString$1$minLevel(receiver, a0);
    },
    toStringAsFixed$1$n(receiver, a0) {
      return J.getInterceptor$n(receiver).toStringAsFixed$1(receiver, a0);
    },
    toUnsigned$1$i(receiver, a0) {
      return J.getInterceptor$i(receiver).toUnsigned$1(receiver, a0);
    },
    toUpperCase$0$s(receiver) {
      return J.getInterceptor$s(receiver).toUpperCase$0(receiver);
    },
    trimLeft$0$s(receiver) {
      return J.getInterceptor$s(receiver).trimLeft$0(receiver);
    },
    trimRight$0$s(receiver) {
      return J.getInterceptor$s(receiver).trimRight$0(receiver);
    },
    where$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).where$1(receiver, a0);
    },
    whereType$1$0$ax(receiver, $T1) {
      return J.getInterceptor$ax(receiver).whereType$1$0(receiver, $T1);
    }
  },
  B, F,
  A = {
    _InitializedCell$named(_name, _initializer) {
      var t1 = new A._InitializedCell(_name, _initializer);
      t1._InitializedCell$named$2(_name, _initializer);
      return t1;
    },
    _InitializedCell: function _InitializedCell(t0, t1) {
      this.__late_helper$_name = t0;
      this._value = null;
      this._initializer = t1;
    },
    WeakReference_WeakReference(object, $T) {
      return A._WeakReferenceWrapper$(object, $T);
    },
    _WeakReferenceWrapper$(object, $T) {
      return new A._WeakReferenceWrapper(new ($.$get$_WeakReferenceWrapper__weakRefConstructor())(object), $T._eval$1("_WeakReferenceWrapper<0>"));
    },
    _WeakReferenceWrapper__findWeakRefConstructor() {
      if (typeof WeakRef == "function")
        return WeakRef;
      var $constructor = function LeakRef(o) {
        this._ = o;
      };
      $constructor.prototype = {
        deref() {
          return this._;
        }
      };
      return $constructor;
    },
    RangeError$(message) {
      var _null = null;
      return new B.RangeError(_null, _null, false, _null, _null, message);
    },
    _WeakReferenceWrapper: function _WeakReferenceWrapper(t0, t1) {
      this._weakRef = t0;
      this.$ti = t1;
    },
    sin(radians) {
      return Math.sin(radians);
    },
    cos(radians) {
      return Math.cos(radians);
    },
    asin(x) {
      return Math.asin(x);
    },
    log(x) {
      return Math.log(x);
    },
    Random_Random(seed) {
      return seed == null ? C.C__JSRandom : A._Random$(seed);
    },
    _Random$(seed) {
      var t1 = new A._Random();
      t1._Random$1(seed);
      return t1;
    },
    _JSRandom: function _JSRandom() {
    },
    _Random: function _Random() {
      this._hi = this._lo = 0;
    },
    Offset_lerp(a, b, t) {
      if (b == null)
        if (a == null)
          return null;
        else
          return a.$mul(0, 1 - t);
      else if (a == null)
        return b.$mul(0, t);
      else
        return E.Offset$(A._lerpDouble(a.get$dx(), b.get$dx(), t), A._lerpDouble(a.get$dy(), b.get$dy(), t));
    },
    Size_lerp(a, b, t) {
      var t1 = type$.nullable_Size;
      t1._as(a);
      t1._as(b);
      B._asDouble(t);
      if (b == null)
        if (a == null)
          return null;
        else
          return a.$mul(0, 1 - t);
      else if (a == null)
        return b.$mul(0, t);
      else
        return E.Size$(A._lerpDouble(a.get$width(), b.get$width(), t), A._lerpDouble(a.get$height(), b.get$height(), t));
    },
    Rect$fromPoints(a, b) {
      var t1 = type$.double;
      return new E.Rect(E.min(a.get$dx(), b.get$dx(), t1), E.min(a.get$dy(), b.get$dy(), t1), E.max(a.get$dx(), b.get$dx(), t1), E.max(a.get$dy(), b.get$dy(), t1));
    },
    Rect_lerp(a, b, t) {
      var k, t1, t2, t3, t4;
      if (b == null)
        if (a == null)
          return null;
        else {
          k = 1 - t;
          t1 = a.left;
          if (typeof t1 !== "number")
            return t1.$mul();
          t2 = a.top;
          if (typeof t2 !== "number")
            return t2.$mul();
          t3 = a.right;
          if (typeof t3 !== "number")
            return t3.$mul();
          t4 = a.bottom;
          if (typeof t4 !== "number")
            return t4.$mul();
          return E.Rect$fromLTRB(t1 * k, t2 * k, t3 * k, t4 * k);
        }
      else {
        t1 = b.left;
        t2 = b.top;
        t3 = b.right;
        t4 = b.bottom;
        if (a == null) {
          if (typeof t1 !== "number")
            return t1.$mul();
          if (typeof t2 !== "number")
            return t2.$mul();
          if (typeof t3 !== "number")
            return t3.$mul();
          if (typeof t4 !== "number")
            return t4.$mul();
          return E.Rect$fromLTRB(t1 * t, t2 * t, t3 * t, t4 * t);
        } else
          return E.Rect$fromLTRB(A._lerpDouble(a.left, t1, t), A._lerpDouble(a.top, t2, t), A._lerpDouble(a.right, t3, t), A._lerpDouble(a.bottom, t4, t));
      }
    },
    Radius$circular(radius) {
      return new E.Radius(radius, radius);
    },
    Radius_lerp(a, b, t) {
      var k, t1, t2;
      if (b == null)
        if (a == null)
          return null;
        else {
          k = 1 - t;
          t1 = a.x;
          if (typeof t1 !== "number")
            return t1.$mul();
          t2 = a.y;
          if (typeof t2 !== "number")
            return t2.$mul();
          return E.Radius$elliptical(t1 * k, t2 * k);
        }
      else {
        t1 = b.x;
        t2 = b.y;
        if (a == null) {
          if (typeof t1 !== "number")
            return t1.$mul();
          if (typeof t2 !== "number")
            return t2.$mul();
          return E.Radius$elliptical(t1 * t, t2 * t);
        } else
          return E.Radius$elliptical(A._lerpDouble(a.x, t1, t), A._lerpDouble(a.y, t2, t));
      }
    },
    RRect$fromRectXY(rect, radiusX, radiusY) {
      var t1 = rect.top;
      return new E.RRect(rect.left, t1, rect.right, rect.bottom, radiusX, radiusY, radiusX, radiusY, radiusX, radiusY, radiusX, radiusY, radiusX === radiusY);
    },
    RRect$fromRectAndRadius(rect, radius) {
      var t1 = rect.top,
        t2 = rect.left,
        t3 = rect.right,
        t4 = rect.bottom,
        t5 = radius.x,
        t6 = radius.y;
      return new E.RRect(t2, t1, t3, t4, t5, t6, t5, t6, t5, t6, t5, t6, J.$eq$(t5, t6));
    },
    lerpDouble(a, b, t) {
      var t1;
      B._asNumQ(a);
      B._asNumQ(b);
      B._asDouble(t);
      if (a != b) {
        t1 = a == null ? null : F.JSNumber_methods.get$isNaN(a);
        if (B.boolConversionCheck(t1 == null ? false : t1)) {
          t1 = b == null ? null : F.JSNumber_methods.get$isNaN(b);
          t1 = B.boolConversionCheck(t1 == null ? false : t1);
        } else
          t1 = false;
      } else
        t1 = true;
      if (t1)
        return a == null ? null : F.JSNumber_methods.toDouble$0(a);
      if (a == null)
        a = 0;
      if (b == null)
        b = 0;
      return a * (1 - t) + b * t;
    },
    _lerpDouble(a, b, t) {
      return a * (1 - t) + b * t;
    },
    _lerpInt(a, b, t) {
      return a * (1 - t) + b * t;
    },
    _scaleAlpha(a, factor) {
      var t1 = a.get$alpha();
      if (typeof t1 !== "number")
        return t1.$mul();
      return a.withAlpha$1(E.clampInt(F.JSNumber_methods.round$0(t1 * factor), 0, 255));
    },
    Color$fromRGBO(r, g, b, opacity) {
      return new E.Color(((F.JSNumber_methods._tdivFast$1(opacity * 255, 1) & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255) >>> 0);
    },
    Color_lerp(a, b, t) {
      var t1 = type$.nullable_Color;
      t1._as(a);
      t1._as(b);
      B._asDouble(t);
      if (b == null)
        if (a == null)
          return null;
        else
          return A._scaleAlpha(a, 1 - t);
      else if (a == null)
        return A._scaleAlpha(b, t);
      else
        return E.Color$fromARGB(E.clampInt(J.toInt$0$n(A._lerpInt(a.get$alpha(), b.get$alpha(), t)), 0, 255), E.clampInt(J.toInt$0$n(A._lerpInt(a.get$red(), b.get$red(), t)), 0, 255), E.clampInt(J.toInt$0$n(A._lerpInt(a.get$green(), b.get$green(), t)), 0, 255), E.clampInt(J.toInt$0$n(A._lerpInt(a.get$blue(), b.get$blue(), t)), 0, 255));
    },
    Color_alphaBlend(foreground, background) {
      var invAlpha, backAlpha, t1, t2, t3, t4, outAlpha,
        alpha = foreground.get$alpha();
      if (alpha === 0)
        return background;
      invAlpha = 255 - alpha;
      backAlpha = background.get$alpha();
      if (backAlpha === 255) {
        t1 = foreground.get$red();
        if (typeof t1 !== "number")
          return B.iae(t1);
        t2 = background.get$red();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t2 = F.JSNumber_methods._tdivFast$1(alpha * t1 + invAlpha * t2, 255);
        t1 = foreground.get$green();
        if (typeof t1 !== "number")
          return B.iae(t1);
        t3 = background.get$green();
        if (typeof t3 !== "number")
          return B.iae(t3);
        t3 = F.JSNumber_methods._tdivFast$1(alpha * t1 + invAlpha * t3, 255);
        t1 = foreground.get$blue();
        if (typeof t1 !== "number")
          return B.iae(t1);
        t4 = background.get$blue();
        if (typeof t4 !== "number")
          return B.iae(t4);
        return E.Color$fromARGB(255, t2, t3, F.JSNumber_methods._tdivFast$1(alpha * t1 + invAlpha * t4, 255));
      } else {
        backAlpha = F.JSInt_methods._tdivFast$1(backAlpha * invAlpha, 255);
        outAlpha = alpha + backAlpha;
        t1 = foreground.get$red();
        if (typeof t1 !== "number")
          return t1.$mul();
        t2 = background.get$red();
        if (typeof t2 !== "number")
          return t2.$mul();
        t2 = F.JSNumber_methods.$tdiv(t1 * alpha + t2 * backAlpha, outAlpha);
        t1 = foreground.get$green();
        if (typeof t1 !== "number")
          return t1.$mul();
        t3 = background.get$green();
        if (typeof t3 !== "number")
          return t3.$mul();
        t3 = F.JSNumber_methods.$tdiv(t1 * alpha + t3 * backAlpha, outAlpha);
        t1 = foreground.get$blue();
        if (typeof t1 !== "number")
          return t1.$mul();
        t4 = background.get$blue();
        if (typeof t4 !== "number")
          return t4.$mul();
        return E.Color$fromARGB(outAlpha, t2, t3, F.JSNumber_methods.$tdiv(t1 * alpha + t4 * backAlpha, outAlpha));
      }
    },
    Color_getAlphaFromOpacity(opacity) {
      var t1 = E.clampDouble(opacity, 0, 1);
      if (typeof t1 !== "number")
        return t1.$mul();
      return F.JSNumber_methods.round$0(t1 * 255);
    },
    Gradient_Gradient$linear(from, to, colors) {
      return E.renderer().createLinearGradient$6(from, to, colors, null, D.TileMode_0, null);
    },
    Shadow$(blurRadius, color, offset) {
      return new A.Shadow(color, offset, blurRadius);
    },
    Shadow_lerp(a, b, t) {
      var t1, t2;
      if (b == null)
        if (a == null)
          return null;
        else
          return a.scale$1(1 - t);
      else if (a == null)
        return b.scale$1(t);
      else {
        t1 = A.Color_lerp(a.color, b.color, t);
        t1.toString;
        t2 = A.Offset_lerp(a.offset, b.offset, t);
        t2.toString;
        return A.Shadow$(A._lerpDouble(a.blurRadius, b.blurRadius, t), t1, t2);
      }
    },
    Shadow_lerpList(a, b, t) {
      var result, t2, commonLength, i, t3, t4,
        t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        a = B._setArrayType([], type$.JSArray_Shadow);
      if (b == null)
        b = B._setArrayType([], type$.JSArray_Shadow);
      result = B._setArrayType([], type$.JSArray_Shadow);
      t1 = J.getInterceptor$asx(a);
      t2 = J.getInterceptor$asx(b);
      commonLength = E.min(t1.get$length(a), t2.get$length(b), type$.int);
      for (i = 0; i < commonLength; ++i) {
        t3 = A.Shadow_lerp(t1.$index(a, i), t2.$index(b, i), t);
        t3.toString;
        F.JSArray_methods.add$1(result, t3);
      }
      t3 = 1 - t;
      i = commonLength;
      while (true) {
        t4 = t1.get$length(a);
        if (typeof t4 !== "number")
          return B.iae(t4);
        if (!(i < t4))
          break;
        F.JSArray_methods.add$1(result, t1.$index(a, i).scale$1(t3));
        ++i;
      }
      i = commonLength;
      while (true) {
        t1 = t2.get$length(b);
        if (typeof t1 !== "number")
          return B.iae(t1);
        if (!(i < t1))
          break;
        F.JSArray_methods.add$1(result, t2.$index(b, i).scale$1(t));
        ++i;
      }
      return result;
    },
    SpellOutStringAttribute$(range) {
      return new A.SpellOutStringAttribute(range);
    },
    LocaleStringAttribute$(locale, range) {
      return new A.LocaleStringAttribute(locale, range);
    },
    FontWeight_lerp(a, b, t) {
      var t2,
        t1 = a == null;
      if (t1 && b == null)
        return null;
      t1 = t1 ? null : a.index;
      if (t1 == null)
        t1 = 3;
      t2 = b == null ? null : b.index;
      t1 = A.lerpDouble(t1, t2 == null ? 3 : t2, t);
      t1.toString;
      return F.JSArray_methods.$index(C.List_bNK, E.clampInt(J.round$0$n(t1), 0, 8));
    },
    FontVariation$(axis, value) {
      return new A.FontVariation(axis, value);
    },
    FontVariation_lerp(a, b, t) {
      var t1 = a == null,
        t2 = t1 ? null : a.axis,
        t3 = b == null;
      if (B.boolConversionCheck(J.$eq$(t2, t3 ? null : b.axis)))
        t1 = t1 && t3;
      else
        t1 = true;
      if (t1)
        return t < 0.5 ? a : b;
      t1 = a.axis;
      t2 = A.lerpDouble(a.value, b.value, t);
      t2.toString;
      return A.FontVariation$(t1, E.clampDouble(t2, -32768, 32767.99998474121));
    },
    TextHeightBehavior$(leadingDistribution) {
      return new A.TextHeightBehavior(leadingDistribution);
    },
    LineMetrics_LineMetrics(ascent, baseline, descent, hardBreak, height, left, lineNumber, unscaledAscent, width) {
      return E.renderer().createLineMetrics$9$ascent$baseline$descent$hardBreak$height$left$lineNumber$unscaledAscent$width(ascent, baseline, descent, hardBreak, height, left, lineNumber, unscaledAscent, width);
    },
    CallbackHandle$fromRawHandle(_handle) {
      return new A.CallbackHandle(_handle);
    },
    PluginUtilities_getCallbackHandle(callback) {
      throw B.wrapException(B.UnimplementedError$(null));
    },
    PluginUtilities_getCallbackFromHandle(handle) {
      throw B.wrapException(B.UnimplementedError$(null));
    },
    Shadow: function Shadow(t0, t1, t2) {
      this.color = t0;
      this.offset = t1;
      this.blurRadius = t2;
    },
    StringAttribute: function StringAttribute() {
    },
    SpellOutStringAttribute: function SpellOutStringAttribute(t0) {
      this.range = t0;
    },
    LocaleStringAttribute: function LocaleStringAttribute(t0, t1) {
      this.locale = t0;
      this.range = t1;
    },
    FontWeight: function FontWeight(t0) {
      this.index = t0;
    },
    FontVariation: function FontVariation(t0, t1) {
      this.axis = t0;
      this.value = t1;
    },
    TextHeightBehavior: function TextHeightBehavior(t0) {
      this.leadingDistribution = t0;
    },
    CallbackHandle: function CallbackHandle(t0) {
      this._ui$_handle = t0;
    },
    StringCharacterRange_StringCharacterRange$at(string, startIndex) {
      B.RangeError_checkValidRange(startIndex, null, string.length, "startIndex", "endIndex");
      return A.StringCharacterRange__expandRange(string, startIndex, startIndex);
    },
    StringCharacterRange$_(_string, _start, _end) {
      return new A.StringCharacterRange(_string, _start, _end);
    },
    StringCharacterRange__expandRange(string, start, end) {
      var t1 = string.length;
      start = A.previousBreak(string, 0, t1, start);
      return A.StringCharacterRange$_(string, start, end !== start ? A.nextBreak(string, 0, t1, end) : end);
    },
    StringCharacterRange: function StringCharacterRange(t0, t1, t2) {
      var _ = this;
      _._characters_impl$_string = t0;
      _._characters_impl$_start = t1;
      _._characters_impl$_end = t2;
      _._currentCache = null;
    },
    Breaks$(base, cursor, end, state) {
      return new A.Breaks(base, end, cursor, state);
    },
    BackBreaks$(base, cursor, start, state) {
      return new A.BackBreaks(base, start, cursor, state);
    },
    lookAhead(base, start, cursor, state) {
      if (state === 208)
        return A.lookAheadRegional(base, start, cursor);
      if (state === 224) {
        if (A.lookAheadPictorgraphicExtend(base, start, cursor) >= 0)
          return 145;
        return 64;
      }
      throw B.wrapException(B.StateError$("Unexpected state: " + B.S(F.JSInt_methods.toRadixString$1(state, 16))));
    },
    lookAheadRegional(base, start, cursor) {
      var t1, index, count, index0, t2, tail, lead;
      for (t1 = base.length, index = cursor, count = 0; index0 = index - 2, index0 >= start; index = index0) {
        t2 = index - 1;
        if (!(t2 >= 0 && t2 < t1))
          return B.ioore(base, t2);
        tail = base.charCodeAt(t2);
        if ((tail & 64512) !== 56320)
          break;
        if (!(index0 >= 0 && index0 < t1))
          return B.ioore(base, index0);
        lead = base.charCodeAt(index0);
        if ((lead & 64512) !== 55296)
          break;
        if (A.high(lead, tail) !== 6)
          break;
        count ^= 1;
      }
      if (count === 0)
        return 193;
      else
        return 144;
    },
    lookAheadPictorgraphicExtend(base, start, cursor) {
      var t1, index, char, category, prevChar, t2;
      for (t1 = base.length, index = cursor; index > start;) {
        --index;
        if (!(index >= 0 && index < t1))
          return B.ioore(base, index);
        char = base.charCodeAt(index);
        if ((char & 64512) !== 56320)
          category = A.low(char);
        else {
          if (index > start) {
            --index;
            if (!(index >= 0 && index < t1))
              return B.ioore(base, index);
            prevChar = base.charCodeAt(index);
            t2 = (prevChar & 64512) === 55296;
          } else {
            prevChar = 0;
            t2 = false;
          }
          if (t2)
            category = A.high(prevChar, char);
          else
            break;
        }
        if (category === 7)
          return index;
        if (category !== 4)
          break;
      }
      return -1;
    },
    previousBreak(text, start, end, index) {
      var t1, nextChar, category, indexBefore, indexAfter, secondChar, t2, prevChar;
      if (index === start || index === end)
        return index;
      t1 = text.length;
      if (index >>> 0 !== index || index >= t1)
        return B.ioore(text, index);
      nextChar = text.charCodeAt(index);
      if ((nextChar & 63488) !== 55296) {
        category = A.low(nextChar);
        indexBefore = index;
      } else {
        category = 2;
        if ((nextChar & 64512) === 55296) {
          indexAfter = index + 1;
          if (indexAfter < end) {
            if (!(indexAfter < t1))
              return B.ioore(text, indexAfter);
            secondChar = text.charCodeAt(indexAfter);
            category = (secondChar & 64512) === 56320 ? A.high(nextChar, secondChar) : 2;
          }
          indexBefore = index;
        } else {
          t2 = index - 1;
          if (!(t2 >= 0 && t2 < t1))
            return B.ioore(text, t2);
          prevChar = text.charCodeAt(t2);
          if ((prevChar & 64512) === 55296) {
            category = A.high(prevChar, nextChar);
            indexBefore = t2;
          } else
            indexBefore = index;
        }
      }
      return A.BackBreaks$(text, indexBefore, start, A.moveBack(176, category)).nextBreak$0();
    },
    nextBreak(text, start, end, index) {
      var indexBefore, t1, prevChar, prevCategory, nextChar, secondCharIndex, secondChar, state, t2;
      if (index === start || index === end)
        return index;
      indexBefore = index - 1;
      t1 = text.length;
      if (!(indexBefore >= 0 && indexBefore < t1))
        return B.ioore(text, indexBefore);
      prevChar = text.charCodeAt(indexBefore);
      if ((prevChar & 63488) !== 55296)
        prevCategory = A.low(prevChar);
      else {
        prevCategory = 2;
        if ((prevChar & 64512) === 55296) {
          if (index >>> 0 !== index || index >= t1)
            return B.ioore(text, index);
          nextChar = text.charCodeAt(index);
          if ((nextChar & 64512) === 56320) {
            ++index;
            if (index === end)
              return end;
            prevCategory = A.high(prevChar, nextChar);
          }
        } else if (indexBefore > start) {
          secondCharIndex = indexBefore - 1;
          if (!(secondCharIndex >= 0 && secondCharIndex < t1))
            return B.ioore(text, secondCharIndex);
          secondChar = text.charCodeAt(secondCharIndex);
          if ((secondChar & 64512) === 55296) {
            prevCategory = A.high(secondChar, prevChar);
            indexBefore = secondCharIndex;
          }
        }
      }
      if (prevCategory === 6)
        state = A.lookAheadRegional(text, start, indexBefore) !== 144 ? 160 : 48;
      else {
        t2 = prevCategory === 1;
        if (t2 || prevCategory === 4)
          if (A.lookAheadPictorgraphicExtend(text, start, indexBefore) >= 0)
            state = t2 ? 144 : 128;
          else
            state = 48;
        else
          state = A.move(176, prevCategory);
      }
      return A.Breaks$(text, index, t1, state).nextBreak$0();
    },
    Breaks: function Breaks(t0, t1, t2, t3) {
      var _ = this;
      _.base = t0;
      _.end = t1;
      _.cursor = t2;
      _.state = t3;
    },
    BackBreaks: function BackBreaks(t0, t1, t2, t3) {
      var _ = this;
      _.base = t0;
      _.start = t1;
      _.cursor = t2;
      _.state = t3;
    },
    UnorderedIterableEquality$(elementEquality, $E) {
      return new A.UnorderedIterableEquality(elementEquality, $E._eval$1("UnorderedIterableEquality<0>"));
    },
    SetEquality$(elementEquality, $E) {
      return new A.SetEquality(elementEquality, $E._eval$1("SetEquality<0>"));
    },
    _MapEntry$(equality, key, value) {
      return new A._MapEntry(equality, key, value);
    },
    MapEquality$(keys, values, $K, $V) {
      return new A.MapEquality(keys, values, $K._eval$1("@<0>")._bind$1($V)._eval$1("MapEquality<1,2>"));
    },
    DefaultEquality: function DefaultEquality(t0) {
      this.$ti = t0;
    },
    _UnorderedEquality: function _UnorderedEquality() {
    },
    UnorderedIterableEquality: function UnorderedIterableEquality(t0, t1) {
      this._elementEquality = t0;
      this.$ti = t1;
    },
    SetEquality: function SetEquality(t0, t1) {
      this._elementEquality = t0;
      this.$ti = t1;
    },
    _MapEntry: function _MapEntry(t0, t1, t2) {
      this.equality = t0;
      this.key = t1;
      this.value = t2;
    },
    MapEquality: function MapEquality(t0, t1, t2) {
      this._keyEquality = t0;
      this._valueEquality = t1;
      this.$ti = t2;
    },
    DeepCollectionEquality: function DeepCollectionEquality() {
    },
    AnimationStatus: function AnimationStatus(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    Animation: function Animation() {
    },
    AnimationController$(debugLabel, duration, reverseDuration, vsync) {
      var t1 = new A.AnimationController(duration, reverseDuration, C._AnimationDirection_0, C.AnimationStatus_0, A.ObserverList$(type$.void_Function_AnimationStatus), A.ObserverList$(type$.void_Function));
      t1.AnimationController$8$animationBehavior$debugLabel$duration$lowerBound$reverseDuration$upperBound$value$vsync(C.AnimationBehavior_0, debugLabel, duration, 0, reverseDuration, 1, null, vsync);
      return t1;
    },
    _InterpolationSimulation$(_begin, _end, duration, _curve, scale) {
      var t1 = duration.get$inMicroseconds();
      if (typeof t1 !== "number")
        return t1.$mul();
      return new A._InterpolationSimulation(t1 * scale / 1000000, _begin, _end, _curve);
    },
    _AnimationDirection: function _AnimationDirection(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    AnimationBehavior: function AnimationBehavior(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    AnimationController: function AnimationController(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.duration = t0;
      _.reverseDuration = t1;
      _._simulation = _._ticker = null;
      _.__AnimationController__value_A = $;
      _._direction = t2;
      _.__AnimationController__status_A = $;
      _._lastReportedStatus = t3;
      _.AnimationLocalStatusListenersMixin__statusListeners = t4;
      _.AnimationLocalListenersMixin__listeners = t5;
    },
    _InterpolationSimulation: function _InterpolationSimulation(t0, t1, t2, t3) {
      var _ = this;
      _._durationInSeconds = t0;
      _._begin = t1;
      _._animation_controller$_end = t2;
      _._curve = t3;
    },
    _AnimationController_Animation_AnimationEagerListenerMixin: function _AnimationController_Animation_AnimationEagerListenerMixin() {
    },
    _AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin: function _AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin() {
    },
    _AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin: function _AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin() {
    },
    AnimationStyle$(duration, reverseDuration) {
      return new A.AnimationStyle(duration, reverseDuration);
    },
    AnimationStyle: function AnimationStyle(t0, t1) {
      this.duration = t0;
      this.reverseDuration = t1;
    },
    _AnimationStyle_Object_Diagnosticable: function _AnimationStyle_Object_Diagnosticable() {
    },
    ProxyAnimation$(animation) {
      var t1 = new A.ProxyAnimation(A.ObserverList$(type$.void_Function_AnimationStatus), A.ObserverList$(type$.void_Function), 0);
      t1.ProxyAnimation$1(animation);
      return t1;
    },
    ReverseAnimation$($parent) {
      return new A.ReverseAnimation($parent, A.ObserverList$(type$.void_Function_AnimationStatus), 0);
    },
    CurvedAnimation$(curve, $parent, reverseCurve) {
      var t1 = new A.CurvedAnimation($parent, curve, reverseCurve);
      t1.CurvedAnimation$3$curve$parent$reverseCurve(curve, $parent, reverseCurve);
      return t1;
    },
    TrainHoppingAnimation$(_currentTrain, _nextTrain, onSwitchedTrain) {
      var t1 = new A.TrainHoppingAnimation(_currentTrain, _nextTrain, onSwitchedTrain, A.ObserverList$(type$.void_Function_AnimationStatus), A.ObserverList$(type$.void_Function));
      t1.TrainHoppingAnimation$3$onSwitchedTrain(_currentTrain, _nextTrain, onSwitchedTrain);
      return t1;
    },
    _AlwaysCompleteAnimation: function _AlwaysCompleteAnimation() {
    },
    _AlwaysDismissedAnimation: function _AlwaysDismissedAnimation() {
    },
    AnimationWithParentMixin: function AnimationWithParentMixin() {
    },
    ProxyAnimation: function ProxyAnimation(t0, t1, t2) {
      var _ = this;
      _._animations$_parent = _._animations$_value = _._animations$_status = null;
      _.AnimationLocalStatusListenersMixin__statusListeners = t0;
      _.AnimationLocalListenersMixin__listeners = t1;
      _.AnimationLazyListenerMixin__listenerCounter = t2;
    },
    ReverseAnimation: function ReverseAnimation(t0, t1, t2) {
      this.parent = t0;
      this.AnimationLocalStatusListenersMixin__statusListeners = t1;
      this.AnimationLazyListenerMixin__listenerCounter = t2;
    },
    CurvedAnimation: function CurvedAnimation(t0, t1, t2) {
      var _ = this;
      _.parent = t0;
      _.curve = t1;
      _.reverseCurve = t2;
      _._curveDirection = null;
    },
    _TrainHoppingMode: function _TrainHoppingMode(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    TrainHoppingAnimation: function TrainHoppingAnimation(t0, t1, t2, t3, t4) {
      var _ = this;
      _._currentTrain = t0;
      _._nextTrain = t1;
      _._mode = null;
      _.onSwitchedTrain = t2;
      _._lastValue = _._lastStatus = null;
      _.AnimationLocalStatusListenersMixin__statusListeners = t3;
      _.AnimationLocalListenersMixin__listeners = t4;
    },
    _CurvedAnimation_Animation_AnimationWithParentMixin: function _CurvedAnimation_Animation_AnimationWithParentMixin() {
    },
    _ProxyAnimation_Animation_AnimationLazyListenerMixin: function _ProxyAnimation_Animation_AnimationLazyListenerMixin() {
    },
    _ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin: function _ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin() {
    },
    _ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin: function _ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin() {
    },
    _ReverseAnimation_Animation_AnimationLazyListenerMixin: function _ReverseAnimation_Animation_AnimationLazyListenerMixin() {
    },
    _ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin: function _ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin() {
    },
    _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin: function _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin() {
    },
    _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin: function _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin() {
    },
    _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin: function _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin() {
    },
    Interval$(begin, end) {
      return new A.Interval(begin, end);
    },
    Cubic$(a, b, c, d) {
      return new E.Cubic(a, b, c, d);
    },
    _Linear: function _Linear() {
    },
    Interval: function Interval(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    ThreePointCubic: function ThreePointCubic() {
    },
    AnimationLazyListenerMixin: function AnimationLazyListenerMixin() {
    },
    AnimationEagerListenerMixin: function AnimationEagerListenerMixin() {
    },
    AnimationLocalListenersMixin: function AnimationLocalListenersMixin() {
    },
    AnimationLocalStatusListenersMixin: function AnimationLocalStatusListenersMixin() {
    },
    _AnimatedEvaluation$($parent, _evaluatable, $T) {
      return new A._AnimatedEvaluation($parent, _evaluatable, $T._eval$1("_AnimatedEvaluation<0>"));
    },
    _ChainedEvaluation$(_parent, _evaluatable, $T) {
      return new A._ChainedEvaluation(_parent, _evaluatable, $T._eval$1("_ChainedEvaluation<0>"));
    },
    Tween$(begin, end, $T) {
      return new A.Tween(begin, end, $T._eval$1("Tween<0>"));
    },
    ReverseTween$($parent, $T) {
      return new A.ReverseTween($parent, $parent.end, $parent.begin, $T._eval$1("ReverseTween<0>"));
    },
    ColorTween$(begin, end) {
      return new A.ColorTween(begin, end);
    },
    RectTween$(begin, end) {
      return new A.RectTween(begin, end);
    },
    IntTween$(begin, end) {
      return new A.IntTween(begin, end);
    },
    CurveTween$(curve) {
      return new A.CurveTween(curve);
    },
    Animatable: function Animatable() {
    },
    _AnimatedEvaluation: function _AnimatedEvaluation(t0, t1, t2) {
      this.parent = t0;
      this._evaluatable = t1;
      this.$ti = t2;
    },
    _ChainedEvaluation: function _ChainedEvaluation(t0, t1, t2) {
      this._tween$_parent = t0;
      this._evaluatable = t1;
      this.$ti = t2;
    },
    Tween: function Tween(t0, t1, t2) {
      this.begin = t0;
      this.end = t1;
      this.$ti = t2;
    },
    ReverseTween: function ReverseTween(t0, t1, t2, t3) {
      var _ = this;
      _.parent = t0;
      _.begin = t1;
      _.end = t2;
      _.$ti = t3;
    },
    ColorTween: function ColorTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    RectTween: function RectTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    IntTween: function IntTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    CurveTween: function CurveTween(t0) {
      this.curve = t0;
    },
    __AnimatedEvaluation_Animation_AnimationWithParentMixin: function __AnimatedEvaluation_Animation_AnimationWithParentMixin() {
    },
    TweenSequence$(items, $T) {
      var t1 = new A.TweenSequence(B._setArrayType([], $T._eval$1("JSArray<TweenSequenceItem<0>>")), B._setArrayType([], type$.JSArray__Interval), $T._eval$1("TweenSequence<0>"));
      t1.TweenSequence$1(items, $T);
      return t1;
    },
    TweenSequenceItem$(tween, weight, $T) {
      return new A.TweenSequenceItem(tween, weight, $T._eval$1("TweenSequenceItem<0>"));
    },
    _Interval$(start, end) {
      return new A._Interval(start, end);
    },
    TweenSequence: function TweenSequence(t0, t1, t2) {
      this._items = t0;
      this._intervals = t1;
      this.$ti = t2;
    },
    TweenSequenceItem: function TweenSequenceItem(t0, t1, t2) {
      this.tween = t0;
      this.weight = t1;
      this.$ti = t2;
    },
    _Interval: function _Interval(t0, t1) {
      this.start = t0;
      this.end = t1;
    },
    CupertinoDynamicColor$_(_effectiveColor, color, darkColor, highContrastColor, darkHighContrastColor, elevatedColor, darkElevatedColor, highContrastElevatedColor, darkHighContrastElevatedColor, _debugResolveContext, _debugLabel) {
      return new A.CupertinoDynamicColor(_effectiveColor, _debugLabel, _debugResolveContext, color, darkColor, highContrastColor, darkHighContrastColor, elevatedColor, darkElevatedColor, highContrastElevatedColor, darkHighContrastElevatedColor, 0);
    },
    CupertinoDynamicColor_resolve(resolvable, context) {
      return resolvable instanceof A.CupertinoDynamicColor ? resolvable.resolveFrom$1(context) : resolvable;
    },
    CupertinoDynamicColor_maybeResolve(resolvable, context) {
      return resolvable instanceof A.CupertinoDynamicColor ? resolvable.resolveFrom$1(context) : resolvable;
    },
    createCupertinoColorProperty($name, value, defaultValue) {
      if (value instanceof A.CupertinoDynamicColor)
        return E.DiagnosticsProperty$($name, value, true, defaultValue, value._colors$_debugLabel, null, null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, null, type$.CupertinoDynamicColor);
      else
        return A.ColorProperty$($name, value, defaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8);
    },
    CupertinoDynamicColor: function CupertinoDynamicColor(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._effectiveColor = t0;
      _._colors$_debugLabel = t1;
      _._debugResolveContext = t2;
      _.color = t3;
      _.darkColor = t4;
      _.highContrastColor = t5;
      _.darkHighContrastColor = t6;
      _.elevatedColor = t7;
      _.darkElevatedColor = t8;
      _.highContrastElevatedColor = t9;
      _.darkHighContrastElevatedColor = t10;
      _.value = t11;
    },
    CupertinoDynamicColor_toString_toString: function CupertinoDynamicColor_toString_toString(t0) {
      this.$this = t0;
    },
    _CupertinoDynamicColor_Color_Diagnosticable: function _CupertinoDynamicColor_Color_Diagnosticable() {
    },
    CupertinoIconThemeData$(applyTextScaling, color, fill, grade, opacity, opticalSize, shadows, size, weight) {
      return new A.CupertinoIconThemeData(size, fill, weight, grade, opticalSize, color, opacity, shadows, applyTextScaling);
    },
    CupertinoIconThemeData: function CupertinoIconThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.size = t0;
      _.fill = t1;
      _.weight = t2;
      _.grade = t3;
      _.opticalSize = t4;
      _.color = t5;
      _._opacity = t6;
      _.shadows = t7;
      _.applyTextScaling = t8;
    },
    _CupertinoIconThemeData_IconThemeData_Diagnosticable: function _CupertinoIconThemeData_IconThemeData_Diagnosticable() {
    },
    CupertinoUserInterfaceLevel_maybeOf(context) {
      context.dependOnInheritedWidgetOfExactType$1$0(type$.CupertinoUserInterfaceLevel);
      return null;
    },
    CupertinoUserInterfaceLevelData: function CupertinoUserInterfaceLevelData(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    DefaultCupertinoLocalizations_load(locale) {
      return E.SynchronousFuture$(C.C_DefaultCupertinoLocalizations, type$.CupertinoLocalizations);
    },
    _CupertinoLocalizationsDelegate: function _CupertinoLocalizationsDelegate() {
    },
    DefaultCupertinoLocalizations: function DefaultCupertinoLocalizations() {
    },
    CupertinoRouteTransitionMixin__startPopGesture(route, $T) {
      var t2,
        t1 = route.get$navigator();
      t1.toString;
      t2 = route.get$controller();
      t2.toString;
      return A._CupertinoBackGestureController$(t2, new A.CupertinoRouteTransitionMixin__startPopGesture_closure(route), new A.CupertinoRouteTransitionMixin__startPopGesture_closure0(route), t1, $T);
    },
    CupertinoRouteTransitionMixin_buildPageTransitions(route, context, animation, secondaryAnimation, child, $T) {
      var linearTransition = route.get$popGestureInProgress();
      if (B.boolConversionCheck(route.fullscreenDialog))
        return A.CupertinoFullscreenDialogTransition$(child, linearTransition, animation, secondaryAnimation);
      else
        return A.CupertinoPageTransition$(A._CupertinoBackGestureDetector$(child, new A.CupertinoRouteTransitionMixin_buildPageTransitions_closure(route), new A.CupertinoRouteTransitionMixin_buildPageTransitions_closure0(route, $T), $T), linearTransition, animation, secondaryAnimation);
    },
    CupertinoPageTransition$(child, linearTransition, primaryRouteAnimation, secondaryRouteAnimation) {
      return new A.CupertinoPageTransition(child, primaryRouteAnimation, secondaryRouteAnimation, linearTransition, null);
    },
    _CupertinoPageTransitionState$() {
      return new A._CupertinoPageTransitionState();
    },
    CupertinoFullscreenDialogTransition$(child, linearTransition, primaryRouteAnimation, secondaryRouteAnimation) {
      return new A.CupertinoFullscreenDialogTransition(primaryRouteAnimation, secondaryRouteAnimation, linearTransition, child, null);
    },
    _CupertinoFullscreenDialogTransitionState$() {
      return new A._CupertinoFullscreenDialogTransitionState();
    },
    _CupertinoBackGestureDetector$(child, enabledCallback, onStartPopGesture, $T) {
      return new A._CupertinoBackGestureDetector(child, enabledCallback, onStartPopGesture, null, $T._eval$1("_CupertinoBackGestureDetector<0>"));
    },
    _CupertinoBackGestureDetectorState$($T) {
      return new A._CupertinoBackGestureDetectorState($T._eval$1("_CupertinoBackGestureDetectorState<0>"));
    },
    _CupertinoBackGestureController$(controller, getIsActive, getIsCurrent, $navigator, $T) {
      var t1 = new A._CupertinoBackGestureController(controller, $navigator, getIsActive, getIsCurrent, $T._eval$1("_CupertinoBackGestureController<0>"));
      t1._CupertinoBackGestureController$4$controller$getIsActive$getIsCurrent$navigator(controller, getIsActive, getIsCurrent, $navigator, $T);
      return t1;
    },
    _CupertinoEdgeShadowDecoration$_(_colors) {
      return new A._CupertinoEdgeShadowDecoration(_colors);
    },
    _CupertinoEdgeShadowDecoration_lerp(a, b, t) {
      var t1, t2, t3, t4, i, t5, t6;
      if (a == b)
        return a;
      if (a == null) {
        t1 = b._route$_colors;
        return t1 == null ? b : A._CupertinoEdgeShadowDecoration$_(J.toList$0$ax(J.map$1$1$ax(t1, new A._CupertinoEdgeShadowDecoration_lerp_closure(t), type$.Color)));
      }
      if (b == null) {
        t1 = a._route$_colors;
        if (t1 == null)
          t1 = a;
        else
          t1 = A._CupertinoEdgeShadowDecoration$_(J.toList$0$ax(J.map$1$1$ax(t1, new A._CupertinoEdgeShadowDecoration_lerp_closure0(t), type$.Color)));
        return t1;
      }
      t1 = B._setArrayType([], type$.JSArray_Color);
      t2 = b._route$_colors;
      t2.toString;
      t3 = J.getInterceptor$asx(t2);
      t4 = a._route$_colors;
      i = 0;
      while (true) {
        t5 = t3.get$length(t2);
        if (typeof t5 !== "number")
          return B.iae(t5);
        if (!(i < t5))
          break;
        t5 = t4 == null ? null : J.$index$asx(t4, i);
        t6 = t2;
        t6 = A.Color_lerp(t5, J.$index$asx(t6, i), t);
        t6.toString;
        t1.push(t6);
        ++i;
      }
      return A._CupertinoEdgeShadowDecoration$_(t1);
    },
    _CupertinoEdgeShadowPainter$(_decoration, onChanged) {
      return new A._CupertinoEdgeShadowPainter(_decoration, onChanged);
    },
    CupertinoRouteTransitionMixin__startPopGesture_closure0: function CupertinoRouteTransitionMixin__startPopGesture_closure0(t0) {
      this.route = t0;
    },
    CupertinoRouteTransitionMixin__startPopGesture_closure: function CupertinoRouteTransitionMixin__startPopGesture_closure(t0) {
      this.route = t0;
    },
    CupertinoRouteTransitionMixin_buildPageTransitions_closure: function CupertinoRouteTransitionMixin_buildPageTransitions_closure(t0) {
      this.route = t0;
    },
    CupertinoRouteTransitionMixin_buildPageTransitions_closure0: function CupertinoRouteTransitionMixin_buildPageTransitions_closure0(t0, t1) {
      this.route = t0;
      this.T = t1;
    },
    CupertinoPageTransition: function CupertinoPageTransition(t0, t1, t2, t3, t4) {
      var _ = this;
      _.child = t0;
      _.primaryRouteAnimation = t1;
      _.secondaryRouteAnimation = t2;
      _.linearTransition = t3;
      _.key = t4;
    },
    _CupertinoPageTransitionState: function _CupertinoPageTransitionState() {
      var _ = this;
      _.___CupertinoPageTransitionState__primaryShadowAnimation_A = _.___CupertinoPageTransitionState__secondaryPositionAnimation_A = _.___CupertinoPageTransitionState__primaryPositionAnimation_A = $;
      _._framework0$_element = _._widget = _._primaryShadowCurve = _._secondaryPositionCurve = _._primaryPositionCurve = null;
    },
    CupertinoFullscreenDialogTransition: function CupertinoFullscreenDialogTransition(t0, t1, t2, t3, t4) {
      var _ = this;
      _.primaryRouteAnimation = t0;
      _.secondaryRouteAnimation = t1;
      _.linearTransition = t2;
      _.child = t3;
      _.key = t4;
    },
    _CupertinoFullscreenDialogTransitionState: function _CupertinoFullscreenDialogTransitionState() {
      var _ = this;
      _.___CupertinoFullscreenDialogTransitionState__secondaryPositionAnimation_A = _.___CupertinoFullscreenDialogTransitionState__primaryPositionAnimation_A = $;
      _._framework0$_element = _._widget = _._secondaryPositionCurve = _._primaryPositionCurve = null;
    },
    _CupertinoBackGestureDetector: function _CupertinoBackGestureDetector(t0, t1, t2, t3, t4) {
      var _ = this;
      _.child = t0;
      _.enabledCallback = t1;
      _.onStartPopGesture = t2;
      _.key = t3;
      _.$ti = t4;
    },
    _CupertinoBackGestureDetectorState: function _CupertinoBackGestureDetectorState(t0) {
      var _ = this;
      _._backGestureController = null;
      _.___CupertinoBackGestureDetectorState__recognizer_A = $;
      _._framework0$_element = _._widget = null;
      _.$ti = t0;
    },
    _CupertinoBackGestureDetectorState_dispose_closure: function _CupertinoBackGestureDetectorState_dispose_closure(t0) {
      this.$this = t0;
    },
    _CupertinoBackGestureController: function _CupertinoBackGestureController(t0, t1, t2, t3, t4) {
      var _ = this;
      _.controller = t0;
      _.navigator = t1;
      _.getIsActive = t2;
      _.getIsCurrent = t3;
      _.$ti = t4;
    },
    _CupertinoBackGestureController_dragEnd_closure: function _CupertinoBackGestureController_dragEnd_closure(t0, t1) {
      this.$this = t0;
      this.animationStatusCallback = t1;
    },
    _CupertinoEdgeShadowDecoration: function _CupertinoEdgeShadowDecoration(t0) {
      this._route$_colors = t0;
    },
    _CupertinoEdgeShadowDecoration_lerp_closure: function _CupertinoEdgeShadowDecoration_lerp_closure(t0) {
      this.t = t0;
    },
    _CupertinoEdgeShadowDecoration_lerp_closure0: function _CupertinoEdgeShadowDecoration_lerp_closure0(t0) {
      this.t = t0;
    },
    _CupertinoEdgeShadowPainter: function _CupertinoEdgeShadowPainter(t0, t1) {
      this._route$_decoration = t0;
      this.onChanged = t1;
    },
    _resolveTextStyle(style, context) {
      var t1;
      if (style == null)
        t1 = null;
      else {
        t1 = A.CupertinoDynamicColor_maybeResolve(style.color, context);
        t1 = style.copyWith$3$backgroundColor$color$decorationColor(A.CupertinoDynamicColor_maybeResolve(style.backgroundColor, context), t1, A.CupertinoDynamicColor_maybeResolve(style.decorationColor, context));
      }
      return t1;
    },
    CupertinoTextThemeData$_raw(_defaults, _primaryColor, _textStyle, _actionTextStyle, _tabLabelTextStyle, _navTitleTextStyle, _navLargeTitleTextStyle, _navActionTextStyle, _pickerTextStyle, _dateTimePickerTextStyle) {
      return new A.CupertinoTextThemeData(_defaults, _primaryColor, _textStyle, _actionTextStyle, _tabLabelTextStyle, _navTitleTextStyle, _navLargeTitleTextStyle, _navActionTextStyle, _pickerTextStyle, _dateTimePickerTextStyle);
    },
    _TextThemeDefaultsBuilder$(labelColor, inactiveGrayColor) {
      return new A._TextThemeDefaultsBuilder(labelColor, inactiveGrayColor);
    },
    _TextThemeDefaultsBuilder__applyLabelColor(original, color) {
      return B.boolConversionCheck(J.$eq$(original.color, color)) ? original : original.copyWith$1$color(color);
    },
    CupertinoTextThemeData: function CupertinoTextThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._text_theme$_defaults = t0;
      _._primaryColor = t1;
      _._textStyle = t2;
      _._actionTextStyle = t3;
      _._tabLabelTextStyle = t4;
      _._navTitleTextStyle = t5;
      _._navLargeTitleTextStyle = t6;
      _._navActionTextStyle = t7;
      _._pickerTextStyle = t8;
      _._dateTimePickerTextStyle = t9;
    },
    _TextThemeDefaultsBuilder: function _TextThemeDefaultsBuilder(t0, t1) {
      this.labelColor = t0;
      this.inactiveGrayColor = t1;
    },
    _CupertinoTextThemeData_Object_Diagnosticable: function _CupertinoTextThemeData_Object_Diagnosticable() {
    },
    CupertinoTheme$(child, data) {
      return new A.CupertinoTheme(data, child, null);
    },
    CupertinoTheme_maybeBrightnessOf(context) {
      var inheritedTheme = context.dependOnInheritedWidgetOfExactType$1$0(type$.InheritedCupertinoTheme),
        t1 = inheritedTheme == null ? null : inheritedTheme.theme.data.get$brightness();
      return t1 == null ? A.MediaQuery_maybePlatformBrightnessOf(context) : t1;
    },
    InheritedCupertinoTheme$(child, theme) {
      return new A.InheritedCupertinoTheme(theme, child, null);
    },
    CupertinoThemeData$_rawWithDefaults(brightness, primaryColor, primaryContrastingColor, textTheme, barBackgroundColor, scaffoldBackgroundColor, applyThemeToAll, _defaults) {
      return new A.CupertinoThemeData(_defaults, brightness, primaryColor, primaryContrastingColor, textTheme, barBackgroundColor, scaffoldBackgroundColor, applyThemeToAll);
    },
    NoDefaultCupertinoThemeData$(applyThemeToAll, barBackgroundColor, brightness, primaryColor, primaryContrastingColor, scaffoldBackgroundColor, textTheme) {
      return new A.NoDefaultCupertinoThemeData(brightness, primaryColor, primaryContrastingColor, textTheme, barBackgroundColor, scaffoldBackgroundColor, applyThemeToAll);
    },
    _CupertinoThemeDefaults$(brightness, primaryColor, primaryContrastingColor, barBackgroundColor, scaffoldBackgroundColor, applyThemeToAll, textThemeDefaults) {
      return new A._CupertinoThemeDefaults(brightness, primaryColor, primaryContrastingColor, barBackgroundColor, scaffoldBackgroundColor, applyThemeToAll, textThemeDefaults);
    },
    _CupertinoTextThemeDefaults$(labelColor, inactiveGray) {
      return new A._CupertinoTextThemeDefaults(labelColor, inactiveGray);
    },
    _DefaultCupertinoTextThemeData$(inactiveGray, labelColor, primaryColor) {
      var _null = null;
      return new A._DefaultCupertinoTextThemeData(labelColor, inactiveGray, C._TextThemeDefaultsBuilder_j4A, primaryColor, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    CupertinoTheme: function CupertinoTheme(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    InheritedCupertinoTheme: function InheritedCupertinoTheme(t0, t1, t2) {
      this.theme = t0;
      this.child = t1;
      this.key = t2;
    },
    CupertinoThemeData: function CupertinoThemeData(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._defaults = t0;
      _.brightness = t1;
      _.primaryColor = t2;
      _.primaryContrastingColor = t3;
      _.textTheme = t4;
      _.barBackgroundColor = t5;
      _.scaffoldBackgroundColor = t6;
      _.applyThemeToAll = t7;
    },
    CupertinoThemeData_resolveFrom_convertColor: function CupertinoThemeData_resolveFrom_convertColor(t0) {
      this.context = t0;
    },
    NoDefaultCupertinoThemeData: function NoDefaultCupertinoThemeData(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.brightness = t0;
      _.primaryColor = t1;
      _.primaryContrastingColor = t2;
      _.textTheme = t3;
      _.barBackgroundColor = t4;
      _.scaffoldBackgroundColor = t5;
      _.applyThemeToAll = t6;
    },
    NoDefaultCupertinoThemeData_resolveFrom_convertColor: function NoDefaultCupertinoThemeData_resolveFrom_convertColor(t0) {
      this.context = t0;
    },
    _CupertinoThemeDefaults: function _CupertinoThemeDefaults(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.brightness = t0;
      _.primaryColor = t1;
      _.primaryContrastingColor = t2;
      _.barBackgroundColor = t3;
      _.scaffoldBackgroundColor = t4;
      _.applyThemeToAll = t5;
      _.textThemeDefaults = t6;
    },
    _CupertinoThemeDefaults_resolveFrom_convertColor: function _CupertinoThemeDefaults_resolveFrom_convertColor(t0) {
      this.context = t0;
    },
    _CupertinoTextThemeDefaults: function _CupertinoTextThemeDefaults(t0, t1) {
      this.labelColor = t0;
      this.inactiveGray = t1;
    },
    _DefaultCupertinoTextThemeData: function _DefaultCupertinoTextThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.labelColor = t0;
      _.inactiveGray = t1;
      _._text_theme$_defaults = t2;
      _._primaryColor = t3;
      _._textStyle = t4;
      _._actionTextStyle = t5;
      _._tabLabelTextStyle = t6;
      _._navTitleTextStyle = t7;
      _._navLargeTitleTextStyle = t8;
      _._navActionTextStyle = t9;
      _._pickerTextStyle = t10;
      _._dateTimePickerTextStyle = t11;
    },
    _CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable: function _CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable() {
    },
    _MergingListenable$(_children) {
      return new A._MergingListenable(_children);
    },
    ValueListenable: function ValueListenable() {
    },
    _MergingListenable: function _MergingListenable(t0) {
      this._change_notifier$_children = t0;
    },
    FlagsSummary$($name, value, ifEmpty, $T) {
      var _null = null;
      return new A.FlagsSummary(_null, true, _null, ifEmpty, _null, false, value, D.C__NoDefaultValue, D.DiagnosticLevel_3, $name, true, true, _null, D.DiagnosticsTreeStyle_8, $T._eval$1("FlagsSummary<0>"));
    },
    FlagsSummary: function FlagsSummary(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _._description = t0;
      _.allowWrap = t1;
      _.ifNull = t2;
      _.ifEmpty = t3;
      _.tooltip = t4;
      _.missingIfNull = t5;
      _._diagnostics$_value = t6;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t7;
      _._defaultLevel = t8;
      _.name = t9;
      _.showSeparator = t10;
      _.showName = t11;
      _.linePrefix = t12;
      _.style = t13;
      _.$ti = t14;
    },
    FlagsSummary__hasNonNullEntry_closure: function FlagsSummary__hasNonNullEntry_closure(t0) {
      this.$this = t0;
    },
    FlagsSummary__formattedValues_closure: function FlagsSummary__formattedValues_closure(t0) {
      this.$this = t0;
    },
    FlagsSummary__formattedValues_closure0: function FlagsSummary__formattedValues_closure0(t0) {
      this.$this = t0;
    },
    ObserverList$($T) {
      return new A.ObserverList(B._setArrayType([], $T._eval$1("JSArray<0>")), $T._eval$1("ObserverList<0>"));
    },
    ObserverList: function ObserverList(t0, t1) {
      var _ = this;
      _._list = t0;
      _._observer_list$_isDirty = false;
      _.__ObserverList__set_FI = $;
      _.$ti = t1;
    },
    GestureArenaMember: function GestureArenaMember() {
    },
    DragDownDetails$(globalPosition, localPosition) {
      return new A.DragDownDetails(globalPosition);
    },
    DragStartDetails$(globalPosition, kind, localPosition, sourceTimeStamp) {
      return new A.DragStartDetails(globalPosition);
    },
    DragUpdateDetails$(delta, globalPosition, localPosition, primaryDelta, sourceTimeStamp) {
      return new A.DragUpdateDetails(delta, primaryDelta);
    },
    DragEndDetails$(globalPosition, localPosition, primaryVelocity, velocity) {
      return new A.DragEndDetails(velocity);
    },
    DragDownDetails: function DragDownDetails(t0) {
      this.globalPosition = t0;
    },
    DragStartDetails: function DragStartDetails(t0) {
      this.globalPosition = t0;
    },
    DragUpdateDetails: function DragUpdateDetails(t0, t1) {
      this.delta = t0;
      this.primaryDelta = t1;
    },
    DragEndDetails: function DragEndDetails(t0) {
      this.velocity = t0;
    },
    LongPressDownDetails$(globalPosition, kind, localPosition) {
      return new A.LongPressDownDetails();
    },
    LongPressStartDetails$(globalPosition, localPosition) {
      return new A.LongPressStartDetails();
    },
    LongPressMoveUpdateDetails$(globalPosition, localOffsetFromOrigin, localPosition, offsetFromOrigin) {
      return new A.LongPressMoveUpdateDetails();
    },
    LongPressEndDetails$(globalPosition, localPosition, velocity) {
      return new A.LongPressEndDetails();
    },
    LongPressGestureRecognizer$(debugOwner, supportedDevices) {
      var t1 = type$.int;
      t1 = new A.LongPressGestureRecognizer(D.Duration_500000, null, C.GestureRecognizerState_0, B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), B.HashSet_HashSet(t1), debugOwner, supportedDevices, A.long_press_LongPressGestureRecognizer__defaultButtonAcceptBehavior$closure(), B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
      t1.GestureRecognizer$3$allowedButtonsFilter$debugOwner$supportedDevices(A.long_press_LongPressGestureRecognizer__defaultButtonAcceptBehavior$closure(), debugOwner, supportedDevices);
      return t1;
    },
    LongPressGestureRecognizer__defaultButtonAcceptBehavior(buttons) {
      B._asInt(buttons);
      return buttons === 1 || buttons === 2 || buttons === 4;
    },
    LongPressDownDetails: function LongPressDownDetails() {
    },
    LongPressStartDetails: function LongPressStartDetails() {
    },
    LongPressMoveUpdateDetails: function LongPressMoveUpdateDetails() {
    },
    LongPressEndDetails: function LongPressEndDetails() {
    },
    LongPressGestureRecognizer: function LongPressGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._longPressAccepted = false;
      _._velocityTracker = _.onTertiaryLongPressEnd = _.onTertiaryLongPressUp = _.onTertiaryLongPressMoveUpdate = _.onTertiaryLongPressStart = _.onTertiaryLongPress = _.onTertiaryLongPressCancel = _.onTertiaryLongPressDown = _.onSecondaryLongPressEnd = _.onSecondaryLongPressUp = _.onSecondaryLongPressMoveUpdate = _.onSecondaryLongPressStart = _.onSecondaryLongPress = _.onSecondaryLongPressCancel = _.onSecondaryLongPressDown = _.onLongPressEnd = _.onLongPressUp = _.onLongPressMoveUpdate = _.onLongPressStart = _.onLongPress = _.onLongPressCancel = _.onLongPressDown = _._long_press$_initialButtons = _._longPressOrigin = null;
      _.deadline = t0;
      _.postAcceptSlopTolerance = t1;
      _._recognizer$_state = t2;
      _._recognizer$_initialPosition = _._primaryPointer = null;
      _._gestureAccepted = false;
      _._recognizer$_timer = null;
      _._recognizer$_entries = t3;
      _._trackedPointers = t4;
      _.debugOwner = t5;
      _.gestureSettings = null;
      _.supportedDevices = t6;
      _.allowedButtonsFilter = t7;
      _._pointerToKind = t8;
    },
    LongPressGestureRecognizer__checkLongPressDown_closure: function LongPressGestureRecognizer__checkLongPressDown_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    LongPressGestureRecognizer__checkLongPressDown_closure0: function LongPressGestureRecognizer__checkLongPressDown_closure0(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    LongPressGestureRecognizer__checkLongPressDown_closure1: function LongPressGestureRecognizer__checkLongPressDown_closure1(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    LongPressGestureRecognizer__checkLongPressStart_closure: function LongPressGestureRecognizer__checkLongPressStart_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    LongPressGestureRecognizer__checkLongPressStart_closure0: function LongPressGestureRecognizer__checkLongPressStart_closure0(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    LongPressGestureRecognizer__checkLongPressStart_closure1: function LongPressGestureRecognizer__checkLongPressStart_closure1(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    LongPressGestureRecognizer__checkLongPressMoveUpdate_closure: function LongPressGestureRecognizer__checkLongPressMoveUpdate_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    LongPressGestureRecognizer__checkLongPressMoveUpdate_closure0: function LongPressGestureRecognizer__checkLongPressMoveUpdate_closure0(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    LongPressGestureRecognizer__checkLongPressMoveUpdate_closure1: function LongPressGestureRecognizer__checkLongPressMoveUpdate_closure1(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    LongPressGestureRecognizer__checkLongPressEnd_closure: function LongPressGestureRecognizer__checkLongPressEnd_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    LongPressGestureRecognizer__checkLongPressEnd_closure0: function LongPressGestureRecognizer__checkLongPressEnd_closure0(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    LongPressGestureRecognizer__checkLongPressEnd_closure1: function LongPressGestureRecognizer__checkLongPressEnd_closure1(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    _Vector$(size) {
      return new A._Vector(0, size, E.NativeFloat64List_NativeFloat64List(size));
    },
    _Vector$fromVOL(values, offset, $length) {
      return new A._Vector(offset, $length, values);
    },
    _Matrix$(rows, cols) {
      return new A._Matrix(cols, E.NativeFloat64List_NativeFloat64List(rows * cols));
    },
    PolynomialFit$(degree) {
      return new A.PolynomialFit(E.NativeFloat64List_NativeFloat64List(degree + 1));
    },
    LeastSquaresSolver$(x, y, w) {
      return new A.LeastSquaresSolver(x, y, w);
    },
    _Vector: function _Vector(t0, t1, t2) {
      this._lsq_solver$_offset = t0;
      this._lsq_solver$_length = t1;
      this._lsq_solver$_elements = t2;
    },
    _Matrix: function _Matrix(t0, t1) {
      this._columns = t0;
      this._lsq_solver$_elements = t1;
    },
    PolynomialFit: function PolynomialFit(t0) {
      this.coefficients = t0;
      this.__PolynomialFit_confidence_A = $;
    },
    PolynomialFit_toString_closure: function PolynomialFit_toString_closure() {
    },
    LeastSquaresSolver: function LeastSquaresSolver(t0, t1, t2) {
      this.x = t0;
      this.y = t1;
      this.w = t2;
    },
    DragGestureRecognizer__defaultBuilder($event) {
      return A.VelocityTracker$withKind(type$.PointerEvent._as($event).get$kind());
    },
    DragGestureRecognizer__defaultButtonAcceptBehavior(buttons) {
      return B._asInt(buttons) === 1;
    },
    HorizontalDragGestureRecognizer$(debugOwner, supportedDevices) {
      var t1 = type$.int;
      t1 = new A.HorizontalDragGestureRecognizer(C.DragStartBehavior_1, C.MultitouchDragStrategy_0, C._DragState_0, B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.VelocityTracker), B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Offset), D.Offset_0_0, B._setArrayType([], type$.JSArray_int), B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), B.HashSet_HashSet(t1), debugOwner, supportedDevices, A.monodrag_DragGestureRecognizer__defaultButtonAcceptBehavior$closure(), B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
      t1.GestureRecognizer$3$allowedButtonsFilter$debugOwner$supportedDevices(A.monodrag_DragGestureRecognizer__defaultButtonAcceptBehavior$closure(), debugOwner, supportedDevices);
      return t1;
    },
    PanGestureRecognizer$(debugOwner, supportedDevices) {
      var t1 = type$.int;
      t1 = new A.PanGestureRecognizer(C.DragStartBehavior_1, C.MultitouchDragStrategy_0, C._DragState_0, B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.VelocityTracker), B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Offset), D.Offset_0_0, B._setArrayType([], type$.JSArray_int), B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), B.HashSet_HashSet(t1), debugOwner, supportedDevices, A.monodrag_DragGestureRecognizer__defaultButtonAcceptBehavior$closure(), B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
      t1.GestureRecognizer$3$allowedButtonsFilter$debugOwner$supportedDevices(A.monodrag_DragGestureRecognizer__defaultButtonAcceptBehavior$closure(), debugOwner, supportedDevices);
      return t1;
    },
    _DragState: function _DragState(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    DragGestureRecognizer: function DragGestureRecognizer() {
    },
    DragGestureRecognizer__checkDown_closure: function DragGestureRecognizer__checkDown_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    DragGestureRecognizer__checkStart_closure: function DragGestureRecognizer__checkStart_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    DragGestureRecognizer__checkUpdate_closure: function DragGestureRecognizer__checkUpdate_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    DragGestureRecognizer__checkEnd_closure: function DragGestureRecognizer__checkEnd_closure() {
    },
    DragGestureRecognizer__checkEnd_closure0: function DragGestureRecognizer__checkEnd_closure0(t0, t1) {
      this._box_0 = t0;
      this.estimate = t1;
    },
    DragGestureRecognizer__checkEnd_closure1: function DragGestureRecognizer__checkEnd_closure1(t0) {
      this.estimate = t0;
    },
    DragGestureRecognizer__checkEnd_closure2: function DragGestureRecognizer__checkEnd_closure2(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    HorizontalDragGestureRecognizer: function HorizontalDragGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.dragStartBehavior = t0;
      _.multitouchDragStrategy = t1;
      _.onCancel = _.onEnd = _.onUpdate = _.onStart = _.onDown = null;
      _._monodrag$_state = t2;
      _.__DragGestureRecognizer__finalPosition_A = _.__DragGestureRecognizer__pendingDragOffset_A = _.__DragGestureRecognizer__initialPosition_A = $;
      _._monodrag$_lastTransform = _._initialButtons = _._lastPendingEventTimestamp = null;
      _.__DragGestureRecognizer__globalDistanceMoved_A = $;
      _._hasDragThresholdBeenMet = false;
      _._velocityTrackers = t3;
      _._moveDeltaBeforeFrame = t4;
      _._frameTimeStamp = null;
      _._lastUpdatedDeltaForPan = t5;
      _._acceptedActivePointers = t6;
      _._activePointer = null;
      _._recognizer$_entries = t7;
      _._trackedPointers = t8;
      _.debugOwner = t9;
      _.gestureSettings = null;
      _.supportedDevices = t10;
      _.allowedButtonsFilter = t11;
      _._pointerToKind = t12;
    },
    PanGestureRecognizer: function PanGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.dragStartBehavior = t0;
      _.multitouchDragStrategy = t1;
      _.onCancel = _.onEnd = _.onUpdate = _.onStart = _.onDown = null;
      _._monodrag$_state = t2;
      _.__DragGestureRecognizer__finalPosition_A = _.__DragGestureRecognizer__pendingDragOffset_A = _.__DragGestureRecognizer__initialPosition_A = $;
      _._monodrag$_lastTransform = _._initialButtons = _._lastPendingEventTimestamp = null;
      _.__DragGestureRecognizer__globalDistanceMoved_A = $;
      _._hasDragThresholdBeenMet = false;
      _._velocityTrackers = t3;
      _._moveDeltaBeforeFrame = t4;
      _._frameTimeStamp = null;
      _._lastUpdatedDeltaForPan = t5;
      _._acceptedActivePointers = t6;
      _._activePointer = null;
      _._recognizer$_entries = t7;
      _._trackedPointers = t8;
      _.debugOwner = t9;
      _.gestureSettings = null;
      _.supportedDevices = t10;
      _.allowedButtonsFilter = t11;
      _._pointerToKind = t12;
    },
    _DragDirection: function _DragDirection(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _CountdownZoned$(duration) {
      var t1 = new A._CountdownZoned();
      t1._CountdownZoned$1$duration(duration);
      return t1;
    },
    _TapTracker$(doubleTapMinTime, entry, $event, gestureSettings) {
      return new A._TapTracker($event.get$pointer(), entry, $event.get$position(), $event.get$buttons(), A._CountdownZoned$(doubleTapMinTime));
    },
    DoubleTapGestureRecognizer$(debugOwner, supportedDevices) {
      var t1 = type$.int;
      t1 = new A.DoubleTapGestureRecognizer(B.LinkedHashMap_LinkedHashMap$_empty(t1, type$._TapTracker), debugOwner, supportedDevices, A.multitap_DoubleTapGestureRecognizer__defaultButtonAcceptBehavior$closure(), B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
      t1.GestureRecognizer$3$allowedButtonsFilter$debugOwner$supportedDevices(A.multitap_DoubleTapGestureRecognizer__defaultButtonAcceptBehavior$closure(), debugOwner, supportedDevices);
      return t1;
    },
    DoubleTapGestureRecognizer__defaultButtonAcceptBehavior(buttons) {
      return B._asInt(buttons) === 1;
    },
    _CountdownZoned: function _CountdownZoned() {
      this._timeout = false;
    },
    _TapTracker: function _TapTracker(t0, t1, t2, t3, t4) {
      var _ = this;
      _.pointer = t0;
      _.entry = t1;
      _._initialGlobalPosition = t2;
      _.initialButtons = t3;
      _._doubleTapMinTimeCountdown = t4;
      _._isTrackingPointer = false;
    },
    DoubleTapGestureRecognizer: function DoubleTapGestureRecognizer(t0, t1, t2, t3, t4) {
      var _ = this;
      _._firstTap = _._doubleTapTimer = _.onDoubleTapCancel = _.onDoubleTap = _.onDoubleTapDown = null;
      _._trackers = t0;
      _.debugOwner = t1;
      _.gestureSettings = null;
      _.supportedDevices = t2;
      _.allowedButtonsFilter = t3;
      _._pointerToKind = t4;
    },
    DoubleTapGestureRecognizer_addAllowedPointer_closure: function DoubleTapGestureRecognizer_addAllowedPointer_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    GestureRecognizer__defaultButtonAcceptBehavior(buttons) {
      B._asInt(buttons);
      return true;
    },
    OffsetPair$(global, local) {
      return new A.OffsetPair(local, global);
    },
    OffsetPair$fromEventPosition($event) {
      return new A.OffsetPair($event.get$localPosition(), $event.get$position());
    },
    DragStartBehavior: function DragStartBehavior(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    MultitouchDragStrategy: function MultitouchDragStrategy(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    GestureRecognizer: function GestureRecognizer() {
    },
    OneSequenceGestureRecognizer: function OneSequenceGestureRecognizer() {
    },
    GestureRecognizerState: function GestureRecognizerState(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    PrimaryPointerGestureRecognizer: function PrimaryPointerGestureRecognizer() {
    },
    PrimaryPointerGestureRecognizer_addAllowedPointer_closure: function PrimaryPointerGestureRecognizer_addAllowedPointer_closure(t0, t1) {
      this.$this = t0;
      this.event = t1;
    },
    OffsetPair: function OffsetPair(t0, t1) {
      this.local = t0;
      this.global = t1;
    },
    _GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin: function _GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin() {
    },
    TapDownDetails$(globalPosition, kind, localPosition) {
      return new A.TapDownDetails(globalPosition);
    },
    TapUpDetails$(globalPosition, kind, localPosition) {
      return new A.TapUpDetails();
    },
    TapGestureRecognizer$(debugOwner, supportedDevices) {
      var t1 = type$.int;
      t1 = new A.TapGestureRecognizer(D.Duration_100000, 18, C.GestureRecognizerState_0, B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), B.HashSet_HashSet(t1), debugOwner, supportedDevices, A.recognizer_GestureRecognizer__defaultButtonAcceptBehavior$closure(), B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
      t1.GestureRecognizer$3$allowedButtonsFilter$debugOwner$supportedDevices(A.recognizer_GestureRecognizer__defaultButtonAcceptBehavior$closure(), debugOwner, supportedDevices);
      return t1;
    },
    TapDownDetails: function TapDownDetails(t0) {
      this.globalPosition = t0;
    },
    TapUpDetails: function TapUpDetails() {
    },
    BaseTapGestureRecognizer: function BaseTapGestureRecognizer() {
    },
    TapGestureRecognizer: function TapGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.onTertiaryTapCancel = _.onTertiaryTapUp = _.onTertiaryTapDown = _.onSecondaryTapCancel = _.onSecondaryTapUp = _.onSecondaryTapDown = _.onSecondaryTap = _.onTapCancel = _.onTap = _.onTapUp = _.onTapDown = null;
      _._wonArenaForPrimaryPointer = _._sentTapDown = false;
      _._up = _._down = null;
      _.deadline = t0;
      _.postAcceptSlopTolerance = t1;
      _._recognizer$_state = t2;
      _._recognizer$_initialPosition = _._primaryPointer = null;
      _._gestureAccepted = false;
      _._recognizer$_timer = null;
      _._recognizer$_entries = t3;
      _._trackedPointers = t4;
      _.debugOwner = t5;
      _.gestureSettings = null;
      _.supportedDevices = t6;
      _.allowedButtonsFilter = t7;
      _._pointerToKind = t8;
    },
    TapGestureRecognizer_handleTapDown_closure: function TapGestureRecognizer_handleTapDown_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    TapGestureRecognizer_handleTapDown_closure0: function TapGestureRecognizer_handleTapDown_closure0(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    TapGestureRecognizer_handleTapDown_closure1: function TapGestureRecognizer_handleTapDown_closure1(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    TapGestureRecognizer_handleTapUp_closure: function TapGestureRecognizer_handleTapUp_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    TapGestureRecognizer_handleTapUp_closure0: function TapGestureRecognizer_handleTapUp_closure0(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    TapGestureRecognizer_handleTapUp_closure1: function TapGestureRecognizer_handleTapUp_closure1(t0) {
      this.$this = t0;
    },
    TapGestureRecognizer_handleTapUp_closure2: function TapGestureRecognizer_handleTapUp_closure2(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    Velocity$(pixelsPerSecond) {
      return new A.Velocity(pixelsPerSecond);
    },
    VelocityEstimate$(confidence, duration, offset, pixelsPerSecond) {
      return new A.VelocityEstimate(pixelsPerSecond, confidence, duration, offset);
    },
    _PointAtTime$(point, time) {
      return new A._PointAtTime(time, point);
    },
    VelocityTracker$withKind(kind) {
      return new A.VelocityTracker(kind, B.List_List$filled(20, null, false, type$.nullable__PointAtTime));
    },
    Velocity: function Velocity(t0) {
      this.pixelsPerSecond = t0;
    },
    VelocityEstimate: function VelocityEstimate(t0, t1, t2, t3) {
      var _ = this;
      _.pixelsPerSecond = t0;
      _.confidence = t1;
      _.duration = t2;
      _.offset = t3;
    },
    _PointAtTime: function _PointAtTime(t0, t1) {
      this.time = t0;
      this.point = t1;
    },
    VelocityTracker: function VelocityTracker(t0, t1) {
      var _ = this;
      _.kind = t0;
      _._stopwatch = null;
      _._samples = t1;
      _._velocity_tracker$_index = 0;
    },
    ActionIconThemeData$(backButtonIconBuilder, closeButtonIconBuilder, drawerButtonIconBuilder, endDrawerButtonIconBuilder) {
      return new A.ActionIconThemeData(backButtonIconBuilder, closeButtonIconBuilder, drawerButtonIconBuilder, endDrawerButtonIconBuilder);
    },
    ActionIconThemeData_lerp(a, b, t) {
      var t2, t3, t4, t5, _null = null,
        t1 = a == null;
      if (t1 && b == null)
        return _null;
      t2 = t < 0.5;
      if (t2)
        t3 = t1 ? _null : a.backButtonIconBuilder;
      else
        t3 = b == null ? _null : b.backButtonIconBuilder;
      if (t2)
        t4 = t1 ? _null : a.closeButtonIconBuilder;
      else
        t4 = b == null ? _null : b.closeButtonIconBuilder;
      if (t2)
        t5 = t1 ? _null : a.drawerButtonIconBuilder;
      else
        t5 = b == null ? _null : b.drawerButtonIconBuilder;
      if (t2)
        t1 = t1 ? _null : a.endDrawerButtonIconBuilder;
      else
        t1 = b == null ? _null : b.endDrawerButtonIconBuilder;
      return A.ActionIconThemeData$(t3, t4, t5, t1);
    },
    ActionIconThemeData: function ActionIconThemeData(t0, t1, t2, t3) {
      var _ = this;
      _.backButtonIconBuilder = t0;
      _.closeButtonIconBuilder = t1;
      _.drawerButtonIconBuilder = t2;
      _.endDrawerButtonIconBuilder = t3;
    },
    _ActionIconThemeData_Object_Diagnosticable: function _ActionIconThemeData_Object_Diagnosticable() {
    },
    MaterialApp$(debugShowCheckedModeBanner, $home) {
      return new A.MaterialApp($home, debugShowCheckedModeBanner, null);
    },
    MaterialApp_createMaterialHeroController() {
      return A.HeroController$(new A.MaterialApp_createMaterialHeroController_closure());
    },
    _MaterialAppState$() {
      return new A._MaterialAppState();
    },
    ThemeMode: function ThemeMode(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    MaterialApp: function MaterialApp(t0, t1, t2) {
      this.home = t0;
      this.debugShowCheckedModeBanner = t1;
      this.key = t2;
    },
    MaterialApp_createMaterialHeroController_closure: function MaterialApp_createMaterialHeroController_closure() {
    },
    MaterialScrollBehavior: function MaterialScrollBehavior() {
    },
    _MaterialAppState: function _MaterialAppState() {
      this.___MaterialAppState__heroController_A = $;
      this._framework0$_element = this._widget = null;
    },
    _MaterialAppState__buildWidgetApp_closure: function _MaterialAppState__buildWidgetApp_closure() {
    },
    _MaterialAppState_build_closure: function _MaterialAppState_build_closure() {
    },
    AppBarTheme$(actionsIconTheme, backgroundColor, centerTitle, elevation, foregroundColor, iconTheme, scrolledUnderElevation, shadowColor, shape, surfaceTintColor, systemOverlayStyle, titleSpacing, titleTextStyle, toolbarHeight, toolbarTextStyle) {
      return new A.AppBarTheme(backgroundColor == null ? null : backgroundColor, foregroundColor, elevation, scrolledUnderElevation, shadowColor, surfaceTintColor, shape, iconTheme, actionsIconTheme, centerTitle, titleSpacing, toolbarHeight, toolbarTextStyle, titleTextStyle, systemOverlayStyle);
    },
    AppBarTheme_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, _null = null;
      if (a == b && a != null)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.backgroundColor;
      t3 = b == null;
      t2 = A.Color_lerp(t2, t3 ? _null : b.backgroundColor, t);
      t4 = t1 ? _null : a.foregroundColor;
      t4 = A.Color_lerp(t4, t3 ? _null : b.foregroundColor, t);
      t5 = t1 ? _null : a.elevation;
      t5 = A.lerpDouble(t5, t3 ? _null : b.elevation, t);
      t6 = t1 ? _null : a.scrolledUnderElevation;
      t6 = A.lerpDouble(t6, t3 ? _null : b.scrolledUnderElevation, t);
      t7 = t1 ? _null : a.shadowColor;
      t7 = A.Color_lerp(t7, t3 ? _null : b.shadowColor, t);
      t8 = t1 ? _null : a.surfaceTintColor;
      t8 = A.Color_lerp(t8, t3 ? _null : b.surfaceTintColor, t);
      t9 = t1 ? _null : a.shape;
      t9 = A.ShapeBorder_lerp(t9, t3 ? _null : b.shape, t);
      t10 = t1 ? _null : a.iconTheme;
      t10 = A.IconThemeData_lerp(t10, t3 ? _null : b.iconTheme, t);
      t11 = t1 ? _null : a.actionsIconTheme;
      t11 = A.IconThemeData_lerp(t11, t3 ? _null : b.actionsIconTheme, t);
      t12 = t < 0.5;
      if (t12)
        t13 = t1 ? _null : a.centerTitle;
      else
        t13 = t3 ? _null : b.centerTitle;
      t14 = t1 ? _null : a.titleSpacing;
      t14 = A.lerpDouble(t14, t3 ? _null : b.titleSpacing, t);
      t15 = t1 ? _null : a.toolbarHeight;
      t15 = A.lerpDouble(t15, t3 ? _null : b.toolbarHeight, t);
      t16 = t1 ? _null : a.toolbarTextStyle;
      t16 = A.TextStyle_lerp(t16, t3 ? _null : b.toolbarTextStyle, t);
      t17 = t1 ? _null : a.titleTextStyle;
      t17 = A.TextStyle_lerp(t17, t3 ? _null : b.titleTextStyle, t);
      if (t12)
        t1 = t1 ? _null : a.systemOverlayStyle;
      else
        t1 = t3 ? _null : b.systemOverlayStyle;
      return A.AppBarTheme$(t11, t2, t13, t5, t4, t10, t6, t7, t9, t8, t1, t14, t17, t15, t16);
    },
    AppBarTheme: function AppBarTheme(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.backgroundColor = t0;
      _.foregroundColor = t1;
      _.elevation = t2;
      _.scrolledUnderElevation = t3;
      _.shadowColor = t4;
      _.surfaceTintColor = t5;
      _.shape = t6;
      _.iconTheme = t7;
      _.actionsIconTheme = t8;
      _.centerTitle = t9;
      _.titleSpacing = t10;
      _.toolbarHeight = t11;
      _.toolbarTextStyle = t12;
      _.titleTextStyle = t13;
      _.systemOverlayStyle = t14;
    },
    _AppBarTheme_Object_Diagnosticable: function _AppBarTheme_Object_Diagnosticable() {
    },
    MaterialPointArcTween$(begin, end) {
      return new A.MaterialPointArcTween(begin, end);
    },
    _maxBy(input, keyFunc, $T) {
      var t1, maxKey, value, key,
        maxValue = B._Cell$named("maxValue");
      for (t1 = J.get$iterator$ax(input), maxKey = null; B.boolConversionCheck(t1.moveNext$0());) {
        value = t1.get$current();
        key = keyFunc.call$1(value);
        if (maxKey == null || key > maxKey) {
          maxValue.set$value(value);
          maxKey = key;
        }
      }
      return maxValue.readLocal$1$0($T);
    },
    MaterialRectArcTween$(begin, end) {
      return new A.MaterialRectArcTween(begin, end);
    },
    MaterialPointArcTween: function MaterialPointArcTween(t0, t1) {
      var _ = this;
      _._arc$_dirty = true;
      _._endAngle = _._beginAngle = _._arc$_radius = _._center = null;
      _.begin = t0;
      _.end = t1;
    },
    MaterialPointArcTween__initialize_sweepAngle: function MaterialPointArcTween__initialize_sweepAngle(t0, t1) {
      this.$this = t0;
      this.distanceFromAtoB = t1;
    },
    _CornerId: function _CornerId(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _Diagonal: function _Diagonal(t0, t1) {
      this.beginId = t0;
      this.endId = t1;
    },
    MaterialRectArcTween: function MaterialRectArcTween(t0, t1) {
      var _ = this;
      _._arc$_dirty = true;
      _.__MaterialRectArcTween__endArc_A = _.__MaterialRectArcTween__beginArc_A = $;
      _.begin = t0;
      _.end = t1;
    },
    MaterialRectArcTween__initialize_closure: function MaterialRectArcTween__initialize_closure(t0, t1) {
      this.$this = t0;
      this.centersVector = t1;
    },
    BadgeThemeData$(alignment, backgroundColor, largeSize, offset, padding, smallSize, textColor, textStyle) {
      return new A.BadgeThemeData(backgroundColor, textColor, smallSize, largeSize, textStyle, padding, alignment, offset);
    },
    BadgeThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, _null = null;
      if (a == b && a != null)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.backgroundColor;
      t3 = b == null;
      t2 = A.Color_lerp(t2, t3 ? _null : b.backgroundColor, t);
      t4 = t1 ? _null : a.textColor;
      t4 = A.Color_lerp(t4, t3 ? _null : b.textColor, t);
      t5 = t1 ? _null : a.smallSize;
      t5 = A.lerpDouble(t5, t3 ? _null : b.smallSize, t);
      t6 = t1 ? _null : a.largeSize;
      t6 = A.lerpDouble(t6, t3 ? _null : b.largeSize, t);
      t7 = t1 ? _null : a.textStyle;
      t7 = A.TextStyle_lerp(t7, t3 ? _null : b.textStyle, t);
      t8 = t1 ? _null : a.padding;
      t8 = A.EdgeInsetsGeometry_lerp(t8, t3 ? _null : b.padding, t);
      t9 = t1 ? _null : a.alignment;
      t9 = A.AlignmentGeometry_lerp(t9, t3 ? _null : b.alignment, t);
      t1 = t1 ? _null : a.offset;
      return A.BadgeThemeData$(t9, t2, t6, A.Offset_lerp(t1, t3 ? _null : b.offset, t), t8, t5, t4, t7);
    },
    BadgeThemeData: function BadgeThemeData(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.backgroundColor = t0;
      _.textColor = t1;
      _.smallSize = t2;
      _.largeSize = t3;
      _.textStyle = t4;
      _.padding = t5;
      _.alignment = t6;
      _.offset = t7;
    },
    _BadgeThemeData_Object_Diagnosticable: function _BadgeThemeData_Object_Diagnosticable() {
    },
    MaterialBannerThemeData$(backgroundColor, contentTextStyle, dividerColor, elevation, leadingPadding, padding, shadowColor, surfaceTintColor) {
      return new A.MaterialBannerThemeData(backgroundColor, surfaceTintColor, shadowColor, dividerColor, contentTextStyle, elevation, padding, leadingPadding);
    },
    MaterialBannerThemeData_lerp(a, b, t) {
      var t4, t5, t6, t7, t8, t9, _null = null,
        t1 = a == null,
        t2 = t1 ? _null : a.backgroundColor,
        t3 = b == null;
      t2 = A.Color_lerp(t2, t3 ? _null : b.backgroundColor, t);
      t4 = t1 ? _null : a.surfaceTintColor;
      t4 = A.Color_lerp(t4, t3 ? _null : b.surfaceTintColor, t);
      t5 = t1 ? _null : a.shadowColor;
      t5 = A.Color_lerp(t5, t3 ? _null : b.shadowColor, t);
      t6 = t1 ? _null : a.dividerColor;
      t6 = A.Color_lerp(t6, t3 ? _null : b.dividerColor, t);
      t7 = t1 ? _null : a.contentTextStyle;
      t7 = A.TextStyle_lerp(t7, t3 ? _null : b.contentTextStyle, t);
      t8 = t1 ? _null : a.elevation;
      t8 = A.lerpDouble(t8, t3 ? _null : b.elevation, t);
      t9 = t1 ? _null : a.padding;
      t9 = A.EdgeInsetsGeometry_lerp(t9, t3 ? _null : b.padding, t);
      t1 = t1 ? _null : a.leadingPadding;
      return A.MaterialBannerThemeData$(t2, t7, t6, t8, A.EdgeInsetsGeometry_lerp(t1, t3 ? _null : b.leadingPadding, t), t9, t5, t4);
    },
    MaterialBannerThemeData: function MaterialBannerThemeData(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.backgroundColor = t0;
      _.surfaceTintColor = t1;
      _.shadowColor = t2;
      _.dividerColor = t3;
      _.contentTextStyle = t4;
      _.elevation = t5;
      _.padding = t6;
      _.leadingPadding = t7;
    },
    _MaterialBannerThemeData_Object_Diagnosticable: function _MaterialBannerThemeData_Object_Diagnosticable() {
    },
    BottomAppBarTheme$(color, elevation, height, padding, shadowColor, shape, surfaceTintColor) {
      return new A.BottomAppBarTheme(color, elevation, shape, height, surfaceTintColor, shadowColor, padding);
    },
    BottomAppBarTheme_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _null = null;
      if (a == b && a != null)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.color;
      t3 = b == null;
      t2 = A.Color_lerp(t2, t3 ? _null : b.color, t);
      t4 = t1 ? _null : a.elevation;
      t4 = A.lerpDouble(t4, t3 ? _null : b.elevation, t);
      if (t < 0.5)
        t5 = t1 ? _null : a.shape;
      else
        t5 = t3 ? _null : b.shape;
      t6 = t1 ? _null : a.height;
      t6 = A.lerpDouble(t6, t3 ? _null : b.height, t);
      t7 = t1 ? _null : a.surfaceTintColor;
      t7 = A.Color_lerp(t7, t3 ? _null : b.surfaceTintColor, t);
      t8 = t1 ? _null : a.shadowColor;
      t8 = A.Color_lerp(t8, t3 ? _null : b.shadowColor, t);
      t1 = t1 ? _null : a.padding;
      return A.BottomAppBarTheme$(t2, t4, t6, A.EdgeInsetsGeometry_lerp(t1, t3 ? _null : b.padding, t), t8, t5, t7);
    },
    BottomAppBarTheme: function BottomAppBarTheme(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.color = t0;
      _.elevation = t1;
      _.shape = t2;
      _.height = t3;
      _.surfaceTintColor = t4;
      _.shadowColor = t5;
      _.padding = t6;
    },
    _BottomAppBarTheme_Object_Diagnosticable: function _BottomAppBarTheme_Object_Diagnosticable() {
    },
    BottomNavigationBarThemeData$(backgroundColor, elevation, enableFeedback, landscapeLayout, mouseCursor, selectedIconTheme, selectedItemColor, selectedLabelStyle, showSelectedLabels, showUnselectedLabels, type, unselectedIconTheme, unselectedItemColor, unselectedLabelStyle) {
      return new A.BottomNavigationBarThemeData(backgroundColor, elevation, selectedIconTheme, unselectedIconTheme, selectedItemColor, unselectedItemColor, selectedLabelStyle, unselectedLabelStyle, showSelectedLabels, showUnselectedLabels, type, enableFeedback, landscapeLayout, mouseCursor);
    },
    BottomNavigationBarThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, _null = null;
      if (a == b && a != null)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.backgroundColor;
      t3 = b == null;
      t2 = A.Color_lerp(t2, t3 ? _null : b.backgroundColor, t);
      t4 = t1 ? _null : a.elevation;
      t4 = A.lerpDouble(t4, t3 ? _null : b.elevation, t);
      t5 = t1 ? _null : a.selectedIconTheme;
      t5 = A.IconThemeData_lerp(t5, t3 ? _null : b.selectedIconTheme, t);
      t6 = t1 ? _null : a.unselectedIconTheme;
      t6 = A.IconThemeData_lerp(t6, t3 ? _null : b.unselectedIconTheme, t);
      t7 = t1 ? _null : a.selectedItemColor;
      t7 = A.Color_lerp(t7, t3 ? _null : b.selectedItemColor, t);
      t8 = t1 ? _null : a.unselectedItemColor;
      t8 = A.Color_lerp(t8, t3 ? _null : b.unselectedItemColor, t);
      t9 = t1 ? _null : a.selectedLabelStyle;
      t9 = A.TextStyle_lerp(t9, t3 ? _null : b.selectedLabelStyle, t);
      t10 = t1 ? _null : a.unselectedLabelStyle;
      t10 = A.TextStyle_lerp(t10, t3 ? _null : b.unselectedLabelStyle, t);
      t11 = t < 0.5;
      if (t11)
        t12 = t1 ? _null : a.showSelectedLabels;
      else
        t12 = t3 ? _null : b.showSelectedLabels;
      if (t11)
        t13 = t1 ? _null : a.showUnselectedLabels;
      else
        t13 = t3 ? _null : b.showUnselectedLabels;
      if (t11)
        t14 = t1 ? _null : a.type;
      else
        t14 = t3 ? _null : b.type;
      if (t11)
        t15 = t1 ? _null : a.enableFeedback;
      else
        t15 = t3 ? _null : b.enableFeedback;
      if (t11)
        t16 = t1 ? _null : a.landscapeLayout;
      else
        t16 = t3 ? _null : b.landscapeLayout;
      if (t11)
        t1 = t1 ? _null : a.mouseCursor;
      else
        t1 = t3 ? _null : b.mouseCursor;
      return A.BottomNavigationBarThemeData$(t2, t4, t15, t16, t1, t5, t7, t9, t12, t13, t14, t6, t8, t10);
    },
    BottomNavigationBarThemeData: function BottomNavigationBarThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.backgroundColor = t0;
      _.elevation = t1;
      _.selectedIconTheme = t2;
      _.unselectedIconTheme = t3;
      _.selectedItemColor = t4;
      _.unselectedItemColor = t5;
      _.selectedLabelStyle = t6;
      _.unselectedLabelStyle = t7;
      _.showSelectedLabels = t8;
      _.showUnselectedLabels = t9;
      _.type = t10;
      _.enableFeedback = t11;
      _.landscapeLayout = t12;
      _.mouseCursor = t13;
    },
    _BottomNavigationBarThemeData_Object_Diagnosticable: function _BottomNavigationBarThemeData_Object_Diagnosticable() {
    },
    BottomSheetThemeData$(backgroundColor, clipBehavior, constraints, dragHandleColor, dragHandleSize, elevation, modalBackgroundColor, modalBarrierColor, modalElevation, shadowColor, shape, showDragHandle, surfaceTintColor) {
      return new A.BottomSheetThemeData(backgroundColor, surfaceTintColor, elevation, modalBackgroundColor, modalBarrierColor, shadowColor, modalElevation, shape, showDragHandle, dragHandleColor, dragHandleSize, clipBehavior, constraints);
    },
    BottomSheetThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, _null = null;
      if (a == b)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.backgroundColor;
      t3 = b == null;
      t2 = A.Color_lerp(t2, t3 ? _null : b.backgroundColor, t);
      t4 = t1 ? _null : a.surfaceTintColor;
      t4 = A.Color_lerp(t4, t3 ? _null : b.surfaceTintColor, t);
      t5 = t1 ? _null : a.elevation;
      t5 = A.lerpDouble(t5, t3 ? _null : b.elevation, t);
      t6 = t1 ? _null : a.modalBackgroundColor;
      t6 = A.Color_lerp(t6, t3 ? _null : b.modalBackgroundColor, t);
      t7 = t1 ? _null : a.modalBarrierColor;
      t7 = A.Color_lerp(t7, t3 ? _null : b.modalBarrierColor, t);
      t8 = t1 ? _null : a.shadowColor;
      t8 = A.Color_lerp(t8, t3 ? _null : b.shadowColor, t);
      t9 = t1 ? _null : a.modalElevation;
      t9 = A.lerpDouble(t9, t3 ? _null : b.modalElevation, t);
      t10 = t1 ? _null : a.shape;
      t10 = A.ShapeBorder_lerp(t10, t3 ? _null : b.shape, t);
      t11 = t < 0.5;
      if (t11)
        t12 = t1 ? _null : a.showDragHandle;
      else
        t12 = t3 ? _null : b.showDragHandle;
      t13 = t1 ? _null : a.dragHandleColor;
      t13 = A.Color_lerp(t13, t3 ? _null : b.dragHandleColor, t);
      t14 = t1 ? _null : a.dragHandleSize;
      t14 = A.Size_lerp(t14, t3 ? _null : b.dragHandleSize, t);
      if (t11)
        t11 = t1 ? _null : a.clipBehavior;
      else
        t11 = t3 ? _null : b.clipBehavior;
      t1 = t1 ? _null : a.constraints;
      return A.BottomSheetThemeData$(t2, t11, A.BoxConstraints_lerp(t1, t3 ? _null : b.constraints, t), t13, t14, t5, t6, t7, t9, t8, t10, t12, t4);
    },
    BottomSheetThemeData: function BottomSheetThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.backgroundColor = t0;
      _.surfaceTintColor = t1;
      _.elevation = t2;
      _.modalBackgroundColor = t3;
      _.modalBarrierColor = t4;
      _.shadowColor = t5;
      _.modalElevation = t6;
      _.shape = t7;
      _.showDragHandle = t8;
      _.dragHandleColor = t9;
      _.dragHandleSize = t10;
      _.clipBehavior = t11;
      _.constraints = t12;
    },
    _BottomSheetThemeData_Object_Diagnosticable: function _BottomSheetThemeData_Object_Diagnosticable() {
    },
    RawMaterialButton$(autofocus, child, clipBehavior, constraints, disabledElevation, elevation, enableFeedback, fillColor, focusColor, focusElevation, focusNode, highlightElevation, hoverColor, hoverElevation, materialTapTargetSize, mouseCursor, onPressed, shape, splashColor, textStyle) {
      return new A.RawMaterialButton(onPressed, mouseCursor, textStyle, fillColor, focusColor, hoverColor, splashColor, elevation, hoverElevation, focusElevation, highlightElevation, disabledElevation, constraints, shape, child, materialTapTargetSize == null ? C.MaterialTapTargetSize_0 : materialTapTargetSize, focusNode, autofocus, clipBehavior, enableFeedback, null);
    },
    _RawMaterialButtonState$() {
      return new A._RawMaterialButtonState(B.LinkedHashSet_LinkedHashSet$_empty(type$.WidgetState));
    },
    _InputPadding$0(child, minSize) {
      return new A._InputPadding0(minSize, child, null);
    },
    _RenderInputPadding$0(_minSize) {
      var t1 = new A._RenderInputPadding0(_minSize, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderShiftedBox$1(null);
      return t1;
    },
    RawMaterialButton: function RawMaterialButton(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20) {
      var _ = this;
      _.onPressed = t0;
      _.mouseCursor = t1;
      _.textStyle = t2;
      _.fillColor = t3;
      _.focusColor = t4;
      _.hoverColor = t5;
      _.splashColor = t6;
      _.elevation = t7;
      _.hoverElevation = t8;
      _.focusElevation = t9;
      _.highlightElevation = t10;
      _.disabledElevation = t11;
      _.constraints = t12;
      _.shape = t13;
      _.child = t14;
      _.materialTapTargetSize = t15;
      _.focusNode = t16;
      _.autofocus = t17;
      _.clipBehavior = t18;
      _.enableFeedback = t19;
      _.key = t20;
    },
    _RawMaterialButtonState: function _RawMaterialButtonState(t0) {
      this.MaterialStateMixin_materialStates = t0;
      this._framework0$_element = this._widget = null;
    },
    _InputPadding0: function _InputPadding0(t0, t1, t2) {
      this.minSize = t0;
      this.child = t1;
      this.key = t2;
    },
    _RenderInputPadding0: function _RenderInputPadding0(t0, t1, t2, t3) {
      var _ = this;
      _._button$_minSize = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._layoutCacheStorage = t2;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    _RenderInputPadding_hitTest_closure0: function _RenderInputPadding_hitTest_closure0(t0, t1) {
      this.$this = t0;
      this.center = t1;
    },
    __RawMaterialButtonState_State_MaterialStateMixin: function __RawMaterialButtonState_State_MaterialStateMixin() {
    },
    ButtonBarThemeData$(alignment, buttonAlignedDropdown, buttonHeight, buttonMinWidth, buttonPadding, buttonTextTheme, layoutBehavior, mainAxisSize, overflowDirection) {
      return new A.ButtonBarThemeData(alignment, mainAxisSize, buttonTextTheme, buttonMinWidth, buttonHeight, buttonPadding, buttonAlignedDropdown, layoutBehavior, overflowDirection);
    },
    ButtonBarThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, _null = null;
      if (a == b)
        return a;
      t1 = t < 0.5;
      if (t1)
        t2 = a == null ? _null : a.alignment;
      else
        t2 = b == null ? _null : b.alignment;
      if (t1)
        t3 = a == null ? _null : a.mainAxisSize;
      else
        t3 = b == null ? _null : b.mainAxisSize;
      if (t1)
        t4 = a == null ? _null : a.buttonTextTheme;
      else
        t4 = b == null ? _null : b.buttonTextTheme;
      t5 = a == null;
      t6 = t5 ? _null : a.buttonMinWidth;
      t7 = b == null;
      t6 = A.lerpDouble(t6, t7 ? _null : b.buttonMinWidth, t);
      t8 = t5 ? _null : a.buttonHeight;
      t8 = A.lerpDouble(t8, t7 ? _null : b.buttonHeight, t);
      t9 = t5 ? _null : a.buttonPadding;
      t9 = A.EdgeInsetsGeometry_lerp(t9, t7 ? _null : b.buttonPadding, t);
      if (t1)
        t10 = t5 ? _null : a.buttonAlignedDropdown;
      else
        t10 = t7 ? _null : b.buttonAlignedDropdown;
      if (t1)
        t11 = t5 ? _null : a.layoutBehavior;
      else
        t11 = t7 ? _null : b.layoutBehavior;
      if (t1)
        t1 = t5 ? _null : a.overflowDirection;
      else
        t1 = t7 ? _null : b.overflowDirection;
      return A.ButtonBarThemeData$(t2, t10, t8, t6, t9, t4, t11, t3, t1);
    },
    ButtonBarThemeData: function ButtonBarThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.alignment = t0;
      _.mainAxisSize = t1;
      _.buttonTextTheme = t2;
      _.buttonMinWidth = t3;
      _.buttonHeight = t4;
      _.buttonPadding = t5;
      _.buttonAlignedDropdown = t6;
      _.layoutBehavior = t7;
      _.overflowDirection = t8;
    },
    _ButtonBarThemeData_Object_Diagnosticable: function _ButtonBarThemeData_Object_Diagnosticable() {
    },
    ButtonStyle$(alignment, animationDuration, backgroundBuilder, backgroundColor, elevation, enableFeedback, fixedSize, foregroundBuilder, foregroundColor, iconColor, iconSize, maximumSize, minimumSize, mouseCursor, overlayColor, padding, shadowColor, shape, side, splashFactory, surfaceTintColor, tapTargetSize, textStyle, visualDensity) {
      return new A.ButtonStyle(textStyle, backgroundColor, foregroundColor, overlayColor, shadowColor, surfaceTintColor, elevation, padding, minimumSize, fixedSize, maximumSize, iconColor, iconSize, side, shape, mouseCursor, visualDensity, tapTargetSize, animationDuration, enableFeedback, alignment, splashFactory, backgroundBuilder, foregroundBuilder);
    },
    ButtonStyle_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, _null = null;
      if (a == b)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.textStyle;
      t3 = b == null;
      t4 = t3 ? _null : b.textStyle;
      t4 = A.WidgetStateProperty_lerp(t2, t4, t, A.text_style_TextStyle_lerp$closure(), type$.nullable_TextStyle);
      t2 = t1 ? _null : a.get$backgroundColor();
      t5 = t3 ? _null : b.get$backgroundColor();
      t6 = type$.nullable_Color;
      t5 = A.WidgetStateProperty_lerp(t2, t5, t, A.ui_Color_lerp$closure(), t6);
      t2 = t1 ? _null : a.get$foregroundColor();
      t2 = A.WidgetStateProperty_lerp(t2, t3 ? _null : b.get$foregroundColor(), t, A.ui_Color_lerp$closure(), t6);
      t7 = t1 ? _null : a.get$overlayColor();
      t7 = A.WidgetStateProperty_lerp(t7, t3 ? _null : b.get$overlayColor(), t, A.ui_Color_lerp$closure(), t6);
      t8 = t1 ? _null : a.get$shadowColor();
      t8 = A.WidgetStateProperty_lerp(t8, t3 ? _null : b.get$shadowColor(), t, A.ui_Color_lerp$closure(), t6);
      t9 = t1 ? _null : a.get$surfaceTintColor();
      t9 = A.WidgetStateProperty_lerp(t9, t3 ? _null : b.get$surfaceTintColor(), t, A.ui_Color_lerp$closure(), t6);
      t10 = t1 ? _null : a.get$elevation();
      t11 = t3 ? _null : b.get$elevation();
      t12 = type$.nullable_double;
      t11 = A.WidgetStateProperty_lerp(t10, t11, t, A.ui__lerpDouble$closure(), t12);
      t10 = t1 ? _null : a.get$padding();
      t13 = t3 ? _null : b.get$padding();
      t13 = A.WidgetStateProperty_lerp(t10, t13, t, A.edge_insets_EdgeInsetsGeometry_lerp$closure(), type$.nullable_EdgeInsetsGeometry);
      t10 = t1 ? _null : a.get$minimumSize();
      t14 = t3 ? _null : b.get$minimumSize();
      t15 = type$.nullable_Size;
      t14 = A.WidgetStateProperty_lerp(t10, t14, t, A.ui_Size_lerp$closure(), t15);
      t10 = t1 ? _null : a.fixedSize;
      t10 = A.WidgetStateProperty_lerp(t10, t3 ? _null : b.fixedSize, t, A.ui_Size_lerp$closure(), t15);
      t16 = t1 ? _null : a.get$maximumSize();
      t15 = A.WidgetStateProperty_lerp(t16, t3 ? _null : b.get$maximumSize(), t, A.ui_Size_lerp$closure(), t15);
      t16 = t1 ? _null : a.iconColor;
      t6 = A.WidgetStateProperty_lerp(t16, t3 ? _null : b.iconColor, t, A.ui_Color_lerp$closure(), t6);
      t16 = t1 ? _null : a.get$iconSize();
      t12 = A.WidgetStateProperty_lerp(t16, t3 ? _null : b.get$iconSize(), t, A.ui__lerpDouble$closure(), t12);
      t16 = t1 ? _null : a.get$side();
      t16 = A.ButtonStyle__lerpSides(t16, t3 ? _null : b.get$side(), t);
      t17 = t1 ? _null : a.get$shape();
      t18 = t3 ? _null : b.get$shape();
      t18 = A.WidgetStateProperty_lerp(t17, t18, t, A.borders_OutlinedBorder_lerp$closure(), type$.nullable_OutlinedBorder);
      t17 = t < 0.5;
      if (t17)
        t19 = t1 ? _null : a.get$mouseCursor();
      else
        t19 = t3 ? _null : b.get$mouseCursor();
      if (t17)
        t20 = t1 ? _null : a.get$visualDensity();
      else
        t20 = t3 ? _null : b.get$visualDensity();
      if (t17)
        t21 = t1 ? _null : a.get$tapTargetSize();
      else
        t21 = t3 ? _null : b.get$tapTargetSize();
      if (t17)
        t22 = t1 ? _null : a.animationDuration;
      else
        t22 = t3 ? _null : b.animationDuration;
      if (t17)
        t23 = t1 ? _null : a.enableFeedback;
      else
        t23 = t3 ? _null : b.enableFeedback;
      t24 = t1 ? _null : a.alignment;
      t24 = A.AlignmentGeometry_lerp(t24, t3 ? _null : b.alignment, t);
      if (t17)
        t25 = t1 ? _null : a.get$splashFactory();
      else
        t25 = t3 ? _null : b.get$splashFactory();
      if (t17)
        t26 = t1 ? _null : a.backgroundBuilder;
      else
        t26 = t3 ? _null : b.backgroundBuilder;
      if (t17)
        t1 = t1 ? _null : a.foregroundBuilder;
      else
        t1 = t3 ? _null : b.foregroundBuilder;
      return A.ButtonStyle$(t24, t22, t26, t5, t11, t23, t10, t1, t2, t6, t12, t15, t14, t19, t7, t13, t8, t18, t16, t25, t9, t21, t4, t20);
    },
    ButtonStyle__lerpSides(a, b, t) {
      if (a == null && b == null)
        return null;
      return A.WidgetStateBorderSide_lerp(a, b, t);
    },
    ButtonStyle: function ButtonStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23) {
      var _ = this;
      _.textStyle = t0;
      _.backgroundColor = t1;
      _.foregroundColor = t2;
      _.overlayColor = t3;
      _.shadowColor = t4;
      _.surfaceTintColor = t5;
      _.elevation = t6;
      _.padding = t7;
      _.minimumSize = t8;
      _.fixedSize = t9;
      _.maximumSize = t10;
      _.iconColor = t11;
      _.iconSize = t12;
      _.side = t13;
      _.shape = t14;
      _.mouseCursor = t15;
      _.visualDensity = t16;
      _.tapTargetSize = t17;
      _.animationDuration = t18;
      _.enableFeedback = t19;
      _.alignment = t20;
      _.splashFactory = t21;
      _.backgroundBuilder = t22;
      _.foregroundBuilder = t23;
    },
    _ButtonStyle_Object_Diagnosticable: function _ButtonStyle_Object_Diagnosticable() {
    },
    ButtonStyleButton_allOrNull(value, $T) {
      return value == null ? null : A.WidgetStatePropertyAll$(value, $T);
    },
    _ButtonStyleState$() {
      return new A._ButtonStyleState(null, null);
    },
    _MouseCursor$(resolveCallback) {
      return new A._MouseCursor(resolveCallback);
    },
    _InputPadding$(child, minSize) {
      return new A._InputPadding(minSize, child, null);
    },
    _RenderInputPadding$(_minSize) {
      var t1 = new A._RenderInputPadding(_minSize, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderShiftedBox$1(null);
      return t1;
    },
    ButtonStyleButton: function ButtonStyleButton() {
    },
    _ButtonStyleState: function _ButtonStyleState(t0, t1) {
      var _ = this;
      _.internalStatesController = _.backgroundColor = _.elevation = _.controller = null;
      _.TickerProviderStateMixin__tickers = t0;
      _.TickerProviderStateMixin__tickerModeNotifier = t1;
      _._framework0$_element = _._widget = null;
    },
    _ButtonStyleState_handleStatesControllerChange_closure: function _ButtonStyleState_handleStatesControllerChange_closure() {
    },
    _ButtonStyleState_build_effectiveValue: function _ButtonStyleState_build_effectiveValue(t0, t1, t2) {
      this.widgetStyle = t0;
      this.themeStyle = t1;
      this.defaultStyle = t2;
    },
    _ButtonStyleState_build_resolve: function _ButtonStyleState_build_resolve(t0, t1) {
      this.$this = t0;
      this.effectiveValue = t1;
    },
    _ButtonStyleState_build_resolve_closure: function _ButtonStyleState_build_resolve_closure(t0, t1, t2) {
      this.$this = t0;
      this.getProperty = t1;
      this.T = t2;
    },
    _ButtonStyleState_build_closure: function _ButtonStyleState_build_closure() {
    },
    _ButtonStyleState_build_closure0: function _ButtonStyleState_build_closure0() {
    },
    _ButtonStyleState_build_closure1: function _ButtonStyleState_build_closure1() {
    },
    _ButtonStyleState_build_closure2: function _ButtonStyleState_build_closure2() {
    },
    _ButtonStyleState_build_closure3: function _ButtonStyleState_build_closure3() {
    },
    _ButtonStyleState_build_closure4: function _ButtonStyleState_build_closure4() {
    },
    _ButtonStyleState_build_closure5: function _ButtonStyleState_build_closure5() {
    },
    _ButtonStyleState_build_closure6: function _ButtonStyleState_build_closure6() {
    },
    _ButtonStyleState_build_closure7: function _ButtonStyleState_build_closure7() {
    },
    _ButtonStyleState_build_closure8: function _ButtonStyleState_build_closure8() {
    },
    _ButtonStyleState_build_closure9: function _ButtonStyleState_build_closure9() {
    },
    _ButtonStyleState_build_closure10: function _ButtonStyleState_build_closure10() {
    },
    _ButtonStyleState_build_closure11: function _ButtonStyleState_build_closure11() {
    },
    _ButtonStyleState_build_closure12: function _ButtonStyleState_build_closure12() {
    },
    _ButtonStyleState_build_closure13: function _ButtonStyleState_build_closure13(t0) {
      this.effectiveValue = t0;
    },
    _ButtonStyleState_build__closure1: function _ButtonStyleState_build__closure1(t0) {
      this.states = t0;
    },
    _ButtonStyleState_build_closure14: function _ButtonStyleState_build_closure14(t0) {
      this.effectiveValue = t0;
    },
    _ButtonStyleState_build__closure0: function _ButtonStyleState_build__closure0(t0) {
      this.states = t0;
    },
    _ButtonStyleState_build_closure15: function _ButtonStyleState_build_closure15() {
    },
    _ButtonStyleState_build_closure16: function _ButtonStyleState_build_closure16() {
    },
    _ButtonStyleState_build_closure17: function _ButtonStyleState_build_closure17() {
    },
    _ButtonStyleState_build_closure18: function _ButtonStyleState_build_closure18() {
    },
    _ButtonStyleState_build_closure19: function _ButtonStyleState_build_closure19() {
    },
    _ButtonStyleState_build_closure20: function _ButtonStyleState_build_closure20() {
    },
    _ButtonStyleState_build_closure21: function _ButtonStyleState_build_closure21() {
    },
    _ButtonStyleState_build_closure22: function _ButtonStyleState_build_closure22() {
    },
    _ButtonStyleState_build_closure23: function _ButtonStyleState_build_closure23(t0) {
      this.$this = t0;
    },
    _ButtonStyleState_build__closure: function _ButtonStyleState_build__closure() {
    },
    _MouseCursor: function _MouseCursor(t0) {
      this.resolveCallback = t0;
    },
    _InputPadding: function _InputPadding(t0, t1, t2) {
      this.minSize = t0;
      this.child = t1;
      this.key = t2;
    },
    _RenderInputPadding: function _RenderInputPadding(t0, t1, t2, t3) {
      var _ = this;
      _._minSize = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._layoutCacheStorage = t2;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    _RenderInputPadding_hitTest_closure: function _RenderInputPadding_hitTest_closure(t0, t1) {
      this.$this = t0;
      this.center = t1;
    },
    __ButtonStyleState_State_TickerProviderStateMixin: function __ButtonStyleState_State_TickerProviderStateMixin() {
    },
    ButtonThemeData$(buttonColor, colorScheme, disabledColor, focusColor, highlightColor, hoverColor, materialTapTargetSize, splashColor) {
      return new A.ButtonThemeData(buttonColor, disabledColor, focusColor, hoverColor, highlightColor, splashColor, colorScheme, materialTapTargetSize);
    },
    ButtonTextTheme: function ButtonTextTheme(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    ButtonBarLayoutBehavior: function ButtonBarLayoutBehavior(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    ButtonThemeData: function ButtonThemeData(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._buttonColor = t0;
      _._disabledColor = t1;
      _._focusColor = t2;
      _._hoverColor = t3;
      _._highlightColor = t4;
      _._splashColor = t5;
      _.colorScheme = t6;
      _._materialTapTargetSize = t7;
    },
    _ButtonThemeData_Object_Diagnosticable: function _ButtonThemeData_Object_Diagnosticable() {
    },
    CardTheme$(clipBehavior, color, elevation, margin, shadowColor, shape, surfaceTintColor) {
      return new A.CardTheme(clipBehavior, color, shadowColor, surfaceTintColor, elevation, margin, shape);
    },
    CardTheme_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _null = null;
      if (a == b && a != null)
        return a;
      if (t < 0.5)
        t1 = a == null ? _null : a.clipBehavior;
      else
        t1 = b == null ? _null : b.clipBehavior;
      t2 = a == null;
      t3 = t2 ? _null : a.color;
      t4 = b == null;
      t3 = A.Color_lerp(t3, t4 ? _null : b.color, t);
      t5 = t2 ? _null : a.shadowColor;
      t5 = A.Color_lerp(t5, t4 ? _null : b.shadowColor, t);
      t6 = t2 ? _null : a.surfaceTintColor;
      t6 = A.Color_lerp(t6, t4 ? _null : b.surfaceTintColor, t);
      t7 = t2 ? _null : a.elevation;
      t7 = A.lerpDouble(t7, t4 ? _null : b.elevation, t);
      t8 = t2 ? _null : a.margin;
      t8 = A.EdgeInsetsGeometry_lerp(t8, t4 ? _null : b.margin, t);
      t2 = t2 ? _null : a.shape;
      return A.CardTheme$(t1, t3, t7, t8, t5, A.ShapeBorder_lerp(t2, t4 ? _null : b.shape, t), t6);
    },
    CardTheme: function CardTheme(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.clipBehavior = t0;
      _.color = t1;
      _.shadowColor = t2;
      _.surfaceTintColor = t3;
      _.elevation = t4;
      _.margin = t5;
      _.shape = t6;
    },
    _CardTheme_Object_Diagnosticable: function _CardTheme_Object_Diagnosticable() {
    },
    CheckboxThemeData$(checkColor, fillColor, materialTapTargetSize, mouseCursor, overlayColor, shape, side, splashRadius, visualDensity) {
      return new A.CheckboxThemeData(mouseCursor, fillColor, checkColor, overlayColor, splashRadius, materialTapTargetSize, visualDensity, shape, side);
    },
    CheckboxThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, _null = null;
      if (a == b && a != null)
        return a;
      t1 = t < 0.5;
      if (t1)
        t2 = a == null ? _null : a.mouseCursor;
      else
        t2 = b == null ? _null : b.mouseCursor;
      t3 = a == null;
      t4 = t3 ? _null : a.fillColor;
      t5 = b == null;
      t6 = t5 ? _null : b.fillColor;
      t7 = type$.nullable_Color;
      t6 = A.WidgetStateProperty_lerp(t4, t6, t, A.ui_Color_lerp$closure(), t7);
      t4 = t3 ? _null : a.checkColor;
      t4 = A.WidgetStateProperty_lerp(t4, t5 ? _null : b.checkColor, t, A.ui_Color_lerp$closure(), t7);
      t8 = t3 ? _null : a.overlayColor;
      t7 = A.WidgetStateProperty_lerp(t8, t5 ? _null : b.overlayColor, t, A.ui_Color_lerp$closure(), t7);
      t8 = t3 ? _null : a.splashRadius;
      t8 = A.lerpDouble(t8, t5 ? _null : b.splashRadius, t);
      if (t1)
        t9 = t3 ? _null : a.materialTapTargetSize;
      else
        t9 = t5 ? _null : b.materialTapTargetSize;
      if (t1)
        t1 = t3 ? _null : a.visualDensity;
      else
        t1 = t5 ? _null : b.visualDensity;
      t10 = t3 ? _null : a.shape;
      t10 = type$.nullable_OutlinedBorder._as(A.ShapeBorder_lerp(t10, t5 ? _null : b.shape, t));
      t3 = t3 ? _null : a.side;
      return A.CheckboxThemeData$(t4, t6, t9, t2, t7, t10, A.CheckboxThemeData__lerpSides(t3, t5 ? _null : b.side, t), t8, t1);
    },
    CheckboxThemeData__lerpSides(a, b, t) {
      if (a == null || b == null)
        return null;
      if (a === b)
        return a;
      a.toString;
      return A.BorderSide_lerp(a, b, t);
    },
    CheckboxThemeData: function CheckboxThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.mouseCursor = t0;
      _.fillColor = t1;
      _.checkColor = t2;
      _.overlayColor = t3;
      _.splashRadius = t4;
      _.materialTapTargetSize = t5;
      _.visualDensity = t6;
      _.shape = t7;
      _.side = t8;
    },
    _CheckboxThemeData_Object_Diagnosticable: function _CheckboxThemeData_Object_Diagnosticable() {
    },
    ChipThemeData$(avatarBoxConstraints, backgroundColor, brightness, checkmarkColor, color, deleteIconBoxConstraints, deleteIconColor, disabledColor, elevation, iconTheme, labelPadding, labelStyle, padding, pressElevation, secondaryLabelStyle, secondarySelectedColor, selectedColor, selectedShadowColor, shadowColor, shape, showCheckmark, side, surfaceTintColor) {
      return new A.ChipThemeData(color, backgroundColor, deleteIconColor, disabledColor, selectedColor, secondarySelectedColor, shadowColor, surfaceTintColor, selectedShadowColor, showCheckmark, checkmarkColor, labelPadding, padding, side, shape, labelStyle, secondaryLabelStyle, brightness, elevation, pressElevation, iconTheme, avatarBoxConstraints, deleteIconBoxConstraints);
    },
    ChipThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, _null = null;
      if (a == b)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.color;
      t3 = b == null;
      t4 = t3 ? _null : b.color;
      t4 = A.WidgetStateProperty_lerp(t2, t4, t, A.ui_Color_lerp$closure(), type$.nullable_Color);
      t2 = t1 ? _null : a.backgroundColor;
      t2 = A.Color_lerp(t2, t3 ? _null : b.backgroundColor, t);
      t5 = t1 ? _null : a.deleteIconColor;
      t5 = A.Color_lerp(t5, t3 ? _null : b.deleteIconColor, t);
      t6 = t1 ? _null : a.disabledColor;
      t6 = A.Color_lerp(t6, t3 ? _null : b.disabledColor, t);
      t7 = t1 ? _null : a.selectedColor;
      t7 = A.Color_lerp(t7, t3 ? _null : b.selectedColor, t);
      t8 = t1 ? _null : a.secondarySelectedColor;
      t8 = A.Color_lerp(t8, t3 ? _null : b.secondarySelectedColor, t);
      t9 = t1 ? _null : a.shadowColor;
      t9 = A.Color_lerp(t9, t3 ? _null : b.shadowColor, t);
      t10 = t1 ? _null : a.surfaceTintColor;
      t10 = A.Color_lerp(t10, t3 ? _null : b.surfaceTintColor, t);
      t11 = t1 ? _null : a.selectedShadowColor;
      t11 = A.Color_lerp(t11, t3 ? _null : b.selectedShadowColor, t);
      t12 = t < 0.5;
      if (t12) {
        t13 = t1 ? _null : a.showCheckmark;
        if (t13 == null)
          t13 = true;
      } else {
        t13 = t3 ? _null : b.showCheckmark;
        if (t13 == null)
          t13 = true;
      }
      t14 = t1 ? _null : a.checkmarkColor;
      t14 = A.Color_lerp(t14, t3 ? _null : b.checkmarkColor, t);
      t15 = t1 ? _null : a.labelPadding;
      t15 = A.EdgeInsetsGeometry_lerp(t15, t3 ? _null : b.labelPadding, t);
      t16 = t1 ? _null : a.padding;
      t16 = A.EdgeInsetsGeometry_lerp(t16, t3 ? _null : b.padding, t);
      t17 = t1 ? _null : a.side;
      t17 = A.ChipThemeData__lerpSides(t17, t3 ? _null : b.side, t);
      t18 = t1 ? _null : a.shape;
      t18 = A.ChipThemeData__lerpShapes(t18, t3 ? _null : b.shape, t);
      t19 = t1 ? _null : a.labelStyle;
      t19 = A.TextStyle_lerp(t19, t3 ? _null : b.labelStyle, t);
      t20 = t1 ? _null : a.secondaryLabelStyle;
      t20 = A.TextStyle_lerp(t20, t3 ? _null : b.secondaryLabelStyle, t);
      if (t12) {
        t12 = t1 ? _null : a.brightness;
        if (t12 == null)
          t12 = D.Brightness_1;
      } else {
        t12 = t3 ? _null : b.brightness;
        if (t12 == null)
          t12 = D.Brightness_1;
      }
      t21 = t1 ? _null : a.elevation;
      t21 = A.lerpDouble(t21, t3 ? _null : b.elevation, t);
      t22 = t1 ? _null : a.pressElevation;
      t22 = A.lerpDouble(t22, t3 ? _null : b.pressElevation, t);
      if ((t1 ? _null : a.iconTheme) == null)
        t23 = (t3 ? _null : b.iconTheme) != null;
      else
        t23 = true;
      if (t23) {
        t23 = t1 ? _null : a.iconTheme;
        t23 = A.IconThemeData_lerp(t23, t3 ? _null : b.iconTheme, t);
      } else
        t23 = _null;
      t24 = t1 ? _null : a.avatarBoxConstraints;
      t24 = A.BoxConstraints_lerp(t24, t3 ? _null : b.avatarBoxConstraints, t);
      t1 = t1 ? _null : a.deleteIconBoxConstraints;
      return A.ChipThemeData$(t24, t2, t12, t14, t4, A.BoxConstraints_lerp(t1, t3 ? _null : b.deleteIconBoxConstraints, t), t5, t6, t21, t23, t15, t19, t16, t22, t20, t8, t7, t11, t9, t18, t13, t17, t10);
    },
    ChipThemeData__lerpSides(a, b, t) {
      var t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        return A.BorderSide_lerp(A.BorderSide$(b.color.withAlpha$1(0), -1, C.BorderStyle_1, 0), b, t);
      if (b == null)
        return A.BorderSide_lerp(A.BorderSide$(a.color.withAlpha$1(0), -1, C.BorderStyle_1, 0), a, t);
      return A.BorderSide_lerp(a, b, t);
    },
    ChipThemeData__lerpShapes(a, b, t) {
      if (a == null && b == null)
        return null;
      return type$.nullable_OutlinedBorder._as(A.ShapeBorder_lerp(a, b, t));
    },
    ChipThemeData: function ChipThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22) {
      var _ = this;
      _.color = t0;
      _.backgroundColor = t1;
      _.deleteIconColor = t2;
      _.disabledColor = t3;
      _.selectedColor = t4;
      _.secondarySelectedColor = t5;
      _.shadowColor = t6;
      _.surfaceTintColor = t7;
      _.selectedShadowColor = t8;
      _.showCheckmark = t9;
      _.checkmarkColor = t10;
      _.labelPadding = t11;
      _.padding = t12;
      _.side = t13;
      _.shape = t14;
      _.labelStyle = t15;
      _.secondaryLabelStyle = t16;
      _.brightness = t17;
      _.elevation = t18;
      _.pressElevation = t19;
      _.iconTheme = t20;
      _.avatarBoxConstraints = t21;
      _.deleteIconBoxConstraints = t22;
    },
    _ChipThemeData_Object_Diagnosticable: function _ChipThemeData_Object_Diagnosticable() {
    },
    ColorScheme$(background, brightness, error, errorContainer, inversePrimary, inverseSurface, onBackground, onError, onErrorContainer, onInverseSurface, onPrimary, onPrimaryContainer, onPrimaryFixed, onPrimaryFixedVariant, onSecondary, onSecondaryContainer, onSecondaryFixed, onSecondaryFixedVariant, onSurface, onSurfaceVariant, onTertiary, onTertiaryContainer, onTertiaryFixed, onTertiaryFixedVariant, outline, outlineVariant, primary, primaryContainer, primaryFixed, primaryFixedDim, scrim, secondary, secondaryContainer, secondaryFixed, secondaryFixedDim, shadow, surface, surfaceBright, surfaceContainer, surfaceContainerHigh, surfaceContainerHighest, surfaceContainerLow, surfaceContainerLowest, surfaceDim, surfaceTint, surfaceVariant, tertiary, tertiaryContainer, tertiaryFixed, tertiaryFixedDim) {
      return new A.ColorScheme(brightness, primary, onPrimary, primaryContainer, onPrimaryContainer, primaryFixed, primaryFixedDim, onPrimaryFixed, onPrimaryFixedVariant, secondary, onSecondary, secondaryContainer, onSecondaryContainer, secondaryFixed, secondaryFixedDim, onSecondaryFixed, onSecondaryFixedVariant, tertiary, onTertiary, tertiaryContainer, onTertiaryContainer, tertiaryFixed, tertiaryFixedDim, onTertiaryFixed, onTertiaryFixedVariant, error, onError, errorContainer, onErrorContainer, surface, onSurface, surfaceVariant, surfaceDim, surfaceBright, surfaceContainerLowest, surfaceContainerLow, surfaceContainer, surfaceContainerHigh, surfaceContainerHighest, onSurfaceVariant, outline, outlineVariant, shadow, scrim, inverseSurface, onInverseSurface, inversePrimary, surfaceTint, background, onBackground);
    },
    ColorScheme_ColorScheme$fromSeed(brightness, onPrimary, primary, seedColor) {
      var scheme = A.ColorScheme__buildDynamicScheme(brightness, seedColor, C.DynamicSchemeVariant_0, 0),
        t1 = primary == null ? E.Color$($.$get$MaterialDynamicColors_primary().getArgb$1(scheme)) : primary,
        t2 = onPrimary == null ? E.Color$($.$get$MaterialDynamicColors_onPrimary().getArgb$1(scheme)) : onPrimary,
        t3 = E.Color$($.$get$MaterialDynamicColors_primaryContainer().getArgb$1(scheme)),
        t4 = E.Color$($.$get$MaterialDynamicColors_onPrimaryContainer().getArgb$1(scheme)),
        t5 = E.Color$($.$get$MaterialDynamicColors_primaryFixed().getArgb$1(scheme)),
        t6 = E.Color$($.$get$MaterialDynamicColors_primaryFixedDim().getArgb$1(scheme)),
        t7 = E.Color$($.$get$MaterialDynamicColors_onPrimaryFixed().getArgb$1(scheme)),
        t8 = E.Color$($.$get$MaterialDynamicColors_onPrimaryFixedVariant().getArgb$1(scheme)),
        t9 = E.Color$($.$get$MaterialDynamicColors_secondary().getArgb$1(scheme)),
        t10 = E.Color$($.$get$MaterialDynamicColors_onSecondary().getArgb$1(scheme)),
        t11 = E.Color$($.$get$MaterialDynamicColors_secondaryContainer().getArgb$1(scheme)),
        t12 = E.Color$($.$get$MaterialDynamicColors_onSecondaryContainer().getArgb$1(scheme)),
        t13 = E.Color$($.$get$MaterialDynamicColors_secondaryFixed().getArgb$1(scheme)),
        t14 = E.Color$($.$get$MaterialDynamicColors_secondaryFixedDim().getArgb$1(scheme)),
        t15 = E.Color$($.$get$MaterialDynamicColors_onSecondaryFixed().getArgb$1(scheme)),
        t16 = E.Color$($.$get$MaterialDynamicColors_onSecondaryFixedVariant().getArgb$1(scheme)),
        t17 = E.Color$($.$get$MaterialDynamicColors_tertiary().getArgb$1(scheme)),
        t18 = E.Color$($.$get$MaterialDynamicColors_onTertiary().getArgb$1(scheme)),
        t19 = E.Color$($.$get$MaterialDynamicColors_tertiaryContainer().getArgb$1(scheme)),
        t20 = E.Color$($.$get$MaterialDynamicColors_onTertiaryContainer().getArgb$1(scheme)),
        t21 = E.Color$($.$get$MaterialDynamicColors_tertiaryFixed().getArgb$1(scheme)),
        t22 = E.Color$($.$get$MaterialDynamicColors_tertiaryFixedDim().getArgb$1(scheme)),
        t23 = E.Color$($.$get$MaterialDynamicColors_onTertiaryFixed().getArgb$1(scheme)),
        t24 = E.Color$($.$get$MaterialDynamicColors_onTertiaryFixedVariant().getArgb$1(scheme)),
        t25 = E.Color$($.$get$MaterialDynamicColors_error().getArgb$1(scheme)),
        t26 = E.Color$($.$get$MaterialDynamicColors_onError().getArgb$1(scheme)),
        t27 = E.Color$($.$get$MaterialDynamicColors_errorContainer().getArgb$1(scheme)),
        t28 = E.Color$($.$get$MaterialDynamicColors_onErrorContainer().getArgb$1(scheme)),
        t29 = E.Color$($.$get$MaterialDynamicColors_outline().getArgb$1(scheme)),
        t30 = E.Color$($.$get$MaterialDynamicColors_outlineVariant().getArgb$1(scheme)),
        t31 = E.Color$($.$get$MaterialDynamicColors_surface().getArgb$1(scheme)),
        t32 = E.Color$($.$get$MaterialDynamicColors_surfaceDim().getArgb$1(scheme)),
        t33 = E.Color$($.$get$MaterialDynamicColors_surfaceBright().getArgb$1(scheme)),
        t34 = E.Color$($.$get$MaterialDynamicColors_surfaceContainerLowest().getArgb$1(scheme)),
        t35 = E.Color$($.$get$MaterialDynamicColors_surfaceContainerLow().getArgb$1(scheme)),
        t36 = E.Color$($.$get$MaterialDynamicColors_surfaceContainer().getArgb$1(scheme)),
        t37 = E.Color$($.$get$MaterialDynamicColors_surfaceContainerHigh().getArgb$1(scheme)),
        t38 = E.Color$($.$get$MaterialDynamicColors_surfaceContainerHighest().getArgb$1(scheme)),
        t39 = E.Color$($.$get$MaterialDynamicColors_onSurface().getArgb$1(scheme)),
        t40 = E.Color$($.$get$MaterialDynamicColors_onSurfaceVariant().getArgb$1(scheme)),
        t41 = E.Color$($.$get$MaterialDynamicColors_inverseSurface().getArgb$1(scheme)),
        t42 = E.Color$($.$get$MaterialDynamicColors_inverseOnSurface().getArgb$1(scheme)),
        t43 = E.Color$($.$get$MaterialDynamicColors_inversePrimary().getArgb$1(scheme)),
        t44 = E.Color$($.$get$MaterialDynamicColors_shadow().getArgb$1(scheme)),
        t45 = E.Color$($.$get$MaterialDynamicColors_scrim().getArgb$1(scheme)),
        t46 = E.Color$($.$get$MaterialDynamicColors_primary().getArgb$1(scheme)),
        t47 = E.Color$($.$get$MaterialDynamicColors_background().getArgb$1(scheme)),
        t48 = E.Color$($.$get$MaterialDynamicColors_onBackground().getArgb$1(scheme)),
        t49 = E.Color$($.$get$MaterialDynamicColors_surfaceVariant().getArgb$1(scheme));
      return A.ColorScheme$(t47, brightness, t25, t27, t43, t41, t48, t26, t28, t42, t2, t4, t7, t8, t10, t12, t15, t16, t39, t40, t18, t20, t23, t24, t29, t30, t1, t3, t5, t6, t45, t9, t11, t13, t14, t44, t31, t33, t36, t37, t38, t35, t34, t32, t46, t49, t17, t19, t21, t22);
    },
    ColorScheme_ColorScheme$fromSwatch(accentColor, backgroundColor, brightness, cardColor, errorColor, primarySwatch) {
      var t1, secondary, secondaryIsDark, t2, t3, t4, t5, t6, t7, _null = null,
        isDark = brightness === D.Brightness_0,
        primaryIsDark = J.$eq$(A.ColorScheme__brightnessFor(primarySwatch), D.Brightness_0);
      if (accentColor == null)
        if (isDark) {
          t1 = C.MaterialAccentColor_Map_3JMhZ_4284809178.$index(0, 200);
          t1.toString;
          secondary = t1;
        } else
          secondary = primarySwatch;
      else
        secondary = accentColor;
      secondaryIsDark = J.$eq$(A.ColorScheme__brightnessFor(secondary), D.Brightness_0);
      if (cardColor == null)
        if (isDark) {
          t1 = C.MaterialColor_Map_Ng0Da_4288585374.$index(0, 800);
          t1.toString;
        } else
          t1 = C.Color_4294967295;
      else
        t1 = cardColor;
      if (errorColor == null) {
        t2 = C.MaterialColor_Map_kygsm_4294198070.$index(0, 700);
        t2.toString;
      } else
        t2 = errorColor;
      t3 = primaryIsDark ? C.Color_4294967295 : C.Color_4278190080;
      t4 = secondaryIsDark ? C.Color_4294967295 : C.Color_4278190080;
      t5 = isDark ? C.Color_4294967295 : C.Color_4278190080;
      t6 = isDark ? C.Color_4278190080 : C.Color_4294967295;
      if (backgroundColor == null)
        if (isDark) {
          t7 = C.MaterialColor_Map_Ng0Da_4288585374.$index(0, 700);
          t7.toString;
        } else {
          t7 = primarySwatch.$index(0, 200);
          t7.toString;
        }
      else
        t7 = backgroundColor;
      return A.ColorScheme$(t7, brightness, t2, _null, _null, _null, primaryIsDark ? C.Color_4294967295 : C.Color_4278190080, t6, _null, _null, t3, _null, _null, _null, t4, _null, _null, _null, t5, _null, _null, _null, _null, _null, _null, _null, primarySwatch, _null, _null, _null, _null, secondary, _null, _null, _null, _null, t1, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    ColorScheme__brightnessFor(color) {
      return A.ThemeData_estimateBrightnessForColor(color);
    },
    ColorScheme_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47;
      if (a === b)
        return a;
      t1 = t < 0.5 ? a.brightness : b.brightness;
      t2 = A.Color_lerp(a.primary, b.primary, t);
      t2.toString;
      t3 = A.Color_lerp(a.onPrimary, b.onPrimary, t);
      t3.toString;
      t4 = A.Color_lerp(a.get$primaryContainer(), b.get$primaryContainer(), t);
      t5 = A.Color_lerp(a.get$onPrimaryContainer(), b.get$onPrimaryContainer(), t);
      t6 = A.Color_lerp(a.get$primaryFixed(), b.get$primaryFixed(), t);
      t7 = A.Color_lerp(a.get$primaryFixedDim(), b.get$primaryFixedDim(), t);
      t8 = A.Color_lerp(a.get$onPrimaryFixed(), b.get$onPrimaryFixed(), t);
      t9 = A.Color_lerp(a.get$onPrimaryFixedVariant(), b.get$onPrimaryFixedVariant(), t);
      t10 = A.Color_lerp(a.secondary, b.secondary, t);
      t10.toString;
      t11 = A.Color_lerp(a.onSecondary, b.onSecondary, t);
      t11.toString;
      t12 = A.Color_lerp(a.get$secondaryContainer(), b.get$secondaryContainer(), t);
      t13 = A.Color_lerp(a.get$onSecondaryContainer(), b.get$onSecondaryContainer(), t);
      t14 = A.Color_lerp(a.get$secondaryFixed(), b.get$secondaryFixed(), t);
      t15 = A.Color_lerp(a.get$secondaryFixedDim(), b.get$secondaryFixedDim(), t);
      t16 = A.Color_lerp(a.get$onSecondaryFixed(), b.get$onSecondaryFixed(), t);
      t17 = A.Color_lerp(a.get$onSecondaryFixedVariant(), b.get$onSecondaryFixedVariant(), t);
      t18 = A.Color_lerp(a.get$tertiary(), b.get$tertiary(), t);
      t19 = A.Color_lerp(a.get$onTertiary(), b.get$onTertiary(), t);
      t20 = A.Color_lerp(a.get$tertiaryContainer(), b.get$tertiaryContainer(), t);
      t21 = A.Color_lerp(a.get$onTertiaryContainer(), b.get$onTertiaryContainer(), t);
      t22 = A.Color_lerp(a.get$tertiaryFixed(), b.get$tertiaryFixed(), t);
      t23 = A.Color_lerp(a.get$tertiaryFixedDim(), b.get$tertiaryFixedDim(), t);
      t24 = A.Color_lerp(a.get$onTertiaryFixed(), b.get$onTertiaryFixed(), t);
      t25 = A.Color_lerp(a.get$onTertiaryFixedVariant(), b.get$onTertiaryFixedVariant(), t);
      t26 = A.Color_lerp(a.error, b.error, t);
      t26.toString;
      t27 = A.Color_lerp(a.onError, b.onError, t);
      t27.toString;
      t28 = A.Color_lerp(a.get$errorContainer(), b.get$errorContainer(), t);
      t29 = A.Color_lerp(a.get$onErrorContainer(), b.get$onErrorContainer(), t);
      t30 = A.Color_lerp(a.surface, b.surface, t);
      t30.toString;
      t31 = A.Color_lerp(a.onSurface, b.onSurface, t);
      t31.toString;
      t32 = A.Color_lerp(a.get$surfaceDim(), b.get$surfaceDim(), t);
      t33 = A.Color_lerp(a.get$surfaceBright(), b.get$surfaceBright(), t);
      t34 = A.Color_lerp(a.get$surfaceContainerLowest(), b.get$surfaceContainerLowest(), t);
      t35 = A.Color_lerp(a.get$surfaceContainerLow(), b.get$surfaceContainerLow(), t);
      t36 = A.Color_lerp(a.get$surfaceContainer(), b.get$surfaceContainer(), t);
      t37 = A.Color_lerp(a.get$surfaceContainerHigh(), b.get$surfaceContainerHigh(), t);
      t38 = A.Color_lerp(a.get$surfaceContainerHighest(), b.get$surfaceContainerHighest(), t);
      t39 = A.Color_lerp(a.get$onSurfaceVariant(), b.get$onSurfaceVariant(), t);
      t40 = A.Color_lerp(a.get$outline(), b.get$outline(), t);
      t41 = A.Color_lerp(a.get$outlineVariant(), b.get$outlineVariant(), t);
      t42 = A.Color_lerp(a.get$shadow(), b.get$shadow(), t);
      t43 = A.Color_lerp(a.get$scrim(), b.get$scrim(), t);
      t44 = A.Color_lerp(a.get$inverseSurface(), b.get$inverseSurface(), t);
      t45 = A.Color_lerp(a.get$onInverseSurface(), b.get$onInverseSurface(), t);
      t46 = A.Color_lerp(a.get$inversePrimary(), b.get$inversePrimary(), t);
      t47 = A.Color_lerp(a.get$surfaceTint(), b.get$surfaceTint(), t);
      return A.ColorScheme$(A.Color_lerp(a.get$background(), b.get$background(), t), t1, t26, t28, t46, t44, A.Color_lerp(a.get$onBackground(), b.get$onBackground(), t), t27, t29, t45, t3, t5, t8, t9, t11, t13, t16, t17, t31, t39, t19, t21, t24, t25, t40, t41, t2, t4, t6, t7, t43, t10, t12, t14, t15, t42, t30, t33, t36, t37, t38, t35, t34, t32, t47, A.Color_lerp(a.get$surfaceVariant(), b.get$surfaceVariant(), t), t18, t20, t22, t23);
    },
    ColorScheme__buildDynamicScheme(brightness, seedColor, schemeVariant, contrastLevel) {
      var t1,
        isDark = brightness === D.Brightness_0,
        sourceColor = A.Hct_fromInt(seedColor.get$value());
      switch (schemeVariant.index) {
        case 0:
          t1 = A.SchemeTonalSpot$(contrastLevel, isDark, sourceColor);
          break;
        case 1:
          t1 = A.SchemeFidelity$(contrastLevel, isDark, sourceColor);
          break;
        case 6:
          t1 = A.SchemeContent$(contrastLevel, isDark, sourceColor);
          break;
        case 2:
          t1 = A.SchemeMonochrome$(contrastLevel, isDark, sourceColor);
          break;
        case 3:
          t1 = A.SchemeNeutral$(contrastLevel, isDark, sourceColor);
          break;
        case 4:
          t1 = A.SchemeVibrant$(contrastLevel, isDark, sourceColor);
          break;
        case 5:
          t1 = A.SchemeExpressive$(contrastLevel, isDark, sourceColor);
          break;
        case 7:
          t1 = A.SchemeRainbow$(contrastLevel, isDark, sourceColor);
          break;
        case 8:
          t1 = A.SchemeFruitSalad$(contrastLevel, isDark, sourceColor);
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    DynamicSchemeVariant: function DynamicSchemeVariant(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    ColorScheme: function ColorScheme(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49) {
      var _ = this;
      _.brightness = t0;
      _.primary = t1;
      _.onPrimary = t2;
      _._primaryContainer = t3;
      _._onPrimaryContainer = t4;
      _._primaryFixed = t5;
      _._primaryFixedDim = t6;
      _._onPrimaryFixed = t7;
      _._onPrimaryFixedVariant = t8;
      _.secondary = t9;
      _.onSecondary = t10;
      _._secondaryContainer = t11;
      _._onSecondaryContainer = t12;
      _._secondaryFixed = t13;
      _._secondaryFixedDim = t14;
      _._onSecondaryFixed = t15;
      _._onSecondaryFixedVariant = t16;
      _._tertiary = t17;
      _._onTertiary = t18;
      _._tertiaryContainer = t19;
      _._onTertiaryContainer = t20;
      _._tertiaryFixed = t21;
      _._tertiaryFixedDim = t22;
      _._onTertiaryFixed = t23;
      _._onTertiaryFixedVariant = t24;
      _.error = t25;
      _.onError = t26;
      _._errorContainer = t27;
      _._onErrorContainer = t28;
      _.surface = t29;
      _.onSurface = t30;
      _._surfaceVariant = t31;
      _._surfaceDim = t32;
      _._surfaceBright = t33;
      _._surfaceContainerLowest = t34;
      _._surfaceContainerLow = t35;
      _._surfaceContainer = t36;
      _._surfaceContainerHigh = t37;
      _._surfaceContainerHighest = t38;
      _._onSurfaceVariant = t39;
      _._outline = t40;
      _._outlineVariant = t41;
      _._shadow = t42;
      _._scrim = t43;
      _._inverseSurface = t44;
      _._onInverseSurface = t45;
      _._inversePrimary = t46;
      _._surfaceTint = t47;
      _._color_scheme$_background = t48;
      _._onBackground = t49;
    },
    _ColorScheme_Object_Diagnosticable: function _ColorScheme_Object_Diagnosticable() {
    },
    MaterialColor: function MaterialColor(t0, t1) {
      this._swatch = t0;
      this.value = t1;
    },
    MaterialAccentColor: function MaterialAccentColor(t0, t1) {
      this._swatch = t0;
      this.value = t1;
    },
    DataTableThemeData$(checkboxHorizontalMargin, columnSpacing, dataRowColor, dataRowCursor, dataRowMaxHeight, dataRowMinHeight, dataTextStyle, decoration, dividerThickness, headingCellCursor, headingRowAlignment, headingRowColor, headingRowHeight, headingTextStyle, horizontalMargin) {
      return new A.DataTableThemeData(decoration, dataRowColor, dataRowMinHeight, dataRowMaxHeight, dataTextStyle, headingRowColor, headingRowHeight, headingTextStyle, horizontalMargin, columnSpacing, dividerThickness, checkboxHorizontalMargin, headingCellCursor, dataRowCursor, headingRowAlignment);
    },
    DataTableThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15;
      if (a === b)
        return a;
      t1 = A.Decoration_lerp(a.decoration, b.decoration, t);
      t2 = type$.nullable_Color;
      t3 = A.WidgetStateProperty_lerp(a.dataRowColor, b.dataRowColor, t, A.ui_Color_lerp$closure(), t2);
      t4 = A.lerpDouble(a.dataRowMinHeight, b.dataRowMinHeight, t);
      t5 = A.lerpDouble(a.dataRowMaxHeight, b.dataRowMaxHeight, t);
      t6 = A.TextStyle_lerp(a.dataTextStyle, b.dataTextStyle, t);
      t2 = A.WidgetStateProperty_lerp(a.headingRowColor, b.headingRowColor, t, A.ui_Color_lerp$closure(), t2);
      t7 = A.lerpDouble(a.headingRowHeight, b.headingRowHeight, t);
      t8 = A.TextStyle_lerp(a.headingTextStyle, b.headingTextStyle, t);
      t9 = A.lerpDouble(a.horizontalMargin, b.horizontalMargin, t);
      t10 = A.lerpDouble(a.columnSpacing, b.columnSpacing, t);
      t11 = A.lerpDouble(a.dividerThickness, b.dividerThickness, t);
      t12 = A.lerpDouble(a.checkboxHorizontalMargin, b.checkboxHorizontalMargin, t);
      t13 = t < 0.5;
      t14 = t13 ? a.headingCellCursor : b.headingCellCursor;
      t15 = t13 ? a.dataRowCursor : b.dataRowCursor;
      return A.DataTableThemeData$(t12, t10, t3, t15, t5, t4, t6, t1, t11, t14, t13 ? a.headingRowAlignment : b.headingRowAlignment, t2, t7, t8, t9);
    },
    DataTableThemeData: function DataTableThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.decoration = t0;
      _.dataRowColor = t1;
      _.dataRowMinHeight = t2;
      _.dataRowMaxHeight = t3;
      _.dataTextStyle = t4;
      _.headingRowColor = t5;
      _.headingRowHeight = t6;
      _.headingTextStyle = t7;
      _.horizontalMargin = t8;
      _.columnSpacing = t9;
      _.dividerThickness = t10;
      _.checkboxHorizontalMargin = t11;
      _.headingCellCursor = t12;
      _.dataRowCursor = t13;
      _.headingRowAlignment = t14;
    },
    _DataTableThemeData_Object_Diagnosticable: function _DataTableThemeData_Object_Diagnosticable() {
    },
    DatePickerThemeData$(backgroundColor, cancelButtonStyle, confirmButtonStyle, dayBackgroundColor, dayForegroundColor, dayOverlayColor, dayShape, dayStyle, dividerColor, elevation, headerBackgroundColor, headerForegroundColor, headerHeadlineStyle, headerHelpStyle, inputDecorationTheme, locale, rangePickerBackgroundColor, rangePickerElevation, rangePickerHeaderBackgroundColor, rangePickerHeaderForegroundColor, rangePickerHeaderHeadlineStyle, rangePickerHeaderHelpStyle, rangePickerShadowColor, rangePickerShape, rangePickerSurfaceTintColor, rangeSelectionBackgroundColor, rangeSelectionOverlayColor, shadowColor, shape, surfaceTintColor, todayBackgroundColor, todayBorder, todayForegroundColor, weekdayStyle, yearBackgroundColor, yearForegroundColor, yearOverlayColor, yearStyle) {
      return new A.DatePickerThemeData(backgroundColor, elevation, shadowColor, surfaceTintColor, shape, headerBackgroundColor, headerForegroundColor, headerHeadlineStyle, headerHelpStyle, weekdayStyle, dayStyle, dayForegroundColor, dayBackgroundColor, dayOverlayColor, dayShape, todayForegroundColor, todayBackgroundColor, todayBorder, yearStyle, yearForegroundColor, yearBackgroundColor, yearOverlayColor, rangePickerBackgroundColor, rangePickerElevation, rangePickerShadowColor, rangePickerSurfaceTintColor, rangePickerShape, rangePickerHeaderBackgroundColor, rangePickerHeaderForegroundColor, rangePickerHeaderHeadlineStyle, rangePickerHeaderHelpStyle, rangeSelectionBackgroundColor, rangeSelectionOverlayColor, dividerColor, inputDecorationTheme, cancelButtonStyle, confirmButtonStyle, locale);
    },
    DatePickerThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, _null = null;
      if (a == b && a != null)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.backgroundColor;
      t3 = b == null;
      t2 = A.Color_lerp(t2, t3 ? _null : b.backgroundColor, t);
      t4 = t1 ? _null : a.elevation;
      t4 = A.lerpDouble(t4, t3 ? _null : b.elevation, t);
      t5 = t1 ? _null : a.shadowColor;
      t5 = A.Color_lerp(t5, t3 ? _null : b.shadowColor, t);
      t6 = t1 ? _null : a.surfaceTintColor;
      t6 = A.Color_lerp(t6, t3 ? _null : b.surfaceTintColor, t);
      t7 = t1 ? _null : a.shape;
      t7 = A.ShapeBorder_lerp(t7, t3 ? _null : b.shape, t);
      t8 = t1 ? _null : a.headerBackgroundColor;
      t8 = A.Color_lerp(t8, t3 ? _null : b.headerBackgroundColor, t);
      t9 = t1 ? _null : a.headerForegroundColor;
      t9 = A.Color_lerp(t9, t3 ? _null : b.headerForegroundColor, t);
      t10 = t1 ? _null : a.headerHeadlineStyle;
      t10 = A.TextStyle_lerp(t10, t3 ? _null : b.headerHeadlineStyle, t);
      t11 = t1 ? _null : a.headerHelpStyle;
      t11 = A.TextStyle_lerp(t11, t3 ? _null : b.headerHelpStyle, t);
      t12 = t1 ? _null : a.weekdayStyle;
      t12 = A.TextStyle_lerp(t12, t3 ? _null : b.weekdayStyle, t);
      t13 = t1 ? _null : a.dayStyle;
      t13 = A.TextStyle_lerp(t13, t3 ? _null : b.dayStyle, t);
      t14 = t1 ? _null : a.dayForegroundColor;
      t15 = t3 ? _null : b.dayForegroundColor;
      t16 = type$.nullable_Color;
      t15 = A.WidgetStateProperty_lerp(t14, t15, t, A.ui_Color_lerp$closure(), t16);
      t14 = t1 ? _null : a.dayBackgroundColor;
      t14 = A.WidgetStateProperty_lerp(t14, t3 ? _null : b.dayBackgroundColor, t, A.ui_Color_lerp$closure(), t16);
      t17 = t1 ? _null : a.dayOverlayColor;
      t17 = A.WidgetStateProperty_lerp(t17, t3 ? _null : b.dayOverlayColor, t, A.ui_Color_lerp$closure(), t16);
      t18 = t1 ? _null : a.dayShape;
      t19 = t3 ? _null : b.dayShape;
      t19 = A.WidgetStateProperty_lerp(t18, t19, t, A.borders_OutlinedBorder_lerp$closure(), type$.nullable_OutlinedBorder);
      t18 = t1 ? _null : a.todayForegroundColor;
      t18 = A.WidgetStateProperty_lerp(t18, t3 ? _null : b.todayForegroundColor, t, A.ui_Color_lerp$closure(), t16);
      t20 = t1 ? _null : a.todayBackgroundColor;
      t20 = A.WidgetStateProperty_lerp(t20, t3 ? _null : b.todayBackgroundColor, t, A.ui_Color_lerp$closure(), t16);
      t21 = t1 ? _null : a.todayBorder;
      t21 = A.DatePickerThemeData__lerpBorderSide(t21, t3 ? _null : b.todayBorder, t);
      t22 = t1 ? _null : a.yearStyle;
      t22 = A.TextStyle_lerp(t22, t3 ? _null : b.yearStyle, t);
      t23 = t1 ? _null : a.yearForegroundColor;
      t23 = A.WidgetStateProperty_lerp(t23, t3 ? _null : b.yearForegroundColor, t, A.ui_Color_lerp$closure(), t16);
      t24 = t1 ? _null : a.yearBackgroundColor;
      t24 = A.WidgetStateProperty_lerp(t24, t3 ? _null : b.yearBackgroundColor, t, A.ui_Color_lerp$closure(), t16);
      t25 = t1 ? _null : a.yearOverlayColor;
      t25 = A.WidgetStateProperty_lerp(t25, t3 ? _null : b.yearOverlayColor, t, A.ui_Color_lerp$closure(), t16);
      t26 = t1 ? _null : a.rangePickerBackgroundColor;
      t26 = A.Color_lerp(t26, t3 ? _null : b.rangePickerBackgroundColor, t);
      t27 = t1 ? _null : a.rangePickerElevation;
      t27 = A.lerpDouble(t27, t3 ? _null : b.rangePickerElevation, t);
      t28 = t1 ? _null : a.rangePickerShadowColor;
      t28 = A.Color_lerp(t28, t3 ? _null : b.rangePickerShadowColor, t);
      t29 = t1 ? _null : a.rangePickerSurfaceTintColor;
      t29 = A.Color_lerp(t29, t3 ? _null : b.rangePickerSurfaceTintColor, t);
      t30 = t1 ? _null : a.rangePickerShape;
      t30 = A.ShapeBorder_lerp(t30, t3 ? _null : b.rangePickerShape, t);
      t31 = t1 ? _null : a.rangePickerHeaderBackgroundColor;
      t31 = A.Color_lerp(t31, t3 ? _null : b.rangePickerHeaderBackgroundColor, t);
      t32 = t1 ? _null : a.rangePickerHeaderForegroundColor;
      t32 = A.Color_lerp(t32, t3 ? _null : b.rangePickerHeaderForegroundColor, t);
      t33 = t1 ? _null : a.rangePickerHeaderHeadlineStyle;
      t33 = A.TextStyle_lerp(t33, t3 ? _null : b.rangePickerHeaderHeadlineStyle, t);
      t34 = t1 ? _null : a.rangePickerHeaderHelpStyle;
      t34 = A.TextStyle_lerp(t34, t3 ? _null : b.rangePickerHeaderHelpStyle, t);
      t35 = t1 ? _null : a.rangeSelectionBackgroundColor;
      t35 = A.Color_lerp(t35, t3 ? _null : b.rangeSelectionBackgroundColor, t);
      t36 = t1 ? _null : a.rangeSelectionOverlayColor;
      t16 = A.WidgetStateProperty_lerp(t36, t3 ? _null : b.rangeSelectionOverlayColor, t, A.ui_Color_lerp$closure(), t16);
      t36 = t1 ? _null : a.dividerColor;
      t36 = A.Color_lerp(t36, t3 ? _null : b.dividerColor, t);
      t37 = t < 0.5;
      if (t37)
        t38 = t1 ? _null : a.inputDecorationTheme;
      else
        t38 = t3 ? _null : b.inputDecorationTheme;
      t39 = t1 ? _null : a.cancelButtonStyle;
      t39 = A.ButtonStyle_lerp(t39, t3 ? _null : b.cancelButtonStyle, t);
      t40 = t1 ? _null : a.confirmButtonStyle;
      t40 = A.ButtonStyle_lerp(t40, t3 ? _null : b.confirmButtonStyle, t);
      if (t37)
        t1 = t1 ? _null : a.locale;
      else
        t1 = t3 ? _null : b.locale;
      return A.DatePickerThemeData$(t2, t39, t40, t14, t15, t17, t19, t13, t36, t4, t8, t9, t10, t11, t38, t1, t26, t27, t31, t32, t33, t34, t28, t30, t29, t35, t16, t5, t7, t6, t20, t21, t18, t12, t24, t23, t25, t22);
    },
    DatePickerThemeData__lerpBorderSide(a, b, t) {
      if (a == b)
        return a;
      if (a == null)
        return A.BorderSide_lerp(A.BorderSide$(b.color.withAlpha$1(0), -1, C.BorderStyle_1, 0), b, t);
      return A.BorderSide_lerp(a, A.BorderSide$(a.color.withAlpha$1(0), -1, C.BorderStyle_1, 0), t);
    },
    DatePickerThemeData: function DatePickerThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37) {
      var _ = this;
      _.backgroundColor = t0;
      _.elevation = t1;
      _.shadowColor = t2;
      _.surfaceTintColor = t3;
      _.shape = t4;
      _.headerBackgroundColor = t5;
      _.headerForegroundColor = t6;
      _.headerHeadlineStyle = t7;
      _.headerHelpStyle = t8;
      _.weekdayStyle = t9;
      _.dayStyle = t10;
      _.dayForegroundColor = t11;
      _.dayBackgroundColor = t12;
      _.dayOverlayColor = t13;
      _.dayShape = t14;
      _.todayForegroundColor = t15;
      _.todayBackgroundColor = t16;
      _.todayBorder = t17;
      _.yearStyle = t18;
      _.yearForegroundColor = t19;
      _.yearBackgroundColor = t20;
      _.yearOverlayColor = t21;
      _.rangePickerBackgroundColor = t22;
      _.rangePickerElevation = t23;
      _.rangePickerShadowColor = t24;
      _.rangePickerSurfaceTintColor = t25;
      _.rangePickerShape = t26;
      _.rangePickerHeaderBackgroundColor = t27;
      _.rangePickerHeaderForegroundColor = t28;
      _.rangePickerHeaderHeadlineStyle = t29;
      _.rangePickerHeaderHelpStyle = t30;
      _.rangeSelectionBackgroundColor = t31;
      _.rangeSelectionOverlayColor = t32;
      _.dividerColor = t33;
      _.inputDecorationTheme = t34;
      _.cancelButtonStyle = t35;
      _.confirmButtonStyle = t36;
      _.locale = t37;
    },
    _DatePickerThemeData_Object_Diagnosticable: function _DatePickerThemeData_Object_Diagnosticable() {
    },
    DialogTheme$(actionsPadding, alignment, backgroundColor, barrierColor, clipBehavior, contentTextStyle, elevation, iconColor, insetPadding, shadowColor, shape, surfaceTintColor, titleTextStyle) {
      return new A.DialogTheme(backgroundColor, elevation, shadowColor, surfaceTintColor, shape, alignment, titleTextStyle, contentTextStyle, actionsPadding, iconColor, barrierColor, insetPadding, clipBehavior);
    },
    DialogTheme_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, _null = null;
      if (a == b && a != null)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.backgroundColor;
      t3 = b == null;
      t2 = A.Color_lerp(t2, t3 ? _null : b.backgroundColor, t);
      t4 = t1 ? _null : a.elevation;
      t4 = A.lerpDouble(t4, t3 ? _null : b.elevation, t);
      t5 = t1 ? _null : a.shadowColor;
      t5 = A.Color_lerp(t5, t3 ? _null : b.shadowColor, t);
      t6 = t1 ? _null : a.surfaceTintColor;
      t6 = A.Color_lerp(t6, t3 ? _null : b.surfaceTintColor, t);
      t7 = t1 ? _null : a.shape;
      t7 = A.ShapeBorder_lerp(t7, t3 ? _null : b.shape, t);
      t8 = t1 ? _null : a.alignment;
      t8 = A.AlignmentGeometry_lerp(t8, t3 ? _null : b.alignment, t);
      t9 = t1 ? _null : a.iconColor;
      t9 = A.Color_lerp(t9, t3 ? _null : b.iconColor, t);
      t10 = t1 ? _null : a.titleTextStyle;
      t10 = A.TextStyle_lerp(t10, t3 ? _null : b.titleTextStyle, t);
      t11 = t1 ? _null : a.contentTextStyle;
      t11 = A.TextStyle_lerp(t11, t3 ? _null : b.contentTextStyle, t);
      t12 = t1 ? _null : a.actionsPadding;
      t12 = A.EdgeInsetsGeometry_lerp(t12, t3 ? _null : b.actionsPadding, t);
      t13 = t1 ? _null : a.barrierColor;
      t13 = A.Color_lerp(t13, t3 ? _null : b.barrierColor, t);
      t14 = t1 ? _null : a.insetPadding;
      t14 = A.EdgeInsets_lerp(t14, t3 ? _null : b.insetPadding, t);
      if (t < 0.5)
        t1 = t1 ? _null : a.clipBehavior;
      else
        t1 = t3 ? _null : b.clipBehavior;
      return A.DialogTheme$(t12, t8, t2, t13, t1, t11, t4, t9, t14, t5, t7, t6, t10);
    },
    DialogTheme: function DialogTheme(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.backgroundColor = t0;
      _.elevation = t1;
      _.shadowColor = t2;
      _.surfaceTintColor = t3;
      _.shape = t4;
      _.alignment = t5;
      _.titleTextStyle = t6;
      _.contentTextStyle = t7;
      _.actionsPadding = t8;
      _.iconColor = t9;
      _.barrierColor = t10;
      _.insetPadding = t11;
      _.clipBehavior = t12;
    },
    _DialogTheme_Object_Diagnosticable: function _DialogTheme_Object_Diagnosticable() {
    },
    DividerThemeData$(color, endIndent, indent, space, thickness) {
      return new A.DividerThemeData(color, space, thickness, indent, endIndent);
    },
    DividerThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, _null = null;
      if (a == b && a != null)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.color;
      t3 = b == null;
      t2 = A.Color_lerp(t2, t3 ? _null : b.color, t);
      t4 = t1 ? _null : a.space;
      t4 = A.lerpDouble(t4, t3 ? _null : b.space, t);
      t5 = t1 ? _null : a.thickness;
      t5 = A.lerpDouble(t5, t3 ? _null : b.thickness, t);
      t6 = t1 ? _null : a.indent;
      t6 = A.lerpDouble(t6, t3 ? _null : b.indent, t);
      t1 = t1 ? _null : a.endIndent;
      return A.DividerThemeData$(t2, A.lerpDouble(t1, t3 ? _null : b.endIndent, t), t6, t4, t5);
    },
    DividerThemeData: function DividerThemeData(t0, t1, t2, t3, t4) {
      var _ = this;
      _.color = t0;
      _.space = t1;
      _.thickness = t2;
      _.indent = t3;
      _.endIndent = t4;
    },
    _DividerThemeData_Object_Diagnosticable: function _DividerThemeData_Object_Diagnosticable() {
    },
    DrawerThemeData$(backgroundColor, clipBehavior, elevation, endShape, scrimColor, shadowColor, shape, surfaceTintColor, width) {
      return new A.DrawerThemeData(backgroundColor, scrimColor, elevation, shadowColor, surfaceTintColor, shape, endShape, width, clipBehavior);
    },
    DrawerThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, _null = null;
      if (a == b)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.backgroundColor;
      t3 = b == null;
      t2 = A.Color_lerp(t2, t3 ? _null : b.backgroundColor, t);
      t4 = t1 ? _null : a.scrimColor;
      t4 = A.Color_lerp(t4, t3 ? _null : b.scrimColor, t);
      t5 = t1 ? _null : a.elevation;
      t5 = A.lerpDouble(t5, t3 ? _null : b.elevation, t);
      t6 = t1 ? _null : a.shadowColor;
      t6 = A.Color_lerp(t6, t3 ? _null : b.shadowColor, t);
      t7 = t1 ? _null : a.surfaceTintColor;
      t7 = A.Color_lerp(t7, t3 ? _null : b.surfaceTintColor, t);
      t8 = t1 ? _null : a.shape;
      t8 = A.ShapeBorder_lerp(t8, t3 ? _null : b.shape, t);
      t9 = t1 ? _null : a.endShape;
      t9 = A.ShapeBorder_lerp(t9, t3 ? _null : b.endShape, t);
      t10 = t1 ? _null : a.width;
      t10 = A.lerpDouble(t10, t3 ? _null : b.width, t);
      if (t < 0.5)
        t1 = t1 ? _null : a.clipBehavior;
      else
        t1 = t3 ? _null : b.clipBehavior;
      return A.DrawerThemeData$(t2, t1, t5, t9, t4, t6, t8, t7, t10);
    },
    DrawerThemeData: function DrawerThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.backgroundColor = t0;
      _.scrimColor = t1;
      _.elevation = t2;
      _.shadowColor = t3;
      _.surfaceTintColor = t4;
      _.shape = t5;
      _.endShape = t6;
      _.width = t7;
      _.clipBehavior = t8;
    },
    _DrawerThemeData_Object_Diagnosticable: function _DrawerThemeData_Object_Diagnosticable() {
    },
    DropdownMenuThemeData$(inputDecorationTheme, menuStyle, textStyle) {
      return new A.DropdownMenuThemeData(textStyle, inputDecorationTheme, menuStyle);
    },
    DropdownMenuThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, _null = null;
      if (a == b && a != null)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.textStyle;
      t3 = b == null;
      t2 = A.TextStyle_lerp(t2, t3 ? _null : b.textStyle, t);
      if (t < 0.5)
        t4 = t1 ? _null : a.inputDecorationTheme;
      else
        t4 = t3 ? _null : b.inputDecorationTheme;
      t1 = t1 ? _null : a.menuStyle;
      return A.DropdownMenuThemeData$(t4, A.MenuStyle_lerp(t1, t3 ? _null : b.menuStyle, t), t2);
    },
    DropdownMenuThemeData: function DropdownMenuThemeData(t0, t1, t2) {
      this.textStyle = t0;
      this.inputDecorationTheme = t1;
      this.menuStyle = t2;
    },
    _DropdownMenuThemeData_Object_Diagnosticable: function _DropdownMenuThemeData_Object_Diagnosticable() {
    },
    ElevatedButtonThemeData$(style) {
      return new A.ElevatedButtonThemeData(style);
    },
    ElevatedButtonThemeData_lerp(a, b, t) {
      var t1;
      if (a == b)
        return a;
      t1 = a == null ? null : a.style;
      return A.ElevatedButtonThemeData$(A.ButtonStyle_lerp(t1, b == null ? null : b.style, t));
    },
    ElevatedButtonThemeData: function ElevatedButtonThemeData(t0) {
      this.style = t0;
    },
    _ElevatedButtonThemeData_Object_Diagnosticable: function _ElevatedButtonThemeData_Object_Diagnosticable() {
    },
    ElevationOverlay_applySurfaceTint(color, surfaceTint, elevation) {
      if (surfaceTint != null && !B.boolConversionCheck(surfaceTint.$eq(0, D.Color_0)))
        return A.Color_alphaBlend(surfaceTint.withOpacity$1(A.ElevationOverlay__surfaceTintOpacityForElevation(elevation)), color);
      return color;
    },
    ElevationOverlay__surfaceTintOpacityForElevation(elevation) {
      var index, t1, t2, t3, lower, t4;
      if (elevation < 0)
        return 0;
      index = 0;
      while (true) {
        if (!(index < 6))
          return B.ioore(C.List_4Dc, index);
        t1 = C.List_4Dc[index];
        t2 = t1.elevation;
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (!(elevation >= t2))
          break;
        if (elevation === t2 || index + 1 === 6)
          return t1.opacity;
        ++index;
      }
      t3 = index - 1;
      if (!(t3 >= 0))
        return B.ioore(C.List_4Dc, t3);
      lower = C.List_4Dc[t3];
      t3 = lower.elevation;
      if (typeof t3 !== "number")
        return B.iae(t3);
      t4 = lower.opacity;
      t1 = t1.opacity;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return t4 + (elevation - t3) / (t2 - t3) * (t1 - t4);
    },
    ElevationOverlay_applyOverlay(context, color, elevation) {
      var theme = A.Theme_of(context);
      if (elevation > 0 && B.boolConversionCheck(theme.applyElevationOverlayColor) && B.boolConversionCheck(J.$eq$(theme.get$brightness(), D.Brightness_0)) && B.boolConversionCheck(J.$eq$(color.withOpacity$1(1), theme.colorScheme.surface.withOpacity$1(1))))
        return A.ElevationOverlay_colorWithOverlay(color, theme.colorScheme.onSurface, elevation);
      return color;
    },
    ElevationOverlay_colorWithOverlay(surface, overlay, elevation) {
      return A.Color_alphaBlend(A.ElevationOverlay__overlayColor(overlay, elevation), surface);
    },
    ElevationOverlay__overlayColor(color, elevation) {
      var t1 = A.log(elevation + 1);
      if (typeof t1 !== "number")
        return B.iae(t1);
      return color.withOpacity$1((4.5 * t1 + 2) / 100);
    },
    _ElevationOpacity: function _ElevationOpacity(t0, t1) {
      this.elevation = t0;
      this.opacity = t1;
    },
    ExpansionTileThemeData$(backgroundColor, childrenPadding, clipBehavior, collapsedBackgroundColor, collapsedIconColor, collapsedShape, collapsedTextColor, expandedAlignment, expansionAnimationStyle, iconColor, shape, textColor, tilePadding) {
      return new A.ExpansionTileThemeData(backgroundColor, collapsedBackgroundColor, tilePadding, expandedAlignment, childrenPadding, iconColor, collapsedIconColor, textColor, collapsedTextColor, shape, collapsedShape, clipBehavior, expansionAnimationStyle);
    },
    ExpansionTileThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, _null = null;
      if (a == b)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.backgroundColor;
      t3 = b == null;
      t2 = A.Color_lerp(t2, t3 ? _null : b.backgroundColor, t);
      t4 = t1 ? _null : a.collapsedBackgroundColor;
      t4 = A.Color_lerp(t4, t3 ? _null : b.collapsedBackgroundColor, t);
      t5 = t1 ? _null : a.tilePadding;
      t5 = A.EdgeInsetsGeometry_lerp(t5, t3 ? _null : b.tilePadding, t);
      t6 = t1 ? _null : a.expandedAlignment;
      t6 = A.AlignmentGeometry_lerp(t6, t3 ? _null : b.expandedAlignment, t);
      t7 = t1 ? _null : a.childrenPadding;
      t7 = A.EdgeInsetsGeometry_lerp(t7, t3 ? _null : b.childrenPadding, t);
      t8 = t1 ? _null : a.iconColor;
      t8 = A.Color_lerp(t8, t3 ? _null : b.iconColor, t);
      t9 = t1 ? _null : a.collapsedIconColor;
      t9 = A.Color_lerp(t9, t3 ? _null : b.collapsedIconColor, t);
      t10 = t1 ? _null : a.textColor;
      t10 = A.Color_lerp(t10, t3 ? _null : b.textColor, t);
      t11 = t1 ? _null : a.collapsedTextColor;
      t11 = A.Color_lerp(t11, t3 ? _null : b.collapsedTextColor, t);
      t12 = t1 ? _null : a.shape;
      t12 = A.ShapeBorder_lerp(t12, t3 ? _null : b.shape, t);
      t13 = t1 ? _null : a.collapsedShape;
      t13 = A.ShapeBorder_lerp(t13, t3 ? _null : b.collapsedShape, t);
      t14 = t < 0.5;
      if (t14)
        t15 = t1 ? _null : a.clipBehavior;
      else
        t15 = t3 ? _null : b.clipBehavior;
      if (t14)
        t1 = t1 ? _null : a.expansionAnimationStyle;
      else
        t1 = t3 ? _null : b.expansionAnimationStyle;
      return A.ExpansionTileThemeData$(t2, t7, t15, t4, t9, t13, t11, t6, t1, t8, t12, t10, t5);
    },
    ExpansionTileThemeData: function ExpansionTileThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.backgroundColor = t0;
      _.collapsedBackgroundColor = t1;
      _.tilePadding = t2;
      _.expandedAlignment = t3;
      _.childrenPadding = t4;
      _.iconColor = t5;
      _.collapsedIconColor = t6;
      _.textColor = t7;
      _.collapsedTextColor = t8;
      _.shape = t9;
      _.collapsedShape = t10;
      _.clipBehavior = t11;
      _.expansionAnimationStyle = t12;
    },
    _ExpansionTileThemeData_Object_Diagnosticable: function _ExpansionTileThemeData_Object_Diagnosticable() {
    },
    FilledButtonThemeData$(style) {
      return new A.FilledButtonThemeData(style);
    },
    FilledButtonThemeData_lerp(a, b, t) {
      var t1;
      if (a == b)
        return a;
      t1 = a == null ? null : a.style;
      return A.FilledButtonThemeData$(A.ButtonStyle_lerp(t1, b == null ? null : b.style, t));
    },
    FilledButtonThemeData: function FilledButtonThemeData(t0) {
      this.style = t0;
    },
    _FilledButtonThemeData_Object_Diagnosticable: function _FilledButtonThemeData_Object_Diagnosticable() {
    },
    FloatingActionButton$(child, mini, onPressed) {
      return new A.FloatingActionButton(child, onPressed, mini ? C._FloatingActionButtonType_1 : C._FloatingActionButtonType_0, null);
    },
    _EffectiveMouseCursor$(widgetCursor, themeCursor) {
      return new A._EffectiveMouseCursor(widgetCursor, themeCursor);
    },
    _ChildOverflowBox$(child) {
      return new A._ChildOverflowBox(child, null);
    },
    _RenderChildOverflowBox$(textDirection) {
      var t1 = new A._RenderChildOverflowBox(C.Alignment_0_0, textDirection, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderShiftedBox$1(null);
      return t1;
    },
    _FABDefaultsM2$(context, type, hasChild) {
      var _null = null;
      return new A._FABDefaultsM2(type, hasChild, A.Theme_of(context), A.Theme_of(context).colorScheme, _null, _null, _null, _null, _null, 6, 6, 8, _null, 12, _null, true, _null, C.BoxConstraints_56_56_56_56, C.BoxConstraints_40_40_40_40, C.BoxConstraints_96_96_96_96, C.BoxConstraints_cUt, 8, _null, _null, _null);
    },
    _FABDefaultsM3$(context, type, hasChild) {
      var _null = null;
      return new A._FABDefaultsM3(context, type, hasChild, _null, _null, _null, _null, _null, 6, 6, 8, _null, 6, _null, true, _null, C.BoxConstraints_56_56_56_56, C.BoxConstraints_40_40_40_40, C.BoxConstraints_96_96_96_96, C.BoxConstraints_cUt0, 8, _null, _null, _null);
    },
    _DefaultHeroTag: function _DefaultHeroTag() {
    },
    _FloatingActionButtonType: function _FloatingActionButtonType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    FloatingActionButton: function FloatingActionButton(t0, t1, t2, t3) {
      var _ = this;
      _.child = t0;
      _.onPressed = t1;
      _._floatingActionButtonType = t2;
      _.key = t3;
    },
    _EffectiveMouseCursor: function _EffectiveMouseCursor(t0, t1) {
      this.widgetCursor = t0;
      this.themeCursor = t1;
    },
    _ChildOverflowBox: function _ChildOverflowBox(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _RenderChildOverflowBox: function _RenderChildOverflowBox(t0, t1, t2, t3, t4) {
      var _ = this;
      _._resolvedAlignment = null;
      _._alignment = t0;
      _._shifted_box$_textDirection = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._layoutCacheStorage = t3;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    _FABDefaultsM2: function _FABDefaultsM2(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24) {
      var _ = this;
      _.type = t0;
      _.hasChild = t1;
      _._theme = t2;
      _._floating_action_button$_colors = t3;
      _.foregroundColor = t4;
      _.backgroundColor = t5;
      _.focusColor = t6;
      _.hoverColor = t7;
      _.splashColor = t8;
      _.elevation = t9;
      _.focusElevation = t10;
      _.hoverElevation = t11;
      _.disabledElevation = t12;
      _.highlightElevation = t13;
      _.shape = t14;
      _.enableFeedback = t15;
      _.iconSize = t16;
      _.sizeConstraints = t17;
      _.smallSizeConstraints = t18;
      _.largeSizeConstraints = t19;
      _.extendedSizeConstraints = t20;
      _.extendedIconLabelSpacing = t21;
      _.extendedPadding = t22;
      _.extendedTextStyle = t23;
      _.mouseCursor = t24;
    },
    _FABDefaultsM3: function _FABDefaultsM3(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23) {
      var _ = this;
      _.context = t0;
      _.type = t1;
      _.hasChild = t2;
      _.___FABDefaultsM3__textTheme_FI = _.___FABDefaultsM3__colors_FI = $;
      _.foregroundColor = t3;
      _.backgroundColor = t4;
      _.focusColor = t5;
      _.hoverColor = t6;
      _.splashColor = t7;
      _.elevation = t8;
      _.focusElevation = t9;
      _.hoverElevation = t10;
      _.disabledElevation = t11;
      _.highlightElevation = t12;
      _.shape = t13;
      _.enableFeedback = t14;
      _.iconSize = t15;
      _.sizeConstraints = t16;
      _.smallSizeConstraints = t17;
      _.largeSizeConstraints = t18;
      _.extendedSizeConstraints = t19;
      _.extendedIconLabelSpacing = t20;
      _.extendedPadding = t21;
      _.extendedTextStyle = t22;
      _.mouseCursor = t23;
    },
    FloatingActionButtonThemeData$(backgroundColor, disabledElevation, elevation, enableFeedback, extendedIconLabelSpacing, extendedPadding, extendedSizeConstraints, extendedTextStyle, focusColor, focusElevation, foregroundColor, highlightElevation, hoverColor, hoverElevation, iconSize, largeSizeConstraints, mouseCursor, shape, sizeConstraints, smallSizeConstraints, splashColor) {
      return new A.FloatingActionButtonThemeData(foregroundColor, backgroundColor, focusColor, hoverColor, splashColor, elevation, focusElevation, hoverElevation, disabledElevation, highlightElevation, shape, enableFeedback, iconSize, sizeConstraints, smallSizeConstraints, largeSizeConstraints, extendedSizeConstraints, extendedIconLabelSpacing, extendedPadding, extendedTextStyle, mouseCursor);
    },
    FloatingActionButtonThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, _null = null;
      if (a == b)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.get$foregroundColor();
      t3 = b == null;
      t2 = A.Color_lerp(t2, t3 ? _null : b.get$foregroundColor(), t);
      t4 = t1 ? _null : a.get$backgroundColor();
      t4 = A.Color_lerp(t4, t3 ? _null : b.get$backgroundColor(), t);
      t5 = t1 ? _null : a.get$focusColor();
      t5 = A.Color_lerp(t5, t3 ? _null : b.get$focusColor(), t);
      t6 = t1 ? _null : a.get$hoverColor();
      t6 = A.Color_lerp(t6, t3 ? _null : b.get$hoverColor(), t);
      t7 = t1 ? _null : a.get$splashColor();
      t7 = A.Color_lerp(t7, t3 ? _null : b.get$splashColor(), t);
      t8 = t1 ? _null : a.elevation;
      t8 = A.lerpDouble(t8, t3 ? _null : b.elevation, t);
      t9 = t1 ? _null : a.focusElevation;
      t9 = A.lerpDouble(t9, t3 ? _null : b.focusElevation, t);
      t10 = t1 ? _null : a.hoverElevation;
      t10 = A.lerpDouble(t10, t3 ? _null : b.hoverElevation, t);
      t11 = t1 ? _null : a.disabledElevation;
      t11 = A.lerpDouble(t11, t3 ? _null : b.disabledElevation, t);
      t12 = t1 ? _null : a.highlightElevation;
      t12 = A.lerpDouble(t12, t3 ? _null : b.highlightElevation, t);
      t13 = t1 ? _null : a.get$shape();
      t13 = A.ShapeBorder_lerp(t13, t3 ? _null : b.get$shape(), t);
      t14 = t < 0.5;
      if (t14)
        t15 = t1 ? _null : a.enableFeedback;
      else
        t15 = t3 ? _null : b.enableFeedback;
      t16 = t1 ? _null : a.get$iconSize();
      t16 = A.lerpDouble(t16, t3 ? _null : b.get$iconSize(), t);
      t17 = t1 ? _null : a.sizeConstraints;
      t17 = A.BoxConstraints_lerp(t17, t3 ? _null : b.sizeConstraints, t);
      t18 = t1 ? _null : a.smallSizeConstraints;
      t18 = A.BoxConstraints_lerp(t18, t3 ? _null : b.smallSizeConstraints, t);
      t19 = t1 ? _null : a.largeSizeConstraints;
      t19 = A.BoxConstraints_lerp(t19, t3 ? _null : b.largeSizeConstraints, t);
      t20 = t1 ? _null : a.extendedSizeConstraints;
      t20 = A.BoxConstraints_lerp(t20, t3 ? _null : b.extendedSizeConstraints, t);
      t21 = t1 ? _null : a.extendedIconLabelSpacing;
      t21 = A.lerpDouble(t21, t3 ? _null : b.extendedIconLabelSpacing, t);
      t22 = t1 ? _null : a.get$extendedPadding();
      t22 = A.EdgeInsetsGeometry_lerp(t22, t3 ? _null : b.get$extendedPadding(), t);
      t23 = t1 ? _null : a.get$extendedTextStyle();
      t23 = A.TextStyle_lerp(t23, t3 ? _null : b.get$extendedTextStyle(), t);
      if (t14)
        t1 = t1 ? _null : a.mouseCursor;
      else
        t1 = t3 ? _null : b.mouseCursor;
      return A.FloatingActionButtonThemeData$(t4, t11, t8, t15, t21, t22, t20, t23, t5, t9, t2, t12, t6, t10, t16, t19, t1, t13, t17, t18, t7);
    },
    FloatingActionButtonThemeData: function FloatingActionButtonThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20) {
      var _ = this;
      _.foregroundColor = t0;
      _.backgroundColor = t1;
      _.focusColor = t2;
      _.hoverColor = t3;
      _.splashColor = t4;
      _.elevation = t5;
      _.focusElevation = t6;
      _.hoverElevation = t7;
      _.disabledElevation = t8;
      _.highlightElevation = t9;
      _.shape = t10;
      _.enableFeedback = t11;
      _.iconSize = t12;
      _.sizeConstraints = t13;
      _.smallSizeConstraints = t14;
      _.largeSizeConstraints = t15;
      _.extendedSizeConstraints = t16;
      _.extendedIconLabelSpacing = t17;
      _.extendedPadding = t18;
      _.extendedTextStyle = t19;
      _.mouseCursor = t20;
    },
    _FloatingActionButtonThemeData_Object_Diagnosticable: function _FloatingActionButtonThemeData_Object_Diagnosticable() {
    },
    IconButton$(icon, onPressed) {
      return new A.IconButton(icon, onPressed, null);
    },
    IconButton_styleFrom(alignment, disabledForegroundColor, disabledMouseCursor, enableFeedback, enabledMouseCursor, focusColor, foregroundColor, highlightColor, hoverColor, iconSize, maximumSize, minimumSize, padding, visualDensity) {
      var overlayColorProp, mouseCursor, t3, t4, t5, t6, t7, t8, t9, _null = null,
        t1 = foregroundColor == null,
        buttonForegroundColor = t1 && disabledForegroundColor == null ? _null : A._IconButtonDefaultForeground$(foregroundColor, disabledForegroundColor),
        t2 = false;
      if (t1)
        if (hoverColor == null)
          if (focusColor == null)
            t1 = highlightColor == null;
          else
            t1 = t2;
        else
          t1 = t2;
      else
        t1 = t2;
      if (t1)
        overlayColorProp = _null;
      else {
        $label0$0: {
          t1 = A._IconButtonDefaultOverlay$(foregroundColor, focusColor, hoverColor, highlightColor, _null);
          break $label0$0;
        }
        overlayColorProp = t1;
      }
      mouseCursor = A._IconButtonDefaultMouseCursor$(enabledMouseCursor, disabledMouseCursor);
      t1 = type$.Color;
      t2 = A.ButtonStyleButton_allOrNull(_null, t1);
      t1 = A.ButtonStyleButton_allOrNull(_null, t1);
      t3 = type$.double;
      t4 = A.ButtonStyleButton_allOrNull(_null, t3);
      t5 = A.ButtonStyleButton_allOrNull(padding, type$.EdgeInsetsGeometry);
      t6 = type$.Size;
      t7 = A.ButtonStyleButton_allOrNull(minimumSize, t6);
      t8 = A.ButtonStyleButton_allOrNull(_null, t6);
      t6 = A.ButtonStyleButton_allOrNull(maximumSize, t6);
      t3 = A.ButtonStyleButton_allOrNull(iconSize, t3);
      t9 = A.ButtonStyleButton_allOrNull(_null, type$.BorderSide);
      return A.ButtonStyle$(alignment, _null, _null, _null, t4, enableFeedback, t8, _null, buttonForegroundColor, _null, t3, t6, t7, mouseCursor, overlayColorProp, t5, t2, A.ButtonStyleButton_allOrNull(_null, type$.OutlinedBorder), t9, _null, t1, _null, _null, visualDensity);
    },
    _SelectableIconButton$(autofocus, child, focusNode, isSelected, onPressed, style, variant) {
      return new A._SelectableIconButton(isSelected, style, focusNode, variant, autofocus, onPressed, child, null);
    },
    _SelectableIconButtonState$() {
      return new A._SelectableIconButtonState();
    },
    _IconButtonM3$(autofocus, child, focusNode, onPressed, statesController, style, toggleable, variant) {
      var _null = null;
      return new A._IconButtonM3(variant, toggleable, onPressed, _null, _null, _null, style, D.Clip_0, focusNode, autofocus, statesController, child, _null);
    },
    _IconButtonDefaultForeground$(foregroundColor, disabledForegroundColor) {
      return new A._IconButtonDefaultForeground(foregroundColor, disabledForegroundColor);
    },
    _IconButtonDefaultOverlay$(foregroundColor, focusColor, hoverColor, highlightColor, overlayColor) {
      return new A._IconButtonDefaultOverlay(foregroundColor, focusColor, hoverColor, highlightColor, overlayColor);
    },
    _IconButtonDefaultMouseCursor$(enabledCursor, disabledCursor) {
      return new A._IconButtonDefaultMouseCursor(enabledCursor, disabledCursor);
    },
    _IconButtonDefaultsM3$(context, toggleable) {
      var _null = null;
      return new A._IconButtonDefaultsM3(context, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, D.Duration_200000, true, C.Alignment_0_0, _null, _null, _null);
    },
    _FilledIconButtonDefaultsM3$(context, toggleable) {
      var _null = null;
      return new A._FilledIconButtonDefaultsM3(context, toggleable, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, D.Duration_200000, true, C.Alignment_0_0, _null, _null, _null);
    },
    _FilledTonalIconButtonDefaultsM3$(context, toggleable) {
      var _null = null;
      return new A._FilledTonalIconButtonDefaultsM3(context, toggleable, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, D.Duration_200000, true, C.Alignment_0_0, _null, _null, _null);
    },
    _OutlinedIconButtonDefaultsM3$(context, toggleable) {
      var _null = null;
      return new A._OutlinedIconButtonDefaultsM3(context, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, D.Duration_200000, true, C.Alignment_0_0, _null, _null, _null);
    },
    _IconButtonVariant: function _IconButtonVariant(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    IconButton: function IconButton(t0, t1, t2) {
      this.icon = t0;
      this.onPressed = t1;
      this.key = t2;
    },
    _SelectableIconButton: function _SelectableIconButton(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.isSelected = t0;
      _.style = t1;
      _.focusNode = t2;
      _.variant = t3;
      _.autofocus = t4;
      _.onPressed = t5;
      _.child = t6;
      _.key = t7;
    },
    _SelectableIconButtonState: function _SelectableIconButtonState() {
      this.___SelectableIconButtonState_statesController_F = $;
      this._framework0$_element = this._widget = null;
    },
    _IconButtonM3: function _IconButtonM3(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.variant = t0;
      _.toggleable = t1;
      _.onPressed = t2;
      _.onLongPress = t3;
      _.onHover = t4;
      _.onFocusChange = t5;
      _.style = t6;
      _.clipBehavior = t7;
      _.focusNode = t8;
      _.autofocus = t9;
      _.statesController = t10;
      _.child = t11;
      _.key = t12;
    },
    _IconButtonDefaultForeground: function _IconButtonDefaultForeground(t0, t1) {
      this.foregroundColor = t0;
      this.disabledForegroundColor = t1;
    },
    _IconButtonDefaultOverlay: function _IconButtonDefaultOverlay(t0, t1, t2, t3, t4) {
      var _ = this;
      _.foregroundColor = t0;
      _.focusColor = t1;
      _.hoverColor = t2;
      _.highlightColor = t3;
      _.overlayColor = t4;
    },
    _IconButtonDefaultMouseCursor: function _IconButtonDefaultMouseCursor(t0, t1) {
      this.enabledCursor = t0;
      this.disabledCursor = t1;
    },
    _IconButtonDefaultsM3: function _IconButtonDefaultsM3(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24) {
      var _ = this;
      _.context = t0;
      _.___IconButtonDefaultsM3__colors_FI = $;
      _.textStyle = t1;
      _.backgroundColor = t2;
      _.foregroundColor = t3;
      _.overlayColor = t4;
      _.shadowColor = t5;
      _.surfaceTintColor = t6;
      _.elevation = t7;
      _.padding = t8;
      _.minimumSize = t9;
      _.fixedSize = t10;
      _.maximumSize = t11;
      _.iconColor = t12;
      _.iconSize = t13;
      _.side = t14;
      _.shape = t15;
      _.mouseCursor = t16;
      _.visualDensity = t17;
      _.tapTargetSize = t18;
      _.animationDuration = t19;
      _.enableFeedback = t20;
      _.alignment = t21;
      _.splashFactory = t22;
      _.backgroundBuilder = t23;
      _.foregroundBuilder = t24;
    },
    _IconButtonDefaultsM3_foregroundColor_closure: function _IconButtonDefaultsM3_foregroundColor_closure(t0) {
      this.$this = t0;
    },
    _IconButtonDefaultsM3_overlayColor_closure: function _IconButtonDefaultsM3_overlayColor_closure(t0) {
      this.$this = t0;
    },
    _IconButtonDefaultsM3_mouseCursor_closure: function _IconButtonDefaultsM3_mouseCursor_closure() {
    },
    _FilledIconButtonDefaultsM3: function _FilledIconButtonDefaultsM3(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25) {
      var _ = this;
      _.context = t0;
      _.toggleable = t1;
      _.___FilledIconButtonDefaultsM3__colors_FI = $;
      _.textStyle = t2;
      _.backgroundColor = t3;
      _.foregroundColor = t4;
      _.overlayColor = t5;
      _.shadowColor = t6;
      _.surfaceTintColor = t7;
      _.elevation = t8;
      _.padding = t9;
      _.minimumSize = t10;
      _.fixedSize = t11;
      _.maximumSize = t12;
      _.iconColor = t13;
      _.iconSize = t14;
      _.side = t15;
      _.shape = t16;
      _.mouseCursor = t17;
      _.visualDensity = t18;
      _.tapTargetSize = t19;
      _.animationDuration = t20;
      _.enableFeedback = t21;
      _.alignment = t22;
      _.splashFactory = t23;
      _.backgroundBuilder = t24;
      _.foregroundBuilder = t25;
    },
    _FilledIconButtonDefaultsM3_backgroundColor_closure: function _FilledIconButtonDefaultsM3_backgroundColor_closure(t0) {
      this.$this = t0;
    },
    _FilledIconButtonDefaultsM3_foregroundColor_closure: function _FilledIconButtonDefaultsM3_foregroundColor_closure(t0) {
      this.$this = t0;
    },
    _FilledIconButtonDefaultsM3_overlayColor_closure: function _FilledIconButtonDefaultsM3_overlayColor_closure(t0) {
      this.$this = t0;
    },
    _FilledIconButtonDefaultsM3_mouseCursor_closure: function _FilledIconButtonDefaultsM3_mouseCursor_closure() {
    },
    _FilledTonalIconButtonDefaultsM3: function _FilledTonalIconButtonDefaultsM3(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25) {
      var _ = this;
      _.context = t0;
      _.toggleable = t1;
      _.___FilledTonalIconButtonDefaultsM3__colors_FI = $;
      _.textStyle = t2;
      _.backgroundColor = t3;
      _.foregroundColor = t4;
      _.overlayColor = t5;
      _.shadowColor = t6;
      _.surfaceTintColor = t7;
      _.elevation = t8;
      _.padding = t9;
      _.minimumSize = t10;
      _.fixedSize = t11;
      _.maximumSize = t12;
      _.iconColor = t13;
      _.iconSize = t14;
      _.side = t15;
      _.shape = t16;
      _.mouseCursor = t17;
      _.visualDensity = t18;
      _.tapTargetSize = t19;
      _.animationDuration = t20;
      _.enableFeedback = t21;
      _.alignment = t22;
      _.splashFactory = t23;
      _.backgroundBuilder = t24;
      _.foregroundBuilder = t25;
    },
    _FilledTonalIconButtonDefaultsM3_backgroundColor_closure: function _FilledTonalIconButtonDefaultsM3_backgroundColor_closure(t0) {
      this.$this = t0;
    },
    _FilledTonalIconButtonDefaultsM3_foregroundColor_closure: function _FilledTonalIconButtonDefaultsM3_foregroundColor_closure(t0) {
      this.$this = t0;
    },
    _FilledTonalIconButtonDefaultsM3_overlayColor_closure: function _FilledTonalIconButtonDefaultsM3_overlayColor_closure(t0) {
      this.$this = t0;
    },
    _FilledTonalIconButtonDefaultsM3_mouseCursor_closure: function _FilledTonalIconButtonDefaultsM3_mouseCursor_closure() {
    },
    _OutlinedIconButtonDefaultsM3: function _OutlinedIconButtonDefaultsM3(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24) {
      var _ = this;
      _.context = t0;
      _.___OutlinedIconButtonDefaultsM3__colors_FI = $;
      _.textStyle = t1;
      _.backgroundColor = t2;
      _.foregroundColor = t3;
      _.overlayColor = t4;
      _.shadowColor = t5;
      _.surfaceTintColor = t6;
      _.elevation = t7;
      _.padding = t8;
      _.minimumSize = t9;
      _.fixedSize = t10;
      _.maximumSize = t11;
      _.iconColor = t12;
      _.iconSize = t13;
      _.side = t14;
      _.shape = t15;
      _.mouseCursor = t16;
      _.visualDensity = t17;
      _.tapTargetSize = t18;
      _.animationDuration = t19;
      _.enableFeedback = t20;
      _.alignment = t21;
      _.splashFactory = t22;
      _.backgroundBuilder = t23;
      _.foregroundBuilder = t24;
    },
    _OutlinedIconButtonDefaultsM3_backgroundColor_closure: function _OutlinedIconButtonDefaultsM3_backgroundColor_closure(t0) {
      this.$this = t0;
    },
    _OutlinedIconButtonDefaultsM3_foregroundColor_closure: function _OutlinedIconButtonDefaultsM3_foregroundColor_closure(t0) {
      this.$this = t0;
    },
    _OutlinedIconButtonDefaultsM3_overlayColor_closure: function _OutlinedIconButtonDefaultsM3_overlayColor_closure(t0) {
      this.$this = t0;
    },
    _OutlinedIconButtonDefaultsM3_side_closure: function _OutlinedIconButtonDefaultsM3_side_closure(t0) {
      this.$this = t0;
    },
    _OutlinedIconButtonDefaultsM3_mouseCursor_closure: function _OutlinedIconButtonDefaultsM3_mouseCursor_closure() {
    },
    __IconButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable: function __IconButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable() {
    },
    IconButtonThemeData$(style) {
      return new A.IconButtonThemeData(style);
    },
    IconButtonThemeData_lerp(a, b, t) {
      var t1;
      if (a == b)
        return a;
      t1 = a == null ? null : a.style;
      return A.IconButtonThemeData$(A.ButtonStyle_lerp(t1, b == null ? null : b.style, t));
    },
    IconButtonTheme_of(context) {
      var t1;
      context.dependOnInheritedWidgetOfExactType$1$0(type$.IconButtonTheme);
      t1 = A.Theme_of(context).iconButtonTheme;
      return t1;
    },
    IconButtonThemeData: function IconButtonThemeData(t0) {
      this.style = t0;
    },
    _IconButtonThemeData_Object_Diagnosticable: function _IconButtonThemeData_Object_Diagnosticable() {
    },
    InkHighlight$(borderRadius, color, controller, customBorder, fadeDuration, onRemoved, radius, rectCallback, referenceBox, shape, textDirection) {
      var t1 = new A.InkHighlight(shape, radius, borderRadius == null ? C.BorderRadius_ww8 : borderRadius, rectCallback, textDirection, color, customBorder, controller, referenceBox, onRemoved);
      t1.InkFeature$3$controller$onRemoved$referenceBox(controller, onRemoved, referenceBox);
      t1.InkHighlight$11$borderRadius$color$controller$customBorder$fadeDuration$onRemoved$radius$rectCallback$referenceBox$shape$textDirection(borderRadius, color, controller, customBorder, fadeDuration, onRemoved, radius, rectCallback, referenceBox, shape, textDirection);
      return t1;
    },
    InkHighlight: function InkHighlight(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._shape = t0;
      _._radius = t1;
      _._borderRadius = t2;
      _._rectCallback = t3;
      _._ink_highlight$_textDirection = t4;
      _.__InkHighlight__alphaController_A = _.__InkHighlight__alpha_A = $;
      _._active = true;
      _._ink_well$_color = t5;
      _._customBorder = t6;
      _._material$_controller = t7;
      _.referenceBox = t8;
      _.onRemoved = t9;
    },
    _getClipCallback0(referenceBox, containedInkWell, rectCallback) {
      if (rectCallback != null)
        return rectCallback;
      if (containedInkWell)
        return new A._getClipCallback_closure0(referenceBox);
      return null;
    },
    _getTargetRadius0(referenceBox, containedInkWell, rectCallback, position) {
      var size = rectCallback != null ? rectCallback.call$0().get$size() : referenceBox.get$size(),
        t1 = E.max(size.bottomRight$1(D.Offset_0_0).get$distance(), J.$sub$n(size.topRight$1(D.Offset_0_0), size.bottomLeft$1(D.Offset_0_0)).get$distance(), type$.double);
      if (typeof t1 !== "number")
        return t1.$div();
      return t1 / 2;
    },
    InkRipple$(borderRadius, color, containedInkWell, controller, customBorder, onRemoved, position, radius, rectCallback, referenceBox, textDirection) {
      var t1 = borderRadius == null ? C.BorderRadius_ww8 : borderRadius,
        t2 = radius == null ? A._getTargetRadius0(referenceBox, containedInkWell, rectCallback, position) : radius;
      t2 = new A.InkRipple(position, t1, t2, A._getClipCallback0(referenceBox, containedInkWell, rectCallback), textDirection, color, customBorder, controller, referenceBox, onRemoved);
      t2.InkFeature$3$controller$onRemoved$referenceBox(controller, onRemoved, referenceBox);
      t2.InkRipple$11$borderRadius$color$containedInkWell$controller$customBorder$onRemoved$position$radius$rectCallback$referenceBox$textDirection(borderRadius, color, containedInkWell, controller, customBorder, onRemoved, position, radius, rectCallback, referenceBox, textDirection);
      return t2;
    },
    _getClipCallback_closure0: function _getClipCallback_closure0(t0) {
      this.referenceBox = t0;
    },
    _InkRippleFactory: function _InkRippleFactory() {
    },
    InkRipple: function InkRipple(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._ink_ripple$_position = t0;
      _._ink_ripple$_borderRadius = t1;
      _._ink_ripple$_targetRadius = t2;
      _._ink_ripple$_clipCallback = t3;
      _._ink_ripple$_textDirection = t4;
      _.__InkRipple__fadeOutController_A = _.__InkRipple__fadeOut_A = _.__InkRipple__fadeInController_A = _.__InkRipple__fadeIn_A = _.__InkRipple__radiusController_A = _.__InkRipple__radius_A = $;
      _._ink_well$_color = t5;
      _._customBorder = t6;
      _._material$_controller = t7;
      _.referenceBox = t8;
      _.onRemoved = t9;
    },
    _getClipCallback(referenceBox, containedInkWell, rectCallback) {
      if (rectCallback != null)
        return rectCallback;
      if (containedInkWell)
        return new A._getClipCallback_closure(referenceBox);
      return null;
    },
    _getTargetRadius(referenceBox, containedInkWell, rectCallback, position) {
      if (containedInkWell)
        return A._getSplashRadiusForPositionInSize(rectCallback != null ? rectCallback.call$0().get$size() : referenceBox.get$size(), position);
      return 35;
    },
    _getSplashRadiusForPositionInSize(bounds, position) {
      var d1 = position.$sub(0, bounds.topLeft$1(D.Offset_0_0)).get$distance(),
        d2 = position.$sub(0, bounds.topRight$1(D.Offset_0_0)).get$distance(),
        d3 = position.$sub(0, bounds.bottomLeft$1(D.Offset_0_0)).get$distance(),
        d4 = position.$sub(0, bounds.bottomRight$1(D.Offset_0_0)).get$distance(),
        t1 = type$.double;
      return J.ceilToDouble$0$n(E.max(E.max(d1, d2, t1), E.max(d3, d4, t1), t1));
    },
    InkSplash$(borderRadius, color, containedInkWell, controller, customBorder, onRemoved, position, radius, rectCallback, referenceBox, textDirection) {
      var t2,
        t1 = borderRadius == null ? C.BorderRadius_ww8 : borderRadius;
      if (radius == null) {
        position.toString;
        t2 = A._getTargetRadius(referenceBox, containedInkWell, rectCallback, position);
      } else
        t2 = radius;
      t2 = new A.InkSplash(position, t1, t2, A._getClipCallback(referenceBox, containedInkWell, rectCallback), !containedInkWell, textDirection, color, customBorder, controller, referenceBox, onRemoved);
      t2.InkFeature$3$controller$onRemoved$referenceBox(controller, onRemoved, referenceBox);
      t2.InkSplash$11$borderRadius$color$containedInkWell$controller$customBorder$onRemoved$position$radius$rectCallback$referenceBox$textDirection(borderRadius, color, containedInkWell, controller, customBorder, onRemoved, position, radius, rectCallback, referenceBox, textDirection);
      return t2;
    },
    _getClipCallback_closure: function _getClipCallback_closure(t0) {
      this.referenceBox = t0;
    },
    _InkSplashFactory: function _InkSplashFactory() {
    },
    InkSplash: function InkSplash(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _._ink_splash$_position = t0;
      _._ink_splash$_borderRadius = t1;
      _._targetRadius = t2;
      _._clipCallback = t3;
      _._repositionToReferenceBox = t4;
      _._ink_splash$_textDirection = t5;
      _.__InkSplash__alpha_A = _.__InkSplash__radiusController_A = _.__InkSplash__radius_A = $;
      _._ink_splash$_alphaController = null;
      _._ink_well$_color = t6;
      _._customBorder = t7;
      _._material$_controller = t8;
      _.referenceBox = t9;
      _.onRemoved = t10;
    },
    _ParentInkResponseProvider$(child, state) {
      return new A._ParentInkResponseProvider(state, child, null);
    },
    _ParentInkResponseProvider_maybeOf(context) {
      var t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$._ParentInkResponseProvider);
      return t1 == null ? null : t1.state;
    },
    InkResponse$(autofocus, borderRadius, canRequestFocus, child, containedInkWell, customBorder, enableFeedback, excludeFromSemantics, focusColor, focusNode, highlightColor, highlightShape, hoverColor, hoverDuration, key, mouseCursor, onDoubleTap, onFocusChange, onHighlightChanged, onHover, onLongPress, onSecondaryTap, onSecondaryTapCancel, onSecondaryTapDown, onSecondaryTapUp, onTap, onTapCancel, onTapDown, onTapUp, overlayColor, radius, splashColor, splashFactory, statesController) {
      return new A.InkResponse(child, onTap, onTapDown, onTapUp, onTapCancel, onDoubleTap, onLongPress, onSecondaryTap, onSecondaryTapDown, onSecondaryTapUp, onSecondaryTapCancel, onHighlightChanged, onHover, mouseCursor, containedInkWell, highlightShape, radius, borderRadius, customBorder, focusColor, hoverColor, highlightColor, overlayColor, splashColor, splashFactory, enableFeedback, excludeFromSemantics, onFocusChange, autofocus, focusNode, canRequestFocus, statesController, hoverDuration, key);
    },
    _InkResponseStateWidget$(autofocus, borderRadius, canRequestFocus, child, containedInkWell, customBorder, debugCheckContext, enableFeedback, excludeFromSemantics, focusColor, focusNode, getRectCallback, highlightColor, highlightShape, hoverColor, hoverDuration, mouseCursor, onDoubleTap, onFocusChange, onHighlightChanged, onHover, onLongPress, onSecondaryTap, onSecondaryTapCancel, onSecondaryTapDown, onSecondaryTapUp, onTap, onTapCancel, onTapDown, onTapUp, overlayColor, parentState, radius, splashColor, splashFactory, statesController) {
      return new A._InkResponseStateWidget(child, onTap, onTapDown, onTapUp, onTapCancel, onDoubleTap, onLongPress, onSecondaryTap, onSecondaryTapUp, onSecondaryTapDown, onSecondaryTapCancel, onHighlightChanged, onHover, mouseCursor, containedInkWell, highlightShape, radius, borderRadius, customBorder, focusColor, hoverColor, highlightColor, overlayColor, splashColor, splashFactory, enableFeedback, excludeFromSemantics, onFocusChange, autofocus, focusNode, canRequestFocus, parentState, getRectCallback, statesController, hoverDuration, null);
    },
    _InkResponseState$() {
      return new A._InkResponseState(B.LinkedHashMap_LinkedHashMap$_empty(type$._HighlightType, type$.nullable_InkHighlight), A.ObserverList$(type$._ParentInkResponseState), null);
    },
    InkWell$(autofocus, canRequestFocus, child, customBorder, enableFeedback, focusColor, focusNode, highlightColor, hoverColor, mouseCursor, onFocusChange, onHighlightChanged, onHover, onLongPress, onTap, overlayColor, splashColor, splashFactory, statesController) {
      var _null = null;
      return new A.InkWell(child, onTap, _null, _null, _null, _null, onLongPress, _null, _null, _null, _null, onHighlightChanged, onHover, mouseCursor, true, C.BoxShape_0, _null, _null, customBorder, focusColor, hoverColor, highlightColor, overlayColor, splashColor, splashFactory, enableFeedback !== false, false, onFocusChange, autofocus, focusNode, canRequestFocus, statesController, _null, _null);
    },
    InteractiveInkFeature: function InteractiveInkFeature() {
    },
    InteractiveInkFeatureFactory: function InteractiveInkFeatureFactory() {
    },
    _ParentInkResponseProvider: function _ParentInkResponseProvider(t0, t1, t2) {
      this.state = t0;
      this.child = t1;
      this.key = t2;
    },
    InkResponse: function InkResponse(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33) {
      var _ = this;
      _.child = t0;
      _.onTap = t1;
      _.onTapDown = t2;
      _.onTapUp = t3;
      _.onTapCancel = t4;
      _.onDoubleTap = t5;
      _.onLongPress = t6;
      _.onSecondaryTap = t7;
      _.onSecondaryTapDown = t8;
      _.onSecondaryTapUp = t9;
      _.onSecondaryTapCancel = t10;
      _.onHighlightChanged = t11;
      _.onHover = t12;
      _.mouseCursor = t13;
      _.containedInkWell = t14;
      _.highlightShape = t15;
      _.radius = t16;
      _.borderRadius = t17;
      _.customBorder = t18;
      _.focusColor = t19;
      _.hoverColor = t20;
      _.highlightColor = t21;
      _.overlayColor = t22;
      _.splashColor = t23;
      _.splashFactory = t24;
      _.enableFeedback = t25;
      _.excludeFromSemantics = t26;
      _.onFocusChange = t27;
      _.autofocus = t28;
      _.focusNode = t29;
      _.canRequestFocus = t30;
      _.statesController = t31;
      _.hoverDuration = t32;
      _.key = t33;
    },
    _InkResponseStateWidget: function _InkResponseStateWidget(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35) {
      var _ = this;
      _.child = t0;
      _.onTap = t1;
      _.onTapDown = t2;
      _.onTapUp = t3;
      _.onTapCancel = t4;
      _.onDoubleTap = t5;
      _.onLongPress = t6;
      _.onSecondaryTap = t7;
      _.onSecondaryTapUp = t8;
      _.onSecondaryTapDown = t9;
      _.onSecondaryTapCancel = t10;
      _.onHighlightChanged = t11;
      _.onHover = t12;
      _.mouseCursor = t13;
      _.containedInkWell = t14;
      _.highlightShape = t15;
      _.radius = t16;
      _.borderRadius = t17;
      _.customBorder = t18;
      _.focusColor = t19;
      _.hoverColor = t20;
      _.highlightColor = t21;
      _.overlayColor = t22;
      _.splashColor = t23;
      _.splashFactory = t24;
      _.enableFeedback = t25;
      _.excludeFromSemantics = t26;
      _.onFocusChange = t27;
      _.autofocus = t28;
      _.focusNode = t29;
      _.canRequestFocus = t30;
      _.parentState = t31;
      _.getRectCallback = t32;
      _.statesController = t33;
      _.hoverDuration = t34;
      _.key = t35;
    },
    _HighlightType: function _HighlightType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _InkResponseState: function _InkResponseState(t0, t1, t2) {
      var _ = this;
      _._currentSplash = _._splashes = null;
      _._hovering = false;
      _._highlights = t0;
      _.___InkResponseState__actionMap_FI = $;
      _.internalStatesController = null;
      _._activeChildren = t1;
      _._activationTimer = null;
      _._hasFocus = false;
      _.AutomaticKeepAliveClientMixin__keepAliveHandle = t2;
      _._framework0$_element = _._widget = null;
    },
    _InkResponseState_highlightsExist_closure: function _InkResponseState_highlightsExist_closure() {
    },
    _InkResponseState_activateOnIntent_closure: function _InkResponseState_activateOnIntent_closure(t0) {
      this.$this = t0;
    },
    _InkResponseState_handleStatesControllerChange_closure: function _InkResponseState_handleStatesControllerChange_closure() {
    },
    _InkResponseState_updateHighlight_handleInkRemoval: function _InkResponseState_updateHighlight_handleInkRemoval(t0, t1) {
      this.$this = t0;
      this.type = t1;
    },
    _InkResponseState__createSplash_onRemoved: function _InkResponseState__createSplash_onRemoved(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _InkResponseState_handleFocusHighlightModeChange_closure: function _InkResponseState_handleFocusHighlightModeChange_closure(t0) {
      this.$this = t0;
    },
    _InkResponseState_build_getHighlightColorForType: function _InkResponseState_build_getHighlightColorForType(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    InkWell: function InkWell(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33) {
      var _ = this;
      _.child = t0;
      _.onTap = t1;
      _.onTapDown = t2;
      _.onTapUp = t3;
      _.onTapCancel = t4;
      _.onDoubleTap = t5;
      _.onLongPress = t6;
      _.onSecondaryTap = t7;
      _.onSecondaryTapDown = t8;
      _.onSecondaryTapUp = t9;
      _.onSecondaryTapCancel = t10;
      _.onHighlightChanged = t11;
      _.onHover = t12;
      _.mouseCursor = t13;
      _.containedInkWell = t14;
      _.highlightShape = t15;
      _.radius = t16;
      _.borderRadius = t17;
      _.customBorder = t18;
      _.focusColor = t19;
      _.hoverColor = t20;
      _.highlightColor = t21;
      _.overlayColor = t22;
      _.splashColor = t23;
      _.splashFactory = t24;
      _.enableFeedback = t25;
      _.excludeFromSemantics = t26;
      _.onFocusChange = t27;
      _.autofocus = t28;
      _.focusNode = t29;
      _.canRequestFocus = t30;
      _.statesController = t31;
      _.hoverDuration = t32;
      _.key = t33;
    },
    __InkResponseState_State_AutomaticKeepAliveClientMixin: function __InkResponseState_State_AutomaticKeepAliveClientMixin() {
    },
    FloatingLabelAlignment__stringify(x) {
      var t1;
      $label0$0: {
        if (-1 === x) {
          t1 = "FloatingLabelAlignment.start";
          break $label0$0;
        }
        if (0 === x) {
          t1 = "FloatingLabelAlignment.center";
          break $label0$0;
        }
        t1 = "FloatingLabelAlignment(x: " + B.S(F.JSNumber_methods.toStringAsFixed$1(x, 1)) + ")";
        break $label0$0;
      }
      return t1;
    },
    FloatingLabelBehavior: function FloatingLabelBehavior(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    FloatingLabelAlignment: function FloatingLabelAlignment() {
    },
    InputDecorationTheme: function InputDecorationTheme() {
    },
    _InputDecorationTheme_Object_Diagnosticable: function _InputDecorationTheme_Object_Diagnosticable() {
    },
    ListTileThemeData$(contentPadding, dense, enableFeedback, horizontalTitleGap, iconColor, leadingAndTrailingTextStyle, minLeadingWidth, minTileHeight, minVerticalPadding, mouseCursor, selectedColor, selectedTileColor, shape, style, subtitleTextStyle, textColor, tileColor, titleAlignment, titleTextStyle, visualDensity) {
      return new A.ListTileThemeData(dense, shape, style, selectedColor, iconColor, textColor, titleTextStyle, subtitleTextStyle, leadingAndTrailingTextStyle, contentPadding, tileColor, selectedTileColor, horizontalTitleGap, minVerticalPadding, minLeadingWidth, minTileHeight, enableFeedback, mouseCursor, visualDensity, titleAlignment);
    },
    ListTileThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, _null = null;
      if (a == b)
        return a;
      t1 = t < 0.5;
      if (t1)
        t2 = a == null ? _null : a.dense;
      else
        t2 = b == null ? _null : b.dense;
      t3 = a == null;
      t4 = t3 ? _null : a.shape;
      t5 = b == null;
      t4 = A.ShapeBorder_lerp(t4, t5 ? _null : b.shape, t);
      if (t1)
        t6 = t3 ? _null : a.style;
      else
        t6 = t5 ? _null : b.style;
      t7 = t3 ? _null : a.selectedColor;
      t7 = A.Color_lerp(t7, t5 ? _null : b.selectedColor, t);
      t8 = t3 ? _null : a.iconColor;
      t8 = A.Color_lerp(t8, t5 ? _null : b.iconColor, t);
      t9 = t3 ? _null : a.textColor;
      t9 = A.Color_lerp(t9, t5 ? _null : b.textColor, t);
      t10 = t3 ? _null : a.titleTextStyle;
      t10 = A.TextStyle_lerp(t10, t5 ? _null : b.titleTextStyle, t);
      t11 = t3 ? _null : a.subtitleTextStyle;
      t11 = A.TextStyle_lerp(t11, t5 ? _null : b.subtitleTextStyle, t);
      t12 = t3 ? _null : a.leadingAndTrailingTextStyle;
      t12 = A.TextStyle_lerp(t12, t5 ? _null : b.leadingAndTrailingTextStyle, t);
      t13 = t3 ? _null : a.contentPadding;
      t13 = A.EdgeInsetsGeometry_lerp(t13, t5 ? _null : b.contentPadding, t);
      t14 = t3 ? _null : a.tileColor;
      t14 = A.Color_lerp(t14, t5 ? _null : b.tileColor, t);
      t15 = t3 ? _null : a.selectedTileColor;
      t15 = A.Color_lerp(t15, t5 ? _null : b.selectedTileColor, t);
      t16 = t3 ? _null : a.horizontalTitleGap;
      t16 = A.lerpDouble(t16, t5 ? _null : b.horizontalTitleGap, t);
      t17 = t3 ? _null : a.minVerticalPadding;
      t17 = A.lerpDouble(t17, t5 ? _null : b.minVerticalPadding, t);
      t18 = t3 ? _null : a.minLeadingWidth;
      t18 = A.lerpDouble(t18, t5 ? _null : b.minLeadingWidth, t);
      t19 = t3 ? _null : a.minTileHeight;
      t19 = A.lerpDouble(t19, t5 ? _null : b.minTileHeight, t);
      if (t1)
        t20 = t3 ? _null : a.enableFeedback;
      else
        t20 = t5 ? _null : b.enableFeedback;
      if (t1)
        t21 = t3 ? _null : a.mouseCursor;
      else
        t21 = t5 ? _null : b.mouseCursor;
      if (t1)
        t22 = t3 ? _null : a.visualDensity;
      else
        t22 = t5 ? _null : b.visualDensity;
      if (t1)
        t1 = t3 ? _null : a.titleAlignment;
      else
        t1 = t5 ? _null : b.titleAlignment;
      return A.ListTileThemeData$(t13, t2, t20, t16, t8, t12, t18, t19, t17, t21, t7, t15, t4, t6, t11, t9, t14, t1, t10, t22);
    },
    ListTileThemeData: function ListTileThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19) {
      var _ = this;
      _.dense = t0;
      _.shape = t1;
      _.style = t2;
      _.selectedColor = t3;
      _.iconColor = t4;
      _.textColor = t5;
      _.titleTextStyle = t6;
      _.subtitleTextStyle = t7;
      _.leadingAndTrailingTextStyle = t8;
      _.contentPadding = t9;
      _.tileColor = t10;
      _.selectedTileColor = t11;
      _.horizontalTitleGap = t12;
      _.minVerticalPadding = t13;
      _.minLeadingWidth = t14;
      _.minTileHeight = t15;
      _.enableFeedback = t16;
      _.mouseCursor = t17;
      _.visualDensity = t18;
      _.titleAlignment = t19;
    },
    _ListTileThemeData_Object_Diagnosticable: function _ListTileThemeData_Object_Diagnosticable() {
    },
    Material$(animationDuration, child, clipBehavior, color, elevation, shadowColor, shape, surfaceTintColor, textStyle, type) {
      return new A.Material(child, type, elevation, color, shadowColor, surfaceTintColor, textStyle, shape, clipBehavior, animationDuration, null);
    },
    Material_maybeOf(context) {
      return A.LookupBoundary_findAncestorRenderObjectOfType(context, type$._RenderInkFeatures);
    },
    Material_of(context) {
      var controller = A.Material_maybeOf(context);
      controller.toString;
      return controller;
    },
    _MaterialState$() {
      return new A._MaterialState(A.GlobalKey_GlobalKey("ink renderer", type$.State_StatefulWidget), null, null);
    },
    _RenderInkFeatures$(absorbHitTest, color, vsync) {
      var t1 = new A._RenderInkFeatures(vsync, absorbHitTest, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    _InkFeatures$(absorbHitTest, child, color, key, vsync) {
      return new A._InkFeatures(color, vsync, absorbHitTest, child, key);
    },
    InkFeature__getPaintTransform(fromRenderObject, toRenderObject) {
      var to, from, fromDepth, toDepth, fromParent, toParent, transform, inverseTransform, index, t2,
        t1 = type$.JSArray_RenderObject,
        fromPath = B._setArrayType([fromRenderObject], t1),
        toPath = B._setArrayType([toRenderObject], t1);
      for (to = toRenderObject, from = fromRenderObject; from !== to;) {
        fromDepth = from.get$depth();
        toDepth = to.get$depth();
        if (fromDepth >= toDepth) {
          fromParent = from.get$parent();
          if (!(fromParent instanceof E.RenderObject) || !B.boolConversionCheck(fromParent.paintsChild$1(from)))
            return null;
          F.JSArray_methods.add$1(fromPath, fromParent);
          from = fromParent;
        }
        if (fromDepth <= toDepth) {
          toParent = to.get$parent();
          if (!(toParent instanceof E.RenderObject) || !B.boolConversionCheck(toParent.paintsChild$1(to)))
            return null;
          F.JSArray_methods.add$1(toPath, toParent);
          to = toParent;
        }
      }
      transform = E.Matrix4_Matrix4$identity();
      inverseTransform = E.Matrix4_Matrix4$identity();
      for (index = toPath.length - 1; index > 0;) {
        t1 = toPath.length;
        if (!(index < t1))
          return B.ioore(toPath, index);
        t2 = toPath[index];
        --index;
        if (!(index < t1))
          return B.ioore(toPath, index);
        t2.applyPaintTransform$2(toPath[index], transform);
      }
      for (index = fromPath.length - 1; index > 0;) {
        t1 = fromPath.length;
        if (!(index < t1))
          return B.ioore(fromPath, index);
        t2 = fromPath[index];
        --index;
        if (!(index < t1))
          return B.ioore(fromPath, index);
        t2.applyPaintTransform$2(fromPath[index], inverseTransform);
      }
      if (inverseTransform.invert$0() !== 0) {
        inverseTransform.multiply$1(transform);
        t1 = inverseTransform;
      } else
        t1 = null;
      return t1;
    },
    ShapeBorderTween$(begin) {
      return new A.ShapeBorderTween(begin, null);
    },
    _MaterialInterior$(borderOnForeground, child, clipBehavior, color, curve, duration, elevation, shadowColor, shape, surfaceTintColor) {
      return new A._MaterialInterior(child, shape, borderOnForeground, clipBehavior, elevation, color, shadowColor, surfaceTintColor, curve, duration, null, null);
    },
    _MaterialInteriorState$() {
      return new A._MaterialInteriorState(null, null);
    },
    _ShapeBorderPaint$(borderOnForeground, child, shape) {
      return new A._ShapeBorderPaint(child, shape, borderOnForeground, null);
    },
    _ShapeBorderPainter$(border, textDirection) {
      return new A._ShapeBorderPainter(border, textDirection);
    },
    MaterialType: function MaterialType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    Material: function Material(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.child = t0;
      _.type = t1;
      _.elevation = t2;
      _.color = t3;
      _.shadowColor = t4;
      _.surfaceTintColor = t5;
      _.textStyle = t6;
      _.shape = t7;
      _.clipBehavior = t8;
      _.animationDuration = t9;
      _.key = t10;
    },
    _MaterialState: function _MaterialState(t0, t1, t2) {
      var _ = this;
      _._inkFeatureRenderer = t0;
      _.TickerProviderStateMixin__tickers = t1;
      _.TickerProviderStateMixin__tickerModeNotifier = t2;
      _._framework0$_element = _._widget = null;
    },
    _MaterialState_build_closure: function _MaterialState_build_closure(t0) {
      this.$this = t0;
    },
    _RenderInkFeatures: function _RenderInkFeatures(t0, t1, t2, t3, t4) {
      var _ = this;
      _.vsync = t0;
      _.absorbHitTest = t1;
      _._inkFeatures = null;
      _.RenderObjectWithChildMixin__child = t2;
      _._layoutCacheStorage = t3;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    _InkFeatures: function _InkFeatures(t0, t1, t2, t3, t4) {
      var _ = this;
      _.color = t0;
      _.vsync = t1;
      _.absorbHitTest = t2;
      _.child = t3;
      _.key = t4;
    },
    InkFeature: function InkFeature() {
    },
    ShapeBorderTween: function ShapeBorderTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    _MaterialInterior: function _MaterialInterior(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.child = t0;
      _.shape = t1;
      _.borderOnForeground = t2;
      _.clipBehavior = t3;
      _.elevation = t4;
      _.color = t5;
      _.shadowColor = t6;
      _.surfaceTintColor = t7;
      _.curve = t8;
      _.duration = t9;
      _.onEnd = t10;
      _.key = t11;
    },
    _MaterialInteriorState: function _MaterialInteriorState(t0, t1) {
      var _ = this;
      _._border = _._shadowColor = _._surfaceTintColor = _._material$_elevation = null;
      _.__ImplicitlyAnimatedWidgetState__animation_AI = _.__ImplicitlyAnimatedWidgetState__controller_FI = $;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._framework0$_element = _._widget = null;
    },
    _MaterialInteriorState_forEachTween_closure: function _MaterialInteriorState_forEachTween_closure() {
    },
    _MaterialInteriorState_forEachTween_closure0: function _MaterialInteriorState_forEachTween_closure0() {
    },
    _MaterialInteriorState_forEachTween_closure1: function _MaterialInteriorState_forEachTween_closure1() {
    },
    _MaterialInteriorState_forEachTween_closure2: function _MaterialInteriorState_forEachTween_closure2() {
    },
    _ShapeBorderPaint: function _ShapeBorderPaint(t0, t1, t2, t3) {
      var _ = this;
      _.child = t0;
      _.shape = t1;
      _.borderOnForeground = t2;
      _.key = t3;
    },
    _ShapeBorderPainter: function _ShapeBorderPainter(t0, t1) {
      this.border = t0;
      this.textDirection = t1;
    },
    __MaterialState_State_TickerProviderStateMixin: function __MaterialState_State_TickerProviderStateMixin() {
    },
    DefaultMaterialLocalizations_load(locale) {
      return E.SynchronousFuture$(C.C_DefaultMaterialLocalizations, type$.MaterialLocalizations);
    },
    _MaterialLocalizationsDelegate: function _MaterialLocalizationsDelegate() {
    },
    DefaultMaterialLocalizations: function DefaultMaterialLocalizations() {
    },
    MaterialStateMixin: function MaterialStateMixin() {
    },
    MaterialStateMixin_updateMaterialState_closure: function MaterialStateMixin_updateMaterialState_closure(t0, t1, t2) {
      this.$this = t0;
      this.key = t1;
      this.onChanged = t2;
    },
    MaterialStateMixin_addMaterialState_closure: function MaterialStateMixin_addMaterialState_closure() {
    },
    MaterialStateMixin_removeMaterialState_closure: function MaterialStateMixin_removeMaterialState_closure() {
    },
    MenuBarThemeData$(style) {
      return new A.MenuBarThemeData(style);
    },
    MenuBarThemeData_lerp(a, b, t) {
      var t1;
      if (a == b)
        return a;
      t1 = a == null ? null : a.style;
      return A.MenuBarThemeData$(A.MenuStyle_lerp(t1, b == null ? null : b.style, t));
    },
    MenuBarThemeData: function MenuBarThemeData(t0) {
      this.style = t0;
    },
    MenuButtonThemeData$(style) {
      return new A.MenuButtonThemeData(style);
    },
    MenuButtonThemeData_lerp(a, b, t) {
      var t1;
      if (a == b)
        return a;
      t1 = a == null ? null : a.style;
      return A.MenuButtonThemeData$(A.ButtonStyle_lerp(t1, b == null ? null : b.style, t));
    },
    MenuButtonThemeData: function MenuButtonThemeData(t0) {
      this.style = t0;
    },
    _MenuButtonThemeData_Object_Diagnosticable: function _MenuButtonThemeData_Object_Diagnosticable() {
    },
    MenuStyle$(alignment, backgroundColor, elevation, fixedSize, maximumSize, minimumSize, mouseCursor, padding, shadowColor, shape, side, surfaceTintColor, visualDensity) {
      return new A.MenuStyle(backgroundColor, shadowColor, surfaceTintColor, elevation, padding, minimumSize, fixedSize, maximumSize, side, shape, mouseCursor, visualDensity, alignment);
    },
    MenuStyle_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, _null = null;
      if (a == b)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.backgroundColor;
      t3 = b == null;
      t4 = t3 ? _null : b.backgroundColor;
      t5 = type$.nullable_Color;
      t4 = A.WidgetStateProperty_lerp(t2, t4, t, A.ui_Color_lerp$closure(), t5);
      t2 = t1 ? _null : a.shadowColor;
      t2 = A.WidgetStateProperty_lerp(t2, t3 ? _null : b.shadowColor, t, A.ui_Color_lerp$closure(), t5);
      t6 = t1 ? _null : a.surfaceTintColor;
      t5 = A.WidgetStateProperty_lerp(t6, t3 ? _null : b.surfaceTintColor, t, A.ui_Color_lerp$closure(), t5);
      t6 = t1 ? _null : a.elevation;
      t7 = t3 ? _null : b.elevation;
      t7 = A.WidgetStateProperty_lerp(t6, t7, t, A.ui__lerpDouble$closure(), type$.nullable_double);
      t6 = t1 ? _null : a.padding;
      t8 = t3 ? _null : b.padding;
      t8 = A.WidgetStateProperty_lerp(t6, t8, t, A.edge_insets_EdgeInsetsGeometry_lerp$closure(), type$.nullable_EdgeInsetsGeometry);
      t6 = t1 ? _null : a.minimumSize;
      t9 = t3 ? _null : b.minimumSize;
      t10 = type$.nullable_Size;
      t9 = A.WidgetStateProperty_lerp(t6, t9, t, A.ui_Size_lerp$closure(), t10);
      t6 = t1 ? _null : a.fixedSize;
      t6 = A.WidgetStateProperty_lerp(t6, t3 ? _null : b.fixedSize, t, A.ui_Size_lerp$closure(), t10);
      t11 = t1 ? _null : a.maximumSize;
      t10 = A.WidgetStateProperty_lerp(t11, t3 ? _null : b.maximumSize, t, A.ui_Size_lerp$closure(), t10);
      t11 = t1 ? _null : a.side;
      t11 = A.WidgetStateBorderSide_lerp(t11, t3 ? _null : b.side, t);
      t12 = t1 ? _null : a.shape;
      t13 = t3 ? _null : b.shape;
      t13 = A.WidgetStateProperty_lerp(t12, t13, t, A.borders_OutlinedBorder_lerp$closure(), type$.nullable_OutlinedBorder);
      t12 = t < 0.5;
      if (t12)
        t14 = t1 ? _null : a.mouseCursor;
      else
        t14 = t3 ? _null : b.mouseCursor;
      if (t12)
        t12 = t1 ? _null : a.visualDensity;
      else
        t12 = t3 ? _null : b.visualDensity;
      t1 = t1 ? _null : a.alignment;
      return A.MenuStyle$(A.AlignmentGeometry_lerp(t1, t3 ? _null : b.alignment, t), t4, t7, t6, t10, t9, t14, t8, t2, t13, t11, t5, t12);
    },
    MenuStyle: function MenuStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.backgroundColor = t0;
      _.shadowColor = t1;
      _.surfaceTintColor = t2;
      _.elevation = t3;
      _.padding = t4;
      _.minimumSize = t5;
      _.fixedSize = t6;
      _.maximumSize = t7;
      _.side = t8;
      _.shape = t9;
      _.mouseCursor = t10;
      _.visualDensity = t11;
      _.alignment = t12;
    },
    _MenuStyle_Object_Diagnosticable: function _MenuStyle_Object_Diagnosticable() {
    },
    MenuThemeData$(style) {
      return new A.MenuThemeData(style);
    },
    MenuThemeData_lerp(a, b, t) {
      var t1;
      if (a == b)
        return a;
      t1 = a == null ? null : a.style;
      return A.MenuThemeData$(A.MenuStyle_lerp(t1, b == null ? null : b.style, t));
    },
    MenuThemeData: function MenuThemeData(t0) {
      this.style = t0;
    },
    _MenuThemeData_Object_Diagnosticable: function _MenuThemeData_Object_Diagnosticable() {
    },
    NavigationBarThemeData$(backgroundColor, elevation, height, iconTheme, indicatorColor, indicatorShape, labelBehavior, labelTextStyle, overlayColor, shadowColor, surfaceTintColor) {
      return new A.NavigationBarThemeData(height, backgroundColor, elevation, shadowColor, surfaceTintColor, indicatorColor, indicatorShape, labelTextStyle, iconTheme, labelBehavior, overlayColor);
    },
    NavigationBarThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, _null = null;
      if (a == b)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.height;
      t3 = b == null;
      t2 = A.lerpDouble(t2, t3 ? _null : b.height, t);
      t4 = t1 ? _null : a.backgroundColor;
      t4 = A.Color_lerp(t4, t3 ? _null : b.backgroundColor, t);
      t5 = t1 ? _null : a.elevation;
      t5 = A.lerpDouble(t5, t3 ? _null : b.elevation, t);
      t6 = t1 ? _null : a.shadowColor;
      t6 = A.Color_lerp(t6, t3 ? _null : b.shadowColor, t);
      t7 = t1 ? _null : a.surfaceTintColor;
      t7 = A.Color_lerp(t7, t3 ? _null : b.surfaceTintColor, t);
      t8 = t1 ? _null : a.indicatorColor;
      t8 = A.Color_lerp(t8, t3 ? _null : b.indicatorColor, t);
      t9 = t1 ? _null : a.indicatorShape;
      t9 = A.ShapeBorder_lerp(t9, t3 ? _null : b.indicatorShape, t);
      t10 = t1 ? _null : a.labelTextStyle;
      t11 = t3 ? _null : b.labelTextStyle;
      t11 = A.WidgetStateProperty_lerp(t10, t11, t, A.text_style_TextStyle_lerp$closure(), type$.nullable_TextStyle);
      t10 = t1 ? _null : a.iconTheme;
      t12 = t3 ? _null : b.iconTheme;
      t12 = A.WidgetStateProperty_lerp(t10, t12, t, A.icon_theme_data_IconThemeData_lerp$closure(), type$.nullable_IconThemeData);
      if (t < 0.5)
        t10 = t1 ? _null : a.labelBehavior;
      else
        t10 = t3 ? _null : b.labelBehavior;
      t1 = t1 ? _null : a.overlayColor;
      t3 = t3 ? _null : b.overlayColor;
      return A.NavigationBarThemeData$(t4, t5, t2, t12, t8, t9, t10, t11, A.WidgetStateProperty_lerp(t1, t3, t, A.ui_Color_lerp$closure(), type$.nullable_Color), t6, t7);
    },
    NavigationBarThemeData: function NavigationBarThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.height = t0;
      _.backgroundColor = t1;
      _.elevation = t2;
      _.shadowColor = t3;
      _.surfaceTintColor = t4;
      _.indicatorColor = t5;
      _.indicatorShape = t6;
      _.labelTextStyle = t7;
      _.iconTheme = t8;
      _.labelBehavior = t9;
      _.overlayColor = t10;
    },
    _NavigationBarThemeData_Object_Diagnosticable: function _NavigationBarThemeData_Object_Diagnosticable() {
    },
    NavigationDrawerThemeData$(backgroundColor, elevation, iconTheme, indicatorColor, indicatorShape, indicatorSize, labelTextStyle, shadowColor, surfaceTintColor, tileHeight) {
      return new A.NavigationDrawerThemeData(tileHeight, backgroundColor, elevation, shadowColor, surfaceTintColor, indicatorColor, indicatorShape, indicatorSize, labelTextStyle, iconTheme);
    },
    NavigationDrawerThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, _null = null;
      if (a == b)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.tileHeight;
      t3 = b == null;
      t2 = A.lerpDouble(t2, t3 ? _null : b.tileHeight, t);
      t4 = t1 ? _null : a.backgroundColor;
      t4 = A.Color_lerp(t4, t3 ? _null : b.backgroundColor, t);
      t5 = t1 ? _null : a.elevation;
      t5 = A.lerpDouble(t5, t3 ? _null : b.elevation, t);
      t6 = t1 ? _null : a.shadowColor;
      t6 = A.Color_lerp(t6, t3 ? _null : b.shadowColor, t);
      t7 = t1 ? _null : a.surfaceTintColor;
      t7 = A.Color_lerp(t7, t3 ? _null : b.surfaceTintColor, t);
      t8 = t1 ? _null : a.indicatorColor;
      t8 = A.Color_lerp(t8, t3 ? _null : b.indicatorColor, t);
      t9 = t1 ? _null : a.indicatorShape;
      t9 = A.ShapeBorder_lerp(t9, t3 ? _null : b.indicatorShape, t);
      t10 = t1 ? _null : a.indicatorSize;
      t10 = A.Size_lerp(t10, t1 ? _null : a.indicatorSize, t);
      t11 = t1 ? _null : a.labelTextStyle;
      t12 = t3 ? _null : b.labelTextStyle;
      t12 = A.WidgetStateProperty_lerp(t11, t12, t, A.text_style_TextStyle_lerp$closure(), type$.nullable_TextStyle);
      t1 = t1 ? _null : a.iconTheme;
      t3 = t3 ? _null : b.iconTheme;
      return A.NavigationDrawerThemeData$(t4, t5, A.WidgetStateProperty_lerp(t1, t3, t, A.icon_theme_data_IconThemeData_lerp$closure(), type$.nullable_IconThemeData), t8, t9, t10, t12, t6, t7, t2);
    },
    NavigationDrawerThemeData: function NavigationDrawerThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.tileHeight = t0;
      _.backgroundColor = t1;
      _.elevation = t2;
      _.shadowColor = t3;
      _.surfaceTintColor = t4;
      _.indicatorColor = t5;
      _.indicatorShape = t6;
      _.indicatorSize = t7;
      _.labelTextStyle = t8;
      _.iconTheme = t9;
    },
    _NavigationDrawerThemeData_Object_Diagnosticable: function _NavigationDrawerThemeData_Object_Diagnosticable() {
    },
    NavigationRailThemeData$(backgroundColor, elevation, groupAlignment, indicatorColor, indicatorShape, labelType, minExtendedWidth, minWidth, selectedIconTheme, selectedLabelTextStyle, unselectedIconTheme, unselectedLabelTextStyle, useIndicator) {
      return new A.NavigationRailThemeData(backgroundColor, elevation, unselectedLabelTextStyle, selectedLabelTextStyle, unselectedIconTheme, selectedIconTheme, groupAlignment, labelType, useIndicator, indicatorColor, indicatorShape, minWidth, minExtendedWidth);
    },
    NavigationRailThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, _null = null;
      if (a == b)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.backgroundColor;
      t3 = b == null;
      t2 = A.Color_lerp(t2, t3 ? _null : b.backgroundColor, t);
      t4 = t1 ? _null : a.elevation;
      t4 = A.lerpDouble(t4, t3 ? _null : b.elevation, t);
      t5 = t1 ? _null : a.unselectedLabelTextStyle;
      t5 = A.TextStyle_lerp(t5, t3 ? _null : b.unselectedLabelTextStyle, t);
      t6 = t1 ? _null : a.selectedLabelTextStyle;
      t6 = A.TextStyle_lerp(t6, t3 ? _null : b.selectedLabelTextStyle, t);
      if ((t1 ? _null : a.unselectedIconTheme) == null)
        t7 = (t3 ? _null : b.unselectedIconTheme) == null;
      else
        t7 = false;
      if (t7)
        t7 = _null;
      else {
        t7 = t1 ? _null : a.unselectedIconTheme;
        t7 = A.IconThemeData_lerp(t7, t3 ? _null : b.unselectedIconTheme, t);
      }
      if ((t1 ? _null : a.selectedIconTheme) == null)
        t8 = (t3 ? _null : b.selectedIconTheme) == null;
      else
        t8 = false;
      if (t8)
        t8 = _null;
      else {
        t8 = t1 ? _null : a.selectedIconTheme;
        t8 = A.IconThemeData_lerp(t8, t3 ? _null : b.selectedIconTheme, t);
      }
      t9 = t1 ? _null : a.groupAlignment;
      t9 = A.lerpDouble(t9, t3 ? _null : b.groupAlignment, t);
      t10 = t < 0.5;
      if (t10)
        t11 = t1 ? _null : a.labelType;
      else
        t11 = t3 ? _null : b.labelType;
      if (t10)
        t10 = t1 ? _null : a.useIndicator;
      else
        t10 = t3 ? _null : b.useIndicator;
      t12 = t1 ? _null : a.indicatorColor;
      t12 = A.Color_lerp(t12, t3 ? _null : b.indicatorColor, t);
      t13 = t1 ? _null : a.indicatorShape;
      t13 = A.ShapeBorder_lerp(t13, t3 ? _null : b.indicatorShape, t);
      t14 = t1 ? _null : a.minWidth;
      t14 = A.lerpDouble(t14, t3 ? _null : b.minWidth, t);
      t1 = t1 ? _null : a.minExtendedWidth;
      return A.NavigationRailThemeData$(t2, t4, t9, t12, t13, t11, A.lerpDouble(t1, t3 ? _null : b.minExtendedWidth, t), t14, t8, t6, t7, t5, t10);
    },
    NavigationRailThemeData: function NavigationRailThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.backgroundColor = t0;
      _.elevation = t1;
      _.unselectedLabelTextStyle = t2;
      _.selectedLabelTextStyle = t3;
      _.unselectedIconTheme = t4;
      _.selectedIconTheme = t5;
      _.groupAlignment = t6;
      _.labelType = t7;
      _.useIndicator = t8;
      _.indicatorColor = t9;
      _.indicatorShape = t10;
      _.minWidth = t11;
      _.minExtendedWidth = t12;
    },
    _NavigationRailThemeData_Object_Diagnosticable: function _NavigationRailThemeData_Object_Diagnosticable() {
    },
    OutlinedButtonThemeData$(style) {
      return new A.OutlinedButtonThemeData(style);
    },
    OutlinedButtonThemeData_lerp(a, b, t) {
      var t1;
      if (a == b)
        return a;
      t1 = a == null ? null : a.style;
      return A.OutlinedButtonThemeData$(A.ButtonStyle_lerp(t1, b == null ? null : b.style, t));
    },
    OutlinedButtonThemeData: function OutlinedButtonThemeData(t0) {
      this.style = t0;
    },
    _OutlinedButtonThemeData_Object_Diagnosticable: function _OutlinedButtonThemeData_Object_Diagnosticable() {
    },
    MaterialPageRoute$(builder, settings, $T) {
      var t12, _null = null,
        t1 = B._setArrayType([], type$.JSArray_of_Future_bool_Function),
        t2 = B.LinkedHashSet_LinkedHashSet$_empty(type$.PopEntry_nullable_Object),
        t3 = A.GlobalKey_GlobalKey(_null, $T._eval$1("_ModalScopeState<0>")),
        t4 = A.GlobalKey_GlobalKey(_null, type$.State_StatefulWidget),
        t5 = A.PageStorageBucket$(),
        t6 = B.Completer_Completer($T._eval$1("0?")),
        t7 = A.ProxyAnimation$(C.C__AlwaysDismissedAnimation),
        t8 = B._setArrayType([], type$.JSArray_OverlayEntry),
        t9 = E.ValueNotifier$(_null, type$.nullable_String),
        t10 = $T._eval$1("0?"),
        t11 = B.Completer_Completer(t10);
      t10 = B.Completer_Completer(t10);
      t12 = settings == null ? C.RouteSettings_null_null : settings;
      t10 = new A.MaterialPageRoute(builder, false, true, false, t1, t2, t3, t4, t5, _null, 0, t6, t7, t8, t12, t9, t11, t10, $T._eval$1("MaterialPageRoute<0>"));
      t10.Route$1$settings(settings, $T);
      return t10;
    },
    MaterialPageRoute: function MaterialPageRoute(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18) {
      var _ = this;
      _.builder = t0;
      _.fullscreenDialog = t1;
      _.allowSnapshotting = t2;
      _._barrierDismissible = t3;
      _._routes$_offstage = false;
      _._secondaryAnimationProxy = _._animationProxy = null;
      _._willPopCallbacks = t4;
      _._popEntries = t5;
      _._scopeKey = t6;
      _._subtreeKey = t7;
      _._storageBucket = t8;
      _.__ModalRoute__modalBarrier_A = $;
      _._modalScopeCache = null;
      _.__ModalRoute__modalScope_A = $;
      _.LocalHistoryRoute__localHistory = t9;
      _.LocalHistoryRoute__entriesImpliesAppBarDismissal = t10;
      _._transitionCompleter = t11;
      _._performanceModeRequestHandle = null;
      _._popFinalized = false;
      _._routes$_controller = _._routes$_animation = null;
      _._secondaryAnimation = t12;
      _._trainHoppingListenerRemover = _._result = null;
      _._overlayEntries = t13;
      _._navigator$_navigator = null;
      _._settings = t14;
      _._restorationScopeId = t15;
      _._popCompleter = t16;
      _._disposeCompleter = t17;
      _.$ti = t18;
    },
    MaterialRouteTransitionMixin: function MaterialRouteTransitionMixin() {
    },
    _MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin: function _MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin() {
    },
    _ZoomPageTransition$(allowEnterRouteSnapshotting, allowSnapshotting, animation, child, secondaryAnimation) {
      return new A._ZoomPageTransition(animation, secondaryAnimation, allowSnapshotting, child, allowEnterRouteSnapshotting, null);
    },
    _ZoomEnterTransition$(allowSnapshotting, animation, child, reverse) {
      return new A._ZoomEnterTransition(animation, child, allowSnapshotting, reverse, null);
    },
    _ZoomEnterTransitionState$() {
      var t1 = type$.Animation_double;
      return new A._ZoomEnterTransitionState(A.SnapshotController$(), B.createSentinel(t1), B.createSentinel(t1));
    },
    _ZoomExitTransition$(allowSnapshotting, animation, child, reverse) {
      return new A._ZoomExitTransition(animation, allowSnapshotting, reverse, child, null);
    },
    _ZoomExitTransitionState$() {
      var t1 = type$.Animation_double;
      return new A._ZoomExitTransitionState(A.SnapshotController$(), B.createSentinel(t1), B.createSentinel(t1));
    },
    _PageTransitionsThemeTransitions$(animation, builders, child, route, secondaryAnimation, $T) {
      return new A._PageTransitionsThemeTransitions(builders, route, animation, secondaryAnimation, child, null, $T._eval$1("_PageTransitionsThemeTransitions<0>"));
    },
    _PageTransitionsThemeTransitionsState$($T) {
      return new A._PageTransitionsThemeTransitionsState($T._eval$1("_PageTransitionsThemeTransitionsState<0>"));
    },
    _drawImageScaledAndCentered(context, image, scale, opacity, pixelRatio) {
      var paint, t1, logicalWidth, logicalHeight, scaledLogicalWidth, scaledLogicalHeight, dst;
      if (scale <= 0 || opacity <= 0)
        return;
      paint = E.Paint_Paint();
      paint.set$filterQuality(D.FilterQuality_2);
      paint.set$color(A.Color$fromRGBO(0, 0, 0, opacity));
      t1 = image.get$width();
      if (typeof t1 !== "number")
        return t1.$div();
      logicalWidth = t1 / pixelRatio;
      t1 = image.get$height();
      if (typeof t1 !== "number")
        return t1.$div();
      logicalHeight = t1 / pixelRatio;
      scaledLogicalWidth = logicalWidth * scale;
      scaledLogicalHeight = logicalHeight * scale;
      dst = E.Rect$fromLTWH((logicalWidth - scaledLogicalWidth) / 2, (logicalHeight - scaledLogicalHeight) / 2, scaledLogicalWidth, scaledLogicalHeight);
      context.get$canvas().drawImageRect$4(image, E.Rect$fromLTWH(0, 0, J.toDouble$0$n(image.get$width()), J.toDouble$0$n(image.get$height())), dst, paint);
    },
    _updateScaledTransform(transform, scale, size) {
      var t1, t2, t3, t4;
      transform.setIdentity$0();
      if (scale === 1)
        return;
      transform.scale$2(scale, scale);
      t1 = size.get$width();
      if (typeof t1 !== "number")
        return t1.$mul();
      t2 = size.get$width();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = size.get$height();
      if (typeof t3 !== "number")
        return t3.$mul();
      t4 = size.get$height();
      if (typeof t4 !== "number")
        return B.iae(t4);
      transform.translate$2(-((t1 * scale - t2) / 2), -((t3 * scale - t4) / 2));
    },
    _ZoomEnterTransitionPainter$(animation, fade, reverse, scale) {
      var t1 = new A._ZoomEnterTransitionPainter(reverse, animation, scale, fade, E.Matrix4$zero(), E.LayerHandle$(type$.OpacityLayer), E.LayerHandle$(type$.TransformLayer), $.$get$ChangeNotifier__emptyListeners());
      t1.SnapshotPainter$0();
      t1._ZoomEnterTransitionPainter$4$animation$fade$reverse$scale(animation, fade, reverse, scale);
      return t1;
    },
    _ZoomExitTransitionPainter$(animation, fade, reverse, scale) {
      var t1 = new A._ZoomExitTransitionPainter(reverse, scale, fade, animation, E.Matrix4$zero(), E.LayerHandle$(type$.OpacityLayer), E.LayerHandle$(type$.TransformLayer), $.$get$ChangeNotifier__emptyListeners());
      t1.SnapshotPainter$0();
      t1._ZoomExitTransitionPainter$4$animation$fade$reverse$scale(animation, fade, reverse, scale);
      return t1;
    },
    _ZoomPageTransition: function _ZoomPageTransition(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.animation = t0;
      _.secondaryAnimation = t1;
      _.allowSnapshotting = t2;
      _.child = t3;
      _.allowEnterRouteSnapshotting = t4;
      _.key = t5;
    },
    _ZoomPageTransition_build_closure1: function _ZoomPageTransition_build_closure1(t0) {
      this.$this = t0;
    },
    _ZoomPageTransition_build_closure2: function _ZoomPageTransition_build_closure2(t0) {
      this.$this = t0;
    },
    _ZoomPageTransition_build_closure: function _ZoomPageTransition_build_closure(t0) {
      this.$this = t0;
    },
    _ZoomPageTransition_build_closure0: function _ZoomPageTransition_build_closure0(t0) {
      this.$this = t0;
    },
    _ZoomEnterTransition: function _ZoomEnterTransition(t0, t1, t2, t3, t4) {
      var _ = this;
      _.animation = t0;
      _.child = t1;
      _.allowSnapshotting = t2;
      _.reverse = t3;
      _.key = t4;
    },
    _ZoomEnterTransitionState: function _ZoomEnterTransitionState(t0, t1, t2) {
      var _ = this;
      _.___ZoomEnterTransitionState_delegate_A = $;
      _._ZoomTransitionBase_controller = t0;
      _._ZoomTransitionBase____ZoomTransitionBase_fadeTransition_A = t1;
      _._ZoomTransitionBase____ZoomTransitionBase_scaleTransition_A = t2;
      _._framework0$_element = _._widget = null;
    },
    _ZoomExitTransition: function _ZoomExitTransition(t0, t1, t2, t3, t4) {
      var _ = this;
      _.animation = t0;
      _.allowSnapshotting = t1;
      _.reverse = t2;
      _.child = t3;
      _.key = t4;
    },
    _ZoomExitTransitionState: function _ZoomExitTransitionState(t0, t1, t2) {
      var _ = this;
      _.___ZoomExitTransitionState_delegate_A = $;
      _._ZoomTransitionBase_controller = t0;
      _._ZoomTransitionBase____ZoomTransitionBase_fadeTransition_A = t1;
      _._ZoomTransitionBase____ZoomTransitionBase_scaleTransition_A = t2;
      _._framework0$_element = _._widget = null;
    },
    PageTransitionsBuilder: function PageTransitionsBuilder() {
    },
    ZoomPageTransitionsBuilder: function ZoomPageTransitionsBuilder() {
    },
    CupertinoPageTransitionsBuilder: function CupertinoPageTransitionsBuilder() {
    },
    PageTransitionsTheme: function PageTransitionsTheme() {
    },
    PageTransitionsTheme__all_closure: function PageTransitionsTheme__all_closure(t0) {
      this.builders = t0;
    },
    _PageTransitionsThemeTransitions: function _PageTransitionsThemeTransitions(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.builders = t0;
      _.route = t1;
      _.animation = t2;
      _.secondaryAnimation = t3;
      _.child = t4;
      _.key = t5;
      _.$ti = t6;
    },
    _PageTransitionsThemeTransitionsState: function _PageTransitionsThemeTransitionsState(t0) {
      var _ = this;
      _._framework0$_element = _._widget = _._transitionPlatform = null;
      _.$ti = t0;
    },
    _ZoomTransitionBase: function _ZoomTransitionBase() {
    },
    _ZoomEnterTransitionPainter: function _ZoomEnterTransitionPainter(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.reverse = t0;
      _.animation = t1;
      _.scale = t2;
      _.fade = t3;
      _._page_transitions_theme$_transform = t4;
      _._opacityHandle = t5;
      _._transformHandler = t6;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t7;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = false;
    },
    _ZoomEnterTransitionPainter_paint_closure: function _ZoomEnterTransitionPainter_paint_closure(t0, t1) {
      this.$this = t0;
      this.painter = t1;
    },
    _ZoomExitTransitionPainter: function _ZoomExitTransitionPainter(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.reverse = t0;
      _.scale = t1;
      _.fade = t2;
      _.animation = t3;
      _._page_transitions_theme$_transform = t4;
      _._opacityHandle = t5;
      _._transformHandler = t6;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t7;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = false;
    },
    _ZoomExitTransitionPainter_paint_closure: function _ZoomExitTransitionPainter_paint_closure(t0, t1) {
      this.$this = t0;
      this.painter = t1;
    },
    _PageTransitionsTheme_Object_Diagnosticable: function _PageTransitionsTheme_Object_Diagnosticable() {
    },
    __ZoomEnterTransitionState_State__ZoomTransitionBase: function __ZoomEnterTransitionState_State__ZoomTransitionBase() {
    },
    __ZoomExitTransitionState_State__ZoomTransitionBase: function __ZoomExitTransitionState_State__ZoomTransitionBase() {
    },
    PopupMenuThemeData$(color, elevation, enableFeedback, iconColor, iconSize, labelTextStyle, menuPadding, mouseCursor, position, shadowColor, shape, surfaceTintColor, textStyle) {
      return new A.PopupMenuThemeData(color, shape, menuPadding, elevation, shadowColor, surfaceTintColor, textStyle, labelTextStyle, enableFeedback, mouseCursor, position, iconColor, iconSize);
    },
    PopupMenuThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, _null = null;
      if (a == b)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.color;
      t3 = b == null;
      t2 = A.Color_lerp(t2, t3 ? _null : b.color, t);
      t4 = t1 ? _null : a.shape;
      t4 = A.ShapeBorder_lerp(t4, t3 ? _null : b.shape, t);
      t5 = t1 ? _null : a.menuPadding;
      t5 = A.EdgeInsetsGeometry_lerp(t5, t3 ? _null : b.menuPadding, t);
      t6 = t1 ? _null : a.elevation;
      t6 = A.lerpDouble(t6, t3 ? _null : b.elevation, t);
      t7 = t1 ? _null : a.shadowColor;
      t7 = A.Color_lerp(t7, t3 ? _null : b.shadowColor, t);
      t8 = t1 ? _null : a.surfaceTintColor;
      t8 = A.Color_lerp(t8, t3 ? _null : b.surfaceTintColor, t);
      t9 = t1 ? _null : a.textStyle;
      t9 = A.TextStyle_lerp(t9, t3 ? _null : b.textStyle, t);
      t10 = t1 ? _null : a.labelTextStyle;
      t11 = t3 ? _null : b.labelTextStyle;
      t11 = A.WidgetStateProperty_lerp(t10, t11, t, A.text_style_TextStyle_lerp$closure(), type$.nullable_TextStyle);
      t10 = t < 0.5;
      if (t10)
        t12 = t1 ? _null : a.enableFeedback;
      else
        t12 = t3 ? _null : b.enableFeedback;
      if (t10)
        t13 = t1 ? _null : a.mouseCursor;
      else
        t13 = t3 ? _null : b.mouseCursor;
      if (t10)
        t10 = t1 ? _null : a.position;
      else
        t10 = t3 ? _null : b.position;
      t14 = t1 ? _null : a.iconColor;
      t14 = A.Color_lerp(t14, t3 ? _null : b.iconColor, t);
      t1 = t1 ? _null : a.iconSize;
      return A.PopupMenuThemeData$(t2, t6, t12, t14, A.lerpDouble(t1, t3 ? _null : b.iconSize, t), t11, t5, t13, t10, t7, t4, t8, t9);
    },
    PopupMenuThemeData: function PopupMenuThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.color = t0;
      _.shape = t1;
      _.menuPadding = t2;
      _.elevation = t3;
      _.shadowColor = t4;
      _.surfaceTintColor = t5;
      _.textStyle = t6;
      _.labelTextStyle = t7;
      _.enableFeedback = t8;
      _.mouseCursor = t9;
      _.position = t10;
      _.iconColor = t11;
      _.iconSize = t12;
    },
    _PopupMenuThemeData_Object_Diagnosticable: function _PopupMenuThemeData_Object_Diagnosticable() {
    },
    ProgressIndicatorThemeData$(circularTrackColor, color, linearMinHeight, linearTrackColor, refreshBackgroundColor) {
      return new A.ProgressIndicatorThemeData(color, linearTrackColor, linearMinHeight, circularTrackColor, refreshBackgroundColor);
    },
    ProgressIndicatorThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, _null = null;
      if (a == b)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.color;
      t3 = b == null;
      t2 = A.Color_lerp(t2, t3 ? _null : b.color, t);
      t4 = t1 ? _null : a.linearTrackColor;
      t4 = A.Color_lerp(t4, t3 ? _null : b.linearTrackColor, t);
      t5 = t1 ? _null : a.linearMinHeight;
      t5 = A.lerpDouble(t5, t3 ? _null : b.linearMinHeight, t);
      t6 = t1 ? _null : a.circularTrackColor;
      t6 = A.Color_lerp(t6, t3 ? _null : b.circularTrackColor, t);
      t1 = t1 ? _null : a.refreshBackgroundColor;
      return A.ProgressIndicatorThemeData$(t6, t2, t5, t4, A.Color_lerp(t1, t3 ? _null : b.refreshBackgroundColor, t));
    },
    ProgressIndicatorThemeData: function ProgressIndicatorThemeData(t0, t1, t2, t3, t4) {
      var _ = this;
      _.color = t0;
      _.linearTrackColor = t1;
      _.linearMinHeight = t2;
      _.circularTrackColor = t3;
      _.refreshBackgroundColor = t4;
    },
    _ProgressIndicatorThemeData_Object_Diagnosticable: function _ProgressIndicatorThemeData_Object_Diagnosticable() {
    },
    RadioThemeData$(fillColor, materialTapTargetSize, mouseCursor, overlayColor, splashRadius, visualDensity) {
      return new A.RadioThemeData(mouseCursor, fillColor, overlayColor, splashRadius, materialTapTargetSize, visualDensity);
    },
    RadioThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _null = null;
      if (a == b && a != null)
        return a;
      t1 = t < 0.5;
      if (t1)
        t2 = a == null ? _null : a.mouseCursor;
      else
        t2 = b == null ? _null : b.mouseCursor;
      t3 = a == null;
      t4 = t3 ? _null : a.fillColor;
      t5 = b == null;
      t6 = t5 ? _null : b.fillColor;
      t7 = type$.nullable_Color;
      t6 = A.WidgetStateProperty_lerp(t4, t6, t, A.ui_Color_lerp$closure(), t7);
      if (t1)
        t4 = t3 ? _null : a.materialTapTargetSize;
      else
        t4 = t5 ? _null : b.materialTapTargetSize;
      t8 = t3 ? _null : a.overlayColor;
      t7 = A.WidgetStateProperty_lerp(t8, t5 ? _null : b.overlayColor, t, A.ui_Color_lerp$closure(), t7);
      t8 = t3 ? _null : a.splashRadius;
      t8 = A.lerpDouble(t8, t5 ? _null : b.splashRadius, t);
      if (t1)
        t1 = t3 ? _null : a.visualDensity;
      else
        t1 = t5 ? _null : b.visualDensity;
      return A.RadioThemeData$(t6, t4, t2, t7, t8, t1);
    },
    RadioThemeData: function RadioThemeData(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.mouseCursor = t0;
      _.fillColor = t1;
      _.overlayColor = t2;
      _.splashRadius = t3;
      _.materialTapTargetSize = t4;
      _.visualDensity = t5;
    },
    _RadioThemeData_Object_Diagnosticable: function _RadioThemeData_Object_Diagnosticable() {
    },
    ScaffoldMessenger$(child, key) {
      return new A.ScaffoldMessenger(child, key);
    },
    ScaffoldMessengerState$() {
      var _null = null;
      return new A.ScaffoldMessengerState(B.LinkedHashSet_LinkedHashSet(type$.ScaffoldState), E.ListQueue$(_null, type$.ScaffoldFeatureController_MaterialBanner_MaterialBannerClosedReason), E.ListQueue$(_null, type$.ScaffoldFeatureController_SnackBar_SnackBarClosedReason), _null, _null);
    },
    _ScaffoldMessengerScope$(child, scaffoldMessengerState) {
      return new A._ScaffoldMessengerScope(scaffoldMessengerState, child, null);
    },
    ScaffoldMessenger: function ScaffoldMessenger(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    ScaffoldMessengerState: function ScaffoldMessengerState(t0, t1, t2, t3, t4) {
      var _ = this;
      _._scaffolds = t0;
      _._materialBanners = t1;
      _._snackBars = t2;
      _._accessibleNavigation = _._snackBarTimer = null;
      _.TickerProviderStateMixin__tickers = t3;
      _.TickerProviderStateMixin__tickerModeNotifier = t4;
      _._framework0$_element = _._widget = null;
    },
    ScaffoldMessengerState_hideCurrentSnackBar_closure: function ScaffoldMessengerState_hideCurrentSnackBar_closure(t0, t1) {
      this.completer = t0;
      this.reason = t1;
    },
    _ScaffoldMessengerScope: function _ScaffoldMessengerScope(t0, t1, t2) {
      this._scaffoldMessengerState = t0;
      this.child = t1;
      this.key = t2;
    },
    _ScaffoldMessengerState_State_TickerProviderStateMixin: function _ScaffoldMessengerState_State_TickerProviderStateMixin() {
    },
    ScrollbarThemeData$(crossAxisMargin, interactive, mainAxisMargin, minThumbLength, radius, thickness, thumbColor, thumbVisibility, trackBorderColor, trackColor, trackVisibility) {
      return new A.ScrollbarThemeData(thumbVisibility, thickness, trackVisibility, interactive, radius, thumbColor, trackColor, trackBorderColor, crossAxisMargin, mainAxisMargin, minThumbLength);
    },
    ScrollbarThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, _null = null;
      if (a == b && a != null)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.thumbVisibility;
      t3 = b == null;
      t4 = t3 ? _null : b.thumbVisibility;
      t5 = type$.nullable_bool;
      t4 = A.WidgetStateProperty_lerp(t2, t4, t, A.scrollbar_theme___lerpBool$closure(), t5);
      t2 = t1 ? _null : a.thickness;
      t6 = t3 ? _null : b.thickness;
      t6 = A.WidgetStateProperty_lerp(t2, t6, t, A.ui__lerpDouble$closure(), type$.nullable_double);
      t2 = t1 ? _null : a.trackVisibility;
      t2 = A.WidgetStateProperty_lerp(t2, t3 ? _null : b.trackVisibility, t, A.scrollbar_theme___lerpBool$closure(), t5);
      t5 = t1 ? _null : a.interactive;
      t5 = A._lerpBool(t5, t3 ? _null : b.interactive, t);
      t7 = t1 ? _null : a.radius;
      t7 = A.Radius_lerp(t7, t3 ? _null : b.radius, t);
      t8 = t1 ? _null : a.thumbColor;
      t9 = t3 ? _null : b.thumbColor;
      t10 = type$.nullable_Color;
      t9 = A.WidgetStateProperty_lerp(t8, t9, t, A.ui_Color_lerp$closure(), t10);
      t8 = t1 ? _null : a.trackColor;
      t8 = A.WidgetStateProperty_lerp(t8, t3 ? _null : b.trackColor, t, A.ui_Color_lerp$closure(), t10);
      t11 = t1 ? _null : a.trackBorderColor;
      t10 = A.WidgetStateProperty_lerp(t11, t3 ? _null : b.trackBorderColor, t, A.ui_Color_lerp$closure(), t10);
      t11 = t1 ? _null : a.crossAxisMargin;
      t11 = A.lerpDouble(t11, t3 ? _null : b.crossAxisMargin, t);
      t12 = t1 ? _null : a.mainAxisMargin;
      t12 = A.lerpDouble(t12, t3 ? _null : b.mainAxisMargin, t);
      t1 = t1 ? _null : a.minThumbLength;
      return A.ScrollbarThemeData$(t11, t5, t12, A.lerpDouble(t1, t3 ? _null : b.minThumbLength, t), t7, t6, t9, t4, t10, t8, t2);
    },
    _lerpBool(a, b, t) {
      B._asBoolQ(a);
      B._asBoolQ(b);
      return B._asDouble(t) < 0.5 ? a : b;
    },
    ScrollbarThemeData: function ScrollbarThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.thumbVisibility = t0;
      _.thickness = t1;
      _.trackVisibility = t2;
      _.interactive = t3;
      _.radius = t4;
      _.thumbColor = t5;
      _.trackColor = t6;
      _.trackBorderColor = t7;
      _.crossAxisMargin = t8;
      _.mainAxisMargin = t9;
      _.minThumbLength = t10;
    },
    _ScrollbarThemeData_Object_Diagnosticable: function _ScrollbarThemeData_Object_Diagnosticable() {
    },
    SearchBarThemeData$(backgroundColor, constraints, elevation, hintStyle, overlayColor, padding, shadowColor, shape, side, surfaceTintColor, textCapitalization, textStyle) {
      return new A.SearchBarThemeData(elevation, backgroundColor, shadowColor, surfaceTintColor, overlayColor, side, shape, padding, textStyle, hintStyle, constraints, textCapitalization);
    },
    SearchBarThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, _null = null;
      if (a == b)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.elevation;
      t3 = b == null;
      t4 = t3 ? _null : b.elevation;
      t4 = A.WidgetStateProperty_lerp(t2, t4, t, A.ui__lerpDouble$closure(), type$.nullable_double);
      t2 = t1 ? _null : a.backgroundColor;
      t5 = t3 ? _null : b.backgroundColor;
      t6 = type$.nullable_Color;
      t5 = A.WidgetStateProperty_lerp(t2, t5, t, A.ui_Color_lerp$closure(), t6);
      t2 = t1 ? _null : a.shadowColor;
      t2 = A.WidgetStateProperty_lerp(t2, t3 ? _null : b.shadowColor, t, A.ui_Color_lerp$closure(), t6);
      t7 = t1 ? _null : a.surfaceTintColor;
      t7 = A.WidgetStateProperty_lerp(t7, t3 ? _null : b.surfaceTintColor, t, A.ui_Color_lerp$closure(), t6);
      t8 = t1 ? _null : a.overlayColor;
      t6 = A.WidgetStateProperty_lerp(t8, t3 ? _null : b.overlayColor, t, A.ui_Color_lerp$closure(), t6);
      t8 = t1 ? _null : a.side;
      t8 = A.SearchBarThemeData__lerpSides(t8, t3 ? _null : b.side, t);
      t9 = t1 ? _null : a.shape;
      t10 = t3 ? _null : b.shape;
      t10 = A.WidgetStateProperty_lerp(t9, t10, t, A.borders_OutlinedBorder_lerp$closure(), type$.nullable_OutlinedBorder);
      t9 = t1 ? _null : a.padding;
      t11 = t3 ? _null : b.padding;
      t11 = A.WidgetStateProperty_lerp(t9, t11, t, A.edge_insets_EdgeInsetsGeometry_lerp$closure(), type$.nullable_EdgeInsetsGeometry);
      t9 = t1 ? _null : a.textStyle;
      t12 = t3 ? _null : b.textStyle;
      t13 = type$.nullable_TextStyle;
      t12 = A.WidgetStateProperty_lerp(t9, t12, t, A.text_style_TextStyle_lerp$closure(), t13);
      t9 = t1 ? _null : a.hintStyle;
      t9 = A.WidgetStateProperty_lerp(t9, t3 ? _null : b.hintStyle, t, A.text_style_TextStyle_lerp$closure(), t13);
      t13 = t1 ? _null : a.constraints;
      t13 = A.BoxConstraints_lerp(t13, t3 ? _null : b.constraints, t);
      if (t < 0.5)
        t1 = t1 ? _null : a.textCapitalization;
      else
        t1 = t3 ? _null : b.textCapitalization;
      return A.SearchBarThemeData$(t5, t13, t4, t9, t6, t11, t2, t10, t8, t7, t1, t12);
    },
    SearchBarThemeData__lerpSides(a, b, t) {
      if (a == b)
        return a;
      return A.WidgetStateBorderSide_lerp(a, b, t);
    },
    SearchBarThemeData: function SearchBarThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.elevation = t0;
      _.backgroundColor = t1;
      _.shadowColor = t2;
      _.surfaceTintColor = t3;
      _.overlayColor = t4;
      _.side = t5;
      _.shape = t6;
      _.padding = t7;
      _.textStyle = t8;
      _.hintStyle = t9;
      _.constraints = t10;
      _.textCapitalization = t11;
    },
    _SearchBarThemeData_Object_Diagnosticable: function _SearchBarThemeData_Object_Diagnosticable() {
    },
    SearchViewThemeData$(backgroundColor, constraints, dividerColor, elevation, headerHeight, headerHintStyle, headerTextStyle, shape, side, surfaceTintColor) {
      return new A.SearchViewThemeData(backgroundColor, elevation, surfaceTintColor, side, shape, headerHeight, headerTextStyle, headerHintStyle, constraints, dividerColor);
    },
    SearchViewThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, _null = null;
      if (a == b)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.backgroundColor;
      t3 = b == null;
      t2 = A.Color_lerp(t2, t3 ? _null : b.backgroundColor, t);
      t4 = t1 ? _null : a.elevation;
      t4 = A.lerpDouble(t4, t3 ? _null : b.elevation, t);
      t5 = t1 ? _null : a.surfaceTintColor;
      t5 = A.Color_lerp(t5, t3 ? _null : b.surfaceTintColor, t);
      t6 = t1 ? _null : a.side;
      t6 = A.SearchViewThemeData__lerpSides(t6, t3 ? _null : b.side, t);
      t7 = t1 ? _null : a.shape;
      t7 = A.OutlinedBorder_lerp(t7, t3 ? _null : b.shape, t);
      t8 = t1 ? _null : a.headerHeight;
      t8 = A.lerpDouble(t8, t3 ? _null : b.headerHeight, t);
      t9 = t1 ? _null : a.headerTextStyle;
      t9 = A.TextStyle_lerp(t9, t3 ? _null : b.headerTextStyle, t);
      t10 = t1 ? _null : a.headerTextStyle;
      t10 = A.TextStyle_lerp(t10, t3 ? _null : b.headerTextStyle, t);
      t11 = t1 ? _null : a.constraints;
      t11 = A.BoxConstraints_lerp(t11, t3 ? _null : b.constraints, t);
      t1 = t1 ? _null : a.dividerColor;
      return A.SearchViewThemeData$(t2, t11, A.Color_lerp(t1, t3 ? _null : b.dividerColor, t), t4, t8, t10, t9, t7, t6, t5);
    },
    SearchViewThemeData__lerpSides(a, b, t) {
      if (a == null || b == null)
        return null;
      if (a === b)
        return a;
      return A.BorderSide_lerp(a, b, t);
    },
    SearchViewThemeData: function SearchViewThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.backgroundColor = t0;
      _.elevation = t1;
      _.surfaceTintColor = t2;
      _.side = t3;
      _.shape = t4;
      _.headerHeight = t5;
      _.headerTextStyle = t6;
      _.headerHintStyle = t7;
      _.constraints = t8;
      _.dividerColor = t9;
    },
    _SearchViewThemeData_Object_Diagnosticable: function _SearchViewThemeData_Object_Diagnosticable() {
    },
    SegmentedButtonThemeData$(selectedIcon, style) {
      return new A.SegmentedButtonThemeData(style, selectedIcon);
    },
    SegmentedButtonThemeData_lerp(a, b, t) {
      var t1, t2, t3, _null = null;
      if (a == b && a != null)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.style;
      t3 = b == null;
      t2 = A.ButtonStyle_lerp(t2, t3 ? _null : b.style, t);
      if (t < 0.5)
        t1 = t1 ? _null : a.selectedIcon;
      else
        t1 = t3 ? _null : b.selectedIcon;
      return A.SegmentedButtonThemeData$(t1, t2);
    },
    SegmentedButtonThemeData: function SegmentedButtonThemeData(t0, t1) {
      this.style = t0;
      this.selectedIcon = t1;
    },
    _SegmentedButtonThemeData_Object_Diagnosticable: function _SegmentedButtonThemeData_Object_Diagnosticable() {
    },
    SliderThemeData$(activeTickMarkColor, activeTrackColor, allowedInteraction, disabledActiveTickMarkColor, disabledActiveTrackColor, disabledInactiveTickMarkColor, disabledInactiveTrackColor, disabledSecondaryActiveTrackColor, disabledThumbColor, inactiveTickMarkColor, inactiveTrackColor, minThumbSeparation, mouseCursor, overlappingShapeStrokeColor, overlayColor, overlayShape, rangeThumbShape, rangeTickMarkShape, rangeTrackShape, rangeValueIndicatorShape, secondaryActiveTrackColor, showValueIndicator, thumbColor, thumbSelector, thumbShape, tickMarkShape, trackHeight, trackShape, valueIndicatorColor, valueIndicatorShape, valueIndicatorStrokeColor, valueIndicatorTextStyle) {
      return new A.SliderThemeData(trackHeight, activeTrackColor, inactiveTrackColor, secondaryActiveTrackColor, disabledActiveTrackColor, disabledSecondaryActiveTrackColor, disabledInactiveTrackColor, activeTickMarkColor, inactiveTickMarkColor, disabledActiveTickMarkColor, disabledInactiveTickMarkColor, thumbColor, overlappingShapeStrokeColor, disabledThumbColor, overlayColor, valueIndicatorColor, valueIndicatorStrokeColor, overlayShape, tickMarkShape, thumbShape, trackShape, valueIndicatorShape, rangeTickMarkShape, rangeThumbShape, rangeTrackShape, rangeValueIndicatorShape, showValueIndicator, valueIndicatorTextStyle, minThumbSeparation, thumbSelector, mouseCursor, allowedInteraction);
    },
    SliderThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32;
      if (a === b)
        return a;
      t1 = A.lerpDouble(a.trackHeight, b.trackHeight, t);
      t2 = A.Color_lerp(a.activeTrackColor, b.activeTrackColor, t);
      t3 = A.Color_lerp(a.inactiveTrackColor, b.inactiveTrackColor, t);
      t4 = A.Color_lerp(a.secondaryActiveTrackColor, b.secondaryActiveTrackColor, t);
      t5 = A.Color_lerp(a.disabledActiveTrackColor, b.disabledActiveTrackColor, t);
      t6 = A.Color_lerp(a.disabledInactiveTrackColor, b.disabledInactiveTrackColor, t);
      t7 = A.Color_lerp(a.disabledSecondaryActiveTrackColor, b.disabledSecondaryActiveTrackColor, t);
      t8 = A.Color_lerp(a.activeTickMarkColor, b.activeTickMarkColor, t);
      t9 = A.Color_lerp(a.inactiveTickMarkColor, b.inactiveTickMarkColor, t);
      t10 = A.Color_lerp(a.disabledActiveTickMarkColor, b.disabledActiveTickMarkColor, t);
      t11 = A.Color_lerp(a.disabledInactiveTickMarkColor, b.disabledInactiveTickMarkColor, t);
      t12 = A.Color_lerp(a.thumbColor, b.thumbColor, t);
      t13 = A.Color_lerp(a.overlappingShapeStrokeColor, b.overlappingShapeStrokeColor, t);
      t14 = A.Color_lerp(a.disabledThumbColor, b.disabledThumbColor, t);
      t15 = A.Color_lerp(a.overlayColor, b.overlayColor, t);
      t16 = A.Color_lerp(a.valueIndicatorColor, b.valueIndicatorColor, t);
      t17 = A.Color_lerp(a.valueIndicatorStrokeColor, b.valueIndicatorStrokeColor, t);
      t18 = t < 0.5;
      t19 = t18 ? a.overlayShape : b.overlayShape;
      t20 = t18 ? a.tickMarkShape : b.tickMarkShape;
      t21 = t18 ? a.thumbShape : b.thumbShape;
      t22 = t18 ? a.trackShape : b.trackShape;
      t23 = t18 ? a.valueIndicatorShape : b.valueIndicatorShape;
      t24 = t18 ? a.rangeTickMarkShape : b.rangeTickMarkShape;
      t25 = t18 ? a.rangeThumbShape : b.rangeThumbShape;
      t26 = t18 ? a.rangeTrackShape : b.rangeTrackShape;
      t27 = t18 ? a.rangeValueIndicatorShape : b.rangeValueIndicatorShape;
      t28 = t18 ? a.showValueIndicator : b.showValueIndicator;
      t29 = A.TextStyle_lerp(a.valueIndicatorTextStyle, b.valueIndicatorTextStyle, t);
      t30 = A.lerpDouble(a.minThumbSeparation, b.minThumbSeparation, t);
      t31 = t18 ? a.thumbSelector : b.thumbSelector;
      t32 = t18 ? a.mouseCursor : b.mouseCursor;
      return A.SliderThemeData$(t8, t2, t18 ? a.allowedInteraction : b.allowedInteraction, t10, t5, t11, t6, t7, t14, t9, t3, t30, t32, t13, t15, t19, t25, t24, t26, t27, t4, t28, t12, t31, t21, t20, t1, t22, t16, t23, t17, t29);
    },
    SliderThemeData: function SliderThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31) {
      var _ = this;
      _.trackHeight = t0;
      _.activeTrackColor = t1;
      _.inactiveTrackColor = t2;
      _.secondaryActiveTrackColor = t3;
      _.disabledActiveTrackColor = t4;
      _.disabledSecondaryActiveTrackColor = t5;
      _.disabledInactiveTrackColor = t6;
      _.activeTickMarkColor = t7;
      _.inactiveTickMarkColor = t8;
      _.disabledActiveTickMarkColor = t9;
      _.disabledInactiveTickMarkColor = t10;
      _.thumbColor = t11;
      _.overlappingShapeStrokeColor = t12;
      _.disabledThumbColor = t13;
      _.overlayColor = t14;
      _.valueIndicatorColor = t15;
      _.valueIndicatorStrokeColor = t16;
      _.overlayShape = t17;
      _.tickMarkShape = t18;
      _.thumbShape = t19;
      _.trackShape = t20;
      _.valueIndicatorShape = t21;
      _.rangeTickMarkShape = t22;
      _.rangeThumbShape = t23;
      _.rangeTrackShape = t24;
      _.rangeValueIndicatorShape = t25;
      _.showValueIndicator = t26;
      _.valueIndicatorTextStyle = t27;
      _.minThumbSeparation = t28;
      _.thumbSelector = t29;
      _.mouseCursor = t30;
      _.allowedInteraction = t31;
    },
    _SliderThemeData_Object_Diagnosticable: function _SliderThemeData_Object_Diagnosticable() {
    },
    SnackBarClosedReason: function SnackBarClosedReason(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    SnackBarThemeData$(actionBackgroundColor, actionOverflowThreshold, actionTextColor, backgroundColor, behavior, closeIconColor, contentTextStyle, disabledActionBackgroundColor, disabledActionTextColor, dismissDirection, elevation, insetPadding, shape, width) {
      return new A.SnackBarThemeData(backgroundColor, actionTextColor, disabledActionTextColor, contentTextStyle, elevation, shape, behavior, width, insetPadding, closeIconColor, actionOverflowThreshold, actionBackgroundColor, disabledActionBackgroundColor, dismissDirection);
    },
    SnackBarThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, _null = null;
      if (a == b && a != null)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.backgroundColor;
      t3 = b == null;
      t2 = A.Color_lerp(t2, t3 ? _null : b.backgroundColor, t);
      t4 = t1 ? _null : a.actionTextColor;
      t4 = A.Color_lerp(t4, t3 ? _null : b.actionTextColor, t);
      t5 = t1 ? _null : a.disabledActionTextColor;
      t5 = A.Color_lerp(t5, t3 ? _null : b.disabledActionTextColor, t);
      t6 = t1 ? _null : a.contentTextStyle;
      t6 = A.TextStyle_lerp(t6, t3 ? _null : b.contentTextStyle, t);
      t7 = t1 ? _null : a.elevation;
      t7 = A.lerpDouble(t7, t3 ? _null : b.elevation, t);
      t8 = t1 ? _null : a.shape;
      t8 = A.ShapeBorder_lerp(t8, t3 ? _null : b.shape, t);
      t9 = t < 0.5;
      if (t9)
        t10 = t1 ? _null : a.behavior;
      else
        t10 = t3 ? _null : b.behavior;
      t11 = t1 ? _null : a.width;
      t11 = A.lerpDouble(t11, t3 ? _null : b.width, t);
      t12 = t1 ? _null : a.insetPadding;
      t12 = A.EdgeInsets_lerp(t12, t3 ? _null : b.insetPadding, t);
      t13 = t1 ? _null : a.closeIconColor;
      t13 = A.Color_lerp(t13, t3 ? _null : b.closeIconColor, t);
      t14 = t1 ? _null : a.actionOverflowThreshold;
      t14 = A.lerpDouble(t14, t3 ? _null : b.actionOverflowThreshold, t);
      t15 = t1 ? _null : a.actionBackgroundColor;
      t15 = A.Color_lerp(t15, t3 ? _null : b.actionBackgroundColor, t);
      t16 = t1 ? _null : a.disabledActionBackgroundColor;
      t16 = A.Color_lerp(t16, t3 ? _null : b.disabledActionBackgroundColor, t);
      if (t9)
        t1 = t1 ? _null : a.dismissDirection;
      else
        t1 = t3 ? _null : b.dismissDirection;
      return A.SnackBarThemeData$(t15, t14, t4, t2, t10, t13, t6, t16, t5, t1, t7, t12, t8, t11);
    },
    SnackBarThemeData: function SnackBarThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.backgroundColor = t0;
      _.actionTextColor = t1;
      _.disabledActionTextColor = t2;
      _.contentTextStyle = t3;
      _.elevation = t4;
      _.shape = t5;
      _.behavior = t6;
      _.width = t7;
      _.insetPadding = t8;
      _.closeIconColor = t9;
      _.actionOverflowThreshold = t10;
      _.actionBackgroundColor = t11;
      _.disabledActionBackgroundColor = t12;
      _.dismissDirection = t13;
    },
    _SnackBarThemeData_Object_Diagnosticable: function _SnackBarThemeData_Object_Diagnosticable() {
    },
    SwitchThemeData$(materialTapTargetSize, mouseCursor, overlayColor, splashRadius, thumbColor, thumbIcon, trackColor, trackOutlineColor, trackOutlineWidth) {
      return new A.SwitchThemeData(thumbColor, trackColor, trackOutlineColor, trackOutlineWidth, materialTapTargetSize, mouseCursor, overlayColor, splashRadius, thumbIcon);
    },
    SwitchThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, _null = null;
      if (a == b && a != null)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.thumbColor;
      t3 = b == null;
      t4 = t3 ? _null : b.thumbColor;
      t5 = type$.nullable_Color;
      t4 = A.WidgetStateProperty_lerp(t2, t4, t, A.ui_Color_lerp$closure(), t5);
      t2 = t1 ? _null : a.trackColor;
      t2 = A.WidgetStateProperty_lerp(t2, t3 ? _null : b.trackColor, t, A.ui_Color_lerp$closure(), t5);
      t6 = t1 ? _null : a.trackOutlineColor;
      t6 = A.WidgetStateProperty_lerp(t6, t3 ? _null : b.trackOutlineColor, t, A.ui_Color_lerp$closure(), t5);
      t7 = t1 ? _null : a.trackOutlineWidth;
      t8 = t3 ? _null : b.trackOutlineWidth;
      t8 = A.WidgetStateProperty_lerp(t7, t8, t, A.ui__lerpDouble$closure(), type$.nullable_double);
      t7 = t < 0.5;
      if (t7)
        t9 = t1 ? _null : a.materialTapTargetSize;
      else
        t9 = t3 ? _null : b.materialTapTargetSize;
      if (t7)
        t10 = t1 ? _null : a.mouseCursor;
      else
        t10 = t3 ? _null : b.mouseCursor;
      t11 = t1 ? _null : a.overlayColor;
      t5 = A.WidgetStateProperty_lerp(t11, t3 ? _null : b.overlayColor, t, A.ui_Color_lerp$closure(), t5);
      t11 = t1 ? _null : a.splashRadius;
      t11 = A.lerpDouble(t11, t3 ? _null : b.splashRadius, t);
      if (t7)
        t1 = t1 ? _null : a.thumbIcon;
      else
        t1 = t3 ? _null : b.thumbIcon;
      return A.SwitchThemeData$(t9, t10, t5, t11, t4, t1, t2, t6, t8);
    },
    SwitchThemeData: function SwitchThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.thumbColor = t0;
      _.trackColor = t1;
      _.trackOutlineColor = t2;
      _.trackOutlineWidth = t3;
      _.materialTapTargetSize = t4;
      _.mouseCursor = t5;
      _.overlayColor = t6;
      _.splashRadius = t7;
      _.thumbIcon = t8;
    },
    _SwitchThemeData_Object_Diagnosticable: function _SwitchThemeData_Object_Diagnosticable() {
    },
    TabBarTheme$(dividerColor, dividerHeight, indicator, indicatorColor, indicatorSize, labelColor, labelPadding, labelStyle, mouseCursor, overlayColor, splashFactory, tabAlignment, textScaler, unselectedLabelColor, unselectedLabelStyle) {
      return new A.TabBarTheme(indicator, indicatorColor, indicatorSize, dividerColor, dividerHeight, labelColor, labelPadding, labelStyle, unselectedLabelColor, unselectedLabelStyle, overlayColor, splashFactory, mouseCursor, tabAlignment, textScaler);
    },
    TabBarTheme_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15;
      if (a === b)
        return a;
      t1 = A.Decoration_lerp(a.indicator, b.indicator, t);
      t2 = A.Color_lerp(a.indicatorColor, b.indicatorColor, t);
      t3 = t < 0.5;
      t4 = t3 ? a.indicatorSize : b.indicatorSize;
      t5 = A.Color_lerp(a.dividerColor, b.dividerColor, t);
      t6 = t3 ? a.dividerHeight : b.dividerHeight;
      t7 = A.Color_lerp(a.labelColor, b.labelColor, t);
      t8 = A.EdgeInsetsGeometry_lerp(a.labelPadding, b.labelPadding, t);
      t9 = A.TextStyle_lerp(a.labelStyle, b.labelStyle, t);
      t10 = A.Color_lerp(a.unselectedLabelColor, b.unselectedLabelColor, t);
      t11 = A.TextStyle_lerp(a.unselectedLabelStyle, b.unselectedLabelStyle, t);
      t12 = A.WidgetStateProperty_lerp(a.overlayColor, b.overlayColor, t, A.ui_Color_lerp$closure(), type$.nullable_Color);
      t13 = t3 ? a.splashFactory : b.splashFactory;
      t14 = t3 ? a.mouseCursor : b.mouseCursor;
      t15 = t3 ? a.tabAlignment : b.tabAlignment;
      return A.TabBarTheme$(t5, t6, t1, t2, t4, t7, t8, t9, t14, t12, t13, t15, t3 ? a.textScaler : b.textScaler, t10, t11);
    },
    TabBarTheme: function TabBarTheme(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.indicator = t0;
      _.indicatorColor = t1;
      _.indicatorSize = t2;
      _.dividerColor = t3;
      _.dividerHeight = t4;
      _.labelColor = t5;
      _.labelPadding = t6;
      _.labelStyle = t7;
      _.unselectedLabelColor = t8;
      _.unselectedLabelStyle = t9;
      _.overlayColor = t10;
      _.splashFactory = t11;
      _.mouseCursor = t12;
      _.tabAlignment = t13;
      _.textScaler = t14;
    },
    _TabBarTheme_Object_Diagnosticable: function _TabBarTheme_Object_Diagnosticable() {
    },
    TextButtonThemeData$(style) {
      return new A.TextButtonThemeData(style);
    },
    TextButtonThemeData_lerp(a, b, t) {
      var t1;
      if (a == b)
        return a;
      t1 = a == null ? null : a.style;
      return A.TextButtonThemeData$(A.ButtonStyle_lerp(t1, b == null ? null : b.style, t));
    },
    TextButtonThemeData: function TextButtonThemeData(t0) {
      this.style = t0;
    },
    _TextButtonThemeData_Object_Diagnosticable: function _TextButtonThemeData_Object_Diagnosticable() {
    },
    TextSelectionThemeData$(cursorColor, selectionColor, selectionHandleColor) {
      return new A.TextSelectionThemeData(cursorColor, selectionColor, selectionHandleColor);
    },
    TextSelectionThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, _null = null;
      if (a == b)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.cursorColor;
      t3 = b == null;
      t2 = A.Color_lerp(t2, t3 ? _null : b.cursorColor, t);
      t4 = t1 ? _null : a.selectionColor;
      t4 = A.Color_lerp(t4, t3 ? _null : b.selectionColor, t);
      t1 = t1 ? _null : a.selectionHandleColor;
      return A.TextSelectionThemeData$(t2, t4, A.Color_lerp(t1, t3 ? _null : b.selectionHandleColor, t));
    },
    TextSelectionThemeData: function TextSelectionThemeData(t0, t1, t2) {
      this.cursorColor = t0;
      this.selectionColor = t1;
      this.selectionHandleColor = t2;
    },
    _TextSelectionThemeData_Object_Diagnosticable: function _TextSelectionThemeData_Object_Diagnosticable() {
    },
    TextTheme$(bodyLarge, bodyMedium, bodySmall, displayLarge, displayMedium, displaySmall, headlineLarge, headlineMedium, headlineSmall, labelLarge, labelMedium, labelSmall, titleLarge, titleMedium, titleSmall) {
      return new A.TextTheme(displayLarge, displayMedium, displaySmall, headlineLarge, headlineMedium, headlineSmall, titleLarge, titleMedium, titleSmall, bodyLarge, bodyMedium, bodySmall, labelLarge, labelMedium, labelSmall);
    },
    TextTheme_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, _null = null;
      if (a == b && a != null)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.displayLarge;
      t3 = b == null;
      t2 = A.TextStyle_lerp(t2, t3 ? _null : b.displayLarge, t);
      t4 = t1 ? _null : a.displayMedium;
      t4 = A.TextStyle_lerp(t4, t3 ? _null : b.displayMedium, t);
      t5 = t1 ? _null : a.displaySmall;
      t5 = A.TextStyle_lerp(t5, t3 ? _null : b.displaySmall, t);
      t6 = t1 ? _null : a.headlineLarge;
      t6 = A.TextStyle_lerp(t6, t3 ? _null : b.headlineLarge, t);
      t7 = t1 ? _null : a.headlineMedium;
      t7 = A.TextStyle_lerp(t7, t3 ? _null : b.headlineMedium, t);
      t8 = t1 ? _null : a.headlineSmall;
      t8 = A.TextStyle_lerp(t8, t3 ? _null : b.headlineSmall, t);
      t9 = t1 ? _null : a.titleLarge;
      t9 = A.TextStyle_lerp(t9, t3 ? _null : b.titleLarge, t);
      t10 = t1 ? _null : a.titleMedium;
      t10 = A.TextStyle_lerp(t10, t3 ? _null : b.titleMedium, t);
      t11 = t1 ? _null : a.titleSmall;
      t11 = A.TextStyle_lerp(t11, t3 ? _null : b.titleSmall, t);
      t12 = t1 ? _null : a.bodyLarge;
      t12 = A.TextStyle_lerp(t12, t3 ? _null : b.bodyLarge, t);
      t13 = t1 ? _null : a.bodyMedium;
      t13 = A.TextStyle_lerp(t13, t3 ? _null : b.bodyMedium, t);
      t14 = t1 ? _null : a.bodySmall;
      t14 = A.TextStyle_lerp(t14, t3 ? _null : b.bodySmall, t);
      t15 = t1 ? _null : a.labelLarge;
      t15 = A.TextStyle_lerp(t15, t3 ? _null : b.labelLarge, t);
      t16 = t1 ? _null : a.labelMedium;
      t16 = A.TextStyle_lerp(t16, t3 ? _null : b.labelMedium, t);
      t1 = t1 ? _null : a.labelSmall;
      return A.TextTheme$(t12, t13, t14, t2, t4, t5, t6, t7, t8, t15, t16, A.TextStyle_lerp(t1, t3 ? _null : b.labelSmall, t), t9, t10, t11);
    },
    TextTheme: function TextTheme(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.displayLarge = t0;
      _.displayMedium = t1;
      _.displaySmall = t2;
      _.headlineLarge = t3;
      _.headlineMedium = t4;
      _.headlineSmall = t5;
      _.titleLarge = t6;
      _.titleMedium = t7;
      _.titleSmall = t8;
      _.bodyLarge = t9;
      _.bodyMedium = t10;
      _.bodySmall = t11;
      _.labelLarge = t12;
      _.labelMedium = t13;
      _.labelSmall = t14;
    },
    _TextTheme_Object_Diagnosticable: function _TextTheme_Object_Diagnosticable() {
    },
    Theme$(child, data) {
      return new A.Theme(data, child, null);
    },
    Theme_of(context) {
      var inheritedCupertinoTheme, theme,
        inheritedTheme = context.dependOnInheritedWidgetOfExactType$1$0(type$._InheritedTheme),
        localizations = A.Localizations_of(context, C.Type_MaterialLocalizations_EyN, type$.MaterialLocalizations),
        category = localizations == null ? null : localizations.get$scriptCategory();
      if (category == null)
        category = C.ScriptCategory_0;
      inheritedCupertinoTheme = context.dependOnInheritedWidgetOfExactType$1$0(type$.InheritedCupertinoTheme);
      theme = inheritedTheme == null ? null : inheritedTheme.theme.data;
      if (theme == null)
        theme = inheritedCupertinoTheme != null ? A.CupertinoBasedMaterialThemeData$(inheritedCupertinoTheme.theme.data).materialTheme : $.$get$Theme__kFallbackTheme();
      return A.ThemeData_localize(theme, theme.typography.geometryThemeFor$1(category));
    },
    _InheritedTheme$(child, theme) {
      return new A._InheritedTheme(theme, child, null);
    },
    ThemeDataTween$(begin) {
      return new A.ThemeDataTween(begin, null);
    },
    AnimatedTheme$(child, curve, data, duration) {
      return new A.AnimatedTheme(data, child, curve, duration, null, null);
    },
    _AnimatedThemeState$() {
      return new A._AnimatedThemeState(null, null);
    },
    Theme: function Theme(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    _InheritedTheme: function _InheritedTheme(t0, t1, t2) {
      this.theme = t0;
      this.child = t1;
      this.key = t2;
    },
    ThemeDataTween: function ThemeDataTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    AnimatedTheme: function AnimatedTheme(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.data = t0;
      _.child = t1;
      _.curve = t2;
      _.duration = t3;
      _.onEnd = t4;
      _.key = t5;
    },
    _AnimatedThemeState: function _AnimatedThemeState(t0, t1) {
      var _ = this;
      _._theme$_data = null;
      _.__ImplicitlyAnimatedWidgetState__animation_AI = _.__ImplicitlyAnimatedWidgetState__controller_FI = $;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._framework0$_element = _._widget = null;
    },
    _AnimatedThemeState_forEachTween_closure: function _AnimatedThemeState_forEachTween_closure() {
    },
    ThemeData_ThemeData(brightness, colorScheme, useMaterial3) {
      var materialTapTargetSize, visualDensity, splashFactory, t1, effectiveBrightness, isDark, primarySurfaceColor, onPrimarySurfaceColor, canvasColor, canvasColor0, scaffoldBackgroundColor, cardColor, dividerColor, dialogBackgroundColor, applyElevationOverlayColor, primaryColor, indicatorColor, estimatedPrimaryColorBrightness, primaryColorLight, primaryColorDark, primaryIsDark, focusColor, hoverColor, t2, unselectedWidgetColor, secondaryHeaderColor, hintColor, buttonTheme, disabledColor, highlightColor, splashColor, typography, defaultTextTheme, defaultPrimaryTextTheme, textTheme, primaryTextTheme, iconTheme, primaryIconTheme, _null = null,
        extensions = B._setArrayType([], type$.JSArray_ThemeExtension_ThemeExtension_dynamic),
        adaptations = B._setArrayType([], type$.JSArray_Adaptation_Object),
        platform = E.defaultTargetPlatform();
      platform = platform;
      switch (platform) {
        case D.TargetPlatform_0:
        case D.TargetPlatform_1:
        case D.TargetPlatform_2:
          materialTapTargetSize = C.MaterialTapTargetSize_0;
          break;
        case D.TargetPlatform_3:
        case D.TargetPlatform_4:
        case D.TargetPlatform_5:
          materialTapTargetSize = C.MaterialTapTargetSize_1;
          break;
        default:
          materialTapTargetSize = _null;
      }
      visualDensity = A.VisualDensity_defaultDensityForPlatform(platform);
      visualDensity = visualDensity;
      useMaterial3 = useMaterial3 !== false;
      if (useMaterial3)
        splashFactory = C.C__InkRippleFactory;
      else
        splashFactory = C.C__InkSplashFactory;
      if (brightness == null) {
        t1 = colorScheme == null ? _null : colorScheme.brightness;
        effectiveBrightness = t1;
      } else
        effectiveBrightness = brightness;
      if (effectiveBrightness == null)
        effectiveBrightness = D.Brightness_1;
      isDark = effectiveBrightness === D.Brightness_0;
      if (useMaterial3) {
        if (colorScheme == null)
          colorScheme = isDark ? C.ColorScheme_iCC : C.ColorScheme_vfE;
        primarySurfaceColor = isDark ? colorScheme.surface : colorScheme.primary;
        onPrimarySurfaceColor = isDark ? colorScheme.onSurface : colorScheme.onPrimary;
        canvasColor = colorScheme.surface;
        canvasColor0 = canvasColor;
        scaffoldBackgroundColor = canvasColor;
        cardColor = canvasColor;
        dividerColor = colorScheme.get$outline();
        dividerColor = dividerColor;
        dialogBackgroundColor = canvasColor;
        applyElevationOverlayColor = brightness === D.Brightness_0;
        primaryColor = primarySurfaceColor;
        indicatorColor = onPrimarySurfaceColor;
        canvasColor = canvasColor0;
      } else {
        scaffoldBackgroundColor = _null;
        primaryColor = scaffoldBackgroundColor;
        indicatorColor = primaryColor;
        dividerColor = indicatorColor;
        dialogBackgroundColor = dividerColor;
        cardColor = dialogBackgroundColor;
        canvasColor = cardColor;
        applyElevationOverlayColor = canvasColor;
      }
      if (primaryColor == null)
        if (isDark) {
          t1 = C.MaterialColor_Map_Ng0Da_4288585374.$index(0, 900);
          t1.toString;
          primaryColor = t1;
        } else
          primaryColor = C.MaterialColor_Map_ky0_4280391411;
      estimatedPrimaryColorBrightness = A.ThemeData_estimateBrightnessForColor(primaryColor);
      if (isDark) {
        t1 = C.MaterialColor_Map_Ng0Da_4288585374.$index(0, 500);
        t1.toString;
        primaryColorLight = t1;
      } else {
        t1 = C.MaterialColor_Map_ky0_4280391411.$index(0, 100);
        t1.toString;
        primaryColorLight = t1;
      }
      if (isDark)
        primaryColorDark = C.Color_4278190080;
      else {
        t1 = C.MaterialColor_Map_ky0_4280391411.$index(0, 700);
        t1.toString;
        primaryColorDark = t1;
      }
      primaryIsDark = estimatedPrimaryColorBrightness === D.Brightness_0;
      focusColor = isDark ? C.Color_4294967295.withOpacity$1(0.12) : C.Color_4278190080.withOpacity$1(0.12);
      hoverColor = isDark ? C.Color_4294967295.withOpacity$1(0.04) : C.Color_4278190080.withOpacity$1(0.04);
      if (canvasColor == null)
        if (isDark) {
          t1 = C.MaterialColor_Map_Ng0Da_4288585374.$index(0, 850);
          t1.toString;
          canvasColor = t1;
        } else {
          t1 = C.MaterialColor_Map_Ng0Da_4288585374.$index(0, 50);
          t1.toString;
          canvasColor = t1;
        }
      if (scaffoldBackgroundColor == null)
        scaffoldBackgroundColor = canvasColor;
      if (cardColor == null)
        if (isDark) {
          t1 = C.MaterialColor_Map_Ng0Da_4288585374.$index(0, 800);
          t1.toString;
          cardColor = t1;
        } else
          cardColor = C.Color_4294967295;
      if (dividerColor == null)
        dividerColor = isDark ? C.Color_536870911 : C.Color_520093696;
      if (colorScheme == null) {
        if (isDark) {
          t1 = C.MaterialAccentColor_Map_3JMhZ_4284809178.$index(0, 200);
          t1.toString;
        } else {
          t1 = C.MaterialColor_Map_ky0_4280391411.$index(0, 500);
          t1.toString;
        }
        if (isDark) {
          t2 = C.MaterialColor_Map_Ng0Da_4288585374.$index(0, 700);
          t2.toString;
        } else {
          t2 = C.MaterialColor_Map_ky0_4280391411.$index(0, 200);
          t2.toString;
        }
        colorScheme = A.ColorScheme_ColorScheme$fromSwatch(t1, t2, effectiveBrightness, cardColor, C.MaterialColor_Map_kygsm_4294198070.$index(0, 700), C.MaterialColor_Map_ky0_4280391411);
      }
      unselectedWidgetColor = isDark ? C.Color_3019898879 : C.Color_2315255808;
      if (isDark) {
        t1 = C.MaterialColor_Map_Ng0Da_4288585374.$index(0, 700);
        t1.toString;
        secondaryHeaderColor = t1;
      } else {
        t1 = C.MaterialColor_Map_ky0_4280391411.$index(0, 50);
        t1.toString;
        secondaryHeaderColor = t1;
      }
      if (dialogBackgroundColor == null)
        if (isDark) {
          t1 = C.MaterialColor_Map_Ng0Da_4288585374.$index(0, 800);
          t1.toString;
          dialogBackgroundColor = t1;
        } else
          dialogBackgroundColor = C.Color_4294967295;
      if (indicatorColor == null) {
        indicatorColor = colorScheme.secondary;
        if (B.boolConversionCheck(J.$eq$(indicatorColor, primaryColor)))
          indicatorColor = C.Color_4294967295;
      }
      hintColor = isDark ? C.Color_2583691263 : C.Color_4278190080.withOpacity$1(0.6);
      if (isDark) {
        t1 = C.MaterialColor_Map_ky0_4280391411.$index(0, 600);
        t1.toString;
      } else {
        t1 = C.MaterialColor_Map_Ng0Da_4288585374.$index(0, 300);
        t1.toString;
      }
      buttonTheme = A.ButtonThemeData$(t1, colorScheme, _null, focusColor, _null, hoverColor, materialTapTargetSize, _null);
      disabledColor = isDark ? C.Color_1660944383 : C.Color_1627389952;
      highlightColor = isDark ? C.Color_1087163596 : C.Color_1723645116;
      splashColor = isDark ? C.Color_1087163596 : C.Color_1724434632;
      typography = useMaterial3 ? A.Typography_Typography$material2021(colorScheme, platform) : A.Typography_Typography$material2014(platform);
      defaultTextTheme = isDark ? typography.white : typography.black;
      defaultPrimaryTextTheme = primaryIsDark ? typography.white : typography.black;
      textTheme = defaultTextTheme.merge$1(_null);
      primaryTextTheme = defaultPrimaryTextTheme.merge$1(_null);
      iconTheme = isDark ? A.IconThemeData$(_null, $.$get$kDefaultIconLightColor(), _null, _null, _null, _null, _null, _null, _null) : A.IconThemeData$(_null, $.$get$kDefaultIconDarkColor(), _null, _null, _null, _null, _null, _null, _null);
      primaryIconTheme = primaryIsDark ? C.IconThemeData_Jwp : C.IconThemeData_Vet0;
      return A.ThemeData$raw(_null, A.ThemeData__createAdaptationMap(adaptations), C.AppBarTheme_a6m, applyElevationOverlayColor === true, C.BadgeThemeData_oZA, C.MaterialBannerThemeData_kyy, C.BottomAppBarTheme_xw8, C.BottomNavigationBarThemeData_5hf, C.BottomSheetThemeData_cdS, C.ButtonBarThemeData_8hp, buttonTheme, canvasColor, cardColor, C.CardTheme_QOE, C.CheckboxThemeData_jjv, C.ChipThemeData_oCX, colorScheme, _null, C.DataTableThemeData_hhf, C.DatePickerThemeData_PHH, dialogBackgroundColor, C.DialogTheme_2KU, disabledColor, dividerColor, C.DividerThemeData_XIK, C.DrawerThemeData_ynF, C.DropdownMenuThemeData_null_null_null, C.ElevatedButtonThemeData_null, C.ExpansionTileThemeData_YM6, A.ThemeData__themeExtensionIterableToMap(extensions), C.FilledButtonThemeData_null, C.FloatingActionButtonThemeData_kWM, focusColor, highlightColor, hintColor, hoverColor, C.IconButtonThemeData_null, iconTheme, indicatorColor, C.C_InputDecorationTheme, C.ListTileThemeData_ukV, materialTapTargetSize, C.MenuBarThemeData_null, C.MenuButtonThemeData_null, C.MenuThemeData_null, C.NavigationBarThemeData_iDZ, C.NavigationDrawerThemeData_qdZ, C.NavigationRailThemeData_yLS, C.OutlinedButtonThemeData_null, C.C_PageTransitionsTheme, platform, C.PopupMenuThemeData_sav, primaryColor, primaryColorDark, primaryColorLight, primaryIconTheme, primaryTextTheme, C.ProgressIndicatorThemeData_3Ff, C.RadioThemeData_ZFl, scaffoldBackgroundColor, C.ScrollbarThemeData_SEb, C.SearchBarThemeData_K1g, C.SearchViewThemeData_gT2, secondaryHeaderColor, C.SegmentedButtonThemeData_null_null, C.Color_4278190080, C.SliderThemeData_94D, C.SnackBarThemeData_VWS, splashColor, splashFactory, C.SwitchThemeData_KTZ, C.TabBarTheme_61L, C.TextButtonThemeData_null, C.TextSelectionThemeData_null_null_null, textTheme, C.TimePickerThemeData_qBr, C.ToggleButtonsThemeData_46W, C.TooltipThemeData_qla, typography, unselectedWidgetColor, useMaterial3, visualDensity);
    },
    ThemeData$raw(actionIconTheme, adaptationMap, appBarTheme, applyElevationOverlayColor, badgeTheme, bannerTheme, bottomAppBarTheme, bottomNavigationBarTheme, bottomSheetTheme, buttonBarTheme, buttonTheme, canvasColor, cardColor, cardTheme, checkboxTheme, chipTheme, colorScheme, cupertinoOverrideTheme, dataTableTheme, datePickerTheme, dialogBackgroundColor, dialogTheme, disabledColor, dividerColor, dividerTheme, drawerTheme, dropdownMenuTheme, elevatedButtonTheme, expansionTileTheme, extensions, filledButtonTheme, floatingActionButtonTheme, focusColor, highlightColor, hintColor, hoverColor, iconButtonTheme, iconTheme, indicatorColor, inputDecorationTheme, listTileTheme, materialTapTargetSize, menuBarTheme, menuButtonTheme, menuTheme, navigationBarTheme, navigationDrawerTheme, navigationRailTheme, outlinedButtonTheme, pageTransitionsTheme, platform, popupMenuTheme, primaryColor, primaryColorDark, primaryColorLight, primaryIconTheme, primaryTextTheme, progressIndicatorTheme, radioTheme, scaffoldBackgroundColor, scrollbarTheme, searchBarTheme, searchViewTheme, secondaryHeaderColor, segmentedButtonTheme, shadowColor, sliderTheme, snackBarTheme, splashColor, splashFactory, switchTheme, tabBarTheme, textButtonTheme, textSelectionTheme, textTheme, timePickerTheme, toggleButtonsTheme, tooltipTheme, typography, unselectedWidgetColor, useMaterial3, visualDensity) {
      return new A.ThemeData(applyElevationOverlayColor, cupertinoOverrideTheme, extensions, adaptationMap, inputDecorationTheme, materialTapTargetSize, pageTransitionsTheme, platform, scrollbarTheme, splashFactory, useMaterial3, visualDensity, canvasColor, cardColor, colorScheme, dialogBackgroundColor, disabledColor, dividerColor, focusColor, highlightColor, hintColor, hoverColor, indicatorColor, primaryColor, primaryColorDark, primaryColorLight, scaffoldBackgroundColor, secondaryHeaderColor, shadowColor, splashColor, unselectedWidgetColor, iconTheme, primaryIconTheme, primaryTextTheme, textTheme, typography, actionIconTheme, appBarTheme, badgeTheme, bannerTheme, bottomAppBarTheme, bottomNavigationBarTheme, bottomSheetTheme, buttonTheme, cardTheme, checkboxTheme, chipTheme, dataTableTheme, datePickerTheme, dialogTheme, dividerTheme, drawerTheme, dropdownMenuTheme, elevatedButtonTheme, expansionTileTheme, filledButtonTheme, floatingActionButtonTheme, iconButtonTheme, listTileTheme, menuBarTheme, menuButtonTheme, menuTheme, navigationBarTheme, navigationDrawerTheme, navigationRailTheme, outlinedButtonTheme, popupMenuTheme, progressIndicatorTheme, radioTheme, searchBarTheme, searchViewTheme, segmentedButtonTheme, sliderTheme, snackBarTheme, switchTheme, tabBarTheme, textButtonTheme, textSelectionTheme, timePickerTheme, toggleButtonsTheme, tooltipTheme, buttonBarTheme);
    },
    ThemeData_ThemeData$light(useMaterial3) {
      return A.ThemeData_ThemeData(D.Brightness_1, null, useMaterial3);
    },
    ThemeData_ThemeData$fallback() {
      return A.ThemeData_ThemeData$light(null);
    },
    ThemeData__createAdaptationMap(adaptations) {
      var t2, t3,
        t1 = B.LinkedHashMap_LinkedHashMap$_empty(type$.Type, type$.Adaptation_Object);
      for (t2 = J.get$iterator$ax(adaptations); B.boolConversionCheck(t2.moveNext$0());) {
        t3 = t2.get$current();
        t1.$indexSet(0, t3.get$type(), t3);
      }
      return t1;
    },
    ThemeData_localize(baseTheme, localTextGeometry) {
      return $.$get$ThemeData__localizedThemeDataCache().putIfAbsent$2(A._IdentityThemeDataCacheKey$(baseTheme, localTextGeometry), new A.ThemeData_localize_closure(baseTheme, localTextGeometry));
    },
    ThemeData_estimateBrightnessForColor(color) {
      var t1 = color.computeLuminance$0() + 0.05;
      if (t1 * t1 > 0.15)
        return D.Brightness_1;
      return D.Brightness_0;
    },
    ThemeData__lerpThemeExtensions(a, b, t) {
      var newExtensions = J.map$2$1$ax(a.extensions, new A.ThemeData__lerpThemeExtensions_closure(b, t), type$.Object, type$.ThemeExtension_dynamic);
      newExtensions.addEntries$1(J.where$1$ax(b.extensions.get$entries(), new A.ThemeData__lerpThemeExtensions_closure0(a)));
      return newExtensions;
    },
    ThemeData__themeExtensionIterableToMap(extensionsIterable) {
      var t4, t5,
        t1 = type$.Object,
        t2 = type$.ThemeExtension_ThemeExtension_dynamic,
        t3 = B.LinkedHashMap_LinkedHashMap$_empty(t1, t2);
      for (t4 = J.get$iterator$ax(extensionsIterable); B.boolConversionCheck(t4.moveNext$0());) {
        t5 = t4.get$current();
        t3.$indexSet(0, t5.get$type(), t2._as(t5));
      }
      return E.ConstantMap_ConstantMap$from(t3, t1, type$.ThemeExtension_dynamic);
    },
    ThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61, t62, t63, t64, t65, t66, t67, t68, t69, t70, t71, t72, t73, t74, t75, t76, t77, t78, t79, t80, t81;
      if (a === b)
        return a;
      t1 = t < 0.5;
      t2 = t1 ? a.adaptationMap : b.adaptationMap;
      t3 = t1 ? a.applyElevationOverlayColor : b.applyElevationOverlayColor;
      t4 = t1 ? a.cupertinoOverrideTheme : b.cupertinoOverrideTheme;
      t5 = A.ThemeData__lerpThemeExtensions(a, b, t);
      t6 = t1 ? a.inputDecorationTheme : b.inputDecorationTheme;
      t7 = t1 ? a.materialTapTargetSize : b.materialTapTargetSize;
      t8 = t1 ? a.pageTransitionsTheme : b.pageTransitionsTheme;
      t9 = t1 ? a.platform : b.platform;
      t10 = A.ScrollbarThemeData_lerp(a.scrollbarTheme, b.scrollbarTheme, t);
      t11 = t1 ? a.splashFactory : b.splashFactory;
      t12 = t1 ? a.useMaterial3 : b.useMaterial3;
      t13 = A.VisualDensity_lerp(a.visualDensity, b.visualDensity, t);
      t14 = A.Color_lerp(a.canvasColor, b.canvasColor, t);
      t14.toString;
      t15 = A.Color_lerp(a.cardColor, b.cardColor, t);
      t15.toString;
      t16 = A.ColorScheme_lerp(a.colorScheme, b.colorScheme, t);
      t17 = A.Color_lerp(a.dialogBackgroundColor, b.dialogBackgroundColor, t);
      t17.toString;
      t18 = A.Color_lerp(a.disabledColor, b.disabledColor, t);
      t18.toString;
      t19 = A.Color_lerp(a.dividerColor, b.dividerColor, t);
      t19.toString;
      t20 = A.Color_lerp(a.focusColor, b.focusColor, t);
      t20.toString;
      t21 = A.Color_lerp(a.highlightColor, b.highlightColor, t);
      t21.toString;
      t22 = A.Color_lerp(a.hintColor, b.hintColor, t);
      t22.toString;
      t23 = A.Color_lerp(a.hoverColor, b.hoverColor, t);
      t23.toString;
      t24 = A.Color_lerp(a.indicatorColor, b.indicatorColor, t);
      t24.toString;
      t25 = A.Color_lerp(a.primaryColor, b.primaryColor, t);
      t25.toString;
      t26 = A.Color_lerp(a.primaryColorDark, b.primaryColorDark, t);
      t26.toString;
      t27 = A.Color_lerp(a.primaryColorLight, b.primaryColorLight, t);
      t27.toString;
      t28 = A.Color_lerp(a.scaffoldBackgroundColor, b.scaffoldBackgroundColor, t);
      t28.toString;
      t29 = A.Color_lerp(a.secondaryHeaderColor, b.secondaryHeaderColor, t);
      t29.toString;
      t30 = A.Color_lerp(a.shadowColor, b.shadowColor, t);
      t30.toString;
      t31 = A.Color_lerp(a.splashColor, b.splashColor, t);
      t31.toString;
      t32 = A.Color_lerp(a.unselectedWidgetColor, b.unselectedWidgetColor, t);
      t32.toString;
      t33 = A.IconThemeData_lerp(a.iconTheme, b.iconTheme, t);
      t34 = A.IconThemeData_lerp(a.primaryIconTheme, b.primaryIconTheme, t);
      t35 = A.TextTheme_lerp(a.primaryTextTheme, b.primaryTextTheme, t);
      t36 = A.TextTheme_lerp(a.textTheme, b.textTheme, t);
      t37 = A.Typography_lerp(a.typography, b.typography, t);
      t38 = A.ActionIconThemeData_lerp(a.actionIconTheme, b.actionIconTheme, t);
      t39 = A.AppBarTheme_lerp(a.appBarTheme, b.appBarTheme, t);
      t40 = A.BadgeThemeData_lerp(a.badgeTheme, b.badgeTheme, t);
      t41 = A.MaterialBannerThemeData_lerp(a.bannerTheme, b.bannerTheme, t);
      t42 = A.BottomAppBarTheme_lerp(a.bottomAppBarTheme, b.bottomAppBarTheme, t);
      t43 = A.BottomNavigationBarThemeData_lerp(a.bottomNavigationBarTheme, b.bottomNavigationBarTheme, t);
      t44 = A.BottomSheetThemeData_lerp(a.bottomSheetTheme, b.bottomSheetTheme, t);
      t44.toString;
      t1 = t1 ? a.buttonTheme : b.buttonTheme;
      t45 = A.CardTheme_lerp(a.cardTheme, b.cardTheme, t);
      t46 = A.CheckboxThemeData_lerp(a.checkboxTheme, b.checkboxTheme, t);
      t47 = A.ChipThemeData_lerp(a.chipTheme, b.chipTheme, t);
      t47.toString;
      t48 = A.DataTableThemeData_lerp(a.dataTableTheme, b.dataTableTheme, t);
      t49 = A.DatePickerThemeData_lerp(a.datePickerTheme, b.datePickerTheme, t);
      t50 = A.DialogTheme_lerp(a.dialogTheme, b.dialogTheme, t);
      t51 = A.DividerThemeData_lerp(a.dividerTheme, b.dividerTheme, t);
      t52 = A.DrawerThemeData_lerp(a.drawerTheme, b.drawerTheme, t);
      t52.toString;
      t53 = A.DropdownMenuThemeData_lerp(a.dropdownMenuTheme, b.dropdownMenuTheme, t);
      t54 = A.ElevatedButtonThemeData_lerp(a.elevatedButtonTheme, b.elevatedButtonTheme, t);
      t54.toString;
      t55 = A.ExpansionTileThemeData_lerp(a.expansionTileTheme, b.expansionTileTheme, t);
      t55.toString;
      t56 = A.FilledButtonThemeData_lerp(a.filledButtonTheme, b.filledButtonTheme, t);
      t56.toString;
      t57 = A.FloatingActionButtonThemeData_lerp(a.floatingActionButtonTheme, b.floatingActionButtonTheme, t);
      t57.toString;
      t58 = A.IconButtonThemeData_lerp(a.iconButtonTheme, b.iconButtonTheme, t);
      t58.toString;
      t59 = A.ListTileThemeData_lerp(a.listTileTheme, b.listTileTheme, t);
      t59.toString;
      t60 = A.MenuBarThemeData_lerp(a.menuBarTheme, b.menuBarTheme, t);
      t60.toString;
      t61 = A.MenuButtonThemeData_lerp(a.menuButtonTheme, b.menuButtonTheme, t);
      t61.toString;
      t62 = A.MenuThemeData_lerp(a.menuTheme, b.menuTheme, t);
      t62.toString;
      t63 = A.NavigationBarThemeData_lerp(a.navigationBarTheme, b.navigationBarTheme, t);
      t63.toString;
      t64 = A.NavigationDrawerThemeData_lerp(a.navigationDrawerTheme, b.navigationDrawerTheme, t);
      t64.toString;
      t65 = A.NavigationRailThemeData_lerp(a.navigationRailTheme, b.navigationRailTheme, t);
      t65.toString;
      t66 = A.OutlinedButtonThemeData_lerp(a.outlinedButtonTheme, b.outlinedButtonTheme, t);
      t66.toString;
      t67 = A.PopupMenuThemeData_lerp(a.popupMenuTheme, b.popupMenuTheme, t);
      t67.toString;
      t68 = A.ProgressIndicatorThemeData_lerp(a.progressIndicatorTheme, b.progressIndicatorTheme, t);
      t68.toString;
      t69 = A.RadioThemeData_lerp(a.radioTheme, b.radioTheme, t);
      t70 = A.SearchBarThemeData_lerp(a.searchBarTheme, b.searchBarTheme, t);
      t70.toString;
      t71 = A.SearchViewThemeData_lerp(a.searchViewTheme, b.searchViewTheme, t);
      t71.toString;
      t72 = A.SegmentedButtonThemeData_lerp(a.segmentedButtonTheme, b.segmentedButtonTheme, t);
      t73 = A.SliderThemeData_lerp(a.sliderTheme, b.sliderTheme, t);
      t74 = A.SnackBarThemeData_lerp(a.snackBarTheme, b.snackBarTheme, t);
      t75 = A.SwitchThemeData_lerp(a.switchTheme, b.switchTheme, t);
      t76 = A.TabBarTheme_lerp(a.tabBarTheme, b.tabBarTheme, t);
      t77 = A.TextButtonThemeData_lerp(a.textButtonTheme, b.textButtonTheme, t);
      t77.toString;
      t78 = A.TextSelectionThemeData_lerp(a.textSelectionTheme, b.textSelectionTheme, t);
      t78.toString;
      t79 = A.TimePickerThemeData_lerp(a.timePickerTheme, b.timePickerTheme, t);
      t80 = A.ToggleButtonsThemeData_lerp(a.toggleButtonsTheme, b.toggleButtonsTheme, t);
      t80.toString;
      t81 = A.TooltipThemeData_lerp(a.tooltipTheme, b.tooltipTheme, t);
      t81.toString;
      return A.ThemeData$raw(t38, t2, t39, t3, t40, t41, t42, t43, t44, A.ButtonBarThemeData_lerp(a.get$buttonBarTheme(), b.get$buttonBarTheme(), t), t1, t14, t15, t45, t46, t47, t16, t4, t48, t49, t17, t50, t18, t19, t51, t52, t53, t54, t55, t5, t56, t57, t20, t21, t22, t23, t58, t33, t24, t6, t59, t7, t60, t61, t62, t63, t64, t65, t66, t8, t9, t67, t25, t26, t27, t34, t35, t68, t69, t28, t10, t70, t71, t29, t72, t30, t73, t74, t31, t11, t75, t76, t77, t78, t36, t79, t80, t81, t37, t32, t12, t13);
    },
    MaterialBasedCupertinoThemeData$(materialTheme) {
      var t1 = materialTheme.cupertinoOverrideTheme;
      t1 = (t1 == null ? C.CupertinoThemeData_niW : t1).noDefault$0();
      return new A.MaterialBasedCupertinoThemeData(materialTheme, t1, C._CupertinoThemeDefaults_BmO, t1.get$brightness(), t1.get$primaryColor(), t1.get$primaryContrastingColor(), t1.get$textTheme(), t1.get$barBackgroundColor(), t1.get$scaffoldBackgroundColor(), t1.get$applyThemeToAll());
    },
    MaterialBasedCupertinoThemeData$_(_materialTheme, _cupertinoOverrideTheme) {
      return new A.MaterialBasedCupertinoThemeData(_materialTheme, _cupertinoOverrideTheme, C._CupertinoThemeDefaults_BmO, _cupertinoOverrideTheme.get$brightness(), _cupertinoOverrideTheme.get$primaryColor(), _cupertinoOverrideTheme.get$primaryContrastingColor(), _cupertinoOverrideTheme.get$textTheme(), _cupertinoOverrideTheme.get$barBackgroundColor(), _cupertinoOverrideTheme.get$scaffoldBackgroundColor(), _cupertinoOverrideTheme.get$applyThemeToAll());
    },
    CupertinoBasedMaterialThemeData$(themeData) {
      var t3,
        t1 = themeData.get$primaryColor(),
        t2 = themeData.get$brightness();
      if (t2 == null)
        t2 = D.Brightness_1;
      t3 = themeData.get$primaryColor();
      return new A.CupertinoBasedMaterialThemeData(A.ThemeData_ThemeData(null, A.ColorScheme_ColorScheme$fromSeed(t2, themeData.get$primaryContrastingColor(), t3, t1), null));
    },
    _IdentityThemeDataCacheKey$(baseTheme, localTextGeometry) {
      return new A._IdentityThemeDataCacheKey(baseTheme, localTextGeometry);
    },
    _FifoCache$(_maximumSize, $K, $V) {
      return new A._FifoCache(B.LinkedHashMap_LinkedHashMap$_empty($K, $V), _maximumSize, $K._eval$1("@<0>")._bind$1($V)._eval$1("_FifoCache<1,2>"));
    },
    VisualDensity$(horizontal, vertical) {
      return new A.VisualDensity(horizontal, vertical);
    },
    VisualDensity_defaultDensityForPlatform(platform) {
      var t1;
      $label0$0: {
        if (D.TargetPlatform_0 === platform || D.TargetPlatform_2 === platform || D.TargetPlatform_1 === platform) {
          t1 = C.VisualDensity_0_0;
          break $label0$0;
        }
        if (D.TargetPlatform_3 === platform || D.TargetPlatform_4 === platform || D.TargetPlatform_5 === platform) {
          t1 = C.VisualDensity_m2_m2;
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    },
    VisualDensity_lerp(a, b, t) {
      var t1, t2;
      if (a === b)
        return a;
      t1 = A.lerpDouble(a.horizontal, b.horizontal, t);
      t1.toString;
      t2 = A.lerpDouble(a.vertical, b.vertical, t);
      t2.toString;
      return A.VisualDensity$(t1, t2);
    },
    MaterialTapTargetSize: function MaterialTapTargetSize(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    ThemeData: function ThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61, t62, t63, t64, t65, t66, t67, t68, t69, t70, t71, t72, t73, t74, t75, t76, t77, t78, t79, t80, t81) {
      var _ = this;
      _.applyElevationOverlayColor = t0;
      _.cupertinoOverrideTheme = t1;
      _.extensions = t2;
      _.adaptationMap = t3;
      _.inputDecorationTheme = t4;
      _.materialTapTargetSize = t5;
      _.pageTransitionsTheme = t6;
      _.platform = t7;
      _.scrollbarTheme = t8;
      _.splashFactory = t9;
      _.useMaterial3 = t10;
      _.visualDensity = t11;
      _.canvasColor = t12;
      _.cardColor = t13;
      _.colorScheme = t14;
      _.dialogBackgroundColor = t15;
      _.disabledColor = t16;
      _.dividerColor = t17;
      _.focusColor = t18;
      _.highlightColor = t19;
      _.hintColor = t20;
      _.hoverColor = t21;
      _.indicatorColor = t22;
      _.primaryColor = t23;
      _.primaryColorDark = t24;
      _.primaryColorLight = t25;
      _.scaffoldBackgroundColor = t26;
      _.secondaryHeaderColor = t27;
      _.shadowColor = t28;
      _.splashColor = t29;
      _.unselectedWidgetColor = t30;
      _.iconTheme = t31;
      _.primaryIconTheme = t32;
      _.primaryTextTheme = t33;
      _.textTheme = t34;
      _.typography = t35;
      _.actionIconTheme = t36;
      _.appBarTheme = t37;
      _.badgeTheme = t38;
      _.bannerTheme = t39;
      _.bottomAppBarTheme = t40;
      _.bottomNavigationBarTheme = t41;
      _.bottomSheetTheme = t42;
      _.buttonTheme = t43;
      _.cardTheme = t44;
      _.checkboxTheme = t45;
      _.chipTheme = t46;
      _.dataTableTheme = t47;
      _.datePickerTheme = t48;
      _.dialogTheme = t49;
      _.dividerTheme = t50;
      _.drawerTheme = t51;
      _.dropdownMenuTheme = t52;
      _.elevatedButtonTheme = t53;
      _.expansionTileTheme = t54;
      _.filledButtonTheme = t55;
      _.floatingActionButtonTheme = t56;
      _.iconButtonTheme = t57;
      _.listTileTheme = t58;
      _.menuBarTheme = t59;
      _.menuButtonTheme = t60;
      _.menuTheme = t61;
      _.navigationBarTheme = t62;
      _.navigationDrawerTheme = t63;
      _.navigationRailTheme = t64;
      _.outlinedButtonTheme = t65;
      _.popupMenuTheme = t66;
      _.progressIndicatorTheme = t67;
      _.radioTheme = t68;
      _.searchBarTheme = t69;
      _.searchViewTheme = t70;
      _.segmentedButtonTheme = t71;
      _.sliderTheme = t72;
      _.snackBarTheme = t73;
      _.switchTheme = t74;
      _.tabBarTheme = t75;
      _.textButtonTheme = t76;
      _.textSelectionTheme = t77;
      _.timePickerTheme = t78;
      _.toggleButtonsTheme = t79;
      _.tooltipTheme = t80;
      _._buttonBarTheme = t81;
    },
    ThemeData_localize_closure: function ThemeData_localize_closure(t0, t1) {
      this.baseTheme = t0;
      this.localTextGeometry = t1;
    },
    ThemeData__lerpThemeExtensions_closure: function ThemeData__lerpThemeExtensions_closure(t0, t1) {
      this.b = t0;
      this.t = t1;
    },
    ThemeData__lerpThemeExtensions_closure0: function ThemeData__lerpThemeExtensions_closure0(t0) {
      this.a = t0;
    },
    MaterialBasedCupertinoThemeData: function MaterialBasedCupertinoThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._materialTheme = t0;
      _._cupertinoOverrideTheme = t1;
      _._defaults = t2;
      _.brightness = t3;
      _.primaryColor = t4;
      _.primaryContrastingColor = t5;
      _.textTheme = t6;
      _.barBackgroundColor = t7;
      _.scaffoldBackgroundColor = t8;
      _.applyThemeToAll = t9;
    },
    CupertinoBasedMaterialThemeData: function CupertinoBasedMaterialThemeData(t0) {
      this.materialTheme = t0;
    },
    _IdentityThemeDataCacheKey: function _IdentityThemeDataCacheKey(t0, t1) {
      this.baseTheme = t0;
      this.localTextGeometry = t1;
    },
    _FifoCache: function _FifoCache(t0, t1, t2) {
      this._theme_data$_cache = t0;
      this._maximumSize = t1;
      this.$ti = t2;
    },
    VisualDensity: function VisualDensity(t0, t1) {
      this.horizontal = t0;
      this.vertical = t1;
    },
    _ThemeData_Object_Diagnosticable: function _ThemeData_Object_Diagnosticable() {
    },
    _VisualDensity_Object_Diagnosticable: function _VisualDensity_Object_Diagnosticable() {
    },
    TimePickerThemeData$(backgroundColor, cancelButtonStyle, confirmButtonStyle, dayPeriodBorderSide, dayPeriodColor, dayPeriodShape, dayPeriodTextColor, dayPeriodTextStyle, dialBackgroundColor, dialHandColor, dialTextColor, dialTextStyle, elevation, entryModeIconColor, helpTextStyle, hourMinuteColor, hourMinuteShape, hourMinuteTextColor, hourMinuteTextStyle, inputDecorationTheme, padding, shape, timeSelectorSeparatorColor, timeSelectorSeparatorTextStyle) {
      return new A.TimePickerThemeData(backgroundColor, cancelButtonStyle, confirmButtonStyle, dayPeriodBorderSide, dayPeriodColor, dayPeriodShape, dayPeriodTextColor, dayPeriodTextStyle, dialBackgroundColor, dialHandColor, dialTextColor, dialTextStyle, elevation, entryModeIconColor, helpTextStyle, hourMinuteColor, hourMinuteShape, hourMinuteTextColor, hourMinuteTextStyle, inputDecorationTheme, padding, shape, timeSelectorSeparatorColor, timeSelectorSeparatorTextStyle);
    },
    TimePickerThemeData_lerp(a, b, t) {
      var t1, t2, lerpedBorderSide, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, _null = null;
      if (a == b && a != null)
        return a;
      t1 = a == null;
      if ((t1 ? _null : a.dayPeriodBorderSide) == null)
        t2 = (b == null ? _null : b.dayPeriodBorderSide) == null;
      else
        t2 = false;
      if (t2)
        lerpedBorderSide = _null;
      else if ((t1 ? _null : a.dayPeriodBorderSide) == null)
        lerpedBorderSide = b == null ? _null : b.dayPeriodBorderSide;
      else if ((b == null ? _null : b.dayPeriodBorderSide) == null)
        lerpedBorderSide = t1 ? _null : a.dayPeriodBorderSide;
      else {
        t2 = a.dayPeriodBorderSide;
        t2.toString;
        t3 = b.dayPeriodBorderSide;
        t3.toString;
        lerpedBorderSide = A.BorderSide_lerp(t2, t3, t);
      }
      t2 = t1 ? _null : a.backgroundColor;
      t3 = b == null;
      t2 = A.Color_lerp(t2, t3 ? _null : b.backgroundColor, t);
      t4 = t1 ? _null : a.cancelButtonStyle;
      t4 = A.ButtonStyle_lerp(t4, t3 ? _null : b.cancelButtonStyle, t);
      t5 = t1 ? _null : a.confirmButtonStyle;
      t5 = A.ButtonStyle_lerp(t5, t3 ? _null : b.confirmButtonStyle, t);
      t6 = t1 ? _null : a.get$dayPeriodColor();
      t6 = A.Color_lerp(t6, t3 ? _null : b.get$dayPeriodColor(), t);
      t7 = t1 ? _null : a.dayPeriodShape;
      t7 = type$.nullable_OutlinedBorder._as(A.ShapeBorder_lerp(t7, t3 ? _null : b.dayPeriodShape, t));
      t8 = t1 ? _null : a.dayPeriodTextColor;
      t8 = A.Color_lerp(t8, t3 ? _null : b.dayPeriodTextColor, t);
      t9 = t1 ? _null : a.dayPeriodTextStyle;
      t9 = A.TextStyle_lerp(t9, t3 ? _null : b.dayPeriodTextStyle, t);
      t10 = t1 ? _null : a.dialBackgroundColor;
      t10 = A.Color_lerp(t10, t3 ? _null : b.dialBackgroundColor, t);
      t11 = t1 ? _null : a.dialHandColor;
      t11 = A.Color_lerp(t11, t3 ? _null : b.dialHandColor, t);
      t12 = t1 ? _null : a.dialTextColor;
      t12 = A.Color_lerp(t12, t3 ? _null : b.dialTextColor, t);
      t13 = t1 ? _null : a.dialTextStyle;
      t13 = A.TextStyle_lerp(t13, t3 ? _null : b.dialTextStyle, t);
      t14 = t1 ? _null : a.elevation;
      t14 = A.lerpDouble(t14, t3 ? _null : b.elevation, t);
      t15 = t1 ? _null : a.entryModeIconColor;
      t15 = A.Color_lerp(t15, t3 ? _null : b.entryModeIconColor, t);
      t16 = t1 ? _null : a.helpTextStyle;
      t16 = A.TextStyle_lerp(t16, t3 ? _null : b.helpTextStyle, t);
      t17 = t1 ? _null : a.hourMinuteColor;
      t17 = A.Color_lerp(t17, t3 ? _null : b.hourMinuteColor, t);
      t18 = t1 ? _null : a.hourMinuteShape;
      t18 = A.ShapeBorder_lerp(t18, t3 ? _null : b.hourMinuteShape, t);
      t19 = t1 ? _null : a.hourMinuteTextColor;
      t19 = A.Color_lerp(t19, t3 ? _null : b.hourMinuteTextColor, t);
      t20 = t1 ? _null : a.hourMinuteTextStyle;
      t20 = A.TextStyle_lerp(t20, t3 ? _null : b.hourMinuteTextStyle, t);
      if (t < 0.5)
        t21 = t1 ? _null : a.inputDecorationTheme;
      else
        t21 = t3 ? _null : b.inputDecorationTheme;
      t22 = t1 ? _null : a.padding;
      t22 = A.EdgeInsetsGeometry_lerp(t22, t3 ? _null : b.padding, t);
      t23 = t1 ? _null : a.shape;
      t23 = A.ShapeBorder_lerp(t23, t3 ? _null : b.shape, t);
      t24 = t1 ? _null : a.timeSelectorSeparatorColor;
      t25 = t3 ? _null : b.timeSelectorSeparatorColor;
      t25 = A.WidgetStateProperty_lerp(t24, t25, t, A.ui_Color_lerp$closure(), type$.nullable_Color);
      t1 = t1 ? _null : a.timeSelectorSeparatorTextStyle;
      t3 = t3 ? _null : b.timeSelectorSeparatorTextStyle;
      return A.TimePickerThemeData$(t2, t4, t5, lerpedBorderSide, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t25, A.WidgetStateProperty_lerp(t1, t3, t, A.text_style_TextStyle_lerp$closure(), type$.nullable_TextStyle));
    },
    TimePickerThemeData: function TimePickerThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23) {
      var _ = this;
      _.backgroundColor = t0;
      _.cancelButtonStyle = t1;
      _.confirmButtonStyle = t2;
      _.dayPeriodBorderSide = t3;
      _._dayPeriodColor = t4;
      _.dayPeriodShape = t5;
      _.dayPeriodTextColor = t6;
      _.dayPeriodTextStyle = t7;
      _.dialBackgroundColor = t8;
      _.dialHandColor = t9;
      _.dialTextColor = t10;
      _.dialTextStyle = t11;
      _.elevation = t12;
      _.entryModeIconColor = t13;
      _.helpTextStyle = t14;
      _.hourMinuteColor = t15;
      _.hourMinuteShape = t16;
      _.hourMinuteTextColor = t17;
      _.hourMinuteTextStyle = t18;
      _.inputDecorationTheme = t19;
      _.padding = t20;
      _.shape = t21;
      _.timeSelectorSeparatorColor = t22;
      _.timeSelectorSeparatorTextStyle = t23;
    },
    TimePickerThemeData_dayPeriodColor_closure: function TimePickerThemeData_dayPeriodColor_closure(t0) {
      this.$this = t0;
    },
    _TimePickerThemeData_Object_Diagnosticable: function _TimePickerThemeData_Object_Diagnosticable() {
    },
    ToggleButtonsThemeData$(borderColor, borderRadius, borderWidth, color, constraints, disabledBorderColor, disabledColor, fillColor, focusColor, highlightColor, hoverColor, selectedBorderColor, selectedColor, splashColor, textStyle) {
      return new A.ToggleButtonsThemeData(textStyle, constraints, color, selectedColor, disabledColor, fillColor, focusColor, highlightColor, splashColor, hoverColor, borderColor, selectedBorderColor, disabledBorderColor, borderWidth, borderRadius);
    },
    ToggleButtonsThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, _null = null;
      if (a == b)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.textStyle;
      t3 = b == null;
      t2 = A.TextStyle_lerp(t2, t3 ? _null : b.textStyle, t);
      t4 = t1 ? _null : a.constraints;
      t4 = A.BoxConstraints_lerp(t4, t3 ? _null : b.constraints, t);
      t5 = t1 ? _null : a.color;
      t5 = A.Color_lerp(t5, t3 ? _null : b.color, t);
      t6 = t1 ? _null : a.selectedColor;
      t6 = A.Color_lerp(t6, t3 ? _null : b.selectedColor, t);
      t7 = t1 ? _null : a.disabledColor;
      t7 = A.Color_lerp(t7, t3 ? _null : b.disabledColor, t);
      t8 = t1 ? _null : a.fillColor;
      t8 = A.Color_lerp(t8, t3 ? _null : b.fillColor, t);
      t9 = t1 ? _null : a.focusColor;
      t9 = A.Color_lerp(t9, t3 ? _null : b.focusColor, t);
      t10 = t1 ? _null : a.highlightColor;
      t10 = A.Color_lerp(t10, t3 ? _null : b.highlightColor, t);
      t11 = t1 ? _null : a.hoverColor;
      t11 = A.Color_lerp(t11, t3 ? _null : b.hoverColor, t);
      t12 = t1 ? _null : a.splashColor;
      t12 = A.Color_lerp(t12, t3 ? _null : b.splashColor, t);
      t13 = t1 ? _null : a.borderColor;
      t13 = A.Color_lerp(t13, t3 ? _null : b.borderColor, t);
      t14 = t1 ? _null : a.selectedBorderColor;
      t14 = A.Color_lerp(t14, t3 ? _null : b.selectedBorderColor, t);
      t15 = t1 ? _null : a.disabledBorderColor;
      t15 = A.Color_lerp(t15, t3 ? _null : b.disabledBorderColor, t);
      t16 = t1 ? _null : a.borderRadius;
      t16 = A.BorderRadius_lerp(t16, t3 ? _null : b.borderRadius, t);
      t1 = t1 ? _null : a.borderWidth;
      return A.ToggleButtonsThemeData$(t13, t16, A.lerpDouble(t1, t3 ? _null : b.borderWidth, t), t5, t4, t15, t7, t8, t9, t10, t11, t14, t6, t12, t2);
    },
    ToggleButtonsThemeData: function ToggleButtonsThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.textStyle = t0;
      _.constraints = t1;
      _.color = t2;
      _.selectedColor = t3;
      _.disabledColor = t4;
      _.fillColor = t5;
      _.focusColor = t6;
      _.highlightColor = t7;
      _.splashColor = t8;
      _.hoverColor = t9;
      _.borderColor = t10;
      _.selectedBorderColor = t11;
      _.disabledBorderColor = t12;
      _.borderWidth = t13;
      _.borderRadius = t14;
    },
    _ToggleButtonsThemeData_Object_Diagnosticable: function _ToggleButtonsThemeData_Object_Diagnosticable() {
    },
    TooltipThemeData$(decoration, excludeFromSemantics, height, margin, padding, preferBelow, textAlign, textStyle, verticalOffset) {
      return new A.TooltipThemeData(height, padding, margin, verticalOffset, preferBelow, excludeFromSemantics, decoration, textStyle, textAlign);
    },
    TooltipThemeData_lerp(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, _null = null;
      if (a == b)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.height;
      t3 = b == null;
      t2 = A.lerpDouble(t2, t3 ? _null : b.height, t);
      t4 = t1 ? _null : a.padding;
      t4 = A.EdgeInsetsGeometry_lerp(t4, t3 ? _null : b.padding, t);
      t5 = t1 ? _null : a.margin;
      t5 = A.EdgeInsetsGeometry_lerp(t5, t3 ? _null : b.margin, t);
      t6 = t1 ? _null : a.verticalOffset;
      t6 = A.lerpDouble(t6, t3 ? _null : b.verticalOffset, t);
      t7 = t < 0.5;
      if (t7)
        t8 = t1 ? _null : a.preferBelow;
      else
        t8 = t3 ? _null : b.preferBelow;
      if (t7)
        t9 = t1 ? _null : a.excludeFromSemantics;
      else
        t9 = t3 ? _null : b.excludeFromSemantics;
      t10 = t1 ? _null : a.decoration;
      t10 = A.Decoration_lerp(t10, t3 ? _null : b.decoration, t);
      t11 = t1 ? _null : a.textStyle;
      t11 = A.TextStyle_lerp(t11, t3 ? _null : b.textStyle, t);
      if (t7)
        t1 = t1 ? _null : a.textAlign;
      else
        t1 = t3 ? _null : b.textAlign;
      return A.TooltipThemeData$(t10, t9, t2, t5, t4, t8, t1, t11, t6);
    },
    TooltipThemeData: function TooltipThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.height = t0;
      _.padding = t1;
      _.margin = t2;
      _.verticalOffset = t3;
      _.preferBelow = t4;
      _.excludeFromSemantics = t5;
      _.decoration = t6;
      _.textStyle = t7;
      _.textAlign = t8;
    },
    _TooltipThemeData_Object_Diagnosticable: function _TooltipThemeData_Object_Diagnosticable() {
    },
    Typography_Typography$material2014(platform) {
      return A.Typography_Typography$_withPlatform(platform, null, null, C.TextTheme_oCX, C.TextTheme_9SL, C.TextTheme_LtR);
    },
    Typography_Typography$material2018(platform) {
      return A.Typography_Typography$_withPlatform(platform, null, null, C.TextTheme_fPs, C.TextTheme_Oyy, C.TextTheme_qtW);
    },
    Typography_Typography$material2021(colorScheme, platform) {
      var base = A.Typography_Typography$_withPlatform(platform, null, null, C.TextTheme_NyU, C.TextTheme_Jhy, C.TextTheme_Wbt),
        t1 = colorScheme.brightness,
        t2 = J.getInterceptor$(t1),
        dark = B.boolConversionCheck(t2.$eq(t1, D.Brightness_1)) ? colorScheme.onSurface : colorScheme.surface,
        light = B.boolConversionCheck(t2.$eq(t1, D.Brightness_1)) ? colorScheme.surface : colorScheme.onSurface;
      return base.copyWith$2$black$white(base.black.apply$3$bodyColor$decorationColor$displayColor(dark, dark, dark), base.white.apply$3$bodyColor$decorationColor$displayColor(light, light, light));
    },
    Typography_Typography$_withPlatform(platform, black, white, englishLike, dense, tall) {
      switch (platform) {
        case D.TargetPlatform_2:
          if (black == null)
            black = C.TextTheme_V6j;
          if (white == null)
            white = C.TextTheme_mT8;
          break;
        case D.TargetPlatform_0:
        case D.TargetPlatform_1:
          if (black == null)
            black = C.TextTheme_gSu;
          if (white == null)
            white = C.TextTheme_MQW;
          break;
        case D.TargetPlatform_5:
          if (black == null)
            black = C.TextTheme_FxU;
          if (white == null)
            white = C.TextTheme_cr1;
          break;
        case D.TargetPlatform_4:
          if (black == null)
            black = C.TextTheme_48f;
          if (white == null)
            white = C.TextTheme_KL3;
          break;
        case D.TargetPlatform_3:
          if (black == null)
            black = C.TextTheme_s6o;
          if (white == null)
            white = C.TextTheme_bRS;
          break;
        case null:
        case void 0:
          break;
      }
      black.toString;
      white.toString;
      return A.Typography$_(black, white, englishLike, dense, tall);
    },
    Typography$_(black, white, englishLike, dense, tall) {
      return new A.Typography(black, white, englishLike, dense, tall);
    },
    Typography_lerp(a, b, t) {
      if (a === b)
        return a;
      return A.Typography$_(A.TextTheme_lerp(a.black, b.black, t), A.TextTheme_lerp(a.white, b.white, t), A.TextTheme_lerp(a.englishLike, b.englishLike, t), A.TextTheme_lerp(a.dense, b.dense, t), A.TextTheme_lerp(a.tall, b.tall, t));
    },
    ScriptCategory: function ScriptCategory(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    Typography: function Typography(t0, t1, t2, t3, t4) {
      var _ = this;
      _.black = t0;
      _.white = t1;
      _.englishLike = t2;
      _.dense = t3;
      _.tall = t4;
    },
    _Typography_Object_Diagnosticable: function _Typography_Object_Diagnosticable() {
    },
    AlignmentGeometry_lerp(a, b, t) {
      var t1, t2, t3;
      if (a == b)
        return a;
      if (a == null)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      if (a instanceof A.Alignment && b instanceof A.Alignment)
        return A.Alignment_lerp(a, b, t);
      if (a instanceof A.AlignmentDirectional && b instanceof A.AlignmentDirectional)
        return A.AlignmentDirectional_lerp(a, b, t);
      t1 = A.lerpDouble(a.get$_x(), b.get$_x(), t);
      t1.toString;
      t2 = A.lerpDouble(a.get$_alignment$_start(), b.get$_alignment$_start(), t);
      t2.toString;
      t3 = A.lerpDouble(a.get$_y(), b.get$_y(), t);
      t3.toString;
      return A._MixedAlignment$(t1, t2, t3);
    },
    Alignment$(x, y) {
      return new A.Alignment(x, y);
    },
    Alignment_lerp(a, b, t) {
      var t1, t2;
      if (a == b)
        return a;
      if (a == null) {
        t1 = A.lerpDouble(0, b.x, t);
        t1.toString;
        t2 = A.lerpDouble(0, b.y, t);
        t2.toString;
        return A.Alignment$(t1, t2);
      }
      if (b == null) {
        t1 = A.lerpDouble(a.x, 0, t);
        t1.toString;
        t2 = A.lerpDouble(a.y, 0, t);
        t2.toString;
        return A.Alignment$(t1, t2);
      }
      t1 = A.lerpDouble(a.x, b.x, t);
      t1.toString;
      t2 = A.lerpDouble(a.y, b.y, t);
      t2.toString;
      return A.Alignment$(t1, t2);
    },
    Alignment__stringify(x, y) {
      var t2, t3,
        t1 = x === -1;
      if (t1 && y === -1)
        return "Alignment.topLeft";
      t2 = x === 0;
      if (t2 && y === -1)
        return "Alignment.topCenter";
      t3 = x === 1;
      if (t3 && y === -1)
        return "Alignment.topRight";
      if (t1 && y === 0)
        return "Alignment.centerLeft";
      if (t2 && y === 0)
        return "Alignment.center";
      if (t3 && y === 0)
        return "Alignment.centerRight";
      if (t1 && y === 1)
        return "Alignment.bottomLeft";
      if (t2 && y === 1)
        return "Alignment.bottomCenter";
      if (t3 && y === 1)
        return "Alignment.bottomRight";
      return "Alignment(" + B.S(F.JSNumber_methods.toStringAsFixed$1(x, 1)) + ", " + B.S(F.JSNumber_methods.toStringAsFixed$1(y, 1)) + ")";
    },
    AlignmentDirectional$(start, y) {
      return new A.AlignmentDirectional(start, y);
    },
    AlignmentDirectional_lerp(a, b, t) {
      var t1, t2;
      if (a == b)
        return a;
      if (a == null) {
        t1 = A.lerpDouble(0, b.start, t);
        t1.toString;
        t2 = A.lerpDouble(0, b.y, t);
        t2.toString;
        return A.AlignmentDirectional$(t1, t2);
      }
      if (b == null) {
        t1 = A.lerpDouble(a.start, 0, t);
        t1.toString;
        t2 = A.lerpDouble(a.y, 0, t);
        t2.toString;
        return A.AlignmentDirectional$(t1, t2);
      }
      t1 = A.lerpDouble(a.start, b.start, t);
      t1.toString;
      t2 = A.lerpDouble(a.y, b.y, t);
      t2.toString;
      return A.AlignmentDirectional$(t1, t2);
    },
    AlignmentDirectional__stringify(start, y) {
      var t2, t3,
        t1 = start === -1;
      if (t1 && y === -1)
        return "AlignmentDirectional.topStart";
      t2 = start === 0;
      if (t2 && y === -1)
        return "AlignmentDirectional.topCenter";
      t3 = start === 1;
      if (t3 && y === -1)
        return "AlignmentDirectional.topEnd";
      if (t1 && y === 0)
        return "AlignmentDirectional.centerStart";
      if (t2 && y === 0)
        return "AlignmentDirectional.center";
      if (t3 && y === 0)
        return "AlignmentDirectional.centerEnd";
      if (t1 && y === 1)
        return "AlignmentDirectional.bottomStart";
      if (t2 && y === 1)
        return "AlignmentDirectional.bottomCenter";
      if (t3 && y === 1)
        return "AlignmentDirectional.bottomEnd";
      return "AlignmentDirectional(" + B.S(F.JSNumber_methods.toStringAsFixed$1(start, 1)) + ", " + B.S(F.JSNumber_methods.toStringAsFixed$1(y, 1)) + ")";
    },
    _MixedAlignment$(_x, _start, _y) {
      return new A._MixedAlignment(_x, _start, _y);
    },
    AlignmentGeometry: function AlignmentGeometry() {
    },
    Alignment: function Alignment(t0, t1) {
      this.x = t0;
      this.y = t1;
    },
    AlignmentDirectional: function AlignmentDirectional(t0, t1) {
      this.start = t0;
      this.y = t1;
    },
    _MixedAlignment: function _MixedAlignment(t0, t1, t2) {
      this._x = t0;
      this._alignment$_start = t1;
      this._y = t2;
    },
    RenderComparison: function RenderComparison(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    VerticalDirection: function VerticalDirection(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    BorderRadiusGeometry_lerp(a, b, t) {
      if (a == b)
        return a;
      if (a == null)
        a = C.BorderRadius_ww8;
      return a.add$1(0, J.$mul$ns((b == null ? C.BorderRadius_ww8 : b).subtract$1(a), t));
    },
    BorderRadius$all(radius) {
      return new A.BorderRadius(radius, radius, radius, radius);
    },
    BorderRadius$circular(radius) {
      var t1 = A.Radius$circular(radius);
      return new A.BorderRadius(t1, t1, t1, t1);
    },
    BorderRadius$only(bottomLeft, bottomRight, topLeft, topRight) {
      return new A.BorderRadius(topLeft, topRight, bottomLeft, bottomRight);
    },
    BorderRadius_lerp(a, b, t) {
      var t1, t2, t3, t4;
      if (a == b)
        return a;
      if (a == null)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      t1 = A.Radius_lerp(a.topLeft, b.topLeft, t);
      t1.toString;
      t2 = A.Radius_lerp(a.topRight, b.topRight, t);
      t2.toString;
      t3 = A.Radius_lerp(a.bottomLeft, b.bottomLeft, t);
      t3.toString;
      t4 = A.Radius_lerp(a.bottomRight, b.bottomRight, t);
      t4.toString;
      return A.BorderRadius$only(t3, t4, t1, t2);
    },
    _MixedBorderRadius$(_topLeft, _topRight, _bottomLeft, _bottomRight, _topStart, _topEnd, _bottomStart, _bottomEnd) {
      return new A._MixedBorderRadius(_topLeft, _topRight, _bottomLeft, _bottomRight, _topStart, _topEnd, _bottomStart, _bottomEnd);
    },
    BorderRadiusGeometry: function BorderRadiusGeometry() {
    },
    BorderRadius: function BorderRadius(t0, t1, t2, t3) {
      var _ = this;
      _.topLeft = t0;
      _.topRight = t1;
      _.bottomLeft = t2;
      _.bottomRight = t3;
    },
    _MixedBorderRadius: function _MixedBorderRadius(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._topLeft = t0;
      _._topRight = t1;
      _._bottomLeft = t2;
      _._bottomRight = t3;
      _._topStart = t4;
      _._topEnd = t5;
      _._bottomStart = t6;
      _._bottomEnd = t7;
    },
    BorderSide$(color, strokeAlign, style, width) {
      return new A.BorderSide(color, width, style, strokeAlign);
    },
    BorderSide_lerp(a, b, t) {
      var t1, t2, t3, t4, t5;
      if (a === b)
        return a;
      if (t === 0)
        return a;
      if (t === 1)
        return b;
      t1 = A.lerpDouble(a.width, b.width, t);
      t1.toString;
      if (t1 < 0)
        return C.BorderSide_Q1M;
      t2 = a.style;
      t3 = b.style;
      if (B.boolConversionCheck(J.$eq$(t2, t3)) && B.boolConversionCheck(J.$eq$(a.strokeAlign, b.strokeAlign))) {
        t3 = A.Color_lerp(a.color, b.color, t);
        t3.toString;
        return A.BorderSide$(t3, a.strokeAlign, t2, t1);
      }
      switch (t2) {
        case C.BorderStyle_1:
          t2 = a.color;
          break;
        case C.BorderStyle_0:
          t2 = a.color.withAlpha$1(0);
          break;
        default:
          t2 = null;
      }
      switch (t3) {
        case C.BorderStyle_1:
          t3 = b.color;
          break;
        case C.BorderStyle_0:
          t3 = b.color.withAlpha$1(0);
          break;
        default:
          t3 = null;
      }
      t4 = a.strokeAlign;
      t5 = b.strokeAlign;
      if (!B.boolConversionCheck(J.$eq$(t4, t5))) {
        t2 = A.Color_lerp(t2, t3, t);
        t2.toString;
        t5 = A.lerpDouble(t4, t5, t);
        t5.toString;
        return A.BorderSide$(t2, t5, C.BorderStyle_1, t1);
      }
      t2 = A.Color_lerp(t2, t3, t);
      t2.toString;
      return A.BorderSide$(t2, t4, C.BorderStyle_1, t1);
    },
    ShapeBorder_lerp(a, b, t) {
      var result, t1;
      if (a == b)
        return a;
      result = b == null ? null : b.lerpFrom$2(a, t);
      if (result == null)
        result = a == null ? null : a.lerpTo$2(b, t);
      if (result == null)
        t1 = t < 0.5 ? a : b;
      else
        t1 = result;
      return t1;
    },
    OutlinedBorder_lerp(a, b, t) {
      var result,
        t1 = type$.nullable_OutlinedBorder;
      t1._as(a);
      t1._as(b);
      B._asDouble(t);
      if (a == b)
        return a;
      result = b == null ? null : b.lerpFrom$2(a, t);
      if (result == null)
        result = a == null ? null : a.lerpTo$2(b, t);
      t1._as(result);
      if (result == null)
        t1 = t < 0.5 ? a : b;
      else
        t1 = result;
      return t1;
    },
    _CompoundBorder$(borders) {
      return new A._CompoundBorder(borders);
    },
    _CompoundBorder_lerp(a, b, t) {
      var t3, index, t4, localA, localB, localResult,
        aList = a instanceof A._CompoundBorder ? a.borders : B._setArrayType([a], type$.JSArray_nullable_ShapeBorder),
        bList = b instanceof A._CompoundBorder ? b.borders : B._setArrayType([b], type$.JSArray_nullable_ShapeBorder),
        results = B._setArrayType([], type$.JSArray_ShapeBorder),
        t1 = J.getInterceptor$asx(aList),
        t2 = J.getInterceptor$asx(bList),
        $length = E.max(t1.get$length(aList), t2.get$length(bList), type$.int);
      for (t3 = 1 - t, index = 0; index < $length; ++index) {
        t4 = t1.get$length(aList);
        if (typeof t4 !== "number")
          return B.iae(t4);
        localA = index < t4 ? t1.$index(aList, index) : null;
        t4 = t2.get$length(bList);
        if (typeof t4 !== "number")
          return B.iae(t4);
        localB = index < t4 ? t2.$index(bList, index) : null;
        t4 = localA != null;
        if (t4 && localB != null) {
          localResult = localA.lerpTo$2(localB, t);
          if (localResult == null)
            localResult = localB.lerpFrom$2(localA, t);
          if (localResult != null) {
            F.JSArray_methods.add$1(results, localResult);
            continue;
          }
        }
        if (localB != null)
          F.JSArray_methods.add$1(results, localB.scale$1(t));
        if (t4)
          F.JSArray_methods.add$1(results, localA.scale$1(t3));
      }
      return A._CompoundBorder$(results);
    },
    BorderStyle: function BorderStyle(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    BorderSide: function BorderSide(t0, t1, t2, t3) {
      var _ = this;
      _.color = t0;
      _.width = t1;
      _.style = t2;
      _.strokeAlign = t3;
    },
    ShapeBorder: function ShapeBorder() {
    },
    OutlinedBorder: function OutlinedBorder() {
    },
    _CompoundBorder: function _CompoundBorder(t0) {
      this.borders = t0;
    },
    _CompoundBorder_dimensions_closure: function _CompoundBorder_dimensions_closure() {
    },
    _CompoundBorder_scale_closure: function _CompoundBorder_scale_closure(t0) {
      this.t = t0;
    },
    _CompoundBorder_toString_closure: function _CompoundBorder_toString_closure() {
    },
    _BorderSide_Object_Diagnosticable: function _BorderSide_Object_Diagnosticable() {
    },
    BoxShape: function BoxShape(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    CircleBorder$(eccentricity, side) {
      return new A.CircleBorder(eccentricity, side);
    },
    CircleBorder: function CircleBorder(t0, t1) {
      this.eccentricity = t0;
      this.side = t1;
    },
    ColorProperty$($name, value, defaultValue, level, showName, style) {
      var _null = null;
      return new A.ColorProperty(_null, true, _null, _null, _null, false, value, defaultValue, level, $name, true, showName, _null, style);
    },
    ColorSwatch: function ColorSwatch() {
    },
    ColorProperty: function ColorProperty(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _._description = t0;
      _.allowWrap = t1;
      _.ifNull = t2;
      _.ifEmpty = t3;
      _.tooltip = t4;
      _.missingIfNull = t5;
      _._diagnostics$_value = t6;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t7;
      _._defaultLevel = t8;
      _.name = t9;
      _.showSeparator = t10;
      _.showName = t11;
      _.linePrefix = t12;
      _.style = t13;
    },
    Decoration_lerp(a, b, t) {
      var t1, _null = null;
      if (a == b)
        return a;
      if (a == null) {
        t1 = b.lerpFrom$2(_null, t);
        return t1 == null ? b : t1;
      }
      if (b == null) {
        t1 = a.lerpTo$2(_null, t);
        return t1 == null ? a : t1;
      }
      if (t === 0)
        return a;
      if (t === 1)
        return b;
      t1 = b.lerpFrom$2(a, t);
      if (t1 == null)
        t1 = a.lerpTo$2(b, t);
      if (t1 == null)
        if (t < 0.5) {
          t1 = a.lerpTo$2(_null, t * 2);
          if (t1 == null)
            t1 = a;
        } else {
          t1 = b.lerpFrom$2(_null, (t - 0.5) * 2);
          if (t1 == null)
            t1 = b;
        }
      return t1;
    },
    Decoration: function Decoration() {
    },
    BoxPainter: function BoxPainter() {
    },
    _Decoration_Object_Diagnosticable: function _Decoration_Object_Diagnosticable() {
    },
    EdgeInsetsGeometry_lerp(a, b, t) {
      var t2, t3, t4, t5, t6,
        t1 = type$.nullable_EdgeInsetsGeometry;
      t1._as(a);
      t1._as(b);
      B._asDouble(t);
      if (a == b)
        return a;
      if (a == null)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      if (a instanceof E.EdgeInsets && b instanceof E.EdgeInsets)
        return A.EdgeInsets_lerp(a, b, t);
      if (a instanceof A.EdgeInsetsDirectional && b instanceof A.EdgeInsetsDirectional)
        return A.EdgeInsetsDirectional_lerp(a, b, t);
      t1 = A.lerpDouble(a.get$_left(), b.get$_left(), t);
      t1.toString;
      t2 = A.lerpDouble(a.get$_right(), b.get$_right(), t);
      t2.toString;
      t3 = A.lerpDouble(a.get$_edge_insets$_start(), b.get$_edge_insets$_start(), t);
      t3.toString;
      t4 = A.lerpDouble(a.get$_edge_insets$_end(), b.get$_edge_insets$_end(), t);
      t4.toString;
      t5 = A.lerpDouble(a.get$_top(), b.get$_top(), t);
      t5.toString;
      t6 = A.lerpDouble(a.get$_bottom(), b.get$_bottom(), t);
      t6.toString;
      return E._MixedEdgeInsets$fromLRSETB(t1, t2, t3, t4, t5, t6);
    },
    EdgeInsets$all(value) {
      return new E.EdgeInsets(value, value, value, value);
    },
    EdgeInsets$only(bottom, left, right, $top) {
      return new E.EdgeInsets(left, $top, right, bottom);
    },
    EdgeInsets_lerp(a, b, t) {
      var t1, t2, t3, t4;
      if (a == b)
        return a;
      if (a == null)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      t1 = A.lerpDouble(a.left, b.left, t);
      t1.toString;
      t2 = A.lerpDouble(a.top, b.top, t);
      t2.toString;
      t3 = A.lerpDouble(a.right, b.right, t);
      t3.toString;
      t4 = A.lerpDouble(a.bottom, b.bottom, t);
      t4.toString;
      return E.EdgeInsets$fromLTRB(t1, t2, t3, t4);
    },
    EdgeInsetsDirectional$fromSTEB(start, $top, end, bottom) {
      return new A.EdgeInsetsDirectional(start, $top, end, bottom);
    },
    EdgeInsetsDirectional$only(end, start) {
      return new A.EdgeInsetsDirectional(start, 0, end, 0);
    },
    EdgeInsetsDirectional_lerp(a, b, t) {
      var t1, t2, t3, t4;
      if (a == b)
        return a;
      if (a == null)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      t1 = A.lerpDouble(a.start, b.start, t);
      t1.toString;
      t2 = A.lerpDouble(a.top, b.top, t);
      t2.toString;
      t3 = A.lerpDouble(a.end, b.end, t);
      t3.toString;
      t4 = A.lerpDouble(a.bottom, b.bottom, t);
      t4.toString;
      return A.EdgeInsetsDirectional$fromSTEB(t1, t2, t3, t4);
    },
    EdgeInsetsDirectional: function EdgeInsetsDirectional(t0, t1, t2, t3) {
      var _ = this;
      _.start = t0;
      _.top = t1;
      _.end = t2;
      _.bottom = t3;
    },
    ImageConfiguration$(bundle, devicePixelRatio, locale, platform, size, textDirection) {
      return new A.ImageConfiguration(bundle, devicePixelRatio, locale, textDirection, size, platform);
    },
    ImageConfiguration: function ImageConfiguration(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.bundle = t0;
      _.devicePixelRatio = t1;
      _.locale = t2;
      _.textDirection = t3;
      _.size = t4;
      _.platform = t5;
    },
    Accumulator$() {
      return new A.Accumulator();
    },
    InlineSpanSemanticsInformation$(text, recognizer, semanticsLabel, stringAttributes) {
      return new A.InlineSpanSemanticsInformation(text, semanticsLabel, recognizer, recognizer != null, stringAttributes);
    },
    combineSemanticsInfo(infoList) {
      var t2, workingText, workingLabel, t3, effectiveLabel, effectiveLabel0, t4, t5, t6, t7,
        combined = B._setArrayType([], type$.JSArray_InlineSpanSemanticsInformation),
        t1 = type$.JSArray_StringAttribute,
        workingAttributes = B._setArrayType([], t1);
      for (t2 = J.get$iterator$ax(infoList), workingText = "", workingLabel = ""; B.boolConversionCheck(t2.moveNext$0());) {
        t3 = t2.get$current();
        if (B.boolConversionCheck(t3.requiresOwnNode)) {
          F.JSArray_methods.add$1(combined, A.InlineSpanSemanticsInformation$(workingText, null, workingLabel, workingAttributes));
          workingAttributes = B._setArrayType([], t1);
          F.JSArray_methods.add$1(combined, t3);
          workingText = "";
          workingLabel = "";
        } else {
          effectiveLabel = t3.text;
          workingText = F.JSString_methods.$add(workingText, effectiveLabel);
          effectiveLabel0 = t3.semanticsLabel;
          effectiveLabel = effectiveLabel0 == null ? effectiveLabel : effectiveLabel0;
          for (t3 = J.get$iterator$ax(t3.stringAttributes), t4 = workingLabel.length; B.boolConversionCheck(t3.moveNext$0());) {
            t5 = t3.get$current();
            t6 = t5.range;
            t7 = t6.start;
            if (typeof t7 !== "number")
              return t7.$add();
            t6 = t6.end;
            if (typeof t6 !== "number")
              return t6.$add();
            F.JSArray_methods.add$1(workingAttributes, t5.copy$1$range(E.TextRange$(t6 + t4, t7 + t4)));
          }
          workingLabel += effectiveLabel;
        }
      }
      F.JSArray_methods.add$1(combined, A.InlineSpanSemanticsInformation$(workingText, null, workingLabel, workingAttributes));
      return combined;
    },
    Accumulator: function Accumulator() {
      this._inline_span$_value = 0;
    },
    InlineSpanSemanticsInformation: function InlineSpanSemanticsInformation(t0, t1, t2, t3, t4) {
      var _ = this;
      _.text = t0;
      _.semanticsLabel = t1;
      _.recognizer = t2;
      _.requiresOwnNode = t3;
      _.stringAttributes = t4;
    },
    InlineSpan: function InlineSpan() {
    },
    InlineSpan_getSpanForPosition_closure: function InlineSpan_getSpanForPosition_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.position = t1;
      this.offset = t2;
    },
    InlineSpan_codeUnitAt_closure: function InlineSpan_codeUnitAt_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.index = t1;
      this.offset = t2;
    },
    RoundedRectangleBorder$(borderRadius, side) {
      return new A.RoundedRectangleBorder(borderRadius, side);
    },
    _RoundedRectangleToCircleBorder$(borderRadius, circularity, eccentricity, side) {
      return new A._RoundedRectangleToCircleBorder(borderRadius, circularity, eccentricity, side);
    },
    RoundedRectangleBorder: function RoundedRectangleBorder(t0, t1) {
      this.borderRadius = t0;
      this.side = t1;
    },
    _RoundedRectangleToCircleBorder: function _RoundedRectangleToCircleBorder(t0, t1, t2, t3) {
      var _ = this;
      _.borderRadius = t0;
      _.circularity = t1;
      _.eccentricity = t2;
      _.side = t3;
    },
    StadiumBorder$(side) {
      return new A.StadiumBorder(side);
    },
    _StadiumToCircleBorder$(circularity, eccentricity, side) {
      return new A._StadiumToCircleBorder(circularity, eccentricity, side);
    },
    _StadiumToRoundedRectangleBorder$(borderRadius, rectilinearity, side) {
      return new A._StadiumToRoundedRectangleBorder(borderRadius, rectilinearity, side);
    },
    StadiumBorder: function StadiumBorder(t0) {
      this.side = t0;
    },
    _StadiumToCircleBorder: function _StadiumToCircleBorder(t0, t1, t2) {
      this.circularity = t0;
      this.eccentricity = t1;
      this.side = t2;
    },
    _StadiumToRoundedRectangleBorder: function _StadiumToRoundedRectangleBorder(t0, t1, t2) {
      this.borderRadius = t0;
      this.rectilinearity = t1;
      this.side = t2;
    },
    WordBoundary$_(_text, _paragraph) {
      return new A.WordBoundary(_text, _paragraph);
    },
    WordBoundary__codePointFromSurrogates(highSurrogate, lowSurrogate) {
      return (highSurrogate << 10 >>> 0) + lowSurrogate + -56613888;
    },
    WordBoundary__isNewline(codePoint) {
      var t1;
      $label0$0: {
        t1 = 10 === codePoint || 133 === codePoint || 11 === codePoint || 12 === codePoint || 8232 === codePoint || 8233 === codePoint;
        if (t1)
          break $label0$0;
        break $label0$0;
      }
      return t1;
    },
    _UntilTextBoundary$(_textBoundary, _predicate) {
      return new A._UntilTextBoundary(_predicate, _textBoundary);
    },
    _TextLayout$_(_paragraph, writingDirection, _painter) {
      return new A._TextLayout(writingDirection, _painter, _paragraph);
    },
    _TextPainterLayoutCacheWithOffset$(layout, textAlignment, layoutMaxWidth, contentWidth) {
      return new A._TextPainterLayoutCacheWithOffset(layout, layoutMaxWidth, contentWidth, textAlignment);
    },
    _LineCaretMetrics$(offset, writingDirection) {
      return new A._LineCaretMetrics(offset, writingDirection);
    },
    TextPainter$(ellipsis, locale, maxLines, strutStyle, text, textAlign, textDirection, textHeightBehavior, textScaler, textWidthBasis) {
      var t1 = new A.TextPainter(text, textAlign, textDirection, B.boolConversionCheck(textScaler.$eq(0, D._LinearTextScaler_1)) ? E._LinearTextScaler$(1) : textScaler, ellipsis, locale, maxLines, strutStyle, textWidthBasis, textHeightBehavior);
      t1.TextPainter$11$ellipsis$locale$maxLines$strutStyle$text$textAlign$textDirection$textHeightBehavior$textScaleFactor$textScaler$textWidthBasis(ellipsis, locale, maxLines, strutStyle, text, textAlign, textDirection, textHeightBehavior, 1, textScaler, textWidthBasis);
      return t1;
    },
    TextPainter__computePaintOffsetFraction(textAlign, textDirection) {
      var t1, _0_10, t2, _0_12_isSet, _0_12, _0_14_isSet, _0_14, _0_4, _0_16_isSet, _0_16, _0_4_isSet, _0_18, _null = null;
      $label0$0: {
        t1 = 0;
        if (D.TextAlign_0 === textAlign)
          break $label0$0;
        if (D.TextAlign_1 === textAlign) {
          t1 = 1;
          break $label0$0;
        }
        if (D.TextAlign_2 === textAlign) {
          t1 = 0.5;
          break $label0$0;
        }
        _0_10 = D.TextAlign_4 === textAlign;
        t2 = _0_10;
        _0_12_isSet = !B.boolConversionCheck(t2);
        _0_12 = _null;
        if (_0_12_isSet) {
          _0_12 = D.TextAlign_3 === textAlign;
          t2 = _0_12;
          B.boolConversionCheck(t2);
          _0_14_isSet = t2;
        } else
          _0_14_isSet = true;
        _0_14 = _null;
        _0_4 = _null;
        if (_0_14_isSet) {
          _0_14 = D.TextDirection_1 === textDirection;
          t2 = _0_14;
          _0_4 = textDirection;
          B.boolConversionCheck(t2);
        } else
          t2 = false;
        if (t2)
          break $label0$0;
        if (!B.boolConversionCheck(_0_10)) {
          if (_0_12_isSet)
            t2 = _0_12;
          else {
            _0_12 = D.TextAlign_3 === textAlign;
            t2 = _0_12;
          }
          B.boolConversionCheck(t2);
          _0_16_isSet = t2;
        } else
          _0_16_isSet = true;
        _0_16 = _null;
        if (_0_16_isSet) {
          if (_0_14_isSet) {
            t2 = _0_4;
            _0_4_isSet = _0_14_isSet;
          } else {
            t2 = textDirection;
            _0_4 = t2;
            _0_4_isSet = true;
          }
          _0_16 = D.TextDirection_0 === t2;
          t2 = _0_16;
          B.boolConversionCheck(t2);
        } else {
          _0_4_isSet = _0_14_isSet;
          t2 = false;
        }
        if (t2) {
          t1 = 1;
          break $label0$0;
        }
        _0_18 = D.TextAlign_5 === textAlign;
        t2 = _0_18;
        if (B.boolConversionCheck(t2)) {
          if (_0_14_isSet)
            t2 = _0_14;
          else {
            if (_0_4_isSet)
              t2 = _0_4;
            else {
              t2 = textDirection;
              _0_4 = t2;
              _0_4_isSet = true;
            }
            _0_14 = D.TextDirection_1 === t2;
            t2 = _0_14;
          }
          B.boolConversionCheck(t2);
        } else
          t2 = false;
        if (t2) {
          t1 = 1;
          break $label0$0;
        }
        if (B.boolConversionCheck(_0_18)) {
          if (_0_16_isSet)
            t2 = _0_16;
          else {
            _0_16 = D.TextDirection_0 === (_0_4_isSet ? _0_4 : textDirection);
            t2 = _0_16;
          }
          B.boolConversionCheck(t2);
        } else
          t2 = false;
        if (t2)
          break $label0$0;
        t1 = _null;
      }
      return t1;
    },
    TextPainter__shiftLineMetrics(metrics, offset) {
      var t9, t10,
        t1 = metrics.get$hardBreak(),
        t2 = metrics.get$ascent(),
        t3 = metrics.get$descent(),
        t4 = metrics.get$unscaledAscent(),
        t5 = metrics.get$height(),
        t6 = metrics.get$width(),
        t7 = metrics.get$left(),
        t8 = offset.get$dx();
      if (typeof t7 !== "number")
        return t7.$add();
      if (typeof t8 !== "number")
        return B.iae(t8);
      t9 = metrics.get$baseline();
      t10 = offset.get$dy();
      if (typeof t9 !== "number")
        return t9.$add();
      if (typeof t10 !== "number")
        return B.iae(t10);
      return A.LineMetrics_LineMetrics(t2, t9 + t10, t3, t1, t5, t7 + t8, metrics.get$lineNumber(), t4, t6);
    },
    TextPainter__shiftTextBox(box, offset) {
      var t3, t4, t5, t6, t7, t8,
        t1 = box.left,
        t2 = offset.get$dx();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = box.top;
      t4 = offset.get$dy();
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t5 = box.right;
      t6 = offset.get$dx();
      if (typeof t5 !== "number")
        return t5.$add();
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = box.bottom;
      t8 = offset.get$dy();
      if (typeof t7 !== "number")
        return t7.$add();
      if (typeof t8 !== "number")
        return B.iae(t8);
      return E.TextBox$fromLTRBD(t1 + t2, t3 + t4, t5 + t6, t7 + t8, box.direction);
    },
    TextOverflow: function TextOverflow(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    PlaceholderDimensions: function PlaceholderDimensions(t0, t1, t2, t3) {
      var _ = this;
      _.size = t0;
      _.alignment = t1;
      _.baselineOffset = t2;
      _.baseline = t3;
    },
    TextWidthBasis: function TextWidthBasis(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    WordBoundary: function WordBoundary(t0, t1) {
      this._text_painter$_text = t0;
      this._text_painter$_paragraph = t1;
      this.__WordBoundary_moveByWordBoundary_FI = $;
    },
    _UntilTextBoundary: function _UntilTextBoundary(t0, t1) {
      this._predicate = t0;
      this._textBoundary = t1;
    },
    _TextLayout: function _TextLayout(t0, t1, t2) {
      var _ = this;
      _.writingDirection = t0;
      _._painter = t1;
      _._text_painter$_paragraph = t2;
      _.___TextLayout__endOfTextCaretMetrics_FI = $;
    },
    _TextLayout__computeEndOfTextCaretAnchorOffset_closure: function _TextLayout__computeEndOfTextCaretAnchorOffset_closure(t0, t1) {
      this.$this = t0;
      this.rawString = t1;
    },
    _TextPainterLayoutCacheWithOffset: function _TextPainterLayoutCacheWithOffset(t0, t1, t2, t3) {
      var _ = this;
      _.layout = t0;
      _.layoutMaxWidth = t1;
      _.contentWidth = t2;
      _.textAlignment = t3;
      _._previousCaretPositionKey = _._cachedLineMetrics = _._cachedInlinePlaceholderBoxes = null;
    },
    _LineCaretMetrics: function _LineCaretMetrics(t0, t1) {
      this.offset = t0;
      this.writingDirection = t1;
    },
    TextPainter: function TextPainter(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._layoutCache = null;
      _._rebuildParagraphForPaint = true;
      _._text_painter$_text = t0;
      _._cachedPlainText = null;
      _._text_painter$_textAlign = t1;
      _._text_painter$_textDirection = t2;
      _._text_painter$_textScaler = t3;
      _._text_painter$_ellipsis = t4;
      _._text_painter$_locale = t5;
      _._text_painter$_maxLines = t6;
      _._text_painter$_strutStyle = t7;
      _._textWidthBasis = t8;
      _._text_painter$_textHeightBehavior = t9;
      _._layoutTemplate = _._text_painter$_placeholderDimensions = null;
      _.__TextPainter__caretMetrics_A = $;
    },
    TextPainter_inlinePlaceholderBoxes_closure: function TextPainter_inlinePlaceholderBoxes_closure(t0) {
      this.offset = t0;
    },
    TextPainter_getBoxesForSelection_closure: function TextPainter_getBoxesForSelection_closure(t0) {
      this.offset = t0;
    },
    TextPainter_computeLineMetrics_closure: function TextPainter_computeLineMetrics_closure(t0) {
      this.offset = t0;
    },
    TextSpan$(children, style, text) {
      return new A.TextSpan(text, children, D.C__DeferringMouseCursor, style);
    },
    TextSpan: function TextSpan(t0, t1, t2, t3) {
      var _ = this;
      _.text = t0;
      _.children = t1;
      _.mouseCursor = t2;
      _.style = t3;
    },
    TextSpan_debugDescribeChildren_closure: function TextSpan_debugDescribeChildren_closure() {
    },
    TextStyle$(background, backgroundColor, color, debugLabel, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, inherit, leadingDistribution, letterSpacing, locale, overflow, $package, shadows, textBaseline, wordSpacing) {
      return new A.TextStyle(inherit, color, backgroundColor, $package == null ? fontFamily : "packages/" + $package + "/" + B.S(fontFamily), fontFamilyFallback, $package, fontSize, fontWeight, fontStyle, letterSpacing, wordSpacing, textBaseline, height, leadingDistribution, locale, foreground, background, decoration, decorationColor, decorationStyle, decorationThickness, debugLabel, shadows, fontFeatures, fontVariations, overflow);
    },
    TextStyle_lerp(a, b, t) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, _null = null,
        t1 = type$.nullable_TextStyle;
      t1._as(a);
      t1._as(b);
      B._asDouble(t);
      if (a == b)
        return a;
      if (a == null) {
        t1 = b.inherit;
        t2 = A.Color_lerp(_null, b.color, t);
        t3 = A.Color_lerp(_null, b.backgroundColor, t);
        t4 = t < 0.5;
        t5 = t4 ? _null : b.fontSize;
        t6 = A.FontWeight_lerp(_null, b.fontWeight, t);
        t7 = t4 ? _null : b.fontStyle;
        t8 = t4 ? _null : b.letterSpacing;
        t9 = t4 ? _null : b.wordSpacing;
        t10 = t4 ? _null : b.textBaseline;
        t11 = t4 ? _null : b.height;
        t12 = t4 ? _null : b.leadingDistribution;
        t13 = t4 ? _null : b.locale;
        t14 = t4 ? _null : b.foreground;
        t15 = t4 ? _null : b.background;
        t16 = t4 ? _null : b.shadows;
        t17 = t4 ? _null : b.fontFeatures;
        t18 = A.lerpFontVariations(_null, b.fontVariations, t);
        t19 = t4 ? _null : b.decoration;
        t20 = A.Color_lerp(_null, b.decorationColor, t);
        t21 = t4 ? _null : b.decorationStyle;
        t22 = t4 ? _null : b.decorationThickness;
        t23 = t4 ? _null : b.get$_text_style$_fontFamily();
        t24 = t4 ? _null : b._text_style$_fontFamilyFallback;
        t25 = t4 ? _null : b._package;
        return A.TextStyle$(t15, t3, t2, _null, t19, t20, t21, t22, t23, t24, t17, t5, t7, t18, t6, t14, t11, t1, t12, t8, t13, t4 ? _null : b.overflow, t25, t16, t10, t9);
      }
      if (b == null) {
        t1 = a.inherit;
        t2 = A.Color_lerp(a.color, _null, t);
        t3 = A.Color_lerp(_null, a.backgroundColor, t);
        t4 = t < 0.5;
        t5 = t4 ? a.fontSize : _null;
        t6 = A.FontWeight_lerp(a.fontWeight, _null, t);
        t7 = t4 ? a.fontStyle : _null;
        t8 = t4 ? a.letterSpacing : _null;
        t9 = t4 ? a.wordSpacing : _null;
        t10 = t4 ? a.textBaseline : _null;
        t11 = t4 ? a.height : _null;
        t12 = t4 ? a.leadingDistribution : _null;
        t13 = t4 ? a.locale : _null;
        t14 = t4 ? a.foreground : _null;
        t15 = t4 ? a.background : _null;
        t16 = t4 ? a.shadows : _null;
        t17 = t4 ? a.fontFeatures : _null;
        t18 = A.lerpFontVariations(a.fontVariations, _null, t);
        t19 = t4 ? a.decoration : _null;
        t20 = A.Color_lerp(a.decorationColor, _null, t);
        t21 = t4 ? a.decorationStyle : _null;
        t22 = t4 ? a.decorationThickness : _null;
        t23 = t4 ? a.get$_text_style$_fontFamily() : _null;
        t24 = t4 ? a._text_style$_fontFamilyFallback : _null;
        t25 = t4 ? a._package : _null;
        return A.TextStyle$(t15, t3, t2, _null, t19, t20, t21, t22, t23, t24, t17, t5, t7, t18, t6, t14, t11, t1, t12, t8, t13, t4 ? a.overflow : _null, t25, t16, t10, t9);
      }
      t1 = t < 0.5;
      t2 = t1 ? a.inherit : b.inherit;
      t3 = a.foreground;
      t4 = t3 == null;
      t5 = t4 && b.foreground == null ? A.Color_lerp(a.color, b.color, t) : _null;
      t6 = a.background;
      t7 = t6 == null;
      t8 = t7 && b.background == null ? A.Color_lerp(a.backgroundColor, b.backgroundColor, t) : _null;
      t9 = a.fontSize;
      t10 = t9 == null ? b.fontSize : t9;
      t11 = b.fontSize;
      t9 = A.lerpDouble(t10, t11 == null ? t9 : t11, t);
      t10 = A.FontWeight_lerp(a.fontWeight, b.fontWeight, t);
      t11 = t1 ? a.fontStyle : b.fontStyle;
      t12 = a.letterSpacing;
      t13 = t12 == null ? b.letterSpacing : t12;
      t14 = b.letterSpacing;
      t12 = A.lerpDouble(t13, t14 == null ? t12 : t14, t);
      t13 = a.wordSpacing;
      t14 = t13 == null ? b.wordSpacing : t13;
      t15 = b.wordSpacing;
      t13 = A.lerpDouble(t14, t15 == null ? t13 : t15, t);
      t14 = t1 ? a.textBaseline : b.textBaseline;
      t15 = a.height;
      t16 = t15 == null ? b.height : t15;
      t17 = b.height;
      t15 = A.lerpDouble(t16, t17 == null ? t15 : t17, t);
      t16 = t1 ? a.leadingDistribution : b.leadingDistribution;
      t17 = t1 ? a.locale : b.locale;
      if (!t4 || b.foreground != null)
        if (t1) {
          if (t4) {
            t3 = E.Paint_Paint();
            t4 = a.color;
            t4.toString;
            t3.set$color(t4);
          }
        } else {
          t3 = b.foreground;
          if (t3 == null) {
            t3 = E.Paint_Paint();
            t4 = b.color;
            t4.toString;
            t3.set$color(t4);
          }
        }
      else
        t3 = _null;
      if (!t7 || b.background != null)
        if (t1)
          if (t7) {
            t4 = E.Paint_Paint();
            t6 = a.backgroundColor;
            t6.toString;
            t4.set$color(t6);
          } else
            t4 = t6;
        else {
          t4 = b.background;
          if (t4 == null) {
            t4 = E.Paint_Paint();
            t6 = b.backgroundColor;
            t6.toString;
            t4.set$color(t6);
          }
        }
      else
        t4 = _null;
      t6 = A.Shadow_lerpList(a.shadows, b.shadows, t);
      t7 = t1 ? a.fontFeatures : b.fontFeatures;
      t18 = A.lerpFontVariations(a.fontVariations, b.fontVariations, t);
      t19 = t1 ? a.decoration : b.decoration;
      t20 = A.Color_lerp(a.decorationColor, b.decorationColor, t);
      t21 = t1 ? a.decorationStyle : b.decorationStyle;
      t22 = a.decorationThickness;
      t23 = t22 == null ? b.decorationThickness : t22;
      t24 = b.decorationThickness;
      t22 = A.lerpDouble(t23, t24 == null ? t22 : t24, t);
      t23 = t1 ? a.get$_text_style$_fontFamily() : b.get$_text_style$_fontFamily();
      t24 = t1 ? a._text_style$_fontFamilyFallback : b._text_style$_fontFamilyFallback;
      t25 = t1 ? a._package : b._package;
      return A.TextStyle$(t4, t8, t5, _null, t19, t20, t21, t22, t23, t24, t7, t9, t11, t18, t10, t3, t15, t2, t16, t12, t17, t1 ? a.overflow : b.overflow, t25, t6, t14, t13);
    },
    lerpFontVariations(a, b, t) {
      var result, t1, t2, t3, t4, minLength, index, axes, aVariations, indexA, t5, bVariations, indexB, variation, _null = null;
      if (t === 0)
        return a;
      if (t === 1)
        return b;
      if (a == null || B.boolConversionCheck(J.get$isEmpty$asx(a)) || b == null || B.boolConversionCheck(J.get$isEmpty$asx(b)))
        return t < 0.5 ? a : b;
      result = B._setArrayType([], type$.JSArray_FontVariation);
      t1 = J.getInterceptor$asx(a);
      t2 = t1.get$length(a);
      t3 = J.getInterceptor$asx(b);
      t4 = t3.get$length(b);
      if (typeof t2 !== "number")
        return t2.$lt();
      if (typeof t4 !== "number")
        return B.iae(t4);
      minLength = t2 < t4 ? t1.get$length(a) : t3.get$length(b);
      for (index = 0; index < minLength; ++index) {
        if (!B.boolConversionCheck(J.$eq$(t1.$index(a, index).axis, t3.$index(b, index).axis)))
          break;
        t2 = A.FontVariation_lerp(t1.$index(a, index), t3.$index(b, index), t);
        t2.toString;
        F.JSArray_methods.add$1(result, t2);
      }
      t2 = t1.get$length(a);
      t4 = t3.get$length(b);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (typeof t4 !== "number")
        return B.iae(t4);
      if (index < (t2 > t4 ? t1.get$length(a) : t3.get$length(b))) {
        t2 = type$.String;
        axes = B.HashSet_HashSet(t2);
        t4 = type$.FontVariation;
        aVariations = B.HashMap_HashMap(_null, _null, _null, t2, t4);
        indexA = index;
        while (true) {
          t5 = t1.get$length(a);
          if (typeof t5 !== "number")
            return B.iae(t5);
          if (!(indexA < t5))
            break;
          aVariations.$indexSet(0, t1.$index(a, indexA).axis, t1.$index(a, indexA));
          axes.add$1(0, t1.$index(a, indexA).axis);
          ++indexA;
        }
        bVariations = B.HashMap_HashMap(_null, _null, _null, t2, t4);
        indexB = index;
        while (true) {
          t1 = t3.get$length(b);
          if (typeof t1 !== "number")
            return B.iae(t1);
          if (!(indexB < t1))
            break;
          bVariations.$indexSet(0, t3.$index(b, indexB).axis, t3.$index(b, indexB));
          axes.add$1(0, t3.$index(b, indexB).axis);
          ++indexB;
        }
        for (t1 = axes.get$iterator(axes); B.boolConversionCheck(t1.moveNext$0());) {
          t2 = t1.get$current();
          variation = A.FontVariation_lerp(aVariations.$index(0, t2), bVariations.$index(0, t2), t);
          if (variation != null)
            F.JSArray_methods.add$1(result, variation);
        }
      }
      return result;
    },
    TextStyle: function TextStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25) {
      var _ = this;
      _.inherit = t0;
      _.color = t1;
      _.backgroundColor = t2;
      _.fontFamily = t3;
      _._text_style$_fontFamilyFallback = t4;
      _._package = t5;
      _.fontSize = t6;
      _.fontWeight = t7;
      _.fontStyle = t8;
      _.letterSpacing = t9;
      _.wordSpacing = t10;
      _.textBaseline = t11;
      _.height = t12;
      _.leadingDistribution = t13;
      _.locale = t14;
      _.foreground = t15;
      _.background = t16;
      _.decoration = t17;
      _.decorationColor = t18;
      _.decorationStyle = t19;
      _.decorationThickness = t20;
      _.debugLabel = t21;
      _.shadows = t22;
      _.fontFeatures = t23;
      _.fontVariations = t24;
      _.overflow = t25;
    },
    TextStyle_fontFamilyFallback_closure: function TextStyle_fontFamilyFallback_closure(t0) {
      this.$this = t0;
    },
    TextStyle_debugFillProperties_closure: function TextStyle_debugFillProperties_closure() {
    },
    _TextStyle_Object_Diagnosticable: function _TextStyle_Object_Diagnosticable() {
    },
    Simulation: function Simulation() {
    },
    BoxConstraints$tight(size) {
      return new E.BoxConstraints(size.get$width(), size.get$width(), size.get$height(), size.get$height());
    },
    BoxConstraints_lerp(a, b, t) {
      var t1, t2, t3, t4;
      if (a == b)
        return a;
      if (a == null)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      t1 = a.minWidth;
      if (B.boolConversionCheck(J.get$isFinite$n(t1))) {
        t1 = A.lerpDouble(t1, b.minWidth, t);
        t1.toString;
      } else
        t1 = 1 / 0;
      t2 = a.maxWidth;
      if (B.boolConversionCheck(J.get$isFinite$n(t2))) {
        t2 = A.lerpDouble(t2, b.maxWidth, t);
        t2.toString;
      } else
        t2 = 1 / 0;
      t3 = a.minHeight;
      if (B.boolConversionCheck(J.get$isFinite$n(t3))) {
        t3 = A.lerpDouble(t3, b.minHeight, t);
        t3.toString;
      } else
        t3 = 1 / 0;
      t4 = a.maxHeight;
      if (B.boolConversionCheck(J.get$isFinite$n(t4))) {
        t4 = A.lerpDouble(t4, b.maxHeight, t);
        t4.toString;
      } else
        t4 = 1 / 0;
      return E.BoxConstraints$(t4, t2, t3, t1);
    },
    BaselineOffset__(_this, offset) {
      return E.BaselineOffset_constructor_(_this == null ? null : _this + offset);
    },
    BaselineOffset_minOf(_this, other) {
      var _0_3, lhs, t1, _0_3_isSet, rhs, _null = null;
      $label0$0: {
        _0_3 = _null;
        lhs = _null;
        t1 = false;
        if (_this != null) {
          _0_3_isSet = typeof _this == "number";
          if (_0_3_isSet) {
            lhs = _this;
            if (other != null)
              t1 = typeof other == "number";
            _0_3 = other;
          }
        } else
          _0_3_isSet = false;
        if (t1) {
          rhs = _0_3_isSet ? _0_3 : other;
          if (rhs == null)
            rhs = B._asDouble(rhs);
          if (typeof lhs !== "number")
            return lhs.$ge();
          t1 = lhs >= rhs ? other : _this;
          break $label0$0;
        }
        lhs = _null;
        t1 = false;
        if (_this != null) {
          lhs = _this;
          if (_0_3_isSet)
            t1 = _0_3;
          else {
            t1 = other;
            _0_3 = t1;
            _0_3_isSet = true;
          }
          t1 = t1 == null;
        }
        if (t1) {
          t1 = E.BaselineOffset_constructor_(lhs);
          break $label0$0;
        }
        t1 = _this == null;
        if (t1)
          if (!_0_3_isSet) {
            _0_3 = other;
            _0_3_isSet = true;
          }
        if (t1) {
          rhs = _0_3_isSet ? _0_3 : other;
          t1 = rhs;
          break $label0$0;
        }
        t1 = _null;
      }
      return t1;
    },
    ContainerBoxParentData: function ContainerBoxParentData() {
    },
    RenderBoxContainerDefaultsMixin: function RenderBoxContainerDefaultsMixin() {
    },
    RenderBoxContainerDefaultsMixin_defaultHitTestChildren_closure: function RenderBoxContainerDefaultsMixin_defaultHitTestChildren_closure(t0) {
      this._box_0 = t0;
    },
    _ContainerBoxParentData_BoxParentData_ContainerParentDataMixin: function _ContainerBoxParentData_BoxParentData_ContainerParentDataMixin() {
    },
    RenderCustomPaint$(foregroundPainter, isComplex, painter, preferredSize, willChange) {
      var t1 = new A.RenderCustomPaint(painter, foregroundPainter, preferredSize, isComplex, willChange, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    RenderCustomPaint__updateSemanticsChildren(oldSemantics, newChildSemantics) {
      var t1, t2, newChildrenBottom, t3, oldChildrenBottom, newChildren, newChildrenTop, oldChildrenTop, oldChild, newSemantics, t4, oldKeyedChildren, t5, t6, key, oldChild0;
      if (oldSemantics == null)
        oldSemantics = D.List_empty4;
      if (newChildSemantics == null)
        newChildSemantics = C.List_empty11;
      t1 = J.getInterceptor$asx(newChildSemantics);
      t2 = t1.get$length(newChildSemantics);
      if (typeof t2 !== "number")
        return t2.$sub();
      newChildrenBottom = t2 - 1;
      t2 = J.getInterceptor$asx(oldSemantics);
      t3 = t2.get$length(oldSemantics);
      if (typeof t3 !== "number")
        return t3.$sub();
      oldChildrenBottom = t3 - 1;
      newChildren = B.List_List$filled(t1.get$length(newChildSemantics), null, false, type$.nullable_SemanticsNode);
      t3 = J.getInterceptor$ax(newChildren);
      newChildrenTop = 0;
      oldChildrenTop = 0;
      while (true) {
        if (!(oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom))
          break;
        oldChild = t2.$index(oldSemantics, oldChildrenTop);
        newSemantics = t1.$index(newChildSemantics, newChildrenTop);
        if (!B.boolConversionCheck(A.RenderCustomPaint__canUpdateSemanticsChild(oldChild, newSemantics)))
          break;
        t3.$indexSet(newChildren, newChildrenTop, A.RenderCustomPaint__updateSemanticsChild(oldChild, newSemantics));
        ++newChildrenTop;
        ++oldChildrenTop;
      }
      while (true) {
        t4 = oldChildrenTop <= oldChildrenBottom;
        if (!(t4 && newChildrenTop <= newChildrenBottom))
          break;
        if (!B.boolConversionCheck(A.RenderCustomPaint__canUpdateSemanticsChild(t2.$index(oldSemantics, oldChildrenBottom), t1.$index(newChildSemantics, newChildrenBottom))))
          break;
        --oldChildrenBottom;
        --newChildrenBottom;
      }
      oldKeyedChildren = B._Cell$named("oldKeyedChildren");
      if (t4) {
        oldKeyedChildren.set$finalLocalValue(B.LinkedHashMap_LinkedHashMap$_empty(type$.Key, type$.SemanticsNode));
        for (t5 = type$.Map_Key_SemanticsNode; oldChildrenTop <= oldChildrenBottom;) {
          oldChild = t2.$index(oldSemantics, oldChildrenTop);
          t6 = oldChild.key;
          if (t6 != null)
            J.$indexSet$ax(oldKeyedChildren.readLocal$1$0(t5), t6, oldChild);
          ++oldChildrenTop;
        }
      }
      for (t5 = type$.Map_Key_SemanticsNode; newChildrenTop <= newChildrenBottom;) {
        newSemantics = t1.$index(newChildSemantics, newChildrenTop);
        oldChild = null;
        if (t4) {
          key = newSemantics.get$key();
          if (key != null) {
            oldChild0 = J.$index$asx(oldKeyedChildren.readLocal$1$0(t5), key);
            if (oldChild0 != null) {
              if (B.boolConversionCheck(A.RenderCustomPaint__canUpdateSemanticsChild(oldChild0, newSemantics))) {
                J.remove$1$ax(oldKeyedChildren.readLocal$1$0(t5), key);
                oldChild = oldChild0;
              }
            } else
              oldChild = oldChild0;
          }
        }
        t3.$indexSet(newChildren, newChildrenTop, A.RenderCustomPaint__updateSemanticsChild(oldChild, newSemantics));
        ++newChildrenTop;
      }
      t4 = t1.get$length(newChildSemantics);
      if (typeof t4 !== "number")
        return t4.$sub();
      newChildrenBottom = t4 - 1;
      t4 = t2.get$length(oldSemantics);
      if (typeof t4 !== "number")
        return t4.$sub();
      oldChildrenBottom = t4 - 1;
      while (true) {
        if (!(oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom))
          break;
        t3.$indexSet(newChildren, newChildrenTop, A.RenderCustomPaint__updateSemanticsChild(t2.$index(oldSemantics, oldChildrenTop), t1.$index(newChildSemantics, newChildrenTop)));
        ++newChildrenTop;
        ++oldChildrenTop;
      }
      return t3.cast$1$0(newChildren, type$.SemanticsNode);
    },
    RenderCustomPaint__canUpdateSemanticsChild(oldChild, newSemantics) {
      return J.$eq$(oldChild.key, newSemantics.get$key());
    },
    RenderCustomPaint__updateSemanticsChild(oldChild, newSemantics) {
      var newChild = oldChild == null ? E.SemanticsNode$(newSemantics.get$key(), null) : oldChild,
        properties = newSemantics.get$properties(),
        config = E.SemanticsConfiguration$(),
        t1 = properties.sortKey;
      if (t1 != null)
        config.set$sortKey(t1);
      t1 = properties.checked;
      if (t1 != null)
        config.set$isChecked(t1);
      t1 = properties.mixed;
      if (t1 != null)
        config.set$isCheckStateMixed(t1);
      t1 = properties.selected;
      if (t1 != null)
        config.set$isSelected(t1);
      t1 = properties.button;
      if (t1 != null)
        config.set$isButton(t1);
      t1 = properties.expanded;
      if (t1 != null)
        config.set$isExpanded(t1);
      t1 = properties.link;
      if (t1 != null)
        config.set$isLink(t1);
      t1 = properties.textField;
      if (t1 != null)
        config.set$isTextField(t1);
      t1 = properties.slider;
      if (t1 != null)
        config.set$isSlider(t1);
      t1 = properties.keyboardKey;
      if (t1 != null)
        config.set$isKeyboardKey(t1);
      t1 = properties.readOnly;
      if (t1 != null)
        config.set$isReadOnly(t1);
      t1 = properties.focusable;
      if (t1 != null)
        config.set$isFocusable(t1);
      t1 = properties.focused;
      if (t1 != null)
        config.set$isFocused(t1);
      t1 = properties.enabled;
      if (t1 != null)
        config.set$isEnabled(t1);
      t1 = properties.inMutuallyExclusiveGroup;
      if (t1 != null)
        config.set$isInMutuallyExclusiveGroup(t1);
      t1 = properties.obscured;
      if (t1 != null)
        config.set$isObscured(t1);
      t1 = properties.multiline;
      if (t1 != null)
        config.set$isMultiline(t1);
      t1 = properties.hidden;
      if (t1 != null)
        config.set$isHidden(t1);
      t1 = properties.header;
      if (t1 != null)
        config.set$isHeader(t1);
      t1 = properties.headingLevel;
      if (t1 != null)
        config.set$headingLevel(t1);
      t1 = properties.scopesRoute;
      if (t1 != null)
        config.set$scopesRoute(t1);
      t1 = properties.namesRoute;
      if (t1 != null)
        config.set$namesRoute(t1);
      t1 = properties.liveRegion;
      if (t1 != null)
        config.set$liveRegion(t1);
      t1 = properties.maxValueLength;
      if (t1 != null)
        config.set$maxValueLength(t1);
      t1 = properties.currentValueLength;
      if (t1 != null)
        config.set$currentValueLength(t1);
      t1 = properties.toggled;
      if (t1 != null)
        config.set$isToggled(t1);
      t1 = properties.image;
      if (t1 != null)
        config.set$isImage(t1);
      t1 = properties.label;
      if (t1 != null)
        config.set$label(t1);
      t1 = properties.value;
      if (t1 != null)
        config.set$value(t1);
      t1 = properties.increasedValue;
      if (t1 != null)
        config.set$increasedValue(t1);
      t1 = properties.decreasedValue;
      if (t1 != null)
        config.set$decreasedValue(t1);
      t1 = properties.hint;
      if (t1 != null)
        config.set$hint(t1);
      t1 = properties.textDirection;
      if (t1 != null)
        config.set$textDirection(t1);
      t1 = properties.onTap;
      if (t1 != null)
        config.set$onTap(t1);
      t1 = properties.onLongPress;
      if (t1 != null)
        config.set$onLongPress(t1);
      t1 = properties.onScrollLeft;
      if (t1 != null)
        config.set$onScrollLeft(t1);
      t1 = properties.onScrollRight;
      if (t1 != null)
        config.set$onScrollRight(t1);
      t1 = properties.onScrollUp;
      if (t1 != null)
        config.set$onScrollUp(t1);
      t1 = properties.onScrollDown;
      if (t1 != null)
        config.set$onScrollDown(t1);
      t1 = properties.onIncrease;
      if (t1 != null)
        config.set$onIncrease(t1);
      t1 = properties.onDecrease;
      if (t1 != null)
        config.set$onDecrease(t1);
      t1 = properties.onCopy;
      if (t1 != null)
        config.set$onCopy(t1);
      t1 = properties.onCut;
      if (t1 != null)
        config.set$onCut(t1);
      t1 = properties.onPaste;
      if (t1 != null)
        config.set$onPaste(t1);
      t1 = properties.onMoveCursorForwardByCharacter;
      if (t1 != null)
        config.set$onMoveCursorForwardByCharacter(t1);
      t1 = properties.onMoveCursorBackwardByCharacter;
      if (t1 != null)
        config.set$onMoveCursorBackwardByCharacter(t1);
      t1 = properties.onSetSelection;
      if (t1 != null)
        config.set$onSetSelection(t1);
      t1 = properties.onSetText;
      if (t1 != null)
        config.set$onSetText(t1);
      t1 = properties.onDidGainAccessibilityFocus;
      if (t1 != null)
        config.set$onDidGainAccessibilityFocus(t1);
      t1 = properties.onDidLoseAccessibilityFocus;
      if (t1 != null)
        config.set$onDidLoseAccessibilityFocus(t1);
      t1 = properties.onFocus;
      if (t1 != null)
        config.set$onFocus(t1);
      t1 = properties.onDismiss;
      if (t1 != null)
        config.set$onDismiss(t1);
      newChild.updateWith$2$childrenInInversePaintOrder$config(D.List_empty4, config);
      newChild.set$rect(newSemantics.get$rect());
      newChild.set$transform(newSemantics.get$transform());
      newChild.set$tags(newSemantics.get$tags());
      return newChild;
    },
    CustomPainter: function CustomPainter() {
    },
    RenderCustomPaint: function RenderCustomPaint(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._custom_paint$_painter = t0;
      _._foregroundPainter = t1;
      _._preferredSize = t2;
      _.isComplex = t3;
      _.willChange = t4;
      _._foregroundSemanticsNodes = _._backgroundSemanticsNodes = _._foregroundSemanticsBuilder = _._backgroundSemanticsBuilder = null;
      _.RenderObjectWithChildMixin__child = t5;
      _._layoutCacheStorage = t6;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t7;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    DebugOverflowIndicatorMixin: function DebugOverflowIndicatorMixin() {
    },
    _AxisSize_constructor__(_size) {
      return _size;
    },
    _AxisSize_constructor_(crossAxisExtent, mainAxisExtent) {
      return A._AxisSize_constructor__(E.Size$(mainAxisExtent, crossAxisExtent));
    },
    _AxisSize_constructor_fromSize(direction, size) {
      return A._AxisSize_constructor__(A._AxisSize__convert(size, direction));
    },
    _AxisSize__convert(size, direction) {
      var t1;
      switch (direction.index) {
        case 0:
          t1 = size;
          break;
        case 1:
          t1 = size.get$flipped();
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    _AxisSize_get_mainAxisExtent(_this) {
      return _this.get$width();
    },
    _AxisSize_get_crossAxisExtent(_this) {
      return _this.get$height();
    },
    _AxisSize_toSize(_this, direction) {
      return A._AxisSize__convert(_this, direction);
    },
    _AxisSize_applyConstraints(_this, constraints, direction) {
      var t1;
      switch (direction.index) {
        case 0:
          t1 = constraints;
          break;
        case 1:
          t1 = constraints.get$flipped();
          break;
        default:
          t1 = null;
      }
      return A._AxisSize_constructor__(t1.constrain$1(_this));
    },
    _AxisSize__(_this, other) {
      var t1 = _this.get$width(),
        t2 = other.get$width();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return A._AxisSize_constructor__(E.Size$(t1 + t2, E.max(_this.get$height(), other.get$height(), type$.double)));
    },
    _AscentDescent_constructor__(ascentDescent) {
      return ascentDescent;
    },
    _AscentDescent_constructor_(baselineOffset, crossSize) {
      return baselineOffset == null ? null : A._AscentDescent_constructor__(new B._Record_2(baselineOffset, crossSize - baselineOffset));
    },
    _AscentDescent_get_baselineOffset(_this) {
      return _this == null ? null : _this._0;
    },
    _AscentDescent__(_this, other) {
      var _0_4_isSet, v, t1, _0_4;
      $label0$0: {
        _0_4_isSet = _this == null;
        v = null;
        if (_0_4_isSet) {
          t1 = type$.nullable_Record_2_double_and_double._is(other);
          if (t1)
            v = other;
          _0_4 = other;
        } else {
          _0_4 = null;
          t1 = false;
        }
        if (!t1) {
          t1 = false;
          if (type$.nullable_Record_2_double_and_double._is(_this)) {
            t1 = (_0_4_isSet ? _0_4 : other) == null;
            v = _this;
          }
        } else
          t1 = true;
        if (t1) {
          t1 = v;
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    },
    _LayoutSizes$(axisSize, baselineOffset, mainAxisFreeSpace, spacePerFlex) {
      return new A._LayoutSizes(axisSize, mainAxisFreeSpace, baselineOffset, spacePerFlex);
    },
    FlexParentData$() {
      return new A.FlexParentData(null, null, D.Offset_0_0);
    },
    RenderFlex$(clipBehavior, crossAxisAlignment, direction, mainAxisAlignment, mainAxisSize, textBaseline, textDirection, verticalDirection) {
      var i, _null = null,
        t1 = E.LayerHandle$(type$.ClipRectLayer),
        _list = J.JSArray_JSArray$allocateFixed(4, type$.TextPainter);
      for (i = 0; i < 4; ++i)
        F.JSArray_methods.$indexSet(_list, i, A.TextPainter$(_null, _null, _null, _null, _null, D.TextAlign_4, D.TextDirection_1, _null, D._LinearTextScaler_1, C.TextWidthBasis_0));
      t1 = new A.RenderFlex(direction, mainAxisAlignment, mainAxisSize, crossAxisAlignment, textDirection, verticalDirection, textBaseline, clipBehavior, t1, _list, true, 0, _null, _null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderFlex$9$children$clipBehavior$crossAxisAlignment$direction$mainAxisAlignment$mainAxisSize$textBaseline$textDirection$verticalDirection(_null, clipBehavior, crossAxisAlignment, direction, mainAxisAlignment, mainAxisSize, textBaseline, textDirection, verticalDirection);
      return t1;
    },
    RenderFlex__getFlex(child) {
      var t1 = child.parentData;
      t1.toString;
      type$.FlexParentData._as(t1);
      return 0;
    },
    RenderFlex__getFit(child) {
      var t1 = child.parentData;
      t1.toString;
      type$.FlexParentData._as(t1);
      return C.FlexFit_0;
    },
    _LayoutSizes: function _LayoutSizes(t0, t1, t2, t3) {
      var _ = this;
      _.axisSize = t0;
      _.mainAxisFreeSpace = t1;
      _.baselineOffset = t2;
      _.spacePerFlex = t3;
    },
    FlexFit: function FlexFit(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    FlexParentData: function FlexParentData(t0, t1, t2) {
      this.ContainerParentDataMixin_previousSibling = t0;
      this.ContainerParentDataMixin_nextSibling = t1;
      this.offset = t2;
    },
    MainAxisSize: function MainAxisSize(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    MainAxisAlignment: function MainAxisAlignment(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    CrossAxisAlignment: function CrossAxisAlignment(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    RenderFlex: function RenderFlex(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _._flex$_direction = t0;
      _._mainAxisAlignment = t1;
      _._mainAxisSize = t2;
      _._crossAxisAlignment = t3;
      _._flex$_textDirection = t4;
      _._verticalDirection = t5;
      _._flex$_textBaseline = t6;
      _._flex$_overflow = 0;
      _._clipBehavior = t7;
      _._clipRectLayer = t8;
      _.DebugOverflowIndicatorMixin__indicatorLabel = t9;
      _.DebugOverflowIndicatorMixin__overflowReportNeeded = t10;
      _.ContainerRenderObjectMixin__childCount = t11;
      _.ContainerRenderObjectMixin__firstChild = t12;
      _.ContainerRenderObjectMixin__lastChild = t13;
      _._layoutCacheStorage = t14;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t15;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderFlex_computeDryBaseline_constraintsForChild: function RenderFlex_computeDryBaseline_constraintsForChild(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.sizes = t1;
      _.constraints = t2;
      _.nonFlexConstraints = t3;
    },
    _RenderFlex_RenderBox_ContainerRenderObjectMixin: function _RenderFlex_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    _RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin: function _RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin() {
    },
    PerformanceOverlayLayer$(optionsMask, overlayRect) {
      var t1 = new A.PerformanceOverlayLayer(overlayRect, optionsMask, B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), E.LayerHandle$(type$.Layer));
      t1.Layer$0();
      return t1;
    },
    LeaderLayer$(link, offset) {
      var t1 = new A.LeaderLayer(link, offset, B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), E.LayerHandle$(type$.Layer));
      t1.Layer$0();
      return t1;
    },
    PerformanceOverlayLayer: function PerformanceOverlayLayer(t0, t1, t2, t3) {
      var _ = this;
      _._overlayRect = t0;
      _.optionsMask = t1;
      _._callbacks = t2;
      _._compositionCallbackCount = 0;
      _._parentHandle = t3;
      _._refCount = 0;
      _._layer$_parent = null;
      _._needsAddToScene = true;
      _._layer$_owner = _._engineLayer = null;
      _._layer$_depth = 0;
      _._previousSibling = _._nextSibling = null;
    },
    LeaderLayer: function LeaderLayer(t0, t1, t2, t3) {
      var _ = this;
      _._layer$_link = t0;
      _._layer$_offset = t1;
      _._layer$_lastChild = _._firstChild = null;
      _._callbacks = t2;
      _._compositionCallbackCount = 0;
      _._parentHandle = t3;
      _._refCount = 0;
      _._layer$_parent = null;
      _._needsAddToScene = true;
      _._layer$_owner = _._engineLayer = null;
      _._layer$_depth = 0;
      _._previousSibling = _._nextSibling = null;
    },
    ContainerParentDataMixin: function ContainerParentDataMixin() {
    },
    ContainerRenderObjectMixin: function ContainerRenderObjectMixin() {
    },
    RelayoutWhenSystemFontsChangeMixin: function RelayoutWhenSystemFontsChangeMixin() {
    },
    RelayoutWhenSystemFontsChangeMixin__scheduleSystemFontsUpdate_closure: function RelayoutWhenSystemFontsChangeMixin__scheduleSystemFontsUpdate_closure(t0) {
      this.$this = t0;
    },
    TextParentData$() {
      return new A.TextParentData(null, null);
    },
    RenderInlineChildrenContainerDefaults__layoutChild(child, childConstraints, layoutChild, getBaseline) {
      var t1 = child.parentData;
      t1.toString;
      type$.TextParentData._as(t1);
      return C.PlaceholderDimensions_ePs;
    },
    RenderParagraph$(text, locale, maxLines, overflow, registrar, selectionColor, softWrap, strutStyle, textAlign, textDirection, textHeightBehavior, textScaler, textWidthBasis) {
      var _null = null,
        t1 = B.boolConversionCheck(textScaler.$eq(0, D._LinearTextScaler_1)) ? E._LinearTextScaler$(1) : textScaler;
      t1 = new A.RenderParagraph(A.TextPainter$(overflow === C.TextOverflow_2 ? "\u2026" : _null, locale, maxLines, strutStyle, text, textAlign, textDirection, textHeightBehavior, t1, textWidthBasis), softWrap, overflow, selectionColor, false, 0, _null, _null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderParagraph$15$children$locale$maxLines$overflow$registrar$selectionColor$softWrap$strutStyle$textAlign$textDirection$textHeightBehavior$textScaleFactor$textScaler$textWidthBasis(text, _null, locale, maxLines, overflow, registrar, selectionColor, softWrap, strutStyle, textAlign, textDirection, textHeightBehavior, 1, textScaler, textWidthBasis);
      return t1;
    },
    _SelectableFragment$(fullText, paragraph, range) {
      var t1 = new A._SelectableFragment(range, paragraph, fullText, $.$get$ChangeNotifier__emptyListeners());
      t1._SelectableFragment$3$fullText$paragraph$range(fullText, paragraph, range);
      return t1;
    },
    _SelectableFragment__compareTextPositions(position, otherPosition) {
      var t1 = position.offset,
        t2 = otherPosition.offset;
      if (typeof t1 !== "number")
        return t1.$lt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (t1 < t2)
        return 1;
      else if (t1 > t2)
        return -1;
      else {
        t1 = position.affinity;
        t2 = J.getInterceptor$(t1);
        if (B.boolConversionCheck(t2.$eq(t1, otherPosition.affinity)))
          return 0;
        else
          return B.boolConversionCheck(t2.$eq(t1, D.TextAffinity_0)) ? 1 : -1;
      }
    },
    TextParentData: function TextParentData(t0, t1) {
      var _ = this;
      _.span = _._paragraph$_offset = null;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
    },
    RenderInlineChildrenContainerDefaults: function RenderInlineChildrenContainerDefaults() {
    },
    RenderInlineChildrenContainerDefaults_hitTestInlineChildren_closure: function RenderInlineChildrenContainerDefaults_hitTestInlineChildren_closure(t0) {
      this._box_0 = t0;
    },
    RenderParagraph: function RenderParagraph(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._textPainter = t0;
      _._registrar = _._lastSelectableFragments = _._cachedCombinedSemanticsInfos = _._cachedAttributedLabels = _._textIntrinsicsCache = null;
      _._softWrap = t1;
      _._overflow = t2;
      _._selectionColor = t3;
      _._needsClipping = false;
      _._cachedChildNodes = _._semanticsInfo = _._placeholderDimensions = _._overflowShader = null;
      _.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack = t4;
      _.ContainerRenderObjectMixin__childCount = t5;
      _.ContainerRenderObjectMixin__firstChild = t6;
      _.ContainerRenderObjectMixin__lastChild = t7;
      _._layoutCacheStorage = t8;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t9;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderParagraph_markNeedsLayout_closure: function RenderParagraph_markNeedsLayout_closure() {
    },
    RenderParagraph_selectionColor_closure: function RenderParagraph_selectionColor_closure() {
    },
    RenderParagraph__createShowOnScreenFor_closure: function RenderParagraph__createShowOnScreenFor_closure(t0, t1) {
      this.$this = t0;
      this.key = t1;
    },
    _SelectableFragment: function _SelectableFragment(t0, t1, t2, t3) {
      var _ = this;
      _.range = t0;
      _.paragraph = t1;
      _.fullText = t2;
      _._textSelectionEnd = _._textSelectionStart = null;
      _._selectableContainsOriginTextBoundary = false;
      _._endHandleLayerLink = _._startHandleLayerLink = null;
      _.___SelectableFragment__selectionGeometry_A = $;
      _._cachedRect = _._cachedBoundingBoxes = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t3;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = false;
    },
    _SelectableFragment_paint_closure: function _SelectableFragment_paint_closure() {
    },
    _SelectableFragment_paint_closure0: function _SelectableFragment_paint_closure0() {
    },
    _RenderParagraph_RenderBox_ContainerRenderObjectMixin: function _RenderParagraph_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderInlineChildrenContainerDefaults: function _RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderInlineChildrenContainerDefaults() {
    },
    _RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderInlineChildrenContainerDefaults_RelayoutWhenSystemFontsChangeMixin: function _RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderInlineChildrenContainerDefaults_RelayoutWhenSystemFontsChangeMixin() {
    },
    _TextParentData_ParentData_ContainerParentDataMixin: function _TextParentData_ParentData_ContainerParentDataMixin() {
    },
    __SelectableFragment_Object_Selectable: function __SelectableFragment_Object_Selectable() {
    },
    __SelectableFragment_Object_Selectable_Diagnosticable: function __SelectableFragment_Object_Selectable_Diagnosticable() {
    },
    __SelectableFragment_Object_Selectable_Diagnosticable_ChangeNotifier: function __SelectableFragment_Object_Selectable_Diagnosticable_ChangeNotifier() {
    },
    RenderPerformanceOverlay$(optionsMask) {
      var t1 = new A.RenderPerformanceOverlay(optionsMask, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      return t1;
    },
    RenderPerformanceOverlay: function RenderPerformanceOverlay(t0, t1, t2) {
      var _ = this;
      _._optionsMask = t0;
      _._layoutCacheStorage = t1;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderAnimatedOpacity$(alwaysIncludeSemantics, opacity) {
      var _null = null,
        t1 = new A.RenderAnimatedOpacity(_null, _null, _null, _null, _null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(_null);
      t1.RenderAnimatedOpacity$3$alwaysIncludeSemantics$child$opacity(alwaysIncludeSemantics, _null, opacity);
      return t1;
    },
    ShapeBorderClipper$(shape, textDirection) {
      return new A.ShapeBorderClipper(shape, textDirection);
    },
    RenderClipPath$(clipBehavior, clipper) {
      var t1 = new A.RenderClipPath(clipper, clipBehavior, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    RenderPhysicalModel$(borderRadius, clipBehavior, color, elevation, shadowColor, shape) {
      var t1 = new A.RenderPhysicalModel(shape, borderRadius, elevation, shadowColor, color, null, clipBehavior, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    RenderPhysicalShape$(clipBehavior, clipper, color, elevation, shadowColor) {
      var t1 = new A.RenderPhysicalShape(elevation, shadowColor, color, clipper, clipBehavior, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    RenderDecoratedBox$(configuration, decoration, position) {
      var t1 = new A.RenderDecoratedBox(decoration, position, configuration, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    RenderFractionalTranslation$(transformHitTests, translation) {
      var t1 = new A.RenderFractionalTranslation(translation, transformHitTests, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    RenderPointerListener$(behavior, onPointerCancel, onPointerDown, onPointerHover, onPointerMove, onPointerPanZoomEnd, onPointerPanZoomStart, onPointerPanZoomUpdate, onPointerSignal, onPointerUp) {
      var t1 = new A.RenderPointerListener(onPointerDown, onPointerMove, onPointerUp, onPointerHover, onPointerCancel, onPointerPanZoomStart, onPointerPanZoomUpdate, onPointerPanZoomEnd, onPointerSignal, behavior, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    RenderMouseRegion$(cursor, hitTestBehavior, onEnter, onExit, onHover, opaque) {
      var t1 = hitTestBehavior == null ? C.HitTestBehavior_1 : hitTestBehavior;
      t1 = new A.RenderMouseRegion(opaque, onEnter, onHover, onExit, cursor, t1, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    RenderRepaintBoundary$() {
      var t1 = new A.RenderRepaintBoundary(null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    RenderIgnorePointer$(ignoring, ignoringSemantics) {
      var t1 = new A.RenderIgnorePointer(ignoring, ignoringSemantics, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    RenderOffstage$(offstage) {
      var t1 = new A.RenderOffstage(offstage, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    RenderAbsorbPointer$(absorbing, ignoringSemantics) {
      var t1 = new A.RenderAbsorbPointer(absorbing, ignoringSemantics, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    RenderSemanticsGestureHandler$() {
      var t1 = new A.RenderSemanticsGestureHandler(C.HitTestBehavior_0, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    RenderBlockSemantics$(blocking) {
      var t1 = new A.RenderBlockSemantics(blocking, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    RenderMergeSemantics$() {
      var t1 = new A.RenderMergeSemantics(null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    RenderExcludeSemantics$(excluding) {
      var t1 = new A.RenderExcludeSemantics(excluding, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    HitTestBehavior: function HitTestBehavior(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    RenderProxyBoxWithHitTestBehavior: function RenderProxyBoxWithHitTestBehavior() {
    },
    RenderAnimatedOpacityMixin: function RenderAnimatedOpacityMixin() {
    },
    RenderAnimatedOpacity: function RenderAnimatedOpacity(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.RenderAnimatedOpacityMixin__alpha = t0;
      _.RenderAnimatedOpacityMixin__currentlyIsRepaintBoundary = t1;
      _.RenderAnimatedOpacityMixin__opacity = t2;
      _.RenderAnimatedOpacityMixin__alwaysIncludeSemantics = t3;
      _.RenderObjectWithChildMixin__child = t4;
      _._layoutCacheStorage = t5;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    CustomClipper: function CustomClipper() {
    },
    ShapeBorderClipper: function ShapeBorderClipper(t0, t1) {
      this.shape = t0;
      this.textDirection = t1;
    },
    _RenderCustomClip: function _RenderCustomClip() {
    },
    RenderClipPath: function RenderClipPath(t0, t1, t2, t3, t4) {
      var _ = this;
      _._clipper = t0;
      _._clip = null;
      _._proxy_box$_clipBehavior = t1;
      _._debugText = null;
      _.RenderObjectWithChildMixin__child = t2;
      _._layoutCacheStorage = t3;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    _RenderPhysicalModelBase: function _RenderPhysicalModelBase() {
    },
    RenderPhysicalModel: function RenderPhysicalModel(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._proxy_box$_shape = t0;
      _._proxy_box$_borderRadius = t1;
      _._proxy_box$_elevation = t2;
      _._proxy_box$_shadowColor = t3;
      _._proxy_box$_color = t4;
      _._clipper = t5;
      _._clip = null;
      _._proxy_box$_clipBehavior = t6;
      _._debugText = null;
      _.RenderObjectWithChildMixin__child = t7;
      _._layoutCacheStorage = t8;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t9;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderPhysicalModel_paint_closure: function RenderPhysicalModel_paint_closure(t0, t1) {
      this.$this = t0;
      this.usesSaveLayer = t1;
    },
    RenderPhysicalShape: function RenderPhysicalShape(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._proxy_box$_elevation = t0;
      _._proxy_box$_shadowColor = t1;
      _._proxy_box$_color = t2;
      _._clipper = t3;
      _._clip = null;
      _._proxy_box$_clipBehavior = t4;
      _._debugText = null;
      _.RenderObjectWithChildMixin__child = t5;
      _._layoutCacheStorage = t6;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t7;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderPhysicalShape_paint_closure: function RenderPhysicalShape_paint_closure(t0, t1) {
      this.$this = t0;
      this.usesSaveLayer = t1;
    },
    DecorationPosition: function DecorationPosition(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    RenderDecoratedBox: function RenderDecoratedBox(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._proxy_box$_painter = null;
      _._proxy_box$_decoration = t0;
      _._proxy_box$_position = t1;
      _._proxy_box$_configuration = t2;
      _.RenderObjectWithChildMixin__child = t3;
      _._layoutCacheStorage = t4;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t5;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderFractionalTranslation: function RenderFractionalTranslation(t0, t1, t2, t3, t4) {
      var _ = this;
      _._translation = t0;
      _.transformHitTests = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._layoutCacheStorage = t3;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderFractionalTranslation_hitTestChildren_closure: function RenderFractionalTranslation_hitTestChildren_closure(t0) {
      this.$this = t0;
    },
    RenderPointerListener: function RenderPointerListener(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.onPointerDown = t0;
      _.onPointerMove = t1;
      _.onPointerUp = t2;
      _.onPointerHover = t3;
      _.onPointerCancel = t4;
      _.onPointerPanZoomStart = t5;
      _.onPointerPanZoomUpdate = t6;
      _.onPointerPanZoomEnd = t7;
      _.onPointerSignal = t8;
      _.behavior = t9;
      _.RenderObjectWithChildMixin__child = t10;
      _._layoutCacheStorage = t11;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t12;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderMouseRegion: function RenderMouseRegion(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._opaque = t0;
      _.onEnter = t1;
      _.onHover = t2;
      _.onExit = t3;
      _._cursor = t4;
      _._validForMouseTracker = true;
      _.behavior = t5;
      _.RenderObjectWithChildMixin__child = t6;
      _._layoutCacheStorage = t7;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t8;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderRepaintBoundary: function RenderRepaintBoundary(t0, t1, t2) {
      var _ = this;
      _.RenderObjectWithChildMixin__child = t0;
      _._layoutCacheStorage = t1;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderIgnorePointer: function RenderIgnorePointer(t0, t1, t2, t3, t4) {
      var _ = this;
      _._ignoring = t0;
      _._ignoringSemantics = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._layoutCacheStorage = t3;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderOffstage: function RenderOffstage(t0, t1, t2, t3) {
      var _ = this;
      _._offstage = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._layoutCacheStorage = t2;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderAbsorbPointer: function RenderAbsorbPointer(t0, t1, t2, t3, t4) {
      var _ = this;
      _._absorbing = t0;
      _._ignoringSemantics = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._layoutCacheStorage = t3;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderSemanticsGestureHandler: function RenderSemanticsGestureHandler(t0, t1, t2, t3) {
      var _ = this;
      _._onVerticalDragUpdate = _._onHorizontalDragUpdate = _._proxy_box$_onLongPress = _._proxy_box$_onTap = null;
      _.behavior = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._layoutCacheStorage = t2;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderBlockSemantics: function RenderBlockSemantics(t0, t1, t2, t3) {
      var _ = this;
      _._blocking = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._layoutCacheStorage = t2;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderMergeSemantics: function RenderMergeSemantics(t0, t1, t2) {
      var _ = this;
      _.RenderObjectWithChildMixin__child = t0;
      _._layoutCacheStorage = t1;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderExcludeSemantics: function RenderExcludeSemantics(t0, t1, t2, t3) {
      var _ = this;
      _._excluding = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._layoutCacheStorage = t2;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    _RenderAnimatedOpacity_RenderProxyBox_RenderAnimatedOpacityMixin: function _RenderAnimatedOpacity_RenderProxyBox_RenderAnimatedOpacityMixin() {
    },
    SelectionUtils_getResultBasedOnRect(targetRect, point) {
      var t1, t2;
      if (B.boolConversionCheck(targetRect.contains$1(0, point)))
        return C.SelectionResult_2;
      t1 = point.get$dy();
      t2 = targetRect.top;
      if (typeof t1 !== "number")
        return t1.$lt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (t1 < t2)
        return C.SelectionResult_1;
      t1 = point.get$dy();
      t2 = targetRect.bottom;
      if (typeof t1 !== "number")
        return t1.$gt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (t1 > t2)
        return C.SelectionResult_0;
      t1 = point.get$dx();
      t2 = targetRect.right;
      if (typeof t1 !== "number")
        return t1.$ge();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 >= t2 ? C.SelectionResult_0 : C.SelectionResult_1;
    },
    SelectionUtils_adjustDragOffset(targetRect, point, direction) {
      var t1, t2;
      if (B.boolConversionCheck(targetRect.contains$1(0, point)))
        return point;
      t1 = point.get$dy();
      t2 = targetRect.top;
      if (typeof t1 !== "number")
        return t1.$le();
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (!(t1 <= t2)) {
        t1 = point.get$dy();
        t2 = targetRect.bottom;
        if (typeof t1 !== "number")
          return t1.$le();
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (t1 <= t2) {
          t1 = point.get$dx();
          t2 = targetRect.left;
          if (typeof t1 !== "number")
            return t1.$le();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t2 = t1 <= t2;
          t1 = t2;
        } else
          t1 = false;
      } else
        t1 = true;
      if (t1)
        return direction === D.TextDirection_1 ? targetRect.get$topLeft() : targetRect.get$topRight();
      else
        return direction === D.TextDirection_1 ? targetRect.get$bottomRight() : targetRect.get$bottomLeft();
    },
    SelectParagraphSelectionEvent$(absorb, globalPosition) {
      return new A.SelectParagraphSelectionEvent(globalPosition, absorb, C.SelectionEventType_5);
    },
    SelectionEdgeUpdateEvent$forStart(globalPosition) {
      return new A.SelectionEdgeUpdateEvent(globalPosition, C.TextGranularity_0, C.SelectionEventType_0);
    },
    SelectionEdgeUpdateEvent$forEnd(globalPosition) {
      return new A.SelectionEdgeUpdateEvent(globalPosition, C.TextGranularity_0, C.SelectionEventType_1);
    },
    SelectionGeometry$(endSelectionPoint, hasContent, selectionRects, startSelectionPoint, $status) {
      return new A.SelectionGeometry(startSelectionPoint, endSelectionPoint, $status, selectionRects, hasContent);
    },
    SelectionPoint$(handleType, lineHeight, localPosition) {
      return new A.SelectionPoint(localPosition, lineHeight, handleType);
    },
    SelectionResult: function SelectionResult(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    Selectable: function Selectable() {
    },
    SelectionRegistrant: function SelectionRegistrant() {
    },
    SelectionEventType: function SelectionEventType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    TextGranularity: function TextGranularity(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    SelectionEvent: function SelectionEvent() {
    },
    ClearSelectionEvent: function ClearSelectionEvent(t0) {
      this.type = t0;
    },
    SelectParagraphSelectionEvent: function SelectParagraphSelectionEvent(t0, t1, t2) {
      this.globalPosition = t0;
      this.absorb = t1;
      this.type = t2;
    },
    SelectionEdgeUpdateEvent: function SelectionEdgeUpdateEvent(t0, t1, t2) {
      this.globalPosition = t0;
      this.granularity = t1;
      this.type = t2;
    },
    SelectionExtendDirection: function SelectionExtendDirection(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    SelectionStatus: function SelectionStatus(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    SelectionGeometry: function SelectionGeometry(t0, t1, t2, t3, t4) {
      var _ = this;
      _.startSelectionPoint = t0;
      _.endSelectionPoint = t1;
      _.status = t2;
      _.selectionRects = t3;
      _.hasContent = t4;
    },
    SelectionPoint: function SelectionPoint(t0, t1, t2) {
      this.localPosition = t0;
      this.lineHeight = t1;
      this.handleType = t2;
    },
    TextSelectionHandleType: function TextSelectionHandleType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _SelectionPoint_Object_Diagnosticable: function _SelectionPoint_Object_Diagnosticable() {
    },
    RenderPadding$(padding, textDirection) {
      var t1 = new A.RenderPadding(padding, textDirection, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderShiftedBox$1(null);
      return t1;
    },
    RenderPositionedBox$(alignment, heightFactor, textDirection, widthFactor) {
      var t1 = new A.RenderPositionedBox(widthFactor, heightFactor, alignment, textDirection, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderShiftedBox$1(null);
      return t1;
    },
    RenderShiftedBox: function RenderShiftedBox() {
    },
    RenderShiftedBox_hitTestChildren_closure: function RenderShiftedBox_hitTestChildren_closure(t0) {
      this.child = t0;
    },
    RenderPadding: function RenderPadding(t0, t1, t2, t3, t4) {
      var _ = this;
      _._resolvedPaddingCache = null;
      _._padding = t0;
      _._shifted_box$_textDirection = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._layoutCacheStorage = t3;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderAligningShiftedBox: function RenderAligningShiftedBox() {
    },
    RenderPositionedBox: function RenderPositionedBox(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._widthFactor = t0;
      _._heightFactor = t1;
      _._resolvedAlignment = null;
      _._alignment = t2;
      _._shifted_box$_textDirection = t3;
      _.RenderObjectWithChildMixin__child = t4;
      _._layoutCacheStorage = t5;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    _RenderShiftedBox_RenderBox_RenderObjectWithChildMixin: function _RenderShiftedBox_RenderBox_RenderObjectWithChildMixin() {
    },
    RelativeRect$fromSize(rect, container) {
      var t5, t6,
        t1 = rect.left,
        t2 = rect.top,
        t3 = container.get$width(),
        t4 = rect.right;
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t5 = container.get$height();
      t6 = rect.bottom;
      if (typeof t5 !== "number")
        return t5.$sub();
      if (typeof t6 !== "number")
        return B.iae(t6);
      return new A.RelativeRect(t1, t2, t3 - t4, t5 - t6);
    },
    StackParentData$() {
      return new A.StackParentData(null, null, D.Offset_0_0);
    },
    RenderStack$(alignment, clipBehavior, fit, textDirection) {
      var t1 = new A.RenderStack(alignment, textDirection, fit, clipBehavior, E.LayerHandle$(type$.ClipRectLayer), 0, null, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderStack$5$alignment$children$clipBehavior$fit$textDirection(alignment, null, clipBehavior, fit, textDirection);
      return t1;
    },
    RenderStack_layoutPositionedChild(child, childParentData, size, alignment) {
      var _0_1, t1, left, _0_3, right, t2, _1_1, $top, _1_3, bottom, t3, t4, t5, _null = null;
      child.layout$2$parentUsesSize(childParentData.positionedChildConstraints$1(size), true);
      $label0$0: {
        _0_1 = childParentData.left;
        t1 = _0_1;
        t1 = t1 != null;
        if (t1)
          if (_0_1 == null)
            B._asDouble(_0_1);
        if (t1) {
          left = _0_1 == null ? B._asDouble(_0_1) : _0_1;
          t1 = left;
          break $label0$0;
        }
        _0_3 = childParentData.right;
        t1 = _0_3;
        t1 = t1 != null;
        if (t1)
          if (_0_3 == null)
            B._asDouble(_0_3);
        if (t1) {
          right = _0_3 == null ? B._asDouble(_0_3) : _0_3;
          t1 = size.get$width();
          if (typeof t1 !== "number")
            return t1.$sub();
          t2 = child.get$size().get$width();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t2 = t1 - right - t2;
          t1 = t2;
          break $label0$0;
        }
        t1 = alignment.alongOffset$1(type$.Offset._as(size.$sub(0, child.get$size()))).get$dx();
        break $label0$0;
      }
      $label1$1: {
        _1_1 = childParentData.top;
        t2 = _1_1;
        t2 = t2 != null;
        if (t2)
          if (_1_1 == null)
            B._asDouble(_1_1);
        if (t2) {
          $top = _1_1 == null ? B._asDouble(_1_1) : _1_1;
          t2 = $top;
          break $label1$1;
        }
        _1_3 = childParentData.bottom;
        t2 = _1_3;
        t2 = t2 != null;
        if (t2)
          if (_1_3 == null)
            B._asDouble(_1_3);
        if (t2) {
          bottom = _1_3 == null ? B._asDouble(_1_3) : _1_3;
          t2 = size.get$height();
          if (typeof t2 !== "number")
            return t2.$sub();
          t3 = child.get$size().get$height();
          if (typeof t3 !== "number")
            return B.iae(t3);
          t3 = t2 - bottom - t3;
          t2 = t3;
          break $label1$1;
        }
        t2 = alignment.alongOffset$1(type$.Offset._as(size.$sub(0, child.get$size()))).get$dy();
        break $label1$1;
      }
      childParentData.offset = E.Offset$(t1, t2);
      t3 = true;
      if (!(t1 < 0)) {
        t4 = child.get$size().get$width();
        if (typeof t4 !== "number")
          return B.iae(t4);
        t5 = size.get$width();
        if (typeof t5 !== "number")
          return B.iae(t5);
        if (!(t1 + t4 > t5))
          if (!(t2 < 0)) {
            t1 = child.get$size().get$height();
            if (typeof t1 !== "number")
              return B.iae(t1);
            t3 = size.get$height();
            if (typeof t3 !== "number")
              return B.iae(t3);
            t3 = t2 + t1 > t3;
            t1 = t3;
          } else
            t1 = t3;
        else
          t1 = t3;
      } else
        t1 = t3;
      return t1;
    },
    RenderStack__baselineForChild(child, stackSize, nonPositionedChildConstraints, alignment, baseline) {
      var childConstraints, baselineOffset, _0_1, t2, $top, _0_3, bottom, _null = null,
        t1 = child.parentData;
      t1.toString;
      type$.StackParentData._as(t1);
      childConstraints = B.boolConversionCheck(t1.get$isPositioned()) ? t1.positionedChildConstraints$1(stackSize) : nonPositionedChildConstraints;
      baselineOffset = child.getDryBaseline$2(childConstraints, baseline);
      if (baselineOffset == null)
        return _null;
      $label0$0: {
        _0_1 = t1.top;
        t2 = _0_1;
        t2 = t2 != null;
        if (t2)
          if (_0_1 == null)
            B._asDouble(_0_1);
        if (t2) {
          $top = _0_1 == null ? B._asDouble(_0_1) : _0_1;
          t1 = $top;
          break $label0$0;
        }
        _0_3 = t1.bottom;
        t1 = _0_3;
        t1 = t1 != null;
        if (t1)
          if (_0_3 == null)
            B._asDouble(_0_3);
        if (t1) {
          bottom = _0_3 == null ? B._asDouble(_0_3) : _0_3;
          t1 = stackSize.get$height();
          if (typeof t1 !== "number")
            return t1.$sub();
          t2 = child.getDryLayout$1(childConstraints).get$height();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t2 = t1 - bottom - t2;
          t1 = t2;
          break $label0$0;
        }
        t1 = alignment.alongOffset$1(type$.Offset._as(stackSize.$sub(0, child.getDryLayout$1(childConstraints)))).get$dy();
        break $label0$0;
      }
      return baselineOffset + t1;
    },
    RelativeRect: function RelativeRect(t0, t1, t2, t3) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
    },
    StackParentData: function StackParentData(t0, t1, t2) {
      var _ = this;
      _.height = _.width = _.left = _.bottom = _.right = _.top = null;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
    },
    StackFit: function StackFit(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    RenderStack: function RenderStack(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._hasVisualOverflow = false;
      _._resolvedAlignmentCache = null;
      _._stack$_alignment = t0;
      _._stack$_textDirection = t1;
      _._fit = t2;
      _._stack$_clipBehavior = t3;
      _._stack$_clipRectLayer = t4;
      _.ContainerRenderObjectMixin__childCount = t5;
      _.ContainerRenderObjectMixin__firstChild = t6;
      _.ContainerRenderObjectMixin__lastChild = t7;
      _._layoutCacheStorage = t8;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t9;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    _RenderStack_RenderBox_ContainerRenderObjectMixin: function _RenderStack_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    Ticker$(_onTick, debugLabel) {
      var t1;
      B.createSentinel(type$.StackTrace);
      t1 = new A.Ticker(_onTick);
      t1.Ticker$2$debugLabel(_onTick, debugLabel);
      return t1;
    },
    TickerFuture$_() {
      return new A.TickerFuture(B.Completer_Completer(type$.void));
    },
    TickerFuture$complete() {
      var t1 = new A.TickerFuture(B.Completer_Completer(type$.void));
      t1.TickerFuture$complete$0();
      return t1;
    },
    TickerCanceled$(ticker) {
      return new A.TickerCanceled(ticker);
    },
    Ticker: function Ticker(t0) {
      var _ = this;
      _._ticker$_future = null;
      _._muted = false;
      _._startTime = null;
      _._onTick = t0;
      _._animationId = null;
    },
    TickerFuture: function TickerFuture(t0) {
      this._primaryCompleter = t0;
      this._completed = this._secondaryCompleter = null;
    },
    TickerFuture_whenCompleteOrCancel_thunk: function TickerFuture_whenCompleteOrCancel_thunk(t0) {
      this.callback = t0;
    },
    TickerCanceled: function TickerCanceled(t0) {
      this.ticker = t0;
    },
    OrdinalSortKey$(order) {
      return new A.OrdinalSortKey(order, null);
    },
    SemanticsSortKey: function SemanticsSortKey() {
    },
    OrdinalSortKey: function OrdinalSortKey(t0, t1) {
      this.order = t0;
      this.name = t1;
    },
    _SemanticsSortKey_Object_Diagnosticable: function _SemanticsSortKey_Object_Diagnosticable() {
    },
    SemanticsEvent: function SemanticsEvent() {
    },
    LongPressSemanticsEvent: function LongPressSemanticsEvent(t0) {
      this.type = t0;
    },
    TapSemanticEvent: function TapSemanticEvent(t0) {
      this.type = t0;
    },
    FocusSemanticEvent: function FocusSemanticEvent(t0) {
      this.type = t0;
    },
    LogicalKeyboardKey_expandSynonyms(input) {
      return J.toSet$0$ax(input.expand$1$1(0, new A.LogicalKeyboardKey_expandSynonyms_closure(), type$.LogicalKeyboardKey));
    },
    LogicalKeyboardKey_expandSynonyms_closure: function LogicalKeyboardKey_expandSynonyms_closure() {
    },
    ApplicationSwitcherDescription$(label, primaryColor) {
      return new A.ApplicationSwitcherDescription(label, primaryColor);
    },
    SystemChrome_setApplicationSwitcherDescription(description) {
      return A.SystemChrome_setApplicationSwitcherDescription$body(description);
    },
    SystemChrome_setApplicationSwitcherDescription$body(description) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void);
      var $async$SystemChrome_setApplicationSwitcherDescription = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return B._asyncAwait(D.OptionalMethodChannel_ENd.invokeMethod$1$2("SystemChrome.setApplicationSwitcherDescription", B.LinkedHashMap_LinkedHashMap$_literal(["label", description.label, "primaryColor", description.primaryColor], type$.String, type$.dynamic), type$.void), $async$SystemChrome_setApplicationSwitcherDescription);
            case 2:
              // returning from await.
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$SystemChrome_setApplicationSwitcherDescription, $async$completer);
    },
    ApplicationSwitcherDescription: function ApplicationSwitcherDescription(t0, t1) {
      this.label = t0;
      this.primaryColor = t1;
    },
    SystemSound_play(type) {
      return A.SystemSound_play$body(type);
    },
    SystemSound_play$body(type) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void);
      var $async$SystemSound_play = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return B._asyncAwait(D.OptionalMethodChannel_ENd.invokeMethod$1$2("SystemSound.play", type.toString$0(0), type$.void), $async$SystemSound_play);
            case 2:
              // returning from await.
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$SystemSound_play, $async$completer);
    },
    SystemSoundType: function SystemSoundType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    CharacterBoundary$(_text) {
      return new A.CharacterBoundary(_text);
    },
    LineBoundary$(_textLayout) {
      return new A.LineBoundary(_textLayout);
    },
    ParagraphBoundary$(_text) {
      return new A.ParagraphBoundary(_text);
    },
    DocumentBoundary$(_text) {
      return new A.DocumentBoundary(_text);
    },
    TextBoundary: function TextBoundary() {
    },
    CharacterBoundary: function CharacterBoundary(t0) {
      this._text_boundary$_text = t0;
    },
    LineBoundary: function LineBoundary(t0) {
      this._textLayout = t0;
    },
    ParagraphBoundary: function ParagraphBoundary(t0) {
      this._text_boundary$_text = t0;
    },
    DocumentBoundary: function DocumentBoundary(t0) {
      this._text_boundary$_text = t0;
    },
    SelectionChangedCause: function SelectionChangedCause(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    Action_Action$overridable(context, defaultAction, $T) {
      return defaultAction._makeOverridableAction$1(context);
    },
    CallbackAction$(onInvoke, $T) {
      return new A.CallbackAction(onInvoke, A.ObserverList$(type$.void_Function_Action_Intent), $T._eval$1("CallbackAction<0>"));
    },
    Actions$(actions, child) {
      return new A.Actions(actions, child, null);
    },
    Actions_maybeFind(context, intent, $T) {
      var t1 = {};
      t1.action = null;
      if ((intent == null ? null : J.get$runtimeType$(intent)) == null)
        B.createRuntimeType($T);
      E.Actions__visitActionsAncestors(context, new A.Actions_maybeFind_closure(t1, intent, context, $T));
      return null;
    },
    Actions__maybeFindWithoutDependingOn(context, $T) {
      var t1 = {};
      t1.action = null;
      B.createRuntimeType($T);
      E.Actions__visitActionsAncestors(context, new A.Actions__maybeFindWithoutDependingOn_closure(t1, null, $T));
      return null;
    },
    Actions_of(context) {
      var marker = context.dependOnInheritedWidgetOfExactType$1$0(type$._ActionsScope),
        t1 = marker == null ? null : marker.dispatcher;
      return t1 == null ? E.Actions__findDispatcher(context) : t1;
    },
    _ActionsState$() {
      return new A._ActionsState(B.LinkedHashSet_LinkedHashSet$_empty(type$.Action_Intent), B.Object$());
    },
    _ActionsScope$(actions, child, dispatcher, rebuildKey) {
      return new A._ActionsScope(dispatcher, actions, rebuildKey, child, null);
    },
    VoidCallbackAction$() {
      return new A.VoidCallbackAction(A.ObserverList$(type$.void_Function_Action_Intent));
    },
    DoNothingAction$(consumesKey) {
      return new A.DoNothingAction(consumesKey, A.ObserverList$(type$.void_Function_Action_Intent));
    },
    PrioritizedAction$() {
      return new A.PrioritizedAction(A.ObserverList$(type$.void_Function_Action_Intent));
    },
    _OverridableAction$(defaultAction, lookupContext, $T) {
      return new A._OverridableAction(defaultAction, lookupContext, false, false, false, false, A.ObserverList$(type$.void_Function_Action_Intent), $T._eval$1("_OverridableAction<0>"));
    },
    _OverridableContextAction$(defaultAction, lookupContext, $T) {
      return new A._OverridableContextAction(defaultAction, lookupContext, false, false, false, false, A.ObserverList$(type$.void_Function_Action_Intent), $T._eval$1("_OverridableContextAction<0>"));
    },
    _ContextActionToActionAdapter$(action, invokeContext, $T) {
      return new A._ContextActionToActionAdapter(invokeContext, action, A.ObserverList$(type$.void_Function_Action_Intent), $T._eval$1("_ContextActionToActionAdapter<0>"));
    },
    Intent: function Intent() {
    },
    Action: function Action() {
    },
    ContextAction: function ContextAction() {
    },
    CallbackAction: function CallbackAction(t0, t1, t2) {
      var _ = this;
      _.onInvoke = t0;
      _._actions$_listeners = t1;
      _._currentCallingAction = null;
      _.$ti = t2;
    },
    Actions: function Actions(t0, t1, t2) {
      this.actions = t0;
      this.child = t1;
      this.key = t2;
    },
    Actions_maybeFind_closure: function Actions_maybeFind_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.intent = t1;
      _.context = t2;
      _.T = t3;
    },
    Actions__maybeFindWithoutDependingOn_closure: function Actions__maybeFindWithoutDependingOn_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.intent = t1;
      this.T = t2;
    },
    _ActionsState: function _ActionsState(t0, t1) {
      var _ = this;
      _.listenedActions = t0;
      _.rebuildKey = t1;
      _._framework0$_element = _._widget = null;
    },
    _ActionsState__handleActionChanged_closure: function _ActionsState__handleActionChanged_closure(t0) {
      this.$this = t0;
    },
    _ActionsScope: function _ActionsScope(t0, t1, t2, t3, t4) {
      var _ = this;
      _.dispatcher = t0;
      _.actions = t1;
      _.rebuildKey = t2;
      _.child = t3;
      _.key = t4;
    },
    VoidCallbackAction: function VoidCallbackAction(t0) {
      this._actions$_listeners = t0;
      this._currentCallingAction = null;
    },
    DoNothingAction: function DoNothingAction(t0, t1) {
      this._consumesKey = t0;
      this._actions$_listeners = t1;
      this._currentCallingAction = null;
    },
    ActivateIntent: function ActivateIntent() {
    },
    ButtonActivateIntent: function ButtonActivateIntent() {
    },
    DismissIntent: function DismissIntent() {
    },
    DismissAction: function DismissAction() {
    },
    PrioritizedIntents: function PrioritizedIntents() {
    },
    PrioritizedAction: function PrioritizedAction(t0) {
      var _ = this;
      _.__PrioritizedAction__selectedIntent_A = _.__PrioritizedAction__selectedAction_A = $;
      _._actions$_listeners = t0;
      _._currentCallingAction = null;
    },
    _OverridableActionMixin: function _OverridableActionMixin() {
    },
    _OverridableAction: function _OverridableAction(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.defaultAction = t0;
      _.lookupContext = t1;
      _._OverridableActionMixin_debugAssertMutuallyRecursive = t2;
      _._OverridableActionMixin_debugAssertIsActionEnabledMutuallyRecursive = t3;
      _._OverridableActionMixin_debugAssertIsEnabledMutuallyRecursive = t4;
      _._OverridableActionMixin_debugAssertConsumeKeyMutuallyRecursive = t5;
      _._actions$_listeners = t6;
      _._currentCallingAction = null;
      _.$ti = t7;
    },
    _OverridableContextAction: function _OverridableContextAction(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.defaultAction = t0;
      _.lookupContext = t1;
      _._OverridableActionMixin_debugAssertMutuallyRecursive = t2;
      _._OverridableActionMixin_debugAssertIsActionEnabledMutuallyRecursive = t3;
      _._OverridableActionMixin_debugAssertIsEnabledMutuallyRecursive = t4;
      _._OverridableActionMixin_debugAssertConsumeKeyMutuallyRecursive = t5;
      _._actions$_listeners = t6;
      _._currentCallingAction = null;
      _.$ti = t7;
    },
    _ContextActionToActionAdapter: function _ContextActionToActionAdapter(t0, t1, t2, t3) {
      var _ = this;
      _.invokeContext = t0;
      _.action = t1;
      _._actions$_listeners = t2;
      _._currentCallingAction = null;
      _.$ti = t3;
    },
    _Action_Object_Diagnosticable: function _Action_Object_Diagnosticable() {
    },
    _Intent_Object_Diagnosticable: function _Intent_Object_Diagnosticable() {
    },
    __OverridableAction_ContextAction__OverridableActionMixin: function __OverridableAction_ContextAction__OverridableActionMixin() {
    },
    __OverridableContextAction_ContextAction__OverridableActionMixin: function __OverridableContextAction_ContextAction__OverridableActionMixin() {
    },
    basicLocaleListResolution(preferredLocales, supportedLocales) {
      var t1, t2, allSupportedLocales, languageAndCountryLocales, languageAndScriptLocales, languageLocales, countryLocales, t3, t4, matchesCountryCode, matchesLanguageCode, localeIndex, userLocale, match, resolvedLocale, _null = null;
      if (preferredLocales == null || B.boolConversionCheck(J.get$isEmpty$asx(preferredLocales)))
        return J.get$first$ax(supportedLocales);
      t1 = type$.String;
      t2 = type$.Locale;
      allSupportedLocales = B.HashMap_HashMap(_null, _null, _null, t1, t2);
      languageAndCountryLocales = B.HashMap_HashMap(_null, _null, _null, t1, t2);
      languageAndScriptLocales = B.HashMap_HashMap(_null, _null, _null, t1, t2);
      languageLocales = B.HashMap_HashMap(_null, _null, _null, t1, t2);
      countryLocales = B.HashMap_HashMap(_null, _null, _null, type$.nullable_String, t2);
      for (t1 = J.getInterceptor$ax(supportedLocales), t2 = t1.get$iterator(supportedLocales); B.boolConversionCheck(t2.moveNext$0());) {
        t3 = t2.get$current();
        t4 = B.S(t3.get$languageCode()) + "_null_" + B.S(t3.get$countryCode());
        if (allSupportedLocales.$index(0, t4) == null)
          allSupportedLocales.$indexSet(0, t4, t3);
        t4 = B.S(t3.get$languageCode()) + "_null";
        if (languageAndScriptLocales.$index(0, t4) == null)
          languageAndScriptLocales.$indexSet(0, t4, t3);
        t4 = B.S(t3.get$languageCode()) + "_" + B.S(t3.get$countryCode());
        if (languageAndCountryLocales.$index(0, t4) == null)
          languageAndCountryLocales.$indexSet(0, t4, t3);
        t4 = t3.get$languageCode();
        if (languageLocales.$index(0, t4) == null)
          languageLocales.$indexSet(0, t4, t3);
        t4 = t3.get$countryCode();
        if (countryLocales.$index(0, t4) == null)
          countryLocales.$indexSet(0, t4, t3);
      }
      t2 = J.getInterceptor$asx(preferredLocales);
      matchesCountryCode = _null;
      matchesLanguageCode = matchesCountryCode;
      localeIndex = 0;
      while (true) {
        t3 = t2.get$length(preferredLocales);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(localeIndex < t3))
          break;
        userLocale = t2.$index(preferredLocales, localeIndex);
        if (B.boolConversionCheck(allSupportedLocales.containsKey$1(B.S(userLocale.get$languageCode()) + "_null_" + B.S(userLocale.get$countryCode()))))
          return userLocale;
        if (userLocale.get$countryCode() != null) {
          match = languageAndCountryLocales.$index(0, B.S(userLocale.get$languageCode()) + "_" + B.S(userLocale.get$countryCode()));
          if (match != null)
            return match;
        }
        if (matchesLanguageCode != null)
          return matchesLanguageCode;
        match = languageLocales.$index(0, userLocale.get$languageCode());
        if (match != null) {
          if (localeIndex === 0) {
            t3 = localeIndex + 1;
            t4 = t2.get$length(preferredLocales);
            if (typeof t4 !== "number")
              return B.iae(t4);
            t3 = !(t3 < t4 && B.boolConversionCheck(J.$eq$(t2.$index(preferredLocales, t3).get$languageCode(), userLocale.get$languageCode())));
          } else
            t3 = false;
          if (t3)
            return match;
          matchesLanguageCode = match;
        }
        if (matchesCountryCode == null && userLocale.get$countryCode() != null) {
          match = countryLocales.$index(0, userLocale.get$countryCode());
          if (match != null)
            matchesCountryCode = match;
        }
        ++localeIndex;
      }
      resolvedLocale = matchesLanguageCode == null ? matchesCountryCode : matchesLanguageCode;
      return resolvedLocale == null ? t1.get$first(supportedLocales) : resolvedLocale;
    },
    WidgetsApp$(actions, builder, color, debugShowCheckedModeBanner, $home, initialRoute, inspectorSelectButtonBuilder, key, locale, localeListResolutionCallback, localeResolutionCallback, localizationsDelegates, navigatorKey, navigatorObservers, onGenerateInitialRoutes, onGenerateRoute, onGenerateTitle, onNavigationNotification, onUnknownRoute, pageRouteBuilder, restorationScopeId, routes, shortcuts, showPerformanceOverlay, showSemanticsDebugger, supportedLocales, textStyle, title) {
      var _null = null;
      return new A.WidgetsApp(navigatorKey, onGenerateRoute, onGenerateInitialRoutes, pageRouteBuilder, _null, _null, _null, _null, _null, $home, routes, onUnknownRoute, onNavigationNotification, initialRoute, navigatorObservers, builder, title, onGenerateTitle, textStyle, color, locale, localizationsDelegates, localeListResolutionCallback, localeResolutionCallback, supportedLocales, showPerformanceOverlay, showSemanticsDebugger, shortcuts, actions, restorationScopeId, key);
    },
    WidgetsApp$router(actions, backButtonDispatcher, builder, color, debugShowCheckedModeBanner, inspectorSelectButtonBuilder, key, locale, localeListResolutionCallback, localeResolutionCallback, localizationsDelegates, onGenerateTitle, onNavigationNotification, restorationScopeId, routeInformationParser, routeInformationProvider, routerConfig, routerDelegate, shortcuts, showPerformanceOverlay, showSemanticsDebugger, supportedLocales, textStyle, title) {
      var _null = null;
      return new A.WidgetsApp(_null, _null, _null, _null, routeInformationParser, routerDelegate, backButtonDispatcher, routeInformationProvider, routerConfig, _null, _null, _null, onNavigationNotification, _null, _null, builder, title, onGenerateTitle, textStyle, color, locale, localizationsDelegates, localeListResolutionCallback, localeResolutionCallback, supportedLocales, showPerformanceOverlay, showSemanticsDebugger, shortcuts, actions, restorationScopeId, key);
    },
    WidgetsApp_defaultShortcuts() {
      return C.Map_IMYKL;
    },
    _WidgetsAppState$() {
      return new A._WidgetsAppState();
    },
    WidgetsApp: function WidgetsApp(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30) {
      var _ = this;
      _.navigatorKey = t0;
      _.onGenerateRoute = t1;
      _.onGenerateInitialRoutes = t2;
      _.pageRouteBuilder = t3;
      _.routeInformationParser = t4;
      _.routerDelegate = t5;
      _.backButtonDispatcher = t6;
      _.routeInformationProvider = t7;
      _.routerConfig = t8;
      _.home = t9;
      _.routes = t10;
      _.onUnknownRoute = t11;
      _.onNavigationNotification = t12;
      _.initialRoute = t13;
      _.navigatorObservers = t14;
      _.builder = t15;
      _.title = t16;
      _.onGenerateTitle = t17;
      _.textStyle = t18;
      _.color = t19;
      _.locale = t20;
      _.localizationsDelegates = t21;
      _.localeListResolutionCallback = t22;
      _.localeResolutionCallback = t23;
      _.supportedLocales = t24;
      _.showPerformanceOverlay = t25;
      _.showSemanticsDebugger = t26;
      _.shortcuts = t27;
      _.actions = t28;
      _.restorationScopeId = t29;
      _.key = t30;
    },
    _WidgetsAppState: function _WidgetsAppState() {
      var _ = this;
      _._framework0$_element = _._widget = _._app$_locale = _._navigator = _._defaultBackButtonDispatcher = _._defaultRouteInformationProvider = _._app$_appLifecycleState = null;
    },
    _WidgetsAppState__onGenerateRoute_closure: function _WidgetsAppState__onGenerateRoute_closure(t0) {
      this.$this = t0;
    },
    _WidgetsAppState_didChangeLocales_closure: function _WidgetsAppState_didChangeLocales_closure(t0, t1) {
      this.$this = t0;
      this.newLocale = t1;
    },
    _WidgetsAppState_build_closure: function _WidgetsAppState_build_closure(t0) {
      this.$this = t0;
    },
    _WidgetsAppState_build_closure0: function _WidgetsAppState_build_closure0(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _WidgetsAppState_build_closure1: function _WidgetsAppState_build_closure1(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    __WidgetsAppState_State_WidgetsBindingObserver: function __WidgetsAppState_State_WidgetsBindingObserver() {
    },
    KeepAliveNotification$(handle) {
      return new A.KeepAliveNotification();
    },
    KeepAliveHandle$() {
      return new A.KeepAliveHandle($.$get$ChangeNotifier__emptyListeners());
    },
    KeepAliveNotification: function KeepAliveNotification() {
    },
    KeepAliveHandle: function KeepAliveHandle(t0) {
      var _ = this;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = false;
    },
    AutomaticKeepAliveClientMixin: function AutomaticKeepAliveClientMixin() {
    },
    _NullWidget0: function _NullWidget0(t0) {
      this.key = t0;
    },
    _UbiquitousInheritedElement$(widget) {
      var t1 = type$.Element;
      t1 = new A._UbiquitousInheritedElement(B.HashMap_HashMap(null, null, null, t1, type$.nullable_Object), widget, D._ElementLifecycle_00, B.HashSet_HashSet(t1));
      t1.Element$1(widget);
      return t1;
    },
    _UbiquitousInheritedElement__recurseChildren(element, visitor) {
      element.visitChildren$1(new A._UbiquitousInheritedElement__recurseChildren_closure(visitor));
      visitor.call$1(element);
    },
    Directionality$(child, textDirection) {
      return new A.Directionality(textDirection, child, null);
    },
    Directionality_of(context) {
      var t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      return t1.textDirection;
    },
    CustomPaint$(child, foregroundPainter, painter) {
      return new A.CustomPaint(painter, foregroundPainter, child, null);
    },
    ClipPath$(child, clipBehavior, clipper) {
      return new A.ClipPath(clipper, clipBehavior, child, null);
    },
    PhysicalModel$(borderRadius, child, clipBehavior, color, elevation, shadowColor, shape) {
      return new A.PhysicalModel(shape, clipBehavior, borderRadius, elevation, color, shadowColor, child, null);
    },
    PhysicalShape$(child, clipBehavior, clipper, color, elevation, shadowColor) {
      return new A.PhysicalShape(clipper, clipBehavior, elevation, color, shadowColor, child, null);
    },
    FractionalTranslation$(child, transformHitTests, translation) {
      return new A.FractionalTranslation(translation, transformHitTests, child, null);
    },
    Padding$(child, padding) {
      return new A.Padding(padding, child, null);
    },
    Align$(alignment, child, heightFactor, key, widthFactor) {
      return new A.Align(alignment, widthFactor, heightFactor, child, key);
    },
    Center$(child, heightFactor, widthFactor) {
      return new A.Center(C.Alignment_0_0, widthFactor, heightFactor, child, null);
    },
    SizedBox$(child, height, width) {
      return new E.SizedBox(width, height, child, null);
    },
    ConstrainedBox$(child, constraints) {
      return new A.ConstrainedBox(constraints, child, null);
    },
    Offstage$(child, offstage) {
      return new A.Offstage(offstage, child, null);
    },
    _OffstageElement$(widget) {
      var t1 = new A._OffstageElement(widget, D._ElementLifecycle_00, B.HashSet_HashSet(type$.Element));
      t1.Element$1(widget);
      return t1;
    },
    Stack$(children, fit) {
      return new A.Stack(fit, children, null);
    },
    Positioned$(bottom, child, height, key, left, right, $top, width) {
      return new A.Positioned(left, $top, right, bottom, width, height, child, key);
    },
    Positioned_Positioned$directional(bottom, child, end, height, start, textDirection, $top, width) {
      var t1, _0_1, right, _0_2, _null = null;
      switch (textDirection.index) {
        case 0:
          t1 = new B._Record_2(end, start);
          break;
        case 1:
          t1 = new B._Record_2(start, end);
          break;
        default:
          t1 = _null;
      }
      _0_1 = t1._0;
      right = _null;
      _0_2 = t1._1;
      right = _0_2;
      return A.Positioned$(bottom, child, height, _null, _0_1, right, $top, width);
    },
    PositionedDirectional$(bottom, child, start, $top, width) {
      return new A.PositionedDirectional(start, $top, bottom, width, child, null);
    },
    Row$(children, mainAxisAlignment, mainAxisSize) {
      return new A.Row(D.Axis_0, mainAxisAlignment, mainAxisSize, C.CrossAxisAlignment_2, null, C.VerticalDirection_1, null, children, null);
    },
    Column$(children, mainAxisAlignment) {
      return new A.Column(D.Axis_1, mainAxisAlignment, C.MainAxisSize_1, C.CrossAxisAlignment_2, null, C.VerticalDirection_1, null, children, null);
    },
    RichText$(key, locale, maxLines, overflow, selectionColor, selectionRegistrar, softWrap, strutStyle, text, textAlign, textDirection, textHeightBehavior, textScaler, textWidthBasis) {
      return new A.RichText(text, textAlign, textDirection, softWrap, overflow, A.RichText__effectiveTextScalerFrom(textScaler, 1), maxLines, locale, strutStyle, textWidthBasis, textHeightBehavior, selectionRegistrar, selectionColor, A.WidgetSpan_extractFromInlineSpan(text, A.RichText__effectiveTextScalerFrom(textScaler, 1)), key);
    },
    RichText__effectiveTextScalerFrom(textScaler, textScaleFactor) {
      var _0_2, t1, scaler, _0_2_isSet;
      $label0$0: {
        _0_2 = null;
        t1 = false;
        t1 = 1 === textScaleFactor;
        _0_2 = textScaleFactor;
        scaler = textScaler;
        if (t1) {
          t1 = scaler;
          break $label0$0;
        }
        _0_2_isSet = true;
        if (B.boolConversionCheck(D._LinearTextScaler_1.$eq(0, textScaler))) {
          t1 = _0_2;
          t1 = typeof t1 == "number";
        } else
          t1 = false;
        if (t1) {
          t1 = E._LinearTextScaler$(_0_2_isSet ? _0_2 : textScaleFactor);
          break $label0$0;
        }
        t1 = textScaler;
        break $label0$0;
        t1 = null;
      }
      return t1;
    },
    DefaultAssetBundle_of(context) {
      var t1;
      context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultAssetBundle);
      t1 = $.$get$rootBundle();
      return t1;
    },
    Listener$(behavior, child, onPointerCancel, onPointerDown, onPointerPanZoomStart, onPointerUp) {
      return new A.Listener0(onPointerDown, onPointerUp, onPointerCancel, onPointerPanZoomStart, behavior, child, null);
    },
    MouseRegion$(child, cursor, onEnter, onExit) {
      return new A.MouseRegion(onEnter, onExit, cursor, child, null);
    },
    RepaintBoundary$(child, key) {
      return new A.RepaintBoundary(child, key);
    },
    IgnorePointer$(child, ignoring) {
      return new A.IgnorePointer(ignoring, child, null);
    },
    AbsorbPointer$(absorbing, child) {
      return new A.AbsorbPointer(absorbing, child, null);
    },
    MergeSemantics$(child) {
      return new A.MergeSemantics(child, null);
    },
    BlockSemantics$(child) {
      return new A.BlockSemantics(child, null);
    },
    ExcludeSemantics$(child, excluding) {
      return new A.ExcludeSemantics(excluding, child, null);
    },
    KeyedSubtree$(child, key) {
      return new A.KeyedSubtree(child, key);
    },
    Builder$(builder) {
      return new A.Builder(builder, null);
    },
    ColoredBox$(child, color) {
      return new A.ColoredBox(color, child, null);
    },
    _RenderColoredBox$(color) {
      var t1 = new A._RenderColoredBox(color, C.HitTestBehavior_1, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    _UbiquitousInheritedElement: function _UbiquitousInheritedElement(t0, t1, t2, t3) {
      var _ = this;
      _._dependents = t0;
      _._slot = _._framework0$_notificationTree = _._framework0$_parent = _._framework0$_child = null;
      _.__Element__depth_A = $;
      _._widget = t1;
      _._parentBuildScope = _._framework0$_owner = null;
      _._framework0$_lifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._framework0$_dependencies = _._framework0$_inheritedElements = null;
      _._framework0$_hadUnsatisfiedDependencies = false;
      _._framework0$_dirty = true;
      _._framework0$_inDirtyList = false;
    },
    _UbiquitousInheritedElement_notifyClients_closure: function _UbiquitousInheritedElement_notifyClients_closure(t0, t1) {
      this.$this = t0;
      this.oldWidget = t1;
    },
    _UbiquitousInheritedElement__recurseChildren_closure: function _UbiquitousInheritedElement__recurseChildren_closure(t0) {
      this.visitor = t0;
    },
    _UbiquitousInheritedWidget: function _UbiquitousInheritedWidget() {
    },
    Directionality: function Directionality(t0, t1, t2) {
      this.textDirection = t0;
      this.child = t1;
      this.key = t2;
    },
    CustomPaint: function CustomPaint(t0, t1, t2, t3) {
      var _ = this;
      _.painter = t0;
      _.foregroundPainter = t1;
      _.child = t2;
      _.key = t3;
    },
    ClipPath: function ClipPath(t0, t1, t2, t3) {
      var _ = this;
      _.clipper = t0;
      _.clipBehavior = t1;
      _.child = t2;
      _.key = t3;
    },
    PhysicalModel: function PhysicalModel(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.shape = t0;
      _.clipBehavior = t1;
      _.borderRadius = t2;
      _.elevation = t3;
      _.color = t4;
      _.shadowColor = t5;
      _.child = t6;
      _.key = t7;
    },
    PhysicalShape: function PhysicalShape(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.clipper = t0;
      _.clipBehavior = t1;
      _.elevation = t2;
      _.color = t3;
      _.shadowColor = t4;
      _.child = t5;
      _.key = t6;
    },
    FractionalTranslation: function FractionalTranslation(t0, t1, t2, t3) {
      var _ = this;
      _.translation = t0;
      _.transformHitTests = t1;
      _.child = t2;
      _.key = t3;
    },
    Padding: function Padding(t0, t1, t2) {
      this.padding = t0;
      this.child = t1;
      this.key = t2;
    },
    Align: function Align(t0, t1, t2, t3, t4) {
      var _ = this;
      _.alignment = t0;
      _.widthFactor = t1;
      _.heightFactor = t2;
      _.child = t3;
      _.key = t4;
    },
    Center: function Center(t0, t1, t2, t3, t4) {
      var _ = this;
      _.alignment = t0;
      _.widthFactor = t1;
      _.heightFactor = t2;
      _.child = t3;
      _.key = t4;
    },
    ConstrainedBox: function ConstrainedBox(t0, t1, t2) {
      this.constraints = t0;
      this.child = t1;
      this.key = t2;
    },
    Offstage: function Offstage(t0, t1, t2) {
      this.offstage = t0;
      this.child = t1;
      this.key = t2;
    },
    _OffstageElement: function _OffstageElement(t0, t1, t2) {
      var _ = this;
      _._slot = _._framework0$_notificationTree = _._framework0$_parent = _._ancestorRenderObjectElement = _._framework0$_renderObject = _._framework0$_child = null;
      _.__Element__depth_A = $;
      _._widget = t0;
      _._parentBuildScope = _._framework0$_owner = null;
      _._framework0$_lifecycleState = t1;
      _._debugForgottenChildrenWithGlobalKey = t2;
      _._framework0$_dependencies = _._framework0$_inheritedElements = null;
      _._framework0$_hadUnsatisfiedDependencies = false;
      _._framework0$_dirty = true;
      _._framework0$_inDirtyList = false;
    },
    Stack: function Stack(t0, t1, t2) {
      this.fit = t0;
      this.children = t1;
      this.key = t2;
    },
    Positioned: function Positioned(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
      _.width = t4;
      _.height = t5;
      _.child = t6;
      _.key = t7;
    },
    PositionedDirectional: function PositionedDirectional(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.top = t1;
      _.bottom = t2;
      _.width = t3;
      _.child = t4;
      _.key = t5;
    },
    Flex: function Flex() {
    },
    Row: function Row(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.direction = t0;
      _.mainAxisAlignment = t1;
      _.mainAxisSize = t2;
      _.crossAxisAlignment = t3;
      _.textDirection = t4;
      _.verticalDirection = t5;
      _.textBaseline = t6;
      _.children = t7;
      _.key = t8;
    },
    Column: function Column(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.direction = t0;
      _.mainAxisAlignment = t1;
      _.mainAxisSize = t2;
      _.crossAxisAlignment = t3;
      _.textDirection = t4;
      _.verticalDirection = t5;
      _.textBaseline = t6;
      _.children = t7;
      _.key = t8;
    },
    RichText: function RichText(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.text = t0;
      _.textAlign = t1;
      _.textDirection = t2;
      _.softWrap = t3;
      _.overflow = t4;
      _.textScaler = t5;
      _.maxLines = t6;
      _.locale = t7;
      _.strutStyle = t8;
      _.textWidthBasis = t9;
      _.textHeightBehavior = t10;
      _.selectionRegistrar = t11;
      _.selectionColor = t12;
      _.children = t13;
      _.key = t14;
    },
    Listener0: function Listener0(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.onPointerDown = t0;
      _.onPointerUp = t1;
      _.onPointerCancel = t2;
      _.onPointerPanZoomStart = t3;
      _.behavior = t4;
      _.child = t5;
      _.key = t6;
    },
    MouseRegion: function MouseRegion(t0, t1, t2, t3, t4) {
      var _ = this;
      _.onEnter = t0;
      _.onExit = t1;
      _.cursor = t2;
      _.child = t3;
      _.key = t4;
    },
    RepaintBoundary: function RepaintBoundary(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    IgnorePointer: function IgnorePointer(t0, t1, t2) {
      this.ignoring = t0;
      this.child = t1;
      this.key = t2;
    },
    AbsorbPointer: function AbsorbPointer(t0, t1, t2) {
      this.absorbing = t0;
      this.child = t1;
      this.key = t2;
    },
    MergeSemantics: function MergeSemantics(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    BlockSemantics: function BlockSemantics(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    ExcludeSemantics: function ExcludeSemantics(t0, t1, t2) {
      this.excluding = t0;
      this.child = t1;
      this.key = t2;
    },
    KeyedSubtree: function KeyedSubtree(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    Builder: function Builder(t0, t1) {
      this.builder = t0;
      this.key = t1;
    },
    ColoredBox: function ColoredBox(t0, t1, t2) {
      this.color = t0;
      this.child = t1;
      this.key = t2;
    },
    _RenderColoredBox: function _RenderColoredBox(t0, t1, t2, t3, t4) {
      var _ = this;
      _._basic$_color = t0;
      _.behavior = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._layoutCacheStorage = t3;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    DecoratedBox$(child, decoration, position) {
      return new A.DecoratedBox(decoration, position, child, null);
    },
    DecoratedBox: function DecoratedBox(t0, t1, t2, t3) {
      var _ = this;
      _.decoration = t0;
      _.position = t1;
      _.child = t2;
      _.key = t3;
    },
    DefaultSelectionStyle$(child, cursorColor, key, mouseCursor, selectionColor) {
      return new A.DefaultSelectionStyle(cursorColor, selectionColor, mouseCursor, child, key);
    },
    DefaultSelectionStyle_merge(child, mouseCursor) {
      return A.Builder$(new A.DefaultSelectionStyle_merge_closure(null, null, null, mouseCursor, child));
    },
    DefaultSelectionStyle_of(context) {
      var t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultSelectionStyle);
      return t1 == null ? C.DefaultSelectionStyle_3bE : t1;
    },
    DefaultSelectionStyle: function DefaultSelectionStyle(t0, t1, t2, t3, t4) {
      var _ = this;
      _.cursorColor = t0;
      _.selectionColor = t1;
      _.mouseCursor = t2;
      _.child = t3;
      _.key = t4;
    },
    DefaultSelectionStyle_merge_closure: function DefaultSelectionStyle_merge_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.key = t0;
      _.cursorColor = t1;
      _.selectionColor = t2;
      _.mouseCursor = t3;
      _.child = t4;
    },
    _NullWidget1: function _NullWidget1(t0) {
      this.key = t0;
    },
    DefaultTextEditingShortcuts$(child) {
      return new A.DefaultTextEditingShortcuts(child, null);
    },
    DefaultTextEditingShortcuts__shortcuts() {
      switch (E.defaultTargetPlatform()) {
        case D.TargetPlatform_0:
          var t1 = $.$get$DefaultTextEditingShortcuts__androidShortcuts();
          break;
        case D.TargetPlatform_1:
          t1 = $.$get$DefaultTextEditingShortcuts__fuchsiaShortcuts();
          break;
        case D.TargetPlatform_2:
          t1 = $.$get$DefaultTextEditingShortcuts__iOSShortcuts();
          break;
        case D.TargetPlatform_3:
          t1 = $.$get$DefaultTextEditingShortcuts__linuxShortcuts();
          break;
        case D.TargetPlatform_4:
          t1 = $.$get$DefaultTextEditingShortcuts__macShortcuts();
          break;
        case D.TargetPlatform_5:
          t1 = $.$get$DefaultTextEditingShortcuts__windowsShortcuts();
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    DefaultTextEditingShortcuts: function DefaultTextEditingShortcuts(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    DualTransitionBuilder$(animation, child, forwardBuilder, reverseBuilder) {
      return new A.DualTransitionBuilder(animation, forwardBuilder, reverseBuilder, child, null);
    },
    _DualTransitionBuilderState$() {
      return new A._DualTransitionBuilderState(A.ProxyAnimation$(null), A.ProxyAnimation$(null));
    },
    DualTransitionBuilder: function DualTransitionBuilder(t0, t1, t2, t3, t4) {
      var _ = this;
      _.animation = t0;
      _.forwardBuilder = t1;
      _.reverseBuilder = t2;
      _.child = t3;
      _.key = t4;
    },
    _DualTransitionBuilderState: function _DualTransitionBuilderState(t0, t1) {
      var _ = this;
      _.___DualTransitionBuilderState__effectiveAnimationStatus_A = $;
      _._forwardAnimation = t0;
      _._reverseAnimation = t1;
      _._framework0$_element = _._widget = null;
    },
    RequestFocusAction$() {
      return new A.RequestFocusAction(A.ObserverList$(type$.void_Function_Action_Intent));
    },
    NextFocusAction$() {
      return new A.NextFocusAction(A.ObserverList$(type$.void_Function_Action_Intent));
    },
    PreviousFocusAction$() {
      return new A.PreviousFocusAction(A.ObserverList$(type$.void_Function_Action_Intent));
    },
    DirectionalFocusAction$() {
      return new A.DirectionalFocusAction(A.ObserverList$(type$.void_Function_Action_Intent));
    },
    RequestFocusAction: function RequestFocusAction(t0) {
      this._actions$_listeners = t0;
      this._currentCallingAction = null;
    },
    NextFocusIntent: function NextFocusIntent() {
    },
    NextFocusAction: function NextFocusAction(t0) {
      this._actions$_listeners = t0;
      this._currentCallingAction = null;
    },
    PreviousFocusIntent: function PreviousFocusIntent() {
    },
    PreviousFocusAction: function PreviousFocusAction(t0) {
      this._actions$_listeners = t0;
      this._currentCallingAction = null;
    },
    DirectionalFocusAction: function DirectionalFocusAction(t0) {
      this._actions$_listeners = t0;
      this._currentCallingAction = null;
    },
    GlobalKey_GlobalKey(debugLabel, $T) {
      return A.LabeledGlobalKey$(debugLabel, $T);
    },
    LabeledGlobalKey$(_debugLabel, $T) {
      return new A.LabeledGlobalKey(_debugLabel, $T._eval$1("LabeledGlobalKey<0>"));
    },
    GlobalObjectKey$(value, $T) {
      return new A.GlobalObjectKey(value, $T._eval$1("GlobalObjectKey<0>"));
    },
    _NotificationNode$($parent, current) {
      return new A._NotificationNode(current, $parent);
    },
    ParentDataElement$(widget, $T) {
      var t1 = new A.ParentDataElement(widget, D._ElementLifecycle_00, B.HashSet_HashSet(type$.Element), $T._eval$1("ParentDataElement<0>"));
      t1.Element$1(widget);
      return t1;
    },
    MultiChildRenderObjectElement$(widget) {
      var t1 = type$.Element;
      t1 = new A.MultiChildRenderObjectElement(B.HashSet_HashSet(t1), widget, D._ElementLifecycle_00, B.HashSet_HashSet(t1));
      t1.Element$1(widget);
      return t1;
    },
    LabeledGlobalKey: function LabeledGlobalKey(t0, t1) {
      this._framework0$_debugLabel = t0;
      this.$ti = t1;
    },
    GlobalObjectKey: function GlobalObjectKey(t0, t1) {
      this.value = t0;
      this.$ti = t1;
    },
    ParentDataWidget: function ParentDataWidget() {
    },
    MultiChildRenderObjectWidget: function MultiChildRenderObjectWidget() {
    },
    NotifiableElementMixin: function NotifiableElementMixin() {
    },
    _NotificationNode: function _NotificationNode(t0, t1) {
      this.current = t0;
      this.parent = t1;
    },
    ParentDataElement: function ParentDataElement(t0, t1, t2, t3) {
      var _ = this;
      _._slot = _._framework0$_notificationTree = _._framework0$_parent = _._framework0$_child = null;
      _.__Element__depth_A = $;
      _._widget = t0;
      _._parentBuildScope = _._framework0$_owner = null;
      _._framework0$_lifecycleState = t1;
      _._debugForgottenChildrenWithGlobalKey = t2;
      _._framework0$_dependencies = _._framework0$_inheritedElements = null;
      _._framework0$_hadUnsatisfiedDependencies = false;
      _._framework0$_dirty = true;
      _._framework0$_inDirtyList = false;
      _.$ti = t3;
    },
    ParentDataElement__applyParentData_applyParentDataToChild: function ParentDataElement__applyParentData_applyParentDataToChild(t0) {
      this.widget = t0;
    },
    MultiChildRenderObjectElement: function MultiChildRenderObjectElement(t0, t1, t2, t3) {
      var _ = this;
      _.__MultiChildRenderObjectElement__children_A = $;
      _._framework0$_forgottenChildren = t0;
      _._slot = _._framework0$_notificationTree = _._framework0$_parent = _._ancestorRenderObjectElement = _._framework0$_renderObject = null;
      _.__Element__depth_A = $;
      _._widget = t1;
      _._parentBuildScope = _._framework0$_owner = null;
      _._framework0$_lifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._framework0$_dependencies = _._framework0$_inheritedElements = null;
      _._framework0$_hadUnsatisfiedDependencies = false;
      _._framework0$_dirty = true;
      _._framework0$_inDirtyList = false;
    },
    GestureRecognizerFactoryWithHandlers$(_constructor, _initializer, $T) {
      return new A.GestureRecognizerFactoryWithHandlers(_constructor, _initializer, $T._eval$1("GestureRecognizerFactoryWithHandlers<0>"));
    },
    GestureDetector$(behavior, child, excludeFromSemantics, onDoubleTap, onLongPress, onPanEnd, onSecondaryTap, onSecondaryTapCancel, onSecondaryTapDown, onSecondaryTapUp, onTap, onTapCancel, onTapDown, onTapUp) {
      return new A.GestureDetector(child, onTapDown, onTapUp, onTap, onTapCancel, onSecondaryTap, onSecondaryTapDown, onSecondaryTapUp, onSecondaryTapCancel, onDoubleTap, onLongPress, onPanEnd, behavior, excludeFromSemantics, null);
    },
    RawGestureDetector$(behavior, child, excludeFromSemantics, gestures) {
      return new A.RawGestureDetector(child, gestures, behavior, excludeFromSemantics, null);
    },
    RawGestureDetectorState$() {
      return new A.RawGestureDetectorState(C.Map_empty1);
    },
    _GestureSemantics$(assignSemantics, behavior, child) {
      return new A._GestureSemantics(behavior, assignSemantics, child, null);
    },
    _DefaultSemanticsGestureDelegate$(detectorState) {
      return new A._DefaultSemanticsGestureDelegate(detectorState);
    },
    GestureRecognizerFactory: function GestureRecognizerFactory() {
    },
    GestureRecognizerFactoryWithHandlers: function GestureRecognizerFactoryWithHandlers(t0, t1, t2) {
      this._constructor = t0;
      this._gesture_detector$_initializer = t1;
      this.$ti = t2;
    },
    GestureDetector: function GestureDetector(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.child = t0;
      _.onTapDown = t1;
      _.onTapUp = t2;
      _.onTap = t3;
      _.onTapCancel = t4;
      _.onSecondaryTap = t5;
      _.onSecondaryTapDown = t6;
      _.onSecondaryTapUp = t7;
      _.onSecondaryTapCancel = t8;
      _.onDoubleTap = t9;
      _.onLongPress = t10;
      _.onPanEnd = t11;
      _.behavior = t12;
      _.excludeFromSemantics = t13;
      _.key = t14;
    },
    GestureDetector_build_closure: function GestureDetector_build_closure(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure0: function GestureDetector_build_closure0(t0, t1) {
      this.$this = t0;
      this.gestureSettings = t1;
    },
    GestureDetector_build_closure1: function GestureDetector_build_closure1(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure2: function GestureDetector_build_closure2(t0, t1) {
      this.$this = t0;
      this.gestureSettings = t1;
    },
    GestureDetector_build_closure3: function GestureDetector_build_closure3(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure4: function GestureDetector_build_closure4(t0, t1) {
      this.$this = t0;
      this.gestureSettings = t1;
    },
    GestureDetector_build_closure5: function GestureDetector_build_closure5(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure6: function GestureDetector_build_closure6(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.configuration = t1;
      _.context = t2;
      _.gestureSettings = t3;
    },
    RawGestureDetector: function RawGestureDetector(t0, t1, t2, t3, t4) {
      var _ = this;
      _.child = t0;
      _.gestures = t1;
      _.behavior = t2;
      _.excludeFromSemantics = t3;
      _.key = t4;
    },
    RawGestureDetectorState: function RawGestureDetectorState(t0) {
      var _ = this;
      _._recognizers = t0;
      _._framework0$_element = _._widget = _._gesture_detector$_semantics = null;
    },
    RawGestureDetectorState_debugFillProperties_closure: function RawGestureDetectorState_debugFillProperties_closure() {
    },
    _GestureSemantics: function _GestureSemantics(t0, t1, t2, t3) {
      var _ = this;
      _.behavior = t0;
      _.assignSemantics = t1;
      _.child = t2;
      _.key = t3;
    },
    SemanticsGestureDelegate: function SemanticsGestureDelegate() {
    },
    _DefaultSemanticsGestureDelegate: function _DefaultSemanticsGestureDelegate(t0) {
      this.detectorState = t0;
    },
    _DefaultSemanticsGestureDelegate__getTapHandler_closure: function _DefaultSemanticsGestureDelegate__getTapHandler_closure(t0) {
      this.tap = t0;
    },
    _DefaultSemanticsGestureDelegate__getLongPressHandler_closure: function _DefaultSemanticsGestureDelegate__getLongPressHandler_closure(t0) {
      this.longPress = t0;
    },
    _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure: function _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure(t0) {
      this.horizontal = t0;
    },
    _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure0: function _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure0(t0) {
      this.pan = t0;
    },
    _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure1: function _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure1(t0, t1) {
      this.horizontalHandler = t0;
      this.panHandler = t1;
    },
    _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure: function _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure(t0) {
      this.vertical = t0;
    },
    _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure0: function _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure0(t0) {
      this.pan = t0;
    },
    _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure1: function _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure1(t0, t1) {
      this.verticalHandler = t0;
      this.panHandler = t1;
    },
    Hero$(child, tag) {
      return new A.Hero(tag, child, null);
    },
    Hero__allHeroesFor(context, isUserGestureTransition, $navigator) {
      var result = B.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$._HeroState);
      context.visitChildElements$1(new A.Hero__allHeroesFor_visitor($navigator, new A.Hero__allHeroesFor_inviteHero(isUserGestureTransition, result)));
      return result;
    },
    _HeroState$() {
      return new A._HeroState(A.GlobalKey_GlobalKey(null, type$.State_StatefulWidget));
    },
    _HeroFlightManifest$(createRectTween, fromHero, fromRoute, isDiverted, isUserGestureTransition, navigatorSize, overlay, shuttleBuilder, toHero, toRoute, type) {
      return new A._HeroFlightManifest(type, overlay, navigatorSize, fromRoute, toRoute, fromHero, toHero, createRectTween, shuttleBuilder, isUserGestureTransition, isDiverted);
    },
    _HeroFlightManifest__boundingBoxFor(context, ancestorContext) {
      var t1 = context.findRenderObject$0();
      t1.toString;
      type$.RenderBox._as(t1);
      return E.MatrixUtils_transformRect(t1.getTransformTo$1(ancestorContext == null ? null : ancestorContext.findRenderObject$0()), D.Offset_0_0.$and(0, t1.get$size()));
    },
    _HeroFlight$(onFlightEnded) {
      var t1 = new A._HeroFlight(onFlightEnded, C.C__AlwaysCompleteAnimation);
      t1._HeroFlight$1(onFlightEnded);
      return t1;
    },
    HeroController$(createRectTween) {
      var t1 = new A.HeroController(createRectTween, B.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$._HeroFlight));
      t1.HeroController$1$createRectTween(createRectTween);
      return t1;
    },
    HeroFlightDirection: function HeroFlightDirection(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    Hero: function Hero(t0, t1, t2) {
      this.tag = t0;
      this.child = t1;
      this.key = t2;
    },
    Hero__allHeroesFor_inviteHero: function Hero__allHeroesFor_inviteHero(t0, t1) {
      this.isUserGestureTransition = t0;
      this.result = t1;
    },
    Hero__allHeroesFor_visitor: function Hero__allHeroesFor_visitor(t0, t1) {
      this.navigator = t0;
      this.inviteHero = t1;
    },
    _HeroState: function _HeroState(t0) {
      var _ = this;
      _._heroes$_key = t0;
      _._placeholderSize = null;
      _._shouldIncludeChild = true;
      _._framework0$_element = _._widget = null;
    },
    _HeroState_startFlight_closure: function _HeroState_startFlight_closure(t0, t1) {
      this.$this = t0;
      this.box = t1;
    },
    _HeroState_endFlight_closure: function _HeroState_endFlight_closure() {
    },
    _HeroFlightManifest: function _HeroFlightManifest(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.type = t0;
      _.overlay = t1;
      _.navigatorSize = t2;
      _.fromRoute = t3;
      _.toRoute = t4;
      _.fromHero = t5;
      _.toHero = t6;
      _.createRectTween = t7;
      _.shuttleBuilder = t8;
      _.isUserGestureTransition = t9;
      _.isDiverted = t10;
      _._heroes$_animation = null;
      _.___HeroFlightManifest_isValid_FI = _.___HeroFlightManifest_toHeroLocation_FI = _.___HeroFlightManifest_fromHeroLocation_FI = $;
    },
    _HeroFlight: function _HeroFlight(t0, t1) {
      var _ = this;
      _.onFlightEnded = t0;
      _.___HeroFlight_heroRectTween_A = $;
      _.shuttle = null;
      _._heroOpacity = t1;
      _.___HeroFlight__proxyAnimation_A = $;
      _.overlayEntry = _._manifest = null;
      _._scheduledPerformAnimationUpdate = _._aborted = false;
    },
    _HeroFlight__buildOverlay_closure: function _HeroFlight__buildOverlay_closure(t0) {
      this.$this = t0;
    },
    _HeroFlight__handleAnimationUpdate_delayedPerformAnimationUpdate: function _HeroFlight__handleAnimationUpdate_delayedPerformAnimationUpdate(t0, t1) {
      this.$this = t0;
      this.navigator = t1;
    },
    HeroController: function HeroController(t0, t1) {
      this.createRectTween = t0;
      this._flights = t1;
    },
    HeroController_didStopUserGesture_isInvalidFlight: function HeroController_didStopUserGesture_isInvalidFlight() {
    },
    HeroController__maybeStartHeroTransition_closure: function HeroController__maybeStartHeroTransition_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.from = t1;
      _.to = t2;
      _.flightType = t3;
      _.isUserGestureTransition = t4;
    },
    HeroController__defaultHeroFlightShuttleBuilder_closure: function HeroController__defaultHeroFlightShuttleBuilder_closure(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.toMediaQueryData = t0;
      _.flightDirection = t1;
      _.fromHeroPadding = t2;
      _.toHeroPadding = t3;
      _.animation = t4;
      _.toHero = t5;
    },
    Icon: function Icon(t0, t1) {
      this.icon = t0;
      this.key = t1;
    },
    IconDataProperty$($name, value, ifNull, showName) {
      var t1, _null = null;
      if (ifNull == null)
        t1 = _null;
      else
        t1 = ifNull;
      return new A.IconDataProperty(_null, true, t1, _null, _null, false, value, D.C__NoDefaultValue, D.DiagnosticLevel_3, $name, true, showName, _null, D.DiagnosticsTreeStyle_8);
    },
    IconData: function IconData(t0) {
      this.codePoint = t0;
    },
    IconDataProperty: function IconDataProperty(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _._description = t0;
      _.allowWrap = t1;
      _.ifNull = t2;
      _.ifEmpty = t3;
      _.tooltip = t4;
      _.missingIfNull = t5;
      _._diagnostics$_value = t6;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t7;
      _._defaultLevel = t8;
      _.name = t9;
      _.showSeparator = t10;
      _.showName = t11;
      _.linePrefix = t12;
      _.style = t13;
    },
    IconTheme$(child, data, key) {
      return new A.IconTheme(data, child, key);
    },
    IconTheme_merge(child, data) {
      return A.Builder$(new A.IconTheme_merge_closure(null, data, child));
    },
    IconTheme_of(context) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9,
        iconThemeData = A.IconTheme__getInheritedIconThemeData(context).resolve$1(context);
      if (B.boolConversionCheck(iconThemeData.get$isConcrete()))
        t1 = iconThemeData;
      else {
        t1 = iconThemeData.size;
        if (t1 == null)
          t1 = 24;
        t2 = iconThemeData.fill;
        if (t2 == null)
          t2 = 0;
        t3 = iconThemeData.weight;
        if (t3 == null)
          t3 = 400;
        t4 = iconThemeData.grade;
        if (t4 == null)
          t4 = 0;
        t5 = iconThemeData.opticalSize;
        if (t5 == null)
          t5 = 48;
        t6 = iconThemeData.color;
        if (t6 == null)
          t6 = C.Color_4278190080;
        t7 = iconThemeData.get$opacity();
        if (t7 == null)
          t7 = C.IconThemeData_Vet.get$opacity();
        t8 = iconThemeData.shadows;
        if (t8 == null)
          t8 = null;
        t9 = iconThemeData.applyTextScaling;
        t1 = iconThemeData.copyWith$9$applyTextScaling$color$fill$grade$opacity$opticalSize$shadows$size$weight(t9 == null ? false : t9, t6, t2, t4, t7, t5, t8, t1, t3);
      }
      return t1;
    },
    IconTheme__getInheritedIconThemeData(context) {
      var iconTheme = context.dependOnInheritedWidgetOfExactType$1$0(type$.IconTheme),
        t1 = iconTheme == null ? null : iconTheme.data;
      return t1 == null ? C.IconThemeData_Vet : t1;
    },
    IconTheme: function IconTheme(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    IconTheme_merge_closure: function IconTheme_merge_closure(t0, t1, t2) {
      this.key = t0;
      this.data = t1;
      this.child = t2;
    },
    IconThemeData$(applyTextScaling, color, fill, grade, opacity, opticalSize, shadows, size, weight) {
      return new A.IconThemeData(size, fill, weight, grade, opticalSize, color, opacity, shadows, applyTextScaling);
    },
    IconThemeData_lerp(a, b, t) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, _null = null,
        t1 = type$.nullable_IconThemeData;
      t1._as(a);
      t1._as(b);
      B._asDouble(t);
      if (a == b && a != null)
        return a;
      t1 = a == null;
      t2 = t1 ? _null : a.size;
      t3 = b == null;
      t2 = A.lerpDouble(t2, t3 ? _null : b.size, t);
      t4 = t1 ? _null : a.fill;
      t4 = A.lerpDouble(t4, t3 ? _null : b.fill, t);
      t5 = t1 ? _null : a.weight;
      t5 = A.lerpDouble(t5, t3 ? _null : b.weight, t);
      t6 = t1 ? _null : a.grade;
      t6 = A.lerpDouble(t6, t3 ? _null : b.grade, t);
      t7 = t1 ? _null : a.opticalSize;
      t7 = A.lerpDouble(t7, t3 ? _null : b.opticalSize, t);
      t8 = t1 ? _null : a.color;
      t8 = A.Color_lerp(t8, t3 ? _null : b.color, t);
      t9 = t1 ? _null : a.get$opacity();
      t9 = A.lerpDouble(t9, t3 ? _null : b.get$opacity(), t);
      t10 = t1 ? _null : a.shadows;
      t10 = A.Shadow_lerpList(t10, t3 ? _null : b.shadows, t);
      if (t < 0.5)
        t1 = t1 ? _null : a.applyTextScaling;
      else
        t1 = t3 ? _null : b.applyTextScaling;
      return A.IconThemeData$(t1, t8, t4, t6, t9, t7, t10, t2, t5);
    },
    IconThemeData: function IconThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.size = t0;
      _.fill = t1;
      _.weight = t2;
      _.grade = t3;
      _.opticalSize = t4;
      _.color = t5;
      _._opacity = t6;
      _.shadows = t7;
      _.applyTextScaling = t8;
    },
    _IconThemeData_Object_Diagnosticable: function _IconThemeData_Object_Diagnosticable() {
    },
    DecorationTween$(begin, end) {
      return new A.DecorationTween(begin, end);
    },
    EdgeInsetsTween$(begin, end) {
      return new A.EdgeInsetsTween(begin, end);
    },
    BorderRadiusTween$(begin) {
      return new A.BorderRadiusTween(begin, null);
    },
    TextStyleTween$(begin) {
      return new A.TextStyleTween(begin, null);
    },
    AnimatedDefaultTextStyle$(child, duration, style) {
      return new A.AnimatedDefaultTextStyle(child, style, C.C__Linear, duration, null, null);
    },
    _AnimatedDefaultTextStyleState$() {
      return new A._AnimatedDefaultTextStyleState(null, null);
    },
    AnimatedPhysicalModel$(animateColor, child, clipBehavior, color, curve, duration, elevation, shadowColor) {
      return new A.AnimatedPhysicalModel(child, clipBehavior, elevation, color, animateColor, shadowColor, curve, duration, null, null);
    },
    _AnimatedPhysicalModelState$() {
      return new A._AnimatedPhysicalModelState(null, null);
    },
    DecorationTween: function DecorationTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    EdgeInsetsTween: function EdgeInsetsTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    BorderRadiusTween: function BorderRadiusTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    TextStyleTween: function TextStyleTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    ImplicitlyAnimatedWidget: function ImplicitlyAnimatedWidget() {
    },
    ImplicitlyAnimatedWidgetState: function ImplicitlyAnimatedWidgetState() {
    },
    ImplicitlyAnimatedWidgetState_initState_closure: function ImplicitlyAnimatedWidgetState_initState_closure(t0) {
      this.$this = t0;
    },
    ImplicitlyAnimatedWidgetState_didUpdateWidget_closure: function ImplicitlyAnimatedWidgetState_didUpdateWidget_closure(t0) {
      this.$this = t0;
    },
    ImplicitlyAnimatedWidgetState__constructTweens_closure: function ImplicitlyAnimatedWidgetState__constructTweens_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    AnimatedWidgetBaseState: function AnimatedWidgetBaseState() {
    },
    AnimatedWidgetBaseState__handleAnimationChanged_closure: function AnimatedWidgetBaseState__handleAnimationChanged_closure() {
    },
    AnimatedDefaultTextStyle: function AnimatedDefaultTextStyle(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.child = t0;
      _.style = t1;
      _.curve = t2;
      _.duration = t3;
      _.onEnd = t4;
      _.key = t5;
    },
    _AnimatedDefaultTextStyleState: function _AnimatedDefaultTextStyleState(t0, t1) {
      var _ = this;
      _._implicit_animations$_style = null;
      _.__ImplicitlyAnimatedWidgetState__animation_AI = _.__ImplicitlyAnimatedWidgetState__controller_FI = $;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._framework0$_element = _._widget = null;
    },
    _AnimatedDefaultTextStyleState_forEachTween_closure: function _AnimatedDefaultTextStyleState_forEachTween_closure() {
    },
    AnimatedPhysicalModel: function AnimatedPhysicalModel(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.child = t0;
      _.clipBehavior = t1;
      _.elevation = t2;
      _.color = t3;
      _.animateColor = t4;
      _.shadowColor = t5;
      _.curve = t6;
      _.duration = t7;
      _.onEnd = t8;
      _.key = t9;
    },
    _AnimatedPhysicalModelState: function _AnimatedPhysicalModelState(t0, t1) {
      var _ = this;
      _._implicit_animations$_shadowColor = _._implicit_animations$_color = _._implicit_animations$_elevation = _._implicit_animations$_borderRadius = null;
      _.__ImplicitlyAnimatedWidgetState__animation_AI = _.__ImplicitlyAnimatedWidgetState__controller_FI = $;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._framework0$_element = _._widget = null;
    },
    _AnimatedPhysicalModelState_forEachTween_closure: function _AnimatedPhysicalModelState_forEachTween_closure() {
    },
    _AnimatedPhysicalModelState_forEachTween_closure0: function _AnimatedPhysicalModelState_forEachTween_closure0() {
    },
    _AnimatedPhysicalModelState_forEachTween_closure1: function _AnimatedPhysicalModelState_forEachTween_closure1() {
    },
    _AnimatedPhysicalModelState_forEachTween_closure2: function _AnimatedPhysicalModelState_forEachTween_closure2() {
    },
    _ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin: function _ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin() {
    },
    InheritedTheme: function InheritedTheme() {
    },
    _Pending$(delegate, futureValue) {
      return new A._Pending(delegate, futureValue);
    },
    _loadAll(locale, allDelegates) {
      var types, delegates, t3, t4, t5, inputValue, futureValue, _box_1 = {},
        t1 = type$.Type,
        t2 = type$.dynamic,
        output = B.LinkedHashMap_LinkedHashMap$_empty(t1, t2);
      _box_1.pendingList = null;
      types = B.LinkedHashSet_LinkedHashSet$_empty(t1);
      delegates = B._setArrayType([], type$.JSArray_LocalizationsDelegate_dynamic);
      for (t1 = J.get$iterator$ax(allDelegates); B.boolConversionCheck(t1.moveNext$0());) {
        t3 = t1.get$current();
        if (!B.boolConversionCheck(types.contains$1(0, t3.get$type())) && B.boolConversionCheck(t3.isSupported$1(locale))) {
          types.add$1(0, t3.get$type());
          F.JSArray_methods.add$1(delegates, t3);
        }
      }
      for (t1 = F.JSArray_methods.get$iterator(delegates), t3 = type$.JSArray__Pending; B.boolConversionCheck(t1.moveNext$0());) {
        t4 = {};
        t5 = t1.get$current();
        inputValue = t5.load$1(locale);
        t4.completedValue = null;
        futureValue = inputValue.then$1$1(new A._loadAll_closure(t4), t2);
        if (t4.completedValue != null)
          output.$indexSet(0, t5.get$type(), t4.completedValue);
        else {
          t4 = _box_1.pendingList;
          if (t4 == null)
            t4 = _box_1.pendingList = B._setArrayType([], t3);
          J.add$1$ax(t4, A._Pending$(t5, futureValue));
        }
      }
      t1 = _box_1.pendingList;
      if (t1 == null)
        return E.SynchronousFuture$(output, type$.Map_Type_dynamic);
      return B.Future_wait(J.map$1$1$ax(t1, new A._loadAll_closure0(), type$.Future_dynamic), t2).then$1$1(new A._loadAll_closure1(_box_1, output), type$.Map_Type_dynamic);
    },
    DefaultWidgetsLocalizations_load(locale) {
      return E.SynchronousFuture$(C.C_DefaultWidgetsLocalizations, type$.WidgetsLocalizations);
    },
    _LocalizationsScope$(child, key, locale, localizationsState, typeToResources) {
      return new A._LocalizationsScope(localizationsState, typeToResources, child, key);
    },
    Localizations$(child, delegates, locale) {
      return new A.Localizations(locale, delegates, child, null);
    },
    Localizations_maybeLocaleOf(context) {
      var scope = context.dependOnInheritedWidgetOfExactType$1$0(type$._LocalizationsScope);
      return scope == null ? null : scope.localizationsState.get$locale();
    },
    Localizations_of(context, type, $T) {
      var scope = context.dependOnInheritedWidgetOfExactType$1$0(type$._LocalizationsScope);
      return scope == null ? null : scope.localizationsState.resourcesFor$1$1(type, $T._eval$1("0?"));
    },
    _LocalizationsState$() {
      return new A._LocalizationsState(A.GlobalKey_GlobalKey(null, type$.State_StatefulWidget), B.LinkedHashMap_LinkedHashMap$_empty(type$.Type, type$.dynamic));
    },
    _Pending: function _Pending(t0, t1) {
      this.delegate = t0;
      this.futureValue = t1;
    },
    _loadAll_closure: function _loadAll_closure(t0) {
      this._box_0 = t0;
    },
    _loadAll_closure0: function _loadAll_closure0() {
    },
    _loadAll_closure1: function _loadAll_closure1(t0, t1) {
      this._box_1 = t0;
      this.output = t1;
    },
    LocalizationsDelegate: function LocalizationsDelegate() {
    },
    _WidgetsLocalizationsDelegate: function _WidgetsLocalizationsDelegate() {
    },
    DefaultWidgetsLocalizations: function DefaultWidgetsLocalizations() {
    },
    _LocalizationsScope: function _LocalizationsScope(t0, t1, t2, t3) {
      var _ = this;
      _.localizationsState = t0;
      _.typeToResources = t1;
      _.child = t2;
      _.key = t3;
    },
    Localizations: function Localizations(t0, t1, t2, t3) {
      var _ = this;
      _.locale = t0;
      _.delegates = t1;
      _.child = t2;
      _.key = t3;
    },
    _LocalizationsState: function _LocalizationsState(t0, t1) {
      var _ = this;
      _._localizedResourcesScopeKey = t0;
      _._typeToResources = t1;
      _._framework0$_element = _._widget = _._localizations$_locale = null;
    },
    _LocalizationsState_load_closure: function _LocalizationsState_load_closure(t0) {
      this._box_0 = t0;
    },
    _LocalizationsState_load_closure0: function _LocalizationsState_load_closure0(t0, t1) {
      this.$this = t0;
      this.locale = t1;
    },
    _LocalizationsState_load__closure: function _LocalizationsState_load__closure(t0, t1, t2) {
      this.$this = t0;
      this.value = t1;
      this.locale = t2;
    },
    LookupBoundary_dependOnInheritedWidgetOfExactType(context, $T) {
      var candidate;
      context.dependOnInheritedWidgetOfExactType$1$0(type$.LookupBoundary);
      candidate = A.LookupBoundary_getElementForInheritedWidgetOfExactType(context, $T);
      if (candidate == null)
        return null;
      context.dependOnInheritedElement$2$aspect(candidate, null);
      return $T._as(candidate.get$widget());
    },
    LookupBoundary_getElementForInheritedWidgetOfExactType(context, $T) {
      var boundary, t1, t2,
        candidate = context.getElementForInheritedWidgetOfExactType$1$0($T);
      if (candidate == null)
        return null;
      boundary = context.getElementForInheritedWidgetOfExactType$1$0(type$.LookupBoundary);
      if (boundary != null) {
        t1 = boundary.get$depth();
        t2 = candidate.get$depth();
        if (typeof t1 !== "number")
          return t1.$gt();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t2 = t1 > t2;
        t1 = t2;
      } else
        t1 = false;
      if (t1)
        return null;
      return candidate;
    },
    LookupBoundary_findAncestorRenderObjectOfType(context, $T) {
      var t1 = {};
      t1.target = null;
      context.visitAncestorElements$1(new A.LookupBoundary_findAncestorRenderObjectOfType_closure(t1, $T));
      t1 = t1.target;
      t1 = t1 == null ? null : t1.get$renderObject();
      return $T._eval$1("0?")._as(t1);
    },
    LookupBoundary_findAncestorRenderObjectOfType_closure: function LookupBoundary_findAncestorRenderObjectOfType_closure(t0, t1) {
      this._box_0 = t0;
      this.T = t1;
    },
    _SemanticsClipper$(child, clipDetailsNotifier) {
      return new A._SemanticsClipper(clipDetailsNotifier, child, null);
    },
    _RenderSemanticsClipper$(clipDetailsNotifier) {
      var t1 = new A._RenderSemanticsClipper(clipDetailsNotifier, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    ModalBarrier$(barrierSemanticsDismissible, clipDetailsNotifier, color, dismissible, onDismiss, semanticsLabel, semanticsOnTapHint) {
      return new A.ModalBarrier(color, dismissible, onDismiss, barrierSemanticsDismissible, semanticsLabel, clipDetailsNotifier, semanticsOnTapHint, null);
    },
    AnimatedModalBarrier$(barrierSemanticsDismissible, color, dismissible, semanticsLabel) {
      return new A.AnimatedModalBarrier(dismissible, semanticsLabel, barrierSemanticsDismissible, color, null);
    },
    _AnyTapGestureRecognizer$() {
      var _null = null,
        t1 = type$.int;
      t1 = new A._AnyTapGestureRecognizer(D.Duration_100000, 18, C.GestureRecognizerState_0, B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), B.HashSet_HashSet(t1), _null, _null, A.recognizer_GestureRecognizer__defaultButtonAcceptBehavior$closure(), B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
      t1.GestureRecognizer$3$allowedButtonsFilter$debugOwner$supportedDevices(A.recognizer_GestureRecognizer__defaultButtonAcceptBehavior$closure(), _null, _null);
      return t1;
    },
    _AnyTapGestureRecognizerFactory$(onAnyTapUp) {
      return new A._AnyTapGestureRecognizerFactory(onAnyTapUp);
    },
    _ModalBarrierGestureDetector$(child, onDismiss) {
      return new A._ModalBarrierGestureDetector(child, onDismiss, null);
    },
    _SemanticsClipper: function _SemanticsClipper(t0, t1, t2) {
      this.clipDetailsNotifier = t0;
      this.child = t1;
      this.key = t2;
    },
    _RenderSemanticsClipper: function _RenderSemanticsClipper(t0, t1, t2, t3) {
      var _ = this;
      _._clipDetailsNotifier = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._layoutCacheStorage = t2;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    ModalBarrier: function ModalBarrier(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.color = t0;
      _.dismissible = t1;
      _.onDismiss = t2;
      _.barrierSemanticsDismissible = t3;
      _.semanticsLabel = t4;
      _.clipDetailsNotifier = t5;
      _.semanticsOnTapHint = t6;
      _.key = t7;
    },
    ModalBarrier_build_handleDismiss: function ModalBarrier_build_handleDismiss(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    AnimatedModalBarrier: function AnimatedModalBarrier(t0, t1, t2, t3, t4) {
      var _ = this;
      _.dismissible = t0;
      _.semanticsLabel = t1;
      _.barrierSemanticsDismissible = t2;
      _.listenable = t3;
      _.key = t4;
    },
    _AnyTapGestureRecognizer: function _AnyTapGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.onAnyTapUp = null;
      _._wonArenaForPrimaryPointer = _._sentTapDown = false;
      _._up = _._down = null;
      _.deadline = t0;
      _.postAcceptSlopTolerance = t1;
      _._recognizer$_state = t2;
      _._recognizer$_initialPosition = _._primaryPointer = null;
      _._gestureAccepted = false;
      _._recognizer$_timer = null;
      _._recognizer$_entries = t3;
      _._trackedPointers = t4;
      _.debugOwner = t5;
      _.gestureSettings = null;
      _.supportedDevices = t6;
      _.allowedButtonsFilter = t7;
      _._pointerToKind = t8;
    },
    _AnyTapGestureRecognizerFactory: function _AnyTapGestureRecognizerFactory(t0) {
      this.onAnyTapUp = t0;
    },
    _ModalBarrierGestureDetector: function _ModalBarrierGestureDetector(t0, t1, t2) {
      this.child = t0;
      this.onDismiss = t1;
      this.key = t2;
    },
    RouteSettings$($arguments, $name) {
      return new A.RouteSettings($name, $arguments);
    },
    HeroControllerScope$(child, controller) {
      return new A.HeroControllerScope(controller, child, null);
    },
    HeroControllerScope$none(child) {
      return new A.HeroControllerScope(null, child, null);
    },
    HeroControllerScope_maybeOf(context) {
      var host = context.dependOnInheritedWidgetOfExactType$1$0(type$.HeroControllerScope);
      return host == null ? null : host.controller;
    },
    Navigator$(clipBehavior, initialRoute, key, observers, onGenerateInitialRoutes, onGenerateRoute, onUnknownRoute, reportsRouteUpdateToEngine, restorationScopeId, routeTraversalEdgeBehavior) {
      return new A.Navigator(initialRoute, onGenerateRoute, onUnknownRoute, observers, restorationScopeId, routeTraversalEdgeBehavior, onGenerateInitialRoutes, reportsRouteUpdateToEngine, clipBehavior, key);
    },
    Navigator_maybePop(context, $T) {
      return A.Navigator_of(context).maybePop$1$1(null, $T);
    },
    Navigator_of(context) {
      var $navigator = context instanceof E.StatefulElement0 && context.get$state() instanceof A.NavigatorState ? type$.NavigatorState._as(context.get$state()) : null;
      if ($navigator == null)
        $navigator = context.findAncestorStateOfType$1$0(type$.NavigatorState);
      $navigator.toString;
      return $navigator;
    },
    Navigator_defaultGenerateInitialRoutes($navigator, initialRouteName) {
      var result, t1, routeParts, t2, routeName, _null = null;
      type$.NavigatorState._as($navigator);
      B._asString(initialRouteName);
      result = B._setArrayType([], type$.JSArray_nullable_Route_dynamic);
      if (B.boolConversionCheck(F.JSString_methods.startsWith$1(initialRouteName, "/")) && initialRouteName.length > 1) {
        initialRouteName = F.JSString_methods.substring$1(initialRouteName, 1);
        t1 = type$.dynamic;
        F.JSArray_methods.add$1(result, $navigator._routeNamed$1$3$allowNull$arguments("/", true, _null, t1));
        routeParts = B._setArrayType(initialRouteName.split("/"), type$.JSArray_String);
        if (B.boolConversionCheck(F.JSString_methods.get$isNotEmpty(initialRouteName)))
          for (t2 = F.JSArray_methods.get$iterator(routeParts), routeName = ""; B.boolConversionCheck(t2.moveNext$0());) {
            routeName += "/" + t2.get$current();
            F.JSArray_methods.add$1(result, $navigator._routeNamed$1$3$allowNull$arguments(routeName, true, _null, t1));
          }
        if (F.JSArray_methods.get$last(result) == null) {
          for (t1 = F.JSArray_methods.get$iterator(result); B.boolConversionCheck(t1.moveNext$0());) {
            t2 = t1.get$current();
            if (t2 != null)
              t2.dispose$0();
          }
          F.JSArray_methods.clear$0(result);
        }
      } else if (initialRouteName !== "/")
        F.JSArray_methods.add$1(result, $navigator._routeNamed$1$3$allowNull$arguments(initialRouteName, true, _null, type$.dynamic));
      F.JSArray_methods.removeWhere$1(result, new A.Navigator_defaultGenerateInitialRoutes_closure());
      if (B.boolConversionCheck(F.JSArray_methods.get$isEmpty(result)))
        F.JSArray_methods.add$1(result, $navigator._routeNamed$1$2$arguments("/", _null, type$.dynamic));
      return F.JSArray_methods.cast$1$0(result, type$.Route_dynamic);
    },
    _RouteEntry$(route, initialState, pageBased, restorationInformation) {
      var t1 = new A._RouteEntry(route, restorationInformation, pageBased, initialState, C.C__RoutePlaceholder, A.WeakReference_WeakReference(C.C__RoutePlaceholder, type$._RoutePlaceholder), C.C__RoutePlaceholder);
      t1._RouteEntry$4$initialState$pageBased$restorationInformation(route, initialState, pageBased, restorationInformation);
      return t1;
    },
    _RouteEntry_isPresentPredicate(entry) {
      return type$._RouteEntry._as(entry).get$isPresent();
    },
    _RouteEntry_suitableForTransitionAnimationPredicate(entry) {
      return type$._RouteEntry._as(entry).get$suitableForTransitionAnimation();
    },
    _RouteEntry_willBePresentPredicate(entry) {
      return type$._RouteEntry._as(entry).get$willBePresent();
    },
    _RouteEntry_isRoutePredicate(route) {
      return new A._RouteEntry_isRoutePredicate_closure(route);
    },
    _NavigatorPushObservation$(primaryRoute, secondaryRoute) {
      return new A._NavigatorPushObservation(primaryRoute, secondaryRoute);
    },
    _NavigatorPopObservation$(primaryRoute, secondaryRoute) {
      return new A._NavigatorPopObservation(primaryRoute, secondaryRoute);
    },
    _NavigatorRemoveObservation$(primaryRoute, secondaryRoute) {
      return new A._NavigatorRemoveObservation(primaryRoute, secondaryRoute);
    },
    _NavigatorReplaceObservation$(primaryRoute, secondaryRoute) {
      return new A._NavigatorReplaceObservation(primaryRoute, secondaryRoute);
    },
    _History$() {
      var t1 = new A._History(B._setArrayType([], type$.JSArray__RouteEntry), $.$get$ChangeNotifier__emptyListeners());
      t1._History$0();
      return t1;
    },
    NavigatorState$() {
      var _null = null,
        t1 = type$._NavigatorObservation,
        t2 = type$.int;
      return new A.NavigatorState(A._History$(), B.LinkedHashSet_LinkedHashSet$_empty(type$._RouteEntry), A._HistoryProperty$(), E.ListQueue$(_null, t1), E.ListQueue$(_null, t1), E.FocusNode$(true, "Navigator", true, true, _null, _null, false), A.RestorableNum$(0, t2), E.ValueNotifier$(false, type$.bool), B.LinkedHashSet_LinkedHashSet$_empty(t2), _null, B.LinkedHashMap_LinkedHashMap$_empty(type$.RestorableProperty_nullable_Object, type$.void_Function), _null, true, _null, _null, _null);
    },
    NavigatorState__disposeRouteEntry(entry, graceful) {
      var t1;
      for (t1 = J.get$iterator$ax(entry.route.get$overlayEntries()); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().remove$0(0);
      if (graceful)
        entry.dispose$0();
      else
        entry.forcedDispose$0();
    },
    _RestorationInformation__RestorationInformation$fromSerializableData(data) {
      var t1, t2;
      type$.List_nullable_Object._as(data);
      t1 = J.getInterceptor$asx(data);
      t2 = t1.$index(data, 0);
      t2.toString;
      B._asInt(t2);
      if (!(t2 >= 0 && t2 < 2))
        return B.ioore(C.List_8Gl, t2);
      switch (C.List_8Gl[t2].index) {
        case 0:
          return A._NamedRestorationInformation$fromSerializableData(t1.sublist$1(data, 1));
        case 1:
          return A._AnonymousRestorationInformation$fromSerializableData(t1.sublist$1(data, 1));
      }
    },
    _NamedRestorationInformation$($arguments, $name, restorationScopeId) {
      return new A._NamedRestorationInformation(restorationScopeId, $name, $arguments, C._RouteRestorationType_0);
    },
    _NamedRestorationInformation$fromSerializableData(data) {
      var t1 = J.getInterceptor$asx(data),
        t2 = t1.$index(data, 0);
      t2.toString;
      B._asInt(t2);
      t1 = t1.$index(data, 1);
      t1.toString;
      return new A._NamedRestorationInformation(t2, B._asString(t1), A.IterableExtensions_elementAtOrNull(data, 2, type$.nullable_Object), C._RouteRestorationType_0);
    },
    _AnonymousRestorationInformation$fromSerializableData(data) {
      var t1 = J.getInterceptor$asx(data),
        t2 = t1.$index(data, 0);
      t2.toString;
      B._asInt(t2);
      t1 = t1.$index(data, 1);
      t1.toString;
      t1 = A.PluginUtilities_getCallbackFromHandle(A.CallbackHandle$fromRawHandle(B._asInt(t1)));
      t1.toString;
      return new A._AnonymousRestorationInformation(t2, type$.Route_dynamic_Function_2_BuildContext_and_nullable_Object._as(t1), A.IterableExtensions_elementAtOrNull(data, 2, type$.nullable_Object), C._RouteRestorationType_1);
    },
    _HistoryProperty$() {
      var t1 = new A._HistoryProperty($.$get$ChangeNotifier__emptyListeners());
      t1.RestorableProperty$0(type$.nullable_Map_of_nullable_String_and_List_Object);
      return t1;
    },
    NavigationNotification$(canHandlePop) {
      return new A.NavigationNotification(canHandlePop);
    },
    RoutePopDisposition: function RoutePopDisposition(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    Route: function Route() {
    },
    Route_didPush_closure: function Route_didPush_closure(t0) {
      this.$this = t0;
    },
    Route_didAdd_closure: function Route_didAdd_closure(t0) {
      this.$this = t0;
    },
    RouteSettings: function RouteSettings(t0, t1) {
      this.name = t0;
      this.$arguments = t1;
    },
    NavigatorObserver: function NavigatorObserver() {
    },
    HeroControllerScope: function HeroControllerScope(t0, t1, t2) {
      this.controller = t0;
      this.child = t1;
      this.key = t2;
    },
    RouteTransitionRecord: function RouteTransitionRecord() {
    },
    TransitionDelegate: function TransitionDelegate() {
    },
    DefaultTransitionDelegate: function DefaultTransitionDelegate(t0) {
      this.$ti = t0;
    },
    Navigator: function Navigator(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.initialRoute = t0;
      _.onGenerateRoute = t1;
      _.onUnknownRoute = t2;
      _.observers = t3;
      _.restorationScopeId = t4;
      _.routeTraversalEdgeBehavior = t5;
      _.onGenerateInitialRoutes = t6;
      _.reportsRouteUpdateToEngine = t7;
      _.clipBehavior = t8;
      _.key = t9;
    },
    Navigator_defaultGenerateInitialRoutes_closure: function Navigator_defaultGenerateInitialRoutes_closure() {
    },
    _RouteLifecycle: function _RouteLifecycle(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _RoutePlaceholder: function _RoutePlaceholder() {
    },
    _RouteEntry: function _RouteEntry(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.route = t0;
      _.restorationInformation = t1;
      _.pageBased = t2;
      _.currentState = t3;
      _.lastAnnouncedPreviousRoute = t4;
      _.lastAnnouncedPoppedNextRoute = t5;
      _.lastAnnouncedNextRoute = t6;
      _.pendingResult = _.lastFocusNode = null;
      _._reportRemovalToObserver = true;
      _._isWaitingForExitingDecision = false;
    },
    _RouteEntry_handlePush_closure: function _RouteEntry_handlePush_closure(t0, t1) {
      this.$this = t0;
      this.navigator = t1;
    },
    _RouteEntry_handleDidPopNext_closure: function _RouteEntry_handleDidPopNext_closure(t0) {
      this.$this = t0;
    },
    _RouteEntry_dispose_closure: function _RouteEntry_dispose_closure() {
    },
    _RouteEntry_dispose_closure0: function _RouteEntry_dispose_closure0(t0, t1, t2, t3, t4) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.entry = t2;
      _.listener = t3;
      _.navigator = t4;
    },
    _RouteEntry_dispose__closure: function _RouteEntry_dispose__closure(t0, t1) {
      this.$this = t0;
      this.navigator = t1;
    },
    _RouteEntry_isRoutePredicate_closure: function _RouteEntry_isRoutePredicate_closure(t0) {
      this.route = t0;
    },
    _NavigatorObservation: function _NavigatorObservation() {
    },
    _NavigatorPushObservation: function _NavigatorPushObservation(t0, t1) {
      this.primaryRoute = t0;
      this.secondaryRoute = t1;
    },
    _NavigatorPopObservation: function _NavigatorPopObservation(t0, t1) {
      this.primaryRoute = t0;
      this.secondaryRoute = t1;
    },
    _NavigatorRemoveObservation: function _NavigatorRemoveObservation(t0, t1) {
      this.primaryRoute = t0;
      this.secondaryRoute = t1;
    },
    _NavigatorReplaceObservation: function _NavigatorReplaceObservation(t0, t1) {
      this.primaryRoute = t0;
      this.secondaryRoute = t1;
    },
    _History: function _History(t0, t1) {
      var _ = this;
      _._navigator$_value = t0;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = false;
    },
    NavigatorState: function NavigatorState(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _.__NavigatorState__overlayKey_A = $;
      _._navigator$_history = t0;
      _._entryWaitingForSubTreeDisposal = t1;
      _._serializableHistory = t2;
      _._observedRouteAdditions = t3;
      _._observedRouteDeletions = t4;
      _.focusNode = t5;
      _._heroControllerFromScope = null;
      _.__NavigatorState__effectiveObservers_A = $;
      _._rawNextPagelessRestorationScopeId = t6;
      _._lastAnnouncedRouteName = null;
      _._flushingHistory = false;
      _._userGesturesInProgressCount = 0;
      _.userGestureInProgressNotifier = t7;
      _._activePointers = t8;
      _.RestorationMixin__bucket = t9;
      _.RestorationMixin__properties = t10;
      _.RestorationMixin__debugPropertiesWaitingForReregistration = t11;
      _.RestorationMixin__firstRestorePending = t12;
      _.RestorationMixin__currentParent = t13;
      _.TickerProviderStateMixin__tickers = t14;
      _.TickerProviderStateMixin__tickerModeNotifier = t15;
      _._framework0$_element = _._widget = null;
    },
    NavigatorState__handleHistoryChanged_closure: function NavigatorState__handleHistoryChanged_closure(t0, t1) {
      this.$this = t0;
      this.notification = t1;
    },
    NavigatorState_restoreState_closure: function NavigatorState_restoreState_closure(t0) {
      this.$this = t0;
    },
    NavigatorState__forcedDisposeAllRouteEntries_closure: function NavigatorState__forcedDisposeAllRouteEntries_closure() {
    },
    NavigatorState__afterNavigation_closure: function NavigatorState__afterNavigation_closure() {
    },
    NavigatorState__cancelActivePointers_closure: function NavigatorState__cancelActivePointers_closure(t0) {
      this.absorber = t0;
    },
    NavigatorState_build_closure: function NavigatorState_build_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    _RouteRestorationType: function _RouteRestorationType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _RestorationInformation: function _RestorationInformation() {
    },
    _NamedRestorationInformation: function _NamedRestorationInformation(t0, t1, t2, t3) {
      var _ = this;
      _.restorationScopeId = t0;
      _.name = t1;
      _.$arguments = t2;
      _.type = t3;
      _._serializableData = null;
    },
    _AnonymousRestorationInformation: function _AnonymousRestorationInformation(t0, t1, t2, t3) {
      var _ = this;
      _.restorationScopeId = t0;
      _.routeBuilder = t1;
      _.$arguments = t2;
      _.type = t3;
      _._serializableData = null;
    },
    _HistoryProperty: function _HistoryProperty(t0) {
      var _ = this;
      _._pageToPagelessRoutes = null;
      _._restoration0$_disposed = false;
      _._restoration0$_owner = _._restoration0$_restorationId = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = false;
    },
    _HistoryProperty_fromPrimitives_closure: function _HistoryProperty_fromPrimitives_closure() {
    },
    NavigationNotification: function NavigationNotification(t0) {
      this.canHandlePop = t0;
    },
    _NavigatorState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure: function _NavigatorState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure() {
    },
    _NavigatorState_State_TickerProviderStateMixin: function _NavigatorState_State_TickerProviderStateMixin() {
    },
    _NavigatorState_State_TickerProviderStateMixin_RestorationMixin: function _NavigatorState_State_TickerProviderStateMixin_RestorationMixin() {
    },
    __History_Iterable_ChangeNotifier: function __History_Iterable_ChangeNotifier() {
    },
    NotificationListener$(child, onNotification, $T) {
      return new A.NotificationListener(onNotification, child, null, $T._eval$1("NotificationListener<0>"));
    },
    _NotificationElement$(widget, $T) {
      var t1 = new A._NotificationElement(widget, D._ElementLifecycle_00, B.HashSet_HashSet(type$.Element), $T._eval$1("_NotificationElement<0>"));
      t1.Element$1(widget);
      return t1;
    },
    Notification: function Notification() {
    },
    NotificationListener: function NotificationListener(t0, t1, t2, t3) {
      var _ = this;
      _.onNotification = t0;
      _.child = t1;
      _.key = t2;
      _.$ti = t3;
    },
    _NotificationElement: function _NotificationElement(t0, t1, t2, t3) {
      var _ = this;
      _._slot = _._framework0$_notificationTree = _._framework0$_parent = _._framework0$_child = null;
      _.__Element__depth_A = $;
      _._widget = t0;
      _._parentBuildScope = _._framework0$_owner = null;
      _._framework0$_lifecycleState = t1;
      _._debugForgottenChildrenWithGlobalKey = t2;
      _._framework0$_dependencies = _._framework0$_inheritedElements = null;
      _._framework0$_hadUnsatisfiedDependencies = false;
      _._framework0$_dirty = true;
      _._framework0$_inDirtyList = false;
      _.$ti = t3;
    },
    __NotificationElement_ProxyElement_NotifiableElementMixin: function __NotificationElement_ProxyElement_NotifiableElementMixin() {
    },
    OverlayEntry$(builder, canSizeOverlay, maintainState) {
      var t1 = new A.OverlayEntry(builder, maintainState, canSizeOverlay, E.ValueNotifier$(null, type$.nullable__OverlayEntryWidgetState), A.GlobalKey_GlobalKey(null, type$._OverlayEntryWidgetState));
      t1.OverlayEntry$4$builder$canSizeOverlay$maintainState$opaque(builder, canSizeOverlay, maintainState, false);
      return t1;
    },
    _OverlayEntryWidget$(entry, key, overlayState, tickerEnabled) {
      return new A._OverlayEntryWidget(entry, overlayState, tickerEnabled, key);
    },
    _OverlayEntryWidgetState$() {
      return new A._OverlayEntryWidgetState();
    },
    Overlay$(clipBehavior, initialEntries, key) {
      return new A.Overlay(initialEntries, clipBehavior, key);
    },
    OverlayState$() {
      return new A.OverlayState(B._setArrayType([], type$.JSArray_OverlayEntry), null, null);
    },
    _Theater$(children, clipBehavior, skipCount) {
      return new A._Theater(skipCount, clipBehavior, children, null);
    },
    _TheaterElement$(widget) {
      var t1 = type$.Element;
      t1 = new A._TheaterElement(B.HashSet_HashSet(t1), widget, D._ElementLifecycle_00, B.HashSet_HashSet(t1));
      t1.Element$1(widget);
      return t1;
    },
    _RenderTheaterMixin_baselineForChild(child, theaterSize, nonPositionedChildConstraints, alignment, baseline) {
      var childConstraints, baselineOffset, _0_1, t2, $top, _0_3, bottom, _null = null,
        t1 = child.parentData;
      t1.toString;
      type$.StackParentData._as(t1);
      childConstraints = B.boolConversionCheck(t1.get$isPositioned()) ? t1.positionedChildConstraints$1(theaterSize) : nonPositionedChildConstraints;
      baselineOffset = child.getDryBaseline$2(childConstraints, baseline);
      if (baselineOffset == null)
        return _null;
      $label0$0: {
        _0_1 = t1.top;
        t2 = _0_1;
        t2 = t2 != null;
        if (t2)
          if (_0_1 == null)
            B._asDouble(_0_1);
        if (t2) {
          $top = _0_1 == null ? B._asDouble(_0_1) : _0_1;
          t1 = $top;
          break $label0$0;
        }
        _0_3 = t1.bottom;
        t1 = _0_3;
        t1 = t1 != null;
        if (t1)
          if (_0_3 == null)
            B._asDouble(_0_3);
        if (t1) {
          bottom = _0_3 == null ? B._asDouble(_0_3) : _0_3;
          t1 = theaterSize.get$height();
          if (typeof t1 !== "number")
            return t1.$sub();
          t2 = child.getDryLayout$1(childConstraints).get$height();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t2 = t1 - bottom - t2;
          t1 = t2;
          break $label0$0;
        }
        t1 = alignment.alongOffset$1(type$.Offset._as(theaterSize.$sub(0, child.getDryLayout$1(childConstraints)))).get$dy();
        break $label0$0;
      }
      return baselineOffset + t1;
    },
    _TheaterParentData$() {
      return new A._TheaterParentData(null, null, D.Offset_0_0);
    },
    _RenderTheater$(clipBehavior, skipCount, textDirection) {
      var t1 = new A._RenderTheater(textDirection, skipCount, clipBehavior, E.LayerHandle$(type$.ClipRectLayer), 0, null, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1._RenderTheater$4$children$clipBehavior$skipCount$textDirection(null, clipBehavior, skipCount, textDirection);
      return t1;
    },
    _RenderTheater__detachChild(child) {
      return type$.RenderObject._as(child).detach$0();
    },
    _RenderTheaterMarker$(child, overlayEntryWidgetState, theater) {
      return new A._RenderTheaterMarker(theater, overlayEntryWidgetState, child, null);
    },
    OverlayEntry: function OverlayEntry(t0, t1, t2, t3, t4) {
      var _ = this;
      _.builder = t0;
      _._overlay$_opaque = false;
      _._maintainState = t1;
      _.canSizeOverlay = t2;
      _._overlayEntryStateNotifier = t3;
      _._overlay = null;
      _._key = t4;
      _._disposedByOwner = false;
    },
    OverlayEntry_remove_closure: function OverlayEntry_remove_closure(t0) {
      this.overlay = t0;
    },
    _OverlayEntryWidget: function _OverlayEntryWidget(t0, t1, t2, t3) {
      var _ = this;
      _.entry = t0;
      _.overlayState = t1;
      _.tickerEnabled = t2;
      _.key = t3;
    },
    _OverlayEntryWidgetState: function _OverlayEntryWidgetState() {
      var _ = this;
      _.___OverlayEntryWidgetState__theater_A = $;
      _._sortedTheaterSiblings = null;
      _.___OverlayEntryWidgetState__hitTestOrderIterable_FI = _.___OverlayEntryWidgetState__paintOrderIterable_FI = $;
      _._framework0$_element = _._widget = null;
    },
    _OverlayEntryWidgetState__markNeedsBuild_closure: function _OverlayEntryWidgetState__markNeedsBuild_closure() {
    },
    Overlay: function Overlay(t0, t1, t2) {
      this.initialEntries = t0;
      this.clipBehavior = t1;
      this.key = t2;
    },
    OverlayState: function OverlayState(t0, t1, t2) {
      var _ = this;
      _._overlay$_entries = t0;
      _.TickerProviderStateMixin__tickers = t1;
      _.TickerProviderStateMixin__tickerModeNotifier = t2;
      _._framework0$_element = _._widget = null;
    },
    OverlayState_insert_closure: function OverlayState_insert_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.below = t1;
      _.above = t2;
      _.entry = t3;
    },
    OverlayState_insertAll_closure: function OverlayState_insertAll_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.below = t1;
      _.above = t2;
      _.entries = t3;
    },
    OverlayState_rearrange_closure: function OverlayState_rearrange_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.newEntriesList = t1;
      _.old = t2;
      _.below = t3;
      _.above = t4;
    },
    OverlayState__markDirty_closure: function OverlayState__markDirty_closure() {
    },
    OverlayState__didChangeEntryOpacity_closure: function OverlayState__didChangeEntryOpacity_closure() {
    },
    _Theater: function _Theater(t0, t1, t2, t3) {
      var _ = this;
      _.skipCount = t0;
      _.clipBehavior = t1;
      _.children = t2;
      _.key = t3;
    },
    _TheaterElement: function _TheaterElement(t0, t1, t2, t3) {
      var _ = this;
      _.__MultiChildRenderObjectElement__children_A = $;
      _._framework0$_forgottenChildren = t0;
      _._slot = _._framework0$_notificationTree = _._framework0$_parent = _._ancestorRenderObjectElement = _._framework0$_renderObject = null;
      _.__Element__depth_A = $;
      _._widget = t1;
      _._parentBuildScope = _._framework0$_owner = null;
      _._framework0$_lifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._framework0$_dependencies = _._framework0$_inheritedElements = null;
      _._framework0$_hadUnsatisfiedDependencies = false;
      _._framework0$_dirty = true;
      _._framework0$_inDirtyList = false;
    },
    _RenderTheaterMixin: function _RenderTheaterMixin() {
    },
    _RenderTheaterMixin_hitTestChildren_childHitTest: function _RenderTheaterMixin_hitTestChildren_childHitTest(t0) {
      this.localChild = t0;
    },
    _TheaterParentData: function _TheaterParentData(t0, t1, t2) {
      var _ = this;
      _.height = _.width = _.left = _.bottom = _.right = _.top = _.overlayEntry = null;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
    },
    _RenderTheater: function _RenderTheater(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._alignmentCache = null;
      _._overlay$_textDirection = t0;
      _._overlay$_skipCount = t1;
      _._overlay$_clipBehavior = t2;
      _._skipMarkNeedsLayout = false;
      _._overlay$_clipRectLayer = t3;
      _.ContainerRenderObjectMixin__childCount = t4;
      _.ContainerRenderObjectMixin__firstChild = t5;
      _.ContainerRenderObjectMixin__lastChild = t6;
      _._layoutCacheStorage = t7;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t8;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    _RenderTheater_debugDescribeChildren_closure: function _RenderTheater_debugDescribeChildren_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_1 = t0;
      _._box_0 = t1;
      _.onstageChildren = t2;
      _.offstageChildren = t3;
    },
    _RenderTheaterMarker: function _RenderTheaterMarker(t0, t1, t2, t3) {
      var _ = this;
      _.theater = t0;
      _.overlayEntryWidgetState = t1;
      _.child = t2;
      _.key = t3;
    },
    _OverlayState_State_TickerProviderStateMixin: function _OverlayState_State_TickerProviderStateMixin() {
    },
    __RenderTheater_RenderBox_ContainerRenderObjectMixin: function __RenderTheater_RenderBox_ContainerRenderObjectMixin() {
    },
    __RenderTheater_RenderBox_ContainerRenderObjectMixin__RenderTheaterMixin: function __RenderTheater_RenderBox_ContainerRenderObjectMixin__RenderTheaterMixin() {
    },
    PageStorageBucket$() {
      return new A.PageStorageBucket();
    },
    PageStorage$(bucket, child) {
      return new A.PageStorage(child, null);
    },
    PageStorageBucket: function PageStorageBucket() {
    },
    PageStorage: function PageStorage(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    PageRoute: function PageRoute() {
    },
    PerformanceOverlay$allEnabled() {
      return new A.PerformanceOverlay(15, null);
    },
    PerformanceOverlay: function PerformanceOverlay(t0, t1) {
      this.optionsMask = t0;
      this.key = t1;
    },
    MenuSerializableShortcut: function MenuSerializableShortcut() {
    },
    PrimaryScrollController$(child, controller) {
      return new A.PrimaryScrollController(controller, child, null);
    },
    PrimaryScrollController_maybeOf(context) {
      var result = context.dependOnInheritedWidgetOfExactType$1$0(type$.PrimaryScrollController);
      return result == null ? null : result.controller;
    },
    PrimaryScrollController_of(context) {
      var controller = A.PrimaryScrollController_maybeOf(context);
      controller.toString;
      return controller;
    },
    PrimaryScrollController: function PrimaryScrollController(t0, t1, t2) {
      this.controller = t0;
      this.child = t1;
      this.key = t2;
    },
    RestorationScope$(child, restorationId) {
      return new A.RestorationScope(child, restorationId, null);
    },
    RestorationScope_maybeOf(context) {
      var t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.UnmanagedRestorationScope);
      return t1 == null ? null : t1.bucket;
    },
    _RestorationScopeState$() {
      return new A._RestorationScopeState(null, B.LinkedHashMap_LinkedHashMap$_empty(type$.RestorableProperty_nullable_Object, type$.void_Function), null, true, null);
    },
    UnmanagedRestorationScope$(bucket, child) {
      return new A.UnmanagedRestorationScope(bucket, child, null);
    },
    RootRestorationScope$(child, restorationId) {
      return new A.RootRestorationScope(child, restorationId, null);
    },
    _RootRestorationScopeState$() {
      return new A._RootRestorationScopeState();
    },
    RestorationScope: function RestorationScope(t0, t1, t2) {
      this.child = t0;
      this.restorationId = t1;
      this.key = t2;
    },
    _RestorationScopeState: function _RestorationScopeState(t0, t1, t2, t3, t4) {
      var _ = this;
      _.RestorationMixin__bucket = t0;
      _.RestorationMixin__properties = t1;
      _.RestorationMixin__debugPropertiesWaitingForReregistration = t2;
      _.RestorationMixin__firstRestorePending = t3;
      _.RestorationMixin__currentParent = t4;
      _._framework0$_element = _._widget = null;
    },
    UnmanagedRestorationScope: function UnmanagedRestorationScope(t0, t1, t2) {
      this.bucket = t0;
      this.child = t1;
      this.key = t2;
    },
    RootRestorationScope: function RootRestorationScope(t0, t1, t2) {
      this.child = t0;
      this.restorationId = t1;
      this.key = t2;
    },
    _RootRestorationScopeState: function _RootRestorationScopeState() {
      var _ = this;
      _._okToRenderBlankContainer = null;
      _._rootBucketValid = false;
      _._ancestorBucket = _._restoration0$_rootBucket = null;
      _._isLoadingRootBucket = false;
      _._framework0$_element = _._widget = null;
    },
    _RootRestorationScopeState__loadRootBucketIfNecessary_closure: function _RootRestorationScopeState__loadRootBucketIfNecessary_closure(t0) {
      this.$this = t0;
    },
    _RootRestorationScopeState__loadRootBucketIfNecessary__closure: function _RootRestorationScopeState__loadRootBucketIfNecessary__closure(t0, t1) {
      this.$this = t0;
      this.bucket = t1;
    },
    RestorableProperty: function RestorableProperty() {
    },
    RestorationMixin: function RestorationMixin() {
    },
    RestorationMixin_registerForRestoration_listener: function RestorationMixin_registerForRestoration_listener(t0, t1) {
      this.$this = t0;
      this.property = t1;
    },
    __RestorationScopeState_State_RestorationMixin_dispose_closure: function __RestorationScopeState_State_RestorationMixin_dispose_closure() {
    },
    __RestorationScopeState_State_RestorationMixin: function __RestorationScopeState_State_RestorationMixin() {
    },
    RestorableNum$(defaultValue, $T) {
      var t1 = new A.RestorableNum(defaultValue, $.$get$ChangeNotifier__emptyListeners(), $T._eval$1("RestorableNum<0>"));
      t1.RestorableProperty$0($T);
      return t1;
    },
    RestorableValue: function RestorableValue() {
    },
    _RestorablePrimitiveValueN: function _RestorablePrimitiveValueN() {
    },
    _RestorablePrimitiveValue: function _RestorablePrimitiveValue() {
    },
    RestorableNum: function RestorableNum(t0, t1, t2) {
      var _ = this;
      _._restoration_properties$_defaultValue = t0;
      _._restoration_properties$_value = null;
      _._restoration0$_disposed = false;
      _._restoration0$_owner = _._restoration0$_restorationId = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = false;
      _.$ti = t2;
    },
    Router$(backButtonDispatcher, key, restorationScopeId, routeInformationParser, routeInformationProvider, routerDelegate, $T) {
      return new A.Router(routeInformationProvider, routeInformationParser, routerDelegate, backButtonDispatcher, restorationScopeId, key, $T._eval$1("Router<0>"));
    },
    Router_Router$withConfig(config, restorationScopeId, $T) {
      var t1 = config.get$routeInformationProvider(),
        t2 = config.get$routeInformationParser(),
        t3 = config.get$routerDelegate();
      return A.Router$(config.get$backButtonDispatcher(), null, restorationScopeId, t2, t1, t3, $T);
    },
    _RouterState$($T) {
      return new A._RouterState(A._RestorableRouteInformation$(), null, B.LinkedHashMap_LinkedHashMap$_empty(type$.RestorableProperty_nullable_Object, type$.void_Function), null, true, null, $T._eval$1("_RouterState<0>"));
    },
    _RouterScope$(backButtonDispatcher, child, routeInformationParser, routeInformationProvider, routerDelegate, routerState) {
      return new A._RouterScope(routeInformationProvider, backButtonDispatcher, routeInformationParser, routerDelegate, routerState, child, null);
    },
    RootBackButtonDispatcher$() {
      return new A.RootBackButtonDispatcher(A.ObserverList$(type$.Future_bool_Function));
    },
    PlatformRouteInformationProvider$(initialRouteInformation) {
      var t1 = new A.PlatformRouteInformationProvider(initialRouteInformation, E.RouteInformation$(null, E.Uri_parse(E.WidgetsBinding_instance().get$platformDispatcher().get$defaultRouteName())), $.$get$ChangeNotifier__emptyListeners());
      t1.PlatformRouteInformationProvider$1$initialRouteInformation(initialRouteInformation);
      return t1;
    },
    PlatformRouteInformationProvider__equals(a, b) {
      return B.boolConversionCheck(J.$eq$(a.get$path(), b.get$path())) && B.boolConversionCheck(J.$eq$(a.get$fragment(), b.get$fragment())) && B.boolConversionCheck(C.C_DeepCollectionEquality.equals$2(a.get$queryParametersAll(), b.get$queryParametersAll()));
    },
    _RestorableRouteInformation$() {
      var t1 = new A._RestorableRouteInformation($.$get$ChangeNotifier__emptyListeners());
      t1.RestorableProperty$0(type$.nullable_RouteInformation);
      return t1;
    },
    __RouterState_State_RestorationMixin_dispose_closure: function __RouterState_State_RestorationMixin_dispose_closure() {
    },
    Router: function Router(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.routeInformationProvider = t0;
      _.routeInformationParser = t1;
      _.routerDelegate = t2;
      _.backButtonDispatcher = t3;
      _.restorationScopeId = t4;
      _.key = t5;
      _.$ti = t6;
    },
    RouteInformationReportingType: function RouteInformationReportingType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _RouterState: function _RouterState(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._currentIntentionToReport = _._currentRouterTransaction = null;
      _._routeInformation = t0;
      _.___RouterState__routeParsePending_A = $;
      _._routeInformationReportingTaskScheduled = false;
      _.RestorationMixin__bucket = t1;
      _.RestorationMixin__properties = t2;
      _.RestorationMixin__debugPropertiesWaitingForReregistration = t3;
      _.RestorationMixin__firstRestorePending = t4;
      _.RestorationMixin__currentParent = t5;
      _._framework0$_element = _._widget = null;
      _.$ti = t6;
    },
    _RouterState_restoreState_closure: function _RouterState_restoreState_closure(t0) {
      this.$this = t0;
    },
    _RouterState_restoreState_closure0: function _RouterState_restoreState_closure0(t0) {
      this.$this = t0;
    },
    _RouterState_didChangeDependencies_closure: function _RouterState_didChangeDependencies_closure(t0) {
      this.$this = t0;
    },
    _RouterState__processParsedRouteInformation_closure: function _RouterState__processParsedRouteInformation_closure(t0, t1, t2) {
      this.$this = t0;
      this.transaction = t1;
      this.delegateRouteSetter = t2;
    },
    _RouterState__handleRouteInformationProviderNotification_closure: function _RouterState__handleRouteInformationProviderNotification_closure(t0) {
      this.$this = t0;
    },
    _RouterState__handleRoutePopped_closure: function _RouterState__handleRoutePopped_closure(t0, t1) {
      this.$this = t0;
      this.transaction = t1;
    },
    _RouterState__rebuild_closure: function _RouterState__rebuild_closure() {
    },
    _RouterState__handleRouterDelegateNotification_closure: function _RouterState__handleRouterDelegateNotification_closure() {
    },
    _RouterScope: function _RouterScope(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.routeInformationProvider = t0;
      _.backButtonDispatcher = t1;
      _.routeInformationParser = t2;
      _.routerDelegate = t3;
      _.routerState = t4;
      _.child = t5;
      _.key = t6;
    },
    _CallbackHookProvider: function _CallbackHookProvider() {
    },
    _CallbackHookProvider_invokeCallback_closure: function _CallbackHookProvider_invokeCallback_closure(t0) {
      this.$this = t0;
    },
    BackButtonDispatcher: function BackButtonDispatcher() {
    },
    BackButtonDispatcher_invokeCallback_notifyNextChild: function BackButtonDispatcher_invokeCallback_notifyNextChild(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.children = t2;
      _.defaultValue = t3;
    },
    RootBackButtonDispatcher: function RootBackButtonDispatcher(t0) {
      this.__BackButtonDispatcher__children_FI = $;
      this._router$_callbacks = t0;
    },
    RouteInformationProvider: function RouteInformationProvider() {
    },
    PlatformRouteInformationProvider: function PlatformRouteInformationProvider(t0, t1, t2) {
      var _ = this;
      _._router$_value = t0;
      _._valueInEngine = t1;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t2;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = false;
    },
    _RestorableRouteInformation: function _RestorableRouteInformation(t0) {
      var _ = this;
      _._restoration_properties$_value = null;
      _._restoration0$_disposed = false;
      _._restoration0$_owner = _._restoration0$_restorationId = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = false;
    },
    _PlatformRouteInformationProvider_RouteInformationProvider_WidgetsBindingObserver: function _PlatformRouteInformationProvider_RouteInformationProvider_WidgetsBindingObserver() {
    },
    _PlatformRouteInformationProvider_RouteInformationProvider_WidgetsBindingObserver_ChangeNotifier: function _PlatformRouteInformationProvider_RouteInformationProvider_WidgetsBindingObserver_ChangeNotifier() {
    },
    _RootBackButtonDispatcher_BackButtonDispatcher_WidgetsBindingObserver: function _RootBackButtonDispatcher_BackButtonDispatcher_WidgetsBindingObserver() {
    },
    __RouterState_State_RestorationMixin: function __RouterState_State_RestorationMixin() {
    },
    _DismissModalAction$(context) {
      return new A._DismissModalAction(context, A.ObserverList$(type$.void_Function_Action_Intent));
    },
    _ModalScopeStatus$(canPop, child, impliesAppBarDismissal, isCurrent, route) {
      return new A._ModalScopeStatus(isCurrent, canPop, impliesAppBarDismissal, route, child, null);
    },
    _ModalScope$(key, route, $T) {
      return new A._ModalScope(route, key, $T._eval$1("_ModalScope<0>"));
    },
    _ModalScopeState$($T) {
      return new A._ModalScopeState(E.FocusScopeNode$(true, B.S(C.Type__ModalScopeState_ME9) + " Focus Scope", false), A.ScrollController$(), $T._eval$1("_ModalScopeState<0>"));
    },
    ModalRoute_of(context, $T) {
      return A.ModalRoute__of(context, $T);
    },
    ModalRoute__of(context, $T) {
      var t1 = E.InheritedModel_inheritFrom(context, null, type$._ModalScopeStatus);
      t1 = t1 == null ? null : t1.route;
      return $T._eval$1("ModalRoute<0>?")._as(t1);
    },
    OverlayRoute: function OverlayRoute() {
    },
    TransitionRoute: function TransitionRoute() {
    },
    TransitionRoute__updateSecondaryAnimation_jumpOnAnimationEnd: function TransitionRoute__updateSecondaryAnimation_jumpOnAnimationEnd(t0, t1, t2) {
      this.$this = t0;
      this.nextTrain = t1;
      this.nextRoute = t2;
    },
    TransitionRoute__updateSecondaryAnimation_closure: function TransitionRoute__updateSecondaryAnimation_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.nextTrain = t1;
      this.jumpOnAnimationEnd = t2;
    },
    TransitionRoute__updateSecondaryAnimation_closure0: function TransitionRoute__updateSecondaryAnimation_closure0(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.nextRoute = t2;
    },
    TransitionRoute__setSecondaryAnimation_closure: function TransitionRoute__setSecondaryAnimation_closure(t0, t1) {
      this.$this = t0;
      this.animation = t1;
    },
    LocalHistoryRoute: function LocalHistoryRoute() {
    },
    _DismissModalAction: function _DismissModalAction(t0, t1) {
      this.context = t0;
      this._actions$_listeners = t1;
      this._currentCallingAction = null;
    },
    _ModalScopeStatus: function _ModalScopeStatus(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.isCurrent = t0;
      _.canPop = t1;
      _.impliesAppBarDismissal = t2;
      _.route = t3;
      _.child = t4;
      _.key = t5;
    },
    _ModalScopeStatus_updateShouldNotifyDependent_closure: function _ModalScopeStatus_updateShouldNotifyDependent_closure(t0, t1) {
      this.$this = t0;
      this.oldWidget = t1;
    },
    _ModalScope: function _ModalScope(t0, t1, t2) {
      this.route = t0;
      this.key = t1;
      this.$ti = t2;
    },
    _ModalScopeState: function _ModalScopeState(t0, t1, t2) {
      var _ = this;
      _._page = null;
      _.___ModalScopeState__listenable_A = $;
      _.focusScopeNode = t0;
      _.primaryScrollController = t1;
      _._framework0$_element = _._widget = null;
      _.$ti = t2;
    },
    _ModalScopeState__forceRebuildPage_closure: function _ModalScopeState__forceRebuildPage_closure(t0) {
      this.$this = t0;
    },
    _ModalScopeState_build_closure: function _ModalScopeState_build_closure(t0) {
      this.$this = t0;
    },
    _ModalScopeState_build_closure0: function _ModalScopeState_build_closure0(t0) {
      this.$this = t0;
    },
    _ModalScopeState_build__closure0: function _ModalScopeState_build__closure0(t0) {
      this.$this = t0;
    },
    _ModalScopeState_build___closure: function _ModalScopeState_build___closure(t0) {
      this.$this = t0;
    },
    _ModalScopeState_build__closure: function _ModalScopeState_build__closure(t0) {
      this.$this = t0;
    },
    ModalRoute: function ModalRoute() {
    },
    ModalRoute_offstage_closure: function ModalRoute_offstage_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    ModalRoute__maybeDispatchNavigationNotification_closure: function ModalRoute__maybeDispatchNavigationNotification_closure(t0, t1) {
      this.$this = t0;
      this.notification = t1;
    },
    ModalRoute_changedInternalState_closure: function ModalRoute_changedInternalState_closure() {
    },
    _ModalRoute_TransitionRoute_LocalHistoryRoute: function _ModalRoute_TransitionRoute_LocalHistoryRoute() {
    },
    ScrollConfiguration$(behavior, child) {
      return new A.ScrollConfiguration(behavior, child, null);
    },
    ScrollConfiguration_of(context) {
      var configuration = context.dependOnInheritedWidgetOfExactType$1$0(type$.ScrollConfiguration),
        t1 = configuration == null ? null : configuration.behavior;
      return t1 == null ? C.C_ScrollBehavior : t1;
    },
    ScrollBehavior: function ScrollBehavior() {
    },
    ScrollConfiguration: function ScrollConfiguration(t0, t1, t2) {
      this.behavior = t0;
      this.child = t1;
      this.key = t2;
    },
    ScrollController$() {
      var t1 = new A.ScrollController(B._setArrayType([], type$.JSArray_ScrollPosition), $.$get$ChangeNotifier__emptyListeners());
      t1.ScrollController$5$debugLabel$initialScrollOffset$keepScrollOffset$onAttach$onDetach(null, 0, true, null, null);
      return t1;
    },
    ScrollController: function ScrollController(t0, t1) {
      var _ = this;
      _._positions = t0;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = false;
    },
    ScrollIncrementDetails$(metrics, type) {
      return new A.ScrollIncrementDetails();
    },
    ScrollAction$() {
      return new A.ScrollAction(A.ObserverList$(type$.void_Function_Action_Intent));
    },
    ScrollAction__calculateScrollIncrement(state, type) {
      var t1;
      if (state.get$widget().get$incrementCalculator() != null) {
        t1 = state.get$widget().get$incrementCalculator();
        t1.toString;
        return t1.call$1(A.ScrollIncrementDetails$(state.get$position(), type));
      }
      switch (type.index) {
        case 0:
          t1 = 50;
          break;
        case 1:
          t1 = state.get$position().get$viewportDimension();
          if (typeof t1 !== "number")
            return B.iae(t1);
          t1 = 0.8 * t1;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    ScrollAction_getDirectionalIncrement(state, intent) {
      var increment,
        t1 = intent.direction;
      if (B.boolConversionCheck(J.$eq$(E.axisDirectionToAxis(t1), E.axisDirectionToAxis(state.get$axisDirection())))) {
        increment = A.ScrollAction__calculateScrollIncrement(state, intent.type);
        return B.boolConversionCheck(J.$eq$(t1, state.get$axisDirection())) ? increment : -increment;
      }
      return 0;
    },
    ScrollIncrementType: function ScrollIncrementType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    ScrollIncrementDetails: function ScrollIncrementDetails() {
    },
    ScrollIntent: function ScrollIntent(t0, t1) {
      this.direction = t0;
      this.type = t1;
    },
    ScrollAction: function ScrollAction(t0) {
      this._actions$_listeners = t0;
      this._currentCallingAction = null;
    },
    MultiSelectableSelectionContainerDelegate: function MultiSelectableSelectionContainerDelegate() {
    },
    MultiSelectableSelectionContainerDelegate__scheduleSelectableUpdate_runScheduledTask: function MultiSelectableSelectionContainerDelegate__scheduleSelectableUpdate_runScheduledTask(t0) {
      this.$this = t0;
    },
    MultiSelectableSelectionContainerDelegate_getSelectionGeometry_closure: function MultiSelectableSelectionContainerDelegate_getSelectionGeometry_closure(t0, t1, t2) {
      this.$this = t0;
      this.index = t1;
      this.drawableArea = t2;
    },
    MultiSelectableSelectionContainerDelegate_getSelectionGeometry_closure0: function MultiSelectableSelectionContainerDelegate_getSelectionGeometry_closure0() {
    },
    MultiSelectableSelectionContainerDelegate__flushInactiveSelections_closure: function MultiSelectableSelectionContainerDelegate__flushInactiveSelections_closure(t0, t1) {
      this.$this = t0;
      this.skipIndex = t1;
    },
    MultiSelectableSelectionContainerDelegate__flushInactiveSelections_closure0: function MultiSelectableSelectionContainerDelegate__flushInactiveSelections_closure0(t0) {
      this.$this = t0;
    },
    MultiSelectableSelectionContainerDelegate__handleSelectBoundary_closure: function MultiSelectableSelectionContainerDelegate__handleSelectBoundary_closure(t0, t1) {
      this.$this = t0;
      this.index = t1;
    },
    MultiSelectableSelectionContainerDelegate__handleSelectBoundary_closure0: function MultiSelectableSelectionContainerDelegate__handleSelectBoundary_closure0(t0) {
      this.$this = t0;
    },
    _MultiSelectableSelectionContainerDelegate_SelectionContainerDelegate_ChangeNotifier: function _MultiSelectableSelectionContainerDelegate_SelectionContainerDelegate_ChangeNotifier() {
    },
    SelectionContainer$(child, delegate) {
      return new A.SelectionContainer(child, delegate, null);
    },
    SelectionContainer_maybeOf(context) {
      var scope = context.dependOnInheritedWidgetOfExactType$1$0(type$.SelectionRegistrarScope);
      return scope == null ? null : scope.registrar;
    },
    _SelectionContainerState$() {
      return new A._SelectionContainerState(B.LinkedHashSet_LinkedHashSet$_empty(type$.void_Function), null, false);
    },
    SelectionRegistrarScope$(child, registrar) {
      return new A.SelectionRegistrarScope(registrar, child, null);
    },
    SelectionRegistrarScope$_disabled(child) {
      return new A.SelectionRegistrarScope(null, child, null);
    },
    SelectionContainer: function SelectionContainer(t0, t1, t2) {
      this.child = t0;
      this.delegate = t1;
      this.key = t2;
    },
    _SelectionContainerState: function _SelectionContainerState(t0, t1, t2) {
      var _ = this;
      _._selection_container$_listeners = t0;
      _.SelectionRegistrant__registrar = t1;
      _.SelectionRegistrant__subscribedToSelectionRegistrar = t2;
      _._framework0$_element = _._widget = null;
    },
    SelectionRegistrarScope: function SelectionRegistrarScope(t0, t1, t2) {
      this.registrar = t0;
      this.child = t1;
      this.key = t2;
    },
    SelectionContainerDelegate: function SelectionContainerDelegate() {
    },
    __SelectionContainerState_State_Selectable: function __SelectionContainerState_State_Selectable() {
    },
    __SelectionContainerState_State_Selectable_SelectionRegistrant: function __SelectionContainerState_State_Selectable_SelectionRegistrant() {
    },
    SemanticsDebugger$(child) {
      return new A.SemanticsDebugger(child, null);
    },
    _SemanticsDebuggerState$() {
      return new A._SemanticsDebuggerState();
    },
    _SemanticsDebuggerPainter$(owner, generation, pointerPosition, devicePixelRatio, labelStyle) {
      return new A._SemanticsDebuggerPainter(owner, generation, pointerPosition, devicePixelRatio, labelStyle);
    },
    _IgnorePointerWithSemantics$(child) {
      return new A._IgnorePointerWithSemantics(child, null);
    },
    _RenderIgnorePointerWithSemantics$() {
      var t1 = new A._RenderIgnorePointerWithSemantics(null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    SemanticsDebugger: function SemanticsDebugger(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _SemanticsDebuggerState: function _SemanticsDebuggerState() {
      var _ = this;
      _._semantics_debugger$_semanticsHandle = _._semantics_debugger$_pipelineOwner = null;
      _._generation = 0;
      _._framework0$_element = _._widget = _._lastPointerDownLocation = null;
    },
    _SemanticsDebuggerState_didChangeMetrics_closure: function _SemanticsDebuggerState_didChangeMetrics_closure() {
    },
    _SemanticsDebuggerState__update_closure: function _SemanticsDebuggerState__update_closure(t0) {
      this.$this = t0;
    },
    _SemanticsDebuggerState__update__closure: function _SemanticsDebuggerState__update__closure() {
    },
    _SemanticsDebuggerState__handlePointerDown_closure: function _SemanticsDebuggerState__handlePointerDown_closure(t0, t1) {
      this.$this = t0;
      this.event = t1;
    },
    _SemanticsDebuggerState__handleTap_closure: function _SemanticsDebuggerState__handleTap_closure(t0) {
      this.$this = t0;
    },
    _SemanticsDebuggerState__handleLongPress_closure: function _SemanticsDebuggerState__handleLongPress_closure(t0) {
      this.$this = t0;
    },
    _SemanticsDebuggerState__handlePanEnd_closure: function _SemanticsDebuggerState__handlePanEnd_closure(t0) {
      this.$this = t0;
    },
    _SemanticsDebuggerPainter: function _SemanticsDebuggerPainter(t0, t1, t2, t3, t4) {
      var _ = this;
      _.owner = t0;
      _.generation = t1;
      _.pointerPosition = t2;
      _.devicePixelRatio = t3;
      _.labelStyle = t4;
    },
    _SemanticsDebuggerPainter__findDepth_closure: function _SemanticsDebuggerPainter__findDepth_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _SemanticsDebuggerPainter__paint_closure: function _SemanticsDebuggerPainter__paint_closure(t0, t1, t2) {
      this.$this = t0;
      this.canvas = t1;
      this.childRank = t2;
    },
    _IgnorePointerWithSemantics: function _IgnorePointerWithSemantics(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _RenderIgnorePointerWithSemantics: function _RenderIgnorePointerWithSemantics(t0, t1, t2) {
      var _ = this;
      _.RenderObjectWithChildMixin__child = t0;
      _._layoutCacheStorage = t1;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    __SemanticsDebuggerState_State_WidgetsBindingObserver: function __SemanticsDebuggerState_State_WidgetsBindingObserver() {
    },
    SharedAppData$(child) {
      return new A.SharedAppData(child, null);
    },
    _SharedAppDataState$() {
      return new A._SharedAppDataState();
    },
    _SharedAppModel$(child, sharedAppDataState) {
      return new A._SharedAppModel(sharedAppDataState.get$data(), child, null);
    },
    SharedAppData: function SharedAppData(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _SharedAppDataState: function _SharedAppDataState() {
      this.___SharedAppDataState_data_AI = $;
      this._framework0$_element = this._widget = null;
    },
    _SharedAppModel: function _SharedAppModel(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    ShortcutMapProperty$($name, value, description) {
      var _null = null;
      return new A.ShortcutMapProperty(description, true, _null, _null, _null, false, value, D.C__NoDefaultValue, D.DiagnosticLevel_3, $name, true, true, _null, D.DiagnosticsTreeStyle_8);
    },
    SingleActivator$(trigger, alt, control, meta, shift) {
      return new A.SingleActivator(trigger, control, shift, alt, meta, C.LockState_0);
    },
    _ActivatorIntentPair$(activator, intent) {
      return new A._ActivatorIntentPair(activator, intent);
    },
    ShortcutManager$() {
      B.LinkedHashMap_LinkedHashMap$_empty(type$.ShortcutActivator, type$.Intent);
      var t1 = new A.ShortcutManager(C.Map_empty4, $.$get$ChangeNotifier__emptyListeners());
      t1.ShortcutManager$2$modal$shortcuts(false, C.Map_empty4);
      return t1;
    },
    ShortcutManager__indexShortcuts(source) {
      var result = B.LinkedHashMap_LinkedHashMap$_empty(type$.nullable_LogicalKeyboardKey, type$.List__ActivatorIntentPair);
      source.forEach$1(0, new A.ShortcutManager__indexShortcuts_closure(result));
      return result;
    },
    Shortcuts$(child, debugLabel, shortcuts) {
      return new A.Shortcuts(null, shortcuts, child, debugLabel, null);
    },
    Shortcuts$manager(child, manager) {
      return new A.Shortcuts(manager, C.Map_empty4, child, null, null);
    },
    _ShortcutsState$() {
      return new A._ShortcutsState();
    },
    ShortcutRegistry$() {
      var t1 = new A.ShortcutRegistry(B.LinkedHashMap_LinkedHashMap$_empty(type$.ShortcutRegistryEntry, type$.Map_ShortcutActivator_Intent), $.$get$ChangeNotifier__emptyListeners());
      t1.ShortcutRegistry$0();
      return t1;
    },
    ShortcutRegistrar$(child) {
      return new A.ShortcutRegistrar(child, null);
    },
    _ShortcutRegistrarState$() {
      return new A._ShortcutRegistrarState(A.ShortcutRegistry$(), A.ShortcutManager$());
    },
    _ShortcutRegistrarScope$(child, registry) {
      return new A._ShortcutRegistrarScope(registry, child, null);
    },
    LockState: function LockState(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    ShortcutMapProperty: function ShortcutMapProperty(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _._description = t0;
      _.allowWrap = t1;
      _.ifNull = t2;
      _.ifEmpty = t3;
      _.tooltip = t4;
      _.missingIfNull = t5;
      _._diagnostics$_value = t6;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t7;
      _._defaultLevel = t8;
      _.name = t9;
      _.showSeparator = t10;
      _.showName = t11;
      _.linePrefix = t12;
      _.style = t13;
    },
    ShortcutMapProperty_valueToString_closure: function ShortcutMapProperty_valueToString_closure(t0) {
      this.$this = t0;
    },
    SingleActivator: function SingleActivator(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.trigger = t0;
      _.control = t1;
      _.shift = t2;
      _.alt = t3;
      _.meta = t4;
      _.numLock = t5;
    },
    _ActivatorIntentPair: function _ActivatorIntentPair(t0, t1) {
      this.activator = t0;
      this.intent = t1;
    },
    ShortcutManager: function ShortcutManager(t0, t1) {
      var _ = this;
      _._shortcuts = t0;
      _._indexedShortcutsCache = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = false;
    },
    ShortcutManager__indexShortcuts_closure: function ShortcutManager__indexShortcuts_closure(t0) {
      this.result = t0;
    },
    ShortcutManager__indexShortcuts__closure: function ShortcutManager__indexShortcuts__closure() {
    },
    Shortcuts: function Shortcuts(t0, t1, t2, t3, t4) {
      var _ = this;
      _.manager = t0;
      _._shortcuts = t1;
      _.child = t2;
      _.debugLabel = t3;
      _.key = t4;
    },
    _ShortcutsState: function _ShortcutsState() {
      this._framework0$_element = this._widget = this._internalManager = null;
    },
    ShortcutRegistry: function ShortcutRegistry(t0, t1) {
      var _ = this;
      _._registeredShortcuts = t0;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = false;
    },
    ShortcutRegistrar: function ShortcutRegistrar(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _ShortcutRegistrarState: function _ShortcutRegistrarState(t0, t1) {
      var _ = this;
      _.registry = t0;
      _.manager = t1;
      _._framework0$_element = _._widget = null;
    },
    _ShortcutRegistrarScope: function _ShortcutRegistrarScope(t0, t1, t2) {
      this.registry = t0;
      this.child = t1;
      this.key = t2;
    },
    _ShortcutManager_Object_Diagnosticable: function _ShortcutManager_Object_Diagnosticable() {
    },
    _ShortcutManager_Object_Diagnosticable_ChangeNotifier: function _ShortcutManager_Object_Diagnosticable_ChangeNotifier() {
    },
    _ShortcutRegistry_Object_ChangeNotifier: function _ShortcutRegistry_Object_ChangeNotifier() {
    },
    _SingleActivator_Object_Diagnosticable: function _SingleActivator_Object_Diagnosticable() {
    },
    _SingleActivator_Object_Diagnosticable_MenuSerializableShortcut: function _SingleActivator_Object_Diagnosticable_MenuSerializableShortcut() {
    },
    __ActivatorIntentPair_Object_Diagnosticable: function __ActivatorIntentPair_Object_Diagnosticable() {
    },
    SnapshotController$() {
      return new A.SnapshotController($.$get$ChangeNotifier__emptyListeners());
    },
    SnapshotWidget$(autoresize, child, controller, mode, painter) {
      return new A.SnapshotWidget(controller, mode, autoresize, painter, child, null);
    },
    _RenderSnapshotWidget$(autoresize, controller, devicePixelRatio, mode, painter) {
      var t1 = new A._RenderSnapshotWidget(devicePixelRatio, painter, controller, mode, autoresize, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    SnapshotMode: function SnapshotMode(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    SnapshotController: function SnapshotController(t0) {
      var _ = this;
      _._allowSnapshotting = false;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = false;
    },
    SnapshotWidget: function SnapshotWidget(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.controller = t0;
      _.mode = t1;
      _.autoresize = t2;
      _.painter = t3;
      _.child = t4;
      _.key = t5;
    },
    _RenderSnapshotWidget: function _RenderSnapshotWidget(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._snapshot_widget$_devicePixelRatio = t0;
      _._snapshot_widget$_painter = t1;
      _._snapshot_widget$_controller = t2;
      _._snapshot_widget$_mode = t3;
      _._autoresize = t4;
      _._childRasterSize = _._childRaster = null;
      _._disableSnapshotAttempt = false;
      _._lastCachedSize = null;
      _.RenderObjectWithChildMixin__child = t5;
      _._layoutCacheStorage = t6;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t7;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    SnapshotPainter: function SnapshotPainter() {
    },
    _DefaultSnapshotPainter: function _DefaultSnapshotPainter() {
    },
    TapRegionSurface$(child) {
      return new A.TapRegionSurface(child, null);
    },
    RenderTapRegionSurface$() {
      var t1 = new A.RenderTapRegionSurface(E.Expando$(type$.BoxHitTestResult), B.LinkedHashSet_LinkedHashSet$_empty(type$.RenderTapRegion), B.LinkedHashMap_LinkedHashMap$_empty(type$.nullable_Object, type$.Set_RenderTapRegion), C.HitTestBehavior_0, null, E._LayoutCacheStorage$(), E.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderProxyBox$1(null);
      return t1;
    },
    _DummyTapRecognizer$() {
      return new A._DummyTapRecognizer();
    },
    TapRegionSurface: function TapRegionSurface(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    RenderTapRegionSurface: function RenderTapRegionSurface(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._cachedResults = t0;
      _._registeredRegions = t1;
      _._groupIdToRegions = t2;
      _.behavior = t3;
      _.RenderObjectWithChildMixin__child = t4;
      _._layoutCacheStorage = t5;
      _.parentData = _._size = null;
      _._object$_depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    _DummyTapRecognizer: function _DummyTapRecognizer() {
    },
    DefaultTextStyle$(child, maxLines, overflow, softWrap, style, textAlign, textHeightBehavior, textWidthBasis) {
      return new A.DefaultTextStyle(style, textAlign, softWrap, overflow, maxLines, textWidthBasis, textHeightBehavior, child, null);
    },
    DefaultTextStyle_of(context) {
      var t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultTextStyle);
      return t1 == null ? C.DefaultTextStyle_qaP : t1;
    },
    DefaultTextHeightBehavior_maybeOf(context) {
      var t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultTextHeightBehavior);
      return t1 == null ? null : t1.get$textHeightBehavior();
    },
    Text$0(data, style) {
      return new A.Text0(data, null, style, null, null);
    },
    _SelectableTextContainer$(locale, maxLines, overflow, selectionColor, softWrap, strutStyle, text, textAlign, textDirection, textHeightBehavior, textScaler, textWidthBasis) {
      return new A._SelectableTextContainer(text, textAlign, textDirection, softWrap, overflow, textScaler, maxLines, locale, strutStyle, textWidthBasis, textHeightBehavior, selectionColor, null);
    },
    _SelectableTextContainerState$() {
      return new A._SelectableTextContainerState(A.GlobalKey_GlobalKey(null, type$.State_StatefulWidget));
    },
    _RichText$(locale, maxLines, overflow, selectionColor, softWrap, strutStyle, text, textAlign, textDirection, textHeightBehavior, textKey, textScaler, textWidthBasis) {
      return new A._RichText(textKey, text, textAlign, textDirection, softWrap, overflow, textScaler, maxLines, locale, strutStyle, textWidthBasis, textHeightBehavior, selectionColor, null);
    },
    _SelectableTextContainerDelegate$(textKey) {
      var t1 = type$.Selectable;
      t1 = new A._SelectableTextContainerDelegate(textKey, B.LinkedHashSet_LinkedHashSet$_empty(t1), B.LinkedHashSet_LinkedHashSet$_empty(t1), B._setArrayType([], type$.JSArray_Selectable), B.LinkedHashSet_LinkedHashSet$_empty(t1), C.SelectionGeometry_2jN0, $.$get$ChangeNotifier__emptyListeners());
      t1.MultiSelectableSelectionContainerDelegate$0();
      return t1;
    },
    _SelectableTextContainerDelegate__compareScreenOrder(a, b) {
      var rectA, rectB, result,
        t1 = type$.Selectable;
      t1._as(a);
      t1._as(b);
      rectA = E.MatrixUtils_transformRect(a.getTransformTo$1(null), J.get$first$ax(a.get$boundingBoxes()));
      rectB = E.MatrixUtils_transformRect(b.getTransformTo$1(null), J.get$first$ax(b.get$boundingBoxes()));
      result = A._SelectableTextContainerDelegate__compareVertically(rectA, rectB);
      if (result !== 0)
        return result;
      return A._SelectableTextContainerDelegate__compareHorizontally(rectA, rectB);
    },
    _SelectableTextContainerDelegate__compareVertically(a, b) {
      var t3, t4, t5,
        t1 = a.top,
        t2 = b.top;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = t1 - t2;
      if (t3 < 3) {
        t4 = a.bottom;
        t5 = b.bottom;
        if (typeof t4 !== "number")
          return t4.$sub();
        if (typeof t5 !== "number")
          return B.iae(t5);
        t5 = t4 - t5 > -3;
        t4 = t5;
      } else
        t4 = false;
      if (!t4)
        if (t2 - t1 < 3) {
          t4 = b.bottom;
          t5 = a.bottom;
          if (typeof t4 !== "number")
            return t4.$sub();
          if (typeof t5 !== "number")
            return B.iae(t5);
          t5 = t4 - t5 > -3;
          t4 = t5;
        } else
          t4 = false;
      else
        t4 = true;
      if (t4)
        return 0;
      if (Math.abs(t3) > 3)
        return t1 > t2 ? 1 : -1;
      t1 = a.bottom;
      t2 = b.bottom;
      if (typeof t1 !== "number")
        return t1.$gt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 > t2 ? 1 : -1;
    },
    _SelectableTextContainerDelegate__compareHorizontally(a, b) {
      var t3, t4, t5,
        t1 = a.left,
        t2 = b.left;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = t1 - t2;
      if (t3 < 1e-10) {
        t4 = a.right;
        t5 = b.right;
        if (typeof t4 !== "number")
          return t4.$sub();
        if (typeof t5 !== "number")
          return B.iae(t5);
        t5 = t4 - t5 > -1e-10;
        t4 = t5;
      } else
        t4 = false;
      if (t4)
        return -1;
      if (t2 - t1 < 1e-10) {
        t4 = b.right;
        t5 = a.right;
        if (typeof t4 !== "number")
          return t4.$sub();
        if (typeof t5 !== "number")
          return B.iae(t5);
        t5 = t4 - t5 > -1e-10;
        t4 = t5;
      } else
        t4 = false;
      if (t4)
        return 1;
      if (Math.abs(t3) > 1e-10)
        return t1 > t2 ? 1 : -1;
      t1 = a.right;
      t2 = b.right;
      if (typeof t1 !== "number")
        return t1.$gt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 > t2 ? 1 : -1;
    },
    DefaultTextStyle: function DefaultTextStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.style = t0;
      _.textAlign = t1;
      _.softWrap = t2;
      _.overflow = t3;
      _.maxLines = t4;
      _.textWidthBasis = t5;
      _.textHeightBehavior = t6;
      _.child = t7;
      _.key = t8;
    },
    _NullWidget2: function _NullWidget2(t0) {
      this.key = t0;
    },
    Text0: function Text0(t0, t1, t2, t3, t4) {
      var _ = this;
      _.data = t0;
      _.textSpan = t1;
      _.style = t2;
      _.textAlign = t3;
      _.key = t4;
    },
    _SelectableTextContainer: function _SelectableTextContainer(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.text = t0;
      _.textAlign = t1;
      _.textDirection = t2;
      _.softWrap = t3;
      _.overflow = t4;
      _.textScaler = t5;
      _.maxLines = t6;
      _.locale = t7;
      _.strutStyle = t8;
      _.textWidthBasis = t9;
      _.textHeightBehavior = t10;
      _.selectionColor = t11;
      _.key = t12;
    },
    _SelectableTextContainerState: function _SelectableTextContainerState(t0) {
      var _ = this;
      _.___SelectableTextContainerState__selectionDelegate_F = $;
      _._textKey = t0;
      _._framework0$_element = _._widget = null;
    },
    _RichText: function _RichText(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.textKey = t0;
      _.text = t1;
      _.textAlign = t2;
      _.textDirection = t3;
      _.softWrap = t4;
      _.overflow = t5;
      _.textScaler = t6;
      _.maxLines = t7;
      _.locale = t8;
      _.strutStyle = t9;
      _.textWidthBasis = t10;
      _.textHeightBehavior = t11;
      _.selectionColor = t12;
      _.key = t13;
    },
    _SelectableTextContainerDelegate: function _SelectableTextContainerDelegate(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._textKey = t0;
      _._hasReceivedStartEvent = t1;
      _._hasReceivedEndEvent = t2;
      _._lastEndEdgeUpdateGlobalPosition = _._lastStartEdgeUpdateGlobalPosition = null;
      _.selectables = t3;
      _.currentSelectionStartIndex = _.currentSelectionEndIndex = -1;
      _._endHandleLayerOwner = _._endHandleLayer = _._startHandleLayerOwner = _._startHandleLayer = null;
      _._selectionInProgress = _._scheduledSelectableUpdate = _._isHandlingSelectionEvent = false;
      _._additions = t4;
      _._extendSelectionInProgress = false;
      _._selectable_region$_selectionGeometry = t5;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t6;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = false;
      _._selectionContainerContext = null;
    },
    _SelectableTextContainerDelegate__flushInactiveSelections_closure: function _SelectableTextContainerDelegate__flushInactiveSelections_closure(t0, t1) {
      this.$this = t0;
      this.skipIndex = t1;
    },
    _SelectableTextContainerDelegate__flushInactiveSelections_closure0: function _SelectableTextContainerDelegate__flushInactiveSelections_closure0(t0) {
      this.$this = t0;
    },
    _SelectableTextContainerDelegate_didChangeSelectables_closure: function _SelectableTextContainerDelegate_didChangeSelectables_closure(t0) {
      this.selectableSet = t0;
    },
    _SelectableTextContainerDelegate_didChangeSelectables_closure0: function _SelectableTextContainerDelegate_didChangeSelectables_closure0(t0) {
      this.selectableSet = t0;
    },
    DoNothingAndStopPropagationTextIntent: function DoNothingAndStopPropagationTextIntent() {
    },
    DirectionalTextEditingIntent: function DirectionalTextEditingIntent() {
    },
    DeleteCharacterIntent: function DeleteCharacterIntent() {
    },
    DeleteToNextWordBoundaryIntent: function DeleteToNextWordBoundaryIntent() {
    },
    DeleteToLineBreakIntent: function DeleteToLineBreakIntent() {
    },
    DirectionalCaretMovementIntent: function DirectionalCaretMovementIntent() {
    },
    ExtendSelectionByCharacterIntent: function ExtendSelectionByCharacterIntent() {
    },
    ExtendSelectionToNextWordBoundaryIntent: function ExtendSelectionToNextWordBoundaryIntent() {
    },
    ExtendSelectionToNextWordBoundaryOrCaretLocationIntent: function ExtendSelectionToNextWordBoundaryOrCaretLocationIntent() {
    },
    ExpandSelectionToDocumentBoundaryIntent: function ExpandSelectionToDocumentBoundaryIntent() {
    },
    ExpandSelectionToLineBreakIntent: function ExpandSelectionToLineBreakIntent() {
    },
    ExtendSelectionToLineBreakIntent: function ExtendSelectionToLineBreakIntent() {
    },
    ExtendSelectionVerticallyToAdjacentLineIntent: function ExtendSelectionVerticallyToAdjacentLineIntent() {
    },
    ExtendSelectionVerticallyToAdjacentPageIntent: function ExtendSelectionVerticallyToAdjacentPageIntent() {
    },
    ExtendSelectionToNextParagraphBoundaryIntent: function ExtendSelectionToNextParagraphBoundaryIntent() {
    },
    ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent: function ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent() {
    },
    ExtendSelectionToDocumentBoundaryIntent: function ExtendSelectionToDocumentBoundaryIntent() {
    },
    ScrollToDocumentBoundaryIntent: function ScrollToDocumentBoundaryIntent() {
    },
    SelectAllTextIntent: function SelectAllTextIntent() {
    },
    CopySelectionTextIntent: function CopySelectionTextIntent() {
    },
    PasteTextIntent: function PasteTextIntent() {
    },
    RedoTextIntent: function RedoTextIntent() {
    },
    UndoTextIntent: function UndoTextIntent() {
    },
    TransposeCharactersIntent: function TransposeCharactersIntent() {
    },
    TickerMode$(child, enabled) {
      return new A.TickerMode(enabled, child, null);
    },
    TickerMode_of(context) {
      var widget = context.dependOnInheritedWidgetOfExactType$1$0(type$._EffectiveTickerMode),
        t1 = widget == null ? null : widget.enabled;
      return t1 == null ? true : t1;
    },
    TickerMode_getNotifier(context) {
      var widget = context.getInheritedWidgetOfExactType$1$0(type$._EffectiveTickerMode),
        t1 = widget == null ? null : widget.notifier;
      return t1 == null ? C.C__ConstantValueListenable : t1;
    },
    _TickerModeState$() {
      return new A._TickerModeState(E.ValueNotifier$(true, type$.bool));
    },
    _EffectiveTickerMode$(child, enabled, notifier) {
      return new A._EffectiveTickerMode(enabled, notifier, child, null);
    },
    _WidgetTicker$(onTick, _creator, debugLabel) {
      var t1;
      B.createSentinel(type$.StackTrace);
      t1 = new A._WidgetTicker(_creator, onTick);
      t1.Ticker$2$debugLabel(onTick, debugLabel);
      return t1;
    },
    TickerMode: function TickerMode(t0, t1, t2) {
      this.enabled = t0;
      this.child = t1;
      this.key = t2;
    },
    _TickerModeState: function _TickerModeState(t0) {
      var _ = this;
      _._ancestorTicketMode = true;
      _._effectiveMode = t0;
      _._framework0$_element = _._widget = null;
    },
    _EffectiveTickerMode: function _EffectiveTickerMode(t0, t1, t2, t3) {
      var _ = this;
      _.enabled = t0;
      _.notifier = t1;
      _.child = t2;
      _.key = t3;
    },
    SingleTickerProviderStateMixin: function SingleTickerProviderStateMixin() {
    },
    TickerProviderStateMixin: function TickerProviderStateMixin() {
    },
    _WidgetTicker: function _WidgetTicker(t0, t1) {
      var _ = this;
      _._creator = t0;
      _._ticker$_future = null;
      _._muted = false;
      _._startTime = null;
      _._onTick = t1;
      _._animationId = null;
    },
    _ConstantValueListenable: function _ConstantValueListenable(t0) {
      this.$ti = t0;
    },
    Title$(child, color, title) {
      return new A.Title(title, color, child, null);
    },
    Title: function Title(t0, t1, t2, t3) {
      var _ = this;
      _.title = t0;
      _.color = t1;
      _.child = t2;
      _.key = t3;
    },
    _AnimatedState$() {
      return new A._AnimatedState();
    },
    SlideTransition$(child, position, textDirection, transformHitTests) {
      return new A.SlideTransition(textDirection, transformHitTests, child, position, null);
    },
    FadeTransition$(child, opacity) {
      return new A.FadeTransition(opacity, child, null);
    },
    DecoratedBoxTransition$(child, decoration) {
      return new A.DecoratedBoxTransition(decoration, child, decoration, null);
    },
    ListenableBuilder$(builder, child, key, listenable) {
      return new A.ListenableBuilder(builder, child, listenable, key);
    },
    AnimatedBuilder$(animation, builder, child) {
      return new A.AnimatedBuilder(builder, child, animation, null);
    },
    AnimatedWidget: function AnimatedWidget() {
    },
    _AnimatedState: function _AnimatedState() {
      this._framework0$_element = this._widget = null;
    },
    _AnimatedState__handleChange_closure: function _AnimatedState__handleChange_closure() {
    },
    SlideTransition: function SlideTransition(t0, t1, t2, t3, t4) {
      var _ = this;
      _.textDirection = t0;
      _.transformHitTests = t1;
      _.child = t2;
      _.listenable = t3;
      _.key = t4;
    },
    FadeTransition: function FadeTransition(t0, t1, t2) {
      this.opacity = t0;
      this.child = t1;
      this.key = t2;
    },
    DecoratedBoxTransition: function DecoratedBoxTransition(t0, t1, t2, t3) {
      var _ = this;
      _.decoration = t0;
      _.child = t1;
      _.listenable = t2;
      _.key = t3;
    },
    ListenableBuilder: function ListenableBuilder(t0, t1, t2, t3) {
      var _ = this;
      _.builder = t0;
      _.child = t1;
      _.listenable = t2;
      _.key = t3;
    },
    AnimatedBuilder: function AnimatedBuilder(t0, t1, t2, t3) {
      var _ = this;
      _.builder = t0;
      _.child = t1;
      _.listenable = t2;
      _.key = t3;
    },
    WidgetSpan_extractFromInlineSpan(span, textScaler) {
      var t1 = {},
        widgets = B._setArrayType([], type$.JSArray_Widget),
        fontSizeStack = B._setArrayType([14], type$.JSArray_double);
      t1.index = 0;
      new A.WidgetSpan_extractFromInlineSpan_visitSubtree(t1, fontSizeStack, textScaler, widgets).call$1(span);
      return widgets;
    },
    WidgetSpan_extractFromInlineSpan_visitSubtree: function WidgetSpan_extractFromInlineSpan_visitSubtree(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.fontSizeStack = t1;
      _.textScaler = t2;
      _.widgets = t3;
    },
    WidgetStateColor_resolveWith(callback) {
      return A._WidgetStateColor$(callback);
    },
    _WidgetStateColor$(_resolve) {
      var t1 = _resolve.call$1(C.Set_empty).get$value();
      if (typeof t1 !== "number")
        return t1.$and();
      return new A._WidgetStateColor(_resolve, t1 >>> 0);
    },
    WidgetStateBorderSide_lerp(a, b, t) {
      if (a == null && b == null)
        return null;
      return A._LerpSides$(a, b, t);
    },
    _LerpSides$(a, b, t) {
      return new A._LerpSides(a, b, t);
    },
    WidgetStateProperty_resolveAs(value, states, $T) {
      if ($T._eval$1("WidgetStateProperty<0>")._is(value))
        return value.resolve$1(states);
      return value;
    },
    WidgetStateProperty_resolveWith(callback, $T) {
      return A._WidgetStatePropertyWith$(callback, $T);
    },
    WidgetStateProperty_lerp(a, b, t, lerpFunction, $T) {
      if (a == null && b == null)
        return null;
      return A._LerpProperties$(a, b, t, lerpFunction, $T);
    },
    _LerpProperties$(a, b, t, lerpFunction, $T) {
      return new A._LerpProperties(a, b, t, lerpFunction, $T._eval$1("_LerpProperties<0>"));
    },
    _WidgetStatePropertyWith$(_resolve, $T) {
      return new A._WidgetStatePropertyWith(_resolve, $T._eval$1("_WidgetStatePropertyWith<0>"));
    },
    WidgetStatePropertyAll$(value, $T) {
      return new A.WidgetStatePropertyAll(value, $T._eval$1("WidgetStatePropertyAll<0>"));
    },
    WidgetStatesController$(value) {
      var t2,
        t1 = B.LinkedHashSet_LinkedHashSet$_empty(type$.WidgetState);
      if (value != null)
        t1.addAll$1(0, value);
      t2 = new A.WidgetStatesController(t1, $.$get$ChangeNotifier__emptyListeners());
      t2.ValueNotifier$1(t1, type$.Set_WidgetState);
      return t2;
    },
    WidgetState: function WidgetState(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    WidgetStateColor: function WidgetStateColor() {
    },
    _WidgetStateColor: function _WidgetStateColor(t0, t1) {
      this._widget_state$_resolve = t0;
      this.value = t1;
    },
    WidgetStateMouseCursor: function WidgetStateMouseCursor() {
    },
    _EnabledAndDisabledMouseCursor: function _EnabledAndDisabledMouseCursor() {
    },
    _LerpSides: function _LerpSides(t0, t1, t2) {
      this.a = t0;
      this.b = t1;
      this.t = t2;
    },
    WidgetStateProperty: function WidgetStateProperty() {
    },
    _LerpProperties: function _LerpProperties(t0, t1, t2, t3, t4) {
      var _ = this;
      _.a = t0;
      _.b = t1;
      _.t = t2;
      _.lerpFunction = t3;
      _.$ti = t4;
    },
    _WidgetStatePropertyWith: function _WidgetStatePropertyWith(t0, t1) {
      this._widget_state$_resolve = t0;
      this.$ti = t1;
    },
    WidgetStatePropertyAll: function WidgetStatePropertyAll(t0, t1) {
      this.value = t0;
      this.$ti = t1;
    },
    WidgetStatesController: function WidgetStatesController(t0, t1) {
      var _ = this;
      _._change_notifier$_value = t0;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = false;
    },
    DynamicColor$(background, contrastCurve, isBackground, $name, palette, secondBackground, tone, toneDeltaPair) {
      return new A.DynamicColor($name, palette, tone, isBackground, background, secondBackground, contrastCurve, toneDeltaPair, B.LinkedHashMap_LinkedHashMap$_empty(type$.DynamicScheme, type$.Hct));
    },
    DynamicColor_DynamicColor$fromPalette(background, contrastCurve, isBackground, $name, palette, secondBackground, tone, toneDeltaPair) {
      return A.DynamicColor$(background, contrastCurve, isBackground, $name, palette, secondBackground, tone, toneDeltaPair);
    },
    DynamicColor_foregroundTone(bgTone, ratio) {
      var negligibleDifference,
        lighterTone = A.Contrast_lighterUnsafe(ratio, bgTone),
        darkerTone = A.Contrast_darkerUnsafe(ratio, bgTone),
        lighterRatio = A.Contrast_ratioOfTones(lighterTone, bgTone),
        darkerRatio = A.Contrast_ratioOfTones(darkerTone, bgTone);
      if (A.DynamicColor_tonePrefersLightForeground(bgTone)) {
        negligibleDifference = Math.abs(lighterRatio - darkerRatio) < 0.1 && lighterRatio < ratio && darkerRatio < ratio;
        return lighterRatio >= ratio || lighterRatio >= darkerRatio || negligibleDifference ? lighterTone : darkerTone;
      } else
        return darkerRatio >= ratio || darkerRatio >= lighterRatio ? darkerTone : lighterTone;
    },
    DynamicColor_tonePrefersLightForeground(tone) {
      var t1 = F.JSNumber_methods.round$0(tone);
      if (typeof t1 !== "number")
        return t1.$lt();
      return t1 < 60;
    },
    DynamicColor: function DynamicColor(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.name = t0;
      _.palette = t1;
      _.tone = t2;
      _.isBackground = t3;
      _.background = t4;
      _.secondBackground = t5;
      _.contrastCurve = t6;
      _.toneDeltaPair = t7;
      _._hctCache = t8;
    },
    DynamicScheme_getRotatedHue(sourceColor, hues, rotations) {
      var t2, t3, i, thisHue, i0, nextHue,
        sourceHue = sourceColor.get$hue(),
        t1 = J.getInterceptor$asx(rotations);
      if (B.boolConversionCheck(J.$eq$(t1.get$length(rotations), 1))) {
        t2 = sourceColor.get$hue();
        t1 = t1.$index(rotations, 0);
        if (typeof t2 !== "number")
          return t2.$add();
        if (typeof t1 !== "number")
          return B.iae(t1);
        return A.MathUtils_sanitizeDegreesDouble(t2 + t1);
      }
      t2 = J.getInterceptor$asx(hues);
      for (t3 = t2.get$length(hues) - 2, i = 0; i <= t3; i = i0) {
        thisHue = t2.$index(hues, i);
        i0 = i + 1;
        nextHue = t2.$index(hues, i0);
        if (thisHue < sourceHue && sourceHue < nextHue) {
          t2 = t1.$index(rotations, i);
          if (typeof t2 !== "number")
            return B.iae(t2);
          return A.MathUtils_sanitizeDegreesDouble(sourceHue + t2);
        }
      }
      return sourceHue;
    },
    DynamicScheme: function DynamicScheme() {
    },
    _isFidelity(scheme) {
      var t1 = scheme.variant,
        t2 = J.getInterceptor$(t1);
      return B.boolConversionCheck(t2.$eq(t1, C.Variant_6_fidelity)) || B.boolConversionCheck(t2.$eq(t1, C.Variant_5_content));
    },
    _isMonochrome(scheme) {
      return J.$eq$(scheme.variant, C.Variant_0_monochrome);
    },
    MaterialDynamicColors_highestSurface(s) {
      return B.boolConversionCheck(s.isDark) ? $.$get$MaterialDynamicColors_surfaceBright() : $.$get$MaterialDynamicColors_surfaceDim();
    },
    MaterialDynamicColors__findDesiredChromaByTone(hue, chroma, tone, byDecreasingTone) {
      var chromaPeak, answer, t2, potentialSolution, t3,
        closestToChroma = A.Hct_from(hue, chroma, tone),
        t1 = closestToChroma.get$chroma();
      if (typeof t1 !== "number")
        return t1.$lt();
      if (t1 < chroma) {
        chromaPeak = closestToChroma.get$chroma();
        t1 = type$.double;
        answer = tone;
        while (true) {
          t2 = closestToChroma.get$chroma();
          if (typeof t2 !== "number")
            return t2.$lt();
          if (!(t2 < chroma))
            break;
          answer += byDecreasingTone ? -1 : 1;
          potentialSolution = A.Hct_from(hue, chroma, answer);
          t2 = potentialSolution.get$chroma();
          if (typeof t2 !== "number")
            return B.iae(t2);
          if (chromaPeak > t2)
            break;
          t2 = potentialSolution.get$chroma();
          if (typeof t2 !== "number")
            return t2.$sub();
          if (Math.abs(t2 - chroma) < 0.4)
            break;
          t2 = potentialSolution.get$chroma();
          if (typeof t2 !== "number")
            return t2.$sub();
          t3 = closestToChroma.get$chroma();
          if (typeof t3 !== "number")
            return t3.$sub();
          if (Math.abs(t2 - chroma) < Math.abs(t3 - chroma))
            closestToChroma = potentialSolution;
          chromaPeak = E.max(chromaPeak, potentialSolution.get$chroma(), t1);
        }
      } else
        answer = tone;
      return answer;
    },
    MaterialDynamicColors_background_closure: function MaterialDynamicColors_background_closure() {
    },
    MaterialDynamicColors_background_closure0: function MaterialDynamicColors_background_closure0() {
    },
    MaterialDynamicColors_onBackground_closure0: function MaterialDynamicColors_onBackground_closure0() {
    },
    MaterialDynamicColors_onBackground_closure1: function MaterialDynamicColors_onBackground_closure1() {
    },
    MaterialDynamicColors_onBackground_closure: function MaterialDynamicColors_onBackground_closure() {
    },
    MaterialDynamicColors_surface_closure: function MaterialDynamicColors_surface_closure() {
    },
    MaterialDynamicColors_surface_closure0: function MaterialDynamicColors_surface_closure0() {
    },
    MaterialDynamicColors_surfaceDim_closure: function MaterialDynamicColors_surfaceDim_closure() {
    },
    MaterialDynamicColors_surfaceDim_closure0: function MaterialDynamicColors_surfaceDim_closure0() {
    },
    MaterialDynamicColors_surfaceBright_closure: function MaterialDynamicColors_surfaceBright_closure() {
    },
    MaterialDynamicColors_surfaceBright_closure0: function MaterialDynamicColors_surfaceBright_closure0() {
    },
    MaterialDynamicColors_surfaceContainerLowest_closure: function MaterialDynamicColors_surfaceContainerLowest_closure() {
    },
    MaterialDynamicColors_surfaceContainerLowest_closure0: function MaterialDynamicColors_surfaceContainerLowest_closure0() {
    },
    MaterialDynamicColors_surfaceContainerLow_closure: function MaterialDynamicColors_surfaceContainerLow_closure() {
    },
    MaterialDynamicColors_surfaceContainerLow_closure0: function MaterialDynamicColors_surfaceContainerLow_closure0() {
    },
    MaterialDynamicColors_surfaceContainer_closure: function MaterialDynamicColors_surfaceContainer_closure() {
    },
    MaterialDynamicColors_surfaceContainer_closure0: function MaterialDynamicColors_surfaceContainer_closure0() {
    },
    MaterialDynamicColors_surfaceContainerHigh_closure: function MaterialDynamicColors_surfaceContainerHigh_closure() {
    },
    MaterialDynamicColors_surfaceContainerHigh_closure0: function MaterialDynamicColors_surfaceContainerHigh_closure0() {
    },
    MaterialDynamicColors_surfaceContainerHighest_closure: function MaterialDynamicColors_surfaceContainerHighest_closure() {
    },
    MaterialDynamicColors_surfaceContainerHighest_closure0: function MaterialDynamicColors_surfaceContainerHighest_closure0() {
    },
    MaterialDynamicColors_onSurface_closure0: function MaterialDynamicColors_onSurface_closure0() {
    },
    MaterialDynamicColors_onSurface_closure1: function MaterialDynamicColors_onSurface_closure1() {
    },
    MaterialDynamicColors_onSurface_closure: function MaterialDynamicColors_onSurface_closure() {
    },
    MaterialDynamicColors_surfaceVariant_closure: function MaterialDynamicColors_surfaceVariant_closure() {
    },
    MaterialDynamicColors_surfaceVariant_closure0: function MaterialDynamicColors_surfaceVariant_closure0() {
    },
    MaterialDynamicColors_onSurfaceVariant_closure0: function MaterialDynamicColors_onSurfaceVariant_closure0() {
    },
    MaterialDynamicColors_onSurfaceVariant_closure1: function MaterialDynamicColors_onSurfaceVariant_closure1() {
    },
    MaterialDynamicColors_onSurfaceVariant_closure: function MaterialDynamicColors_onSurfaceVariant_closure() {
    },
    MaterialDynamicColors_inverseSurface_closure: function MaterialDynamicColors_inverseSurface_closure() {
    },
    MaterialDynamicColors_inverseSurface_closure0: function MaterialDynamicColors_inverseSurface_closure0() {
    },
    MaterialDynamicColors_inverseOnSurface_closure0: function MaterialDynamicColors_inverseOnSurface_closure0() {
    },
    MaterialDynamicColors_inverseOnSurface_closure1: function MaterialDynamicColors_inverseOnSurface_closure1() {
    },
    MaterialDynamicColors_inverseOnSurface_closure: function MaterialDynamicColors_inverseOnSurface_closure() {
    },
    MaterialDynamicColors_outline_closure0: function MaterialDynamicColors_outline_closure0() {
    },
    MaterialDynamicColors_outline_closure1: function MaterialDynamicColors_outline_closure1() {
    },
    MaterialDynamicColors_outline_closure: function MaterialDynamicColors_outline_closure() {
    },
    MaterialDynamicColors_outlineVariant_closure0: function MaterialDynamicColors_outlineVariant_closure0() {
    },
    MaterialDynamicColors_outlineVariant_closure1: function MaterialDynamicColors_outlineVariant_closure1() {
    },
    MaterialDynamicColors_outlineVariant_closure: function MaterialDynamicColors_outlineVariant_closure() {
    },
    MaterialDynamicColors_shadow_closure: function MaterialDynamicColors_shadow_closure() {
    },
    MaterialDynamicColors_shadow_closure0: function MaterialDynamicColors_shadow_closure0() {
    },
    MaterialDynamicColors_scrim_closure: function MaterialDynamicColors_scrim_closure() {
    },
    MaterialDynamicColors_scrim_closure0: function MaterialDynamicColors_scrim_closure0() {
    },
    MaterialDynamicColors_primary_closure0: function MaterialDynamicColors_primary_closure0() {
    },
    MaterialDynamicColors_primary_closure1: function MaterialDynamicColors_primary_closure1() {
    },
    MaterialDynamicColors_primary_closure: function MaterialDynamicColors_primary_closure() {
    },
    MaterialDynamicColors_primary_closure2: function MaterialDynamicColors_primary_closure2() {
    },
    MaterialDynamicColors_onPrimary_closure0: function MaterialDynamicColors_onPrimary_closure0() {
    },
    MaterialDynamicColors_onPrimary_closure1: function MaterialDynamicColors_onPrimary_closure1() {
    },
    MaterialDynamicColors_onPrimary_closure: function MaterialDynamicColors_onPrimary_closure() {
    },
    MaterialDynamicColors_primaryContainer_closure0: function MaterialDynamicColors_primaryContainer_closure0() {
    },
    MaterialDynamicColors_primaryContainer_closure1: function MaterialDynamicColors_primaryContainer_closure1() {
    },
    MaterialDynamicColors_primaryContainer_closure: function MaterialDynamicColors_primaryContainer_closure() {
    },
    MaterialDynamicColors_primaryContainer_closure2: function MaterialDynamicColors_primaryContainer_closure2() {
    },
    MaterialDynamicColors_onPrimaryContainer_closure0: function MaterialDynamicColors_onPrimaryContainer_closure0() {
    },
    MaterialDynamicColors_onPrimaryContainer_closure1: function MaterialDynamicColors_onPrimaryContainer_closure1() {
    },
    MaterialDynamicColors_onPrimaryContainer_closure: function MaterialDynamicColors_onPrimaryContainer_closure() {
    },
    MaterialDynamicColors_inversePrimary_closure0: function MaterialDynamicColors_inversePrimary_closure0() {
    },
    MaterialDynamicColors_inversePrimary_closure1: function MaterialDynamicColors_inversePrimary_closure1() {
    },
    MaterialDynamicColors_inversePrimary_closure: function MaterialDynamicColors_inversePrimary_closure() {
    },
    MaterialDynamicColors_secondary_closure0: function MaterialDynamicColors_secondary_closure0() {
    },
    MaterialDynamicColors_secondary_closure1: function MaterialDynamicColors_secondary_closure1() {
    },
    MaterialDynamicColors_secondary_closure: function MaterialDynamicColors_secondary_closure() {
    },
    MaterialDynamicColors_secondary_closure2: function MaterialDynamicColors_secondary_closure2() {
    },
    MaterialDynamicColors_onSecondary_closure0: function MaterialDynamicColors_onSecondary_closure0() {
    },
    MaterialDynamicColors_onSecondary_closure1: function MaterialDynamicColors_onSecondary_closure1() {
    },
    MaterialDynamicColors_onSecondary_closure: function MaterialDynamicColors_onSecondary_closure() {
    },
    MaterialDynamicColors_secondaryContainer_closure0: function MaterialDynamicColors_secondaryContainer_closure0() {
    },
    MaterialDynamicColors_secondaryContainer_closure1: function MaterialDynamicColors_secondaryContainer_closure1() {
    },
    MaterialDynamicColors_secondaryContainer_closure: function MaterialDynamicColors_secondaryContainer_closure() {
    },
    MaterialDynamicColors_secondaryContainer_closure2: function MaterialDynamicColors_secondaryContainer_closure2() {
    },
    MaterialDynamicColors_onSecondaryContainer_closure0: function MaterialDynamicColors_onSecondaryContainer_closure0() {
    },
    MaterialDynamicColors_onSecondaryContainer_closure1: function MaterialDynamicColors_onSecondaryContainer_closure1() {
    },
    MaterialDynamicColors_onSecondaryContainer_closure: function MaterialDynamicColors_onSecondaryContainer_closure() {
    },
    MaterialDynamicColors_tertiary_closure0: function MaterialDynamicColors_tertiary_closure0() {
    },
    MaterialDynamicColors_tertiary_closure1: function MaterialDynamicColors_tertiary_closure1() {
    },
    MaterialDynamicColors_tertiary_closure: function MaterialDynamicColors_tertiary_closure() {
    },
    MaterialDynamicColors_tertiary_closure2: function MaterialDynamicColors_tertiary_closure2() {
    },
    MaterialDynamicColors_onTertiary_closure0: function MaterialDynamicColors_onTertiary_closure0() {
    },
    MaterialDynamicColors_onTertiary_closure1: function MaterialDynamicColors_onTertiary_closure1() {
    },
    MaterialDynamicColors_onTertiary_closure: function MaterialDynamicColors_onTertiary_closure() {
    },
    MaterialDynamicColors_tertiaryContainer_closure0: function MaterialDynamicColors_tertiaryContainer_closure0() {
    },
    MaterialDynamicColors_tertiaryContainer_closure1: function MaterialDynamicColors_tertiaryContainer_closure1() {
    },
    MaterialDynamicColors_tertiaryContainer_closure: function MaterialDynamicColors_tertiaryContainer_closure() {
    },
    MaterialDynamicColors_tertiaryContainer_closure2: function MaterialDynamicColors_tertiaryContainer_closure2() {
    },
    MaterialDynamicColors_onTertiaryContainer_closure0: function MaterialDynamicColors_onTertiaryContainer_closure0() {
    },
    MaterialDynamicColors_onTertiaryContainer_closure1: function MaterialDynamicColors_onTertiaryContainer_closure1() {
    },
    MaterialDynamicColors_onTertiaryContainer_closure: function MaterialDynamicColors_onTertiaryContainer_closure() {
    },
    MaterialDynamicColors_error_closure0: function MaterialDynamicColors_error_closure0() {
    },
    MaterialDynamicColors_error_closure1: function MaterialDynamicColors_error_closure1() {
    },
    MaterialDynamicColors_error_closure: function MaterialDynamicColors_error_closure() {
    },
    MaterialDynamicColors_error_closure2: function MaterialDynamicColors_error_closure2() {
    },
    MaterialDynamicColors_onError_closure0: function MaterialDynamicColors_onError_closure0() {
    },
    MaterialDynamicColors_onError_closure1: function MaterialDynamicColors_onError_closure1() {
    },
    MaterialDynamicColors_onError_closure: function MaterialDynamicColors_onError_closure() {
    },
    MaterialDynamicColors_errorContainer_closure0: function MaterialDynamicColors_errorContainer_closure0() {
    },
    MaterialDynamicColors_errorContainer_closure1: function MaterialDynamicColors_errorContainer_closure1() {
    },
    MaterialDynamicColors_errorContainer_closure: function MaterialDynamicColors_errorContainer_closure() {
    },
    MaterialDynamicColors_errorContainer_closure2: function MaterialDynamicColors_errorContainer_closure2() {
    },
    MaterialDynamicColors_onErrorContainer_closure0: function MaterialDynamicColors_onErrorContainer_closure0() {
    },
    MaterialDynamicColors_onErrorContainer_closure1: function MaterialDynamicColors_onErrorContainer_closure1() {
    },
    MaterialDynamicColors_onErrorContainer_closure: function MaterialDynamicColors_onErrorContainer_closure() {
    },
    MaterialDynamicColors_primaryFixed_closure0: function MaterialDynamicColors_primaryFixed_closure0() {
    },
    MaterialDynamicColors_primaryFixed_closure1: function MaterialDynamicColors_primaryFixed_closure1() {
    },
    MaterialDynamicColors_primaryFixed_closure: function MaterialDynamicColors_primaryFixed_closure() {
    },
    MaterialDynamicColors_primaryFixed_closure2: function MaterialDynamicColors_primaryFixed_closure2() {
    },
    MaterialDynamicColors_primaryFixedDim_closure0: function MaterialDynamicColors_primaryFixedDim_closure0() {
    },
    MaterialDynamicColors_primaryFixedDim_closure1: function MaterialDynamicColors_primaryFixedDim_closure1() {
    },
    MaterialDynamicColors_primaryFixedDim_closure: function MaterialDynamicColors_primaryFixedDim_closure() {
    },
    MaterialDynamicColors_primaryFixedDim_closure2: function MaterialDynamicColors_primaryFixedDim_closure2() {
    },
    MaterialDynamicColors_onPrimaryFixed_closure0: function MaterialDynamicColors_onPrimaryFixed_closure0() {
    },
    MaterialDynamicColors_onPrimaryFixed_closure2: function MaterialDynamicColors_onPrimaryFixed_closure2() {
    },
    MaterialDynamicColors_onPrimaryFixed_closure: function MaterialDynamicColors_onPrimaryFixed_closure() {
    },
    MaterialDynamicColors_onPrimaryFixed_closure1: function MaterialDynamicColors_onPrimaryFixed_closure1() {
    },
    MaterialDynamicColors_onPrimaryFixedVariant_closure0: function MaterialDynamicColors_onPrimaryFixedVariant_closure0() {
    },
    MaterialDynamicColors_onPrimaryFixedVariant_closure2: function MaterialDynamicColors_onPrimaryFixedVariant_closure2() {
    },
    MaterialDynamicColors_onPrimaryFixedVariant_closure: function MaterialDynamicColors_onPrimaryFixedVariant_closure() {
    },
    MaterialDynamicColors_onPrimaryFixedVariant_closure1: function MaterialDynamicColors_onPrimaryFixedVariant_closure1() {
    },
    MaterialDynamicColors_secondaryFixed_closure0: function MaterialDynamicColors_secondaryFixed_closure0() {
    },
    MaterialDynamicColors_secondaryFixed_closure1: function MaterialDynamicColors_secondaryFixed_closure1() {
    },
    MaterialDynamicColors_secondaryFixed_closure: function MaterialDynamicColors_secondaryFixed_closure() {
    },
    MaterialDynamicColors_secondaryFixed_closure2: function MaterialDynamicColors_secondaryFixed_closure2() {
    },
    MaterialDynamicColors_secondaryFixedDim_closure0: function MaterialDynamicColors_secondaryFixedDim_closure0() {
    },
    MaterialDynamicColors_secondaryFixedDim_closure1: function MaterialDynamicColors_secondaryFixedDim_closure1() {
    },
    MaterialDynamicColors_secondaryFixedDim_closure: function MaterialDynamicColors_secondaryFixedDim_closure() {
    },
    MaterialDynamicColors_secondaryFixedDim_closure2: function MaterialDynamicColors_secondaryFixedDim_closure2() {
    },
    MaterialDynamicColors_onSecondaryFixed_closure0: function MaterialDynamicColors_onSecondaryFixed_closure0() {
    },
    MaterialDynamicColors_onSecondaryFixed_closure2: function MaterialDynamicColors_onSecondaryFixed_closure2() {
    },
    MaterialDynamicColors_onSecondaryFixed_closure: function MaterialDynamicColors_onSecondaryFixed_closure() {
    },
    MaterialDynamicColors_onSecondaryFixed_closure1: function MaterialDynamicColors_onSecondaryFixed_closure1() {
    },
    MaterialDynamicColors_onSecondaryFixedVariant_closure0: function MaterialDynamicColors_onSecondaryFixedVariant_closure0() {
    },
    MaterialDynamicColors_onSecondaryFixedVariant_closure2: function MaterialDynamicColors_onSecondaryFixedVariant_closure2() {
    },
    MaterialDynamicColors_onSecondaryFixedVariant_closure: function MaterialDynamicColors_onSecondaryFixedVariant_closure() {
    },
    MaterialDynamicColors_onSecondaryFixedVariant_closure1: function MaterialDynamicColors_onSecondaryFixedVariant_closure1() {
    },
    MaterialDynamicColors_tertiaryFixed_closure0: function MaterialDynamicColors_tertiaryFixed_closure0() {
    },
    MaterialDynamicColors_tertiaryFixed_closure1: function MaterialDynamicColors_tertiaryFixed_closure1() {
    },
    MaterialDynamicColors_tertiaryFixed_closure: function MaterialDynamicColors_tertiaryFixed_closure() {
    },
    MaterialDynamicColors_tertiaryFixed_closure2: function MaterialDynamicColors_tertiaryFixed_closure2() {
    },
    MaterialDynamicColors_tertiaryFixedDim_closure0: function MaterialDynamicColors_tertiaryFixedDim_closure0() {
    },
    MaterialDynamicColors_tertiaryFixedDim_closure1: function MaterialDynamicColors_tertiaryFixedDim_closure1() {
    },
    MaterialDynamicColors_tertiaryFixedDim_closure: function MaterialDynamicColors_tertiaryFixedDim_closure() {
    },
    MaterialDynamicColors_tertiaryFixedDim_closure2: function MaterialDynamicColors_tertiaryFixedDim_closure2() {
    },
    MaterialDynamicColors_onTertiaryFixed_closure0: function MaterialDynamicColors_onTertiaryFixed_closure0() {
    },
    MaterialDynamicColors_onTertiaryFixed_closure2: function MaterialDynamicColors_onTertiaryFixed_closure2() {
    },
    MaterialDynamicColors_onTertiaryFixed_closure: function MaterialDynamicColors_onTertiaryFixed_closure() {
    },
    MaterialDynamicColors_onTertiaryFixed_closure1: function MaterialDynamicColors_onTertiaryFixed_closure1() {
    },
    MaterialDynamicColors_onTertiaryFixedVariant_closure0: function MaterialDynamicColors_onTertiaryFixedVariant_closure0() {
    },
    MaterialDynamicColors_onTertiaryFixedVariant_closure2: function MaterialDynamicColors_onTertiaryFixedVariant_closure2() {
    },
    MaterialDynamicColors_onTertiaryFixedVariant_closure: function MaterialDynamicColors_onTertiaryFixedVariant_closure() {
    },
    MaterialDynamicColors_onTertiaryFixedVariant_closure1: function MaterialDynamicColors_onTertiaryFixedVariant_closure1() {
    },
    ContrastCurve$(low, normal, medium, high) {
      return new A.ContrastCurve(low, normal, medium, high);
    },
    ContrastCurve: function ContrastCurve(t0, t1, t2, t3) {
      var _ = this;
      _.low = t0;
      _.normal = t1;
      _.medium = t2;
      _.high = t3;
    },
    ToneDeltaPair$(roleA, roleB, delta, polarity, stayTogether) {
      return new A.ToneDeltaPair(roleA, roleB, delta, polarity, stayTogether);
    },
    TonePolarity: function TonePolarity(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    ToneDeltaPair: function ToneDeltaPair(t0, t1, t2, t3, t4) {
      var _ = this;
      _.roleA = t0;
      _.roleB = t1;
      _.delta = t2;
      _.polarity = t3;
      _.stayTogether = t4;
    },
    Variant: function Variant(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    Cam16$(hue, chroma, j, q, m, s, jstar, astar, bstar) {
      return new A.Cam16(hue, chroma, B._setArrayType([0, 0, 0], type$.JSArray_double));
    },
    Cam16_fromInt(argb) {
      return A.Cam16_fromIntInViewingConditions(argb, $.$get$ViewingConditions_sRgb());
    },
    Cam16_fromIntInViewingConditions(argb, viewingConditions) {
      var xyz = A.ColorUtils_xyzFromArgb(argb),
        t1 = J.getInterceptor$asx(xyz);
      return A.Cam16_fromXyzInViewingConditions(t1.$index(xyz, 0), t1.$index(xyz, 1), t1.$index(xyz, 2), viewingConditions);
    },
    Cam16_fromXyzInViewingConditions(x, y, z, viewingConditions) {
      var rD, gD, bD, rAF, gAF, bAF, rA, gA, bA, a, b, atanDegrees, hue, hueRadians, t4, t5, $J, t6, t7, t8, t9, t10, alpha, $C, $M, mstar,
        t1 = viewingConditions.rgbD,
        t2 = J.getInterceptor$asx(t1),
        t3 = t2.$index(t1, 0);
      if (typeof t3 !== "number")
        return t3.$mul();
      rD = t3 * (0.401288 * x + 0.650173 * y - 0.051461 * z);
      t3 = t2.$index(t1, 1);
      if (typeof t3 !== "number")
        return t3.$mul();
      gD = t3 * (-0.250268 * x + 1.204414 * y + 0.045854 * z);
      t1 = t2.$index(t1, 2);
      if (typeof t1 !== "number")
        return t1.$mul();
      bD = t1 * (-0.002079 * x + 0.048952 * y + 0.953127 * z);
      t1 = viewingConditions.fl;
      if (typeof t1 !== "number")
        return t1.$mul();
      rAF = J.toDouble$0$n(E.pow(t1 * Math.abs(rD) / 100, 0.42));
      gAF = J.toDouble$0$n(E.pow(t1 * Math.abs(gD) / 100, 0.42));
      bAF = J.toDouble$0$n(E.pow(t1 * Math.abs(bD) / 100, 0.42));
      t1 = A.MathUtils_signum(rD);
      if (typeof t1 !== "number")
        return t1.$mul();
      rA = t1 * 400 * rAF / (rAF + 27.13);
      t1 = A.MathUtils_signum(gD);
      if (typeof t1 !== "number")
        return t1.$mul();
      gA = t1 * 400 * gAF / (gAF + 27.13);
      t1 = A.MathUtils_signum(bD);
      if (typeof t1 !== "number")
        return t1.$mul();
      bA = t1 * 400 * bAF / (bAF + 27.13);
      a = (11 * rA + -12 * gA + bA) / 11;
      b = (rA + gA - 2 * bA) / 9;
      t1 = 20 * gA;
      atanDegrees = E.atan2(b, a) * 180 / 3.141592653589793;
      if (atanDegrees < 0)
        hue = atanDegrees + 360;
      else
        hue = atanDegrees >= 360 ? atanDegrees - 360 : atanDegrees;
      hueRadians = hue * 3.141592653589793 / 180;
      t2 = viewingConditions.nbb;
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = viewingConditions.aw;
      if (typeof t3 !== "number")
        return B.iae(t3);
      t4 = viewingConditions.c;
      t5 = viewingConditions.z;
      if (typeof t4 !== "number")
        return t4.$mul();
      if (typeof t5 !== "number")
        return B.iae(t5);
      t5 = E.pow((40 * rA + t1 + bA) / 20 * t2 / t3, t4 * t5);
      if (typeof t5 !== "number")
        return B.iae(t5);
      $J = 100 * t5;
      t5 = $J / 100;
      t2 = E.sqrt(t5);
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 += 4;
      t6 = viewingConditions.fLRoot;
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = A.cos((hue < 20.14 ? hue + 360 : hue) * 3.141592653589793 / 180 + 2);
      if (typeof t7 !== "number")
        return t7.$add();
      t8 = viewingConditions.nC;
      if (typeof t8 !== "number")
        return B.iae(t8);
      t9 = viewingConditions.ncb;
      if (typeof t9 !== "number")
        return B.iae(t9);
      t10 = E.sqrt(a * a + b * b);
      if (typeof t10 !== "number")
        return B.iae(t10);
      t1 = E.pow(3846.153846153846 * (0.25 * (t7 + 3.8)) * t8 * t9 * t10 / ((20 * rA + t1 + 21 * bA) / 20 + 0.305), 0.9);
      t10 = E.pow(0.29, viewingConditions.backgroundYTowhitePointY);
      if (typeof t10 !== "number")
        return B.iae(t10);
      t10 = E.pow(1.64 - t10, 0.73);
      if (typeof t1 !== "number")
        return t1.$mul();
      if (typeof t10 !== "number")
        return B.iae(t10);
      alpha = t1 * t10;
      t5 = E.sqrt(t5);
      if (typeof t5 !== "number")
        return B.iae(t5);
      $C = alpha * t5;
      $M = $C * t6;
      t5 = E.sqrt(alpha * t4 / t3);
      if (typeof t5 !== "number")
        return B.iae(t5);
      t10 = A.log(1 + 0.0228 * $M);
      if (typeof t10 !== "number")
        return t10.$div();
      mstar = t10 / 0.0228;
      t10 = A.cos(hueRadians);
      if (typeof t10 !== "number")
        return B.iae(t10);
      t1 = A.sin(hueRadians);
      if (typeof t1 !== "number")
        return B.iae(t1);
      return A.Cam16$(hue, $C, $J, 4 / t4 * t2 * t3 * t6, $M, 50 * t5, 1.7000000000000002 * $J / (1 + 0.007 * $J), mstar * t10, mstar * t1);
    },
    Cam16: function Cam16(t0, t1, t2) {
      this.hue = t0;
      this.chroma = t1;
      this._viewedArray = t2;
    },
    Hct_from(hue, chroma, tone) {
      return A.Hct$_(A.HctSolver_solveToInt(hue, chroma, tone));
    },
    Hct_fromInt(argb) {
      return A.Hct$_(argb);
    },
    Hct$_(argb) {
      var t1 = new A.Hct();
      t1.Hct$_$1(argb);
      return t1;
    },
    Hct: function Hct() {
      var _ = this;
      _.__Hct__argb_A = _.__Hct__tone_A = _.__Hct__chroma_A = _.__Hct__hue_A = $;
    },
    ViewingConditions$(adaptingLuminance, aw, backgroundLstar, backgroundYTowhitePointY, c, discountingIlluminant, drgbInverse, fLRoot, fl, nC, nbb, ncb, rgbD, surround, whitePoint, z) {
      return new A.ViewingConditions(backgroundYTowhitePointY, aw, nbb, ncb, c, nC, rgbD, fl, fLRoot, z);
    },
    ViewingConditions_ViewingConditions$make() {
      var t1, adaptingLuminance, backgroundLstar, t2, t3, t4, rW, gW, bW, c, d, rgbD, k, k4, k4F, fl, n, nbb, t5, rgbAFactors, rgbA,
        whitePoint = A.ColorUtils_whitePointD65();
      whitePoint = whitePoint;
      t1 = A.ColorUtils_yFromLstar(50);
      if (typeof t1 !== "number")
        return B.iae(t1);
      adaptingLuminance = 63.66197723675813 * t1 / 100;
      backgroundLstar = E.max(0.1, 50, type$.double);
      t1 = J.getInterceptor$asx(whitePoint);
      t2 = t1.$index(whitePoint, 0);
      if (typeof t2 !== "number")
        return t2.$mul();
      t3 = t1.$index(whitePoint, 1);
      if (typeof t3 !== "number")
        return t3.$mul();
      t4 = t1.$index(whitePoint, 2);
      if (typeof t4 !== "number")
        return t4.$mul();
      rW = t2 * 0.401288 + t3 * 0.650173 + t4 * -0.051461;
      t4 = t1.$index(whitePoint, 0);
      if (typeof t4 !== "number")
        return t4.$mul();
      t3 = t1.$index(whitePoint, 1);
      if (typeof t3 !== "number")
        return t3.$mul();
      t2 = t1.$index(whitePoint, 2);
      if (typeof t2 !== "number")
        return t2.$mul();
      gW = t4 * -0.250268 + t3 * 1.204414 + t2 * 0.045854;
      t2 = t1.$index(whitePoint, 0);
      if (typeof t2 !== "number")
        return t2.$mul();
      t3 = t1.$index(whitePoint, 1);
      if (typeof t3 !== "number")
        return t3.$mul();
      t4 = t1.$index(whitePoint, 2);
      if (typeof t4 !== "number")
        return t4.$mul();
      bW = t2 * -0.002079 + t3 * 0.048952 + t4 * 0.953127;
      c = A.MathUtils_lerp(0.59, 0.69, 0.9999999999999998);
      t2 = E.exp((-adaptingLuminance - 42) / 92);
      if (typeof t2 !== "number")
        return B.iae(t2);
      d = 1 - 0.2777777777777778 * t2;
      if (d > 1)
        d = 1;
      else if (d < 0)
        d = 0;
      t2 = type$.JSArray_double;
      rgbD = B._setArrayType([d * (100 / rW) + 1 - d, d * (100 / gW) + 1 - d, d * (100 / bW) + 1 - d], t2);
      t3 = 5 * adaptingLuminance;
      k = 1 / (t3 + 1);
      k4 = k * k * k * k;
      k4F = 1 - k4;
      t3 = E.pow(t3, 0.3333333333333333);
      if (typeof t3 !== "number")
        return B.iae(t3);
      fl = k4 * adaptingLuminance + 0.1 * k4F * k4F * t3;
      t3 = A.ColorUtils_yFromLstar(backgroundLstar);
      t1 = t1.$index(whitePoint, 1);
      if (typeof t3 !== "number")
        return t3.$div();
      if (typeof t1 !== "number")
        return B.iae(t1);
      n = t3 / t1;
      t1 = E.sqrt(n);
      if (typeof t1 !== "number")
        return B.iae(t1);
      t3 = E.pow(n, 0.2);
      if (typeof t3 !== "number")
        return B.iae(t3);
      nbb = 0.725 / t3;
      t3 = rgbD.length;
      if (0 >= t3)
        return B.ioore(rgbD, 0);
      t4 = rgbD[0];
      if (typeof t4 !== "number")
        return B.iae(t4);
      t4 = E.pow(fl * t4 * rW / 100, 0.42);
      if (1 >= t3)
        return B.ioore(rgbD, 1);
      t5 = rgbD[1];
      if (typeof t5 !== "number")
        return B.iae(t5);
      t5 = E.pow(fl * t5 * gW / 100, 0.42);
      if (2 >= t3)
        return B.ioore(rgbD, 2);
      t3 = rgbD[2];
      if (typeof t3 !== "number")
        return B.iae(t3);
      rgbAFactors = [t4, t5, E.pow(fl * t3 * bW / 100, 0.42)];
      t3 = rgbAFactors.length;
      if (0 >= t3)
        return B.ioore(rgbAFactors, 0);
      t5 = rgbAFactors[0];
      if (typeof t5 !== "number")
        return B.iae(t5);
      if (1 >= t3)
        return B.ioore(rgbAFactors, 1);
      t4 = rgbAFactors[1];
      if (typeof t4 !== "number")
        return B.iae(t4);
      if (2 >= t3)
        return B.ioore(rgbAFactors, 2);
      t3 = rgbAFactors[2];
      if (typeof t3 !== "number")
        return B.iae(t3);
      rgbA = [400 * t5 / (t5 + 27.13), 400 * t4 / (t4 + 27.13), 400 * t3 / (t3 + 27.13)];
      t3 = rgbA.length;
      if (0 >= t3)
        return B.ioore(rgbA, 0);
      t4 = rgbA[0];
      if (typeof t4 !== "number")
        return B.iae(t4);
      if (1 >= t3)
        return B.ioore(rgbA, 1);
      t5 = rgbA[1];
      if (typeof t5 !== "number")
        return B.iae(t5);
      if (2 >= t3)
        return B.ioore(rgbA, 2);
      t3 = rgbA[2];
      if (typeof t3 !== "number")
        return B.iae(t3);
      return A.ViewingConditions$(adaptingLuminance, (40 * t4 + 20 * t5 + t3) / 20 * nbb, backgroundLstar, n, c, false, B._setArrayType([0, 0, 0], t2), J.toDouble$0$n(E.pow(fl, 0.25)), fl, 1, nbb, nbb, rgbD, 2, whitePoint, 1.48 + t1);
    },
    ViewingConditions: function ViewingConditions(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.backgroundYTowhitePointY = t0;
      _.aw = t1;
      _.nbb = t2;
      _.ncb = t3;
      _.c = t4;
      _.nC = t5;
      _.rgbD = t6;
      _.fl = t7;
      _.fLRoot = t8;
      _.z = t9;
    },
    TonalPalette$_fromHct(hct) {
      var t1 = type$.int;
      t1 = B.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      return new A.TonalPalette(hct.get$hue(), hct.get$chroma(), t1);
    },
    TonalPalette$_fromHueAndChroma(hue, chroma) {
      var t1 = type$.int;
      t1 = B.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      A.TonalPalette_createKeyColor(hue, chroma);
      return new A.TonalPalette(hue, chroma, t1);
    },
    TonalPalette_of(hue, chroma) {
      return A.TonalPalette$_fromHueAndChroma(hue, chroma);
    },
    TonalPalette_fromHct(hct) {
      return A.TonalPalette$_fromHct(hct);
    },
    TonalPalette_createKeyColor(hue, chroma) {
      var smallestDelta, delta, hctAdd, hctAddDelta, hctSubtract, hctSubtractDelta,
        smallestDeltaHct = A.Hct_from(hue, chroma, 50),
        t1 = smallestDeltaHct.get$chroma();
      if (typeof t1 !== "number")
        return t1.$sub();
      smallestDelta = Math.abs(t1 - chroma);
      for (delta = 1; delta < 50; ++delta) {
        if (B.boolConversionCheck(J.$eq$(F.JSNumber_methods.round$0(chroma), J.round$0$n(smallestDeltaHct.get$chroma()))))
          return smallestDeltaHct;
        hctAdd = A.Hct_from(hue, chroma, 50 + delta);
        t1 = hctAdd.get$chroma();
        if (typeof t1 !== "number")
          return t1.$sub();
        hctAddDelta = Math.abs(t1 - chroma);
        if (hctAddDelta < smallestDelta) {
          smallestDelta = hctAddDelta;
          smallestDeltaHct = hctAdd;
        }
        hctSubtract = A.Hct_from(hue, chroma, 50 - delta);
        t1 = hctSubtract.get$chroma();
        if (typeof t1 !== "number")
          return t1.$sub();
        hctSubtractDelta = Math.abs(t1 - chroma);
        if (hctSubtractDelta < smallestDelta) {
          smallestDelta = hctSubtractDelta;
          smallestDeltaHct = hctSubtract;
        }
      }
      return smallestDeltaHct;
    },
    TonalPalette: function TonalPalette(t0, t1, t2) {
      this.hue = t0;
      this.chroma = t1;
      this._tonal_palette$_cache = t2;
    },
    SchemeContent$(contrastLevel, isDark, sourceColorHct) {
      var t5, t6, t7,
        t1 = sourceColorHct.toInt$0(0),
        t2 = A.TonalPalette_of(sourceColorHct.get$hue(), sourceColorHct.get$chroma()),
        t3 = sourceColorHct.get$hue(),
        t4 = sourceColorHct.get$chroma();
      if (typeof t4 !== "number")
        return t4.$sub();
      t5 = sourceColorHct.get$chroma();
      if (typeof t5 !== "number")
        return t5.$mul();
      t5 = A.TonalPalette_of(t3, E.max(t4 - 32, t5 * 0.5, type$.double));
      t4 = A.TonalPalette_fromHct(A.DislikeAnalyzer_fixIfDisliked(J.get$last$ax(A.TemperatureCache$(sourceColorHct).analogous$2$count$divisions(3, 6))));
      t3 = sourceColorHct.get$hue();
      t6 = sourceColorHct.get$chroma();
      if (typeof t6 !== "number")
        return t6.$div();
      t6 = A.TonalPalette_of(t3, t6 / 8);
      t3 = sourceColorHct.get$hue();
      t7 = sourceColorHct.get$chroma();
      if (typeof t7 !== "number")
        return t7.$div();
      t7 = A.TonalPalette_of(t3, t7 / 8 + 4);
      return new A.SchemeContent(A.Hct_fromInt(t1), C.Variant_5_content, isDark, contrastLevel, t2, t5, t4, t6, t7, A.TonalPalette_of(25, 84));
    },
    SchemeContent: function SchemeContent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.sourceColorHct = t0;
      _.variant = t1;
      _.isDark = t2;
      _.contrastLevel = t3;
      _.primaryPalette = t4;
      _.secondaryPalette = t5;
      _.tertiaryPalette = t6;
      _.neutralPalette = t7;
      _.neutralVariantPalette = t8;
      _.errorPalette = t9;
    },
    SchemeExpressive$(contrastLevel, isDark, sourceColorHct) {
      var t3, t4, t5, t6,
        t1 = sourceColorHct.toInt$0(0),
        t2 = sourceColorHct.get$hue();
      if (typeof t2 !== "number")
        return t2.$add();
      t2 = A.TonalPalette_of(A.MathUtils_sanitizeDegreesDouble(t2 + 240), 40);
      t3 = A.TonalPalette_of(A.DynamicScheme_getRotatedHue(sourceColorHct, $.SchemeExpressive_hues, $.SchemeExpressive_secondaryRotations), 24);
      t4 = A.TonalPalette_of(A.DynamicScheme_getRotatedHue(sourceColorHct, $.SchemeExpressive_hues, $.SchemeExpressive_tertiaryRotations), 32);
      t5 = sourceColorHct.get$hue();
      if (typeof t5 !== "number")
        return t5.$add();
      t5 = A.TonalPalette_of(t5 + 15, 8);
      t6 = sourceColorHct.get$hue();
      if (typeof t6 !== "number")
        return t6.$add();
      t6 = A.TonalPalette_of(t6 + 15, 12);
      return new A.SchemeExpressive(A.Hct_fromInt(t1), C.Variant_4_expressive, isDark, contrastLevel, t2, t3, t4, t5, t6, A.TonalPalette_of(25, 84));
    },
    SchemeExpressive: function SchemeExpressive(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.sourceColorHct = t0;
      _.variant = t1;
      _.isDark = t2;
      _.contrastLevel = t3;
      _.primaryPalette = t4;
      _.secondaryPalette = t5;
      _.tertiaryPalette = t6;
      _.neutralPalette = t7;
      _.neutralVariantPalette = t8;
      _.errorPalette = t9;
    },
    SchemeFidelity$(contrastLevel, isDark, sourceColorHct) {
      var t5, t6, t7,
        t1 = sourceColorHct.toInt$0(0),
        t2 = A.TonalPalette_of(sourceColorHct.get$hue(), sourceColorHct.get$chroma()),
        t3 = sourceColorHct.get$hue(),
        t4 = sourceColorHct.get$chroma();
      if (typeof t4 !== "number")
        return t4.$sub();
      t5 = sourceColorHct.get$chroma();
      if (typeof t5 !== "number")
        return t5.$mul();
      t5 = A.TonalPalette_of(t3, E.max(t4 - 32, t5 * 0.5, type$.double));
      t4 = A.TonalPalette_fromHct(A.DislikeAnalyzer_fixIfDisliked(A.TemperatureCache$(sourceColorHct).get$complement()));
      t3 = sourceColorHct.get$hue();
      t6 = sourceColorHct.get$chroma();
      if (typeof t6 !== "number")
        return t6.$div();
      t6 = A.TonalPalette_of(t3, t6 / 8);
      t3 = sourceColorHct.get$hue();
      t7 = sourceColorHct.get$chroma();
      if (typeof t7 !== "number")
        return t7.$div();
      t7 = A.TonalPalette_of(t3, t7 / 8 + 4);
      return new A.SchemeFidelity(A.Hct_fromInt(t1), C.Variant_6_fidelity, isDark, contrastLevel, t2, t5, t4, t6, t7, A.TonalPalette_of(25, 84));
    },
    SchemeFidelity: function SchemeFidelity(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.sourceColorHct = t0;
      _.variant = t1;
      _.isDark = t2;
      _.contrastLevel = t3;
      _.primaryPalette = t4;
      _.secondaryPalette = t5;
      _.tertiaryPalette = t6;
      _.neutralPalette = t7;
      _.neutralVariantPalette = t8;
      _.errorPalette = t9;
    },
    SchemeFruitSalad$(contrastLevel, isDark, sourceColorHct) {
      var t3, t4, t5, t6,
        t1 = sourceColorHct.toInt$0(0),
        t2 = sourceColorHct.get$hue();
      if (typeof t2 !== "number")
        return t2.$sub();
      t2 = A.TonalPalette_of(A.MathUtils_sanitizeDegreesDouble(t2 - 50), 48);
      t3 = sourceColorHct.get$hue();
      if (typeof t3 !== "number")
        return t3.$sub();
      t3 = A.TonalPalette_of(A.MathUtils_sanitizeDegreesDouble(t3 - 50), 36);
      t4 = A.TonalPalette_of(sourceColorHct.get$hue(), 36);
      t5 = A.TonalPalette_of(sourceColorHct.get$hue(), 10);
      t6 = A.TonalPalette_of(sourceColorHct.get$hue(), 16);
      return new A.SchemeFruitSalad(A.Hct_fromInt(t1), C.Variant_8_fruitSalad, isDark, contrastLevel, t2, t3, t4, t5, t6, A.TonalPalette_of(25, 84));
    },
    SchemeFruitSalad: function SchemeFruitSalad(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.sourceColorHct = t0;
      _.variant = t1;
      _.isDark = t2;
      _.contrastLevel = t3;
      _.primaryPalette = t4;
      _.secondaryPalette = t5;
      _.tertiaryPalette = t6;
      _.neutralPalette = t7;
      _.neutralVariantPalette = t8;
      _.errorPalette = t9;
    },
    SchemeMonochrome$(contrastLevel, isDark, sourceColorHct) {
      var t1 = sourceColorHct.toInt$0(0),
        t2 = A.TonalPalette_of(sourceColorHct.get$hue(), 0),
        t3 = A.TonalPalette_of(sourceColorHct.get$hue(), 0),
        t4 = A.TonalPalette_of(sourceColorHct.get$hue(), 0),
        t5 = A.TonalPalette_of(sourceColorHct.get$hue(), 0),
        t6 = A.TonalPalette_of(sourceColorHct.get$hue(), 0);
      return new A.SchemeMonochrome(A.Hct_fromInt(t1), C.Variant_0_monochrome, isDark, contrastLevel, t2, t3, t4, t5, t6, A.TonalPalette_of(25, 84));
    },
    SchemeMonochrome: function SchemeMonochrome(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.sourceColorHct = t0;
      _.variant = t1;
      _.isDark = t2;
      _.contrastLevel = t3;
      _.primaryPalette = t4;
      _.secondaryPalette = t5;
      _.tertiaryPalette = t6;
      _.neutralPalette = t7;
      _.neutralVariantPalette = t8;
      _.errorPalette = t9;
    },
    SchemeNeutral$(contrastLevel, isDark, sourceColorHct) {
      var t1 = sourceColorHct.toInt$0(0),
        t2 = A.TonalPalette_of(sourceColorHct.get$hue(), 12),
        t3 = A.TonalPalette_of(sourceColorHct.get$hue(), 8),
        t4 = A.TonalPalette_of(sourceColorHct.get$hue(), 16),
        t5 = A.TonalPalette_of(sourceColorHct.get$hue(), 2),
        t6 = A.TonalPalette_of(sourceColorHct.get$hue(), 2);
      return new A.SchemeNeutral(A.Hct_fromInt(t1), C.Variant_1_neutral, isDark, contrastLevel, t2, t3, t4, t5, t6, A.TonalPalette_of(25, 84));
    },
    SchemeNeutral: function SchemeNeutral(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.sourceColorHct = t0;
      _.variant = t1;
      _.isDark = t2;
      _.contrastLevel = t3;
      _.primaryPalette = t4;
      _.secondaryPalette = t5;
      _.tertiaryPalette = t6;
      _.neutralPalette = t7;
      _.neutralVariantPalette = t8;
      _.errorPalette = t9;
    },
    SchemeRainbow$(contrastLevel, isDark, sourceColorHct) {
      var t5, t6,
        t1 = sourceColorHct.toInt$0(0),
        t2 = A.TonalPalette_of(sourceColorHct.get$hue(), 48),
        t3 = A.TonalPalette_of(sourceColorHct.get$hue(), 16),
        t4 = sourceColorHct.get$hue();
      if (typeof t4 !== "number")
        return t4.$add();
      t4 = A.TonalPalette_of(A.MathUtils_sanitizeDegreesDouble(t4 + 60), 24);
      t5 = A.TonalPalette_of(sourceColorHct.get$hue(), 0);
      t6 = A.TonalPalette_of(sourceColorHct.get$hue(), 0);
      return new A.SchemeRainbow(A.Hct_fromInt(t1), C.Variant_7_rainbow, isDark, contrastLevel, t2, t3, t4, t5, t6, A.TonalPalette_of(25, 84));
    },
    SchemeRainbow: function SchemeRainbow(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.sourceColorHct = t0;
      _.variant = t1;
      _.isDark = t2;
      _.contrastLevel = t3;
      _.primaryPalette = t4;
      _.secondaryPalette = t5;
      _.tertiaryPalette = t6;
      _.neutralPalette = t7;
      _.neutralVariantPalette = t8;
      _.errorPalette = t9;
    },
    SchemeTonalSpot$(contrastLevel, isDark, sourceColorHct) {
      var t5, t6,
        t1 = sourceColorHct.toInt$0(0),
        t2 = A.TonalPalette_of(sourceColorHct.get$hue(), 36),
        t3 = A.TonalPalette_of(sourceColorHct.get$hue(), 16),
        t4 = sourceColorHct.get$hue();
      if (typeof t4 !== "number")
        return t4.$add();
      t4 = A.TonalPalette_of(A.MathUtils_sanitizeDegreesDouble(t4 + 60), 24);
      t5 = A.TonalPalette_of(sourceColorHct.get$hue(), 6);
      t6 = A.TonalPalette_of(sourceColorHct.get$hue(), 8);
      return new A.SchemeTonalSpot(A.Hct_fromInt(t1), C.Variant_2_tonalSpot, isDark, contrastLevel, t2, t3, t4, t5, t6, A.TonalPalette_of(25, 84));
    },
    SchemeTonalSpot: function SchemeTonalSpot(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.sourceColorHct = t0;
      _.variant = t1;
      _.isDark = t2;
      _.contrastLevel = t3;
      _.primaryPalette = t4;
      _.secondaryPalette = t5;
      _.tertiaryPalette = t6;
      _.neutralPalette = t7;
      _.neutralVariantPalette = t8;
      _.errorPalette = t9;
    },
    SchemeVibrant$(contrastLevel, isDark, sourceColorHct) {
      var t1 = sourceColorHct.toInt$0(0),
        t2 = A.TonalPalette_of(sourceColorHct.get$hue(), 200),
        t3 = A.TonalPalette_of(A.DynamicScheme_getRotatedHue(sourceColorHct, $.SchemeVibrant_hues, $.SchemeVibrant_secondaryRotations), 24),
        t4 = A.TonalPalette_of(A.DynamicScheme_getRotatedHue(sourceColorHct, $.SchemeVibrant_hues, $.SchemeVibrant_tertiaryRotations), 32),
        t5 = A.TonalPalette_of(sourceColorHct.get$hue(), 10),
        t6 = A.TonalPalette_of(sourceColorHct.get$hue(), 12);
      return new A.SchemeVibrant(A.Hct_fromInt(t1), C.Variant_3_vibrant, isDark, contrastLevel, t2, t3, t4, t5, t6, A.TonalPalette_of(25, 84));
    },
    SchemeVibrant: function SchemeVibrant(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.sourceColorHct = t0;
      _.variant = t1;
      _.isDark = t2;
      _.contrastLevel = t3;
      _.primaryPalette = t4;
      _.secondaryPalette = t5;
      _.tertiaryPalette = t6;
      _.neutralPalette = t7;
      _.neutralVariantPalette = t8;
      _.errorPalette = t9;
    },
    TemperatureCache$(input) {
      var t1 = type$.JSArray_Hct;
      return new A.TemperatureCache(input, B._setArrayType([], t1), B._setArrayType([], t1), B.LinkedHashMap_LinkedHashMap$_empty(type$.Hct, type$.double));
    },
    TemperatureCache_isBetween(a, angle, b) {
      if (a < b)
        return a <= angle && angle <= b;
      return a <= angle || angle <= b;
    },
    TemperatureCache_rawTemperature(color) {
      var hue, t3, t4,
        lab = A.ColorUtils_labFromArgb(color.toInt$0(0)),
        t1 = J.getInterceptor$asx(lab),
        t2 = E.atan2(t1.$index(lab, 2), t1.$index(lab, 1));
      if (typeof t2 !== "number")
        return t2.$mul();
      hue = A.MathUtils_sanitizeDegreesDouble(t2 * 180 / 3.141592653589793);
      t2 = t1.$index(lab, 1);
      t3 = t1.$index(lab, 1);
      if (typeof t2 !== "number")
        return t2.$mul();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t4 = t1.$index(lab, 2);
      t1 = t1.$index(lab, 2);
      if (typeof t4 !== "number")
        return t4.$mul();
      if (typeof t1 !== "number")
        return B.iae(t1);
      t1 = E.pow(E.sqrt(t2 * t3 + t4 * t1), 1.07);
      if (typeof t1 !== "number")
        return B.iae(t1);
      t4 = A.MathUtils_sanitizeDegreesDouble(hue - 50);
      if (typeof t4 !== "number")
        return t4.$mul();
      t4 = A.cos(t4 * 3.141592653589793 / 180);
      if (typeof t4 !== "number")
        return B.iae(t4);
      return -0.5 + 0.02 * t1 * t4;
    },
    TemperatureCache: function TemperatureCache(t0, t1, t2, t3) {
      var _ = this;
      _.input = t0;
      _._hctsByTemp = t1;
      _._hctsByHue = t2;
      _._tempsByHct = t3;
      _._inputRelativeTemperature = -1;
      _._complement = null;
    },
    TemperatureCache_hctsByTemp_closure: function TemperatureCache_hctsByTemp_closure(t0) {
      this.temperaturesByHct = t0;
    },
    CounterWidget$(count, onChange) {
      return new A.CounterWidget(count, onChange, null);
    },
    CounterWidget: function CounterWidget(t0, t1, t2) {
      this.count = t0;
      this.onChange = t1;
      this.key = t2;
    },
    CounterWidget_build_closure: function CounterWidget_build_closure(t0) {
      this.$this = t0;
    },
    CounterWidget_build_closure0: function CounterWidget_build_closure0(t0) {
      this.$this = t0;
    },
    IterableExtensions_elementAtOrNull(_this, index, $T) {
      var t1, t2, iterator;
      B.RangeError_checkNotNegative(index, "index");
      if (type$.EfficientLengthIterable_dynamic._is(_this)) {
        t1 = J.getInterceptor$asx(_this);
        t2 = t1.get$length(_this);
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (index >= t2)
          return null;
        return t1.elementAt$1(_this, index);
      }
      iterator = J.get$iterator$ax(_this);
      do
        if (!B.boolConversionCheck(iterator.moveNext$0()))
          return null;
      while (--index, index >= 0);
      return iterator.get$current();
    },
    Tooltip_dismissAllToolTips() {
      var t1 = J.getInterceptor$asx($.Tooltip__openedTooltips);
      if (B.boolConversionCheck(t1.get$isNotEmpty($.Tooltip__openedTooltips))) {
        for (t1 = J.get$iterator$ax(t1.toList$0($.Tooltip__openedTooltips)); B.boolConversionCheck(t1.moveNext$0());)
          t1.get$current()._scheduleDismissTooltip$1$withDelay(F.Duration_0);
        return true;
      }
      return false;
    },
    TextLayoutMetrics_isLineTerminator(codeUnit) {
      switch (codeUnit) {
        case 10:
        case 11:
        case 12:
        case 13:
        case 133:
        case 8232:
        case 8233:
          return true;
        default:
          return false;
      }
    },
    LateError$localADI(localName) {
      return new B.LateError("Local '" + localName + "' has been assigned during initialization.");
    },
    jsonEncode(object, toEncodable) {
      return F.C_JsonCodec.encode$2$toEncodable(object, toEncodable);
    },
    low(codeUnit) {
      var index, bit, pair,
        _s3072_ = string$.u1ac4_____,
        _s8492_ = string$.E53333,
        t1 = F.JSInt_methods._shrOtherPositive$1(codeUnit, 6);
      if (!(t1 < 3072))
        return B.ioore(_s3072_, t1);
      index = _s3072_.charCodeAt(t1) + (codeUnit & 63);
      bit = index & 1;
      t1 = index >>> 1;
      if (!(t1 < 8492))
        return B.ioore(_s8492_, t1);
      pair = _s8492_.charCodeAt(t1);
      return pair >>> 4 & -bit | pair & 15 & bit - 1;
    },
    high(lead, tail) {
      var index, bit, pair,
        _s3072_ = string$.u1ac4_____,
        _s8492_ = string$.E53333,
        offset = (lead & 1023) << 10 | tail & 1023,
        t1 = 1024 + (offset >>> 9);
      if (!(t1 < 3072))
        return B.ioore(_s3072_, t1);
      index = _s3072_.charCodeAt(t1) + (offset & 511);
      bit = index & 1;
      t1 = index >>> 1;
      if (!(t1 < 8492))
        return B.ioore(_s8492_, t1);
      pair = _s8492_.charCodeAt(t1);
      return pair >>> 4 & -bit | pair & 15 & bit - 1;
    },
    move(state, inputCategory) {
      var _s192_ = " 0\x10000\xa0\x80\x10@P`p`p\xb1 0\x10000\xa0\x80\x10@P`p`p\xb0 0\x10000\xa0\x80\x11@P`p`p\xb0 1\x10011\xa0\x80\x10@P`p`p\xb0 1\x10111\xa1\x81\x10AQaqaq\xb0 1\x10011\xa0\x80\x10@Qapaq\xb0 1\x10011\xa0\x80\x10@Paq`p\xb0 1\x10011\xa0\x80\x10@P`q`p\xb0 \x91\x100\x811\xa0\x80\x10@P`p`p\xb0 1\x10011\xa0\x81\x10@P`p`p\xb0 1\x100111\x80\x10@P`p`p\xb0!1\x11111\xa1\x81\x11AQaqaq\xb1",
        t1 = (state & 240 | inputCategory) >>> 0;
      if (!(t1 < 192))
        return B.ioore(_s192_, t1);
      return _s192_.charCodeAt(t1);
    },
    moveBack(state, inputCategory) {
      var _s208_ = "\x10@\x100@@\xa0\x80 0P`pPP\xb1\x10@\x100@@\xa0\x80 0P`pPP\xb0\x11@\x100@@\xa0\x80 0P`pPP\xb0\x10@\x100@@\xa0\x80 1P`pPP\xb0\x10A\x101AA\xa1\x81 1QaqQQ\xb0\x10@\x100@@\xa0\x80 1Q`pPP\xb0\x10@\x100@@\xa0\x80 1QapQP\xb0\x10@\x100@@\xa0\x80 1PaqQQ\xb0\x10\xe0\x100@@\xa0\x80 1P`pPP\xb0\xb1\xb1\xb1\xb1\x91\xb1\xc1\x81\xb1\xb1\xb1\xb1\xb1\xb1\xb1\xb1\x10@\x100@@\xd0\x80 1P`pPP\xb0\x11A\x111AA\xa1\x81!1QaqQQ\xb1\x10@\x100@@\x90\x80 1P`pPP\xb0",
        t1 = (state & 240 | inputCategory) >>> 0;
      if (!(t1 < 208))
        return B.ioore(_s208_, t1);
      return _s208_.charCodeAt(t1);
    },
    mapEquals(a, b, $T, $U) {
      var t1, key;
      if (a == null)
        return b == null;
      if (b == null || !B.boolConversionCheck(J.$eq$(a.get$length(a), b.get$length(b))))
        return false;
      if (a === b)
        return true;
      for (t1 = J.get$iterator$ax(a.get$keys()); B.boolConversionCheck(t1.moveNext$0());) {
        key = t1.get$current();
        if (!B.boolConversionCheck(b.containsKey$1(key)) || !B.boolConversionCheck(J.$eq$(b.$index(0, key), a.$index(0, key))))
          return false;
      }
      return true;
    },
    computeHitSlop(kind, settings) {
      var t1;
      switch (kind.index) {
        case 1:
          return 1;
        case 2:
        case 3:
        case 5:
        case 0:
        case 4:
          t1 = settings == null ? null : settings.touchSlop;
          return t1 == null ? 18 : t1;
      }
    },
    computePanSlop(kind, settings) {
      var t1;
      switch (kind.index) {
        case 1:
          return 2;
        case 2:
        case 3:
        case 5:
        case 0:
        case 4:
          t1 = settings == null ? null : settings.get$panSlop();
          return t1 == null ? 36 : t1;
      }
    },
    PaintingBinding_instance() {
      return E.BindingBase_checkInstance($.PaintingBinding__instance, type$.PaintingBinding);
    },
    MatrixUtils_forceToPoint(offset) {
      var t1 = E.Matrix4_Matrix4$identity();
      t1.setRow$2(0, E.Vector4_Vector4(0, 0, 0, offset.get$dx()));
      t1.setRow$2(1, E.Vector4_Vector4(0, 0, 0, offset.get$dy()));
      return t1;
    },
    ChildLayoutHelper_dryLayoutChild(child, constraints) {
      return type$.RenderBox._as(child).getDryLayout$1(type$.BoxConstraints._as(constraints));
    },
    ChildLayoutHelper_layoutChild(child, constraints) {
      type$.RenderBox._as(child);
      child.layout$2$parentUsesSize(type$.BoxConstraints._as(constraints), true);
      return child.get$size();
    },
    ChildLayoutHelper_getDryBaseline(child, constraints, baseline) {
      return type$.RenderBox._as(child).getDryBaseline$2(type$.BoxConstraints._as(constraints), type$.TextBaseline._as(baseline));
    },
    ChildLayoutHelper_getBaseline(child, constraints, baseline) {
      type$.RenderBox._as(child);
      type$.BoxConstraints._as(constraints);
      return child.getDistanceToBaseline$2$onlyReal(type$.TextBaseline._as(baseline), true);
    },
    HapticFeedback_vibrate() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void);
      var $async$HapticFeedback_vibrate = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return B._asyncAwait(D.OptionalMethodChannel_ENd.invokeMethod$1$1("HapticFeedback.vibrate", type$.void), $async$HapticFeedback_vibrate);
            case 2:
              // returning from await.
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$HapticFeedback_vibrate, $async$completer);
    },
    HapticFeedback_heavyImpact() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void);
      var $async$HapticFeedback_heavyImpact = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return B._asyncAwait(D.OptionalMethodChannel_ENd.invokeMethod$1$2("HapticFeedback.vibrate", "HapticFeedbackType.heavyImpact", type$.void), $async$HapticFeedback_heavyImpact);
            case 2:
              // returning from await.
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$HapticFeedback_heavyImpact, $async$completer);
    },
    HardwareKeyboard_instance() {
      return E.ServicesBinding_instance().get$keyboard();
    },
    SystemNavigator_setFrameworkHandlesBack(frameworkHandlesBack) {
      return A.SystemNavigator_setFrameworkHandlesBack$body(frameworkHandlesBack);
    },
    SystemNavigator_setFrameworkHandlesBack$body(frameworkHandlesBack) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue;
      var $async$SystemNavigator_setFrameworkHandlesBack = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$SystemNavigator_setFrameworkHandlesBack, $async$completer);
    },
    SystemNavigator_selectSingleEntryHistory() {
      return D.OptionalMethodChannel_86y.invokeMethod$1$1("selectSingleEntryHistory", type$.void);
    },
    SystemNavigator_selectMultiEntryHistory() {
      return D.OptionalMethodChannel_86y.invokeMethod$1$1("selectMultiEntryHistory", type$.void);
    },
    SystemNavigator_routeInformationUpdated(replace, state, uri) {
      if (uri == null) {
        null.toString;
        uri = E.Uri_parse(null);
      }
      return D.OptionalMethodChannel_86y.invokeMethod$1$2("routeInformationUpdated", B.LinkedHashMap_LinkedHashMap$_literal(["uri", J.toString$0$(uri), "state", state, "replace", replace], type$.String, type$.dynamic), type$.void);
    },
    debugCheckHasMediaQuery(context) {
      return true;
    },
    Feedback_forTap(context) {
      return A.Feedback_forTap$body(context);
    },
    Feedback_forTap$body(context) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue;
      var $async$Feedback_forTap = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                context.findRenderObject$0().sendSemanticsEvent$1(C.TapSemanticEvent_tap);
                switch (E.defaultTargetPlatform()) {
                  case D.TargetPlatform_0:
                  case D.TargetPlatform_1:
                    $async$returnValue = A.SystemSound_play(C.SystemSoundType_0);
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case D.TargetPlatform_2:
                  case D.TargetPlatform_3:
                  case D.TargetPlatform_4:
                  case D.TargetPlatform_5:
                    $async$returnValue = B.Future_Future$value(null, type$.void);
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                }
              case 1:
                // return
                return B._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return B._asyncStartSync($async$Feedback_forTap, $async$completer);
    },
    Feedback_forLongPress(context) {
      context.findRenderObject$0().sendSemanticsEvent$1(C.LongPressSemanticsEvent_longPress);
      switch (E.defaultTargetPlatform()) {
        case D.TargetPlatform_0:
        case D.TargetPlatform_1:
          return A.HapticFeedback_vibrate();
        case D.TargetPlatform_2:
          return B.Future_wait(B._setArrayType([A.SystemSound_play(C.SystemSoundType_0), A.HapticFeedback_heavyImpact()], type$.JSArray_Future_void), type$.void);
        case D.TargetPlatform_3:
        case D.TargetPlatform_4:
        case D.TargetPlatform_5:
          return B.Future_Future$value(null, type$.void);
      }
    },
    createLocalImageConfiguration(context) {
      var t3, t4,
        t1 = A.DefaultAssetBundle_of(context),
        t2 = A.MediaQuery_maybeDevicePixelRatioOf(context);
      if (t2 == null)
        t2 = 1;
      t3 = A.Localizations_maybeLocaleOf(context);
      t4 = E.Directionality_maybeOf(context);
      return A.ImageConfiguration$(t1, t2, t3, E.defaultTargetPlatform(), null, t4);
    },
    MediaQuery__of(context, aspect) {
      return E.InheritedModel_inheritFrom(context, aspect, type$.MediaQuery).data;
    },
    MediaQuery_devicePixelRatioOf(context) {
      return A.MediaQuery__of(context, D._MediaQueryAspect_2).devicePixelRatio;
    },
    MediaQuery_maybeDevicePixelRatioOf(context) {
      var t1 = E.MediaQuery__maybeOf(context, D._MediaQueryAspect_2);
      return t1 == null ? null : t1.devicePixelRatio;
    },
    MediaQuery_textScalerOf(context) {
      var t1 = A.MediaQuery_maybeTextScalerOf(context);
      return t1 == null ? D._LinearTextScaler_1 : t1;
    },
    MediaQuery_maybeTextScalerOf(context) {
      var t1 = E.MediaQuery__maybeOf(context, D._MediaQueryAspect_4);
      return t1 == null ? null : t1.get$textScaler();
    },
    MediaQuery_platformBrightnessOf(context) {
      var t1 = A.MediaQuery_maybePlatformBrightnessOf(context);
      return t1 == null ? D.Brightness_1 : t1;
    },
    MediaQuery_maybePlatformBrightnessOf(context) {
      var t1 = E.MediaQuery__maybeOf(context, D._MediaQueryAspect_5);
      return t1 == null ? null : t1.platformBrightness;
    },
    MediaQuery_paddingOf(context) {
      return A.MediaQuery__of(context, D._MediaQueryAspect_6).padding;
    },
    MediaQuery_accessibleNavigationOf(context) {
      return A.MediaQuery__of(context, D._MediaQueryAspect_11).accessibleNavigation;
    },
    MediaQuery_highContrastOf(context) {
      var t1 = A.MediaQuery_maybeHighContrastOf(context);
      return t1 == null ? false : t1;
    },
    MediaQuery_maybeHighContrastOf(context) {
      var t1 = E.MediaQuery__maybeOf(context, D._MediaQueryAspect_13);
      return t1 == null ? null : t1.highContrast;
    },
    MediaQuery_boldTextOf(context) {
      var t1 = A.MediaQuery_maybeBoldTextOf(context);
      return t1 == null ? false : t1;
    },
    MediaQuery_maybeBoldTextOf(context) {
      var t1 = E.MediaQuery__maybeOf(context, D._MediaQueryAspect_16);
      return t1 == null ? null : t1.boldText;
    },
    MediaQuery_maybeNavigationModeOf(context) {
      var t1 = E.MediaQuery__maybeOf(context, D._MediaQueryAspect_17);
      return t1 == null ? null : t1.navigationMode;
    },
    MediaQuery_maybeGestureSettingsOf(context) {
      var t1 = E.MediaQuery__maybeOf(context, D._MediaQueryAspect_18);
      return t1 == null ? null : t1.gestureSettings;
    },
    View_maybeOf(context) {
      var t1 = A.LookupBoundary_dependOnInheritedWidgetOfExactType(context, type$._ViewScope);
      return t1 == null ? null : t1.view;
    },
    View_of(context) {
      var result = A.View_maybeOf(context);
      result.toString;
      return result;
    },
    Contrast_ratioOfTones(toneA, toneB) {
      toneA = A.MathUtils_clampDouble(0, 100, toneA);
      toneB = A.MathUtils_clampDouble(0, 100, toneB);
      return A.Contrast__ratioOfYs(A.ColorUtils_yFromLstar(toneA), A.ColorUtils_yFromLstar(toneB));
    },
    Contrast__ratioOfYs(y1, y2) {
      var lighter = y1 > y2 ? y1 : y2,
        darker = lighter === y2 ? y1 : y2;
      return (lighter + 5) / (darker + 5);
    },
    Contrast_lighter(ratio, tone) {
      var darkY, lightY, realContrast, t1, $returnValue;
      if (tone < 0 || tone > 100)
        return -1;
      darkY = A.ColorUtils_yFromLstar(tone);
      lightY = ratio * (darkY + 5) - 5;
      realContrast = A.Contrast__ratioOfYs(lightY, darkY);
      if (realContrast < ratio && Math.abs(realContrast - ratio) > 0.04)
        return -1;
      t1 = A.ColorUtils_lstarFromY(lightY);
      if (typeof t1 !== "number")
        return t1.$add();
      $returnValue = t1 + 0.4;
      if ($returnValue < 0 || $returnValue > 100)
        return -1;
      return $returnValue;
    },
    Contrast_darker(ratio, tone) {
      var lightY, darkY, realContrast, t1, $returnValue;
      if (tone < 0 || tone > 100)
        return -1;
      lightY = A.ColorUtils_yFromLstar(tone);
      darkY = (lightY + 5) / ratio - 5;
      realContrast = A.Contrast__ratioOfYs(lightY, darkY);
      if (realContrast < ratio && Math.abs(realContrast - ratio) > 0.04)
        return -1;
      t1 = A.ColorUtils_lstarFromY(darkY);
      if (typeof t1 !== "number")
        return t1.$sub();
      $returnValue = t1 - 0.4;
      if ($returnValue < 0 || $returnValue > 100)
        return -1;
      return $returnValue;
    },
    Contrast_lighterUnsafe(ratio, tone) {
      var lighterSafe = A.Contrast_lighter(ratio, tone);
      return lighterSafe < 0 ? 100 : lighterSafe;
    },
    Contrast_darkerUnsafe(ratio, tone) {
      var darkerSafe = A.Contrast_darker(ratio, tone);
      return darkerSafe < 0 ? 0 : darkerSafe;
    },
    DislikeAnalyzer_isDisliked(hct) {
      var huePasses, t2, tonePasses,
        t1 = J.round$0$n(hct.get$hue());
      if (typeof t1 !== "number")
        return t1.$ge();
      if (t1 >= 90) {
        t1 = J.round$0$n(hct.get$hue());
        if (typeof t1 !== "number")
          return t1.$le();
        huePasses = t1 <= 111;
      } else
        huePasses = false;
      t1 = J.round$0$n(hct.get$chroma());
      if (typeof t1 !== "number")
        return t1.$gt();
      t2 = J.round$0$n(hct.get$tone());
      if (typeof t2 !== "number")
        return t2.$lt();
      tonePasses = t2 < 65;
      return huePasses && t1 > 16 && tonePasses;
    },
    DislikeAnalyzer_fixIfDisliked(hct) {
      if (B.boolConversionCheck(A.DislikeAnalyzer_isDisliked(hct)))
        return A.Hct_from(hct.get$hue(), hct.get$chroma(), 70);
      return hct;
    },
    HctSolver__sanitizeRadians(angle) {
      return F.JSNumber_methods.$mod(angle + 25.132741228718345, 6.283185307179586);
    },
    HctSolver__trueDelinearized(rgbComponent) {
      var delinearized, t1,
        normalized = rgbComponent / 100;
      if (normalized <= 0.0031308)
        delinearized = normalized * 12.92;
      else {
        t1 = J.toDouble$0$n(E.pow(normalized, 0.4166666666666667));
        if (typeof t1 !== "number")
          return B.iae(t1);
        delinearized = 1.055 * t1 - 0.055;
      }
      return delinearized * 255;
    },
    HctSolver__chromaticAdaptation(component) {
      var af = J.toDouble$0$n(E.pow(Math.abs(component), 0.42)),
        t1 = A.MathUtils_signum(component);
      if (typeof t1 !== "number")
        return t1.$mul();
      return t1 * 400 * af / (af + 27.13);
    },
    HctSolver__hueOf(linrgb) {
      var scaledDiscount = A.MathUtils_matrixMultiply(linrgb, $.HctSolver__scaledDiscountFromLinrgb),
        t1 = J.getInterceptor$asx(scaledDiscount),
        rA = A.HctSolver__chromaticAdaptation(t1.$index(scaledDiscount, 0)),
        gA = A.HctSolver__chromaticAdaptation(t1.$index(scaledDiscount, 1)),
        bA = A.HctSolver__chromaticAdaptation(t1.$index(scaledDiscount, 2));
      return E.atan2((rA + gA - 2 * bA) / 9, (11 * rA + -12 * gA + bA) / 11);
    },
    HctSolver__areInCyclicOrder(a, b, c) {
      return A.HctSolver__sanitizeRadians(b - a) < A.HctSolver__sanitizeRadians(c - a);
    },
    HctSolver__intercept(source, mid, target) {
      return (mid - source) / (target - source);
    },
    HctSolver__lerpPoint(source, t, target) {
      var t6, t7, t8, t9,
        t1 = J.getInterceptor$asx(source),
        t2 = t1.$index(source, 0),
        t3 = J.getInterceptor$asx(target),
        t4 = t3.$index(target, 0),
        t5 = t1.$index(source, 0);
      if (typeof t4 !== "number")
        return t4.$sub();
      if (typeof t5 !== "number")
        return B.iae(t5);
      if (typeof t2 !== "number")
        return t2.$add();
      t6 = t1.$index(source, 1);
      t7 = t3.$index(target, 1);
      t8 = t1.$index(source, 1);
      if (typeof t7 !== "number")
        return t7.$sub();
      if (typeof t8 !== "number")
        return B.iae(t8);
      if (typeof t6 !== "number")
        return t6.$add();
      t9 = t1.$index(source, 2);
      t3 = t3.$index(target, 2);
      t1 = t1.$index(source, 2);
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (typeof t9 !== "number")
        return t9.$add();
      return B._setArrayType([t2 + (t4 - t5) * t, t6 + (t7 - t8) * t, t9 + (t3 - t1) * t], type$.JSArray_double);
    },
    HctSolver__setCoordinate(source, coordinate, target, axis) {
      return A.HctSolver__lerpPoint(source, A.HctSolver__intercept(J.$index$asx(source, axis), coordinate, J.$index$asx(target, axis)), target);
    },
    HctSolver__isBounded(x) {
      return 0 <= x && x <= 100;
    },
    HctSolver__nthVertex(y, n) {
      var r, g, b,
        t1 = J.getInterceptor$asx($.HctSolver__yFromLinrgb),
        kR = t1.$index($.HctSolver__yFromLinrgb, 0),
        kG = t1.$index($.HctSolver__yFromLinrgb, 1),
        kB = t1.$index($.HctSolver__yFromLinrgb, 2),
        coordA = F.JSInt_methods.$mod(n, 4) <= 1 ? 0 : 100,
        coordB = F.JSInt_methods.$mod(n, 2) === 0 ? 0 : 100;
      if (n < 4) {
        r = (y - coordA * kG - coordB * kB) / kR;
        t1 = type$.JSArray_double;
        if (B.boolConversionCheck(A.HctSolver__isBounded(r)))
          return B._setArrayType([r, coordA, coordB], t1);
        else
          return B._setArrayType([-1, -1, -1], t1);
      } else if (n < 8) {
        g = (y - coordB * kR - coordA * kB) / kG;
        t1 = type$.JSArray_double;
        if (B.boolConversionCheck(A.HctSolver__isBounded(g)))
          return B._setArrayType([coordB, g, coordA], t1);
        else
          return B._setArrayType([-1, -1, -1], t1);
      } else {
        b = (y - coordA * kR - coordB * kG) / kB;
        t1 = type$.JSArray_double;
        if (B.boolConversionCheck(A.HctSolver__isBounded(b)))
          return B._setArrayType([coordA, coordB, b], t1);
        else
          return B._setArrayType([-1, -1, -1], t1);
      }
    },
    HctSolver__bisectToSegment(y, targetHue) {
      var right, leftHue, rightHue, initialized, uncut, n, mid, t1, midHue,
        left = B._setArrayType([-1, -1, -1], type$.JSArray_double);
      for (right = left, leftHue = 0, rightHue = 0, initialized = false, uncut = true, n = 0; n < 12; ++n) {
        mid = A.HctSolver__nthVertex(y, n);
        t1 = J.$index$asx(mid, 0);
        if (typeof t1 !== "number")
          return t1.$lt();
        if (t1 < 0)
          continue;
        midHue = A.HctSolver__hueOf(mid);
        if (!initialized) {
          rightHue = midHue;
          leftHue = rightHue;
          right = mid;
          left = right;
          initialized = true;
          continue;
        }
        if (uncut || B.boolConversionCheck(A.HctSolver__areInCyclicOrder(leftHue, midHue, rightHue))) {
          if (B.boolConversionCheck(A.HctSolver__areInCyclicOrder(leftHue, targetHue, midHue))) {
            rightHue = midHue;
            right = mid;
          } else {
            leftHue = midHue;
            left = mid;
          }
          uncut = false;
        }
      }
      return B._setArrayType([left, right], type$.JSArray_List_double);
    },
    HctSolver__midpoint(a, b) {
      var t5, t6,
        t1 = J.getInterceptor$asx(a),
        t2 = t1.$index(a, 0),
        t3 = J.getInterceptor$asx(b),
        t4 = t3.$index(b, 0);
      if (typeof t2 !== "number")
        return t2.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t5 = t1.$index(a, 1);
      t6 = t3.$index(b, 1);
      if (typeof t5 !== "number")
        return t5.$add();
      if (typeof t6 !== "number")
        return B.iae(t6);
      t1 = t1.$index(a, 2);
      t3 = t3.$index(b, 2);
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t3 !== "number")
        return B.iae(t3);
      return B._setArrayType([(t2 + t4) / 2, (t5 + t6) / 2, (t1 + t3) / 2], type$.JSArray_double);
    },
    HctSolver__criticalPlaneBelow(x) {
      return F.JSNumber_methods.floor$0(x - 0.5);
    },
    HctSolver__criticalPlaneAbove(x) {
      return F.JSNumber_methods.ceil$0(x - 0.5);
    },
    HctSolver__bisectToLimit(y, targetHue) {
      var axis, t2, t3, t4, t5, lPlane, rPlane, i, mPlane, mid, midHue,
        segment = A.HctSolver__bisectToSegment(y, targetHue),
        t1 = J.getInterceptor$asx(segment),
        left = t1.$index(segment, 0),
        leftHue = A.HctSolver__hueOf(left),
        right = t1.$index(segment, 1);
      for (t1 = J.getInterceptor$asx($.HctSolver__criticalPlanes), axis = 0; axis < 3; ++axis) {
        t2 = J.getInterceptor$asx(left);
        t3 = J.getInterceptor$asx(right);
        if (!B.boolConversionCheck(J.$eq$(t2.$index(left, axis), t3.$index(right, axis)))) {
          t4 = t2.$index(left, axis);
          t5 = t3.$index(right, axis);
          if (typeof t4 !== "number")
            return t4.$lt();
          if (typeof t5 !== "number")
            return B.iae(t5);
          if (t4 < t5) {
            lPlane = A.HctSolver__criticalPlaneBelow(A.HctSolver__trueDelinearized(t2.$index(left, axis)));
            rPlane = A.HctSolver__criticalPlaneAbove(A.HctSolver__trueDelinearized(t3.$index(right, axis)));
          } else {
            lPlane = A.HctSolver__criticalPlaneAbove(A.HctSolver__trueDelinearized(t2.$index(left, axis)));
            rPlane = A.HctSolver__criticalPlaneBelow(A.HctSolver__trueDelinearized(t3.$index(right, axis)));
          }
          for (i = 0; i < 8; ++i)
            if (Math.abs(rPlane - lPlane) <= 1)
              break;
            else {
              mPlane = F.JSNumber_methods.floor$0((lPlane + rPlane) / 2);
              mid = A.HctSolver__setCoordinate(left, t1.$index($.HctSolver__criticalPlanes, mPlane), right, axis);
              midHue = A.HctSolver__hueOf(mid);
              if (B.boolConversionCheck(A.HctSolver__areInCyclicOrder(leftHue, targetHue, midHue))) {
                rPlane = mPlane;
                right = mid;
              } else {
                lPlane = mPlane;
                leftHue = midHue;
                left = mid;
              }
            }
        }
      }
      return A.HctSolver__midpoint(left, right);
    },
    HctSolver__inverseChromaticAdaptation(adapted) {
      var adaptedAbs = Math.abs(adapted),
        base = E.max(0, 27.13 * adaptedAbs / (400 - adaptedAbs), type$.num),
        t1 = A.MathUtils_signum(adapted),
        t2 = J.toDouble$0$n(E.pow(base, 2.380952380952381));
      if (typeof t1 !== "number")
        return t1.$mul();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 * t2;
    },
    HctSolver__findResultByJ(hueRadians, chroma, y) {
      var j, viewingConditions, tInnerCoeff, t2, t3, hSin, hCos, t4, t5, t6, t7, t8, iterationRound, jNormalized, alpha, t9, t, p2, gamma, a, b, linrgb, t10, t11, kR, kG, kB, t12, fnj,
        t1 = E.sqrt(y);
      if (typeof t1 !== "number")
        return t1.$mul();
      j = t1 * 11;
      viewingConditions = $.$get$ViewingConditions_standard();
      t1 = J.toDouble$0$n(E.pow(0.29, viewingConditions.backgroundYTowhitePointY));
      if (typeof t1 !== "number")
        return B.iae(t1);
      t1 = J.toDouble$0$n(E.pow(1.64 - t1, 0.73));
      if (typeof t1 !== "number")
        return B.iae(t1);
      tInnerCoeff = 1 / t1;
      t1 = A.cos(hueRadians + 2);
      if (typeof t1 !== "number")
        return t1.$add();
      t2 = viewingConditions.nC;
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = viewingConditions.ncb;
      if (typeof t3 !== "number")
        return B.iae(t3);
      hSin = A.sin(hueRadians);
      hCos = A.cos(hueRadians);
      for (t4 = J.getInterceptor$asx($.HctSolver__yFromLinrgb), t5 = viewingConditions.aw, t6 = viewingConditions.c, t7 = viewingConditions.z, t8 = viewingConditions.nbb, t3 = 23 * (0.25 * (t1 + 3.8) * 3846.153846153846 * t2 * t3), t2 = type$.JSArray_double, t1 = chroma !== 0, iterationRound = 0; iterationRound < 5; ++iterationRound) {
        jNormalized = j / 100;
        if (!t1 || j === 0)
          alpha = 0;
        else {
          t9 = E.sqrt(jNormalized);
          if (typeof t9 !== "number")
            return B.iae(t9);
          alpha = chroma / t9;
        }
        t = J.toDouble$0$n(E.pow(alpha * tInnerCoeff, 1.1111111111111112));
        if (typeof t6 !== "number")
          return B.iae(t6);
        if (typeof t7 !== "number")
          return B.iae(t7);
        t9 = J.toDouble$0$n(E.pow(jNormalized, 1 / t6 / t7));
        if (typeof t5 !== "number")
          return t5.$mul();
        if (typeof t9 !== "number")
          return B.iae(t9);
        if (typeof t8 !== "number")
          return B.iae(t8);
        p2 = t5 * t9 / t8;
        gamma = 23 * (p2 + 0.305) * t / (t3 + 11 * t * hCos + 108 * t * hSin);
        a = gamma * hCos;
        b = gamma * hSin;
        t9 = 460 * p2;
        linrgb = A.MathUtils_matrixMultiply(B._setArrayType([A.HctSolver__inverseChromaticAdaptation((t9 + 451 * a + 288 * b) / 1403), A.HctSolver__inverseChromaticAdaptation((t9 - 891 * a - 261 * b) / 1403), A.HctSolver__inverseChromaticAdaptation((t9 - 220 * a - 6300 * b) / 1403)], t2), $.HctSolver__linrgbFromScaledDiscount);
        t9 = J.getInterceptor$asx(linrgb);
        t10 = t9.$index(linrgb, 0);
        if (typeof t10 !== "number")
          return t10.$lt();
        t11 = true;
        if (!(t10 < 0)) {
          t10 = t9.$index(linrgb, 1);
          if (typeof t10 !== "number")
            return t10.$lt();
          if (!(t10 < 0)) {
            t10 = t9.$index(linrgb, 2);
            if (typeof t10 !== "number")
              return t10.$lt();
            t10 = t10 < 0;
          } else
            t10 = t11;
        } else
          t10 = t11;
        if (t10)
          return 0;
        kR = t4.$index($.HctSolver__yFromLinrgb, 0);
        kG = t4.$index($.HctSolver__yFromLinrgb, 1);
        kB = t4.$index($.HctSolver__yFromLinrgb, 2);
        t10 = t9.$index(linrgb, 0);
        if (typeof t10 !== "number")
          return B.iae(t10);
        t11 = t9.$index(linrgb, 1);
        if (typeof t11 !== "number")
          return B.iae(t11);
        t12 = t9.$index(linrgb, 2);
        if (typeof t12 !== "number")
          return B.iae(t12);
        fnj = kR * t10 + kG * t11 + kB * t12;
        if (fnj <= 0)
          return 0;
        if (iterationRound === 4 || Math.abs(fnj - y) < 0.002) {
          t1 = t9.$index(linrgb, 0);
          if (typeof t1 !== "number")
            return t1.$gt();
          t2 = true;
          if (!(t1 > 100.01)) {
            t1 = t9.$index(linrgb, 1);
            if (typeof t1 !== "number")
              return t1.$gt();
            if (!(t1 > 100.01)) {
              t1 = t9.$index(linrgb, 2);
              if (typeof t1 !== "number")
                return t1.$gt();
              t1 = t1 > 100.01;
            } else
              t1 = t2;
          } else
            t1 = t2;
          if (t1)
            return 0;
          return A.ColorUtils_argbFromLinrgb(linrgb);
        }
        j -= (fnj - y) * j / (2 * fnj);
      }
      return 0;
    },
    HctSolver_solveToInt(hueDegrees, chroma, lstar) {
      var hueRadians, y, exactAnswer;
      if (chroma < 0.0001 || lstar < 0.0001 || lstar > 99.9999)
        return A.ColorUtils_argbFromLstar(lstar);
      hueRadians = A.MathUtils_sanitizeDegreesDouble(hueDegrees) / 180 * 3.141592653589793;
      y = A.ColorUtils_yFromLstar(lstar);
      exactAnswer = A.HctSolver__findResultByJ(hueRadians, chroma, y);
      if (exactAnswer !== 0)
        return exactAnswer;
      return A.ColorUtils_argbFromLinrgb(A.HctSolver__bisectToLimit(y, hueRadians));
    },
    ColorUtils_argbFromRgb(red, green, blue) {
      return ((red & 255) << 16 | (green & 255) << 8 | blue & 255 | 4278190080) >>> 0;
    },
    ColorUtils_argbFromLinrgb(linrgb) {
      var t1 = J.getInterceptor$asx(linrgb);
      return A.ColorUtils_argbFromRgb(A.ColorUtils_delinearized(t1.$index(linrgb, 0)), A.ColorUtils_delinearized(t1.$index(linrgb, 1)), A.ColorUtils_delinearized(t1.$index(linrgb, 2)));
    },
    ColorUtils_redFromArgb(argb) {
      return F.JSInt_methods._shrOtherPositive$1(argb, 16) & 255;
    },
    ColorUtils_greenFromArgb(argb) {
      return F.JSInt_methods._shrOtherPositive$1(argb, 8) & 255;
    },
    ColorUtils_blueFromArgb(argb) {
      return argb & 255;
    },
    ColorUtils_xyzFromArgb(argb) {
      return A.MathUtils_matrixMultiply(B._setArrayType([A.ColorUtils_linearized(A.ColorUtils_redFromArgb(argb)), A.ColorUtils_linearized(A.ColorUtils_greenFromArgb(argb)), A.ColorUtils_linearized(A.ColorUtils_blueFromArgb(argb))], type$.JSArray_double), $.ColorUtils__srgbToXyz);
    },
    ColorUtils_labFromArgb(argb) {
      var t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, fx, fy,
        linearR = A.ColorUtils_linearized(A.ColorUtils_redFromArgb(argb)),
        linearG = A.ColorUtils_linearized(A.ColorUtils_greenFromArgb(argb)),
        linearB = A.ColorUtils_linearized(A.ColorUtils_blueFromArgb(argb)),
        t1 = J.getInterceptor$asx($.ColorUtils__srgbToXyz),
        t2 = J.$index$asx(t1.$index($.ColorUtils__srgbToXyz, 0), 0);
      if (typeof t2 !== "number")
        return t2.$mul();
      t3 = J.$index$asx(t1.$index($.ColorUtils__srgbToXyz, 0), 1);
      if (typeof t3 !== "number")
        return t3.$mul();
      t4 = J.$index$asx(t1.$index($.ColorUtils__srgbToXyz, 0), 2);
      if (typeof t4 !== "number")
        return t4.$mul();
      t5 = J.$index$asx(t1.$index($.ColorUtils__srgbToXyz, 1), 0);
      if (typeof t5 !== "number")
        return t5.$mul();
      t6 = J.$index$asx(t1.$index($.ColorUtils__srgbToXyz, 1), 1);
      if (typeof t6 !== "number")
        return t6.$mul();
      t7 = J.$index$asx(t1.$index($.ColorUtils__srgbToXyz, 1), 2);
      if (typeof t7 !== "number")
        return t7.$mul();
      t8 = J.$index$asx(t1.$index($.ColorUtils__srgbToXyz, 2), 0);
      if (typeof t8 !== "number")
        return t8.$mul();
      t9 = J.$index$asx(t1.$index($.ColorUtils__srgbToXyz, 2), 1);
      if (typeof t9 !== "number")
        return t9.$mul();
      t1 = J.$index$asx(t1.$index($.ColorUtils__srgbToXyz, 2), 2);
      if (typeof t1 !== "number")
        return t1.$mul();
      t10 = J.getInterceptor$asx($.ColorUtils__whitePointD65);
      t11 = t10.$index($.ColorUtils__whitePointD65, 0);
      if (typeof t11 !== "number")
        return B.iae(t11);
      t12 = t10.$index($.ColorUtils__whitePointD65, 1);
      if (typeof t12 !== "number")
        return B.iae(t12);
      t10 = t10.$index($.ColorUtils__whitePointD65, 2);
      if (typeof t10 !== "number")
        return B.iae(t10);
      fx = A.ColorUtils__labF((t2 * linearR + t3 * linearG + t4 * linearB) / t11);
      fy = A.ColorUtils__labF((t5 * linearR + t6 * linearG + t7 * linearB) / t12);
      return B._setArrayType([116 * fy - 16, 500 * (fx - fy), 200 * (fy - A.ColorUtils__labF((t8 * linearR + t9 * linearG + t1 * linearB) / t10))], type$.JSArray_double);
    },
    ColorUtils_argbFromLstar(lstar) {
      var component = A.ColorUtils_delinearized(A.ColorUtils_yFromLstar(lstar));
      return A.ColorUtils_argbFromRgb(component, component, component);
    },
    ColorUtils_lstarFromArgb(argb) {
      var t1 = A.ColorUtils__labF(J.$index$asx(A.ColorUtils_xyzFromArgb(argb), 1) / 100);
      if (typeof t1 !== "number")
        return B.iae(t1);
      return 116 * t1 - 16;
    },
    ColorUtils_yFromLstar(lstar) {
      var t1 = A.ColorUtils__labInvf((lstar + 16) / 116);
      if (typeof t1 !== "number")
        return B.iae(t1);
      return 100 * t1;
    },
    ColorUtils_lstarFromY(y) {
      var t1 = A.ColorUtils__labF(y / 100);
      if (typeof t1 !== "number")
        return t1.$mul();
      return t1 * 116 - 16;
    },
    ColorUtils_linearized(rgbComponent) {
      var t1,
        normalized = rgbComponent / 255;
      if (normalized <= 0.040449936)
        return normalized / 12.92 * 100;
      else {
        t1 = J.toDouble$0$n(E.pow((normalized + 0.055) / 1.055, 2.4));
        if (typeof t1 !== "number")
          return t1.$mul();
        return t1 * 100;
      }
    },
    ColorUtils_delinearized(rgbComponent) {
      var delinearized, t1,
        normalized = rgbComponent / 100;
      if (normalized <= 0.0031308)
        delinearized = normalized * 12.92;
      else {
        t1 = J.toDouble$0$n(E.pow(normalized, 0.4166666666666667));
        if (typeof t1 !== "number")
          return B.iae(t1);
        delinearized = 1.055 * t1 - 0.055;
      }
      return A.MathUtils_clampInt(0, 255, F.JSNumber_methods.round$0(delinearized * 255));
    },
    ColorUtils_whitePointD65() {
      return $.ColorUtils__whitePointD65;
    },
    ColorUtils__labF(t) {
      if (t > 0.008856451679035631)
        return J.toDouble$0$n(E.pow(t, 0.3333333333333333));
      else
        return (903.2962962962963 * t + 16) / 116;
    },
    ColorUtils__labInvf(ft) {
      var ft3 = ft * ft * ft;
      if (ft3 > 0.008856451679035631)
        return ft3;
      else
        return (116 * ft - 16) / 903.2962962962963;
    },
    MathUtils_signum(num) {
      if (num < 0)
        return -1;
      else if (num === 0)
        return 0;
      else
        return 1;
    },
    MathUtils_lerp(start, $stop, amount) {
      return (1 - amount) * start + amount * $stop;
    },
    MathUtils_clampInt(min, max, input) {
      if (input < min)
        return min;
      else if (input > max)
        return max;
      return input;
    },
    MathUtils_clampDouble(min, max, input) {
      if (input < min)
        return min;
      else if (input > max)
        return max;
      return input;
    },
    MathUtils_sanitizeDegreesInt(degrees) {
      degrees = F.JSInt_methods.$mod(degrees, 360);
      return degrees;
    },
    MathUtils_sanitizeDegreesDouble(degrees) {
      degrees = F.JSNumber_methods.$mod(degrees, 360);
      return degrees < 0 ? degrees + 360 : degrees;
    },
    MathUtils_matrixMultiply(row, matrix) {
      var t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18,
        t1 = J.getInterceptor$asx(row),
        t2 = t1.$index(row, 0),
        t3 = J.getInterceptor$asx(matrix),
        t4 = J.$index$asx(t3.$index(matrix, 0), 0);
      if (typeof t2 !== "number")
        return t2.$mul();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t5 = t1.$index(row, 1);
      t6 = J.$index$asx(t3.$index(matrix, 0), 1);
      if (typeof t5 !== "number")
        return t5.$mul();
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = t1.$index(row, 2);
      t8 = J.$index$asx(t3.$index(matrix, 0), 2);
      if (typeof t7 !== "number")
        return t7.$mul();
      if (typeof t8 !== "number")
        return B.iae(t8);
      t9 = t1.$index(row, 0);
      t10 = J.$index$asx(t3.$index(matrix, 1), 0);
      if (typeof t9 !== "number")
        return t9.$mul();
      if (typeof t10 !== "number")
        return B.iae(t10);
      t11 = t1.$index(row, 1);
      t12 = J.$index$asx(t3.$index(matrix, 1), 1);
      if (typeof t11 !== "number")
        return t11.$mul();
      if (typeof t12 !== "number")
        return B.iae(t12);
      t13 = t1.$index(row, 2);
      t14 = J.$index$asx(t3.$index(matrix, 1), 2);
      if (typeof t13 !== "number")
        return t13.$mul();
      if (typeof t14 !== "number")
        return B.iae(t14);
      t15 = t1.$index(row, 0);
      t16 = J.$index$asx(t3.$index(matrix, 2), 0);
      if (typeof t15 !== "number")
        return t15.$mul();
      if (typeof t16 !== "number")
        return B.iae(t16);
      t17 = t1.$index(row, 1);
      t18 = J.$index$asx(t3.$index(matrix, 2), 1);
      if (typeof t17 !== "number")
        return t17.$mul();
      if (typeof t18 !== "number")
        return B.iae(t18);
      t1 = t1.$index(row, 2);
      t3 = J.$index$asx(t3.$index(matrix, 2), 2);
      if (typeof t1 !== "number")
        return t1.$mul();
      if (typeof t3 !== "number")
        return B.iae(t3);
      return B._setArrayType([t2 * t4 + t5 * t6 + t7 * t8, t9 * t10 + t11 * t12 + t13 * t14, t15 * t16 + t17 * t18 + t1 * t3], type$.JSArray_double);
    }
  },
  C, E, D;
  J = hunkHelpers.updateHolder(holdersList[1], J);
  B = holdersList[0];
  F = holdersList[2];
  A = hunkHelpers.updateHolder(holdersList[4], A);
  C = holdersList[8];
  E = holdersList[5];
  D = holdersList[6];
  A._InitializedCell.prototype = {
    _InitializedCell$named$2(_name, _initializer) {
      this._value = this;
    },
    readFinal$1$0($T) {
      return this._readFinal$0();
    },
    _readFinal$0() {
      var result, _this = this,
        t1 = _this._value;
      if (t1 === _this) {
        result = _this._initializer.call$0();
        if (_this._value !== _this)
          throw B.wrapException(A.LateError$localADI(_this.__late_helper$_name));
        _this._value = result;
        t1 = result;
      }
      return t1;
    }
  };
  A._WeakReferenceWrapper.prototype = {
    get$target() {
      return this._weakRef.deref();
    },
    $isWeakReference: 1
  };
  A._JSRandom.prototype = {
    nextInt$1(max) {
      B._asInt(max);
      if (max <= 0 || max > 4294967296)
        throw B.wrapException(A.RangeError$(string$.max_mu + max));
      return Math.random() * max >>> 0;
    },
    $isRandom: 1
  };
  A._Random.prototype = {
    _Random$1(seed) {
      var low, high, tmplow, low0, t1, t2, t3, _this = this, _4294967296 = 4294967296,
        empty_seed = seed < 0 ? -1 : 0;
      do {
        low = seed >>> 0;
        seed = F.JSInt_methods._tdivFast$1(seed - low, _4294967296);
        high = seed >>> 0;
        seed = F.JSInt_methods._tdivFast$1(seed - high, _4294967296);
        tmplow = (~low >>> 0) + (low << 21 >>> 0);
        low0 = tmplow >>> 0;
        high = (~high >>> 0) + ((high << 21 | low >>> 11) >>> 0) + F.JSInt_methods._tdivFast$1(tmplow - low0, _4294967296) >>> 0;
        tmplow = ((low0 ^ (low0 >>> 24 | high << 8)) >>> 0) * 265;
        low = tmplow >>> 0;
        high = ((high ^ high >>> 24) >>> 0) * 265 + F.JSInt_methods._tdivFast$1(tmplow - low, _4294967296) >>> 0;
        tmplow = ((low ^ (low >>> 14 | high << 18)) >>> 0) * 21;
        low = tmplow >>> 0;
        high = ((high ^ high >>> 14) >>> 0) * 21 + F.JSInt_methods._tdivFast$1(tmplow - low, _4294967296) >>> 0;
        low = (low ^ (low >>> 28 | high << 4)) >>> 0;
        high = (high ^ high >>> 28) >>> 0;
        tmplow = (low << 31 >>> 0) + low;
        low0 = tmplow >>> 0;
        t1 = F.JSInt_methods._tdivFast$1(tmplow - low0, _4294967296);
        t2 = _this._lo;
        if (typeof t2 !== "number")
          return t2.$mul();
        tmplow = t2 * 1037;
        t2 = _this._lo = tmplow >>> 0;
        t3 = _this._hi;
        if (typeof t3 !== "number")
          return t3.$mul();
        t3 = t3 * 1037 + F.JSInt_methods._tdivFast$1(tmplow - t2, _4294967296) >>> 0;
        _this._hi = t3;
        _this._lo = (t2 ^ low0) >>> 0;
        t1 = (t3 ^ high + ((high << 31 | low >>> 1) >>> 0) + t1 >>> 0) >>> 0;
        _this._hi = t1;
      } while (seed !== empty_seed);
      if (t1 === 0 && B.boolConversionCheck(J.$eq$(_this._lo, 0)))
        _this._lo = 23063;
      _this._nextState$0();
      _this._nextState$0();
      _this._nextState$0();
      _this._nextState$0();
    },
    _nextState$0() {
      var tmpHi, tmpHiLo, tmpLo, tmpLoLo, newLo, _this = this,
        t1 = _this._lo;
      if (typeof t1 !== "number")
        return B.iae(t1);
      tmpHi = 4294901760 * t1;
      tmpHiLo = tmpHi >>> 0;
      tmpLo = 55905 * t1;
      tmpLoLo = tmpLo >>> 0;
      t1 = _this._hi;
      if (typeof t1 !== "number")
        return B.iae(t1);
      newLo = tmpLoLo + tmpHiLo + t1;
      t1 = newLo >>> 0;
      _this._lo = t1;
      _this._hi = F.JSInt_methods._tdivFast$1(tmpLo - tmpLoLo + (tmpHi - tmpHiLo) + (newLo - t1), 4294967296) >>> 0;
    },
    nextInt$1(max) {
      var t1, t2, rnd32, result, _this = this;
      B._asInt(max);
      if (max <= 0 || max > 4294967296)
        throw B.wrapException(A.RangeError$(string$.max_mu + max));
      t1 = max - 1;
      if ((max & t1) >>> 0 === 0) {
        _this._nextState$0();
        t2 = _this._lo;
        if (typeof t2 !== "number")
          return t2.$and();
        return (t2 & t1) >>> 0;
      }
      do {
        _this._nextState$0();
        rnd32 = _this._lo;
        result = rnd32 % max;
      } while (rnd32 - result + max >= 4294967296);
      return result;
    },
    $isRandom: 1
  };
  A.Shadow.prototype = {
    scale$1(factor) {
      var t1, t2;
      B._asDouble(factor);
      t1 = J.$mul$ns(this.offset, factor);
      t2 = this.blurRadius;
      if (typeof t2 !== "number")
        return t2.$mul();
      return A.Shadow$(t2 * factor, this.color, t1);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      return other instanceof A.Shadow && B.boolConversionCheck(J.$eq$(other.color, _this.color)) && B.boolConversionCheck(J.$eq$(other.offset, _this.offset)) && B.boolConversionCheck(J.$eq$(other.blurRadius, _this.blurRadius));
    },
    get$hashCode(_) {
      return B.Object_hash(this.color, this.offset, this.blurRadius, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    toString$0(_) {
      return "TextShadow(" + B.S(this.color) + ", " + B.S(this.offset) + ", " + B.S(this.blurRadius) + ")";
    }
  };
  A.StringAttribute.prototype = {};
  A.SpellOutStringAttribute.prototype = {
    copy$1$range(range) {
      return A.SpellOutStringAttribute$(type$.TextRange._as(range));
    },
    toString$0(_) {
      return "SpellOutStringAttribute(" + B.S(this.range) + ")";
    }
  };
  A.LocaleStringAttribute.prototype = {
    copy$1$range(range) {
      return A.LocaleStringAttribute$(this.locale, type$.TextRange._as(range));
    },
    toString$0(_) {
      return "LocaleStringAttribute(" + B.S(this.range) + ", " + B.S(this.locale.toLanguageTag$0()) + ")";
    }
  };
  A.FontWeight.prototype = {
    toString$0(_) {
      var t1 = C.Map_0SNI.$index(0, this.index);
      t1.toString;
      return t1;
    }
  };
  A.FontVariation.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.FontVariation && B.boolConversionCheck(J.$eq$(other.axis, this.axis)) && B.boolConversionCheck(J.$eq$(other.value, this.value));
    },
    get$hashCode(_) {
      return B.Object_hash(this.axis, this.value, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    toString$0(_) {
      return "FontVariation('" + B.S(this.axis) + "', " + B.S(this.value) + ")";
    }
  };
  A.TextHeightBehavior.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      t1 = false;
      if (other instanceof A.TextHeightBehavior)
        t1 = B.boolConversionCheck(J.$eq$(other.leadingDistribution, this.leadingDistribution));
      return t1;
    },
    get$hashCode(_) {
      return B.Object_hash(true, true, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    toString$0(_) {
      return "TextHeightBehavior(applyHeightToFirstAscent: true, applyHeightToLastDescent: true, leadingDistribution: " + B.S(this.leadingDistribution) + ")";
    }
  };
  A.CallbackHandle.prototype = {
    toRawHandle$0() {
      return this._ui$_handle;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return this === other;
    },
    get$hashCode(_) {
      return B.Object.prototype.get$hashCode.call(this, 0);
    }
  };
  A.StringCharacterRange.prototype = {
    _move$2(start, end) {
      B._asInt(start);
      B._asInt(end);
      this._characters_impl$_start = start;
      this._characters_impl$_end = end;
      this._currentCache = null;
    },
    get$current() {
      var _this = this,
        t1 = _this._currentCache;
      if (t1 == null) {
        t1 = J.substring$2$s(_this._characters_impl$_string, _this._characters_impl$_start, _this._characters_impl$_end);
        _this.set$_currentCache(t1);
      }
      return t1;
    },
    moveNext$0() {
      return this._advanceEnd$2(1, this._characters_impl$_end);
    },
    _advanceEnd$2(count, newStart) {
      var index, t1, t2, state, t3, char, nextIndex, category, nextChar, _this = this;
      B._asInt(count);
      B._asInt(newStart);
      if (count > 0) {
        index = _this._characters_impl$_end;
        t1 = _this._characters_impl$_string;
        t2 = J.getInterceptor$asx(t1);
        state = 176;
        while (true) {
          t3 = t2.get$length(t1);
          if (typeof t3 !== "number")
            return B.iae(t3);
          if (!(index < t3))
            break;
          char = t2.codeUnitAt$1(t1, index);
          nextIndex = index + 1;
          if ((char & 64512) !== 55296)
            category = A.low(char);
          else {
            t3 = t2.get$length(t1);
            if (typeof t3 !== "number")
              return B.iae(t3);
            category = 2;
            if (nextIndex < t3) {
              nextChar = t2.codeUnitAt$1(t1, nextIndex);
              if ((nextChar & 64512) === 56320) {
                ++nextIndex;
                category = A.high(char, nextChar);
              }
            }
          }
          state = A.move(state, category);
          if ((state & 1) === 0) {
            --count;
            t3 = count === 0;
          } else
            t3 = false;
          if (t3) {
            _this._move$2(newStart, index);
            return true;
          }
          index = nextIndex;
        }
        _this._move$2(newStart, t2.get$length(t1));
        return count === 1 && state !== 176;
      } else if (count === 0) {
        _this._move$2(newStart, _this._characters_impl$_end);
        return true;
      } else
        throw B.wrapException(B.RangeError$range(count, 0, null, "count", null));
    },
    get$isNotEmpty(_) {
      return !B.boolConversionCheck(J.$eq$(this._characters_impl$_start, this._characters_impl$_end));
    },
    get$stringBeforeLength() {
      return this._characters_impl$_start;
    },
    set$_currentCache(_currentCache) {
      this._currentCache = B._asStringQ(_currentCache);
    },
    $isIterator: 1,
    $isCharacterRange: 1
  };
  A.Breaks.prototype = {
    nextBreak$0() {
      var t4, char, t5, category, nextChar, _this = this,
        t1 = _this.end,
        t2 = _this.base,
        t3 = J.getInterceptor$s(t2);
      while (true) {
        t4 = _this.cursor;
        if (typeof t4 !== "number")
          return t4.$lt();
        if (typeof t1 !== "number")
          return B.iae(t1);
        if (!(t4 < t1))
          break;
        c$0: {
          _this.cursor = t4 + 1;
          char = t3.codeUnitAt$1(t2, t4);
          if ((char & 64512) !== 55296) {
            _this.set$state(A.move(_this.state, A.low(char)));
            t5 = _this.state;
            if (typeof t5 !== "number")
              return t5.$and();
            if ((t5 & 1) === 0)
              return t4;
            break c$0;
          }
          t5 = _this.cursor;
          if (typeof t5 !== "number")
            return t5.$lt();
          category = 2;
          if (t5 < t1) {
            nextChar = t3.codeUnitAt$1(t2, t5);
            if ((nextChar & 64512) === 56320) {
              category = A.high(char, nextChar);
              t5 = _this.cursor;
              if (typeof t5 !== "number")
                return t5.$add();
              _this.set$cursor(t5 + 1);
            }
          }
          _this.set$state(A.move(_this.state, category));
          t5 = _this.state;
          if (typeof t5 !== "number")
            return t5.$and();
          if ((t5 & 1) === 0)
            return t4;
        }
      }
      _this.set$state(A.move(_this.state, 15));
      t1 = _this.state;
      if (typeof t1 !== "number")
        return t1.$and();
      if ((t1 & 1) === 0)
        return _this.cursor;
      return -1;
    },
    set$cursor(cursor) {
      this.cursor = B._asInt(cursor);
    },
    set$state(state) {
      this.state = B._asInt(state);
    }
  };
  A.BackBreaks.prototype = {
    nextBreak$0() {
      var t4, t5, char, category, prevChar, _this = this,
        t1 = _this.start,
        t2 = _this.base,
        t3 = J.getInterceptor$s(t2);
      while (true) {
        t4 = _this.cursor;
        if (typeof t4 !== "number")
          return t4.$gt();
        if (typeof t1 !== "number")
          return B.iae(t1);
        if (!(t4 > t1))
          break;
        c$0: {
          t5 = t4 - 1;
          _this.cursor = t5;
          char = t3.codeUnitAt$1(t2, t5);
          if ((char & 64512) !== 56320) {
            _this.set$state(A.moveBack(_this.state, A.low(char)));
            t5 = _this.state;
            if (typeof t5 !== "number")
              return t5.$ge();
            if (t5 >= 208)
              _this.set$state(_this._lookAhead$1(t5));
            t5 = _this.state;
            if (typeof t5 !== "number")
              return t5.$and();
            if ((t5 & 1) === 0)
              return t4;
            break c$0;
          }
          t5 = _this.cursor;
          if (typeof t5 !== "number")
            return t5.$ge();
          category = 2;
          if (t5 >= t1) {
            prevChar = t3.codeUnitAt$1(t2, t5 - 1);
            if ((prevChar & 64512) === 55296) {
              category = A.high(prevChar, char);
              t5 = _this.cursor;
              if (typeof t5 !== "number")
                return t5.$sub();
              _this.set$cursor(t5 - 1);
            }
          }
          _this.set$state(A.moveBack(_this.state, category));
          t5 = _this.state;
          if (typeof t5 !== "number")
            return t5.$ge();
          if (t5 >= 208)
            _this.set$state(_this._lookAhead$1(t5));
          t5 = _this.state;
          if (typeof t5 !== "number")
            return t5.$and();
          if ((t5 & 1) === 0)
            return t4;
        }
      }
      _this.set$state(A.moveBack(_this.state, 15));
      t1 = _this.state;
      if (typeof t1 !== "number")
        return t1.$ge();
      if (t1 >= 208)
        _this.set$state(_this._lookAhead$1(t1));
      t1 = _this.state;
      if (typeof t1 !== "number")
        return t1.$and();
      if ((t1 & 1) === 0)
        return _this.cursor;
      return -1;
    },
    _lookAhead$1(state) {
      B._asInt(state);
      return A.lookAhead(this.base, this.start, this.cursor, state);
    },
    set$cursor(cursor) {
      this.cursor = B._asInt(cursor);
    },
    set$state(state) {
      this.state = B._asInt(state);
    }
  };
  A.DefaultEquality.prototype = {
    equals$2(e1, e2) {
      return J.$eq$(e1, e2);
    },
    hash$1(e) {
      return J.get$hashCode$(e);
    },
    isValidKey$1(o) {
      return true;
    },
    $isEquality: 1
  };
  A._UnorderedEquality.prototype = {
    equals$2(elements1, elements2) {
      var counts, $length, e, count,
        t1 = B._instanceType(this),
        t2 = t1._eval$1("_UnorderedEquality.T?");
      t2._as(elements1);
      t2._as(elements2);
      if (elements1 == null ? elements2 == null : elements1 === elements2)
        return true;
      if (elements1 == null || elements2 == null)
        return false;
      t2 = this._elementEquality;
      counts = B.HashMap_HashMap(t1._eval$1("bool(_UnorderedEquality.E,_UnorderedEquality.E)")._as(t2.get$equals()), t1._eval$1("int(_UnorderedEquality.E)")._as(t2.get$hash()), t2.get$isValidKey(), t1._eval$1("_UnorderedEquality.E"), type$.int);
      for (t1 = J.get$iterator$ax(elements1), $length = 0; B.boolConversionCheck(t1.moveNext$0());) {
        e = t1.get$current();
        count = counts.$index(0, e);
        counts.$indexSet(0, e, (count == null ? 0 : count) + 1);
        ++$length;
      }
      for (t1 = J.get$iterator$ax(elements2); B.boolConversionCheck(t1.moveNext$0());) {
        e = t1.get$current();
        count = counts.$index(0, e);
        if (count == null || count === 0)
          return false;
        if (typeof count !== "number")
          return count.$sub();
        counts.$indexSet(0, e, count - 1);
        --$length;
      }
      return $length === 0;
    },
    hash$1(elements) {
      var t1, t2, hash;
      B._instanceType(this)._eval$1("_UnorderedEquality.T?")._as(elements);
      if (elements == null)
        return F.JSNull_methods.get$hashCode(null);
      for (t1 = J.get$iterator$ax(elements), t2 = this._elementEquality, hash = 0; B.boolConversionCheck(t1.moveNext$0());)
        hash = hash + t2.hash$1(t1.get$current()) & 2147483647;
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A.UnorderedIterableEquality.prototype = {
    isValidKey$1(o) {
      return this.$ti._eval$1("Iterable<1>")._is(o);
    }
  };
  A.SetEquality.prototype = {
    isValidKey$1(o) {
      return this.$ti._eval$1("Set<1>")._is(o);
    }
  };
  A._MapEntry.prototype = {
    get$hashCode(_) {
      var t1 = this.equality,
        t2 = t1._keyEquality.hash$1(this.key);
      if (typeof t2 !== "number")
        return B.iae(t2);
      t1 = t1._valueEquality.hash$1(this.value);
      if (typeof t1 !== "number")
        return B.iae(t1);
      return 3 * t2 + 7 * t1 & 2147483647;
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (other instanceof A._MapEntry) {
        t1 = this.equality;
        t1 = B.boolConversionCheck(t1._keyEquality.equals$2(this.key, other.key)) && B.boolConversionCheck(t1._valueEquality.equals$2(this.value, other.value));
      } else
        t1 = false;
      return t1;
    }
  };
  A.MapEquality.prototype = {
    equals$2(map1, map2) {
      var equalElementCounts, key, entry, count,
        t1 = this.$ti._eval$1("Map<1,2>?");
      t1._as(map1);
      t1._as(map2);
      if (map1 == map2)
        return true;
      if (map1 == null || map2 == null)
        return false;
      if (map1.get$length(map1) !== map2.get$length(map2))
        return false;
      equalElementCounts = B.HashMap_HashMap(null, null, null, type$._MapEntry, type$.int);
      for (t1 = J.get$iterator$ax(map1.get$keys()); B.boolConversionCheck(t1.moveNext$0());) {
        key = t1.get$current();
        entry = A._MapEntry$(this, key, map1.$index(0, key));
        count = equalElementCounts.$index(0, entry);
        equalElementCounts.$indexSet(0, entry, (count == null ? 0 : count) + 1);
      }
      for (t1 = J.get$iterator$ax(map2.get$keys()); B.boolConversionCheck(t1.moveNext$0());) {
        key = t1.get$current();
        entry = A._MapEntry$(this, key, map2.$index(0, key));
        count = equalElementCounts.$index(0, entry);
        if (count == null || count === 0)
          return false;
        if (typeof count !== "number")
          return count.$sub();
        equalElementCounts.$indexSet(0, entry, count - 1);
      }
      return true;
    },
    hash$1(map) {
      var t2, t3, t4, hash, key, keyHash, t5,
        t1 = this.$ti;
      t1._eval$1("Map<1,2>?")._as(map);
      if (map == null)
        return F.JSNull_methods.get$hashCode(null);
      for (t2 = J.get$iterator$ax(map.get$keys()), t3 = this._keyEquality, t4 = this._valueEquality, t1 = t1._rest[1], hash = 0; B.boolConversionCheck(t2.moveNext$0());) {
        key = t2.get$current();
        keyHash = t3.hash$1(key);
        t5 = map.$index(0, key);
        hash = hash + 3 * keyHash + 7 * t4.hash$1(t5 == null ? t1._as(t5) : t5) & 2147483647;
      }
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    isValidKey$1(o) {
      return this.$ti._eval$1("Map<1,2>")._is(o);
    },
    $isEquality: 1
  };
  A.DeepCollectionEquality.prototype = {
    equals$2(e1, e2) {
      var t2, _this = this,
        t1 = type$.Set_dynamic;
      if (t1._is(e1))
        return t1._is(e2) && B.boolConversionCheck(A.SetEquality$(_this, type$.dynamic).equals$2(e1, e2));
      t1 = type$.Map_dynamic_dynamic;
      if (t1._is(e1)) {
        if (t1._is(e2)) {
          t1 = type$.dynamic;
          t1 = B.boolConversionCheck(A.MapEquality$(_this, _this, t1, t1).equals$2(e1, e2));
        } else
          t1 = false;
        return t1;
      }
      t1 = type$.Iterable_dynamic;
      if (t1._is(e1)) {
        t2 = type$.List_dynamic;
        if (t2._is(e1) !== t2._is(e2))
          return false;
        return t1._is(e2) && B.boolConversionCheck(A.UnorderedIterableEquality$(_this, type$.dynamic).equals$2(e1, e2));
      }
      return C.C_DefaultEquality.equals$2(e1, e2);
    },
    hash$1(o) {
      var t1, _this = this;
      if (type$.Set_dynamic._is(o))
        return A.SetEquality$(_this, type$.dynamic).hash$1(o);
      if (type$.Map_dynamic_dynamic._is(o)) {
        t1 = type$.dynamic;
        return A.MapEquality$(_this, _this, t1, t1).hash$1(o);
      }
      if (type$.Iterable_dynamic._is(o))
        return A.UnorderedIterableEquality$(_this, type$.dynamic).hash$1(o);
      return C.C_DefaultEquality.hash$1(o);
    },
    isValidKey$1(o) {
      return type$.Iterable_dynamic._is(o) || type$.Map_dynamic_dynamic._is(o) || B.boolConversionCheck(C.C_DefaultEquality.isValidKey$1(o));
    },
    $isEquality: 1
  };
  A.AnimationStatus.prototype = {
    _enumToString$0() {
      return "AnimationStatus." + B.S(this._core$_name);
    },
    get$isDismissed() {
      return this === C.AnimationStatus_0;
    },
    get$isCompleted() {
      return this === C.AnimationStatus_3;
    },
    get$isAnimating() {
      var t1, _this = this;
      $label0$0: {
        if (C.AnimationStatus_1 === _this || C.AnimationStatus_2 === _this) {
          t1 = true;
          break $label0$0;
        }
        if (C.AnimationStatus_3 === _this || C.AnimationStatus_0 === _this) {
          t1 = false;
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    },
    get$isForwardOrCompleted() {
      var t1, _this = this;
      $label0$0: {
        if (C.AnimationStatus_1 === _this || C.AnimationStatus_3 === _this) {
          t1 = true;
          break $label0$0;
        }
        if (C.AnimationStatus_2 === _this || C.AnimationStatus_0 === _this) {
          t1 = false;
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    }
  };
  A.Animation.prototype = {
    get$isDismissed() {
      return this.get$status().get$isDismissed();
    },
    get$isCompleted() {
      return this.get$status().get$isCompleted();
    },
    get$isAnimating() {
      return this.get$status().get$isAnimating();
    },
    get$isForwardOrCompleted() {
      return this.get$status().get$isForwardOrCompleted();
    },
    drive$1$1(child, $U) {
      return $U._eval$1("Animatable<0>")._as(child).animate$1(type$.Animation_double._as(this));
    },
    toString$0(_) {
      return B.S(E.describeIdentity(this)) + "(" + B.S(this.toStringDetails$0()) + ")";
    },
    toStringDetails$0() {
      switch (this.get$status()) {
        case C.AnimationStatus_1:
          var t1 = "\u25b6";
          break;
        case C.AnimationStatus_2:
          t1 = "\u25c0";
          break;
        case C.AnimationStatus_3:
          t1 = "\u23ed";
          break;
        case C.AnimationStatus_0:
          t1 = "\u23ee";
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    $isValueListenable: 1
  };
  A._AnimationDirection.prototype = {
    _enumToString$0() {
      return "_AnimationDirection." + B.S(this._core$_name);
    }
  };
  A.AnimationBehavior.prototype = {
    _enumToString$0() {
      return "AnimationBehavior." + B.S(this._core$_name);
    }
  };
  A.AnimationController.prototype = {
    AnimationController$8$animationBehavior$debugLabel$duration$lowerBound$reverseDuration$upperBound$value$vsync(animationBehavior, debugLabel, duration, lowerBound, reverseDuration, upperBound, value, vsync) {
      var _this = this;
      _this._animation_controller$_maybeDispatchObjectCreation$0();
      _this.set$_ticker(vsync.createTicker$1(_this.get$_animation_controller$_tick()));
      _this._internalSetValue$1(value == null ? 0 : value);
    },
    _animation_controller$_maybeDispatchObjectCreation$0() {
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(B.S(C.Type_AnimationController_dqw), "package:flutter/animation.dart", this);
    },
    get$view() {
      return this;
    },
    get$value() {
      return this.get$_animation_controller$_value();
    },
    get$_animation_controller$_value() {
      return this.__AnimationController__value_A;
    },
    set$_animation_controller$_value(value) {
      this.__AnimationController__value_A = B._asDouble(value);
    },
    set$value(newValue) {
      var _this = this;
      B._asDouble(newValue);
      _this.stop$0();
      _this._internalSetValue$1(newValue);
      _this.notifyListeners$0();
      _this._checkStatusChanged$0();
    },
    _internalSetValue$1(newValue) {
      var t1, _this = this;
      _this.set$_animation_controller$_value(E.clampDouble(B._asDouble(newValue), 0, 1));
      if (B.boolConversionCheck(J.$eq$(_this.get$_animation_controller$_value(), 0)))
        _this.set$_status(C.AnimationStatus_0);
      else if (B.boolConversionCheck(J.$eq$(_this.get$_animation_controller$_value(), 1)))
        _this.set$_status(C.AnimationStatus_3);
      else {
        switch (_this._direction) {
          case C._AnimationDirection_0:
            t1 = C.AnimationStatus_1;
            break;
          case C._AnimationDirection_1:
            t1 = C.AnimationStatus_2;
            break;
          default:
            t1 = null;
        }
        _this.set$_status(t1);
      }
    },
    get$isAnimating() {
      var t1 = this._ticker;
      return t1 != null && B.boolConversionCheck(t1.get$isActive());
    },
    get$status() {
      return this.get$_status();
    },
    get$_status() {
      return this.__AnimationController__status_A;
    },
    set$_status(value) {
      this.__AnimationController__status_A = type$.AnimationStatus._as(value);
    },
    forward$0() {
      this._direction = C._AnimationDirection_0;
      return this._animateToInternal$1(1);
    },
    reverse$1$from(from) {
      B._asDoubleQ(from);
      this._direction = C._AnimationDirection_1;
      if (from != null)
        this.set$value(from);
      return this._animateToInternal$1(0);
    },
    reverse$0() {
      return this.reverse$1$from(null);
    },
    animateTo$3$curve$duration(target, curve, duration) {
      B._asDouble(target);
      type$.nullable_Duration._as(duration);
      type$.Curve._as(curve);
      this._direction = C._AnimationDirection_0;
      return this._animateToInternal$3$curve$duration(target, curve, duration);
    },
    animateTo$2$duration(target, duration) {
      return this.animateTo$3$curve$duration(target, C.C__Linear, duration);
    },
    animateBack$3$curve$duration(target, curve, duration) {
      B._asDouble(target);
      type$.nullable_Duration._as(duration);
      type$.Curve._as(curve);
      this._direction = C._AnimationDirection_1;
      return this._animateToInternal$3$curve$duration(target, curve, duration);
    },
    _animateToInternal$3$curve$duration(target, curve, duration) {
      var t1, t2, remainingFraction, directionDuration, simulationDuration, _this = this;
      B._asDouble(target);
      type$.nullable_Duration._as(duration);
      type$.Curve._as(curve);
      $label0$0: {
        t1 = B.boolConversionCheck(E.SemanticsBinding_instance().get$disableAnimations());
        if (t1) {
          t1 = 0.05;
          break $label0$0;
        }
        t1 = 1;
        break $label0$0;
      }
      if (duration == null) {
        if (B.boolConversionCheck(F.JSInt_methods.get$isFinite(1))) {
          t2 = _this.get$_animation_controller$_value();
          if (typeof t2 !== "number")
            return B.iae(t2);
          remainingFraction = Math.abs(target - t2) / 1;
        } else
          remainingFraction = 1;
        if (B.boolConversionCheck(J.$eq$(_this._direction, C._AnimationDirection_1)) && _this.reverseDuration != null) {
          t2 = _this.reverseDuration;
          t2.toString;
          directionDuration = t2;
        } else {
          t2 = _this.duration;
          t2.toString;
          directionDuration = t2;
        }
        simulationDuration = directionDuration.$mul(0, remainingFraction);
      } else
        simulationDuration = target === _this.get$value() ? F.Duration_0 : duration;
      _this.stop$0();
      if (B.boolConversionCheck(J.$eq$(simulationDuration, F.Duration_0))) {
        if (!B.boolConversionCheck(J.$eq$(_this.get$value(), target))) {
          _this.set$_animation_controller$_value(E.clampDouble(target, 0, 1));
          _this.notifyListeners$0();
        }
        _this.set$_status(B.boolConversionCheck(J.$eq$(_this._direction, C._AnimationDirection_0)) ? C.AnimationStatus_3 : C.AnimationStatus_0);
        _this._checkStatusChanged$0();
        return A.TickerFuture$complete();
      }
      return _this._startSimulation$1(A._InterpolationSimulation$(_this.get$_animation_controller$_value(), target, simulationDuration, curve, t1));
    },
    _animateToInternal$1(target) {
      return this._animateToInternal$3$curve$duration(target, C.C__Linear, null);
    },
    _startSimulation$1(simulation) {
      var result, _this = this;
      type$.Simulation._as(simulation);
      _this._simulation = simulation;
      _this.set$_animation_controller$_value(E.clampDouble(simulation.x$1(0), 0, 1));
      result = _this._ticker.start$0();
      _this.set$_status(B.boolConversionCheck(J.$eq$(_this._direction, C._AnimationDirection_0)) ? C.AnimationStatus_1 : C.AnimationStatus_2);
      _this._checkStatusChanged$0();
      return result;
    },
    stop$1$canceled(canceled) {
      B._asBool(canceled);
      this._simulation = null;
      this._ticker.stop$1$canceled(canceled);
    },
    stop$0() {
      return this.stop$1$canceled(true);
    },
    dispose$0() {
      var _this = this;
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectDisposed$1$object(_this);
      _this._ticker.dispose$0();
      _this._ticker = null;
      _this.clearStatusListeners$0();
      _this.clearListeners$0();
      _this.super$AnimationEagerListenerMixin$dispose();
    },
    _checkStatusChanged$0() {
      var _this = this,
        newStatus = _this.get$status();
      if (!B.boolConversionCheck(J.$eq$(_this._lastReportedStatus, newStatus))) {
        _this._lastReportedStatus = newStatus;
        _this.notifyStatusListeners$1(newStatus);
      }
    },
    _animation_controller$_tick$1(elapsed) {
      var elapsedInSeconds, _this = this,
        t1 = J.toDouble$0$n(type$.Duration._as(elapsed).get$inMicroseconds());
      if (typeof t1 !== "number")
        return t1.$div();
      elapsedInSeconds = t1 / 1000000;
      _this.set$_animation_controller$_value(E.clampDouble(_this._simulation.x$1(elapsedInSeconds), 0, 1));
      if (B.boolConversionCheck(_this._simulation.isDone$1(elapsedInSeconds))) {
        _this.set$_status(B.boolConversionCheck(J.$eq$(_this._direction, C._AnimationDirection_0)) ? C.AnimationStatus_3 : C.AnimationStatus_0);
        _this.stop$1$canceled(false);
      }
      _this.notifyListeners$0();
      _this._checkStatusChanged$0();
    },
    toStringDetails$0() {
      var ticker, _this = this,
        paused = B.boolConversionCheck(_this.get$isAnimating()) ? "" : "; paused",
        t1 = _this._ticker;
      if (t1 == null)
        ticker = "; DISPOSED";
      else
        ticker = B.boolConversionCheck(t1.get$muted()) ? "; silenced" : "";
      return B.S(_this.super$Animation$toStringDetails()) + " " + B.S(J.toStringAsFixed$1$n(_this.get$value(), 3)) + paused + ticker;
    },
    set$duration(duration) {
      this.duration = type$.nullable_Duration._as(duration);
    },
    set$_ticker(_ticker) {
      this._ticker = type$.nullable_Ticker._as(_ticker);
    },
    $isAnimationEagerListenerMixin: 1,
    $isAnimationLocalListenersMixin: 1,
    $isAnimationLocalStatusListenersMixin: 1
  };
  A._InterpolationSimulation.prototype = {
    x$1(timeInSeconds) {
      var t1, t, t2, t3, _this = this;
      B._asDouble(timeInSeconds);
      t1 = _this._durationInSeconds;
      if (typeof t1 !== "number")
        return B.iae(t1);
      t = E.clampDouble(timeInSeconds / t1, 0, 1);
      $label0$0: {
        if (0 === t) {
          t1 = _this._begin;
          break $label0$0;
        }
        if (1 === t) {
          t1 = _this._animation_controller$_end;
          break $label0$0;
        }
        t1 = _this._begin;
        t2 = _this._animation_controller$_end;
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t1 !== "number")
          return B.iae(t1);
        t3 = _this._curve.transform$1(t);
        if (typeof t3 !== "number")
          return B.iae(t3);
        t3 = t1 + (t2 - t1) * t3;
        t1 = t3;
        break $label0$0;
      }
      return t1;
    },
    isDone$1(timeInSeconds) {
      var t1;
      B._asDouble(timeInSeconds);
      t1 = this._durationInSeconds;
      if (typeof t1 !== "number")
        return B.iae(t1);
      return timeInSeconds > t1;
    }
  };
  A._AnimationController_Animation_AnimationEagerListenerMixin.prototype = {$isAnimationEagerListenerMixin: 1};
  A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin.prototype = {$isAnimationEagerListenerMixin: 1, $isAnimationLocalListenersMixin: 1};
  A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin.prototype = {$isAnimationEagerListenerMixin: 1, $isAnimationLocalListenersMixin: 1, $isAnimationLocalStatusListenersMixin: 1};
  A.AnimationStyle.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      t1 = false;
      if (other instanceof A.AnimationStyle)
        if (B.boolConversionCheck(J.$eq$(other.duration, _this.duration)))
          t1 = B.boolConversionCheck(J.$eq$(other.reverseDuration, _this.reverseDuration));
      return t1;
    },
    get$hashCode(_) {
      return B.Object_hash(null, this.duration, null, this.reverseDuration, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    debugFillProperties$1(properties) {
      var t1, t2, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      t1 = type$.Curve;
      properties.add$1(0, E.DiagnosticsProperty$("curve", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      t2 = type$.Duration;
      properties.add$1(0, E.DiagnosticsProperty$("duration", this.duration, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("reverseCurve", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("reverseDuration", this.reverseDuration, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
    },
    $isDiagnosticable: 1
  };
  A._AnimationStyle_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A._AlwaysCompleteAnimation.prototype = {
    addListener$1(listener) {
      type$.void_Function._as(listener);
    },
    removeListener$1(listener) {
      type$.void_Function._as(listener);
    },
    addStatusListener$1(listener) {
      type$.void_Function_AnimationStatus._as(listener);
    },
    removeStatusListener$1(listener) {
      type$.void_Function_AnimationStatus._as(listener);
    },
    get$status() {
      return C.AnimationStatus_3;
    },
    get$value() {
      return 1;
    },
    toString$0(_) {
      return "kAlwaysCompleteAnimation";
    }
  };
  A._AlwaysDismissedAnimation.prototype = {
    addListener$1(listener) {
      type$.void_Function._as(listener);
    },
    removeListener$1(listener) {
      type$.void_Function._as(listener);
    },
    addStatusListener$1(listener) {
      type$.void_Function_AnimationStatus._as(listener);
    },
    removeStatusListener$1(listener) {
      type$.void_Function_AnimationStatus._as(listener);
    },
    get$status() {
      return C.AnimationStatus_0;
    },
    get$value() {
      return 0;
    },
    toString$0(_) {
      return "kAlwaysDismissedAnimation";
    }
  };
  A.AnimationWithParentMixin.prototype = {
    addListener$1(listener) {
      type$.void_Function._as(listener);
      return this.get$parent().addListener$1(listener);
    },
    removeListener$1(listener) {
      type$.void_Function._as(listener);
      return this.get$parent().removeListener$1(listener);
    },
    addStatusListener$1(listener) {
      type$.void_Function_AnimationStatus._as(listener);
      return this.get$parent().addStatusListener$1(listener);
    },
    removeStatusListener$1(listener) {
      type$.void_Function_AnimationStatus._as(listener);
      return this.get$parent().removeStatusListener$1(listener);
    },
    get$status() {
      return this.get$parent().get$status();
    }
  };
  A.ProxyAnimation.prototype = {
    ProxyAnimation$1(animation) {
      var _this = this;
      _this.set$_animations$_parent(animation);
      if (_this._animations$_parent == null) {
        _this._animations$_status = C.AnimationStatus_0;
        _this._animations$_value = 0;
      }
    },
    get$parent() {
      return this._animations$_parent;
    },
    set$parent(value) {
      var t1, _this = this;
      type$.nullable_Animation_double._as(value);
      t1 = _this._animations$_parent;
      if (value == null ? t1 == null : value === t1)
        return;
      if (t1 != null) {
        _this.set$_animations$_status(t1.get$status());
        _this.set$_animations$_value(_this._animations$_parent.get$value());
        if (B.boolConversionCheck(_this.get$isListening()))
          _this.didStopListening$0();
      }
      _this.set$_animations$_parent(value);
      if (_this._animations$_parent != null) {
        if (B.boolConversionCheck(_this.get$isListening()))
          _this.didStartListening$0();
        if (!B.boolConversionCheck(J.$eq$(_this._animations$_value, _this._animations$_parent.get$value())))
          _this.notifyListeners$0();
        if (!B.boolConversionCheck(J.$eq$(_this._animations$_status, _this._animations$_parent.get$status())))
          _this.notifyStatusListeners$1(_this._animations$_parent.get$status());
        _this._animations$_value = _this._animations$_status = null;
      }
    },
    didStartListening$0() {
      var _this = this,
        t1 = _this._animations$_parent;
      if (t1 != null) {
        t1.addListener$1(_this.get$notifyListeners());
        _this._animations$_parent.addStatusListener$1(_this.get$notifyStatusListeners());
      }
    },
    didStopListening$0() {
      var _this = this,
        t1 = _this._animations$_parent;
      if (t1 != null) {
        t1.removeListener$1(_this.get$notifyListeners());
        _this._animations$_parent.removeStatusListener$1(_this.get$notifyStatusListeners());
      }
    },
    get$status() {
      var t1 = this._animations$_parent;
      if (t1 != null)
        t1 = t1.get$status();
      else {
        t1 = this._animations$_status;
        t1.toString;
      }
      return t1;
    },
    get$value() {
      var t1 = this._animations$_parent;
      if (t1 != null)
        t1 = t1.get$value();
      else {
        t1 = this._animations$_value;
        t1.toString;
      }
      return t1;
    },
    toString$0(_) {
      var _this = this,
        _s14_ = "ProxyAnimation";
      if (_this.get$parent() == null)
        return B.S(E.objectRuntimeType(_this, _s14_)) + "(null; " + B.S(_this.super$Animation$toStringDetails()) + " " + B.S(J.toStringAsFixed$1$n(_this.get$value(), 3)) + ")";
      return B.S(_this.get$parent()) + "\u27a9" + B.S(E.objectRuntimeType(_this, _s14_));
    },
    set$_animations$_status(_status) {
      this._animations$_status = type$.nullable_AnimationStatus._as(_status);
    },
    set$_animations$_value(_value) {
      this._animations$_value = B._asDoubleQ(_value);
    },
    set$_animations$_parent(_parent) {
      this._animations$_parent = type$.nullable_Animation_double._as(_parent);
    },
    $isAnimationLazyListenerMixin: 1,
    $isAnimationLocalListenersMixin: 1,
    $isAnimationLocalStatusListenersMixin: 1
  };
  A.ReverseAnimation.prototype = {
    addListener$1(listener) {
      type$.void_Function._as(listener);
      this.didRegisterListener$0();
      this.parent.addListener$1(listener);
    },
    removeListener$1(listener) {
      this.parent.removeListener$1(type$.void_Function._as(listener));
      this.didUnregisterListener$0();
    },
    didStartListening$0() {
      this.parent.addStatusListener$1(this.get$_statusChangeHandler());
    },
    didStopListening$0() {
      this.parent.removeStatusListener$1(this.get$_statusChangeHandler());
    },
    _statusChangeHandler$1($status) {
      this.notifyStatusListeners$1(this._reverseStatus$1(type$.AnimationStatus._as($status)));
    },
    get$status() {
      return this._reverseStatus$1(this.parent.get$status());
    },
    get$value() {
      var t1 = this.parent.get$value();
      if (typeof t1 !== "number")
        return B.iae(t1);
      return 1 - t1;
    },
    _reverseStatus$1($status) {
      var t1;
      switch (type$.AnimationStatus._as($status).index) {
        case 1:
          t1 = C.AnimationStatus_2;
          break;
        case 2:
          t1 = C.AnimationStatus_1;
          break;
        case 3:
          t1 = C.AnimationStatus_0;
          break;
        case 0:
          t1 = C.AnimationStatus_3;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    toString$0(_) {
      return B.S(this.parent) + "\u27aa" + B.S(E.objectRuntimeType(this, "ReverseAnimation"));
    },
    $isAnimationLazyListenerMixin: 1,
    $isAnimationLocalStatusListenersMixin: 1
  };
  A.CurvedAnimation.prototype = {
    CurvedAnimation$3$curve$parent$reverseCurve(curve, $parent, reverseCurve) {
      var t1, _this = this;
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(B.S(C.Type_CurvedAnimation_Xdq), "package:flutter/animation.dart", _this);
      t1 = _this.parent;
      _this._updateCurveDirection$1(t1.get$status());
      t1.addStatusListener$1(_this.get$_updateCurveDirection());
    },
    _updateCurveDirection$1($status) {
      var t1;
      type$.AnimationStatus._as($status);
      if (B.boolConversionCheck($status.get$isAnimating())) {
        t1 = this._curveDirection;
        if (t1 == null)
          t1 = $status;
      } else
        t1 = null;
      this.set$_curveDirection(t1);
    },
    get$_useForwardCurve() {
      if (this.reverseCurve != null) {
        var t1 = this._curveDirection;
        t1 = !B.boolConversionCheck(J.$eq$(t1 == null ? this.parent.get$status() : t1, C.AnimationStatus_2));
      } else
        t1 = true;
      return t1;
    },
    dispose$0() {
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectDisposed$1$object(this);
      this.parent.removeStatusListener$1(this.get$_updateCurveDirection());
    },
    get$value() {
      var _this = this,
        activeCurve = B.boolConversionCheck(_this.get$_useForwardCurve()) ? _this.curve : _this.reverseCurve,
        t = _this.parent.get$value();
      if (activeCurve == null)
        return t;
      if (t === 0 || t === 1)
        return t;
      return activeCurve.transform$1(t);
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.reverseCurve;
      if (t1 == null)
        return B.S(_this.parent) + "\u27a9" + B.S(_this.curve);
      if (B.boolConversionCheck(_this.get$_useForwardCurve()))
        return B.S(_this.parent) + "\u27a9" + B.S(_this.curve) + "\u2092\u2099/" + B.S(t1);
      return B.S(_this.parent) + "\u27a9" + B.S(_this.curve) + "/" + B.S(t1) + "\u2092\u2099";
    },
    set$_curveDirection(_curveDirection) {
      this._curveDirection = type$.nullable_AnimationStatus._as(_curveDirection);
    },
    $isAnimationWithParentMixin: 1,
    get$parent() {
      return this.parent;
    }
  };
  A._TrainHoppingMode.prototype = {
    _enumToString$0() {
      return "_TrainHoppingMode." + B.S(this._core$_name);
    }
  };
  A.TrainHoppingAnimation.prototype = {
    TrainHoppingAnimation$3$onSwitchedTrain(_currentTrain, _nextTrain, onSwitchedTrain) {
      var t1, t2, _this = this;
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(B.S(C.Type_TrainHoppingAnimation_TyI), "package:flutter/animation.dart", _this);
      if (_this._nextTrain != null)
        if (B.boolConversionCheck(J.$eq$(_this._currentTrain.get$value(), _this._nextTrain.get$value()))) {
          _this.set$_currentTrain(_this._nextTrain);
          _this.set$_nextTrain(null);
        } else {
          t1 = _this._currentTrain.get$value();
          t2 = _this._nextTrain.get$value();
          if (typeof t1 !== "number")
            return t1.$gt();
          if (typeof t2 !== "number")
            return B.iae(t2);
          if (t1 > t2)
            _this._mode = C._TrainHoppingMode_1;
          else
            _this._mode = C._TrainHoppingMode_0;
        }
      _this._currentTrain.addStatusListener$1(_this.get$_statusChangeHandler());
      t1 = _this.get$_valueChangeHandler();
      _this._currentTrain.addListener$1(t1);
      t2 = _this._nextTrain;
      if (t2 != null)
        t2.addListener$1(t1);
    },
    get$currentTrain() {
      return this._currentTrain;
    },
    _statusChangeHandler$1($status) {
      type$.AnimationStatus._as($status);
      if ($status !== this._lastStatus) {
        this.notifyListeners$0();
        this._lastStatus = $status;
      }
    },
    get$status() {
      return this._currentTrain.get$status();
    },
    _valueChangeHandler$0() {
      var t2, t3, hop, newValue, _this = this,
        t1 = _this._nextTrain;
      if (t1 != null) {
        t2 = _this._mode;
        t2.toString;
        switch (t2) {
          case C._TrainHoppingMode_0:
            t1 = t1.get$value();
            t2 = _this._currentTrain.get$value();
            if (typeof t1 !== "number")
              return t1.$le();
            if (typeof t2 !== "number")
              return B.iae(t2);
            t2 = t1 <= t2;
            t1 = t2;
            break;
          case C._TrainHoppingMode_1:
            t1 = t1.get$value();
            t2 = _this._currentTrain.get$value();
            if (typeof t1 !== "number")
              return t1.$ge();
            if (typeof t2 !== "number")
              return B.iae(t2);
            t2 = t1 >= t2;
            t1 = t2;
            break;
          default:
            t1 = null;
        }
        if (t1) {
          t2 = _this._currentTrain;
          t3 = _this.get$_statusChangeHandler();
          t2.removeStatusListener$1(t3);
          t2.removeListener$1(_this.get$_valueChangeHandler());
          _this.set$_currentTrain(_this._nextTrain);
          _this.set$_nextTrain(null);
          _this._currentTrain.addStatusListener$1(t3);
          _this._statusChangeHandler$1(_this._currentTrain.get$status());
        }
        hop = t1;
      } else
        hop = false;
      newValue = _this.get$value();
      if (newValue !== _this._lastValue) {
        _this.notifyListeners$0();
        _this._lastValue = newValue;
      }
      if (hop && _this.onSwitchedTrain != null)
        _this.onSwitchedTrain.call$0();
    },
    get$value() {
      return this._currentTrain.get$value();
    },
    dispose$0() {
      var t1, t2, _this = this;
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectDisposed$1$object(_this);
      _this._currentTrain.removeStatusListener$1(_this.get$_statusChangeHandler());
      t1 = _this.get$_valueChangeHandler();
      _this._currentTrain.removeListener$1(t1);
      _this.set$_currentTrain(null);
      t2 = _this._nextTrain;
      if (t2 != null)
        t2.removeListener$1(t1);
      _this.set$_nextTrain(null);
      _this.clearListeners$0();
      _this.clearStatusListeners$0();
      _this.super$AnimationEagerListenerMixin$dispose();
    },
    toString$0(_) {
      var _this = this,
        _s21_ = "TrainHoppingAnimation";
      if (_this._nextTrain != null)
        return B.S(_this.get$currentTrain()) + "\u27a9" + B.S(E.objectRuntimeType(_this, _s21_)) + "(next: " + B.S(_this._nextTrain) + ")";
      return B.S(_this.get$currentTrain()) + "\u27a9" + B.S(E.objectRuntimeType(_this, _s21_)) + "(no next)";
    },
    set$_currentTrain(_currentTrain) {
      this._currentTrain = type$.nullable_Animation_double._as(_currentTrain);
    },
    set$_nextTrain(_nextTrain) {
      this._nextTrain = type$.nullable_Animation_double._as(_nextTrain);
    },
    $isAnimationEagerListenerMixin: 1,
    $isAnimationLocalListenersMixin: 1,
    $isAnimationLocalStatusListenersMixin: 1
  };
  A._CurvedAnimation_Animation_AnimationWithParentMixin.prototype = {$isAnimationWithParentMixin: 1};
  A._ProxyAnimation_Animation_AnimationLazyListenerMixin.prototype = {$isAnimationLazyListenerMixin: 1};
  A._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin.prototype = {$isAnimationLazyListenerMixin: 1, $isAnimationLocalListenersMixin: 1};
  A._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin.prototype = {$isAnimationLazyListenerMixin: 1, $isAnimationLocalListenersMixin: 1, $isAnimationLocalStatusListenersMixin: 1};
  A._ReverseAnimation_Animation_AnimationLazyListenerMixin.prototype = {$isAnimationLazyListenerMixin: 1};
  A._ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin.prototype = {$isAnimationLazyListenerMixin: 1, $isAnimationLocalStatusListenersMixin: 1};
  A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin.prototype = {$isAnimationEagerListenerMixin: 1};
  A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin.prototype = {$isAnimationEagerListenerMixin: 1, $isAnimationLocalListenersMixin: 1};
  A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin.prototype = {$isAnimationEagerListenerMixin: 1, $isAnimationLocalListenersMixin: 1, $isAnimationLocalStatusListenersMixin: 1};
  A._Linear.prototype = {
    transformInternal$1(t) {
      return B._asDouble(t);
    }
  };
  A.Interval.prototype = {
    transformInternal$1(t) {
      var t1, t2;
      B._asDouble(t);
      t1 = this.begin;
      if (typeof t1 !== "number")
        return B.iae(t1);
      t2 = this.end;
      if (typeof t2 !== "number")
        return t2.$sub();
      t = E.clampDouble((t - t1) / (t2 - t1), 0, 1);
      if (t === 0 || t === 1)
        return t;
      return C.C__Linear.transform$1(t);
    },
    toString$0(_) {
      return B.S(E.objectRuntimeType(this, "Interval")) + "(" + B.S(this.begin) + "\u22ef" + B.S(this.end) + ")";
    }
  };
  A.ThreePointCubic.prototype = {
    transformInternal$1(t) {
      var t1, firstCurve, scaleX, scaleY, scaledT, t2, t3, t4, t5, t6, t7, t8;
      B._asDouble(t);
      t1 = C.Offset_UEW.get$dx();
      if (typeof t1 !== "number")
        return B.iae(t1);
      firstCurve = t < t1;
      if (firstCurve)
        scaleX = C.Offset_UEW.get$dx();
      else {
        t1 = C.Offset_UEW.get$dx();
        if (typeof t1 !== "number")
          return B.iae(t1);
        scaleX = 1 - t1;
      }
      if (firstCurve)
        scaleY = C.Offset_UEW.get$dy();
      else {
        t1 = C.Offset_UEW.get$dy();
        if (typeof t1 !== "number")
          return B.iae(t1);
        scaleY = 1 - t1;
      }
      t1 = firstCurve ? 0 : C.Offset_UEW.get$dx();
      if (typeof t1 !== "number")
        return B.iae(t1);
      scaledT = (t - t1) / scaleX;
      if (firstCurve) {
        t1 = C.Offset_sBb.get$dx();
        if (typeof t1 !== "number")
          return t1.$div();
        t2 = C.Offset_sBb.get$dy();
        if (typeof t2 !== "number")
          return t2.$div();
        t3 = C.Offset_O8m.get$dx();
        if (typeof t3 !== "number")
          return t3.$div();
        t4 = C.Offset_O8m.get$dy();
        if (typeof t4 !== "number")
          return t4.$div();
        t4 = A.Cubic$(t1 / scaleX, t2 / scaleY, t3 / scaleX, t4 / scaleY).transform$1(scaledT);
        if (typeof t4 !== "number")
          return t4.$mul();
        return t4 * scaleY;
      } else {
        t1 = C.Offset_HJk.get$dx();
        t2 = C.Offset_UEW.get$dx();
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t3 = C.Offset_HJk.get$dy();
        t4 = C.Offset_UEW.get$dy();
        if (typeof t3 !== "number")
          return t3.$sub();
        if (typeof t4 !== "number")
          return B.iae(t4);
        t5 = C.Offset_EGT.get$dx();
        t6 = C.Offset_UEW.get$dx();
        if (typeof t5 !== "number")
          return t5.$sub();
        if (typeof t6 !== "number")
          return B.iae(t6);
        t7 = C.Offset_EGT.get$dy();
        t8 = C.Offset_UEW.get$dy();
        if (typeof t7 !== "number")
          return t7.$sub();
        if (typeof t8 !== "number")
          return B.iae(t8);
        t8 = A.Cubic$((t1 - t2) / scaleX, (t3 - t4) / scaleY, (t5 - t6) / scaleX, (t7 - t8) / scaleY).transform$1(scaledT);
        if (typeof t8 !== "number")
          return t8.$mul();
        t7 = C.Offset_UEW.get$dy();
        if (typeof t7 !== "number")
          return B.iae(t7);
        return t8 * scaleY + t7;
      }
    },
    toString$0(_) {
      return B.S(E.objectRuntimeType(this, "ThreePointCubic(" + B.S(C.Offset_sBb) + ", " + B.S(C.Offset_O8m) + ", " + B.S(C.Offset_UEW) + ", " + B.S(C.Offset_HJk) + ", " + B.S(C.Offset_EGT) + ")")) + " ";
    }
  };
  A.AnimationLazyListenerMixin.prototype = {
    didRegisterListener$0() {
      var t1, _this = this;
      if (B.boolConversionCheck(J.$eq$(_this.AnimationLazyListenerMixin__listenerCounter, 0)))
        _this.didStartListening$0();
      t1 = _this.AnimationLazyListenerMixin__listenerCounter;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_listenerCounter(t1 + 1);
    },
    didUnregisterListener$0() {
      var _this = this,
        t1 = _this.AnimationLazyListenerMixin__listenerCounter;
      if (typeof t1 !== "number")
        return t1.$sub();
      _this.set$_listenerCounter(t1 - 1);
      if (B.boolConversionCheck(J.$eq$(_this.AnimationLazyListenerMixin__listenerCounter, 0)))
        _this.didStopListening$0();
    },
    get$isListening() {
      var t1 = this.AnimationLazyListenerMixin__listenerCounter;
      if (typeof t1 !== "number")
        return t1.$gt();
      return t1 > 0;
    },
    set$_listenerCounter(_listenerCounter) {
      this.AnimationLazyListenerMixin__listenerCounter = B._asInt(_listenerCounter);
    }
  };
  A.AnimationEagerListenerMixin.prototype = {
    didRegisterListener$0() {
    },
    didUnregisterListener$0() {
    },
    dispose$0() {
    }
  };
  A.AnimationLocalListenersMixin.prototype = {
    addListener$1(listener) {
      type$.void_Function._as(listener);
      this.didRegisterListener$0();
      J.add$1$ax(this.AnimationLocalListenersMixin__listeners, listener);
    },
    removeListener$1(listener) {
      if (J.remove$1$ax(this.AnimationLocalListenersMixin__listeners, type$.void_Function._as(listener)))
        this.didUnregisterListener$0();
    },
    clearListeners$0() {
      J.clear$0$ax(this.AnimationLocalListenersMixin__listeners);
    },
    notifyListeners$0() {
      var listener, collector, exception, stack, t3, exception0,
        t1 = this.AnimationLocalListenersMixin__listeners,
        t2 = J.getInterceptor$ax(t1);
      for (t3 = J.get$iterator$ax(t2.toList$1$growable(t1, false)); B.boolConversionCheck(t3.moveNext$0());) {
        listener = t3.get$current();
        collector = null;
        try {
          if (B.boolConversionCheck(t2.contains$1(t1, listener)))
            listener.call$0();
        } catch (exception0) {
          exception = B.unwrapException(exception0);
          stack = B.getTraceFromException(exception0);
          E.FlutterError_reportError(E.FlutterErrorDetails$(E.ErrorDescription$("while notifying listeners for " + B.S(this.get$runtimeType(0))), exception, collector, "animation library", false, stack));
        }
      }
    }
  };
  A.AnimationLocalStatusListenersMixin.prototype = {
    addStatusListener$1(listener) {
      type$.void_Function_AnimationStatus._as(listener);
      this.didRegisterListener$0();
      J.add$1$ax(this.AnimationLocalStatusListenersMixin__statusListeners, listener);
    },
    removeStatusListener$1(listener) {
      if (J.remove$1$ax(this.AnimationLocalStatusListenersMixin__statusListeners, type$.void_Function_AnimationStatus._as(listener)))
        this.didUnregisterListener$0();
    },
    clearStatusListeners$0() {
      J.clear$0$ax(this.AnimationLocalStatusListenersMixin__statusListeners);
    },
    notifyStatusListeners$1($status) {
      var listener, exception, stack, collector, t1, t2, t3, exception0;
      type$.AnimationStatus._as($status);
      t1 = this.AnimationLocalStatusListenersMixin__statusListeners;
      t2 = J.getInterceptor$ax(t1);
      for (t3 = J.get$iterator$ax(t2.toList$1$growable(t1, false)); B.boolConversionCheck(t3.moveNext$0());) {
        listener = t3.get$current();
        try {
          if (B.boolConversionCheck(t2.contains$1(t1, listener)))
            listener.call$1($status);
        } catch (exception0) {
          exception = B.unwrapException(exception0);
          stack = B.getTraceFromException(exception0);
          collector = null;
          E.FlutterError_reportError(E.FlutterErrorDetails$(E.ErrorDescription$("while notifying status listeners for " + B.S(this.get$runtimeType(0))), exception, collector, "animation library", false, stack));
        }
      }
    }
  };
  A.Animatable.prototype = {
    evaluate$1(animation) {
      return this.transform$1(type$.Animation_double._as(animation).get$value());
    },
    animate$1($parent) {
      return A._AnimatedEvaluation$(type$.Animation_double._as($parent), this, B._instanceType(this)._eval$1("Animatable.T"));
    },
    chain$1($parent) {
      return A._ChainedEvaluation$(type$.Animatable_double._as($parent), this, B._instanceType(this)._eval$1("Animatable.T"));
    }
  };
  A._AnimatedEvaluation.prototype = {
    get$value() {
      return this._evaluatable.evaluate$1(this.parent);
    },
    toString$0(_) {
      return B.S(this.parent) + "\u27a9" + B.S(this._evaluatable) + "\u27a9" + B.S(this.get$value());
    },
    toStringDetails$0() {
      return B.S(this.super$Animation$toStringDetails()) + " " + B.S(this._evaluatable);
    },
    $isAnimationWithParentMixin: 1,
    get$parent() {
      return this.parent;
    }
  };
  A._ChainedEvaluation.prototype = {
    transform$1(t) {
      return this._evaluatable.transform$1(this._tween$_parent.transform$1(B._asDouble(t)));
    },
    toString$0(_) {
      return B.S(this._tween$_parent) + "\u27a9" + B.S(this._evaluatable);
    }
  };
  A.Tween.prototype = {
    lerp$1(t) {
      var t1;
      B._asDouble(t);
      t1 = this.begin;
      return B._instanceType(this)._eval$1("Tween.T")._as(J.$add$ansx(t1, J.$mul$ns(J.$sub$n(this.end, t1), t)));
    },
    transform$1(t) {
      var t1, _this = this;
      B._asDouble(t);
      if (t === 0) {
        t1 = _this.begin;
        return t1 == null ? B._instanceType(_this)._eval$1("Tween.T")._as(t1) : t1;
      }
      if (t === 1) {
        t1 = _this.end;
        return t1 == null ? B._instanceType(_this)._eval$1("Tween.T")._as(t1) : t1;
      }
      return _this.lerp$1(t);
    },
    toString$0(_) {
      return B.S(E.objectRuntimeType(this, "Animatable")) + "(" + B.S(this.begin) + " \u2192 " + B.S(this.end) + ")";
    },
    set$begin(begin) {
      this.begin = B._instanceType(this)._eval$1("Tween.T?")._as(begin);
    },
    set$end(end) {
      this.end = B._instanceType(this)._eval$1("Tween.T?")._as(end);
    }
  };
  A.ReverseTween.prototype = {
    lerp$1(t) {
      return this.parent.lerp$1(1 - B._asDouble(t));
    }
  };
  A.ColorTween.prototype = {
    lerp$1(t) {
      B._asDouble(t);
      return A.Color_lerp(this.begin, this.end, t);
    }
  };
  A.RectTween.prototype = {
    lerp$1(t) {
      B._asDouble(t);
      return A.Rect_lerp(this.begin, this.end, t);
    }
  };
  A.IntTween.prototype = {
    lerp$1(t) {
      var t1, t2;
      B._asDouble(t);
      t1 = this.begin;
      t1.toString;
      t2 = this.end;
      t2.toString;
      if (typeof t2 !== "number")
        return t2.$sub();
      if (typeof t1 !== "number")
        return B.iae(t1);
      return F.JSNumber_methods.round$0(t1 + (t2 - t1) * t);
    }
  };
  A.CurveTween.prototype = {
    transform$1(t) {
      B._asDouble(t);
      if (t === 0 || t === 1)
        return t;
      return this.curve.transform$1(t);
    },
    toString$0(_) {
      return B.S(E.objectRuntimeType(this, "CurveTween")) + "(curve: " + B.S(this.curve) + ")";
    }
  };
  A.__AnimatedEvaluation_Animation_AnimationWithParentMixin.prototype = {$isAnimationWithParentMixin: 1};
  A.TweenSequence.prototype = {
    TweenSequence$1(items, $T) {
      var t3, totalWeight, t4, start, i, t5, end,
        t1 = this._items,
        t2 = J.getInterceptor$ax(t1);
      t2.addAll$1(t1, items);
      for (t3 = t2.get$iterator(t1), totalWeight = 0; B.boolConversionCheck(t3.moveNext$0());) {
        t4 = t3.get$current().weight;
        if (typeof t4 !== "number")
          return B.iae(t4);
        totalWeight += t4;
      }
      t3 = this._intervals;
      t4 = J.getInterceptor$ax(t3);
      start = 0;
      i = 0;
      while (true) {
        t5 = t2.get$length(t1);
        if (typeof t5 !== "number")
          return B.iae(t5);
        if (!(i < t5))
          break;
        t5 = t2.get$length(t1);
        if (typeof t5 !== "number")
          return t5.$sub();
        if (i === t5 - 1)
          end = 1;
        else {
          t5 = t2.$index(t1, i).weight;
          if (typeof t5 !== "number")
            return t5.$div();
          end = start + t5 / totalWeight;
        }
        t4.add$1(t3, A._Interval$(start, end));
        ++i;
        start = end;
      }
    },
    _evaluateAt$2(t, index) {
      var element, tInterval;
      B._asDouble(t);
      B._asInt(index);
      element = J.$index$asx(this._items, index);
      tInterval = J.$index$asx(this._intervals, index).value$1(t);
      return element.tween.transform$1(tInterval);
    },
    transform$1(t) {
      var t1, t2, t3, t4, index, t5, _this = this;
      B._asDouble(t);
      if (t === 1) {
        t1 = J.get$length$asx(_this._items);
        if (typeof t1 !== "number")
          return t1.$sub();
        return _this._evaluateAt$2(t, t1 - 1);
      }
      t1 = _this._items;
      t2 = J.getInterceptor$asx(t1);
      t3 = _this._intervals;
      t4 = J.getInterceptor$asx(t3);
      index = 0;
      while (true) {
        t5 = t2.get$length(t1);
        if (typeof t5 !== "number")
          return B.iae(t5);
        if (!(index < t5))
          break;
        if (B.boolConversionCheck(J.contains$1$asx(t4.$index(t3, index), t)))
          return _this._evaluateAt$2(t, index);
        ++index;
      }
      throw B.wrapException(B.StateError$("TweenSequence.evaluate() could not find an interval for " + B.S(t)));
    },
    toString$0(_) {
      return "TweenSequence(" + B.S(J.get$length$asx(this._items)) + " items)";
    }
  };
  A.TweenSequenceItem.prototype = {};
  A._Interval.prototype = {
    contains$1(_, t) {
      var t1;
      B._asDouble(t);
      t1 = this.start;
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (t >= t1) {
        t1 = this.end;
        if (typeof t1 !== "number")
          return B.iae(t1);
        t1 = t < t1;
      } else
        t1 = false;
      return t1;
    },
    value$1(t) {
      var t1, t2;
      B._asDouble(t);
      t1 = this.start;
      if (typeof t1 !== "number")
        return B.iae(t1);
      t2 = this.end;
      if (typeof t2 !== "number")
        return t2.$sub();
      return (t - t1) / (t2 - t1);
    },
    toString$0(_) {
      return "<" + B.S(this.start) + ", " + B.S(this.end) + ">";
    }
  };
  A.CupertinoDynamicColor.prototype = {
    get$value() {
      return this._effectiveColor.get$value();
    },
    get$_isPlatformBrightnessDependent() {
      var _this = this;
      return !B.boolConversionCheck(J.$eq$(_this.color, _this.darkColor)) || !B.boolConversionCheck(J.$eq$(_this.elevatedColor, _this.darkElevatedColor)) || !B.boolConversionCheck(J.$eq$(_this.highContrastColor, _this.darkHighContrastColor)) || !B.boolConversionCheck(J.$eq$(_this.highContrastElevatedColor, _this.darkHighContrastElevatedColor));
    },
    get$_isHighContrastDependent() {
      var _this = this;
      return !B.boolConversionCheck(J.$eq$(_this.color, _this.highContrastColor)) || !B.boolConversionCheck(J.$eq$(_this.darkColor, _this.darkHighContrastColor)) || !B.boolConversionCheck(J.$eq$(_this.elevatedColor, _this.highContrastElevatedColor)) || !B.boolConversionCheck(J.$eq$(_this.darkElevatedColor, _this.darkHighContrastElevatedColor));
    },
    get$_isInterfaceElevationDependent() {
      var _this = this;
      return !B.boolConversionCheck(J.$eq$(_this.color, _this.elevatedColor)) || !B.boolConversionCheck(J.$eq$(_this.darkColor, _this.darkElevatedColor)) || !B.boolConversionCheck(J.$eq$(_this.highContrastColor, _this.highContrastElevatedColor)) || !B.boolConversionCheck(J.$eq$(_this.darkHighContrastColor, _this.darkHighContrastElevatedColor));
    },
    resolveFrom$1(context) {
      var t1, brightness, level, highContrast, _0_3, _0_1, _0_6, _0_4, _0_9, _0_7, t2, t3, _0_7_isSet, _0_9_isSet, _0_11, _0_4_isSet, _0_6_isSet, _0_11_isSet, _0_13, _0_15, _0_13_isSet, _this = this, _null = null;
      type$.BuildContext._as(context);
      if (B.boolConversionCheck(_this.get$_isPlatformBrightnessDependent())) {
        t1 = A.CupertinoTheme_maybeBrightnessOf(context);
        brightness = t1 == null ? D.Brightness_1 : t1;
      } else
        brightness = D.Brightness_1;
      if (B.boolConversionCheck(_this.get$_isInterfaceElevationDependent())) {
        t1 = A.CupertinoUserInterfaceLevel_maybeOf(context);
        level = t1 == null ? C.CupertinoUserInterfaceLevelData_0 : t1;
      } else
        level = C.CupertinoUserInterfaceLevelData_0;
      if (B.boolConversionCheck(_this.get$_isHighContrastDependent())) {
        t1 = A.MediaQuery_maybeHighContrastOf(context);
        highContrast = B.boolConversionCheck(t1 == null ? false : t1);
      } else
        highContrast = false;
      $label0$0: {
        _0_3 = D.Brightness_1 === brightness;
        t1 = _0_3;
        _0_1 = brightness;
        B.boolConversionCheck(t1);
        _0_6 = _null;
        _0_4 = _null;
        _0_9 = _null;
        _0_7 = _null;
        t2 = false;
        if (t1) {
          _0_6 = C.CupertinoUserInterfaceLevelData_0 === level;
          t3 = _0_6;
          _0_4 = level;
          B.boolConversionCheck(t3);
          if (t3) {
            _0_9 = !highContrast;
            t2 = _0_9;
            _0_7 = highContrast;
            B.boolConversionCheck(t2);
          }
          _0_7_isSet = t3;
          _0_9_isSet = _0_7_isSet;
        } else {
          _0_9_isSet = false;
          _0_7_isSet = false;
        }
        if (t2) {
          t1 = _this.color;
          break $label0$0;
        }
        B.boolConversionCheck(_0_3);
        _0_11 = _null;
        t2 = false;
        if (_0_3) {
          if (t1) {
            _0_4_isSet = t1;
            t1 = _0_6;
            _0_6_isSet = _0_4_isSet;
          } else {
            _0_6 = C.CupertinoUserInterfaceLevelData_0 === level;
            t1 = _0_6;
            _0_4 = level;
            _0_6_isSet = true;
            _0_4_isSet = true;
          }
          B.boolConversionCheck(t1);
          if (t1) {
            if (_0_7_isSet)
              t2 = _0_7;
            else {
              t2 = highContrast;
              _0_7 = t2;
              _0_7_isSet = true;
            }
            _0_11 = true === t2;
            t2 = _0_11;
            B.boolConversionCheck(t2);
          }
          _0_11_isSet = t1;
          t1 = t2;
        } else {
          _0_4_isSet = t1;
          t1 = t2;
          _0_6_isSet = _0_4_isSet;
          _0_11_isSet = false;
        }
        if (t1) {
          t1 = _this.highContrastColor;
          break $label0$0;
        }
        _0_13 = _null;
        t1 = false;
        if (_0_3) {
          if (_0_4_isSet)
            t2 = _0_4;
          else {
            t2 = level;
            _0_4 = t2;
            _0_4_isSet = true;
          }
          _0_13 = C.CupertinoUserInterfaceLevelData_1 === t2;
          t2 = _0_13;
          if (B.boolConversionCheck(t2)) {
            if (_0_9_isSet)
              t1 = _0_9;
            else {
              if (_0_7_isSet)
                t1 = _0_7;
              else {
                t1 = highContrast;
                _0_7 = t1;
                _0_7_isSet = true;
              }
              _0_9 = false === t1;
              t1 = _0_9;
              _0_9_isSet = true;
            }
            B.boolConversionCheck(t1);
          }
        }
        if (t1) {
          t1 = _this.elevatedColor;
          break $label0$0;
        }
        t1 = false;
        if (_0_3)
          if (B.boolConversionCheck(_0_13)) {
            if (_0_11_isSet)
              t1 = _0_11;
            else {
              if (_0_7_isSet)
                t1 = _0_7;
              else {
                t1 = highContrast;
                _0_7 = t1;
                _0_7_isSet = true;
              }
              _0_11 = true === t1;
              t1 = _0_11;
              _0_11_isSet = true;
            }
            B.boolConversionCheck(t1);
          }
        if (t1) {
          t1 = _this.highContrastElevatedColor;
          break $label0$0;
        }
        _0_15 = D.Brightness_0 === _0_1;
        t1 = _0_15;
        t2 = false;
        if (B.boolConversionCheck(t1)) {
          if (_0_6_isSet)
            t1 = _0_6;
          else {
            if (_0_4_isSet)
              t1 = _0_4;
            else {
              t1 = level;
              _0_4 = t1;
              _0_4_isSet = true;
            }
            _0_6 = C.CupertinoUserInterfaceLevelData_0 === t1;
            t1 = _0_6;
            _0_6_isSet = true;
          }
          if (B.boolConversionCheck(t1)) {
            if (_0_9_isSet)
              t1 = _0_9;
            else {
              if (_0_7_isSet)
                t1 = _0_7;
              else {
                t1 = highContrast;
                _0_7 = t1;
                _0_7_isSet = true;
              }
              _0_9 = false === t1;
              t1 = _0_9;
              _0_9_isSet = true;
            }
            B.boolConversionCheck(t1);
          } else
            t1 = t2;
        } else
          t1 = t2;
        if (t1) {
          t1 = _this.darkColor;
          break $label0$0;
        }
        B.boolConversionCheck(_0_15);
        t1 = false;
        if (_0_15) {
          if (_0_6_isSet)
            t2 = _0_6;
          else {
            if (_0_4_isSet)
              t2 = _0_4;
            else {
              t2 = level;
              _0_4 = t2;
              _0_4_isSet = true;
            }
            _0_6 = C.CupertinoUserInterfaceLevelData_0 === t2;
            t2 = _0_6;
          }
          if (B.boolConversionCheck(t2)) {
            if (_0_11_isSet)
              t1 = _0_11;
            else {
              if (_0_7_isSet)
                t1 = _0_7;
              else {
                t1 = highContrast;
                _0_7 = t1;
                _0_7_isSet = true;
              }
              _0_11 = true === t1;
              t1 = _0_11;
              _0_11_isSet = true;
            }
            B.boolConversionCheck(t1);
          }
        }
        if (t1) {
          t1 = _this.darkHighContrastColor;
          break $label0$0;
        }
        t1 = false;
        if (_0_15) {
          if (_0_3) {
            t2 = _0_13;
            _0_13_isSet = _0_3;
          } else {
            if (_0_4_isSet)
              t2 = _0_4;
            else {
              t2 = level;
              _0_4 = t2;
              _0_4_isSet = true;
            }
            _0_13 = C.CupertinoUserInterfaceLevelData_1 === t2;
            t2 = _0_13;
            _0_13_isSet = true;
          }
          if (B.boolConversionCheck(t2)) {
            if (_0_9_isSet)
              t1 = _0_9;
            else {
              if (_0_7_isSet)
                t1 = _0_7;
              else {
                t1 = highContrast;
                _0_7 = t1;
                _0_7_isSet = true;
              }
              _0_9 = false === t1;
              t1 = _0_9;
            }
            B.boolConversionCheck(t1);
          }
        } else
          _0_13_isSet = _0_3;
        if (t1) {
          t1 = _this.darkElevatedColor;
          break $label0$0;
        }
        t1 = false;
        if (_0_15) {
          if (_0_13_isSet)
            t2 = _0_13;
          else {
            _0_13 = C.CupertinoUserInterfaceLevelData_1 === (_0_4_isSet ? _0_4 : level);
            t2 = _0_13;
          }
          if (B.boolConversionCheck(t2)) {
            if (_0_11_isSet)
              t1 = _0_11;
            else {
              _0_11 = true === (_0_7_isSet ? _0_7 : highContrast);
              t1 = _0_11;
            }
            B.boolConversionCheck(t1);
          }
        }
        if (t1) {
          t1 = _this.darkHighContrastElevatedColor;
          break $label0$0;
        }
        t1 = _null;
      }
      return A.CupertinoDynamicColor$_(t1, _this.color, _this.darkColor, _this.highContrastColor, _this.darkHighContrastColor, _this.elevatedColor, _this.darkElevatedColor, _this.highContrastElevatedColor, _this.darkHighContrastElevatedColor, _null, _this._colors$_debugLabel);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.CupertinoDynamicColor && B.boolConversionCheck(J.$eq$(other.get$value(), _this.get$value())) && B.boolConversionCheck(J.$eq$(other.color, _this.color)) && B.boolConversionCheck(J.$eq$(other.darkColor, _this.darkColor)) && B.boolConversionCheck(J.$eq$(other.highContrastColor, _this.highContrastColor)) && B.boolConversionCheck(J.$eq$(other.darkHighContrastColor, _this.darkHighContrastColor)) && B.boolConversionCheck(J.$eq$(other.elevatedColor, _this.elevatedColor)) && B.boolConversionCheck(J.$eq$(other.darkElevatedColor, _this.darkElevatedColor)) && B.boolConversionCheck(J.$eq$(other.highContrastElevatedColor, _this.highContrastElevatedColor)) && B.boolConversionCheck(J.$eq$(other.darkHighContrastElevatedColor, _this.darkHighContrastElevatedColor));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.get$value(), _this.color, _this.darkColor, _this.highContrastColor, _this.elevatedColor, _this.darkElevatedColor, _this.darkHighContrastColor, _this.darkHighContrastElevatedColor, _this.highContrastElevatedColor, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    toString$0(_) {
      var t3, _this = this,
        t1 = new A.CupertinoDynamicColor_toString_toString(_this),
        t2 = B._setArrayType([t1.call$2("color", _this.color)], type$.JSArray_String);
      if (B.boolConversionCheck(_this.get$_isPlatformBrightnessDependent()))
        t2.push(t1.call$2("darkColor", _this.darkColor));
      if (B.boolConversionCheck(_this.get$_isHighContrastDependent()))
        t2.push(t1.call$2("highContrastColor", _this.highContrastColor));
      if (B.boolConversionCheck(_this.get$_isPlatformBrightnessDependent()) && B.boolConversionCheck(_this.get$_isHighContrastDependent()))
        t2.push(t1.call$2("darkHighContrastColor", _this.darkHighContrastColor));
      if (B.boolConversionCheck(_this.get$_isInterfaceElevationDependent()))
        t2.push(t1.call$2("elevatedColor", _this.elevatedColor));
      if (B.boolConversionCheck(_this.get$_isPlatformBrightnessDependent()) && B.boolConversionCheck(_this.get$_isInterfaceElevationDependent()))
        t2.push(t1.call$2("darkElevatedColor", _this.darkElevatedColor));
      if (B.boolConversionCheck(_this.get$_isHighContrastDependent()) && B.boolConversionCheck(_this.get$_isInterfaceElevationDependent()))
        t2.push(t1.call$2("highContrastElevatedColor", _this.highContrastElevatedColor));
      if (B.boolConversionCheck(_this.get$_isPlatformBrightnessDependent()) && B.boolConversionCheck(_this.get$_isHighContrastDependent()) && B.boolConversionCheck(_this.get$_isInterfaceElevationDependent()))
        t2.push(t1.call$2("darkHighContrastElevatedColor", _this.darkHighContrastElevatedColor));
      t1 = _this._colors$_debugLabel;
      t1 = B.S(t1 == null ? E.objectRuntimeType(_this, "CupertinoDynamicColor") : t1);
      t2 = B.S(F.JSArray_methods.join$1(t2, ", "));
      t3 = _this._debugResolveContext;
      t3 = t3 == null ? null : t3.get$widget();
      return t1 + "(" + t2 + ", resolved by: " + B.S(t3 == null ? "UNRESOLVED" : t3) + ")";
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      t1 = _this._colors$_debugLabel;
      if (t1 != null)
        properties.add$1(0, E.MessageProperty$("debugLabel", t1, D.DiagnosticLevel_3));
      properties.add$1(0, A.createCupertinoColorProperty("color", _this.color, D.C__NoDefaultValue));
      if (B.boolConversionCheck(_this.get$_isPlatformBrightnessDependent()))
        properties.add$1(0, A.createCupertinoColorProperty("darkColor", _this.darkColor, D.C__NoDefaultValue));
      if (B.boolConversionCheck(_this.get$_isHighContrastDependent()))
        properties.add$1(0, A.createCupertinoColorProperty("highContrastColor", _this.highContrastColor, D.C__NoDefaultValue));
      if (B.boolConversionCheck(_this.get$_isPlatformBrightnessDependent()) && B.boolConversionCheck(_this.get$_isHighContrastDependent()))
        properties.add$1(0, A.createCupertinoColorProperty("darkHighContrastColor", _this.darkHighContrastColor, D.C__NoDefaultValue));
      if (B.boolConversionCheck(_this.get$_isInterfaceElevationDependent()))
        properties.add$1(0, A.createCupertinoColorProperty("elevatedColor", _this.elevatedColor, D.C__NoDefaultValue));
      if (B.boolConversionCheck(_this.get$_isPlatformBrightnessDependent()) && B.boolConversionCheck(_this.get$_isInterfaceElevationDependent()))
        properties.add$1(0, A.createCupertinoColorProperty("darkElevatedColor", _this.darkElevatedColor, D.C__NoDefaultValue));
      if (B.boolConversionCheck(_this.get$_isHighContrastDependent()) && B.boolConversionCheck(_this.get$_isInterfaceElevationDependent()))
        properties.add$1(0, A.createCupertinoColorProperty("highContrastElevatedColor", _this.highContrastElevatedColor, D.C__NoDefaultValue));
      if (B.boolConversionCheck(_this.get$_isPlatformBrightnessDependent()) && B.boolConversionCheck(_this.get$_isHighContrastDependent()) && B.boolConversionCheck(_this.get$_isInterfaceElevationDependent()))
        properties.add$1(0, A.createCupertinoColorProperty("darkHighContrastElevatedColor", _this.darkHighContrastElevatedColor, D.C__NoDefaultValue));
      t1 = _this._debugResolveContext;
      if (t1 != null)
        properties.add$1(0, E.DiagnosticsProperty$("last resolved", t1, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Element));
    },
    $isDiagnosticable: 1
  };
  A._CupertinoDynamicColor_Color_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.CupertinoIconThemeData.prototype = {
    resolve$1(context) {
      var t1 = this.color,
        resolvedColor = A.CupertinoDynamicColor_maybeResolve(t1, type$.BuildContext._as(context));
      return B.boolConversionCheck(J.$eq$(resolvedColor, t1)) ? this : this.copyWith$1$color(resolvedColor);
    },
    copyWith$9$applyTextScaling$color$fill$grade$opacity$opticalSize$shadows$size$weight(applyTextScaling, color, fill, grade, opacity, opticalSize, shadows, size, weight) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _this = this;
      B._asDoubleQ(size);
      B._asDoubleQ(fill);
      B._asDoubleQ(weight);
      B._asDoubleQ(grade);
      B._asDoubleQ(opticalSize);
      type$.nullable_Color._as(color);
      B._asDoubleQ(opacity);
      type$.nullable_List_Shadow._as(shadows);
      B._asBoolQ(applyTextScaling);
      t1 = size == null ? _this.size : size;
      t2 = fill == null ? _this.fill : fill;
      t3 = weight == null ? _this.weight : weight;
      t4 = grade == null ? _this.grade : grade;
      t5 = opticalSize == null ? _this.opticalSize : opticalSize;
      t6 = color == null ? _this.color : color;
      t7 = opacity == null ? _this.get$opacity() : opacity;
      t8 = shadows == null ? _this.shadows : shadows;
      return A.CupertinoIconThemeData$(applyTextScaling == null ? _this.applyTextScaling : applyTextScaling, t6, t2, t4, t7, t5, t8, t1, t3);
    },
    copyWith$1$color(color) {
      var _null = null;
      return this.copyWith$9$applyTextScaling$color$fill$grade$opacity$opticalSize$shadows$size$weight(_null, color, _null, _null, _null, _null, _null, _null, _null);
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.createCupertinoColorProperty("color", this.color, null));
    }
  };
  A._CupertinoIconThemeData_IconThemeData_Diagnosticable.prototype = {};
  A.CupertinoUserInterfaceLevelData.prototype = {
    _enumToString$0() {
      return "CupertinoUserInterfaceLevelData." + B.S(this._core$_name);
    }
  };
  A._CupertinoLocalizationsDelegate.prototype = {
    isSupported$1(locale) {
      return J.$eq$(type$.Locale._as(locale).get$languageCode(), "en");
    },
    load$1(locale) {
      return A.DefaultCupertinoLocalizations_load(type$.Locale._as(locale));
    },
    shouldReload$1(old) {
      type$._CupertinoLocalizationsDelegate._as(old);
      return false;
    },
    toString$0(_) {
      return "DefaultCupertinoLocalizations.delegate(en_US)";
    }
  };
  A.DefaultCupertinoLocalizations.prototype = {$isCupertinoLocalizations: 1};
  A.CupertinoPageTransition.prototype = {
    createState$0() {
      return A._CupertinoPageTransitionState$();
    }
  };
  A._CupertinoPageTransitionState.prototype = {
    get$_primaryPositionAnimation() {
      return this.___CupertinoPageTransitionState__primaryPositionAnimation_A;
    },
    set$_primaryPositionAnimation(value) {
      this.set$___CupertinoPageTransitionState__primaryPositionAnimation_A(type$.Animation_Offset._as(value));
    },
    get$_secondaryPositionAnimation() {
      return this.___CupertinoPageTransitionState__secondaryPositionAnimation_A;
    },
    set$_secondaryPositionAnimation(value) {
      this.set$___CupertinoPageTransitionState__secondaryPositionAnimation_A(type$.Animation_Offset._as(value));
    },
    get$_primaryShadowAnimation() {
      return this.___CupertinoPageTransitionState__primaryShadowAnimation_A;
    },
    set$_primaryShadowAnimation(value) {
      this.set$___CupertinoPageTransitionState__primaryShadowAnimation_A(type$.Animation_Decoration._as(value));
    },
    initState$0() {
      this.super$State$initState0();
      this._setupAnimation$0();
    },
    didUpdateWidget$1(oldWidget) {
      var _this = this;
      type$.CupertinoPageTransition._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      if (!B.boolConversionCheck(J.$eq$(oldWidget.primaryRouteAnimation, _this.get$widget().primaryRouteAnimation)) || !B.boolConversionCheck(J.$eq$(oldWidget.secondaryRouteAnimation, _this.get$widget().secondaryRouteAnimation)) || !B.boolConversionCheck(J.$eq$(oldWidget.linearTransition, _this.get$widget().linearTransition))) {
        _this._disposeCurve$0();
        _this._setupAnimation$0();
      }
    },
    dispose$0() {
      this._disposeCurve$0();
      this.super$State$dispose();
    },
    _disposeCurve$0() {
      var _this = this,
        t1 = _this._primaryPositionCurve;
      if (t1 != null)
        t1.dispose$0();
      t1 = _this._secondaryPositionCurve;
      if (t1 != null)
        t1.dispose$0();
      t1 = _this._primaryShadowCurve;
      if (t1 != null)
        t1.dispose$0();
      _this._primaryShadowCurve = _this._secondaryPositionCurve = _this._primaryPositionCurve = null;
    },
    _setupAnimation$0() {
      var t1, t2, _this = this;
      if (!B.boolConversionCheck(_this.get$widget().linearTransition)) {
        _this._primaryPositionCurve = A.CurvedAnimation$(C.C_ThreePointCubic, _this.get$widget().primaryRouteAnimation, C.C_ThreePointCubic.get$flipped());
        _this._secondaryPositionCurve = A.CurvedAnimation$(C.Cubic_0Qt, _this.get$widget().secondaryRouteAnimation, C.Cubic_anB);
        _this._primaryShadowCurve = A.CurvedAnimation$(C.Cubic_0Qt, _this.get$widget().primaryRouteAnimation, null);
      }
      t1 = _this._primaryPositionCurve;
      if (t1 == null)
        t1 = _this.get$widget().primaryRouteAnimation;
      t2 = type$.Offset;
      _this.set$_primaryPositionAnimation(t1.drive$1$1($.$get$_kRightMiddleTween(), t2));
      t1 = _this._secondaryPositionCurve;
      if (t1 == null)
        t1 = _this.get$widget().secondaryRouteAnimation;
      _this.set$_secondaryPositionAnimation(t1.drive$1$1($.$get$_kMiddleLeftTween(), t2));
      t2 = _this._primaryShadowCurve;
      t1 = t2 == null ? _this.get$widget().primaryRouteAnimation : t2;
      _this.set$_primaryShadowAnimation(t1.drive$1$1($.$get$_CupertinoEdgeShadowDecoration_kTween(), type$.Decoration));
    },
    build$1(context) {
      var _this = this,
        textDirection = A.Directionality_of(type$.BuildContext._as(context)),
        t1 = _this.get$_secondaryPositionAnimation(),
        t2 = _this.get$_primaryPositionAnimation(),
        t3 = _this.get$_primaryShadowAnimation();
      return A.SlideTransition$(A.SlideTransition$(A.DecoratedBoxTransition$(_this.get$widget().child, t3), t2, textDirection, true), t1, textDirection, false);
    },
    set$___CupertinoPageTransitionState__primaryPositionAnimation_A(___CupertinoPageTransitionState__primaryPositionAnimation_A) {
      this.___CupertinoPageTransitionState__primaryPositionAnimation_A = type$.Animation_Offset._as(___CupertinoPageTransitionState__primaryPositionAnimation_A);
    },
    set$___CupertinoPageTransitionState__secondaryPositionAnimation_A(___CupertinoPageTransitionState__secondaryPositionAnimation_A) {
      this.___CupertinoPageTransitionState__secondaryPositionAnimation_A = type$.Animation_Offset._as(___CupertinoPageTransitionState__secondaryPositionAnimation_A);
    },
    set$___CupertinoPageTransitionState__primaryShadowAnimation_A(___CupertinoPageTransitionState__primaryShadowAnimation_A) {
      this.___CupertinoPageTransitionState__primaryShadowAnimation_A = type$.Animation_Decoration._as(___CupertinoPageTransitionState__primaryShadowAnimation_A);
    }
  };
  A.CupertinoFullscreenDialogTransition.prototype = {
    createState$0() {
      return A._CupertinoFullscreenDialogTransitionState$();
    }
  };
  A._CupertinoFullscreenDialogTransitionState.prototype = {
    get$_primaryPositionAnimation() {
      return this.___CupertinoFullscreenDialogTransitionState__primaryPositionAnimation_A;
    },
    set$_primaryPositionAnimation(value) {
      this.set$___CupertinoFullscreenDialogTransitionState__primaryPositionAnimation_A(type$.Animation_Offset._as(value));
    },
    get$_secondaryPositionAnimation() {
      return this.___CupertinoFullscreenDialogTransitionState__secondaryPositionAnimation_A;
    },
    set$_secondaryPositionAnimation(value) {
      this.set$___CupertinoFullscreenDialogTransitionState__secondaryPositionAnimation_A(type$.Animation_Offset._as(value));
    },
    initState$0() {
      this.super$State$initState0();
      this._setupAnimation$0();
    },
    didUpdateWidget$1(oldWidget) {
      var _this = this;
      type$.CupertinoFullscreenDialogTransition._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      if (!B.boolConversionCheck(J.$eq$(oldWidget.primaryRouteAnimation, _this.get$widget().primaryRouteAnimation)) || !B.boolConversionCheck(J.$eq$(oldWidget.secondaryRouteAnimation, _this.get$widget().secondaryRouteAnimation)) || !B.boolConversionCheck(J.$eq$(oldWidget.linearTransition, _this.get$widget().linearTransition))) {
        _this._disposeCurve$0();
        _this._setupAnimation$0();
      }
    },
    dispose$0() {
      this._disposeCurve$0();
      this.super$State$dispose();
    },
    _disposeCurve$0() {
      var _this = this,
        t1 = _this._primaryPositionCurve;
      if (t1 != null)
        t1.dispose$0();
      t1 = _this._secondaryPositionCurve;
      if (t1 != null)
        t1.dispose$0();
      _this._secondaryPositionCurve = _this._primaryPositionCurve = null;
    },
    _setupAnimation$0() {
      var t2, _this = this,
        t1 = A.CurvedAnimation$(C.Cubic_0Qt, _this.get$widget().primaryRouteAnimation, C.Cubic_0Qt.get$flipped());
      _this._primaryPositionCurve = t1;
      t2 = type$.Offset;
      _this.set$_primaryPositionAnimation(t1.drive$1$1($.$get$_kBottomUpTween(), t2));
      t1 = B.boolConversionCheck(_this.get$widget().linearTransition) ? _this.get$widget().secondaryRouteAnimation : _this._secondaryPositionCurve = A.CurvedAnimation$(C.Cubic_0Qt, _this.get$widget().secondaryRouteAnimation, C.Cubic_anB);
      _this.set$_secondaryPositionAnimation(t1.drive$1$1($.$get$_kMiddleLeftTween(), t2));
    },
    build$1(context) {
      var textDirection = A.Directionality_of(type$.BuildContext._as(context)),
        t1 = this.get$_secondaryPositionAnimation(),
        t2 = this.get$_primaryPositionAnimation();
      return A.SlideTransition$(A.SlideTransition$(this.get$widget().child, t2, null, true), t1, textDirection, false);
    },
    set$___CupertinoFullscreenDialogTransitionState__primaryPositionAnimation_A(___CupertinoFullscreenDialogTransitionState__primaryPositionAnimation_A) {
      this.___CupertinoFullscreenDialogTransitionState__primaryPositionAnimation_A = type$.Animation_Offset._as(___CupertinoFullscreenDialogTransitionState__primaryPositionAnimation_A);
    },
    set$___CupertinoFullscreenDialogTransitionState__secondaryPositionAnimation_A(___CupertinoFullscreenDialogTransitionState__secondaryPositionAnimation_A) {
      this.___CupertinoFullscreenDialogTransitionState__secondaryPositionAnimation_A = type$.Animation_Offset._as(___CupertinoFullscreenDialogTransitionState__secondaryPositionAnimation_A);
    }
  };
  A._CupertinoBackGestureDetector.prototype = {
    createState$0() {
      return A._CupertinoBackGestureDetectorState$(this.$ti._precomputed1);
    },
    enabledCallback$0() {
      return this.enabledCallback.call$0();
    },
    onStartPopGesture$0() {
      return this.onStartPopGesture.call$0();
    }
  };
  A._CupertinoBackGestureDetectorState.prototype = {
    get$_recognizer() {
      return this.___CupertinoBackGestureDetectorState__recognizer_A;
    },
    set$_recognizer(value) {
      this.___CupertinoBackGestureDetectorState__recognizer_A = type$.HorizontalDragGestureRecognizer._as(value);
    },
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState0();
      t1 = A.HorizontalDragGestureRecognizer$(_this, null);
      t1.set$onStart(_this.get$_handleDragStart());
      t1.set$onUpdate(_this.get$_handleDragUpdate());
      t1.set$onEnd(_this.get$_handleDragEnd());
      t1.set$onCancel(_this.get$_handleDragCancel());
      _this.set$_recognizer(t1);
    },
    dispose$0() {
      var _this = this;
      _this.get$_recognizer().dispose$0();
      if (_this._backGestureController != null)
        E.WidgetsBinding_instance().addPostFrameCallback$1(new A._CupertinoBackGestureDetectorState_dispose_closure(_this));
      _this.super$State$dispose();
    },
    _handleDragStart$1(details) {
      type$.DragStartDetails._as(details);
      this.set$_backGestureController(this.get$widget().onStartPopGesture$0());
    },
    _handleDragUpdate$1(details) {
      var t1, t2, t3;
      type$.DragUpdateDetails._as(details);
      t1 = this._backGestureController;
      t1.toString;
      t2 = details.primaryDelta;
      t2.toString;
      t3 = this.get$context().get$size().get$width();
      if (typeof t2 !== "number")
        return t2.$div();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t1.dragUpdate$1(this._convertToLogical$1(t2 / t3));
    },
    _handleDragEnd$1(details) {
      var t1, t2, t3, _this = this;
      type$.DragEndDetails._as(details);
      t1 = _this._backGestureController;
      t1.toString;
      t2 = details.velocity.pixelsPerSecond.get$dx();
      t3 = _this.get$context().get$size().get$width();
      if (typeof t2 !== "number")
        return t2.$div();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t1.dragEnd$1(_this._convertToLogical$1(t2 / t3));
      _this.set$_backGestureController(null);
    },
    _handleDragCancel$0() {
      var t1 = this._backGestureController;
      if (t1 != null)
        t1.dragEnd$1(0);
      this.set$_backGestureController(null);
    },
    _route$_handlePointerDown$1($event) {
      type$.PointerDownEvent._as($event);
      if (B.boolConversionCheck(this.get$widget().enabledCallback$0()))
        this.get$_recognizer().addPointer$1($event);
    },
    _convertToLogical$1(value) {
      var t1;
      B._asDouble(value);
      switch (A.Directionality_of(this.get$context())) {
        case D.TextDirection_0:
          t1 = -value;
          break;
        case D.TextDirection_1:
          t1 = value;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    build$1(context) {
      var t1, t2, _null = null;
      type$.BuildContext._as(context);
      switch (A.Directionality_of(context)) {
        case D.TextDirection_0:
          t1 = A.MediaQuery_paddingOf(context).right;
          break;
        case D.TextDirection_1:
          t1 = A.MediaQuery_paddingOf(context).left;
          break;
        default:
          t1 = _null;
      }
      t2 = this.get$widget().child;
      t1 = E.max(t1, 20, type$.double);
      return A.Stack$(B._setArrayType([t2, A.PositionedDirectional$(0, A.Listener$(C.HitTestBehavior_2, _null, _null, this.get$_route$_handlePointerDown(), _null, _null), 0, 0, t1)], type$.JSArray_Widget), C.StackFit_2);
    },
    set$_backGestureController(_backGestureController) {
      this._backGestureController = this.$ti._eval$1("_CupertinoBackGestureController<1>?")._as(_backGestureController);
    }
  };
  A._CupertinoBackGestureController.prototype = {
    _CupertinoBackGestureController$4$controller$getIsActive$getIsCurrent$navigator(controller, getIsActive, getIsCurrent, $navigator, $T) {
      this.navigator.didStartUserGesture$0();
    },
    dragUpdate$1(delta) {
      var t1, t2;
      B._asDouble(delta);
      t1 = this.controller;
      t2 = t1.get$value();
      if (typeof t2 !== "number")
        return t2.$sub();
      t1.set$value(t2 - delta);
    },
    dragEnd$1(velocity) {
      var isCurrent, animateForward, t1, t2, animationStatusCallback, _this = this;
      B._asDouble(velocity);
      isCurrent = _this.getIsCurrent.call$0();
      if (!isCurrent)
        animateForward = _this.getIsActive.call$0();
      else if (Math.abs(velocity) >= 1)
        animateForward = velocity <= 0;
      else {
        t1 = _this.controller.get$value();
        if (typeof t1 !== "number")
          return t1.$gt();
        animateForward = t1 > 0.5;
      }
      if (animateForward) {
        t1 = _this.controller;
        t2 = A.lerpDouble(800, 0, t1.get$value());
        t2.toString;
        t1.animateTo$3$curve$duration(1, C.Cubic_irK, E.Duration$(0, E.min(J.floor$0$n(t2), 300, type$.int)));
      } else {
        if (isCurrent)
          _this.navigator.pop$1$0(type$.nullable_Object);
        t1 = _this.controller;
        if (B.boolConversionCheck(t1.get$isAnimating())) {
          t2 = A.lerpDouble(0, 800, t1.get$value());
          t2.toString;
          t1.animateBack$3$curve$duration(0, C.Cubic_irK, E.Duration$(0, J.floor$0$n(t2)));
        }
      }
      if (B.boolConversionCheck(t1.get$isAnimating())) {
        animationStatusCallback = B._Cell$named("animationStatusCallback");
        animationStatusCallback.set$value(new A._CupertinoBackGestureController_dragEnd_closure(_this, animationStatusCallback));
        t1.addStatusListener$1(animationStatusCallback.readLocal$1$0(type$.void_Function_AnimationStatus));
      } else
        _this.navigator.didStopUserGesture$0();
    }
  };
  A._CupertinoEdgeShadowDecoration.prototype = {
    lerpFrom$2(a, t) {
      var t1;
      type$.nullable_Decoration._as(a);
      B._asDouble(t);
      if (a instanceof A._CupertinoEdgeShadowDecoration) {
        t1 = A._CupertinoEdgeShadowDecoration_lerp(a, this, t);
        t1.toString;
        return t1;
      }
      t1 = A._CupertinoEdgeShadowDecoration_lerp(null, this, t);
      t1.toString;
      return t1;
    },
    lerpTo$2(b, t) {
      var t1;
      type$.nullable_Decoration._as(b);
      B._asDouble(t);
      if (b instanceof A._CupertinoEdgeShadowDecoration) {
        t1 = A._CupertinoEdgeShadowDecoration_lerp(this, b, t);
        t1.toString;
        return t1;
      }
      t1 = A._CupertinoEdgeShadowDecoration_lerp(this, null, t);
      t1.toString;
      return t1;
    },
    createBoxPainter$1(onChanged) {
      return A._CupertinoEdgeShadowPainter$(this, type$.nullable_void_Function._as(onChanged));
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A._CupertinoEdgeShadowDecoration && B.boolConversionCheck(J.$eq$(other._route$_colors, this._route$_colors));
    },
    get$hashCode(_) {
      return J.get$hashCode$(this._route$_colors);
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.IterableProperty$("colors", this._route$_colors, D.C__NoDefaultValue, "[]", D.DiagnosticLevel_3, D.DiagnosticsTreeStyle_8, type$.Color));
    }
  };
  A._CupertinoEdgeShadowPainter.prototype = {
    paint$3(canvas, offset, configuration) {
      var colors, t1, t2, shadowWidth, shadowHeight, t3, bandWidth, _0_1, start, t4, _0_2, shadowDirection, bandColorIndex, dx, paint, _null = null;
      type$.Canvas._as(canvas);
      type$.Offset._as(offset);
      type$.ImageConfiguration._as(configuration);
      colors = this._route$_decoration._route$_colors;
      if (colors == null)
        return;
      t1 = configuration.size;
      t2 = t1.get$width();
      if (typeof t2 !== "number")
        return B.iae(t2);
      shadowWidth = 0.05 * t2;
      shadowHeight = t1.get$height();
      t2 = J.getInterceptor$asx(colors);
      t3 = t2.get$length(colors);
      if (typeof t3 !== "number")
        return t3.$sub();
      bandWidth = shadowWidth / (t3 - 1);
      switch (configuration.textDirection.index) {
        case 0:
          t3 = offset.get$dx();
          t1 = t1.get$width();
          if (typeof t3 !== "number")
            return t3.$add();
          if (typeof t1 !== "number")
            return B.iae(t1);
          t1 = new B._Record_2(1, t3 + t1);
          break;
        case 1:
          t1 = new B._Record_2(-1, offset.get$dx());
          break;
        default:
          t1 = _null;
      }
      _0_1 = t1._0;
      t3 = _0_1;
      start = _null;
      t4 = false;
      if (typeof t3 == "number") {
        _0_2 = t1._1;
        t1 = _0_2;
        t1 = typeof t1 == "number";
        if (t1)
          start = _0_2;
        shadowDirection = _0_1;
      } else {
        t1 = t4;
        shadowDirection = _null;
      }
      if (!t1)
        throw B.wrapException(B.StateError$("Pattern matching error"));
      for (bandColorIndex = 0, dx = 0; dx < shadowWidth; ++dx) {
        if (F.JSInt_methods.$tdiv(dx, bandWidth) !== bandColorIndex)
          ++bandColorIndex;
        paint = E.Paint_Paint();
        t1 = A.Color_lerp(t2.$index(colors, bandColorIndex), t2.$index(colors, bandColorIndex + 1), F.JSInt_methods.$mod(dx, bandWidth) / bandWidth);
        t1.toString;
        paint.set$color(t1);
        if (typeof shadowDirection !== "number")
          return shadowDirection.$mul();
        if (typeof start !== "number")
          return start.$add();
        canvas.drawRect$2(E.Rect$fromLTWH(start + shadowDirection * dx - 1, offset.get$dy(), 1, shadowHeight), paint);
      }
    }
  };
  A.CupertinoTextThemeData.prototype = {
    get$textStyle() {
      var t1 = this._textStyle;
      return t1 == null ? this._text_theme$_defaults.get$textStyle() : t1;
    },
    get$actionTextStyle() {
      var t1 = this._actionTextStyle;
      return t1 == null ? this._text_theme$_defaults.actionTextStyle$1$primaryColor(this._primaryColor) : t1;
    },
    get$tabLabelTextStyle() {
      var t1 = this._tabLabelTextStyle;
      return t1 == null ? this._text_theme$_defaults.get$tabLabelTextStyle() : t1;
    },
    get$navTitleTextStyle() {
      var t1 = this._navTitleTextStyle;
      return t1 == null ? this._text_theme$_defaults.get$navTitleTextStyle() : t1;
    },
    get$navLargeTitleTextStyle() {
      var t1 = this._navLargeTitleTextStyle;
      return t1 == null ? this._text_theme$_defaults.get$navLargeTitleTextStyle() : t1;
    },
    get$navActionTextStyle() {
      var t1 = this._navActionTextStyle;
      return t1 == null ? this._text_theme$_defaults.navActionTextStyle$1$primaryColor(this._primaryColor) : t1;
    },
    get$pickerTextStyle() {
      var t1 = this._pickerTextStyle;
      return t1 == null ? this._text_theme$_defaults.get$pickerTextStyle() : t1;
    },
    get$dateTimePickerTextStyle() {
      var t1 = this._dateTimePickerTextStyle;
      return t1 == null ? this._text_theme$_defaults.get$dateTimePickerTextStyle() : t1;
    },
    resolveFrom$1(context) {
      var _this = this;
      type$.BuildContext._as(context);
      return A.CupertinoTextThemeData$_raw(_this._text_theme$_defaults.resolveFrom$1(context), A.CupertinoDynamicColor_maybeResolve(_this._primaryColor, context), A._resolveTextStyle(_this._textStyle, context), A._resolveTextStyle(_this._actionTextStyle, context), A._resolveTextStyle(_this._tabLabelTextStyle, context), A._resolveTextStyle(_this._navTitleTextStyle, context), A._resolveTextStyle(_this._navLargeTitleTextStyle, context), A._resolveTextStyle(_this._navActionTextStyle, context), A._resolveTextStyle(_this._pickerTextStyle, context), A._resolveTextStyle(_this._dateTimePickerTextStyle, context));
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      t1 = type$.TextStyle;
      properties.add$1(0, E.DiagnosticsProperty$("textStyle", _this.get$textStyle(), true, C.CupertinoTextThemeData_YKY.get$textStyle(), _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("actionTextStyle", _this.get$actionTextStyle(), true, C.CupertinoTextThemeData_YKY.get$actionTextStyle(), _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("tabLabelTextStyle", _this.get$tabLabelTextStyle(), true, C.CupertinoTextThemeData_YKY.get$tabLabelTextStyle(), _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("navTitleTextStyle", _this.get$navTitleTextStyle(), true, C.CupertinoTextThemeData_YKY.get$navTitleTextStyle(), _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("navLargeTitleTextStyle", _this.get$navLargeTitleTextStyle(), true, C.CupertinoTextThemeData_YKY.get$navLargeTitleTextStyle(), _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("navActionTextStyle", _this.get$navActionTextStyle(), true, C.CupertinoTextThemeData_YKY.get$navActionTextStyle(), _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("pickerTextStyle", _this.get$pickerTextStyle(), true, C.CupertinoTextThemeData_YKY.get$pickerTextStyle(), _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("dateTimePickerTextStyle", _this.get$dateTimePickerTextStyle(), true, C.CupertinoTextThemeData_YKY.get$dateTimePickerTextStyle(), _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.CupertinoTextThemeData && B.boolConversionCheck(J.$eq$(other._text_theme$_defaults, _this._text_theme$_defaults)) && B.boolConversionCheck(J.$eq$(other._primaryColor, _this._primaryColor)) && B.boolConversionCheck(J.$eq$(other._textStyle, _this._textStyle)) && B.boolConversionCheck(J.$eq$(other._actionTextStyle, _this._actionTextStyle)) && B.boolConversionCheck(J.$eq$(other._tabLabelTextStyle, _this._tabLabelTextStyle)) && B.boolConversionCheck(J.$eq$(other._navTitleTextStyle, _this._navTitleTextStyle)) && B.boolConversionCheck(J.$eq$(other._navLargeTitleTextStyle, _this._navLargeTitleTextStyle)) && B.boolConversionCheck(J.$eq$(other._navActionTextStyle, _this._navActionTextStyle)) && B.boolConversionCheck(J.$eq$(other._pickerTextStyle, _this._pickerTextStyle)) && B.boolConversionCheck(J.$eq$(other._dateTimePickerTextStyle, _this._dateTimePickerTextStyle));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this._text_theme$_defaults, _this._primaryColor, _this._textStyle, _this._actionTextStyle, _this._tabLabelTextStyle, _this._navTitleTextStyle, _this._navLargeTitleTextStyle, _this._navActionTextStyle, _this._pickerTextStyle, _this._dateTimePickerTextStyle, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $isDiagnosticable: 1
  };
  A._TextThemeDefaultsBuilder.prototype = {
    get$textStyle() {
      return A._TextThemeDefaultsBuilder__applyLabelColor(C.TextStyle_cQL, this.labelColor);
    },
    get$tabLabelTextStyle() {
      return A._TextThemeDefaultsBuilder__applyLabelColor(C.TextStyle_ufz, this.inactiveGrayColor);
    },
    get$navTitleTextStyle() {
      return A._TextThemeDefaultsBuilder__applyLabelColor(C.TextStyle_Vnt, this.labelColor);
    },
    get$navLargeTitleTextStyle() {
      return A._TextThemeDefaultsBuilder__applyLabelColor(C.TextStyle_QpY, this.labelColor);
    },
    get$pickerTextStyle() {
      return A._TextThemeDefaultsBuilder__applyLabelColor(C.TextStyle_IJC, this.labelColor);
    },
    get$dateTimePickerTextStyle() {
      return A._TextThemeDefaultsBuilder__applyLabelColor(C.TextStyle_JEl, this.labelColor);
    },
    actionTextStyle$1$primaryColor(primaryColor) {
      return C.TextStyle_gri.copyWith$1$color(type$.nullable_Color._as(primaryColor));
    },
    navActionTextStyle$1$primaryColor(primaryColor) {
      return this.actionTextStyle$1$primaryColor(type$.nullable_Color._as(primaryColor));
    },
    resolveFrom$1(context) {
      var t1, resolvedLabelColor, resolvedInactiveGray;
      type$.BuildContext._as(context);
      t1 = this.labelColor;
      resolvedLabelColor = A.CupertinoDynamicColor_resolve(t1, context);
      resolvedInactiveGray = A.CupertinoDynamicColor_resolve(this.inactiveGrayColor, context);
      return B.boolConversionCheck(resolvedLabelColor.$eq(0, t1)) && B.boolConversionCheck(resolvedInactiveGray.$eq(0, C.CupertinoDynamicColor_MIV)) ? this : A._TextThemeDefaultsBuilder$(resolvedLabelColor, resolvedInactiveGray);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A._TextThemeDefaultsBuilder && B.boolConversionCheck(J.$eq$(other.labelColor, _this.labelColor)) && B.boolConversionCheck(J.$eq$(other.inactiveGrayColor, _this.inactiveGrayColor));
    },
    get$hashCode(_) {
      return B.Object_hash(this.labelColor, this.inactiveGrayColor, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    }
  };
  A._CupertinoTextThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.CupertinoTheme.prototype = {
    build$1(context) {
      var _null = null;
      type$.BuildContext._as(context);
      return A.InheritedCupertinoTheme$(A.IconTheme$(this.child, A.CupertinoIconThemeData$(_null, this.data.get$primaryColor(), _null, _null, _null, _null, _null, _null, _null), _null), this);
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      this.data.debugFillProperties$1(properties);
    }
  };
  A.InheritedCupertinoTheme.prototype = {
    updateShouldNotify$1(oldWidget) {
      type$.InheritedCupertinoTheme._as(oldWidget);
      return !B.boolConversionCheck(J.$eq$(this.theme.data, oldWidget.theme.data));
    }
  };
  A.CupertinoThemeData.prototype = {
    get$primaryColor() {
      var t1 = this.primaryColor;
      return t1 == null ? this._defaults.primaryColor : t1;
    },
    get$primaryContrastingColor() {
      var t1 = this.primaryContrastingColor;
      return t1 == null ? this._defaults.primaryContrastingColor : t1;
    },
    get$textTheme() {
      var t1 = this.textTheme;
      return t1 == null ? this._defaults.textThemeDefaults.createDefaults$1$primaryColor(this.get$primaryColor()) : t1;
    },
    get$barBackgroundColor() {
      var t1 = this.barBackgroundColor;
      return t1 == null ? this._defaults.barBackgroundColor : t1;
    },
    get$scaffoldBackgroundColor() {
      var t1 = this.scaffoldBackgroundColor;
      return t1 == null ? this._defaults.scaffoldBackgroundColor : t1;
    },
    get$applyThemeToAll() {
      var t1 = this.applyThemeToAll;
      return t1 == null ? this._defaults.applyThemeToAll : t1;
    },
    noDefault$0() {
      var _this = this,
        t1 = _this.brightness,
        t2 = _this.primaryColor,
        t3 = _this.primaryContrastingColor,
        t4 = _this.textTheme,
        t5 = _this.barBackgroundColor,
        t6 = _this.scaffoldBackgroundColor;
      return A.NoDefaultCupertinoThemeData$(_this.applyThemeToAll, t5, t1, t2, t3, t6, t4);
    },
    resolveFrom$1(context) {
      var t1, t2, t3, t4, t5, _this = this;
      type$.BuildContext._as(context);
      t1 = new A.CupertinoThemeData_resolveFrom_convertColor(context);
      t2 = _this.get$brightness();
      t3 = t1.call$1(_this.primaryColor);
      t4 = t1.call$1(_this.primaryContrastingColor);
      t5 = _this.textTheme;
      t5 = t5 == null ? null : t5.resolveFrom$1(context);
      return A.CupertinoThemeData$_rawWithDefaults(t2, t3, t4, t5, t1.call$1(_this.barBackgroundColor), t1.call$1(_this.scaffoldBackgroundColor), _this.get$applyThemeToAll(), _this._defaults.resolveFrom$2(context, _this.textTheme == null));
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.EnumProperty$("brightness", _this.get$brightness(), _null, D.DiagnosticLevel_3, type$.Brightness));
      properties.add$1(0, A.createCupertinoColorProperty("primaryColor", _this.get$primaryColor(), C.CupertinoThemeData_niW.get$primaryColor()));
      properties.add$1(0, A.createCupertinoColorProperty("primaryContrastingColor", _this.get$primaryContrastingColor(), C.CupertinoThemeData_niW.get$primaryContrastingColor()));
      properties.add$1(0, A.createCupertinoColorProperty("barBackgroundColor", _this.get$barBackgroundColor(), C.CupertinoThemeData_niW.get$barBackgroundColor()));
      properties.add$1(0, A.createCupertinoColorProperty("scaffoldBackgroundColor", _this.get$scaffoldBackgroundColor(), C.CupertinoThemeData_niW.get$scaffoldBackgroundColor()));
      properties.add$1(0, E.DiagnosticsProperty$("applyThemeToAll", _this.get$applyThemeToAll(), true, C.CupertinoThemeData_niW.get$applyThemeToAll(), _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
      _this.get$textTheme().debugFillProperties$1(properties);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.CupertinoThemeData && B.boolConversionCheck(J.$eq$(other.get$brightness(), _this.get$brightness())) && B.boolConversionCheck(J.$eq$(other.get$primaryColor(), _this.get$primaryColor())) && B.boolConversionCheck(J.$eq$(other.get$primaryContrastingColor(), _this.get$primaryContrastingColor())) && B.boolConversionCheck(J.$eq$(other.get$textTheme(), _this.get$textTheme())) && B.boolConversionCheck(J.$eq$(other.get$barBackgroundColor(), _this.get$barBackgroundColor())) && B.boolConversionCheck(J.$eq$(other.get$scaffoldBackgroundColor(), _this.get$scaffoldBackgroundColor())) && B.boolConversionCheck(J.$eq$(other.get$applyThemeToAll(), _this.get$applyThemeToAll()));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.get$brightness(), _this.get$primaryColor(), _this.get$primaryContrastingColor(), _this.get$textTheme(), _this.get$barBackgroundColor(), _this.get$scaffoldBackgroundColor(), _this.get$applyThemeToAll(), F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $isDiagnosticable: 1
  };
  A.NoDefaultCupertinoThemeData.prototype = {
    noDefault$0() {
      return this;
    },
    resolveFrom$1(context) {
      var t1, t2, t3, t4, t5, t6, _this = this;
      type$.BuildContext._as(context);
      t1 = new A.NoDefaultCupertinoThemeData_resolveFrom_convertColor(context);
      t2 = _this.get$brightness();
      t3 = t1.call$1(_this.get$primaryColor());
      t4 = t1.call$1(_this.get$primaryContrastingColor());
      t5 = _this.get$textTheme();
      t5 = t5 == null ? null : t5.resolveFrom$1(context);
      t6 = t1.call$1(_this.get$barBackgroundColor());
      t1 = t1.call$1(_this.get$scaffoldBackgroundColor());
      return A.NoDefaultCupertinoThemeData$(_this.get$applyThemeToAll(), t6, t2, t3, t4, t1, t5);
    },
    get$brightness() {
      return this.brightness;
    },
    get$primaryColor() {
      return this.primaryColor;
    },
    get$primaryContrastingColor() {
      return this.primaryContrastingColor;
    },
    get$textTheme() {
      return this.textTheme;
    },
    get$barBackgroundColor() {
      return this.barBackgroundColor;
    },
    get$scaffoldBackgroundColor() {
      return this.scaffoldBackgroundColor;
    },
    get$applyThemeToAll() {
      return this.applyThemeToAll;
    }
  };
  A._CupertinoThemeDefaults.prototype = {
    resolveFrom$2(context, resolveTextTheme) {
      var t1, t2, t3, t4, t5, _this = this;
      type$.BuildContext._as(context);
      B._asBool(resolveTextTheme);
      t1 = new A._CupertinoThemeDefaults_resolveFrom_convertColor(context);
      t2 = t1.call$1(_this.primaryColor);
      t3 = t1.call$1(_this.primaryContrastingColor);
      t4 = t1.call$1(_this.barBackgroundColor);
      t1 = t1.call$1(_this.scaffoldBackgroundColor);
      t5 = _this.textThemeDefaults;
      if (resolveTextTheme)
        t5 = t5.resolveFrom$1(context);
      return A._CupertinoThemeDefaults$(_this.brightness, t2, t3, t4, t1, _this.applyThemeToAll, t5);
    }
  };
  A._CupertinoTextThemeDefaults.prototype = {
    resolveFrom$1(context) {
      type$.BuildContext._as(context);
      return A._CupertinoTextThemeDefaults$(A.CupertinoDynamicColor_resolve(this.labelColor, context), A.CupertinoDynamicColor_resolve(this.inactiveGray, context));
    },
    createDefaults$1$primaryColor(primaryColor) {
      return A._DefaultCupertinoTextThemeData$(this.inactiveGray, this.labelColor, type$.Color._as(primaryColor));
    }
  };
  A._DefaultCupertinoTextThemeData.prototype = {
    get$textStyle() {
      return A.CupertinoTextThemeData.prototype.get$textStyle.call(this).copyWith$1$color(this.labelColor);
    },
    get$tabLabelTextStyle() {
      return A.CupertinoTextThemeData.prototype.get$tabLabelTextStyle.call(this).copyWith$1$color(this.inactiveGray);
    },
    get$navTitleTextStyle() {
      return A.CupertinoTextThemeData.prototype.get$navTitleTextStyle.call(this).copyWith$1$color(this.labelColor);
    },
    get$navLargeTitleTextStyle() {
      return A.CupertinoTextThemeData.prototype.get$navLargeTitleTextStyle.call(this).copyWith$1$color(this.labelColor);
    },
    get$pickerTextStyle() {
      return A.CupertinoTextThemeData.prototype.get$pickerTextStyle.call(this).copyWith$1$color(this.labelColor);
    },
    get$dateTimePickerTextStyle() {
      return A.CupertinoTextThemeData.prototype.get$dateTimePickerTextStyle.call(this).copyWith$1$color(this.labelColor);
    }
  };
  A._CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.ValueListenable.prototype = {};
  A._MergingListenable.prototype = {
    addListener$1(listener) {
      var t1, t2;
      type$.void_Function._as(listener);
      for (t1 = J.get$iterator$ax(this._change_notifier$_children); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        if (t2 != null)
          t2.addListener$1(listener);
      }
    },
    removeListener$1(listener) {
      var t1, t2;
      type$.void_Function._as(listener);
      for (t1 = J.get$iterator$ax(this._change_notifier$_children); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        if (t2 != null)
          t2.removeListener$1(listener);
      }
    },
    toString$0(_) {
      return "Listenable.merge([" + B.S(J.join$1$ax(this._change_notifier$_children, ", ")) + "])";
    }
  };
  A.FlagsSummary.prototype = {
    get$value() {
      var t1 = E.DiagnosticsProperty.prototype.get$value.call(this);
      t1.toString;
      return t1;
    },
    valueToString$1$parentConfiguration(parentConfiguration) {
      var t1, formattedValues, _this = this;
      type$.nullable_TextTreeConfiguration._as(parentConfiguration);
      if (!B.boolConversionCheck(_this._hasNonNullEntry$0()) && _this.ifEmpty != null) {
        t1 = _this.ifEmpty;
        t1.toString;
        return t1;
      }
      formattedValues = _this._formattedValues$0();
      if (parentConfiguration != null && !B.boolConversionCheck(parentConfiguration.lineBreakProperties))
        return "[" + B.S(J.join$1$ax(formattedValues, ", ")) + "]";
      return J.join$1$ax(formattedValues, B.boolConversionCheck(E._isSingleLine(_this.style)) ? ", " : "\n");
    },
    get$level() {
      if (!B.boolConversionCheck(this._hasNonNullEntry$0()) && this.ifEmpty == null)
        return D.DiagnosticLevel_0;
      return E.DiagnosticsProperty.prototype.get$level.call(this);
    },
    _hasNonNullEntry$0() {
      return J.any$1$ax(this.get$value().get$values(), new A.FlagsSummary__hasNonNullEntry_closure(this));
    },
    _formattedValues$0() {
      return J.map$1$1$ax(J.where$1$ax(this.get$value().get$entries(), new A.FlagsSummary__formattedValues_closure(this)), new A.FlagsSummary__formattedValues_closure0(this), type$.String);
    }
  };
  A.ObserverList.prototype = {
    get$_observer_list$_set() {
      var result,
        value = this.__ObserverList__set_FI;
      if (B.boolConversionCheck(E.isSentinel(value))) {
        result = B.HashSet_HashSet(this.$ti._precomputed1);
        value !== $ && B.throwLateFieldADI("_set");
        this.set$__ObserverList__set_FI(result);
        value = result;
      }
      return value;
    },
    add$1(_, item) {
      this.$ti._precomputed1._as(item);
      this._observer_list$_isDirty = true;
      J.add$1$ax(this._list, item);
    },
    remove$1(_, item) {
      var _this = this;
      _this.$ti._precomputed1._as(item);
      _this._observer_list$_isDirty = true;
      J.clear$0$ax(_this.get$_observer_list$_set());
      return J.remove$1$ax(_this._list, item);
    },
    clear$0(_) {
      this._observer_list$_isDirty = false;
      J.clear$0$ax(this._list);
      J.clear$0$ax(this.get$_observer_list$_set());
    },
    contains$1(_, element) {
      var _this = this,
        t1 = _this._list,
        t2 = J.getInterceptor$asx(t1),
        t3 = t2.get$length(t1);
      if (typeof t3 !== "number")
        return t3.$lt();
      if (t3 < 3)
        return t2.contains$1(t1, element);
      if (B.boolConversionCheck(_this._observer_list$_isDirty)) {
        J.addAll$1$ax(_this.get$_observer_list$_set(), t1);
        _this._observer_list$_isDirty = false;
      }
      return J.contains$1$asx(_this.get$_observer_list$_set(), element);
    },
    get$iterator(_) {
      return J.get$iterator$ax(this._list);
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this._list);
    },
    get$isNotEmpty(_) {
      return J.get$isNotEmpty$asx(this._list);
    },
    toList$1$growable(_, growable) {
      return J.toList$1$growable$ax(this._list, B._asBool(growable));
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    },
    set$__ObserverList__set_FI(__ObserverList__set_FI) {
      this.__ObserverList__set_FI = this.$ti._eval$1("HashSet<1>")._as(__ObserverList__set_FI);
    }
  };
  A.GestureArenaMember.prototype = {};
  A.DragDownDetails.prototype = {
    toString$0(_) {
      return B.S(E.objectRuntimeType(this, "DragDownDetails")) + "(" + B.S(this.globalPosition) + ")";
    }
  };
  A.DragStartDetails.prototype = {
    toString$0(_) {
      return B.S(E.objectRuntimeType(this, "DragStartDetails")) + "(" + B.S(this.globalPosition) + ")";
    }
  };
  A.DragUpdateDetails.prototype = {
    toString$0(_) {
      return B.S(E.objectRuntimeType(this, "DragUpdateDetails")) + "(" + B.S(this.delta) + ")";
    }
  };
  A.DragEndDetails.prototype = {
    toString$0(_) {
      return B.S(E.objectRuntimeType(this, "DragEndDetails")) + "(" + B.S(this.velocity) + ")";
    }
  };
  A.LongPressDownDetails.prototype = {};
  A.LongPressStartDetails.prototype = {};
  A.LongPressMoveUpdateDetails.prototype = {};
  A.LongPressEndDetails.prototype = {};
  A.LongPressGestureRecognizer.prototype = {
    isPointerAllowed$1($event) {
      var _this = this;
      type$.PointerDownEvent._as($event);
      switch ($event.get$buttons()) {
        case 1:
          if (_this.onLongPressDown == null && _this.onLongPressCancel == null && _this.onLongPressStart == null && _this.onLongPress == null && _this.onLongPressMoveUpdate == null && _this.onLongPressEnd == null && _this.onLongPressUp == null)
            return false;
          break;
        case 2:
          if (_this.onSecondaryLongPressDown == null && _this.onSecondaryLongPressCancel == null && _this.onSecondaryLongPressStart == null && _this.onSecondaryLongPress == null && _this.onSecondaryLongPressMoveUpdate == null && _this.onSecondaryLongPressEnd == null && _this.onSecondaryLongPressUp == null)
            return false;
          break;
        case 4:
          if (_this.onTertiaryLongPressDown == null && _this.onTertiaryLongPressCancel == null && _this.onTertiaryLongPressStart == null && _this.onTertiaryLongPress == null && _this.onTertiaryLongPressMoveUpdate == null && _this.onTertiaryLongPressEnd == null && _this.onTertiaryLongPressUp == null)
            return false;
          break;
        default:
          return false;
      }
      return _this.super$GestureRecognizer$isPointerAllowed($event);
    },
    didExceedDeadline$0() {
      var t1, _this = this;
      _this.resolve$1(D.GestureDisposition_0);
      _this._longPressAccepted = true;
      t1 = _this.get$primaryPointer();
      t1.toString;
      _this.super$PrimaryPointerGestureRecognizer$acceptGesture(t1);
      _this._checkLongPressStart$0();
    },
    handlePrimaryPointer$1($event) {
      var t1, _this = this;
      type$.PointerEvent._as($event);
      if (!B.boolConversionCheck($event.get$synthesized())) {
        if (type$.PointerDownEvent._is($event)) {
          t1 = A.VelocityTracker$withKind($event.get$kind());
          _this._velocityTracker = t1;
          t1.addPosition$2($event.get$timeStamp(), $event.get$localPosition());
        }
        if (type$.PointerMoveEvent._is($event)) {
          t1 = _this._velocityTracker;
          t1.toString;
          t1.addPosition$2($event.get$timeStamp(), $event.get$localPosition());
        }
      }
      if (type$.PointerUpEvent._is($event)) {
        if (B.boolConversionCheck(_this._longPressAccepted))
          _this._checkLongPressEnd$1($event);
        else
          _this.resolve$1(D.GestureDisposition_1);
        _this._reset$0();
      } else if (type$.PointerCancelEvent._is($event)) {
        _this._checkLongPressCancel$0();
        _this._reset$0();
      } else if (type$.PointerDownEvent._is($event)) {
        _this._longPressOrigin = A.OffsetPair$fromEventPosition($event);
        _this.set$_long_press$_initialButtons($event.get$buttons());
        _this._checkLongPressDown$1($event);
      } else if (type$.PointerMoveEvent._is($event))
        if (!B.boolConversionCheck(J.$eq$($event.get$buttons(), _this._long_press$_initialButtons)) && !B.boolConversionCheck(_this._longPressAccepted)) {
          _this.resolve$1(D.GestureDisposition_1);
          t1 = _this.get$primaryPointer();
          t1.toString;
          _this.stopTrackingPointer$1(t1);
        } else if (B.boolConversionCheck(_this._longPressAccepted))
          _this._checkLongPressMoveUpdate$1($event);
    },
    _checkLongPressDown$1($event) {
      var t1, t2, details, _this = this;
      type$.PointerDownEvent._as($event);
      t1 = _this._longPressOrigin;
      t2 = t1.global;
      t1 = t1.local;
      details = A.LongPressDownDetails$(t2, _this.getKindForPointer$1($event.get$pointer()), t1);
      switch (_this._long_press$_initialButtons) {
        case 1:
          if (_this.onLongPressDown != null)
            _this.invokeCallback$1$2("onLongPressDown", new A.LongPressGestureRecognizer__checkLongPressDown_closure(_this, details), type$.void);
          break;
        case 2:
          if (_this.onSecondaryLongPressDown != null)
            _this.invokeCallback$1$2("onSecondaryLongPressDown", new A.LongPressGestureRecognizer__checkLongPressDown_closure0(_this, details), type$.void);
          break;
        case 4:
          if (_this.onTertiaryLongPressDown != null)
            _this.invokeCallback$1$2("onTertiaryLongPressDown", new A.LongPressGestureRecognizer__checkLongPressDown_closure1(_this, details), type$.void);
          break;
      }
    },
    _checkLongPressCancel$0() {
      var t1, _this = this;
      if (B.boolConversionCheck(J.$eq$(_this.get$state(), C.GestureRecognizerState_1)))
        switch (_this._long_press$_initialButtons) {
          case 1:
            t1 = _this.onLongPressCancel;
            if (t1 != null)
              _this.invokeCallback$1$2("onLongPressCancel", t1, type$.void);
            break;
          case 2:
            t1 = _this.onSecondaryLongPressCancel;
            if (t1 != null)
              _this.invokeCallback$1$2("onSecondaryLongPressCancel", t1, type$.void);
            break;
          case 4:
            t1 = _this.onTertiaryLongPressCancel;
            if (t1 != null)
              _this.invokeCallback$1$2("onTertiaryLongPressCancel", t1, type$.void);
            break;
        }
    },
    _checkLongPressStart$0() {
      var t1, _this = this;
      switch (_this._long_press$_initialButtons) {
        case 1:
          if (_this.onLongPressStart != null) {
            t1 = _this._longPressOrigin;
            _this.invokeCallback$1$2("onLongPressStart", new A.LongPressGestureRecognizer__checkLongPressStart_closure(_this, A.LongPressStartDetails$(t1.global, t1.local)), type$.void);
          }
          t1 = _this.onLongPress;
          if (t1 != null)
            _this.invokeCallback$1$2("onLongPress", t1, type$.void);
          break;
        case 2:
          if (_this.onSecondaryLongPressStart != null) {
            t1 = _this._longPressOrigin;
            _this.invokeCallback$1$2("onSecondaryLongPressStart", new A.LongPressGestureRecognizer__checkLongPressStart_closure0(_this, A.LongPressStartDetails$(t1.global, t1.local)), type$.void);
          }
          t1 = _this.onSecondaryLongPress;
          if (t1 != null)
            _this.invokeCallback$1$2("onSecondaryLongPress", t1, type$.void);
          break;
        case 4:
          if (_this.onTertiaryLongPressStart != null) {
            t1 = _this._longPressOrigin;
            _this.invokeCallback$1$2("onTertiaryLongPressStart", new A.LongPressGestureRecognizer__checkLongPressStart_closure1(_this, A.LongPressStartDetails$(t1.global, t1.local)), type$.void);
          }
          t1 = _this.onTertiaryLongPress;
          if (t1 != null)
            _this.invokeCallback$1$2("onTertiaryLongPress", t1, type$.void);
          break;
      }
    },
    _checkLongPressMoveUpdate$1($event) {
      var t1, t2, t3, details, _this = this;
      type$.PointerEvent._as($event);
      t1 = $event.get$position();
      t2 = $event.get$localPosition();
      t3 = J.$sub$n($event.get$position(), _this._longPressOrigin.global);
      details = A.LongPressMoveUpdateDetails$(t1, J.$sub$n($event.get$localPosition(), _this._longPressOrigin.local), t2, t3);
      switch (_this._long_press$_initialButtons) {
        case 1:
          if (_this.onLongPressMoveUpdate != null)
            _this.invokeCallback$1$2("onLongPressMoveUpdate", new A.LongPressGestureRecognizer__checkLongPressMoveUpdate_closure(_this, details), type$.void);
          break;
        case 2:
          if (_this.onSecondaryLongPressMoveUpdate != null)
            _this.invokeCallback$1$2("onSecondaryLongPressMoveUpdate", new A.LongPressGestureRecognizer__checkLongPressMoveUpdate_closure0(_this, details), type$.void);
          break;
        case 4:
          if (_this.onTertiaryLongPressMoveUpdate != null)
            _this.invokeCallback$1$2("onTertiaryLongPressMoveUpdate", new A.LongPressGestureRecognizer__checkLongPressMoveUpdate_closure1(_this, details), type$.void);
          break;
      }
    },
    _checkLongPressEnd$1($event) {
      var estimate, velocity, details, t1, _this = this;
      type$.PointerEvent._as($event);
      estimate = _this._velocityTracker.getVelocityEstimate$0();
      velocity = estimate == null ? C.Velocity_Offset_0_0 : A.Velocity$(estimate.pixelsPerSecond);
      details = A.LongPressEndDetails$($event.get$position(), $event.get$localPosition(), velocity);
      _this._velocityTracker = null;
      switch (_this._long_press$_initialButtons) {
        case 1:
          if (_this.onLongPressEnd != null)
            _this.invokeCallback$1$2("onLongPressEnd", new A.LongPressGestureRecognizer__checkLongPressEnd_closure(_this, details), type$.void);
          t1 = _this.onLongPressUp;
          if (t1 != null)
            _this.invokeCallback$1$2("onLongPressUp", t1, type$.void);
          break;
        case 2:
          if (_this.onSecondaryLongPressEnd != null)
            _this.invokeCallback$1$2("onSecondaryLongPressEnd", new A.LongPressGestureRecognizer__checkLongPressEnd_closure0(_this, details), type$.void);
          t1 = _this.onSecondaryLongPressUp;
          if (t1 != null)
            _this.invokeCallback$1$2("onSecondaryLongPressUp", t1, type$.void);
          break;
        case 4:
          if (_this.onTertiaryLongPressEnd != null)
            _this.invokeCallback$1$2("onTertiaryLongPressEnd", new A.LongPressGestureRecognizer__checkLongPressEnd_closure1(_this, details), type$.void);
          t1 = _this.onTertiaryLongPressUp;
          if (t1 != null)
            _this.invokeCallback$1$2("onTertiaryLongPressUp", t1, type$.void);
          break;
      }
    },
    _reset$0() {
      var _this = this;
      _this._longPressAccepted = false;
      _this._velocityTracker = _this._long_press$_initialButtons = _this._longPressOrigin = null;
    },
    resolve$1(disposition) {
      var _this = this;
      type$.GestureDisposition._as(disposition);
      if (disposition === D.GestureDisposition_1)
        if (B.boolConversionCheck(_this._longPressAccepted))
          _this._reset$0();
        else
          _this._checkLongPressCancel$0();
      _this.super$OneSequenceGestureRecognizer$resolve(disposition);
    },
    acceptGesture$1(pointer) {
      B._asInt(pointer);
    },
    get$debugDescription() {
      return "long press";
    },
    set$_long_press$_initialButtons(_initialButtons) {
      this._long_press$_initialButtons = B._asIntQ(_initialButtons);
    },
    set$onLongPressDown(onLongPressDown) {
      this.onLongPressDown = type$.nullable_void_Function_LongPressDownDetails._as(onLongPressDown);
    },
    set$onLongPressCancel(onLongPressCancel) {
      this.onLongPressCancel = type$.nullable_void_Function._as(onLongPressCancel);
    },
    set$onLongPress(onLongPress) {
      this.onLongPress = type$.nullable_void_Function._as(onLongPress);
    },
    set$onLongPressStart(onLongPressStart) {
      this.onLongPressStart = type$.nullable_void_Function_LongPressStartDetails._as(onLongPressStart);
    },
    set$onLongPressMoveUpdate(onLongPressMoveUpdate) {
      this.onLongPressMoveUpdate = type$.nullable_void_Function_LongPressMoveUpdateDetails._as(onLongPressMoveUpdate);
    },
    set$onLongPressUp(onLongPressUp) {
      this.onLongPressUp = type$.nullable_void_Function._as(onLongPressUp);
    },
    set$onLongPressEnd(onLongPressEnd) {
      this.onLongPressEnd = type$.nullable_void_Function_LongPressEndDetails._as(onLongPressEnd);
    },
    set$onSecondaryLongPressDown(onSecondaryLongPressDown) {
      this.onSecondaryLongPressDown = type$.nullable_void_Function_LongPressDownDetails._as(onSecondaryLongPressDown);
    },
    set$onSecondaryLongPressCancel(onSecondaryLongPressCancel) {
      this.onSecondaryLongPressCancel = type$.nullable_void_Function._as(onSecondaryLongPressCancel);
    },
    set$onSecondaryLongPress(onSecondaryLongPress) {
      this.onSecondaryLongPress = type$.nullable_void_Function._as(onSecondaryLongPress);
    },
    set$onSecondaryLongPressStart(onSecondaryLongPressStart) {
      this.onSecondaryLongPressStart = type$.nullable_void_Function_LongPressStartDetails._as(onSecondaryLongPressStart);
    },
    set$onSecondaryLongPressMoveUpdate(onSecondaryLongPressMoveUpdate) {
      this.onSecondaryLongPressMoveUpdate = type$.nullable_void_Function_LongPressMoveUpdateDetails._as(onSecondaryLongPressMoveUpdate);
    },
    set$onSecondaryLongPressUp(onSecondaryLongPressUp) {
      this.onSecondaryLongPressUp = type$.nullable_void_Function._as(onSecondaryLongPressUp);
    },
    set$onSecondaryLongPressEnd(onSecondaryLongPressEnd) {
      this.onSecondaryLongPressEnd = type$.nullable_void_Function_LongPressEndDetails._as(onSecondaryLongPressEnd);
    },
    set$onTertiaryLongPressDown(onTertiaryLongPressDown) {
      this.onTertiaryLongPressDown = type$.nullable_void_Function_LongPressDownDetails._as(onTertiaryLongPressDown);
    },
    set$onTertiaryLongPressCancel(onTertiaryLongPressCancel) {
      this.onTertiaryLongPressCancel = type$.nullable_void_Function._as(onTertiaryLongPressCancel);
    },
    set$onTertiaryLongPress(onTertiaryLongPress) {
      this.onTertiaryLongPress = type$.nullable_void_Function._as(onTertiaryLongPress);
    },
    set$onTertiaryLongPressStart(onTertiaryLongPressStart) {
      this.onTertiaryLongPressStart = type$.nullable_void_Function_LongPressStartDetails._as(onTertiaryLongPressStart);
    },
    set$onTertiaryLongPressMoveUpdate(onTertiaryLongPressMoveUpdate) {
      this.onTertiaryLongPressMoveUpdate = type$.nullable_void_Function_LongPressMoveUpdateDetails._as(onTertiaryLongPressMoveUpdate);
    },
    set$onTertiaryLongPressUp(onTertiaryLongPressUp) {
      this.onTertiaryLongPressUp = type$.nullable_void_Function._as(onTertiaryLongPressUp);
    },
    set$onTertiaryLongPressEnd(onTertiaryLongPressEnd) {
      this.onTertiaryLongPressEnd = type$.nullable_void_Function_LongPressEndDetails._as(onTertiaryLongPressEnd);
    }
  };
  A._Vector.prototype = {
    $index(_, i) {
      var t1;
      B._asInt(i);
      t1 = this._lsq_solver$_offset;
      if (typeof t1 !== "number")
        return B.iae(t1);
      return J.$index$asx(this._lsq_solver$_elements, i + t1);
    },
    $indexSet(_, i, value) {
      var t1;
      B._asInt(i);
      B._asDouble(value);
      t1 = this._lsq_solver$_offset;
      if (typeof t1 !== "number")
        return B.iae(t1);
      J.$indexSet$ax(this._lsq_solver$_elements, i + t1, value);
    },
    $mul(_, a) {
      var t1, result, i, t2, t3;
      type$._Vector._as(a);
      t1 = this._lsq_solver$_length;
      if (typeof t1 !== "number")
        return B.iae(t1);
      result = 0;
      i = 0;
      for (; i < t1; ++i) {
        t2 = this.$index(0, i);
        t3 = a.$index(0, i);
        if (typeof t2 !== "number")
          return t2.$mul();
        if (typeof t3 !== "number")
          return B.iae(t3);
        result += t2 * t3;
      }
      return result;
    },
    norm$0() {
      return E.sqrt(this.$mul(0, this));
    }
  };
  A._Matrix.prototype = {
    $get$2(row, col) {
      var t1;
      B._asInt(row);
      B._asInt(col);
      t1 = this._columns;
      if (typeof t1 !== "number")
        return B.iae(t1);
      return J.$index$asx(this._lsq_solver$_elements, row * t1 + col);
    },
    $set$3(row, col, value) {
      var t1;
      B._asInt(row);
      B._asInt(col);
      B._asDouble(value);
      t1 = this._columns;
      if (typeof t1 !== "number")
        return B.iae(t1);
      J.$indexSet$ax(this._lsq_solver$_elements, row * t1 + col, value);
    },
    getRow$1(row) {
      var t1;
      B._asInt(row);
      t1 = this._columns;
      if (typeof t1 !== "number")
        return B.iae(t1);
      return A._Vector$fromVOL(this._lsq_solver$_elements, row * t1, t1);
    }
  };
  A.PolynomialFit.prototype = {
    get$confidence() {
      return this.__PolynomialFit_confidence_A;
    },
    set$confidence(value) {
      this.__PolynomialFit_confidence_A = B._asDouble(value);
    },
    toString$0(_) {
      var coefficientString = J.toString$0$(J.toList$0$ax(J.map$1$1$ax(this.coefficients, new A.PolynomialFit_toString_closure(), type$.String)));
      return B.S(E.objectRuntimeType(this, "PolynomialFit")) + "(" + coefficientString + ", confidence: " + B.S(J.toStringAsFixed$1$n(this.get$confidence(), 3)) + ")";
    }
  };
  A.LeastSquaresSolver.prototype = {
    solve$1(degree) {
      var t1, t2, t3, result, m, n, a, t4, h, i, t5, t6, q, r, j, dot, norm, inverseNorm, wy, t7, t8, i0, t9, t10, t11, yMean, sumSquaredError, sumSquaredTotal, err, term, v;
      B._asInt(degree);
      t1 = this.x;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.get$length(t1);
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (degree > t3)
        return null;
      result = A.PolynomialFit$(degree);
      m = t2.get$length(t1);
      n = degree + 1;
      a = A._Matrix$(n, m);
      for (t3 = this.w, t4 = J.getInterceptor$asx(t3), h = 0; h < m; ++h) {
        a.$set$3(0, h, t4.$index(t3, h));
        for (i = 1; i < n; ++i) {
          t5 = a.$get$2(i - 1, h);
          t6 = t2.$index(t1, h);
          if (typeof t5 !== "number")
            return t5.$mul();
          if (typeof t6 !== "number")
            return B.iae(t6);
          a.$set$3(i, h, t5 * t6);
        }
      }
      q = A._Matrix$(n, m);
      r = A._Matrix$(n, n);
      for (j = 0; j < n; ++j) {
        for (h = 0; h < m; ++h)
          q.$set$3(j, h, a.$get$2(j, h));
        for (i = 0; i < j; ++i) {
          dot = J.$mul$ns(q.getRow$1(j), q.getRow$1(i));
          for (h = 0; h < m; ++h) {
            t5 = q.$get$2(j, h);
            t6 = q.$get$2(i, h);
            if (typeof t6 !== "number")
              return B.iae(t6);
            if (typeof t5 !== "number")
              return t5.$sub();
            q.$set$3(j, h, t5 - dot * t6);
          }
        }
        norm = q.getRow$1(j).norm$0();
        if (norm < 1e-10)
          return null;
        inverseNorm = 1 / norm;
        for (h = 0; h < m; ++h) {
          t5 = q.$get$2(j, h);
          if (typeof t5 !== "number")
            return t5.$mul();
          q.$set$3(j, h, t5 * inverseNorm);
        }
        for (i = 0; i < n; ++i)
          r.$set$3(j, i, i < j ? 0 : J.$mul$ns(q.getRow$1(j), a.getRow$1(i)));
      }
      wy = A._Vector$(m);
      for (t5 = this.y, t6 = J.getInterceptor$asx(t5), h = 0; h < m; ++h) {
        t7 = t6.$index(t5, h);
        t8 = t4.$index(t3, h);
        if (typeof t7 !== "number")
          return t7.$mul();
        if (typeof t8 !== "number")
          return B.iae(t8);
        wy.$indexSet(0, h, t7 * t8);
      }
      for (i = n - 1, t7 = result.coefficients, t8 = J.getInterceptor$asx(t7), i0 = i; i0 >= 0; --i0) {
        t8.$indexSet(t7, i0, J.$mul$ns(q.getRow$1(i0), wy));
        for (j = i; j > i0; --j) {
          t9 = t8.$index(t7, i0);
          t10 = r.$get$2(i0, j);
          t11 = t8.$index(t7, j);
          if (typeof t10 !== "number")
            return t10.$mul();
          if (typeof t11 !== "number")
            return B.iae(t11);
          if (typeof t9 !== "number")
            return t9.$sub();
          t8.$indexSet(t7, i0, t9 - t10 * t11);
        }
        t9 = t8.$index(t7, i0);
        t10 = r.$get$2(i0, i0);
        if (typeof t9 !== "number")
          return t9.$div();
        if (typeof t10 !== "number")
          return B.iae(t10);
        t8.$indexSet(t7, i0, t9 / t10);
      }
      for (yMean = 0, h = 0; h < m; ++h) {
        t9 = t6.$index(t5, h);
        if (typeof t9 !== "number")
          return B.iae(t9);
        yMean += t9;
      }
      yMean /= m;
      for (sumSquaredError = 0, sumSquaredTotal = 0, h = 0; h < m; ++h) {
        t9 = t6.$index(t5, h);
        t10 = t8.$index(t7, 0);
        if (typeof t9 !== "number")
          return t9.$sub();
        if (typeof t10 !== "number")
          return B.iae(t10);
        err = t9 - t10;
        for (term = 1, i = 1; i < n; ++i) {
          t9 = t2.$index(t1, h);
          if (typeof t9 !== "number")
            return B.iae(t9);
          term *= t9;
          t9 = t8.$index(t7, i);
          if (typeof t9 !== "number")
            return B.iae(t9);
          err -= term * t9;
        }
        t9 = t4.$index(t3, h);
        t10 = t4.$index(t3, h);
        if (typeof t9 !== "number")
          return t9.$mul();
        if (typeof t10 !== "number")
          return B.iae(t10);
        sumSquaredError += t9 * t10 * err * err;
        t10 = t6.$index(t5, h);
        if (typeof t10 !== "number")
          return t10.$sub();
        v = t10 - yMean;
        t10 = t4.$index(t3, h);
        t9 = t4.$index(t3, h);
        if (typeof t10 !== "number")
          return t10.$mul();
        if (typeof t9 !== "number")
          return B.iae(t9);
        sumSquaredTotal += t10 * t9 * v * v;
      }
      result.set$confidence(sumSquaredTotal <= 1e-10 ? 1 : 1 - sumSquaredError / sumSquaredTotal);
      return result;
    }
  };
  A._DragState.prototype = {
    _enumToString$0() {
      return "_DragState." + B.S(this._core$_name);
    }
  };
  A.DragGestureRecognizer.prototype = {
    get$_initialPosition() {
      return this.__DragGestureRecognizer__initialPosition_A;
    },
    set$_initialPosition(value) {
      this.__DragGestureRecognizer__initialPosition_A = type$.OffsetPair._as(value);
    },
    get$_pendingDragOffset() {
      return this.__DragGestureRecognizer__pendingDragOffset_A;
    },
    set$_pendingDragOffset(value) {
      this.__DragGestureRecognizer__pendingDragOffset_A = type$.OffsetPair._as(value);
    },
    get$_finalPosition() {
      return this.__DragGestureRecognizer__finalPosition_A;
    },
    set$_finalPosition(value) {
      this.__DragGestureRecognizer__finalPosition_A = type$.OffsetPair._as(value);
    },
    get$_globalDistanceMoved() {
      return this.__DragGestureRecognizer__globalDistanceMoved_A;
    },
    set$_globalDistanceMoved(value) {
      this.__DragGestureRecognizer__globalDistanceMoved_A = B._asDouble(value);
    },
    _getPrimaryDragAxis$0() {
      return null;
    },
    isPointerAllowed$1($event) {
      var _this = this;
      type$.PointerEvent._as($event);
      if (_this._initialButtons == null) {
        if (_this.onDown == null && _this.onStart == null && _this.onUpdate == null && _this.onEnd == null && _this.onCancel == null)
          return false;
      } else if (!B.boolConversionCheck(J.$eq$($event.get$buttons(), _this._initialButtons)))
        return false;
      return _this.super$GestureRecognizer$isPointerAllowed(type$.PointerDownEvent._as($event));
    },
    _addPointer$1($event) {
      var _this = this;
      type$.PointerEvent._as($event);
      J.$indexSet$ax(_this._velocityTrackers, $event.get$pointer(), A.DragGestureRecognizer__defaultBuilder($event));
      switch (_this._monodrag$_state) {
        case C._DragState_0:
          _this._monodrag$_state = C._DragState_1;
          _this.set$_initialPosition(A.OffsetPair$($event.get$position(), $event.get$localPosition()));
          _this.set$_finalPosition(_this.get$_initialPosition());
          _this.set$_pendingDragOffset(C.OffsetPair_TcR);
          _this.set$_globalDistanceMoved(0);
          _this.set$_lastPendingEventTimestamp($event.get$timeStamp());
          _this.set$_monodrag$_lastTransform($event.get$transform());
          _this._checkDown$0();
          break;
        case C._DragState_1:
          break;
        case C._DragState_2:
          _this.resolve$1(D.GestureDisposition_0);
          break;
      }
    },
    addAllowedPointer$1($event) {
      var _this = this;
      type$.PointerDownEvent._as($event);
      _this.super$OneSequenceGestureRecognizer$addAllowedPointer($event);
      if (B.boolConversionCheck(J.$eq$(_this._monodrag$_state, C._DragState_0)))
        _this.set$_initialButtons($event.get$buttons());
      _this._addPointer$1($event);
    },
    addAllowedPointerPanZoom$1($event) {
      var _this = this;
      type$.PointerPanZoomStartEvent._as($event);
      _this.super$GestureRecognizer$addAllowedPointerPanZoom($event);
      _this.startTrackingPointer$2($event.get$pointer(), $event.get$transform());
      if (B.boolConversionCheck(J.$eq$(_this._monodrag$_state, C._DragState_0)))
        _this._initialButtons = 1;
      _this._addPointer$1($event);
    },
    _shouldTrackMoveEvent$1(pointer) {
      var result, t1;
      B._asInt(pointer);
      switch (this.multitouchDragStrategy) {
        case C.MultitouchDragStrategy_2:
        case C.MultitouchDragStrategy_1:
          result = true;
          break;
        case C.MultitouchDragStrategy_0:
          t1 = this._activePointer;
          result = t1 == null || pointer === t1;
          break;
        default:
          result = null;
      }
      return result;
    },
    _recordMoveDeltaForMultitouch$2(pointer, localDelta) {
      var t1, t2, t3;
      B._asInt(pointer);
      type$.Offset._as(localDelta);
      if (!B.boolConversionCheck(J.$eq$(this.multitouchDragStrategy, C.MultitouchDragStrategy_1)))
        return;
      if (!B.boolConversionCheck(J.$eq$(this._monodrag$_state, C._DragState_2)) || B.boolConversionCheck(localDelta.$eq(0, D.Offset_0_0)))
        return;
      t1 = this._moveDeltaBeforeFrame;
      t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t1.containsKey$1(pointer))) {
        t3 = t2.$index(t1, pointer);
        t3.toString;
        t2.$indexSet(t1, pointer, t3.$add(0, localDelta));
      } else
        t2.$indexSet(t1, pointer, localDelta);
    },
    _getSumDelta$3$axis$pointer$positive(axis, pointer, positive) {
      var t1, t2, sum;
      B._asInt(pointer);
      B._asBool(positive);
      type$._DragDirection._as(axis);
      t1 = this._moveDeltaBeforeFrame;
      if (!B.boolConversionCheck(t1.containsKey$1(pointer)))
        return 0;
      t1 = J.$index$asx(t1, pointer);
      t1.toString;
      if (positive) {
        t2 = type$.double;
        sum = axis === C._DragDirection_1 ? E.max(t1.get$dy(), 0, t2) : E.max(t1.get$dx(), 0, t2);
      } else {
        t2 = type$.double;
        sum = axis === C._DragDirection_1 ? E.min(t1.get$dy(), 0, t2) : E.min(t1.get$dx(), 0, t2);
      }
      return sum;
    },
    _getMaxSumDeltaPointer$2$axis$positive(axis, positive) {
      var t1, ret, max, ret0, sum;
      B._asBool(positive);
      type$._DragDirection._as(axis);
      t1 = this._moveDeltaBeforeFrame;
      if (B.boolConversionCheck(J.get$isEmpty$asx(t1)))
        return null;
      for (t1 = J.get$iterator$ax(t1.get$keys()), ret = null, max = null; B.boolConversionCheck(t1.moveNext$0());) {
        ret0 = t1.get$current();
        sum = this._getSumDelta$3$axis$pointer$positive(axis, ret0, positive);
        if (ret == null) {
          max = sum;
          ret = ret0;
        } else if (positive) {
          max.toString;
          if (sum > max) {
            max = sum;
            ret = ret0;
          }
        } else {
          max.toString;
          if (sum < max) {
            max = sum;
            ret = ret0;
          }
        }
      }
      return ret;
    },
    _resolveLocalDeltaForMultitouch$2(pointer, localDelta) {
      var currentSystemFrameTimeStamp, axis, t1, dx, dy, averageX, averageY, updatedDelta, _this = this;
      B._asInt(pointer);
      type$.Offset._as(localDelta);
      if (!B.boolConversionCheck(J.$eq$(_this.multitouchDragStrategy, C.MultitouchDragStrategy_1))) {
        if (_this._frameTimeStamp != null) {
          J.clear$0$ax(_this._moveDeltaBeforeFrame);
          _this._frameTimeStamp = null;
          _this._lastUpdatedDeltaForPan = D.Offset_0_0;
        }
        return localDelta;
      }
      currentSystemFrameTimeStamp = E.SchedulerBinding_instance().get$currentSystemFrameTimeStamp();
      if (!B.boolConversionCheck(J.$eq$(_this._frameTimeStamp, currentSystemFrameTimeStamp))) {
        J.clear$0$ax(_this._moveDeltaBeforeFrame);
        _this._lastUpdatedDeltaForPan = D.Offset_0_0;
        _this._frameTimeStamp = currentSystemFrameTimeStamp;
      }
      axis = _this._getPrimaryDragAxis$0();
      t1 = true;
      if (B.boolConversionCheck(J.$eq$(_this._monodrag$_state, C._DragState_2)))
        if (!B.boolConversionCheck(localDelta.$eq(0, D.Offset_0_0)))
          t1 = B.boolConversionCheck(J.get$isEmpty$asx(_this._moveDeltaBeforeFrame)) && axis != null;
      if (t1)
        return localDelta;
      if (axis === C._DragDirection_0) {
        dx = _this._resolveDelta$3$axis$localDelta$pointer(C._DragDirection_0, localDelta, pointer);
        dy = 0;
      } else if (axis === C._DragDirection_1) {
        dy = _this._resolveDelta$3$axis$localDelta$pointer(C._DragDirection_1, localDelta, pointer);
        dx = 0;
      } else {
        averageX = _this._resolveDeltaForPanGesture$2$axis$localDelta(C._DragDirection_0, localDelta);
        averageY = _this._resolveDeltaForPanGesture$2$axis$localDelta(C._DragDirection_1, localDelta);
        updatedDelta = E.Offset$(averageX, averageY).$sub(0, _this._lastUpdatedDeltaForPan);
        _this._lastUpdatedDeltaForPan = E.Offset$(averageX, averageY);
        dx = updatedDelta.get$dx();
        dy = updatedDelta.get$dy();
      }
      return E.Offset$(dx, dy);
    },
    _resolveDelta$3$axis$localDelta$pointer(axis, localDelta, pointer) {
      var t1, t2, positive, delta, maxSumDeltaPointer, maxSumDelta, curPointerSumDelta;
      B._asInt(pointer);
      type$._DragDirection._as(axis);
      type$.Offset._as(localDelta);
      t1 = axis === C._DragDirection_0;
      if (t1) {
        t2 = localDelta.get$dx();
        if (typeof t2 !== "number")
          return t2.$gt();
        positive = t2 > 0;
      } else {
        t2 = localDelta.get$dy();
        if (typeof t2 !== "number")
          return t2.$gt();
        positive = t2 > 0;
      }
      delta = t1 ? localDelta.get$dx() : localDelta.get$dy();
      maxSumDeltaPointer = this._getMaxSumDeltaPointer$2$axis$positive(axis, positive);
      if (maxSumDeltaPointer === pointer)
        return delta;
      else {
        maxSumDeltaPointer.toString;
        maxSumDelta = this._getSumDelta$3$axis$pointer$positive(axis, maxSumDeltaPointer, positive);
        curPointerSumDelta = this._getSumDelta$3$axis$pointer$positive(axis, pointer, positive);
        if (positive) {
          t1 = curPointerSumDelta + delta;
          if (t1 > maxSumDelta)
            return t1 - maxSumDelta;
          else
            return 0;
        } else {
          t1 = curPointerSumDelta + delta;
          if (t1 < maxSumDelta)
            return t1 - maxSumDelta;
          else
            return 0;
        }
      }
    },
    _resolveDeltaForPanGesture$2$axis$localDelta(axis, localDelta) {
      var t1, delta, pointerCount, t2, sum, t3;
      type$._DragDirection._as(axis);
      type$.Offset._as(localDelta);
      t1 = axis === C._DragDirection_0;
      delta = t1 ? localDelta.get$dx() : localDelta.get$dy();
      pointerCount = J.get$length$asx(this._acceptedActivePointers);
      for (t2 = J.get$iterator$ax(this._moveDeltaBeforeFrame.get$values()), sum = delta; B.boolConversionCheck(t2.moveNext$0());) {
        t3 = t2.get$current();
        if (t1) {
          t3 = t3.get$dx();
          if (typeof t3 !== "number")
            return B.iae(t3);
          sum += t3;
        } else {
          t3 = t3.get$dy();
          if (typeof t3 !== "number")
            return B.iae(t3);
          sum += t3;
        }
      }
      return sum / pointerCount;
    },
    handleEvent$1($event) {
      var t1, t2, delta, localDelta, position, localPosition, resolvedDelta, _1_0, movedLocally, localToGlobalTransform, t3, _this = this;
      type$.PointerEvent._as($event);
      if (!B.boolConversionCheck($event.get$synthesized()))
        t1 = type$.PointerDownEvent._is($event) || type$.PointerMoveEvent._is($event) || type$.PointerPanZoomStartEvent._is($event) || type$.PointerPanZoomUpdateEvent._is($event);
      else
        t1 = false;
      if (t1) {
        $label0$0: {
          if (type$.PointerPanZoomStartEvent._is($event)) {
            t1 = D.Offset_0_0;
            break $label0$0;
          }
          if (type$.PointerPanZoomUpdateEvent._is($event)) {
            t1 = $event.get$pan();
            break $label0$0;
          }
          t1 = $event.get$localPosition();
          break $label0$0;
        }
        t2 = J.$index$asx(_this._velocityTrackers, $event.get$pointer());
        t2.toString;
        t2.addPosition$2($event.get$timeStamp(), t1);
      }
      t1 = type$.PointerMoveEvent._is($event);
      if (t1 && !B.boolConversionCheck(J.$eq$($event.get$buttons(), _this._initialButtons))) {
        _this._giveUpPointer$1($event.get$pointer());
        return;
      }
      if ((t1 || type$.PointerPanZoomUpdateEvent._is($event)) && B.boolConversionCheck(_this._shouldTrackMoveEvent$1($event.get$pointer()))) {
        delta = t1 ? $event.get$delta() : type$.PointerPanZoomUpdateEvent._as($event).get$panDelta();
        localDelta = t1 ? $event.get$localDelta() : type$.PointerPanZoomUpdateEvent._as($event).get$localPanDelta();
        position = t1 ? $event.get$position() : J.$add$ansx($event.get$position(), type$.PointerPanZoomUpdateEvent._as($event).get$pan());
        localPosition = t1 ? $event.get$localPosition() : J.$add$ansx($event.get$localPosition(), type$.PointerPanZoomUpdateEvent._as($event).get$localPan());
        _this.set$_finalPosition(A.OffsetPair$(position, localPosition));
        resolvedDelta = _this._resolveLocalDeltaForMultitouch$2($event.get$pointer(), localDelta);
        $label1$1: {
          _1_0 = _this._monodrag$_state;
          if (C._DragState_0 === _1_0 || C._DragState_1 === _1_0) {
            _this.set$_pendingDragOffset(J.$add$ansx(_this.get$_pendingDragOffset(), A.OffsetPair$(delta, localDelta)));
            _this.set$_lastPendingEventTimestamp($event.get$timeStamp());
            _this.set$_monodrag$_lastTransform($event.get$transform());
            movedLocally = _this._getDeltaForDetails$1(localDelta);
            if ($event.get$transform() == null)
              localToGlobalTransform = null;
            else {
              t1 = $event.get$transform();
              t1.toString;
              localToGlobalTransform = E.Matrix4_tryInvert0(t1);
            }
            t1 = _this.get$_globalDistanceMoved();
            t2 = E.PointerEvent_transformDeltaViaPositions(localToGlobalTransform, null, movedLocally, localPosition).get$distance();
            t3 = _this._getPrimaryValueFromOffset$1(movedLocally);
            t3 = J.get$sign$in(t3 == null ? 1 : t3);
            if (typeof t2 !== "number")
              return t2.$mul();
            if (typeof t3 !== "number")
              return B.iae(t3);
            if (typeof t1 !== "number")
              return t1.$add();
            _this.set$_globalDistanceMoved(t1 + t2 * t3);
            t1 = $event.get$kind();
            t2 = _this.gestureSettings;
            if (B.boolConversionCheck(_this._hasSufficientGlobalDistanceToAccept$2(t1, t2 == null ? null : t2.touchSlop))) {
              _this._hasDragThresholdBeenMet = true;
              if (B.boolConversionCheck(J.contains$1$asx(_this._acceptedActivePointers, $event.get$pointer())))
                _this._checkDrag$1($event.get$pointer());
              else
                _this.resolve$1(D.GestureDisposition_0);
            }
            break $label1$1;
          }
          if (C._DragState_2 === _1_0) {
            t1 = $event.get$timeStamp();
            _this._checkUpdate$5$delta$globalPosition$localPosition$primaryDelta$sourceTimeStamp(_this._getDeltaForDetails$1(resolvedDelta), position, localPosition, _this._getPrimaryValueFromOffset$1(resolvedDelta), t1);
          }
        }
        _this._recordMoveDeltaForMultitouch$2($event.get$pointer(), localDelta);
      }
      if (type$.PointerUpEvent._is($event) || type$.PointerCancelEvent._is($event) || type$.PointerPanZoomEndEvent._is($event))
        _this._giveUpPointer$1($event.get$pointer());
    },
    acceptGesture$1(pointer) {
      B._asInt(pointer);
      J.add$1$ax(this._acceptedActivePointers, pointer);
      this._activePointer = pointer;
      this._checkDrag$1(pointer);
    },
    rejectGesture$1(pointer) {
      this._giveUpPointer$1(B._asInt(pointer));
    },
    didStopTrackingLastPointer$1(pointer) {
      var _this = this;
      B._asInt(pointer);
      switch (_this._monodrag$_state) {
        case C._DragState_0:
          break;
        case C._DragState_1:
          _this.resolve$1(D.GestureDisposition_1);
          _this._checkCancel$0();
          break;
        case C._DragState_2:
          _this._checkEnd$1(pointer);
          break;
      }
      _this._hasDragThresholdBeenMet = false;
      J.clear$0$ax(_this._velocityTrackers);
      _this._initialButtons = null;
      _this._monodrag$_state = C._DragState_0;
    },
    _giveUpPointer$1(pointer) {
      var t1, t2, _this = this;
      B._asInt(pointer);
      _this.stopTrackingPointer$1(pointer);
      t1 = _this._acceptedActivePointers;
      t2 = J.getInterceptor$ax(t1);
      if (!B.boolConversionCheck(t2.remove$1(t1, pointer)))
        _this.resolvePointer$2(pointer, D.GestureDisposition_1);
      J.remove$1$ax(_this._moveDeltaBeforeFrame, pointer);
      if (B.boolConversionCheck(J.$eq$(_this._activePointer, pointer)))
        _this.set$_activePointer(B.boolConversionCheck(t2.get$isNotEmpty(t1)) ? t2.get$first(t1) : null);
    },
    _checkDown$0() {
      var _this = this;
      if (_this.onDown != null)
        _this.invokeCallback$1$2("onDown", new A.DragGestureRecognizer__checkDown_closure(_this, A.DragDownDetails$(_this.get$_initialPosition().global, _this.get$_initialPosition().local)), type$.void);
    },
    _checkDrag$1(pointer) {
      var delta, timestamp, transform, localUpdateDelta, localToGlobal, updateDelta, correctedPosition, t1, _this = this;
      B._asInt(pointer);
      if (B.boolConversionCheck(J.$eq$(_this._monodrag$_state, C._DragState_2)))
        return;
      _this._monodrag$_state = C._DragState_2;
      delta = _this.get$_pendingDragOffset();
      timestamp = _this._lastPendingEventTimestamp;
      transform = _this._monodrag$_lastTransform;
      switch (_this.dragStartBehavior) {
        case C.DragStartBehavior_1:
          _this.set$_initialPosition(J.$add$ansx(_this.get$_initialPosition(), delta));
          localUpdateDelta = D.Offset_0_0;
          break;
        case C.DragStartBehavior_0:
          localUpdateDelta = _this._getDeltaForDetails$1(delta.local);
          break;
        default:
          localUpdateDelta = null;
      }
      _this.set$_pendingDragOffset(C.OffsetPair_TcR);
      _this._monodrag$_lastTransform = _this._lastPendingEventTimestamp = null;
      _this._checkStart$2(timestamp, pointer);
      if (!B.boolConversionCheck(J.$eq$(localUpdateDelta, D.Offset_0_0)) && _this.onUpdate != null) {
        localToGlobal = transform != null ? E.Matrix4_tryInvert0(transform) : null;
        updateDelta = A.OffsetPair$(E.PointerEvent_transformDeltaViaPositions(localToGlobal, null, localUpdateDelta, J.$add$ansx(_this.get$_initialPosition().local, localUpdateDelta)), localUpdateDelta);
        correctedPosition = J.$add$ansx(_this.get$_initialPosition(), updateDelta);
        t1 = _this._getPrimaryValueFromOffset$1(localUpdateDelta);
        _this._checkUpdate$5$delta$globalPosition$localPosition$primaryDelta$sourceTimeStamp(localUpdateDelta, correctedPosition.global, correctedPosition.local, t1, timestamp);
      }
      _this.resolve$1(D.GestureDisposition_0);
    },
    _checkStart$2(timestamp, pointer) {
      var t1, t2, _this = this;
      type$.nullable_Duration._as(timestamp);
      B._asInt(pointer);
      if (_this.onStart != null) {
        t1 = _this.get$_initialPosition().global;
        t2 = _this.get$_initialPosition().local;
        _this.invokeCallback$1$2("onStart", new A.DragGestureRecognizer__checkStart_closure(_this, A.DragStartDetails$(t1, _this.getKindForPointer$1(pointer), t2, timestamp)), type$.void);
      }
    },
    _checkUpdate$5$delta$globalPosition$localPosition$primaryDelta$sourceTimeStamp(delta, globalPosition, localPosition, primaryDelta, sourceTimeStamp) {
      var t1;
      type$.nullable_Duration._as(sourceTimeStamp);
      t1 = type$.Offset;
      t1._as(delta);
      B._asDoubleQ(primaryDelta);
      t1._as(globalPosition);
      type$.nullable_Offset._as(localPosition);
      if (this.onUpdate != null)
        this.invokeCallback$1$2("onUpdate", new A.DragGestureRecognizer__checkUpdate_closure(this, A.DragUpdateDetails$(delta, globalPosition, localPosition, primaryDelta, sourceTimeStamp)), type$.void);
    },
    _checkEnd$1(pointer) {
      var t2, estimate, debugReport, details, _this = this, t1 = {};
      B._asInt(pointer);
      if (_this.onEnd == null)
        return;
      t2 = J.$index$asx(_this._velocityTrackers, pointer);
      t2.toString;
      estimate = t2.getVelocityEstimate$0();
      t1.details = null;
      if (estimate == null) {
        debugReport = new A.DragGestureRecognizer__checkEnd_closure();
        t2 = null;
      } else {
        details = t1.details = _this._considerFling$2(estimate, t2.kind);
        debugReport = details != null ? new A.DragGestureRecognizer__checkEnd_closure0(t1, estimate) : new A.DragGestureRecognizer__checkEnd_closure1(estimate);
        t2 = details;
      }
      if (t2 == null)
        t1.details = A.DragEndDetails$(_this.get$_finalPosition().global, _this.get$_finalPosition().local, 0, C.Velocity_Offset_0_0);
      _this.invokeCallback$1$3$debugReport("onEnd", new A.DragGestureRecognizer__checkEnd_closure2(t1, _this), debugReport, type$.void);
    },
    _checkCancel$0() {
      var t1 = this.onCancel;
      if (t1 != null)
        this.invokeCallback$1$2("onCancel", t1, type$.void);
    },
    dispose$0() {
      J.clear$0$ax(this._velocityTrackers);
      this.super$OneSequenceGestureRecognizer$dispose();
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$GestureRecognizer$debugFillProperties(properties);
      properties.add$1(0, E.EnumProperty$("start behavior", this.dragStartBehavior, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.DragStartBehavior));
    },
    set$multitouchDragStrategy(multitouchDragStrategy) {
      this.multitouchDragStrategy = type$.MultitouchDragStrategy._as(multitouchDragStrategy);
    },
    set$onDown(onDown) {
      this.onDown = type$.nullable_void_Function_DragDownDetails._as(onDown);
    },
    set$onStart(onStart) {
      this.onStart = type$.nullable_void_Function_DragStartDetails._as(onStart);
    },
    set$onUpdate(onUpdate) {
      this.onUpdate = type$.nullable_void_Function_DragUpdateDetails._as(onUpdate);
    },
    set$onEnd(onEnd) {
      this.onEnd = type$.nullable_void_Function_DragEndDetails._as(onEnd);
    },
    set$onCancel(onCancel) {
      this.onCancel = type$.nullable_void_Function._as(onCancel);
    },
    set$_lastPendingEventTimestamp(_lastPendingEventTimestamp) {
      this._lastPendingEventTimestamp = type$.nullable_Duration._as(_lastPendingEventTimestamp);
    },
    set$_initialButtons(_initialButtons) {
      this._initialButtons = B._asIntQ(_initialButtons);
    },
    set$_monodrag$_lastTransform(_lastTransform) {
      this._monodrag$_lastTransform = type$.nullable_Matrix4._as(_lastTransform);
    },
    set$_activePointer(_activePointer) {
      this._activePointer = B._asIntQ(_activePointer);
    }
  };
  A.HorizontalDragGestureRecognizer.prototype = {
    isFlingGesture$2(estimate, kind) {
      var minDistance, t1;
      type$.VelocityEstimate._as(estimate);
      type$.PointerDeviceKind._as(kind);
      minDistance = A.computeHitSlop(kind, this.gestureSettings);
      t1 = J.abs$0$in(estimate.pixelsPerSecond.get$dx());
      if (typeof t1 !== "number")
        return t1.$gt();
      if (t1 > 50) {
        t1 = J.abs$0$in(estimate.offset.get$dx());
        if (typeof t1 !== "number")
          return t1.$gt();
        t1 = t1 > minDistance;
      } else
        t1 = false;
      return t1;
    },
    _considerFling$2(estimate, kind) {
      var dx, t1;
      type$.VelocityEstimate._as(estimate);
      if (!B.boolConversionCheck(this.isFlingGesture$2(estimate, type$.PointerDeviceKind._as(kind))))
        return null;
      dx = E.clampDouble(estimate.pixelsPerSecond.get$dx(), -8000, 8000);
      t1 = A.Velocity$(E.Offset$(dx, 0));
      return A.DragEndDetails$(this.get$_finalPosition().global, this.get$_finalPosition().local, dx, t1);
    },
    _hasSufficientGlobalDistanceToAccept$2(pointerDeviceKind, deviceTouchSlop) {
      var t1, t2;
      type$.PointerDeviceKind._as(pointerDeviceKind);
      B._asDoubleQ(deviceTouchSlop);
      t1 = J.abs$0$in(this.get$_globalDistanceMoved());
      t2 = A.computeHitSlop(pointerDeviceKind, this.gestureSettings);
      if (typeof t1 !== "number")
        return t1.$gt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 > t2;
    },
    _getDeltaForDetails$1(delta) {
      return E.Offset$(type$.Offset._as(delta).get$dx(), 0);
    },
    _getPrimaryValueFromOffset$1(value) {
      return type$.Offset._as(value).get$dx();
    },
    _getPrimaryDragAxis$0() {
      return C._DragDirection_0;
    },
    get$debugDescription() {
      return "horizontal drag";
    }
  };
  A.PanGestureRecognizer.prototype = {
    isFlingGesture$2(estimate, kind) {
      var minDistance, t1;
      type$.VelocityEstimate._as(estimate);
      type$.PointerDeviceKind._as(kind);
      minDistance = A.computeHitSlop(kind, this.gestureSettings);
      t1 = estimate.pixelsPerSecond.get$distanceSquared();
      if (typeof t1 !== "number")
        return t1.$gt();
      if (t1 > 2500) {
        t1 = estimate.offset.get$distanceSquared();
        if (typeof t1 !== "number")
          return t1.$gt();
        t1 = t1 > minDistance * minDistance;
      } else
        t1 = false;
      return t1;
    },
    _considerFling$2(estimate, kind) {
      var t1, velocity;
      type$.VelocityEstimate._as(estimate);
      if (!B.boolConversionCheck(this.isFlingGesture$2(estimate, type$.PointerDeviceKind._as(kind))))
        return null;
      t1 = A.Velocity$(estimate.pixelsPerSecond);
      velocity = t1.clampMagnitude$2(50, 8000);
      return A.DragEndDetails$(this.get$_finalPosition().global, this.get$_finalPosition().local, null, velocity);
    },
    _hasSufficientGlobalDistanceToAccept$2(pointerDeviceKind, deviceTouchSlop) {
      var t1, t2;
      type$.PointerDeviceKind._as(pointerDeviceKind);
      B._asDoubleQ(deviceTouchSlop);
      t1 = J.abs$0$in(this.get$_globalDistanceMoved());
      t2 = A.computePanSlop(pointerDeviceKind, this.gestureSettings);
      if (typeof t1 !== "number")
        return t1.$gt();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 > t2;
    },
    _getDeltaForDetails$1(delta) {
      return type$.Offset._as(delta);
    },
    _getPrimaryValueFromOffset$1(value) {
      type$.Offset._as(value);
      return null;
    },
    get$debugDescription() {
      return "pan";
    }
  };
  A._DragDirection.prototype = {
    _enumToString$0() {
      return "_DragDirection." + B.S(this._core$_name);
    }
  };
  A._CountdownZoned.prototype = {
    _CountdownZoned$1$duration(duration) {
      E.Timer_Timer(duration, this.get$_onTimeout());
    },
    get$timeout() {
      return this._timeout;
    },
    _onTimeout$0() {
      this._timeout = true;
    }
  };
  A._TapTracker.prototype = {
    startTrackingPointer$2(route, transform) {
      type$.void_Function_PointerEvent._as(route);
      type$.nullable_Matrix4._as(transform);
      if (!B.boolConversionCheck(this._isTrackingPointer)) {
        this._isTrackingPointer = true;
        E.GestureBinding_instance().GestureBinding_pointerRouter.addRoute$3(this.pointer, route, transform);
      }
    },
    stopTrackingPointer$1(route) {
      type$.void_Function_PointerEvent._as(route);
      if (B.boolConversionCheck(this._isTrackingPointer)) {
        this._isTrackingPointer = false;
        E.GestureBinding_instance().GestureBinding_pointerRouter.removeRoute$2(this.pointer, route);
      }
    },
    isWithinGlobalTolerance$2($event, tolerance) {
      var t1;
      type$.PointerEvent._as($event);
      B._asDouble(tolerance);
      t1 = J.$sub$n($event.get$position(), this._initialGlobalPosition).get$distance();
      if (typeof t1 !== "number")
        return t1.$le();
      return t1 <= tolerance;
    },
    hasElapsedMinTime$0() {
      return this._doubleTapMinTimeCountdown.get$timeout();
    },
    hasSameButton$1($event) {
      return J.$eq$(type$.PointerDownEvent._as($event).get$buttons(), this.initialButtons);
    }
  };
  A.DoubleTapGestureRecognizer.prototype = {
    isPointerAllowed$1($event) {
      var isPointerAllowed, _this = this;
      type$.PointerDownEvent._as($event);
      if (_this._firstTap == null)
        if (_this.onDoubleTapDown == null && _this.onDoubleTap == null && _this.onDoubleTapCancel == null)
          return false;
      isPointerAllowed = _this.super$GestureRecognizer$isPointerAllowed($event);
      if (!isPointerAllowed)
        _this._multitap$_reset$0();
      return isPointerAllowed;
    },
    addAllowedPointer$1($event) {
      var t1, t2, _this = this;
      type$.PointerDownEvent._as($event);
      t1 = _this._firstTap;
      if (t1 != null)
        if (!B.boolConversionCheck(t1.isWithinGlobalTolerance$2($event, 100)))
          return;
        else if (!B.boolConversionCheck(_this._firstTap.hasElapsedMinTime$0()) || !B.boolConversionCheck(_this._firstTap.hasSameButton$1($event))) {
          _this._multitap$_reset$0();
          return _this._trackTap$1($event);
        } else if (_this.onDoubleTapDown != null) {
          t1 = $event.get$position();
          t2 = $event.get$localPosition();
          _this.invokeCallback$1$2("onDoubleTapDown", new A.DoubleTapGestureRecognizer_addAllowedPointer_closure(_this, A.TapDownDetails$(t1, _this.getKindForPointer$1($event.get$pointer()), t2)), type$.void);
        }
      _this._trackTap$1($event);
    },
    _trackTap$1($event) {
      var tracker, _this = this;
      type$.PointerDownEvent._as($event);
      _this._stopDoubleTapTimer$0();
      tracker = A._TapTracker$(C.Duration_40000, J.add$2$ax(E.GestureBinding_instance().GestureBinding_gestureArena, $event.get$pointer(), _this), $event, _this.gestureSettings);
      J.$indexSet$ax(_this._trackers, $event.get$pointer(), tracker);
      tracker.startTrackingPointer$2(_this.get$_multitap$_handleEvent(), $event.get$transform());
    },
    _multitap$_handleEvent$1($event) {
      var t1, _this = this;
      type$.PointerEvent._as($event);
      t1 = J.$index$asx(_this._trackers, $event.get$pointer());
      t1.toString;
      if (type$.PointerUpEvent._is($event))
        if (_this._firstTap == null)
          _this._registerFirstTap$1(t1);
        else
          _this._registerSecondTap$1(t1);
      else if (type$.PointerMoveEvent._is($event)) {
        if (!B.boolConversionCheck(t1.isWithinGlobalTolerance$2($event, 18)))
          _this._reject$1(t1);
      } else if (type$.PointerCancelEvent._is($event))
        _this._reject$1(t1);
    },
    acceptGesture$1(pointer) {
      B._asInt(pointer);
    },
    rejectGesture$1(pointer) {
      var tracker, t1, _this = this;
      B._asInt(pointer);
      tracker = J.$index$asx(_this._trackers, pointer);
      if (tracker == null) {
        t1 = _this._firstTap;
        t1 = t1 != null && B.boolConversionCheck(J.$eq$(t1.pointer, pointer));
      } else
        t1 = false;
      if (t1)
        tracker = _this._firstTap;
      if (tracker != null)
        _this._reject$1(tracker);
    },
    _reject$1(tracker) {
      var t1, t2, t3, _this = this;
      type$._TapTracker._as(tracker);
      t1 = _this._trackers;
      t2 = J.getInterceptor$ax(t1);
      t2.remove$1(t1, tracker.pointer);
      tracker.entry.resolve$1(D.GestureDisposition_1);
      _this._freezeTracker$1(tracker);
      t3 = _this._firstTap;
      if (t3 != null)
        if (tracker === t3)
          _this._multitap$_reset$0();
        else {
          _this._multitap$_checkCancel$0();
          if (B.boolConversionCheck(t2.get$isEmpty(t1)))
            _this._multitap$_reset$0();
        }
    },
    dispose$0() {
      this._multitap$_reset$0();
      this.super$GestureRecognizer$dispose();
    },
    _multitap$_reset$0() {
      var t1, _this = this;
      _this._stopDoubleTapTimer$0();
      if (_this._firstTap != null) {
        if (B.boolConversionCheck(J.get$isNotEmpty$asx(_this._trackers)))
          _this._multitap$_checkCancel$0();
        t1 = _this._firstTap;
        t1.toString;
        _this._firstTap = null;
        _this._reject$1(t1);
        E.GestureBinding_instance().GestureBinding_gestureArena.release$1(t1.pointer);
      }
      _this._clearTrackers$0();
    },
    _registerFirstTap$1(tracker) {
      var t1, _this = this;
      type$._TapTracker._as(tracker);
      _this._startDoubleTapTimer$0();
      t1 = tracker.pointer;
      E.GestureBinding_instance().GestureBinding_gestureArena.hold$1(t1);
      _this._freezeTracker$1(tracker);
      J.remove$1$ax(_this._trackers, t1);
      _this._clearTrackers$0();
      _this._firstTap = tracker;
    },
    _registerSecondTap$1(tracker) {
      var _this = this;
      type$._TapTracker._as(tracker);
      _this._firstTap.entry.resolve$1(D.GestureDisposition_0);
      tracker.entry.resolve$1(D.GestureDisposition_0);
      _this._freezeTracker$1(tracker);
      J.remove$1$ax(_this._trackers, tracker.pointer);
      _this._checkUp$1(tracker.initialButtons);
      _this._multitap$_reset$0();
    },
    _clearTrackers$0() {
      J.forEach$1$ax(J.toList$0$ax(this._trackers.get$values()), this.get$_reject());
    },
    _freezeTracker$1(tracker) {
      type$._TapTracker._as(tracker).stopTrackingPointer$1(this.get$_multitap$_handleEvent());
    },
    _startDoubleTapTimer$0() {
      if (this._doubleTapTimer == null)
        this.set$_doubleTapTimer(E.Timer_Timer(D.Duration_300000, this.get$_multitap$_reset()));
    },
    _stopDoubleTapTimer$0() {
      var t1 = this._doubleTapTimer;
      if (t1 != null) {
        t1.cancel$0();
        this._doubleTapTimer = null;
      }
    },
    _checkUp$1(buttons) {
      var t1;
      B._asInt(buttons);
      t1 = this.onDoubleTap;
      if (t1 != null)
        this.invokeCallback$1$2("onDoubleTap", t1, type$.void);
    },
    _multitap$_checkCancel$0() {
      var t1 = this.onDoubleTapCancel;
      if (t1 != null)
        this.invokeCallback$1$2("onDoubleTapCancel", t1, type$.void);
    },
    get$debugDescription() {
      return "double tap";
    },
    set$onDoubleTapDown(onDoubleTapDown) {
      this.onDoubleTapDown = type$.nullable_void_Function_TapDownDetails._as(onDoubleTapDown);
    },
    set$onDoubleTap(onDoubleTap) {
      this.onDoubleTap = type$.nullable_void_Function._as(onDoubleTap);
    },
    set$onDoubleTapCancel(onDoubleTapCancel) {
      this.onDoubleTapCancel = type$.nullable_void_Function._as(onDoubleTapCancel);
    },
    set$_doubleTapTimer(_doubleTapTimer) {
      this._doubleTapTimer = type$.nullable_Timer._as(_doubleTapTimer);
    }
  };
  A.DragStartBehavior.prototype = {
    _enumToString$0() {
      return "DragStartBehavior." + B.S(this._core$_name);
    }
  };
  A.MultitouchDragStrategy.prototype = {
    _enumToString$0() {
      return "MultitouchDragStrategy." + B.S(this._core$_name);
    }
  };
  A.GestureRecognizer.prototype = {
    GestureRecognizer$3$allowedButtonsFilter$debugOwner$supportedDevices(allowedButtonsFilter, debugOwner, supportedDevices) {
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(B.S(C.Type_GestureRecognizer_yzN), "package:flutter/gestures.dart", this);
    },
    addPointerPanZoom$1($event) {
      var _this = this;
      type$.PointerPanZoomStartEvent._as($event);
      J.$indexSet$ax(_this._pointerToKind, $event.get$pointer(), $event.get$kind());
      if (B.boolConversionCheck(_this.isPointerPanZoomAllowed$1($event)))
        _this.addAllowedPointerPanZoom$1($event);
      else
        _this.handleNonAllowedPointerPanZoom$1($event);
    },
    addAllowedPointerPanZoom$1($event) {
      type$.PointerPanZoomStartEvent._as($event);
    },
    addPointer$1($event) {
      var _this = this;
      type$.PointerDownEvent._as($event);
      J.$indexSet$ax(_this._pointerToKind, $event.get$pointer(), $event.get$kind());
      if (B.boolConversionCheck(_this.isPointerAllowed$1($event)))
        _this.addAllowedPointer$1($event);
      else
        _this.handleNonAllowedPointer$1($event);
    },
    addAllowedPointer$1($event) {
      type$.PointerDownEvent._as($event);
    },
    handleNonAllowedPointer$1($event) {
      type$.PointerDownEvent._as($event);
    },
    isPointerAllowed$1($event) {
      var t1;
      type$.PointerDownEvent._as($event);
      t1 = this.supportedDevices;
      return (t1 == null || B.boolConversionCheck(J.contains$1$asx(t1, $event.get$kind()))) && B.boolConversionCheck(this.allowedButtonsFilter.call$1($event.get$buttons()));
    },
    handleNonAllowedPointerPanZoom$1($event) {
      type$.PointerPanZoomStartEvent._as($event);
    },
    isPointerPanZoomAllowed$1($event) {
      var t1;
      type$.PointerPanZoomStartEvent._as($event);
      t1 = this.supportedDevices;
      return t1 == null || B.boolConversionCheck(J.contains$1$asx(t1, $event.get$kind()));
    },
    getKindForPointer$1(pointer) {
      var t1 = J.$index$asx(this._pointerToKind, B._asInt(pointer));
      t1.toString;
      return t1;
    },
    dispose$0() {
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectDisposed$1$object(this);
    },
    invokeCallback$1$3$debugReport($name, callback, debugReport, $T) {
      var result, exception, stack, collector, exception0;
      B._asString($name);
      $T._eval$1("0()")._as(callback);
      type$.nullable_String_Function._as(debugReport);
      result = null;
      try {
        result = callback.call$0();
      } catch (exception0) {
        exception = B.unwrapException(exception0);
        stack = B.getTraceFromException(exception0);
        collector = null;
        E.FlutterError_reportError(E.FlutterErrorDetails$(E.ErrorDescription$("while handling a gesture"), exception, collector, "gesture", false, stack));
      }
      return result;
    },
    invokeCallback$1$2($name, callback, $T) {
      return this.invokeCallback$1$3$debugReport($name, callback, null, $T);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$DiagnosticableTreeMixin$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("debugOwner", this.debugOwner, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Object));
    },
    set$gestureSettings(gestureSettings) {
      this.gestureSettings = type$.nullable_DeviceGestureSettings._as(gestureSettings);
    },
    set$supportedDevices(supportedDevices) {
      this.supportedDevices = type$.nullable_Set_PointerDeviceKind._as(supportedDevices);
    },
    $isDiagnosticable: 1,
    $isDiagnosticableTree: 1,
    $isDiagnosticableTreeMixin: 1,
    $is_DiagnosticableTree_Object_Diagnosticable: 1
  };
  A.OneSequenceGestureRecognizer.prototype = {
    addAllowedPointer$1($event) {
      type$.PointerDownEvent._as($event);
      this.startTrackingPointer$2($event.get$pointer(), $event.get$transform());
    },
    handleNonAllowedPointer$1($event) {
      type$.PointerDownEvent._as($event);
      this.resolve$1(D.GestureDisposition_1);
    },
    acceptGesture$1(pointer) {
      B._asInt(pointer);
    },
    rejectGesture$1(pointer) {
      B._asInt(pointer);
    },
    resolve$1(disposition) {
      var t1, localEntries;
      type$.GestureDisposition._as(disposition);
      t1 = this._recognizer$_entries;
      localEntries = B.List_List$of(t1.get$values(), true, type$.GestureArenaEntry);
      J.clear$0$ax(t1);
      for (t1 = J.get$iterator$ax(localEntries); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().resolve$1(disposition);
    },
    resolvePointer$2(pointer, disposition) {
      var t1, t2, entry;
      B._asInt(pointer);
      type$.GestureDisposition._as(disposition);
      t1 = this._recognizer$_entries;
      t2 = J.getInterceptor$asx(t1);
      entry = t2.$index(t1, pointer);
      if (entry != null) {
        t2.remove$1(t1, pointer);
        entry.resolve$1(disposition);
      }
    },
    dispose$0() {
      var t1, t2, t3, t4, _this = this;
      _this.resolve$1(D.GestureDisposition_1);
      for (t1 = _this._trackedPointers, t2 = J.getInterceptor$ax(t1), t3 = t2.get$iterator(t1); B.boolConversionCheck(t3.moveNext$0());) {
        t4 = t3.get$current();
        E.GestureBinding_instance().GestureBinding_pointerRouter.removeRoute$2(t4, _this.get$handleEvent());
      }
      t2.clear$0(t1);
      _this.super$GestureRecognizer$dispose();
    },
    _addPointerToArena$1(pointer) {
      var t1;
      B._asInt(pointer);
      t1 = J.add$2$ax(E.GestureBinding_instance().GestureBinding_gestureArena, pointer, this);
      return t1;
    },
    startTrackingPointer$2(pointer, transform) {
      var _this = this;
      B._asInt(pointer);
      type$.nullable_Matrix4._as(transform);
      E.GestureBinding_instance().GestureBinding_pointerRouter.addRoute$3(pointer, _this.get$handleEvent(), transform);
      J.add$1$ax(_this._trackedPointers, pointer);
      J.$indexSet$ax(_this._recognizer$_entries, pointer, _this._addPointerToArena$1(pointer));
    },
    stopTrackingPointer$1(pointer) {
      var t1, t2;
      B._asInt(pointer);
      t1 = this._trackedPointers;
      t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t2.contains$1(t1, pointer))) {
        E.GestureBinding_instance().GestureBinding_pointerRouter.removeRoute$2(pointer, this.get$handleEvent());
        t2.remove$1(t1, pointer);
        if (B.boolConversionCheck(t2.get$isEmpty(t1)))
          this.didStopTrackingLastPointer$1(pointer);
      }
    },
    stopTrackingIfPointerNoLongerDown$1($event) {
      type$.PointerEvent._as($event);
      if (type$.PointerUpEvent._is($event) || type$.PointerCancelEvent._is($event) || type$.PointerPanZoomEndEvent._is($event))
        this.stopTrackingPointer$1($event.get$pointer());
    }
  };
  A.GestureRecognizerState.prototype = {
    _enumToString$0() {
      return "GestureRecognizerState." + B.S(this._core$_name);
    }
  };
  A.PrimaryPointerGestureRecognizer.prototype = {
    get$state() {
      return this._recognizer$_state;
    },
    get$primaryPointer() {
      return this._primaryPointer;
    },
    get$initialPosition() {
      return this._recognizer$_initialPosition;
    },
    addAllowedPointer$1($event) {
      var t1, _this = this;
      type$.PointerDownEvent._as($event);
      _this.super$OneSequenceGestureRecognizer$addAllowedPointer($event);
      if (B.boolConversionCheck(J.$eq$(_this.get$state(), C.GestureRecognizerState_0))) {
        _this._recognizer$_state = C.GestureRecognizerState_1;
        _this.set$_primaryPointer($event.get$pointer());
        t1 = $event.get$localPosition();
        _this._recognizer$_initialPosition = A.OffsetPair$($event.get$position(), t1);
        t1 = _this.deadline;
        if (t1 != null)
          _this.set$_recognizer$_timer(E.Timer_Timer(t1, new A.PrimaryPointerGestureRecognizer_addAllowedPointer_closure(_this, $event)));
      }
    },
    handleNonAllowedPointer$1($event) {
      type$.PointerDownEvent._as($event);
      if (!B.boolConversionCheck(this._gestureAccepted))
        this.super$OneSequenceGestureRecognizer$handleNonAllowedPointer($event);
    },
    handleEvent$1($event) {
      var t1, isPreAcceptSlopPastTolerance, isPostAcceptSlopPastTolerance, t2, _this = this;
      type$.PointerEvent._as($event);
      if (B.boolConversionCheck(J.$eq$(_this.get$state(), C.GestureRecognizerState_1)) && B.boolConversionCheck(J.$eq$($event.get$pointer(), _this.get$primaryPointer()))) {
        if (!B.boolConversionCheck(_this._gestureAccepted)) {
          t1 = _this._getGlobalDistance$1($event);
          if (typeof t1 !== "number")
            return t1.$gt();
          isPreAcceptSlopPastTolerance = t1 > 18;
        } else
          isPreAcceptSlopPastTolerance = false;
        isPostAcceptSlopPastTolerance = false;
        if (B.boolConversionCheck(_this._gestureAccepted)) {
          t1 = _this.postAcceptSlopTolerance;
          if (t1 != null) {
            t2 = _this._getGlobalDistance$1($event);
            if (typeof t2 !== "number")
              return t2.$gt();
            if (typeof t1 !== "number")
              return B.iae(t1);
            t1 = t2 > t1;
            isPostAcceptSlopPastTolerance = t1;
          }
        }
        if (type$.PointerMoveEvent._is($event))
          t1 = isPreAcceptSlopPastTolerance || isPostAcceptSlopPastTolerance;
        else
          t1 = false;
        if (t1) {
          _this.resolve$1(D.GestureDisposition_1);
          t1 = _this.get$primaryPointer();
          t1.toString;
          _this.stopTrackingPointer$1(t1);
        } else
          _this.handlePrimaryPointer$1($event);
      }
      _this.stopTrackingIfPointerNoLongerDown$1($event);
    },
    didExceedDeadline$0() {
    },
    didExceedDeadlineWithEvent$1($event) {
      type$.PointerDownEvent._as($event);
      this.didExceedDeadline$0();
    },
    acceptGesture$1(pointer) {
      if (B._asInt(pointer) === this.get$primaryPointer()) {
        this._stopTimer$0();
        this._gestureAccepted = true;
      }
    },
    rejectGesture$1(pointer) {
      var _this = this;
      if (B._asInt(pointer) === _this.get$primaryPointer() && B.boolConversionCheck(J.$eq$(_this.get$state(), C.GestureRecognizerState_1))) {
        _this._stopTimer$0();
        _this._recognizer$_state = C.GestureRecognizerState_2;
      }
    },
    didStopTrackingLastPointer$1(pointer) {
      var _this = this;
      B._asInt(pointer);
      _this._stopTimer$0();
      _this._recognizer$_state = C.GestureRecognizerState_0;
      _this._recognizer$_initialPosition = null;
      _this._gestureAccepted = false;
    },
    dispose$0() {
      this._stopTimer$0();
      this.super$OneSequenceGestureRecognizer$dispose();
    },
    _stopTimer$0() {
      var t1 = this._recognizer$_timer;
      if (t1 != null) {
        t1.cancel$0();
        this._recognizer$_timer = null;
      }
    },
    _getGlobalDistance$1($event) {
      return J.$sub$n(type$.PointerEvent._as($event).get$position(), this.get$initialPosition().global).get$distance();
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$GestureRecognizer$debugFillProperties(properties);
      properties.add$1(0, E.EnumProperty$("state", this.get$state(), D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.GestureRecognizerState));
    },
    set$_primaryPointer(_primaryPointer) {
      this._primaryPointer = B._asIntQ(_primaryPointer);
    },
    set$_recognizer$_timer(_timer) {
      this._recognizer$_timer = type$.nullable_Timer._as(_timer);
    }
  };
  A.OffsetPair.prototype = {
    $add(_, other) {
      var t1;
      type$.OffsetPair._as(other);
      t1 = J.$add$ansx(this.local, other.local);
      return A.OffsetPair$(J.$add$ansx(this.global, other.global), t1);
    },
    $sub(_, other) {
      var t1;
      type$.OffsetPair._as(other);
      t1 = J.$sub$n(this.local, other.local);
      return A.OffsetPair$(J.$sub$n(this.global, other.global), t1);
    },
    toString$0(_) {
      return B.S(E.objectRuntimeType(this, "OffsetPair")) + "(local: " + B.S(this.local) + ", global: " + B.S(this.global) + ")";
    }
  };
  A._GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin.prototype = {$isDiagnosticable: 1, $isDiagnosticableTree: 1, $isDiagnosticableTreeMixin: 1, $is_DiagnosticableTree_Object_Diagnosticable: 1};
  A.TapDownDetails.prototype = {};
  A.TapUpDetails.prototype = {};
  A.BaseTapGestureRecognizer.prototype = {
    addAllowedPointer$1($event) {
      var _this = this;
      type$.PointerDownEvent._as($event);
      if (B.boolConversionCheck(J.$eq$(_this.get$state(), C.GestureRecognizerState_0))) {
        if (_this._down != null && _this._up != null)
          _this._tap$_reset$0();
        _this._down = $event;
      }
      if (_this._down != null)
        _this.super$PrimaryPointerGestureRecognizer$addAllowedPointer($event);
    },
    startTrackingPointer$2(pointer, transform) {
      this.super$OneSequenceGestureRecognizer$startTrackingPointer(B._asInt(pointer), type$.nullable_Matrix4._as(transform));
    },
    handlePrimaryPointer$1($event) {
      var t1, _this = this;
      type$.PointerEvent._as($event);
      if (type$.PointerUpEvent._is($event)) {
        _this._up = $event;
        _this._tap$_checkUp$0();
      } else if (type$.PointerCancelEvent._is($event)) {
        _this.resolve$1(D.GestureDisposition_1);
        if (B.boolConversionCheck(_this._sentTapDown))
          _this._tap$_checkCancel$2($event, "");
        _this._tap$_reset$0();
      } else if (!B.boolConversionCheck(J.$eq$($event.get$buttons(), _this._down.get$buttons()))) {
        _this.resolve$1(D.GestureDisposition_1);
        t1 = _this.get$primaryPointer();
        t1.toString;
        _this.stopTrackingPointer$1(t1);
      }
    },
    resolve$1(disposition) {
      var _this = this;
      type$.GestureDisposition._as(disposition);
      if (B.boolConversionCheck(_this._wonArenaForPrimaryPointer) && disposition === D.GestureDisposition_1) {
        _this._tap$_checkCancel$2(null, "spontaneous");
        _this._tap$_reset$0();
      }
      _this.super$OneSequenceGestureRecognizer$resolve(disposition);
    },
    didExceedDeadline$0() {
      this._tap$_checkDown$0();
    },
    acceptGesture$1(pointer) {
      var _this = this;
      B._asInt(pointer);
      _this.super$PrimaryPointerGestureRecognizer$acceptGesture(pointer);
      if (pointer === _this.get$primaryPointer()) {
        _this._tap$_checkDown$0();
        _this._wonArenaForPrimaryPointer = true;
        _this._tap$_checkUp$0();
      }
    },
    rejectGesture$1(pointer) {
      var _this = this;
      B._asInt(pointer);
      _this.super$PrimaryPointerGestureRecognizer$rejectGesture(pointer);
      if (pointer === _this.get$primaryPointer()) {
        if (B.boolConversionCheck(_this._sentTapDown))
          _this._tap$_checkCancel$2(null, "forced");
        _this._tap$_reset$0();
      }
    },
    _tap$_checkDown$0() {
      var t1, _this = this;
      if (B.boolConversionCheck(_this._sentTapDown))
        return;
      t1 = _this._down;
      t1.toString;
      _this.handleTapDown$1$down(t1);
      _this._sentTapDown = true;
    },
    _tap$_checkUp$0() {
      var t1, t2, _this = this;
      if (!B.boolConversionCheck(_this._wonArenaForPrimaryPointer) || _this._up == null)
        return;
      t1 = _this._down;
      t1.toString;
      t2 = _this._up;
      t2.toString;
      _this.handleTapUp$2$down$up(t1, t2);
      _this._tap$_reset$0();
    },
    _tap$_checkCancel$2($event, note) {
      var t1;
      type$.nullable_PointerCancelEvent._as($event);
      B._asString(note);
      t1 = this._down;
      t1.toString;
      this.handleTapCancel$3$cancel$down$reason($event, t1, note);
    },
    _tap$_reset$0() {
      var _this = this;
      _this._wonArenaForPrimaryPointer = _this._sentTapDown = false;
      _this._down = _this._up = null;
    },
    get$debugDescription() {
      return "base tap";
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$PrimaryPointerGestureRecognizer$debugFillProperties(properties);
      properties.add$1(0, E.FlagProperty$("wonArenaForPrimaryPointer", _null, _null, "won arena", D.DiagnosticLevel_3, false, _this._wonArenaForPrimaryPointer));
      t1 = _this._up;
      t1 = t1 == null ? _null : t1.get$position();
      t2 = type$.Offset;
      properties.add$1(0, E.DiagnosticsProperty$("finalPosition", t1, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      t1 = _this._up;
      t1 = t1 == null ? _null : t1.get$localPosition();
      t3 = _this._up;
      properties.add$1(0, E.DiagnosticsProperty$("finalLocalPosition", t1, true, t3 == null ? _null : t3.get$position(), _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      t1 = _this._down;
      t1 = t1 == null ? _null : t1.get$buttons();
      properties.add$1(0, E.DiagnosticsProperty$("button", t1, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.int));
      properties.add$1(0, E.FlagProperty$("sentTapDown", _null, _null, "sent tap down", D.DiagnosticLevel_3, false, _this._sentTapDown));
    }
  };
  A.TapGestureRecognizer.prototype = {
    isPointerAllowed$1($event) {
      var _this = this;
      type$.PointerDownEvent._as($event);
      switch ($event.get$buttons()) {
        case 1:
          if (_this.onTapDown == null && _this.onTap == null && _this.onTapUp == null && _this.onTapCancel == null)
            return false;
          break;
        case 2:
          if (_this.onSecondaryTap == null && _this.onSecondaryTapDown == null && _this.onSecondaryTapUp == null && _this.onSecondaryTapCancel == null)
            return false;
          break;
        case 4:
          if (_this.onTertiaryTapDown == null && _this.onTertiaryTapUp == null && _this.onTertiaryTapCancel == null)
            return false;
          break;
        default:
          return false;
      }
      return _this.super$GestureRecognizer$isPointerAllowed($event);
    },
    handleTapDown$1$down(down) {
      var t1, t2, details, _this = this;
      type$.PointerDownEvent._as(down);
      t1 = down.get$position();
      t2 = down.get$localPosition();
      details = A.TapDownDetails$(t1, _this.getKindForPointer$1(down.get$pointer()), t2);
      switch (down.get$buttons()) {
        case 1:
          if (_this.onTapDown != null)
            _this.invokeCallback$1$2("onTapDown", new A.TapGestureRecognizer_handleTapDown_closure(_this, details), type$.void);
          break;
        case 2:
          if (_this.onSecondaryTapDown != null)
            _this.invokeCallback$1$2("onSecondaryTapDown", new A.TapGestureRecognizer_handleTapDown_closure0(_this, details), type$.void);
          break;
        case 4:
          if (_this.onTertiaryTapDown != null)
            _this.invokeCallback$1$2("onTertiaryTapDown", new A.TapGestureRecognizer_handleTapDown_closure1(_this, details), type$.void);
          break;
      }
    },
    handleTapUp$2$down$up(down, up) {
      var t1, details, _this = this;
      type$.PointerDownEvent._as(down);
      type$.PointerUpEvent._as(up);
      t1 = up.get$kind();
      details = A.TapUpDetails$(up.get$position(), t1, up.get$localPosition());
      switch (down.get$buttons()) {
        case 1:
          if (_this.onTapUp != null)
            _this.invokeCallback$1$2("onTapUp", new A.TapGestureRecognizer_handleTapUp_closure(_this, details), type$.void);
          t1 = _this.onTap;
          if (t1 != null)
            _this.invokeCallback$1$2("onTap", t1, type$.void);
          break;
        case 2:
          if (_this.onSecondaryTapUp != null)
            _this.invokeCallback$1$2("onSecondaryTapUp", new A.TapGestureRecognizer_handleTapUp_closure0(_this, details), type$.void);
          if (_this.onSecondaryTap != null)
            _this.invokeCallback$1$2("onSecondaryTap", new A.TapGestureRecognizer_handleTapUp_closure1(_this), type$.void);
          break;
        case 4:
          if (_this.onTertiaryTapUp != null)
            _this.invokeCallback$1$2("onTertiaryTapUp", new A.TapGestureRecognizer_handleTapUp_closure2(_this, details), type$.void);
          break;
      }
    },
    handleTapCancel$3$cancel$down$reason(cancel, down, reason) {
      var note, t1, _this = this;
      type$.PointerDownEvent._as(down);
      type$.nullable_PointerCancelEvent._as(cancel);
      B._asString(reason);
      note = reason === "" ? reason : reason + " ";
      switch (down.get$buttons()) {
        case 1:
          t1 = _this.onTapCancel;
          if (t1 != null)
            _this.invokeCallback$1$2(note + "onTapCancel", t1, type$.void);
          break;
        case 2:
          t1 = _this.onSecondaryTapCancel;
          if (t1 != null)
            _this.invokeCallback$1$2(note + "onSecondaryTapCancel", t1, type$.void);
          break;
        case 4:
          t1 = _this.onTertiaryTapCancel;
          if (t1 != null)
            _this.invokeCallback$1$2(note + "onTertiaryTapCancel", t1, type$.void);
          break;
      }
    },
    get$debugDescription() {
      return "tap";
    },
    set$onTapDown(onTapDown) {
      this.onTapDown = type$.nullable_void_Function_TapDownDetails._as(onTapDown);
    },
    set$onTapUp(onTapUp) {
      this.onTapUp = type$.nullable_void_Function_TapUpDetails._as(onTapUp);
    },
    set$onTap(onTap) {
      this.onTap = type$.nullable_void_Function._as(onTap);
    },
    set$onTapCancel(onTapCancel) {
      this.onTapCancel = type$.nullable_void_Function._as(onTapCancel);
    },
    set$onSecondaryTap(onSecondaryTap) {
      this.onSecondaryTap = type$.nullable_void_Function._as(onSecondaryTap);
    },
    set$onSecondaryTapDown(onSecondaryTapDown) {
      this.onSecondaryTapDown = type$.nullable_void_Function_TapDownDetails._as(onSecondaryTapDown);
    },
    set$onSecondaryTapUp(onSecondaryTapUp) {
      this.onSecondaryTapUp = type$.nullable_void_Function_TapUpDetails._as(onSecondaryTapUp);
    },
    set$onSecondaryTapCancel(onSecondaryTapCancel) {
      this.onSecondaryTapCancel = type$.nullable_void_Function._as(onSecondaryTapCancel);
    },
    set$onTertiaryTapDown(onTertiaryTapDown) {
      this.onTertiaryTapDown = type$.nullable_void_Function_TapDownDetails._as(onTertiaryTapDown);
    },
    set$onTertiaryTapUp(onTertiaryTapUp) {
      this.onTertiaryTapUp = type$.nullable_void_Function_TapUpDetails._as(onTertiaryTapUp);
    },
    set$onTertiaryTapCancel(onTertiaryTapCancel) {
      this.onTertiaryTapCancel = type$.nullable_void_Function._as(onTertiaryTapCancel);
    }
  };
  A.Velocity.prototype = {
    $sub(_, other) {
      return A.Velocity$(J.$sub$n(this.pixelsPerSecond, type$.Velocity._as(other).pixelsPerSecond));
    },
    $add(_, other) {
      return A.Velocity$(J.$add$ansx(this.pixelsPerSecond, type$.Velocity._as(other).pixelsPerSecond));
    },
    clampMagnitude$2(minValue, maxValue) {
      var t1, valueSquared;
      B._asDouble(minValue);
      B._asDouble(maxValue);
      t1 = this.pixelsPerSecond;
      valueSquared = t1.get$distanceSquared();
      if (valueSquared > maxValue * maxValue)
        return A.Velocity$(J.$mul$ns(J.$div$n(t1, t1.get$distance()), maxValue));
      if (valueSquared < minValue * minValue)
        return A.Velocity$(J.$mul$ns(J.$div$n(t1, t1.get$distance()), minValue));
      return this;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Velocity && B.boolConversionCheck(J.$eq$(other.pixelsPerSecond, this.pixelsPerSecond));
    },
    get$hashCode(_) {
      return J.get$hashCode$(this.pixelsPerSecond);
    },
    toString$0(_) {
      var t1 = this.pixelsPerSecond;
      return "Velocity(" + B.S(J.toStringAsFixed$1$n(t1.get$dx(), 1)) + ", " + B.S(J.toStringAsFixed$1$n(t1.get$dy(), 1)) + ")";
    }
  };
  A.VelocityEstimate.prototype = {
    toString$0(_) {
      var _this = this,
        t1 = _this.pixelsPerSecond;
      return "VelocityEstimate(" + B.S(J.toStringAsFixed$1$n(t1.get$dx(), 1)) + ", " + B.S(J.toStringAsFixed$1$n(t1.get$dy(), 1)) + "; offset: " + B.S(_this.offset) + ", duration: " + B.S(_this.duration) + ", confidence: " + B.S(J.toStringAsFixed$1$n(_this.confidence, 1)) + ")";
    }
  };
  A._PointAtTime.prototype = {
    toString$0(_) {
      return "_PointAtTime(" + B.S(this.point) + " at " + B.S(this.time) + ")";
    }
  };
  A.VelocityTracker.prototype = {
    get$_sinceLastSample() {
      if (this._stopwatch == null)
        this.set$_stopwatch(E.GestureBinding_instance().get$samplingClock().stopwatch$0());
      var t1 = this._stopwatch;
      t1.toString;
      return t1;
    },
    addPosition$2(time, position) {
      var t1, _this = this;
      type$.Duration._as(time);
      type$.Offset._as(position);
      _this.get$_sinceLastSample().start$0();
      _this.get$_sinceLastSample().reset$0();
      t1 = _this._velocity_tracker$_index;
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_velocity_tracker$_index(t1 + 1);
      if (B.boolConversionCheck(J.$eq$(_this._velocity_tracker$_index, 20)))
        _this._velocity_tracker$_index = 0;
      J.$indexSet$ax(_this._samples, _this._velocity_tracker$_index, A._PointAtTime$(position, time));
    },
    getVelocityEstimate$0() {
      var x, y, w, time, index, t2, newestSample, t3, t4, oldestSample, previousSample, sampleCount, sample, t5, t6, age, position, xFit, yFit,
        t1 = this.get$_sinceLastSample().get$elapsedMilliseconds();
      if (typeof t1 !== "number")
        return t1.$gt();
      if (t1 > 40)
        return C.VelocityEstimate_mRX;
      t1 = type$.JSArray_double;
      x = B._setArrayType([], t1);
      y = B._setArrayType([], t1);
      w = B._setArrayType([], t1);
      time = B._setArrayType([], t1);
      index = this._velocity_tracker$_index;
      t1 = this._samples;
      t2 = J.getInterceptor$asx(t1);
      newestSample = t2.$index(t1, index);
      if (newestSample == null)
        return null;
      t3 = newestSample.time;
      t4 = J.getInterceptor$n(t3);
      oldestSample = newestSample;
      previousSample = oldestSample;
      sampleCount = 0;
      do {
        sample = t2.$index(t1, index);
        if (sample == null)
          break;
        t5 = sample.time;
        t6 = J.toDouble$0$n(t4.$sub(t3, t5).get$inMicroseconds());
        if (typeof t6 !== "number")
          return t6.$div();
        age = t6 / 1000;
        t5 = J.toDouble$0$n(J.abs$0$in(J.$sub$n(t5, previousSample.time).get$inMicroseconds()));
        if (typeof t5 !== "number")
          return t5.$div();
        if (age > 100 || t5 / 1000 > 40)
          break;
        position = sample.point;
        F.JSArray_methods.add$1(x, position.get$dx());
        F.JSArray_methods.add$1(y, position.get$dy());
        F.JSArray_methods.add$1(w, 1);
        F.JSArray_methods.add$1(time, -age);
        index = (index === 0 ? 20 : index) - 1;
        ++sampleCount;
        if (sampleCount < 20) {
          oldestSample = sample;
          previousSample = oldestSample;
          continue;
        } else {
          oldestSample = sample;
          break;
        }
      } while (true);
      if (sampleCount >= 3) {
        xFit = A.LeastSquaresSolver$(time, x, w).solve$1(2);
        if (xFit != null) {
          yFit = A.LeastSquaresSolver$(time, y, w).solve$1(2);
          if (yFit != null) {
            t1 = J.$index$asx(xFit.coefficients, 1);
            if (typeof t1 !== "number")
              return t1.$mul();
            t2 = J.$index$asx(yFit.coefficients, 1);
            if (typeof t2 !== "number")
              return t2.$mul();
            t2 = E.Offset$(t1 * 1000, t2 * 1000);
            t1 = xFit.get$confidence();
            t5 = yFit.get$confidence();
            if (typeof t1 !== "number")
              return t1.$mul();
            if (typeof t5 !== "number")
              return B.iae(t5);
            return A.VelocityEstimate$(t1 * t5, t4.$sub(t3, oldestSample.time), J.$sub$n(newestSample.point, oldestSample.point), t2);
          }
        }
      }
      return A.VelocityEstimate$(1, t4.$sub(t3, oldestSample.time), J.$sub$n(newestSample.point, oldestSample.point), D.Offset_0_0);
    },
    set$_stopwatch(_stopwatch) {
      this._stopwatch = type$.nullable_Stopwatch._as(_stopwatch);
    },
    set$_velocity_tracker$_index(_index) {
      this._velocity_tracker$_index = B._asInt(_index);
    }
  };
  A.ActionIconThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hashAll([_this.backButtonIconBuilder, _this.closeButtonIconBuilder, _this.drawerButtonIconBuilder, _this.endDrawerButtonIconBuilder]);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.ActionIconThemeData && B.boolConversionCheck(J.$eq$(other.backButtonIconBuilder, _this.backButtonIconBuilder)) && B.boolConversionCheck(J.$eq$(other.closeButtonIconBuilder, _this.closeButtonIconBuilder)) && B.boolConversionCheck(J.$eq$(other.drawerButtonIconBuilder, _this.drawerButtonIconBuilder)) && B.boolConversionCheck(J.$eq$(other.endDrawerButtonIconBuilder, _this.endDrawerButtonIconBuilder));
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      t1 = type$.Widget_Function_BuildContext;
      properties.add$1(0, E.DiagnosticsProperty$("backButtonIconBuilder", _this.backButtonIconBuilder, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("closeButtonIconBuilder", _this.closeButtonIconBuilder, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("drawerButtonIconBuilder", _this.drawerButtonIconBuilder, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("endDrawerButtonIconBuilder", _this.endDrawerButtonIconBuilder, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
    },
    $isDiagnosticable: 1
  };
  A._ActionIconThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.ThemeMode.prototype = {
    _enumToString$0() {
      return "ThemeMode." + B.S(this._core$_name);
    }
  };
  A.MaterialApp.prototype = {
    createState$0() {
      return A._MaterialAppState$();
    }
  };
  A.MaterialScrollBehavior.prototype = {
    getPlatform$1(context) {
      return A.Theme_of(type$.BuildContext._as(context)).platform;
    }
  };
  A._MaterialAppState.prototype = {
    get$_heroController() {
      return this.___MaterialAppState__heroController_A;
    },
    set$_heroController(value) {
      this.___MaterialAppState__heroController_A = type$.HeroController._as(value);
    },
    get$_usesRouter() {
      this.get$widget().toString;
      this.get$widget().toString;
      return false;
    },
    initState$0() {
      this.super$State$initState0();
      this.set$_heroController(A.MaterialApp_createMaterialHeroController());
    },
    dispose$0() {
      this.get$_heroController().dispose$0();
      this.super$State$dispose();
    },
    get$_localizationsDelegates() {
      var t1 = B._setArrayType([], type$.JSArray_LocalizationsDelegate_dynamic);
      this.get$widget().toString;
      t1.push(C.C__MaterialLocalizationsDelegate);
      t1.push(C.C__CupertinoLocalizationsDelegate);
      return t1;
    },
    _inspectorSelectButtonBuilder$2(context, onPressed) {
      type$.BuildContext._as(context);
      return A.FloatingActionButton$(C.Icon_IconData_58727_null, true, type$.void_Function._as(onPressed));
    },
    _themeBuilder$1(context) {
      var platformBrightness, useDarkTheme, highContrast, theme, _this = this;
      type$.BuildContext._as(context);
      _this.get$widget().toString;
      platformBrightness = A.MediaQuery_platformBrightnessOf(context);
      useDarkTheme = platformBrightness === D.Brightness_0;
      highContrast = A.MediaQuery_highContrastOf(context);
      if (useDarkTheme)
        if (highContrast)
          _this.get$widget().toString;
      if (useDarkTheme)
        _this.get$widget().toString;
      if (highContrast)
        _this.get$widget().toString;
      _this.get$widget().toString;
      theme = A.ThemeData_ThemeData$light(null);
      return theme;
    },
    _materialBuilder$2(context, child) {
      var theme, t1, effectiveSelectionColor, effectiveCursorColor, childWidget, _this = this;
      type$.BuildContext._as(context);
      type$.nullable_Widget._as(child);
      theme = _this._themeBuilder$1(context);
      t1 = theme.textSelectionTheme;
      effectiveSelectionColor = t1.selectionColor;
      if (effectiveSelectionColor == null)
        effectiveSelectionColor = theme.colorScheme.primary.withOpacity$1(0.4);
      effectiveCursorColor = t1.cursorColor;
      if (effectiveCursorColor == null)
        effectiveCursorColor = theme.colorScheme.primary;
      childWidget = child == null ? C.SizedBox_0_0_null_null : child;
      _this.get$widget().toString;
      if (null != $.$get$AnimationStyle_noAnimation()) {
        _this.get$widget().toString;
        _this.get$widget().toString;
        _this.get$widget().toString;
        _this.get$widget().toString;
        _this.get$widget().toString;
        childWidget = A.AnimatedTheme$(childWidget, C.C__Linear, theme, D.Duration_200000);
      } else
        childWidget = A.Theme$(childWidget, theme);
      _this.get$widget().toString;
      return A.ScaffoldMessenger$(A.DefaultSelectionStyle$(childWidget, effectiveCursorColor, null, null, effectiveSelectionColor), null);
    },
    _buildWidgetApp$1(context) {
      var t1, t2, t3, t4, _this = this, _null = null;
      type$.BuildContext._as(context);
      _this.get$widget().toString;
      _this.get$widget().toString;
      if (B.boolConversionCheck(_this.get$_usesRouter())) {
        t1 = A.GlobalObjectKey$(_this, type$.State_StatefulWidget);
        _this.get$widget().toString;
        _this.get$widget().toString;
        _this.get$widget().toString;
        _this.get$widget().toString;
        _this.get$widget().toString;
        _this.get$widget().toString;
        _this.get$widget().toString;
        _this.get$widget().toString;
        _this.get$widget().toString;
        t2 = _this.get$_localizationsDelegates();
        _this.get$widget().toString;
        _this.get$widget().toString;
        _this.get$widget().toString;
        _this.get$widget().toString;
        _this.get$widget().toString;
        t3 = _this.get$widget().debugShowCheckedModeBanner;
        _this.get$widget().toString;
        _this.get$widget().toString;
        _this.get$widget().toString;
        return A.WidgetsApp$router(_null, _null, _this.get$_materialBuilder(), C.MaterialColor_Map_ky0_4280391411, t3, _this.get$_inspectorSelectButtonBuilder(), t1, _null, _null, _null, t2, _null, _null, _null, _null, _null, _null, _null, _null, false, false, D.List_Locale_en_US, C.TextStyle_eRy, "");
      }
      t1 = A.GlobalObjectKey$(_this, type$.State_StatefulWidget);
      _this.get$widget().toString;
      _this.get$widget().toString;
      t2 = _this.get$widget().home;
      _this.get$widget().toString;
      _this.get$widget().toString;
      _this.get$widget().toString;
      _this.get$widget().toString;
      _this.get$widget().toString;
      _this.get$widget().toString;
      _this.get$widget().toString;
      _this.get$widget().toString;
      _this.get$widget().toString;
      t3 = _this.get$_localizationsDelegates();
      _this.get$widget().toString;
      _this.get$widget().toString;
      _this.get$widget().toString;
      _this.get$widget().toString;
      _this.get$widget().toString;
      t4 = _this.get$widget().debugShowCheckedModeBanner;
      _this.get$widget().toString;
      _this.get$widget().toString;
      _this.get$widget().toString;
      return A.WidgetsApp$(_null, _this.get$_materialBuilder(), C.MaterialColor_Map_ky0_4280391411, t4, t2, _null, _this.get$_inspectorSelectButtonBuilder(), t1, _null, _null, _null, t3, _null, C.List_empty12, _null, _null, _null, _null, _null, new A._MaterialAppState__buildWidgetApp_closure(), _null, C.Map_empty3, _null, false, false, D.List_Locale_en_US, C.TextStyle_eRy, "");
    },
    build$1(context) {
      var _null = null,
        result = E.Focus$(false, false, this._buildWidgetApp$1(type$.BuildContext._as(context)), _null, _null, _null, _null, true, _null, _null, _null, new A._MaterialAppState_build_closure(), _null, _null);
      this.get$widget().toString;
      return A.ScrollConfiguration$(C.C_MaterialScrollBehavior, A.HeroControllerScope$(result, this.get$_heroController()));
    }
  };
  A.AppBarTheme.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.backgroundColor, _this.foregroundColor, _this.elevation, _this.scrolledUnderElevation, _this.shadowColor, _this.surfaceTintColor, _this.shape, _this.iconTheme, _this.actionsIconTheme, _this.centerTitle, _this.titleSpacing, _this.toolbarHeight, _this.toolbarTextStyle, _this.titleTextStyle, _this.systemOverlayStyle, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.AppBarTheme && B.boolConversionCheck(J.$eq$(other.backgroundColor, _this.backgroundColor)) && B.boolConversionCheck(J.$eq$(other.foregroundColor, _this.foregroundColor)) && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.scrolledUnderElevation, _this.scrolledUnderElevation)) && B.boolConversionCheck(J.$eq$(other.shadowColor, _this.shadowColor)) && B.boolConversionCheck(J.$eq$(other.surfaceTintColor, _this.surfaceTintColor)) && B.boolConversionCheck(J.$eq$(other.shape, _this.shape)) && B.boolConversionCheck(J.$eq$(other.iconTheme, _this.iconTheme)) && B.boolConversionCheck(J.$eq$(other.actionsIconTheme, _this.actionsIconTheme)) && B.boolConversionCheck(J.$eq$(other.centerTitle, _this.centerTitle)) && B.boolConversionCheck(J.$eq$(other.titleSpacing, _this.titleSpacing)) && B.boolConversionCheck(J.$eq$(other.toolbarHeight, _this.toolbarHeight)) && B.boolConversionCheck(J.$eq$(other.toolbarTextStyle, _this.toolbarTextStyle)) && B.boolConversionCheck(J.$eq$(other.titleTextStyle, _this.titleTextStyle)) && B.boolConversionCheck(J.$eq$(other.systemOverlayStyle, _this.systemOverlayStyle));
    },
    debugFillProperties$1(properties) {
      var t1, t2, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.ColorProperty$("backgroundColor", _this.backgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("foregroundColor", _this.foregroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      t1 = type$.double;
      properties.add$1(0, E.DiagnosticsProperty$("elevation", _this.elevation, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("scrolledUnderElevation", _this.scrolledUnderElevation, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, A.ColorProperty$("shadowColor", _this.shadowColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceTintColor", _this.surfaceTintColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.shape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ShapeBorder));
      t2 = type$.IconThemeData;
      properties.add$1(0, E.DiagnosticsProperty$("iconTheme", _this.iconTheme, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("actionsIconTheme", _this.actionsIconTheme, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("centerTitle", _this.centerTitle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
      properties.add$1(0, E.DiagnosticsProperty$("titleSpacing", _this.titleSpacing, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("toolbarHeight", _this.toolbarHeight, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      t1 = type$.TextStyle;
      properties.add$1(0, E.DiagnosticsProperty$("toolbarTextStyle", _this.toolbarTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("titleTextStyle", _this.titleTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
    },
    $isDiagnosticable: 1
  };
  A._AppBarTheme_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.MaterialPointArcTween.prototype = {
    _initialize$0() {
      var t2, delta, deltaX, deltaY, distanceFromAtoB, c, t3, t4, t5, t6, t7, _this = this,
        t1 = _this.begin;
      t1.toString;
      t2 = _this.end;
      t2.toString;
      delta = t2.$sub(0, t1);
      deltaX = J.abs$0$in(delta.get$dx());
      deltaY = J.abs$0$in(delta.get$dy());
      distanceFromAtoB = delta.get$distance();
      c = E.Offset$(t2.get$dx(), t1.get$dy());
      t3 = new A.MaterialPointArcTween__initialize_sweepAngle(_this, distanceFromAtoB);
      if (deltaX > 2 && deltaY > 2) {
        t4 = distanceFromAtoB * distanceFromAtoB;
        if (deltaX < deltaY) {
          t5 = c.$sub(0, t1).get$distance();
          if (typeof t5 !== "number")
            return B.iae(t5);
          _this._arc$_radius = t4 / t5 / 2;
          t5 = t2.get$dx();
          t4 = _this._arc$_radius;
          t4.toString;
          t6 = t1.get$dx();
          t7 = t2.get$dx();
          if (typeof t6 !== "number")
            return t6.$sub();
          if (typeof t7 !== "number")
            return B.iae(t7);
          t7 = J.get$sign$in(t6 - t7);
          if (typeof t4 !== "number")
            return t4.$mul();
          if (typeof t7 !== "number")
            return B.iae(t7);
          if (typeof t5 !== "number")
            return t5.$add();
          _this._center = E.Offset$(t5 + t4 * t7, t2.get$dy());
          t4 = t1.get$dx();
          t5 = t2.get$dx();
          if (typeof t4 !== "number")
            return t4.$lt();
          if (typeof t5 !== "number")
            return B.iae(t5);
          if (t4 < t5) {
            t3 = t3.call$0();
            t1 = t1.get$dy();
            t2 = t2.get$dy();
            if (typeof t1 !== "number")
              return t1.$sub();
            if (typeof t2 !== "number")
              return B.iae(t2);
            t2 = J.get$sign$in(t1 - t2);
            if (typeof t3 !== "number")
              return t3.$mul();
            if (typeof t2 !== "number")
              return B.iae(t2);
            _this._beginAngle = t3 * t2;
            _this._endAngle = 0;
          } else {
            t3 = t3.call$0();
            t2 = t2.get$dy();
            t1 = t1.get$dy();
            if (typeof t2 !== "number")
              return t2.$sub();
            if (typeof t1 !== "number")
              return B.iae(t1);
            t1 = J.get$sign$in(t2 - t1);
            if (typeof t3 !== "number")
              return t3.$mul();
            if (typeof t1 !== "number")
              return B.iae(t1);
            _this._beginAngle = 3.141592653589793 + t3 * t1;
            _this._endAngle = 3.141592653589793;
          }
        } else {
          t5 = c.$sub(0, t2).get$distance();
          if (typeof t5 !== "number")
            return B.iae(t5);
          _this._arc$_radius = t4 / t5 / 2;
          t5 = t1.get$dx();
          t4 = t1.get$dy();
          t6 = t2.get$dy();
          t7 = t1.get$dy();
          if (typeof t6 !== "number")
            return t6.$sub();
          if (typeof t7 !== "number")
            return B.iae(t7);
          t7 = J.get$sign$in(t6 - t7);
          t6 = _this._arc$_radius;
          t6.toString;
          if (typeof t7 !== "number")
            return t7.$mul();
          if (typeof t6 !== "number")
            return B.iae(t6);
          if (typeof t4 !== "number")
            return t4.$add();
          _this._center = E.Offset$(t5, t4 + t7 * t6);
          t4 = t1.get$dy();
          t5 = t2.get$dy();
          if (typeof t4 !== "number")
            return t4.$lt();
          if (typeof t5 !== "number")
            return B.iae(t5);
          if (t4 < t5) {
            _this._beginAngle = -1.5707963267948966;
            t3 = t3.call$0();
            t2 = t2.get$dx();
            t1 = t1.get$dx();
            if (typeof t2 !== "number")
              return t2.$sub();
            if (typeof t1 !== "number")
              return B.iae(t1);
            t1 = J.get$sign$in(t2 - t1);
            if (typeof t3 !== "number")
              return t3.$mul();
            if (typeof t1 !== "number")
              return B.iae(t1);
            _this._endAngle = -1.5707963267948966 + t3 * t1;
          } else {
            _this._beginAngle = 1.5707963267948966;
            t3 = t3.call$0();
            t1 = t1.get$dx();
            t2 = t2.get$dx();
            if (typeof t1 !== "number")
              return t1.$sub();
            if (typeof t2 !== "number")
              return B.iae(t2);
            t2 = J.get$sign$in(t1 - t2);
            if (typeof t3 !== "number")
              return t3.$mul();
            if (typeof t2 !== "number")
              return B.iae(t2);
            _this._endAngle = 1.5707963267948966 + t3 * t2;
          }
        }
      } else
        _this._endAngle = _this._beginAngle = null;
      _this._arc$_dirty = false;
    },
    get$center() {
      var _this = this;
      if (_this.begin == null || _this.end == null)
        return null;
      if (B.boolConversionCheck(_this._arc$_dirty))
        _this._initialize$0();
      return _this._center;
    },
    get$radius() {
      var _this = this;
      if (_this.begin == null || _this.end == null)
        return null;
      if (B.boolConversionCheck(_this._arc$_dirty))
        _this._initialize$0();
      return _this._arc$_radius;
    },
    get$beginAngle() {
      var _this = this;
      if (_this.begin == null || _this.end == null)
        return null;
      if (B.boolConversionCheck(_this._arc$_dirty))
        _this._initialize$0();
      return _this._beginAngle;
    },
    get$endAngle() {
      var _this = this;
      if (_this.begin == null || _this.end == null)
        return null;
      if (B.boolConversionCheck(_this._arc$_dirty))
        _this._initialize$0();
      return _this._beginAngle;
    },
    set$begin(value) {
      type$.nullable_Offset._as(value);
      if (!B.boolConversionCheck(J.$eq$(value, this.begin))) {
        this.begin = value;
        this._arc$_dirty = true;
      }
    },
    set$end(value) {
      type$.nullable_Offset._as(value);
      if (!B.boolConversionCheck(J.$eq$(value, this.end))) {
        this.end = value;
        this._arc$_dirty = true;
      }
    },
    lerp$1(t) {
      var t1, t2, t3, t4, _this = this;
      B._asDouble(t);
      if (B.boolConversionCheck(_this._arc$_dirty))
        _this._initialize$0();
      if (t === 0) {
        t1 = _this.begin;
        t1.toString;
        return t1;
      }
      if (t === 1) {
        t1 = _this.end;
        t1.toString;
        return t1;
      }
      t1 = _this._beginAngle;
      if (t1 == null || _this._endAngle == null) {
        t1 = A.Offset_lerp(_this.begin, _this.end, t);
        t1.toString;
        return t1;
      }
      t1 = A.lerpDouble(t1, _this._endAngle, t);
      t1.toString;
      t2 = A.cos(t1);
      t3 = _this._arc$_radius;
      t3.toString;
      if (typeof t2 !== "number")
        return t2.$mul();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t1 = A.sin(t1);
      if (typeof t1 !== "number")
        return t1.$mul();
      t4 = _this._center;
      t4.toString;
      return J.$add$ansx(t4, E.Offset$(t2 * t3, t1 * t3));
    },
    toString$0(_) {
      var _this = this;
      return B.S(E.objectRuntimeType(_this, "MaterialPointArcTween")) + "(" + B.S(_this.begin) + " \u2192 " + B.S(_this.end) + "; center=" + B.S(_this.get$center()) + ", radius=" + B.S(_this.get$radius()) + ", beginAngle=" + B.S(_this.get$beginAngle()) + ", endAngle=" + B.S(_this.get$endAngle()) + ")";
    }
  };
  A._CornerId.prototype = {
    _enumToString$0() {
      return "_CornerId." + B.S(this._core$_name);
    }
  };
  A._Diagonal.prototype = {};
  A.MaterialRectArcTween.prototype = {
    _initialize$0() {
      var t2, t3, _this = this,
        diagonal = A._maxBy(C.List_i3t, new A.MaterialRectArcTween__initialize_closure(_this, J.$sub$n(_this.end.get$center(), _this.begin.get$center())), type$._Diagonal),
        t1 = _this.begin;
      t1.toString;
      t2 = diagonal.beginId;
      t1 = _this._cornerFor$2(t1, t2);
      t3 = _this.end;
      t3.toString;
      _this.set$_beginArc(A.MaterialPointArcTween$(t1, _this._cornerFor$2(t3, t2)));
      t2 = _this.begin;
      t2.toString;
      t3 = diagonal.endId;
      t2 = _this._cornerFor$2(t2, t3);
      t1 = _this.end;
      t1.toString;
      _this.set$_endArc(A.MaterialPointArcTween$(t2, _this._cornerFor$2(t1, t3)));
      _this._arc$_dirty = false;
    },
    _diagonalSupport$2(centersVector, diagonal) {
      var t1, t2, delta, $length, t3, t4, _this = this;
      type$.Offset._as(centersVector);
      type$._Diagonal._as(diagonal);
      t1 = _this.begin;
      t1.toString;
      t1 = _this._cornerFor$2(t1, diagonal.endId);
      t2 = _this.begin;
      t2.toString;
      delta = J.$sub$n(t1, _this._cornerFor$2(t2, diagonal.beginId));
      $length = delta.get$distance();
      t2 = centersVector.get$dx();
      t1 = delta.get$dx();
      if (typeof t2 !== "number")
        return t2.$mul();
      if (typeof t1 !== "number")
        return B.iae(t1);
      t3 = centersVector.get$dy();
      t4 = delta.get$dy();
      if (typeof t3 !== "number")
        return t3.$mul();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return t2 * t1 / $length + t3 * t4 / $length;
    },
    _cornerFor$2(rect, id) {
      var t1;
      type$.Rect._as(rect);
      switch (type$._CornerId._as(id).index) {
        case 0:
          t1 = rect.get$topLeft();
          break;
        case 1:
          t1 = rect.get$topRight();
          break;
        case 2:
          t1 = rect.get$bottomLeft();
          break;
        case 3:
          t1 = rect.get$bottomRight();
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    get$beginArc() {
      var _this = this;
      if (_this.begin == null)
        return null;
      if (B.boolConversionCheck(_this._arc$_dirty))
        _this._initialize$0();
      return _this.get$_beginArc();
    },
    get$_beginArc() {
      return this.__MaterialRectArcTween__beginArc_A;
    },
    set$_beginArc(value) {
      this.__MaterialRectArcTween__beginArc_A = type$.MaterialPointArcTween._as(value);
    },
    get$endArc() {
      var _this = this;
      if (_this.end == null)
        return null;
      if (B.boolConversionCheck(_this._arc$_dirty))
        _this._initialize$0();
      return _this.get$_endArc();
    },
    get$_endArc() {
      return this.__MaterialRectArcTween__endArc_A;
    },
    set$_endArc(value) {
      this.__MaterialRectArcTween__endArc_A = type$.MaterialPointArcTween._as(value);
    },
    set$begin(value) {
      type$.nullable_Rect._as(value);
      if (!B.boolConversionCheck(J.$eq$(value, this.begin))) {
        this.begin = value;
        this._arc$_dirty = true;
      }
    },
    set$end(value) {
      type$.nullable_Rect._as(value);
      if (!B.boolConversionCheck(J.$eq$(value, this.end))) {
        this.end = value;
        this._arc$_dirty = true;
      }
    },
    lerp$1(t) {
      var t1, _this = this;
      B._asDouble(t);
      if (B.boolConversionCheck(_this._arc$_dirty))
        _this._initialize$0();
      if (t === 0) {
        t1 = _this.begin;
        t1.toString;
        return t1;
      }
      if (t === 1) {
        t1 = _this.end;
        t1.toString;
        return t1;
      }
      return A.Rect$fromPoints(_this.get$_beginArc().lerp$1(t), _this.get$_endArc().lerp$1(t));
    },
    toString$0(_) {
      var _this = this;
      return B.S(E.objectRuntimeType(_this, "MaterialRectArcTween")) + "(" + B.S(_this.begin) + " \u2192 " + B.S(_this.end) + "; beginArc=" + B.S(_this.get$beginArc()) + ", endArc=" + B.S(_this.get$endArc()) + ")";
    }
  };
  A.BadgeThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.backgroundColor, _this.textColor, _this.smallSize, _this.largeSize, _this.textStyle, _this.padding, _this.alignment, _this.offset, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.BadgeThemeData && B.boolConversionCheck(J.$eq$(other.backgroundColor, _this.backgroundColor)) && B.boolConversionCheck(J.$eq$(other.textColor, _this.textColor)) && B.boolConversionCheck(J.$eq$(other.smallSize, _this.smallSize)) && B.boolConversionCheck(J.$eq$(other.largeSize, _this.largeSize)) && B.boolConversionCheck(J.$eq$(other.textStyle, _this.textStyle)) && B.boolConversionCheck(J.$eq$(other.padding, _this.padding)) && B.boolConversionCheck(J.$eq$(other.alignment, _this.alignment)) && B.boolConversionCheck(J.$eq$(other.offset, _this.offset));
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.ColorProperty$("backgroundColor", _this.backgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("textColor", _this.textColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DoubleProperty$("smallSize", _this.smallSize, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("largeSize", _this.largeSize, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DiagnosticsProperty$("textStyle", _this.textStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextStyle));
      properties.add$1(0, E.DiagnosticsProperty$("padding", _this.padding, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.EdgeInsetsGeometry));
      properties.add$1(0, E.DiagnosticsProperty$("alignment", _this.alignment, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.AlignmentGeometry));
      properties.add$1(0, E.DiagnosticsProperty$("offset", _this.offset, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Offset));
    },
    $isDiagnosticable: 1
  };
  A._BadgeThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.MaterialBannerThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.backgroundColor, _this.surfaceTintColor, _this.shadowColor, _this.dividerColor, _this.contentTextStyle, _this.elevation, _this.padding, _this.leadingPadding, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.MaterialBannerThemeData && B.boolConversionCheck(J.$eq$(other.backgroundColor, _this.backgroundColor)) && B.boolConversionCheck(J.$eq$(other.surfaceTintColor, _this.surfaceTintColor)) && B.boolConversionCheck(J.$eq$(other.shadowColor, _this.shadowColor)) && B.boolConversionCheck(J.$eq$(other.dividerColor, _this.dividerColor)) && B.boolConversionCheck(J.$eq$(other.contentTextStyle, _this.contentTextStyle)) && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.padding, _this.padding)) && B.boolConversionCheck(J.$eq$(other.leadingPadding, _this.leadingPadding));
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.ColorProperty$("backgroundColor", _this.backgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceTintColor", _this.surfaceTintColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("shadowColor", _this.shadowColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("dividerColor", _this.dividerColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("contentTextStyle", _this.contentTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextStyle));
      properties.add$1(0, E.DoubleProperty$("elevation", _this.elevation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      t1 = type$.EdgeInsetsGeometry;
      properties.add$1(0, E.DiagnosticsProperty$("padding", _this.padding, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("leadingPadding", _this.leadingPadding, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
    },
    $isDiagnosticable: 1
  };
  A._MaterialBannerThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.BottomAppBarTheme.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.color, _this.elevation, _this.shape, _this.height, _this.surfaceTintColor, _this.shadowColor, _this.padding, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.BottomAppBarTheme && B.boolConversionCheck(J.$eq$(other.color, _this.color)) && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.shape, _this.shape)) && B.boolConversionCheck(J.$eq$(other.height, _this.height)) && B.boolConversionCheck(J.$eq$(other.surfaceTintColor, _this.surfaceTintColor)) && B.boolConversionCheck(J.$eq$(other.shadowColor, _this.shadowColor)) && B.boolConversionCheck(J.$eq$(other.padding, _this.padding));
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.ColorProperty$("color", _this.color, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      t1 = type$.double;
      properties.add$1(0, E.DiagnosticsProperty$("elevation", _this.elevation, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.shape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.NotchedShape));
      properties.add$1(0, E.DiagnosticsProperty$("height", _this.height, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, A.ColorProperty$("surfaceTintColor", _this.surfaceTintColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("shadowColor", _this.shadowColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("padding", _this.padding, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.EdgeInsetsGeometry));
    },
    $isDiagnosticable: 1
  };
  A._BottomAppBarTheme_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.BottomNavigationBarThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.backgroundColor, _this.elevation, _this.selectedIconTheme, _this.unselectedIconTheme, _this.selectedItemColor, _this.unselectedItemColor, _this.selectedLabelStyle, _this.unselectedLabelStyle, _this.showSelectedLabels, _this.showUnselectedLabels, _this.type, _this.enableFeedback, _this.landscapeLayout, _this.mouseCursor, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.BottomNavigationBarThemeData && B.boolConversionCheck(J.$eq$(other.backgroundColor, _this.backgroundColor)) && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.selectedIconTheme, _this.selectedIconTheme)) && B.boolConversionCheck(J.$eq$(other.unselectedIconTheme, _this.unselectedIconTheme)) && B.boolConversionCheck(J.$eq$(other.selectedItemColor, _this.selectedItemColor)) && B.boolConversionCheck(J.$eq$(other.unselectedItemColor, _this.unselectedItemColor)) && B.boolConversionCheck(J.$eq$(other.selectedLabelStyle, _this.selectedLabelStyle)) && B.boolConversionCheck(J.$eq$(other.unselectedLabelStyle, _this.unselectedLabelStyle)) && B.boolConversionCheck(J.$eq$(other.showSelectedLabels, _this.showSelectedLabels)) && B.boolConversionCheck(J.$eq$(other.showUnselectedLabels, _this.showUnselectedLabels)) && B.boolConversionCheck(J.$eq$(other.type, _this.type)) && B.boolConversionCheck(J.$eq$(other.enableFeedback, _this.enableFeedback)) && B.boolConversionCheck(J.$eq$(other.landscapeLayout, _this.landscapeLayout)) && B.boolConversionCheck(J.$eq$(other.mouseCursor, _this.mouseCursor));
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.ColorProperty$("backgroundColor", _this.backgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DoubleProperty$("elevation", _this.elevation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      t1 = type$.IconThemeData;
      properties.add$1(0, E.DiagnosticsProperty$("selectedIconTheme", _this.selectedIconTheme, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("unselectedIconTheme", _this.unselectedIconTheme, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, A.ColorProperty$("selectedItemColor", _this.selectedItemColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("unselectedItemColor", _this.unselectedItemColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      t1 = type$.TextStyle;
      properties.add$1(0, E.DiagnosticsProperty$("selectedLabelStyle", _this.selectedLabelStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("unselectedLabelStyle", _this.unselectedLabelStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      t1 = type$.bool;
      properties.add$1(0, E.DiagnosticsProperty$("showSelectedLabels", _this.showSelectedLabels, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("showUnselectedLabels", _this.showUnselectedLabels, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("type", _this.type, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BottomNavigationBarType));
      properties.add$1(0, E.DiagnosticsProperty$("enableFeedback", _this.enableFeedback, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("landscapeLayout", _this.landscapeLayout, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BottomNavigationBarLandscapeLayout));
      properties.add$1(0, E.DiagnosticsProperty$("mouseCursor", _this.mouseCursor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_MouseCursor));
    },
    $isDiagnosticable: 1
  };
  A._BottomNavigationBarThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.BottomSheetThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.backgroundColor, _this.surfaceTintColor, _this.elevation, _this.modalBackgroundColor, _this.modalBarrierColor, _this.shadowColor, _this.modalElevation, _this.shape, _this.showDragHandle, _this.dragHandleColor, _this.dragHandleSize, _this.clipBehavior, _this.constraints, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.BottomSheetThemeData && B.boolConversionCheck(J.$eq$(other.backgroundColor, _this.backgroundColor)) && B.boolConversionCheck(J.$eq$(other.surfaceTintColor, _this.surfaceTintColor)) && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.modalBackgroundColor, _this.modalBackgroundColor)) && B.boolConversionCheck(J.$eq$(other.shadowColor, _this.shadowColor)) && B.boolConversionCheck(J.$eq$(other.modalBarrierColor, _this.modalBarrierColor)) && B.boolConversionCheck(J.$eq$(other.modalElevation, _this.modalElevation)) && B.boolConversionCheck(J.$eq$(other.shape, _this.shape)) && B.boolConversionCheck(J.$eq$(other.showDragHandle, _this.showDragHandle)) && B.boolConversionCheck(J.$eq$(other.dragHandleColor, _this.dragHandleColor)) && B.boolConversionCheck(J.$eq$(other.dragHandleSize, _this.dragHandleSize)) && B.boolConversionCheck(J.$eq$(other.clipBehavior, _this.clipBehavior)) && B.boolConversionCheck(J.$eq$(other.constraints, _this.constraints));
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.ColorProperty$("backgroundColor", _this.backgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceTintColor", _this.surfaceTintColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DoubleProperty$("elevation", _this.elevation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.ColorProperty$("modalBackgroundColor", _this.modalBackgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("shadowColor", _this.shadowColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("modalBarrierColor", _this.modalBarrierColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DoubleProperty$("modalElevation", _this.modalElevation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.shape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ShapeBorder));
      properties.add$1(0, E.DiagnosticsProperty$("showDragHandle", _this.showDragHandle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
      properties.add$1(0, A.ColorProperty$("dragHandleColor", _this.dragHandleColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("dragHandleSize", _this.dragHandleSize, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Size));
      properties.add$1(0, E.DiagnosticsProperty$("clipBehavior", _this.clipBehavior, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Clip));
      properties.add$1(0, E.DiagnosticsProperty$("constraints", _this.constraints, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BoxConstraints));
    },
    $isDiagnosticable: 1
  };
  A._BottomSheetThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.RawMaterialButton.prototype = {
    get$enabled() {
      return this.onPressed != null;
    },
    createState$0() {
      return A._RawMaterialButtonState$();
    }
  };
  A._RawMaterialButtonState.prototype = {
    initState$0() {
      this.super$State$initState0();
      this.setMaterialState$2(C.WidgetState_6, !B.boolConversionCheck(this.get$widget().get$enabled()));
    },
    didUpdateWidget$1(oldWidget) {
      var _this = this;
      _this.super$State$didUpdateWidget(type$.RawMaterialButton._as(oldWidget));
      _this.setMaterialState$2(C.WidgetState_6, !B.boolConversionCheck(_this.get$widget().get$enabled()));
      if (B.boolConversionCheck(_this.get$isDisabled()) && B.boolConversionCheck(_this.get$isPressed()))
        _this.removeMaterialState$1(C.WidgetState_2);
    },
    get$_effectiveElevation() {
      var _this = this;
      if (B.boolConversionCheck(_this.get$isDisabled()))
        return _this.get$widget().disabledElevation;
      if (B.boolConversionCheck(_this.get$isPressed()))
        return _this.get$widget().highlightElevation;
      if (B.boolConversionCheck(_this.get$isHovered()))
        return _this.get$widget().hoverElevation;
      if (B.boolConversionCheck(_this.get$isFocused()))
        return _this.get$widget().focusElevation;
      return _this.get$widget().elevation;
    },
    build$1(context) {
      var t1, t2, effectiveTextColor, effectiveShape, densityAdjustment, effectiveConstraints, effectiveMouseCursor, t3, padding, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, result, minSize, _this = this, _null = null;
      type$.BuildContext._as(context);
      t1 = _this.get$widget().textStyle;
      t1 = t1 == null ? _null : t1.color;
      t2 = _this.MaterialStateMixin_materialStates;
      effectiveTextColor = A.WidgetStateProperty_resolveAs(t1, t2, type$.nullable_Color);
      effectiveShape = A.WidgetStateProperty_resolveAs(_this.get$widget().shape, t2, type$.nullable_ShapeBorder);
      _this.get$widget().toString;
      densityAdjustment = C.VisualDensity_0_0.get$baseSizeAdjustment();
      _this.get$widget().toString;
      effectiveConstraints = C.VisualDensity_0_0.effectiveConstraints$1(_this.get$widget().constraints);
      t1 = _this.get$widget().mouseCursor;
      if (t1 == null)
        t1 = C.C__EnabledAndDisabledMouseCursor;
      effectiveMouseCursor = A.WidgetStateProperty_resolveAs(t1, t2, type$.nullable_MouseCursor);
      _this.get$widget().toString;
      t2 = densityAdjustment.get$dx();
      t1 = densityAdjustment.get$dy();
      t3 = densityAdjustment.get$dx();
      padding = J.clamp$2$n(D.EdgeInsets_0_0_0_0.add$1(0, A.EdgeInsets$only(densityAdjustment.get$dy(), t2, t3, t1)), D.EdgeInsets_0_0_0_0, C._MixedEdgeInsets_Drw);
      t1 = _this.get$_effectiveElevation();
      t3 = _this.get$widget().textStyle;
      t2 = t3 == null ? _null : t3.copyWith$1$color(effectiveTextColor);
      t3 = _this.get$widget().fillColor;
      t4 = B.boolConversionCheck(A.Theme_of(context).useMaterial3) ? A.Theme_of(context).shadowColor : _null;
      t5 = _this.get$widget().fillColor == null ? C.MaterialType_4 : C.MaterialType_3;
      _this.get$widget().toString;
      t6 = _this.get$widget().clipBehavior;
      t7 = _this.get$widget().focusNode;
      t8 = _this.get$widget().get$enabled();
      t9 = _this.updateMaterialState$1(C.WidgetState_1);
      t10 = _this.get$widget().autofocus;
      _this.get$widget().toString;
      t11 = _this.updateMaterialState$2$onChanged(C.WidgetState_2, _null);
      t12 = _this.get$widget().splashColor;
      _this.get$widget().toString;
      t13 = _this.get$widget().focusColor;
      t14 = _this.get$widget().hoverColor;
      t15 = _this.updateMaterialState$1(C.WidgetState_0);
      t16 = _this.get$widget().onPressed;
      _this.get$widget().toString;
      t17 = _this.get$widget().enableFeedback;
      t18 = A.IconThemeData$(_null, effectiveTextColor, _null, _null, _null, _null, _null, _null, _null);
      result = A.ConstrainedBox$(A.Material$(D.Duration_200000, A.InkWell$(t10, t8, A.IconTheme_merge(A.Padding$(A.Center$(_this.get$widget().child, 1, 1), padding), t18), effectiveShape, t17, t13, t7, _null, t14, effectiveMouseCursor, t9, t11, t15, _null, t16, _null, t12, _null, _null), t6, t3, t1, t4, effectiveShape, _null, t2, t5), effectiveConstraints);
      switch (_this.get$widget().materialTapTargetSize) {
        case C.MaterialTapTargetSize_0:
          t1 = densityAdjustment.get$dx();
          if (typeof t1 !== "number")
            return B.iae(t1);
          t2 = densityAdjustment.get$dy();
          if (typeof t2 !== "number")
            return B.iae(t2);
          minSize = E.Size$(48 + t1, 48 + t2);
          break;
        case C.MaterialTapTargetSize_1:
          minSize = D.Size_0_0;
          break;
        default:
          minSize = _null;
      }
      t1 = _this.get$widget().get$enabled();
      return E.Semantics$(true, A._InputPadding$0(result, minSize), true, t1, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    $isMaterialStateMixin: 1
  };
  A._InputPadding0.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A._RenderInputPadding$0(this.minSize);
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$._RenderInputPadding._as(renderObject).set$minSize(this.minSize);
    }
  };
  A._RenderInputPadding0.prototype = {
    get$minSize() {
      return this._button$_minSize;
    },
    set$minSize(value) {
      type$.Size._as(value);
      if (B.boolConversionCheck(J.$eq$(this._button$_minSize, value)))
        return;
      this._button$_minSize = value;
      this.markNeedsLayout$0();
    },
    _button$_computeSize$2$constraints$layoutChild(constraints, layoutChild) {
      var t1, childSize, _this = this;
      type$.BoxConstraints._as(constraints);
      type$.Size_Function_RenderBox_BoxConstraints._as(layoutChild);
      if (_this.get$child() != null) {
        t1 = _this.get$child();
        t1.toString;
        childSize = layoutChild.call$2(t1, constraints);
        t1 = type$.double;
        return constraints.constrain$1(E.Size$(E.max(childSize.get$width(), _this.get$minSize().get$width(), t1), E.max(childSize.get$height(), _this.get$minSize().get$height(), t1)));
      }
      return D.Size_0_0;
    },
    computeDryLayout$1(constraints) {
      return this._button$_computeSize$2$constraints$layoutChild(type$.BoxConstraints._as(constraints), A.layout_helper_ChildLayoutHelper_dryLayoutChild$closure());
    },
    computeDryBaseline$2(constraints, baseline) {
      var child, result, childSize, t1;
      type$.BoxConstraints._as(constraints);
      type$.TextBaseline._as(baseline);
      child = this.get$child();
      if (child == null)
        return null;
      result = child.getDryBaseline$2(constraints, baseline);
      if (result == null)
        return null;
      childSize = child.getDryLayout$1(constraints);
      t1 = C.Alignment_0_0.alongOffset$1(type$.Offset._as(J.$sub$n(this.getDryLayout$1(constraints), childSize))).get$dy();
      if (typeof t1 !== "number")
        return B.iae(t1);
      return result + t1;
    },
    performLayout$0() {
      var t1, _this = this;
      _this.set$size(_this._button$_computeSize$2$constraints$layoutChild(_this.get$constraints(), A.layout_helper_ChildLayoutHelper_layoutChild$closure()));
      if (_this.get$child() != null) {
        t1 = _this.get$child().parentData;
        t1.toString;
        type$.BoxParentData._as(t1).set$offset(C.Alignment_0_0.alongOffset$1(type$.Offset._as(J.$sub$n(_this.get$size(), _this.get$child().get$size()))));
      }
    },
    hitTest$2$position(result, position) {
      var center;
      type$.BoxHitTestResult._as(result);
      if (B.boolConversionCheck(this.super$RenderBox$hitTest(result, type$.Offset._as(position))))
        return true;
      center = this.get$child().get$size().center$1(D.Offset_0_0);
      return result.addWithRawTransform$3$hitTest$position$transform(new A._RenderInputPadding_hitTest_closure0(this, center), center, A.MatrixUtils_forceToPoint(center));
    }
  };
  A.__RawMaterialButtonState_State_MaterialStateMixin.prototype = {
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$State$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("materialStates", this.MaterialStateMixin_materialStates, true, B.LinkedHashSet_LinkedHashSet$_empty(type$.WidgetState), _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Set_WidgetState));
    },
    $isMaterialStateMixin: 1
  };
  A.ButtonBarThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.alignment, _this.mainAxisSize, _this.buttonTextTheme, _this.buttonMinWidth, _this.buttonHeight, _this.buttonPadding, _this.buttonAlignedDropdown, _this.layoutBehavior, _this.overflowDirection, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.ButtonBarThemeData && B.boolConversionCheck(J.$eq$(other.alignment, _this.alignment)) && B.boolConversionCheck(J.$eq$(other.mainAxisSize, _this.mainAxisSize)) && B.boolConversionCheck(J.$eq$(other.buttonTextTheme, _this.buttonTextTheme)) && B.boolConversionCheck(J.$eq$(other.buttonMinWidth, _this.buttonMinWidth)) && B.boolConversionCheck(J.$eq$(other.buttonHeight, _this.buttonHeight)) && B.boolConversionCheck(J.$eq$(other.buttonPadding, _this.buttonPadding)) && B.boolConversionCheck(J.$eq$(other.buttonAlignedDropdown, _this.buttonAlignedDropdown)) && B.boolConversionCheck(J.$eq$(other.layoutBehavior, _this.layoutBehavior)) && B.boolConversionCheck(J.$eq$(other.overflowDirection, _this.overflowDirection));
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("alignment", _this.alignment, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.MainAxisAlignment));
      properties.add$1(0, E.DiagnosticsProperty$("mainAxisSize", _this.mainAxisSize, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.MainAxisSize));
      properties.add$1(0, E.DiagnosticsProperty$("textTheme", _this.buttonTextTheme, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ButtonTextTheme));
      properties.add$1(0, E.DoubleProperty$("minWidth", _this.buttonMinWidth, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("height", _this.buttonHeight, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DiagnosticsProperty$("padding", _this.buttonPadding, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.EdgeInsetsGeometry));
      properties.add$1(0, E.FlagProperty$("buttonAlignedDropdown", _null, _null, "dropdown width matches button", D.DiagnosticLevel_3, false, _this.buttonAlignedDropdown));
      properties.add$1(0, E.DiagnosticsProperty$("layoutBehavior", _this.layoutBehavior, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ButtonBarLayoutBehavior));
      properties.add$1(0, E.DiagnosticsProperty$("overflowDirection", _this.overflowDirection, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.VerticalDirection));
    },
    $isDiagnosticable: 1
  };
  A._ButtonBarThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.ButtonStyle.prototype = {
    copyWith$24$alignment$animationDuration$backgroundBuilder$backgroundColor$elevation$enableFeedback$fixedSize$foregroundBuilder$foregroundColor$iconColor$iconSize$maximumSize$minimumSize$mouseCursor$overlayColor$padding$shadowColor$shape$side$splashFactory$surfaceTintColor$tapTargetSize$textStyle$visualDensity(alignment, animationDuration, backgroundBuilder, backgroundColor, elevation, enableFeedback, fixedSize, foregroundBuilder, foregroundColor, iconColor, iconSize, maximumSize, minimumSize, mouseCursor, overlayColor, padding, shadowColor, shape, side, splashFactory, surfaceTintColor, tapTargetSize, textStyle, visualDensity) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, _this = this;
      type$.nullable_WidgetStateProperty_nullable_TextStyle._as(textStyle);
      t1 = type$.nullable_WidgetStateProperty_nullable_Color;
      t1._as(backgroundColor);
      t1._as(foregroundColor);
      t1._as(overlayColor);
      t1._as(shadowColor);
      t1._as(surfaceTintColor);
      t2 = type$.nullable_WidgetStateProperty_nullable_double;
      t2._as(elevation);
      type$.nullable_WidgetStateProperty_nullable_EdgeInsetsGeometry._as(padding);
      t3 = type$.nullable_WidgetStateProperty_nullable_Size;
      t3._as(minimumSize);
      t3._as(fixedSize);
      t3._as(maximumSize);
      t1._as(iconColor);
      t2._as(iconSize);
      type$.nullable_WidgetStateProperty_nullable_BorderSide._as(side);
      type$.nullable_WidgetStateProperty_nullable_OutlinedBorder._as(shape);
      type$.nullable_WidgetStateProperty_nullable_MouseCursor._as(mouseCursor);
      type$.nullable_VisualDensity._as(visualDensity);
      type$.nullable_MaterialTapTargetSize._as(tapTargetSize);
      type$.nullable_Duration._as(animationDuration);
      B._asBoolQ(enableFeedback);
      type$.nullable_AlignmentGeometry._as(alignment);
      type$.nullable_InteractiveInkFeatureFactory._as(splashFactory);
      t2 = type$.nullable_Widget_Function_3_BuildContext_and_Set_WidgetState_and_nullable_Widget;
      t2._as(backgroundBuilder);
      t2._as(foregroundBuilder);
      t1 = textStyle == null ? _this.textStyle : textStyle;
      t2 = backgroundColor == null ? _this.get$backgroundColor() : backgroundColor;
      t3 = foregroundColor == null ? _this.get$foregroundColor() : foregroundColor;
      t4 = overlayColor == null ? _this.get$overlayColor() : overlayColor;
      t5 = shadowColor == null ? _this.get$shadowColor() : shadowColor;
      t6 = surfaceTintColor == null ? _this.get$surfaceTintColor() : surfaceTintColor;
      t7 = elevation == null ? _this.get$elevation() : elevation;
      t8 = padding == null ? _this.get$padding() : padding;
      t9 = minimumSize == null ? _this.get$minimumSize() : minimumSize;
      t10 = fixedSize == null ? _this.fixedSize : fixedSize;
      t11 = maximumSize == null ? _this.get$maximumSize() : maximumSize;
      t12 = iconColor == null ? _this.iconColor : iconColor;
      t13 = iconSize == null ? _this.get$iconSize() : iconSize;
      t14 = side == null ? _this.get$side() : side;
      t15 = shape == null ? _this.get$shape() : shape;
      t16 = mouseCursor == null ? _this.get$mouseCursor() : mouseCursor;
      t17 = visualDensity == null ? _this.get$visualDensity() : visualDensity;
      t18 = tapTargetSize == null ? _this.get$tapTargetSize() : tapTargetSize;
      t19 = animationDuration == null ? _this.animationDuration : animationDuration;
      t20 = enableFeedback == null ? _this.enableFeedback : enableFeedback;
      t21 = alignment == null ? _this.alignment : alignment;
      t22 = splashFactory == null ? _this.get$splashFactory() : splashFactory;
      t23 = backgroundBuilder == null ? _this.backgroundBuilder : backgroundBuilder;
      return A.ButtonStyle$(t21, t19, t23, t2, t7, t20, t10, foregroundBuilder == null ? _this.foregroundBuilder : foregroundBuilder, t3, t12, t13, t11, t9, t16, t4, t8, t5, t15, t14, t22, t6, t18, t1, t17);
    },
    merge$1(style) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, _this = this;
      type$.nullable_ButtonStyle._as(style);
      if (style == null)
        return _this;
      t1 = _this.textStyle;
      if (t1 == null)
        t1 = style.textStyle;
      t2 = _this.get$backgroundColor();
      if (t2 == null)
        t2 = style.get$backgroundColor();
      t3 = _this.get$foregroundColor();
      if (t3 == null)
        t3 = style.get$foregroundColor();
      t4 = _this.get$overlayColor();
      if (t4 == null)
        t4 = style.get$overlayColor();
      t5 = _this.get$shadowColor();
      if (t5 == null)
        t5 = style.get$shadowColor();
      t6 = _this.get$surfaceTintColor();
      if (t6 == null)
        t6 = style.get$surfaceTintColor();
      t7 = _this.get$elevation();
      if (t7 == null)
        t7 = style.get$elevation();
      t8 = _this.get$padding();
      if (t8 == null)
        t8 = style.get$padding();
      t9 = _this.get$minimumSize();
      if (t9 == null)
        t9 = style.get$minimumSize();
      t10 = _this.fixedSize;
      if (t10 == null)
        t10 = style.fixedSize;
      t11 = _this.get$maximumSize();
      if (t11 == null)
        t11 = style.get$maximumSize();
      t12 = _this.iconColor;
      if (t12 == null)
        t12 = style.iconColor;
      t13 = _this.get$iconSize();
      if (t13 == null)
        t13 = style.get$iconSize();
      t14 = _this.get$side();
      if (t14 == null)
        t14 = style.get$side();
      t15 = _this.get$shape();
      if (t15 == null)
        t15 = style.get$shape();
      t16 = _this.get$mouseCursor();
      if (t16 == null)
        t16 = style.get$mouseCursor();
      t17 = _this.get$visualDensity();
      if (t17 == null)
        t17 = style.get$visualDensity();
      t18 = _this.get$tapTargetSize();
      if (t18 == null)
        t18 = style.get$tapTargetSize();
      t19 = _this.animationDuration;
      if (t19 == null)
        t19 = style.animationDuration;
      t20 = _this.enableFeedback;
      if (t20 == null)
        t20 = style.enableFeedback;
      t21 = _this.alignment;
      if (t21 == null)
        t21 = style.alignment;
      t22 = _this.get$splashFactory();
      if (t22 == null)
        t22 = style.get$splashFactory();
      t23 = _this.backgroundBuilder;
      if (t23 == null)
        t23 = style.backgroundBuilder;
      t24 = _this.foregroundBuilder;
      return _this.copyWith$24$alignment$animationDuration$backgroundBuilder$backgroundColor$elevation$enableFeedback$fixedSize$foregroundBuilder$foregroundColor$iconColor$iconSize$maximumSize$minimumSize$mouseCursor$overlayColor$padding$shadowColor$shape$side$splashFactory$surfaceTintColor$tapTargetSize$textStyle$visualDensity(t21, t19, t23, t2, t7, t20, t10, t24 == null ? style.foregroundBuilder : t24, t3, t12, t13, t11, t9, t16, t4, t8, t5, t15, t14, t22, t6, t18, t1, t17);
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hashAll([_this.textStyle, _this.get$backgroundColor(), _this.get$foregroundColor(), _this.get$overlayColor(), _this.get$shadowColor(), _this.get$surfaceTintColor(), _this.get$elevation(), _this.get$padding(), _this.get$minimumSize(), _this.fixedSize, _this.get$maximumSize(), _this.iconColor, _this.get$iconSize(), _this.get$side(), _this.get$shape(), _this.get$mouseCursor(), _this.get$visualDensity(), _this.get$tapTargetSize(), _this.animationDuration, _this.enableFeedback, _this.alignment, _this.get$splashFactory(), _this.backgroundBuilder, _this.foregroundBuilder]);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.ButtonStyle && B.boolConversionCheck(J.$eq$(other.textStyle, _this.textStyle)) && B.boolConversionCheck(J.$eq$(other.get$backgroundColor(), _this.get$backgroundColor())) && B.boolConversionCheck(J.$eq$(other.get$foregroundColor(), _this.get$foregroundColor())) && B.boolConversionCheck(J.$eq$(other.get$overlayColor(), _this.get$overlayColor())) && B.boolConversionCheck(J.$eq$(other.get$shadowColor(), _this.get$shadowColor())) && B.boolConversionCheck(J.$eq$(other.get$surfaceTintColor(), _this.get$surfaceTintColor())) && B.boolConversionCheck(J.$eq$(other.get$elevation(), _this.get$elevation())) && B.boolConversionCheck(J.$eq$(other.get$padding(), _this.get$padding())) && B.boolConversionCheck(J.$eq$(other.get$minimumSize(), _this.get$minimumSize())) && B.boolConversionCheck(J.$eq$(other.fixedSize, _this.fixedSize)) && B.boolConversionCheck(J.$eq$(other.get$maximumSize(), _this.get$maximumSize())) && B.boolConversionCheck(J.$eq$(other.iconColor, _this.iconColor)) && B.boolConversionCheck(J.$eq$(other.get$iconSize(), _this.get$iconSize())) && B.boolConversionCheck(J.$eq$(other.get$side(), _this.get$side())) && B.boolConversionCheck(J.$eq$(other.get$shape(), _this.get$shape())) && B.boolConversionCheck(J.$eq$(other.get$mouseCursor(), _this.get$mouseCursor())) && B.boolConversionCheck(J.$eq$(other.get$visualDensity(), _this.get$visualDensity())) && B.boolConversionCheck(J.$eq$(other.get$tapTargetSize(), _this.get$tapTargetSize())) && B.boolConversionCheck(J.$eq$(other.animationDuration, _this.animationDuration)) && B.boolConversionCheck(J.$eq$(other.enableFeedback, _this.enableFeedback)) && B.boolConversionCheck(J.$eq$(other.alignment, _this.alignment)) && B.boolConversionCheck(J.$eq$(other.get$splashFactory(), _this.get$splashFactory())) && B.boolConversionCheck(J.$eq$(other.backgroundBuilder, _this.backgroundBuilder)) && B.boolConversionCheck(J.$eq$(other.foregroundBuilder, _this.foregroundBuilder));
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("textStyle", _this.textStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_TextStyle));
      t1 = type$.WidgetStateProperty_nullable_Color;
      properties.add$1(0, E.DiagnosticsProperty$("backgroundColor", _this.get$backgroundColor(), true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("foregroundColor", _this.get$foregroundColor(), true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("overlayColor", _this.get$overlayColor(), true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("shadowColor", _this.get$shadowColor(), true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("surfaceTintColor", _this.get$surfaceTintColor(), true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      t2 = type$.WidgetStateProperty_nullable_double;
      properties.add$1(0, E.DiagnosticsProperty$("elevation", _this.get$elevation(), true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("padding", _this.get$padding(), true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_EdgeInsetsGeometry));
      t3 = type$.WidgetStateProperty_nullable_Size;
      properties.add$1(0, E.DiagnosticsProperty$("minimumSize", _this.get$minimumSize(), true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      properties.add$1(0, E.DiagnosticsProperty$("fixedSize", _this.fixedSize, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      properties.add$1(0, E.DiagnosticsProperty$("maximumSize", _this.get$maximumSize(), true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      properties.add$1(0, E.DiagnosticsProperty$("iconColor", _this.iconColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("iconSize", _this.get$iconSize(), true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("side", _this.get$side(), true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_BorderSide));
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.get$shape(), true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_OutlinedBorder));
      properties.add$1(0, E.DiagnosticsProperty$("mouseCursor", _this.get$mouseCursor(), true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_MouseCursor));
      properties.add$1(0, E.DiagnosticsProperty$("visualDensity", _this.get$visualDensity(), true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.VisualDensity));
      properties.add$1(0, E.EnumProperty$("tapTargetSize", _this.get$tapTargetSize(), _null, D.DiagnosticLevel_3, type$.MaterialTapTargetSize));
      properties.add$1(0, E.DiagnosticsProperty$("animationDuration", _this.animationDuration, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Duration));
      properties.add$1(0, E.DiagnosticsProperty$("enableFeedback", _this.enableFeedback, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
      properties.add$1(0, E.DiagnosticsProperty$("alignment", _this.alignment, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.AlignmentGeometry));
      t2 = type$.Widget_Function_3_BuildContext_and_Set_WidgetState_and_nullable_Widget;
      properties.add$1(0, E.DiagnosticsProperty$("backgroundBuilder", _this.backgroundBuilder, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("foregroundBuilder", _this.foregroundBuilder, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
    },
    $isDiagnosticable: 1,
    get$backgroundColor() {
      return this.backgroundColor;
    },
    get$foregroundColor() {
      return this.foregroundColor;
    },
    get$overlayColor() {
      return this.overlayColor;
    },
    get$shadowColor() {
      return this.shadowColor;
    },
    get$surfaceTintColor() {
      return this.surfaceTintColor;
    },
    get$elevation() {
      return this.elevation;
    },
    get$padding() {
      return this.padding;
    },
    get$minimumSize() {
      return this.minimumSize;
    },
    get$maximumSize() {
      return this.maximumSize;
    },
    get$iconSize() {
      return this.iconSize;
    },
    get$side() {
      return this.side;
    },
    get$shape() {
      return this.shape;
    },
    get$mouseCursor() {
      return this.mouseCursor;
    },
    get$visualDensity() {
      return this.visualDensity;
    },
    get$tapTargetSize() {
      return this.tapTargetSize;
    },
    get$splashFactory() {
      return this.splashFactory;
    }
  };
  A._ButtonStyle_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.ButtonStyleButton.prototype = {
    get$enabled() {
      return this.onPressed != null || this.onLongPress != null;
    },
    createState$0() {
      return A._ButtonStyleState$();
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.FlagProperty$("enabled", _null, "disabled", _null, D.DiagnosticLevel_3, false, _this.get$enabled()));
      properties.add$1(0, E.DiagnosticsProperty$("style", _this.style, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ButtonStyle));
      properties.add$1(0, E.DiagnosticsProperty$("focusNode", _this.focusNode, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FocusNode));
    }
  };
  A._ButtonStyleState.prototype = {
    handleStatesControllerChange$0() {
      this.setState$1(new A._ButtonStyleState_handleStatesControllerChange_closure());
    },
    get$statesController() {
      var t1 = this.get$widget().statesController;
      if (t1 == null) {
        t1 = this.internalStatesController;
        t1.toString;
      }
      return t1;
    },
    initStatesController$0() {
      var _this = this;
      if (_this.get$widget().statesController == null)
        _this.internalStatesController = A.WidgetStatesController$(null);
      _this.get$statesController().update$2(C.WidgetState_6, !B.boolConversionCheck(_this.get$widget().get$enabled()));
      _this.get$statesController().addListener$1(_this.get$handleStatesControllerChange());
    },
    initState$0() {
      this.super$State$initState0();
      this.initStatesController$0();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      type$.ButtonStyleButton._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = oldWidget.statesController;
      if (!B.boolConversionCheck(J.$eq$(_this.get$widget().statesController, t1))) {
        if (t1 != null)
          t1.removeListener$1(_this.get$handleStatesControllerChange());
        if (_this.get$widget().statesController != null) {
          t1 = _this.internalStatesController;
          if (t1 != null)
            t1.dispose$0();
          _this.internalStatesController = null;
        }
        _this.initStatesController$0();
      }
      if (!B.boolConversionCheck(J.$eq$(_this.get$widget().get$enabled(), oldWidget.get$enabled()))) {
        _this.get$statesController().update$2(C.WidgetState_6, !B.boolConversionCheck(_this.get$widget().get$enabled()));
        if (!B.boolConversionCheck(_this.get$widget().get$enabled()))
          _this.get$statesController().update$2(C.WidgetState_2, false);
      }
    },
    dispose$0() {
      var t1, _this = this;
      _this.get$statesController().removeListener$1(_this.get$handleStatesControllerChange());
      t1 = _this.internalStatesController;
      if (t1 != null)
        t1.dispose$0();
      t1 = _this.controller;
      if (t1 != null)
        t1.dispose$0();
      _this.super$__ButtonStyleState_State_TickerProviderStateMixin$dispose();
    },
    build$1(context) {
      var effectiveValue, resolve, t1, resolvedElevation, resolvedTextStyle, t2, resolvedBackgroundColor, resolvedForegroundColor, resolvedShadowColor, resolvedSurfaceTintColor, resolvedPadding, t3, resolvedMinimumSize, resolvedFixedSize, resolvedMaximumSize, resolvedIconColor, resolvedIconSize, resolvedSide, resolvedShape, mouseCursor, overlayColor, resolvedVisualDensity, resolvedTapTargetSize, resolvedAnimationDuration, resolvedEnableFeedback, resolvedAlignment, densityAdjustment, resolvedSplashFactory, resolvedBackgroundBuilder, resolvedForegroundBuilder, effectiveClipBehavior, effectiveConstraints, size, dy, dx, padding, effectiveChild, t4, t5, t6, t7, t8, t9, t10, t11, t12, result, minSize, _this = this, _null = null;
      type$.BuildContext._as(context);
      effectiveValue = new A._ButtonStyleState_build_effectiveValue(_this.get$widget().style, _this.get$widget().themeStyleOf$1(context), _this.get$widget().defaultStyleOf$1(context));
      resolve = new A._ButtonStyleState_build_resolve(_this, effectiveValue);
      t1 = type$.nullable_double;
      resolvedElevation = resolve.call$1$1(new A._ButtonStyleState_build_closure(), t1);
      resolvedTextStyle = resolve.call$1$1(new A._ButtonStyleState_build_closure0(), type$.nullable_TextStyle);
      t2 = type$.nullable_Color;
      resolvedBackgroundColor = resolve.call$1$1(new A._ButtonStyleState_build_closure1(), t2);
      resolvedForegroundColor = resolve.call$1$1(new A._ButtonStyleState_build_closure2(), t2);
      resolvedShadowColor = resolve.call$1$1(new A._ButtonStyleState_build_closure3(), t2);
      resolvedSurfaceTintColor = resolve.call$1$1(new A._ButtonStyleState_build_closure4(), t2);
      resolvedPadding = resolve.call$1$1(new A._ButtonStyleState_build_closure5(), type$.nullable_EdgeInsetsGeometry);
      t3 = type$.nullable_Size;
      resolvedMinimumSize = resolve.call$1$1(new A._ButtonStyleState_build_closure6(), t3);
      resolvedFixedSize = resolve.call$1$1(new A._ButtonStyleState_build_closure7(), t3);
      resolvedMaximumSize = resolve.call$1$1(new A._ButtonStyleState_build_closure8(), t3);
      resolvedIconColor = resolve.call$1$1(new A._ButtonStyleState_build_closure9(), t2);
      resolvedIconSize = resolve.call$1$1(new A._ButtonStyleState_build_closure10(), t1);
      resolvedSide = resolve.call$1$1(new A._ButtonStyleState_build_closure11(), type$.nullable_BorderSide);
      resolvedShape = resolve.call$1$1(new A._ButtonStyleState_build_closure12(), type$.nullable_OutlinedBorder);
      mouseCursor = A._MouseCursor$(new A._ButtonStyleState_build_closure13(effectiveValue));
      overlayColor = A.WidgetStateProperty_resolveWith(new A._ButtonStyleState_build_closure14(effectiveValue), t2);
      resolvedVisualDensity = effectiveValue.call$1$1(new A._ButtonStyleState_build_closure15(), type$.VisualDensity);
      resolvedTapTargetSize = effectiveValue.call$1$1(new A._ButtonStyleState_build_closure16(), type$.MaterialTapTargetSize);
      resolvedAnimationDuration = effectiveValue.call$1$1(new A._ButtonStyleState_build_closure17(), type$.Duration);
      resolvedEnableFeedback = effectiveValue.call$1$1(new A._ButtonStyleState_build_closure18(), type$.bool);
      resolvedAlignment = effectiveValue.call$1$1(new A._ButtonStyleState_build_closure19(), type$.AlignmentGeometry);
      densityAdjustment = resolvedVisualDensity.get$baseSizeAdjustment();
      resolvedSplashFactory = effectiveValue.call$1$1(new A._ButtonStyleState_build_closure20(), type$.InteractiveInkFeatureFactory);
      t2 = type$.Widget_Function_3_BuildContext_and_Set_WidgetState_and_nullable_Widget;
      resolvedBackgroundBuilder = effectiveValue.call$1$1(new A._ButtonStyleState_build_closure21(), t2);
      resolvedForegroundBuilder = effectiveValue.call$1$1(new A._ButtonStyleState_build_closure22(), t2);
      effectiveClipBehavior = _this.get$widget().clipBehavior;
      if (effectiveClipBehavior == null)
        effectiveClipBehavior = (resolvedBackgroundBuilder == null ? resolvedForegroundBuilder : resolvedBackgroundBuilder) != null ? D.Clip_2 : D.Clip_0;
      t1 = resolvedMinimumSize.get$width();
      t2 = resolvedMinimumSize.get$height();
      t3 = resolvedMaximumSize.get$width();
      effectiveConstraints = resolvedVisualDensity.effectiveConstraints$1(E.BoxConstraints$(resolvedMaximumSize.get$height(), t3, t2, t1));
      if (resolvedFixedSize != null) {
        size = effectiveConstraints.constrain$1(resolvedFixedSize);
        if (B.boolConversionCheck(J.get$isFinite$n(size.get$width()))) {
          t1 = size.get$width();
          effectiveConstraints = effectiveConstraints.copyWith$2$maxWidth$minWidth(size.get$width(), t1);
        }
        if (B.boolConversionCheck(J.get$isFinite$n(size.get$height()))) {
          t1 = size.get$height();
          effectiveConstraints = effectiveConstraints.copyWith$2$maxHeight$minHeight(size.get$height(), t1);
        }
      }
      dy = densityAdjustment.get$dy();
      dx = E.max(0, densityAdjustment.get$dx(), type$.double);
      resolvedPadding.toString;
      padding = J.clamp$2$n(resolvedPadding.add$1(0, E.EdgeInsets$fromLTRB(dx, dy, dx, dy)), D.EdgeInsets_0_0_0_0, C._MixedEdgeInsets_Drw);
      t1 = false;
      if (B.boolConversionCheck(resolvedAnimationDuration.$gt(0, F.Duration_0))) {
        t2 = _this.elevation;
        if (t2 != null)
          if (_this.backgroundColor != null)
            if (!B.boolConversionCheck(J.$eq$(t2, resolvedElevation)))
              if (!B.boolConversionCheck(J.$eq$(_this.backgroundColor.get$value(), resolvedBackgroundColor.get$value())))
                if (B.boolConversionCheck(J.$eq$(_this.backgroundColor.get$opacity(), 1))) {
                  t1 = resolvedBackgroundColor.get$opacity();
                  if (typeof t1 !== "number")
                    return t1.$lt();
                  t1 = t1 < 1 && resolvedElevation === 0;
                }
      }
      if (t1) {
        t1 = _this.controller;
        if (!B.boolConversionCheck(J.$eq$(t1 == null ? _null : t1.duration, resolvedAnimationDuration))) {
          t1 = _this.controller;
          if (t1 != null)
            t1.dispose$0();
          t1 = A.AnimationController$(_null, resolvedAnimationDuration, _null, _this);
          t1.addStatusListener$1(new A._ButtonStyleState_build_closure23(_this));
          _this.controller = t1;
        }
        resolvedBackgroundColor = _this.backgroundColor;
        _this.controller.set$value(0);
        _this.controller.forward$0();
      }
      _this.elevation = resolvedElevation;
      _this.backgroundColor = resolvedBackgroundColor;
      resolvedAlignment.toString;
      effectiveChild = A.Padding$(A.Align$(resolvedAlignment, resolvedForegroundBuilder != null ? resolvedForegroundBuilder.call$3(context, _this.get$statesController().get$value(), _this.get$widget().child) : _this.get$widget().child, 1, _null, 1), padding);
      if (resolvedBackgroundBuilder != null)
        effectiveChild = resolvedBackgroundBuilder.call$3(context, _this.get$statesController().get$value(), effectiveChild);
      resolvedElevation.toString;
      t1 = resolvedTextStyle == null ? _null : resolvedTextStyle.copyWith$1$color(resolvedForegroundColor);
      t2 = resolvedShape.copyWith$1$side(resolvedSide);
      t3 = resolvedBackgroundColor == null ? C.MaterialType_4 : C.MaterialType_3;
      t4 = _this.get$widget().onPressed;
      t5 = _this.get$widget().onLongPress;
      t6 = _this.get$widget().onHover;
      t7 = _this.get$widget().focusNode;
      t8 = _this.get$widget().get$enabled();
      t9 = _this.get$widget().onFocusChange;
      t10 = _this.get$widget().autofocus;
      t11 = resolvedShape.copyWith$1$side(resolvedSide);
      t12 = _this.get$statesController();
      result = A.ConstrainedBox$(A.Material$(resolvedAnimationDuration, A.InkWell$(t10, t8, A.IconTheme_merge(effectiveChild, A.IconThemeData$(_null, resolvedIconColor == null ? resolvedForegroundColor : resolvedIconColor, _null, _null, _null, _null, _null, resolvedIconSize, _null)), t11, resolvedEnableFeedback, _null, t7, D.Color_0, _null, mouseCursor, t9, _null, t6, t5, t4, overlayColor, _null, resolvedSplashFactory, t12), effectiveClipBehavior, resolvedBackgroundColor, resolvedElevation, resolvedShadowColor, t2, resolvedSurfaceTintColor, t1, t3), effectiveConstraints);
      switch (resolvedTapTargetSize.index) {
        case 0:
          t1 = densityAdjustment.get$dx();
          if (typeof t1 !== "number")
            return B.iae(t1);
          t2 = densityAdjustment.get$dy();
          if (typeof t2 !== "number")
            return B.iae(t2);
          minSize = E.Size$(48 + t1, 48 + t2);
          break;
        case 1:
          minSize = D.Size_0_0;
          break;
        default:
          minSize = _null;
      }
      _this.get$widget().toString;
      t1 = _this.get$widget().get$enabled();
      return E.Semantics$(true, A._InputPadding$(result, minSize), true, t1, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    $isTickerProvider: 1,
    $isTickerProviderStateMixin: 1
  };
  A._MouseCursor.prototype = {
    resolve$1(states) {
      var t1 = this.resolveCallback.call$1(type$.Set_WidgetState._as(states));
      t1.toString;
      return t1;
    },
    get$debugDescription() {
      return "ButtonStyleButton_MouseCursor";
    }
  };
  A._InputPadding.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A._RenderInputPadding$(this.minSize);
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$._RenderInputPadding_2._as(renderObject).set$minSize(this.minSize);
    }
  };
  A._RenderInputPadding.prototype = {
    get$minSize() {
      return this._minSize;
    },
    set$minSize(value) {
      type$.Size._as(value);
      if (B.boolConversionCheck(J.$eq$(this._minSize, value)))
        return;
      this._minSize = value;
      this.markNeedsLayout$0();
    },
    _computeSize$2$constraints$layoutChild(constraints, layoutChild) {
      var t1, childSize, _this = this;
      type$.BoxConstraints._as(constraints);
      type$.Size_Function_RenderBox_BoxConstraints._as(layoutChild);
      if (_this.get$child() != null) {
        t1 = _this.get$child();
        t1.toString;
        childSize = layoutChild.call$2(t1, constraints);
        t1 = type$.double;
        return constraints.constrain$1(E.Size$(E.max(childSize.get$width(), _this.get$minSize().get$width(), t1), E.max(childSize.get$height(), _this.get$minSize().get$height(), t1)));
      }
      return D.Size_0_0;
    },
    computeDryLayout$1(constraints) {
      return this._computeSize$2$constraints$layoutChild(type$.BoxConstraints._as(constraints), A.layout_helper_ChildLayoutHelper_dryLayoutChild$closure());
    },
    computeDryBaseline$2(constraints, baseline) {
      var child, result, childSize, t1;
      type$.BoxConstraints._as(constraints);
      type$.TextBaseline._as(baseline);
      child = this.get$child();
      if (child == null)
        return null;
      result = child.getDryBaseline$2(constraints, baseline);
      if (result == null)
        return null;
      childSize = child.getDryLayout$1(constraints);
      t1 = C.Alignment_0_0.alongOffset$1(type$.Offset._as(J.$sub$n(this.getDryLayout$1(constraints), childSize))).get$dy();
      if (typeof t1 !== "number")
        return B.iae(t1);
      return result + t1;
    },
    performLayout$0() {
      var t1, _this = this;
      _this.set$size(_this._computeSize$2$constraints$layoutChild(_this.get$constraints(), A.layout_helper_ChildLayoutHelper_layoutChild$closure()));
      if (_this.get$child() != null) {
        t1 = _this.get$child().parentData;
        t1.toString;
        type$.BoxParentData._as(t1).set$offset(C.Alignment_0_0.alongOffset$1(type$.Offset._as(J.$sub$n(_this.get$size(), _this.get$child().get$size()))));
      }
    },
    hitTest$2$position(result, position) {
      var center;
      type$.BoxHitTestResult._as(result);
      if (B.boolConversionCheck(this.super$RenderBox$hitTest(result, type$.Offset._as(position))))
        return true;
      center = this.get$child().get$size().center$1(D.Offset_0_0);
      return result.addWithRawTransform$3$hitTest$position$transform(new A._RenderInputPadding_hitTest_closure(this, center), center, A.MatrixUtils_forceToPoint(center));
    }
  };
  A.__ButtonStyleState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$State$debugFillProperties(properties);
      t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null) {
        t2 = B.S(J.get$length$asx(t1));
        t3 = this.TickerProviderStateMixin__tickers;
        t3.toString;
        t3 = B.boolConversionCheck(J.$eq$(J.get$length$asx(t3), 1)) ? "" : "s";
        t3 = "tracking " + t2 + " ticker" + t3;
        t2 = t3;
      } else
        t2 = _null;
      properties.add$1(0, E.DiagnosticsProperty$("tickers", t1, true, _null, t2, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Set_Ticker));
    },
    $isTickerProvider: 1,
    $isTickerProviderStateMixin: 1
  };
  A.ButtonTextTheme.prototype = {
    _enumToString$0() {
      return "ButtonTextTheme." + B.S(this._core$_name);
    }
  };
  A.ButtonBarLayoutBehavior.prototype = {
    _enumToString$0() {
      return "ButtonBarLayoutBehavior." + B.S(this._core$_name);
    }
  };
  A.ButtonThemeData.prototype = {
    get$padding() {
      switch (0) {
        case 0:
          break;
      }
      var t1 = C.EdgeInsets_16_0_16_0;
      return t1;
    },
    get$shape() {
      $label0$0: {
        break $label0$0;
      }
      return C.RoundedRectangleBorder_NYu;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.ButtonThemeData && B.boolConversionCheck(J.$eq$(other.get$padding(), _this.get$padding())) && B.boolConversionCheck(J.$eq$(other.get$shape(), _this.get$shape())) && B.boolConversionCheck(J.$eq$(other._buttonColor, _this._buttonColor)) && B.boolConversionCheck(J.$eq$(other._disabledColor, _this._disabledColor)) && B.boolConversionCheck(J.$eq$(other._focusColor, _this._focusColor)) && B.boolConversionCheck(J.$eq$(other._hoverColor, _this._hoverColor)) && B.boolConversionCheck(J.$eq$(other._highlightColor, _this._highlightColor)) && B.boolConversionCheck(J.$eq$(other._splashColor, _this._splashColor)) && B.boolConversionCheck(J.$eq$(other.colorScheme, _this.colorScheme)) && B.boolConversionCheck(J.$eq$(other._materialTapTargetSize, _this._materialTapTargetSize));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(C.ButtonTextTheme_0, 88, 36, _this.get$padding(), _this.get$shape(), false, _this._buttonColor, _this._disabledColor, _this._focusColor, _this._hoverColor, _this._highlightColor, _this._splashColor, _this.colorScheme, _this._materialTapTargetSize, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.EnumProperty$("textTheme", C.ButtonTextTheme_0, C.ButtonTextTheme_0, D.DiagnosticLevel_3, type$.ButtonTextTheme));
      properties.add$1(0, E.DoubleProperty$("minWidth", 88, 88, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("height", 36, 36, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DiagnosticsProperty$("padding", _this.get$padding(), true, C.ButtonThemeData_LrP.get$padding(), _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.EdgeInsetsGeometry));
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.get$shape(), true, C.ButtonThemeData_LrP.get$shape(), _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ShapeBorder));
      properties.add$1(0, E.FlagProperty$("alignedDropdown", false, _null, "dropdown width matches button", D.DiagnosticLevel_3, false, false));
      properties.add$1(0, A.ColorProperty$("buttonColor", _this._buttonColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("disabledColor", _this._disabledColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("focusColor", _this._focusColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("hoverColor", _this._hoverColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("highlightColor", _this._highlightColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("splashColor", _this._splashColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("colorScheme", _this.colorScheme, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ColorScheme));
      properties.add$1(0, E.DiagnosticsProperty$("materialTapTargetSize", _this._materialTapTargetSize, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.MaterialTapTargetSize));
    },
    $isDiagnosticable: 1
  };
  A._ButtonThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.CardTheme.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.clipBehavior, _this.color, _this.shadowColor, _this.surfaceTintColor, _this.elevation, _this.margin, _this.shape, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.CardTheme && B.boolConversionCheck(J.$eq$(other.clipBehavior, _this.clipBehavior)) && B.boolConversionCheck(J.$eq$(other.color, _this.color)) && B.boolConversionCheck(J.$eq$(other.shadowColor, _this.shadowColor)) && B.boolConversionCheck(J.$eq$(other.surfaceTintColor, _this.surfaceTintColor)) && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.margin, _this.margin)) && B.boolConversionCheck(J.$eq$(other.shape, _this.shape));
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("clipBehavior", _this.clipBehavior, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Clip));
      properties.add$1(0, A.ColorProperty$("color", _this.color, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("shadowColor", _this.shadowColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceTintColor", _this.surfaceTintColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("elevation", _this.elevation, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.double));
      properties.add$1(0, E.DiagnosticsProperty$("margin", _this.margin, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.EdgeInsetsGeometry));
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.shape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ShapeBorder));
    },
    $isDiagnosticable: 1
  };
  A._CardTheme_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.CheckboxThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.mouseCursor, _this.fillColor, _this.checkColor, _this.overlayColor, _this.splashRadius, _this.materialTapTargetSize, _this.visualDensity, _this.shape, _this.side, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.CheckboxThemeData && B.boolConversionCheck(J.$eq$(other.mouseCursor, _this.mouseCursor)) && B.boolConversionCheck(J.$eq$(other.fillColor, _this.fillColor)) && B.boolConversionCheck(J.$eq$(other.checkColor, _this.checkColor)) && B.boolConversionCheck(J.$eq$(other.overlayColor, _this.overlayColor)) && B.boolConversionCheck(J.$eq$(other.splashRadius, _this.splashRadius)) && B.boolConversionCheck(J.$eq$(other.materialTapTargetSize, _this.materialTapTargetSize)) && B.boolConversionCheck(J.$eq$(other.visualDensity, _this.visualDensity)) && B.boolConversionCheck(J.$eq$(other.shape, _this.shape)) && B.boolConversionCheck(J.$eq$(other.side, _this.side));
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("mouseCursor", _this.mouseCursor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_MouseCursor));
      t1 = type$.WidgetStateProperty_nullable_Color;
      properties.add$1(0, E.DiagnosticsProperty$("fillColor", _this.fillColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("checkColor", _this.checkColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("overlayColor", _this.overlayColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DoubleProperty$("splashRadius", _this.splashRadius, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DiagnosticsProperty$("materialTapTargetSize", _this.materialTapTargetSize, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.MaterialTapTargetSize));
      properties.add$1(0, E.DiagnosticsProperty$("visualDensity", _this.visualDensity, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.VisualDensity));
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.shape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.OutlinedBorder));
      properties.add$1(0, E.DiagnosticsProperty$("side", _this.side, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BorderSide));
    },
    $isDiagnosticable: 1
  };
  A._CheckboxThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.ChipThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hashAll([_this.color, _this.backgroundColor, _this.deleteIconColor, _this.disabledColor, _this.selectedColor, _this.secondarySelectedColor, _this.shadowColor, _this.surfaceTintColor, _this.selectedShadowColor, _this.showCheckmark, _this.checkmarkColor, _this.labelPadding, _this.padding, _this.side, _this.shape, _this.labelStyle, _this.secondaryLabelStyle, _this.brightness, _this.elevation, _this.pressElevation, _this.iconTheme, _this.avatarBoxConstraints, _this.deleteIconBoxConstraints]);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.ChipThemeData && B.boolConversionCheck(J.$eq$(other.color, _this.color)) && B.boolConversionCheck(J.$eq$(other.backgroundColor, _this.backgroundColor)) && B.boolConversionCheck(J.$eq$(other.deleteIconColor, _this.deleteIconColor)) && B.boolConversionCheck(J.$eq$(other.disabledColor, _this.disabledColor)) && B.boolConversionCheck(J.$eq$(other.selectedColor, _this.selectedColor)) && B.boolConversionCheck(J.$eq$(other.secondarySelectedColor, _this.secondarySelectedColor)) && B.boolConversionCheck(J.$eq$(other.shadowColor, _this.shadowColor)) && B.boolConversionCheck(J.$eq$(other.surfaceTintColor, _this.surfaceTintColor)) && B.boolConversionCheck(J.$eq$(other.selectedShadowColor, _this.selectedShadowColor)) && B.boolConversionCheck(J.$eq$(other.showCheckmark, _this.showCheckmark)) && B.boolConversionCheck(J.$eq$(other.checkmarkColor, _this.checkmarkColor)) && B.boolConversionCheck(J.$eq$(other.labelPadding, _this.labelPadding)) && B.boolConversionCheck(J.$eq$(other.padding, _this.padding)) && B.boolConversionCheck(J.$eq$(other.side, _this.side)) && B.boolConversionCheck(J.$eq$(other.shape, _this.shape)) && B.boolConversionCheck(J.$eq$(other.labelStyle, _this.labelStyle)) && B.boolConversionCheck(J.$eq$(other.secondaryLabelStyle, _this.secondaryLabelStyle)) && B.boolConversionCheck(J.$eq$(other.brightness, _this.brightness)) && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.pressElevation, _this.pressElevation)) && B.boolConversionCheck(J.$eq$(other.iconTheme, _this.iconTheme)) && B.boolConversionCheck(J.$eq$(other.avatarBoxConstraints, _this.avatarBoxConstraints)) && B.boolConversionCheck(J.$eq$(other.deleteIconBoxConstraints, _this.deleteIconBoxConstraints));
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("color", _this.color, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_Color));
      properties.add$1(0, A.ColorProperty$("backgroundColor", _this.backgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("deleteIconColor", _this.deleteIconColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("disabledColor", _this.disabledColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("selectedColor", _this.selectedColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("secondarySelectedColor", _this.secondarySelectedColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("shadowColor", _this.shadowColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceTintColor", _this.surfaceTintColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("selectedShadowColor", _this.selectedShadowColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("showCheckmark", _this.showCheckmark, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
      properties.add$1(0, A.ColorProperty$("checkMarkColor", _this.checkmarkColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      t1 = type$.EdgeInsetsGeometry;
      properties.add$1(0, E.DiagnosticsProperty$("labelPadding", _this.labelPadding, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("padding", _this.padding, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("side", _this.side, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BorderSide));
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.shape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ShapeBorder));
      t1 = type$.TextStyle;
      properties.add$1(0, E.DiagnosticsProperty$("labelStyle", _this.labelStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("secondaryLabelStyle", _this.secondaryLabelStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.EnumProperty$("brightness", _this.brightness, _null, D.DiagnosticLevel_3, type$.Brightness));
      properties.add$1(0, E.DoubleProperty$("elevation", _this.elevation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("pressElevation", _this.pressElevation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DiagnosticsProperty$("iconTheme", _this.iconTheme, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.IconThemeData));
      t1 = type$.BoxConstraints;
      properties.add$1(0, E.DiagnosticsProperty$("avatarBoxConstraints", _this.avatarBoxConstraints, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("deleteIconBoxConstraints", _this.deleteIconBoxConstraints, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
    },
    $isDiagnosticable: 1
  };
  A._ChipThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.DynamicSchemeVariant.prototype = {
    _enumToString$0() {
      return "DynamicSchemeVariant." + B.S(this._core$_name);
    }
  };
  A.ColorScheme.prototype = {
    get$primaryContainer() {
      var t1 = this._primaryContainer;
      return t1 == null ? this.primary : t1;
    },
    get$onPrimaryContainer() {
      var t1 = this._onPrimaryContainer;
      return t1 == null ? this.onPrimary : t1;
    },
    get$primaryFixed() {
      var t1 = this._primaryFixed;
      return t1 == null ? this.primary : t1;
    },
    get$primaryFixedDim() {
      var t1 = this._primaryFixedDim;
      return t1 == null ? this.primary : t1;
    },
    get$onPrimaryFixed() {
      var t1 = this._onPrimaryFixed;
      return t1 == null ? this.onPrimary : t1;
    },
    get$onPrimaryFixedVariant() {
      var t1 = this._onPrimaryFixedVariant;
      return t1 == null ? this.onPrimary : t1;
    },
    get$secondaryContainer() {
      var t1 = this._secondaryContainer;
      return t1 == null ? this.secondary : t1;
    },
    get$onSecondaryContainer() {
      var t1 = this._onSecondaryContainer;
      return t1 == null ? this.onSecondary : t1;
    },
    get$secondaryFixed() {
      var t1 = this._secondaryFixed;
      return t1 == null ? this.secondary : t1;
    },
    get$secondaryFixedDim() {
      var t1 = this._secondaryFixedDim;
      return t1 == null ? this.secondary : t1;
    },
    get$onSecondaryFixed() {
      var t1 = this._onSecondaryFixed;
      return t1 == null ? this.onSecondary : t1;
    },
    get$onSecondaryFixedVariant() {
      var t1 = this._onSecondaryFixedVariant;
      return t1 == null ? this.onSecondary : t1;
    },
    get$tertiary() {
      var t1 = this._tertiary;
      return t1 == null ? this.secondary : t1;
    },
    get$onTertiary() {
      var t1 = this._onTertiary;
      return t1 == null ? this.onSecondary : t1;
    },
    get$tertiaryContainer() {
      var t1 = this._tertiaryContainer;
      return t1 == null ? this.get$tertiary() : t1;
    },
    get$onTertiaryContainer() {
      var t1 = this._onTertiaryContainer;
      return t1 == null ? this.get$onTertiary() : t1;
    },
    get$tertiaryFixed() {
      var t1 = this._tertiaryFixed;
      return t1 == null ? this.get$tertiary() : t1;
    },
    get$tertiaryFixedDim() {
      var t1 = this._tertiaryFixedDim;
      return t1 == null ? this.get$tertiary() : t1;
    },
    get$onTertiaryFixed() {
      var t1 = this._onTertiaryFixed;
      return t1 == null ? this.get$onTertiary() : t1;
    },
    get$onTertiaryFixedVariant() {
      var t1 = this._onTertiaryFixedVariant;
      return t1 == null ? this.get$onTertiary() : t1;
    },
    get$errorContainer() {
      var t1 = this._errorContainer;
      return t1 == null ? this.error : t1;
    },
    get$onErrorContainer() {
      var t1 = this._onErrorContainer;
      return t1 == null ? this.onError : t1;
    },
    get$surfaceVariant() {
      var t1 = this._surfaceVariant;
      return t1 == null ? this.surface : t1;
    },
    get$surfaceDim() {
      var t1 = this._surfaceDim;
      return t1 == null ? this.surface : t1;
    },
    get$surfaceBright() {
      var t1 = this._surfaceBright;
      return t1 == null ? this.surface : t1;
    },
    get$surfaceContainerLowest() {
      var t1 = this._surfaceContainerLowest;
      return t1 == null ? this.surface : t1;
    },
    get$surfaceContainerLow() {
      var t1 = this._surfaceContainerLow;
      return t1 == null ? this.surface : t1;
    },
    get$surfaceContainer() {
      var t1 = this._surfaceContainer;
      return t1 == null ? this.surface : t1;
    },
    get$surfaceContainerHigh() {
      var t1 = this._surfaceContainerHigh;
      return t1 == null ? this.surface : t1;
    },
    get$surfaceContainerHighest() {
      var t1 = this._surfaceContainerHighest;
      return t1 == null ? this.surface : t1;
    },
    get$onSurfaceVariant() {
      var t1 = this._onSurfaceVariant;
      return t1 == null ? this.onSurface : t1;
    },
    get$outline() {
      var t1 = this._outline;
      return t1 == null ? this.get$onBackground() : t1;
    },
    get$outlineVariant() {
      var t1 = this._outlineVariant;
      return t1 == null ? this.get$onBackground() : t1;
    },
    get$shadow() {
      var t1 = this._shadow;
      return t1 == null ? C.Color_4278190080 : t1;
    },
    get$scrim() {
      var t1 = this._scrim;
      return t1 == null ? C.Color_4278190080 : t1;
    },
    get$inverseSurface() {
      var t1 = this._inverseSurface;
      return t1 == null ? this.onSurface : t1;
    },
    get$onInverseSurface() {
      var t1 = this._onInverseSurface;
      return t1 == null ? this.surface : t1;
    },
    get$inversePrimary() {
      var t1 = this._inversePrimary;
      return t1 == null ? this.onPrimary : t1;
    },
    get$surfaceTint() {
      var t1 = this._surfaceTint;
      return t1 == null ? this.primary : t1;
    },
    get$background() {
      var t1 = this._color_scheme$_background;
      return t1 == null ? this.surface : t1;
    },
    get$onBackground() {
      var t1 = this._onBackground;
      return t1 == null ? this.onSurface : t1;
    },
    copyWith$1$brightness(brightness) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, _this = this;
      type$.nullable_Brightness._as(brightness);
      t1 = brightness == null ? _this.brightness : brightness;
      t2 = _this.get$primaryContainer();
      t3 = _this.get$onPrimaryContainer();
      t4 = _this.get$primaryFixed();
      t5 = _this.get$primaryFixedDim();
      t6 = _this.get$onPrimaryFixed();
      t7 = _this.get$onPrimaryFixedVariant();
      t8 = _this.get$secondaryContainer();
      t9 = _this.get$onSecondaryContainer();
      t10 = _this.get$secondaryFixed();
      t11 = _this.get$secondaryFixedDim();
      t12 = _this.get$onSecondaryFixed();
      t13 = _this.get$onSecondaryFixedVariant();
      t14 = _this.get$tertiary();
      t15 = _this.get$onTertiary();
      t16 = _this.get$tertiaryContainer();
      t17 = _this.get$onTertiaryContainer();
      t18 = _this.get$tertiaryFixed();
      t19 = _this.get$tertiaryFixedDim();
      t20 = _this.get$onTertiaryFixed();
      t21 = _this.get$onTertiaryFixedVariant();
      t22 = _this.get$errorContainer();
      t23 = _this.get$onErrorContainer();
      t24 = _this.get$surfaceDim();
      t25 = _this.get$surfaceBright();
      t26 = _this.get$surfaceContainerLowest();
      t27 = _this.get$surfaceContainerLow();
      t28 = _this.get$surfaceContainer();
      t29 = _this.get$surfaceContainerHigh();
      t30 = _this.get$surfaceContainerHighest();
      t31 = _this.get$onSurfaceVariant();
      t32 = _this.get$outline();
      t33 = _this.get$outlineVariant();
      t34 = _this.get$shadow();
      t35 = _this.get$scrim();
      t36 = _this.get$inverseSurface();
      t37 = _this.get$onInverseSurface();
      t38 = _this.get$inversePrimary();
      t39 = _this.get$surfaceTint();
      t40 = _this.get$background();
      t41 = _this.get$onBackground();
      t42 = _this.get$surfaceVariant();
      return A.ColorScheme$(t40, t1, _this.error, t22, t38, t36, t41, _this.onError, t23, t37, _this.onPrimary, t3, t6, t7, _this.onSecondary, t9, t12, t13, _this.onSurface, t31, t15, t17, t20, t21, t32, t33, _this.primary, t2, t4, t5, t35, _this.secondary, t8, t10, t11, t34, _this.surface, t25, t28, t29, t30, t27, t26, t24, t39, t42, t14, t16, t18, t19);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.ColorScheme && B.boolConversionCheck(J.$eq$(other.brightness, _this.brightness)) && B.boolConversionCheck(J.$eq$(other.primary, _this.primary)) && B.boolConversionCheck(J.$eq$(other.onPrimary, _this.onPrimary)) && B.boolConversionCheck(J.$eq$(other.get$primaryContainer(), _this.get$primaryContainer())) && B.boolConversionCheck(J.$eq$(other.get$onPrimaryContainer(), _this.get$onPrimaryContainer())) && B.boolConversionCheck(J.$eq$(other.get$primaryFixed(), _this.get$primaryFixed())) && B.boolConversionCheck(J.$eq$(other.get$primaryFixedDim(), _this.get$primaryFixedDim())) && B.boolConversionCheck(J.$eq$(other.get$onPrimaryFixed(), _this.get$onPrimaryFixed())) && B.boolConversionCheck(J.$eq$(other.get$onPrimaryFixedVariant(), _this.get$onPrimaryFixedVariant())) && B.boolConversionCheck(J.$eq$(other.secondary, _this.secondary)) && B.boolConversionCheck(J.$eq$(other.onSecondary, _this.onSecondary)) && B.boolConversionCheck(J.$eq$(other.get$secondaryContainer(), _this.get$secondaryContainer())) && B.boolConversionCheck(J.$eq$(other.get$onSecondaryContainer(), _this.get$onSecondaryContainer())) && B.boolConversionCheck(J.$eq$(other.get$secondaryFixed(), _this.get$secondaryFixed())) && B.boolConversionCheck(J.$eq$(other.get$secondaryFixedDim(), _this.get$secondaryFixedDim())) && B.boolConversionCheck(J.$eq$(other.get$onSecondaryFixed(), _this.get$onSecondaryFixed())) && B.boolConversionCheck(J.$eq$(other.get$onSecondaryFixedVariant(), _this.get$onSecondaryFixedVariant())) && B.boolConversionCheck(J.$eq$(other.get$tertiary(), _this.get$tertiary())) && B.boolConversionCheck(J.$eq$(other.get$onTertiary(), _this.get$onTertiary())) && B.boolConversionCheck(J.$eq$(other.get$tertiaryContainer(), _this.get$tertiaryContainer())) && B.boolConversionCheck(J.$eq$(other.get$onTertiaryContainer(), _this.get$onTertiaryContainer())) && B.boolConversionCheck(J.$eq$(other.get$tertiaryFixed(), _this.get$tertiaryFixed())) && B.boolConversionCheck(J.$eq$(other.get$tertiaryFixedDim(), _this.get$tertiaryFixedDim())) && B.boolConversionCheck(J.$eq$(other.get$onTertiaryFixed(), _this.get$onTertiaryFixed())) && B.boolConversionCheck(J.$eq$(other.get$onTertiaryFixedVariant(), _this.get$onTertiaryFixedVariant())) && B.boolConversionCheck(J.$eq$(other.error, _this.error)) && B.boolConversionCheck(J.$eq$(other.onError, _this.onError)) && B.boolConversionCheck(J.$eq$(other.get$errorContainer(), _this.get$errorContainer())) && B.boolConversionCheck(J.$eq$(other.get$onErrorContainer(), _this.get$onErrorContainer())) && B.boolConversionCheck(J.$eq$(other.surface, _this.surface)) && B.boolConversionCheck(J.$eq$(other.onSurface, _this.onSurface)) && B.boolConversionCheck(J.$eq$(other.get$surfaceDim(), _this.get$surfaceDim())) && B.boolConversionCheck(J.$eq$(other.get$surfaceBright(), _this.get$surfaceBright())) && B.boolConversionCheck(J.$eq$(other.get$surfaceContainerLowest(), _this.get$surfaceContainerLowest())) && B.boolConversionCheck(J.$eq$(other.get$surfaceContainerLow(), _this.get$surfaceContainerLow())) && B.boolConversionCheck(J.$eq$(other.get$surfaceContainer(), _this.get$surfaceContainer())) && B.boolConversionCheck(J.$eq$(other.get$surfaceContainerHigh(), _this.get$surfaceContainerHigh())) && B.boolConversionCheck(J.$eq$(other.get$surfaceContainerHighest(), _this.get$surfaceContainerHighest())) && B.boolConversionCheck(J.$eq$(other.get$onSurfaceVariant(), _this.get$onSurfaceVariant())) && B.boolConversionCheck(J.$eq$(other.get$outline(), _this.get$outline())) && B.boolConversionCheck(J.$eq$(other.get$outlineVariant(), _this.get$outlineVariant())) && B.boolConversionCheck(J.$eq$(other.get$shadow(), _this.get$shadow())) && B.boolConversionCheck(J.$eq$(other.get$scrim(), _this.get$scrim())) && B.boolConversionCheck(J.$eq$(other.get$inverseSurface(), _this.get$inverseSurface())) && B.boolConversionCheck(J.$eq$(other.get$onInverseSurface(), _this.get$onInverseSurface())) && B.boolConversionCheck(J.$eq$(other.get$inversePrimary(), _this.get$inversePrimary())) && B.boolConversionCheck(J.$eq$(other.get$surfaceTint(), _this.get$surfaceTint())) && B.boolConversionCheck(J.$eq$(other.get$background(), _this.get$background())) && B.boolConversionCheck(J.$eq$(other.get$onBackground(), _this.get$onBackground())) && B.boolConversionCheck(J.$eq$(other.get$surfaceVariant(), _this.get$surfaceVariant()));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.brightness, _this.primary, _this.onPrimary, _this.get$primaryContainer(), _this.get$onPrimaryContainer(), _this.secondary, _this.onSecondary, _this.get$secondaryContainer(), _this.get$onSecondaryContainer(), _this.get$tertiary(), _this.get$onTertiary(), _this.get$tertiaryContainer(), _this.get$onTertiaryContainer(), _this.error, _this.onError, _this.get$errorContainer(), _this.get$onErrorContainer(), B.Object_hash(_this.surface, _this.onSurface, _this.get$surfaceDim(), _this.get$surfaceBright(), _this.get$surfaceContainerLowest(), _this.get$surfaceContainerLow(), _this.get$surfaceContainer(), _this.get$surfaceContainerHigh(), _this.get$surfaceContainerHighest(), _this.get$onSurfaceVariant(), _this.get$outline(), _this.get$outlineVariant(), _this.get$shadow(), _this.get$scrim(), _this.get$inverseSurface(), _this.get$onInverseSurface(), _this.get$inversePrimary(), _this.get$surfaceTint(), B.Object_hash(_this.get$primaryFixed(), _this.get$primaryFixedDim(), _this.get$onPrimaryFixed(), _this.get$onPrimaryFixedVariant(), _this.get$secondaryFixed(), _this.get$secondaryFixedDim(), _this.get$onSecondaryFixed(), _this.get$onSecondaryFixedVariant(), _this.get$tertiaryFixed(), _this.get$tertiaryFixedDim(), _this.get$onTertiaryFixed(), _this.get$onTertiaryFixedVariant(), _this.get$background(), _this.get$onBackground(), _this.get$surfaceVariant(), F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue), F.C_SentinelValue), F.C_SentinelValue, F.C_SentinelValue);
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("brightness", _this.brightness, true, D.Brightness_1, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Brightness));
      properties.add$1(0, A.ColorProperty$("primary", _this.primary, C.Color_4284612846, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("onPrimary", _this.onPrimary, C.Color_4294967295, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("primaryContainer", _this.get$primaryContainer(), C.ColorScheme_2Vk.get$primaryContainer(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("onPrimaryContainer", _this.get$onPrimaryContainer(), C.ColorScheme_2Vk.get$onPrimaryContainer(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("primaryFixed", _this.get$primaryFixed(), C.ColorScheme_2Vk.get$primaryFixed(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("primaryFixedDim", _this.get$primaryFixedDim(), C.ColorScheme_2Vk.get$primaryFixedDim(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("onPrimaryFixed", _this.get$onPrimaryFixed(), C.ColorScheme_2Vk.get$onPrimaryFixed(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("onPrimaryFixedVariant", _this.get$onPrimaryFixedVariant(), C.ColorScheme_2Vk.get$onPrimaryFixedVariant(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("secondary", _this.secondary, C.Color_4278442694, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("onSecondary", _this.onSecondary, C.Color_4278190080, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("secondaryContainer", _this.get$secondaryContainer(), C.ColorScheme_2Vk.get$secondaryContainer(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("onSecondaryContainer", _this.get$onSecondaryContainer(), C.ColorScheme_2Vk.get$onSecondaryContainer(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("secondaryFixed", _this.get$secondaryFixed(), C.ColorScheme_2Vk.get$secondaryFixed(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("secondaryFixedDim", _this.get$secondaryFixedDim(), C.ColorScheme_2Vk.get$secondaryFixedDim(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("onSecondaryFixed", _this.get$onSecondaryFixed(), C.ColorScheme_2Vk.get$onSecondaryFixed(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("onSecondaryFixedVariant", _this.get$onSecondaryFixedVariant(), C.ColorScheme_2Vk.get$onSecondaryFixedVariant(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("tertiary", _this.get$tertiary(), C.ColorScheme_2Vk.get$tertiary(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("onTertiary", _this.get$onTertiary(), C.ColorScheme_2Vk.get$onTertiary(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("tertiaryContainer", _this.get$tertiaryContainer(), C.ColorScheme_2Vk.get$tertiaryContainer(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("onTertiaryContainer", _this.get$onTertiaryContainer(), C.ColorScheme_2Vk.get$onTertiaryContainer(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("tertiaryFixed", _this.get$tertiaryFixed(), C.ColorScheme_2Vk.get$tertiaryFixed(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("tertiaryFixedDim", _this.get$tertiaryFixedDim(), C.ColorScheme_2Vk.get$tertiaryFixedDim(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("onTertiaryFixed", _this.get$onTertiaryFixed(), C.ColorScheme_2Vk.get$onTertiaryFixed(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("onTertiaryFixedVariant", _this.get$onTertiaryFixedVariant(), C.ColorScheme_2Vk.get$onTertiaryFixedVariant(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("error", _this.error, C.Color_4289724448, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("onError", _this.onError, C.Color_4294967295, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("errorContainer", _this.get$errorContainer(), C.ColorScheme_2Vk.get$errorContainer(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("onErrorContainer", _this.get$onErrorContainer(), C.ColorScheme_2Vk.get$onErrorContainer(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surface", _this.surface, C.Color_4294967295, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("onSurface", _this.onSurface, C.Color_4278190080, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceDim", _this.get$surfaceDim(), C.ColorScheme_2Vk.get$surfaceDim(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceBright", _this.get$surfaceBright(), C.ColorScheme_2Vk.get$surfaceBright(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceContainerLowest", _this.get$surfaceContainerLowest(), C.ColorScheme_2Vk.get$surfaceContainerLowest(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceContainerLow", _this.get$surfaceContainerLow(), C.ColorScheme_2Vk.get$surfaceContainerLow(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceContainer", _this.get$surfaceContainer(), C.ColorScheme_2Vk.get$surfaceContainer(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceContainerHigh", _this.get$surfaceContainerHigh(), C.ColorScheme_2Vk.get$surfaceContainerHigh(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceContainerHighest", _this.get$surfaceContainerHighest(), C.ColorScheme_2Vk.get$surfaceContainerHighest(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("onSurfaceVariant", _this.get$onSurfaceVariant(), C.ColorScheme_2Vk.get$onSurfaceVariant(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("outline", _this.get$outline(), C.ColorScheme_2Vk.get$outline(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("outlineVariant", _this.get$outlineVariant(), C.ColorScheme_2Vk.get$outlineVariant(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("shadow", _this.get$shadow(), C.ColorScheme_2Vk.get$shadow(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("scrim", _this.get$scrim(), C.ColorScheme_2Vk.get$scrim(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("inverseSurface", _this.get$inverseSurface(), C.ColorScheme_2Vk.get$inverseSurface(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("onInverseSurface", _this.get$onInverseSurface(), C.ColorScheme_2Vk.get$onInverseSurface(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("inversePrimary", _this.get$inversePrimary(), C.ColorScheme_2Vk.get$inversePrimary(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceTint", _this.get$surfaceTint(), C.ColorScheme_2Vk.get$surfaceTint(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("background", _this.get$background(), C.ColorScheme_2Vk.get$background(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("onBackground", _this.get$onBackground(), C.ColorScheme_2Vk.get$onBackground(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceVariant", _this.get$surfaceVariant(), C.ColorScheme_2Vk.get$surfaceVariant(), D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
    },
    $isDiagnosticable: 1
  };
  A._ColorScheme_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.MaterialColor.prototype = {};
  A.MaterialAccentColor.prototype = {};
  A.DataTableThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.decoration, _this.dataRowColor, _this.dataRowMinHeight, _this.dataRowMaxHeight, _this.dataTextStyle, _this.headingRowColor, _this.headingRowHeight, _this.headingTextStyle, _this.horizontalMargin, _this.columnSpacing, _this.dividerThickness, _this.checkboxHorizontalMargin, _this.headingCellCursor, _this.dataRowCursor, _this.headingRowAlignment, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.DataTableThemeData && B.boolConversionCheck(J.$eq$(other.decoration, _this.decoration)) && B.boolConversionCheck(J.$eq$(other.dataRowColor, _this.dataRowColor)) && B.boolConversionCheck(J.$eq$(other.dataRowMinHeight, _this.dataRowMinHeight)) && B.boolConversionCheck(J.$eq$(other.dataRowMaxHeight, _this.dataRowMaxHeight)) && B.boolConversionCheck(J.$eq$(other.dataTextStyle, _this.dataTextStyle)) && B.boolConversionCheck(J.$eq$(other.headingRowColor, _this.headingRowColor)) && B.boolConversionCheck(J.$eq$(other.headingRowHeight, _this.headingRowHeight)) && B.boolConversionCheck(J.$eq$(other.headingTextStyle, _this.headingTextStyle)) && B.boolConversionCheck(J.$eq$(other.horizontalMargin, _this.horizontalMargin)) && B.boolConversionCheck(J.$eq$(other.columnSpacing, _this.columnSpacing)) && B.boolConversionCheck(J.$eq$(other.dividerThickness, _this.dividerThickness)) && B.boolConversionCheck(J.$eq$(other.checkboxHorizontalMargin, _this.checkboxHorizontalMargin)) && B.boolConversionCheck(J.$eq$(other.headingCellCursor, _this.headingCellCursor)) && B.boolConversionCheck(J.$eq$(other.dataRowCursor, _this.dataRowCursor)) && B.boolConversionCheck(J.$eq$(other.headingRowAlignment, _this.headingRowAlignment));
    },
    debugFillProperties$1(properties) {
      var t1, t2, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("decoration", _this.decoration, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Decoration));
      t1 = type$.WidgetStateProperty_nullable_Color;
      properties.add$1(0, E.DiagnosticsProperty$("dataRowColor", _this.dataRowColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DoubleProperty$("dataRowMinHeight", _this.dataRowMinHeight, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("dataRowMaxHeight", _this.dataRowMaxHeight, _null, _null, D.DiagnosticLevel_3, _null, _null));
      t2 = type$.TextStyle;
      properties.add$1(0, E.DiagnosticsProperty$("dataTextStyle", _this.dataTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("headingRowColor", _this.headingRowColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DoubleProperty$("headingRowHeight", _this.headingRowHeight, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DiagnosticsProperty$("headingTextStyle", _this.headingTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DoubleProperty$("horizontalMargin", _this.horizontalMargin, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("columnSpacing", _this.columnSpacing, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("dividerThickness", _this.dividerThickness, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("checkboxHorizontalMargin", _this.checkboxHorizontalMargin, _null, _null, D.DiagnosticLevel_3, _null, _null));
      t2 = type$.nullable_WidgetStateProperty_nullable_MouseCursor;
      properties.add$1(0, E.DiagnosticsProperty$("headingCellCursor", _this.headingCellCursor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("dataRowCursor", _this.dataRowCursor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.EnumProperty$("headingRowAlignment", _this.headingRowAlignment, _null, D.DiagnosticLevel_3, type$.MainAxisAlignment));
    },
    $isDiagnosticable: 1
  };
  A._DataTableThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.DatePickerThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hashAll([_this.backgroundColor, _this.elevation, _this.shadowColor, _this.surfaceTintColor, _this.shape, _this.headerBackgroundColor, _this.headerForegroundColor, _this.headerHeadlineStyle, _this.headerHelpStyle, _this.weekdayStyle, _this.dayStyle, _this.dayForegroundColor, _this.dayBackgroundColor, _this.dayOverlayColor, _this.dayShape, _this.todayForegroundColor, _this.todayBackgroundColor, _this.todayBorder, _this.yearStyle, _this.yearForegroundColor, _this.yearBackgroundColor, _this.yearOverlayColor, _this.rangePickerBackgroundColor, _this.rangePickerElevation, _this.rangePickerShadowColor, _this.rangePickerSurfaceTintColor, _this.rangePickerShape, _this.rangePickerHeaderBackgroundColor, _this.rangePickerHeaderForegroundColor, _this.rangePickerHeaderHeadlineStyle, _this.rangePickerHeaderHelpStyle, _this.rangeSelectionBackgroundColor, _this.rangeSelectionOverlayColor, _this.dividerColor, _this.inputDecorationTheme, _this.cancelButtonStyle, _this.confirmButtonStyle, _this.locale]);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      return other instanceof A.DatePickerThemeData && B.boolConversionCheck(J.$eq$(other.backgroundColor, _this.backgroundColor)) && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.shadowColor, _this.shadowColor)) && B.boolConversionCheck(J.$eq$(other.surfaceTintColor, _this.surfaceTintColor)) && B.boolConversionCheck(J.$eq$(other.shape, _this.shape)) && B.boolConversionCheck(J.$eq$(other.headerBackgroundColor, _this.headerBackgroundColor)) && B.boolConversionCheck(J.$eq$(other.headerForegroundColor, _this.headerForegroundColor)) && B.boolConversionCheck(J.$eq$(other.headerHeadlineStyle, _this.headerHeadlineStyle)) && B.boolConversionCheck(J.$eq$(other.headerHelpStyle, _this.headerHelpStyle)) && B.boolConversionCheck(J.$eq$(other.weekdayStyle, _this.weekdayStyle)) && B.boolConversionCheck(J.$eq$(other.dayStyle, _this.dayStyle)) && B.boolConversionCheck(J.$eq$(other.dayForegroundColor, _this.dayForegroundColor)) && B.boolConversionCheck(J.$eq$(other.dayBackgroundColor, _this.dayBackgroundColor)) && B.boolConversionCheck(J.$eq$(other.dayOverlayColor, _this.dayOverlayColor)) && B.boolConversionCheck(J.$eq$(other.dayShape, _this.dayShape)) && B.boolConversionCheck(J.$eq$(other.todayForegroundColor, _this.todayForegroundColor)) && B.boolConversionCheck(J.$eq$(other.todayBackgroundColor, _this.todayBackgroundColor)) && B.boolConversionCheck(J.$eq$(other.todayBorder, _this.todayBorder)) && B.boolConversionCheck(J.$eq$(other.yearStyle, _this.yearStyle)) && B.boolConversionCheck(J.$eq$(other.yearForegroundColor, _this.yearForegroundColor)) && B.boolConversionCheck(J.$eq$(other.yearBackgroundColor, _this.yearBackgroundColor)) && B.boolConversionCheck(J.$eq$(other.yearOverlayColor, _this.yearOverlayColor)) && B.boolConversionCheck(J.$eq$(other.rangePickerBackgroundColor, _this.rangePickerBackgroundColor)) && B.boolConversionCheck(J.$eq$(other.rangePickerElevation, _this.rangePickerElevation)) && B.boolConversionCheck(J.$eq$(other.rangePickerShadowColor, _this.rangePickerShadowColor)) && B.boolConversionCheck(J.$eq$(other.rangePickerSurfaceTintColor, _this.rangePickerSurfaceTintColor)) && B.boolConversionCheck(J.$eq$(other.rangePickerShape, _this.rangePickerShape)) && B.boolConversionCheck(J.$eq$(other.rangePickerHeaderBackgroundColor, _this.rangePickerHeaderBackgroundColor)) && B.boolConversionCheck(J.$eq$(other.rangePickerHeaderForegroundColor, _this.rangePickerHeaderForegroundColor)) && B.boolConversionCheck(J.$eq$(other.rangePickerHeaderHeadlineStyle, _this.rangePickerHeaderHeadlineStyle)) && B.boolConversionCheck(J.$eq$(other.rangePickerHeaderHelpStyle, _this.rangePickerHeaderHelpStyle)) && B.boolConversionCheck(J.$eq$(other.rangeSelectionBackgroundColor, _this.rangeSelectionBackgroundColor)) && B.boolConversionCheck(J.$eq$(other.rangeSelectionOverlayColor, _this.rangeSelectionOverlayColor)) && B.boolConversionCheck(J.$eq$(other.dividerColor, _this.dividerColor)) && B.boolConversionCheck(J.$eq$(other.inputDecorationTheme, _this.inputDecorationTheme)) && B.boolConversionCheck(J.$eq$(other.cancelButtonStyle, _this.cancelButtonStyle)) && B.boolConversionCheck(J.$eq$(other.confirmButtonStyle, _this.confirmButtonStyle)) && B.boolConversionCheck(J.$eq$(other.locale, _this.locale));
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.ColorProperty$("backgroundColor", _this.backgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DoubleProperty$("elevation", _this.elevation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.ColorProperty$("shadowColor", _this.shadowColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceTintColor", _this.surfaceTintColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      t1 = type$.ShapeBorder;
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.shape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, A.ColorProperty$("headerBackgroundColor", _this.headerBackgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("headerForegroundColor", _this.headerForegroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      t2 = type$.TextStyle;
      properties.add$1(0, E.DiagnosticsProperty$("headerHeadlineStyle", _this.headerHeadlineStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("headerHelpStyle", _this.headerHelpStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("weekDayStyle", _this.weekdayStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("dayStyle", _this.dayStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      t3 = type$.WidgetStateProperty_nullable_Color;
      properties.add$1(0, E.DiagnosticsProperty$("dayForegroundColor", _this.dayForegroundColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      properties.add$1(0, E.DiagnosticsProperty$("dayBackgroundColor", _this.dayBackgroundColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      properties.add$1(0, E.DiagnosticsProperty$("dayOverlayColor", _this.dayOverlayColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      properties.add$1(0, E.DiagnosticsProperty$("dayShape", _this.dayShape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_OutlinedBorder));
      properties.add$1(0, E.DiagnosticsProperty$("todayForegroundColor", _this.todayForegroundColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      properties.add$1(0, E.DiagnosticsProperty$("todayBackgroundColor", _this.todayBackgroundColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      properties.add$1(0, E.DiagnosticsProperty$("todayBorder", _this.todayBorder, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.nullable_BorderSide));
      properties.add$1(0, E.DiagnosticsProperty$("yearStyle", _this.yearStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("yearForegroundColor", _this.yearForegroundColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      properties.add$1(0, E.DiagnosticsProperty$("yearBackgroundColor", _this.yearBackgroundColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      properties.add$1(0, E.DiagnosticsProperty$("yearOverlayColor", _this.yearOverlayColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      properties.add$1(0, A.ColorProperty$("rangePickerBackgroundColor", _this.rangePickerBackgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DoubleProperty$("rangePickerElevation", _this.rangePickerElevation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.ColorProperty$("rangePickerShadowColor", _this.rangePickerShadowColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("rangePickerSurfaceTintColor", _this.rangePickerSurfaceTintColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("rangePickerShape", _this.rangePickerShape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, A.ColorProperty$("rangePickerHeaderBackgroundColor", _this.rangePickerHeaderBackgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("rangePickerHeaderForegroundColor", _this.rangePickerHeaderForegroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("rangePickerHeaderHeadlineStyle", _this.rangePickerHeaderHeadlineStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("rangePickerHeaderHelpStyle", _this.rangePickerHeaderHelpStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, A.ColorProperty$("rangeSelectionBackgroundColor", _this.rangeSelectionBackgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("rangeSelectionOverlayColor", _this.rangeSelectionOverlayColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      properties.add$1(0, A.ColorProperty$("dividerColor", _this.dividerColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("inputDecorationTheme", _this.inputDecorationTheme, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.InputDecorationTheme));
      t3 = type$.ButtonStyle;
      properties.add$1(0, E.DiagnosticsProperty$("cancelButtonStyle", _this.cancelButtonStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      properties.add$1(0, E.DiagnosticsProperty$("confirmButtonStyle", _this.confirmButtonStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      properties.add$1(0, E.DiagnosticsProperty$("locale", _this.locale, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Locale));
    },
    $isDiagnosticable: 1
  };
  A._DatePickerThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.DialogTheme.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hashAll([_this.backgroundColor, _this.elevation, _this.shadowColor, _this.surfaceTintColor, _this.shape, _this.alignment, _this.iconColor, _this.titleTextStyle, _this.contentTextStyle, _this.actionsPadding, _this.barrierColor, _this.insetPadding, _this.clipBehavior]);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.DialogTheme && B.boolConversionCheck(J.$eq$(other.backgroundColor, _this.backgroundColor)) && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.shadowColor, _this.shadowColor)) && B.boolConversionCheck(J.$eq$(other.surfaceTintColor, _this.surfaceTintColor)) && B.boolConversionCheck(J.$eq$(other.shape, _this.shape)) && B.boolConversionCheck(J.$eq$(other.alignment, _this.alignment)) && B.boolConversionCheck(J.$eq$(other.iconColor, _this.iconColor)) && B.boolConversionCheck(J.$eq$(other.titleTextStyle, _this.titleTextStyle)) && B.boolConversionCheck(J.$eq$(other.contentTextStyle, _this.contentTextStyle)) && B.boolConversionCheck(J.$eq$(other.actionsPadding, _this.actionsPadding)) && B.boolConversionCheck(J.$eq$(other.barrierColor, _this.barrierColor)) && B.boolConversionCheck(J.$eq$(other.insetPadding, _this.insetPadding)) && B.boolConversionCheck(J.$eq$(other.clipBehavior, _this.clipBehavior));
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.ColorProperty$("backgroundColor", _this.backgroundColor, D.C__NoDefaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DoubleProperty$("elevation", _this.elevation, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.ColorProperty$("shadowColor", _this.shadowColor, D.C__NoDefaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceTintColor", _this.surfaceTintColor, D.C__NoDefaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.shape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ShapeBorder));
      properties.add$1(0, E.DiagnosticsProperty$("alignment", _this.alignment, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.AlignmentGeometry));
      properties.add$1(0, A.ColorProperty$("iconColor", _this.iconColor, D.C__NoDefaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      t1 = type$.TextStyle;
      properties.add$1(0, E.DiagnosticsProperty$("titleTextStyle", _this.titleTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("contentTextStyle", _this.contentTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("actionsPadding", _this.actionsPadding, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.EdgeInsetsGeometry));
      properties.add$1(0, A.ColorProperty$("barrierColor", _this.barrierColor, D.C__NoDefaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("insetPadding", _this.insetPadding, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.EdgeInsets));
      properties.add$1(0, E.DiagnosticsProperty$("clipBehavior", _this.clipBehavior, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Clip));
    },
    $isDiagnosticable: 1
  };
  A._DialogTheme_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.DividerThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.color, _this.space, _this.thickness, _this.indent, _this.endIndent, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.DividerThemeData && B.boolConversionCheck(J.$eq$(other.color, _this.color)) && B.boolConversionCheck(J.$eq$(other.space, _this.space)) && B.boolConversionCheck(J.$eq$(other.thickness, _this.thickness)) && B.boolConversionCheck(J.$eq$(other.indent, _this.indent)) && B.boolConversionCheck(J.$eq$(other.endIndent, _this.endIndent));
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.ColorProperty$("color", _this.color, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DoubleProperty$("space", _this.space, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("thickness", _this.thickness, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("indent", _this.indent, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("endIndent", _this.endIndent, _null, _null, D.DiagnosticLevel_3, _null, _null));
    },
    $isDiagnosticable: 1
  };
  A._DividerThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.DrawerThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.backgroundColor, _this.scrimColor, _this.elevation, _this.shadowColor, _this.surfaceTintColor, _this.shape, _this.endShape, _this.width, _this.clipBehavior, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.DrawerThemeData && B.boolConversionCheck(J.$eq$(other.backgroundColor, _this.backgroundColor)) && B.boolConversionCheck(J.$eq$(other.scrimColor, _this.scrimColor)) && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.shadowColor, _this.shadowColor)) && B.boolConversionCheck(J.$eq$(other.surfaceTintColor, _this.surfaceTintColor)) && B.boolConversionCheck(J.$eq$(other.shape, _this.shape)) && B.boolConversionCheck(J.$eq$(other.endShape, _this.endShape)) && B.boolConversionCheck(J.$eq$(other.width, _this.width)) && B.boolConversionCheck(J.$eq$(other.clipBehavior, _this.clipBehavior));
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.ColorProperty$("backgroundColor", _this.backgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("scrimColor", _this.scrimColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DoubleProperty$("elevation", _this.elevation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.ColorProperty$("shadowColor", _this.shadowColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceTintColor", _this.surfaceTintColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      t1 = type$.ShapeBorder;
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.shape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("endShape", _this.endShape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DoubleProperty$("width", _this.width, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DiagnosticsProperty$("clipBehavior", _this.clipBehavior, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Clip));
    },
    $isDiagnosticable: 1
  };
  A._DrawerThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.DropdownMenuThemeData.prototype = {
    get$hashCode(_) {
      return B.Object_hash(this.textStyle, this.inputDecorationTheme, this.menuStyle, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.DropdownMenuThemeData && B.boolConversionCheck(J.$eq$(other.textStyle, _this.textStyle)) && B.boolConversionCheck(J.$eq$(other.inputDecorationTheme, _this.inputDecorationTheme)) && B.boolConversionCheck(J.$eq$(other.menuStyle, _this.menuStyle));
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("textStyle", _this.textStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextStyle));
      properties.add$1(0, E.DiagnosticsProperty$("inputDecorationTheme", _this.inputDecorationTheme, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.InputDecorationTheme));
      properties.add$1(0, E.DiagnosticsProperty$("menuStyle", _this.menuStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.MenuStyle));
    },
    $isDiagnosticable: 1
  };
  A._DropdownMenuThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.ElevatedButtonThemeData.prototype = {
    get$hashCode(_) {
      return J.get$hashCode$(this.style);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.ElevatedButtonThemeData && B.boolConversionCheck(J.$eq$(other.style, this.style));
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("style", this.style, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ButtonStyle));
    },
    $isDiagnosticable: 1
  };
  A._ElevatedButtonThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A._ElevationOpacity.prototype = {};
  A.ExpansionTileThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.backgroundColor, _this.collapsedBackgroundColor, _this.tilePadding, _this.expandedAlignment, _this.childrenPadding, _this.iconColor, _this.collapsedIconColor, _this.textColor, _this.collapsedTextColor, _this.shape, _this.collapsedShape, _this.clipBehavior, _this.expansionAnimationStyle, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.ExpansionTileThemeData && B.boolConversionCheck(J.$eq$(other.backgroundColor, _this.backgroundColor)) && B.boolConversionCheck(J.$eq$(other.collapsedBackgroundColor, _this.collapsedBackgroundColor)) && B.boolConversionCheck(J.$eq$(other.tilePadding, _this.tilePadding)) && B.boolConversionCheck(J.$eq$(other.expandedAlignment, _this.expandedAlignment)) && B.boolConversionCheck(J.$eq$(other.childrenPadding, _this.childrenPadding)) && B.boolConversionCheck(J.$eq$(other.iconColor, _this.iconColor)) && B.boolConversionCheck(J.$eq$(other.collapsedIconColor, _this.collapsedIconColor)) && B.boolConversionCheck(J.$eq$(other.textColor, _this.textColor)) && B.boolConversionCheck(J.$eq$(other.collapsedTextColor, _this.collapsedTextColor)) && B.boolConversionCheck(J.$eq$(other.shape, _this.shape)) && B.boolConversionCheck(J.$eq$(other.collapsedShape, _this.collapsedShape)) && B.boolConversionCheck(J.$eq$(other.clipBehavior, _this.clipBehavior)) && B.boolConversionCheck(J.$eq$(other.expansionAnimationStyle, _this.expansionAnimationStyle));
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.ColorProperty$("backgroundColor", _this.backgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("collapsedBackgroundColor", _this.collapsedBackgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      t1 = type$.EdgeInsetsGeometry;
      properties.add$1(0, E.DiagnosticsProperty$("tilePadding", _this.tilePadding, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("expandedAlignment", _this.expandedAlignment, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.AlignmentGeometry));
      properties.add$1(0, E.DiagnosticsProperty$("childrenPadding", _this.childrenPadding, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, A.ColorProperty$("iconColor", _this.iconColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("collapsedIconColor", _this.collapsedIconColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("textColor", _this.textColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("collapsedTextColor", _this.collapsedTextColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      t1 = type$.ShapeBorder;
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.shape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("collapsedShape", _this.collapsedShape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("clipBehavior", _this.clipBehavior, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Clip));
      properties.add$1(0, E.DiagnosticsProperty$("expansionAnimationStyle", _this.expansionAnimationStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.AnimationStyle));
    },
    $isDiagnosticable: 1
  };
  A._ExpansionTileThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.FilledButtonThemeData.prototype = {
    get$hashCode(_) {
      return J.get$hashCode$(this.style);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.FilledButtonThemeData && B.boolConversionCheck(J.$eq$(other.style, this.style));
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("style", this.style, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ButtonStyle));
    },
    $isDiagnosticable: 1
  };
  A._FilledButtonThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A._DefaultHeroTag.prototype = {
    toString$0(_) {
      return "<default FloatingActionButton tag>";
    }
  };
  A._FloatingActionButtonType.prototype = {
    _enumToString$0() {
      return "_FloatingActionButtonType." + B.S(this._core$_name);
    }
  };
  A.FloatingActionButton.prototype = {
    build$1(context) {
      var theme, floatingActionButtonTheme, t1, resolvedChild, t2, defaults, foregroundColor, backgroundColor, focusColor, hoverColor, splashColor, elevation, focusElevation, hoverElevation, disabledElevation, highlightElevation, materialTapTargetSize, enableFeedback, iconSize, extendedTextStyle, shape, resolvedChild0, sizeConstraints, padding, result, _null = null;
      type$.BuildContext._as(context);
      theme = A.Theme_of(context);
      floatingActionButtonTheme = theme.floatingActionButtonTheme;
      t1 = this._floatingActionButtonType;
      resolvedChild = this.child;
      t2 = resolvedChild == null;
      defaults = B.boolConversionCheck(theme.useMaterial3) ? A._FABDefaultsM3$(context, t1, !t2) : A._FABDefaultsM2$(context, t1, !t2);
      foregroundColor = floatingActionButtonTheme.get$foregroundColor();
      if (foregroundColor == null) {
        t2 = defaults.get$foregroundColor();
        t2.toString;
        foregroundColor = t2;
      }
      backgroundColor = floatingActionButtonTheme.get$backgroundColor();
      if (backgroundColor == null) {
        t2 = defaults.get$backgroundColor();
        t2.toString;
        backgroundColor = t2;
      }
      focusColor = floatingActionButtonTheme.get$focusColor();
      if (focusColor == null) {
        t2 = defaults.get$focusColor();
        t2.toString;
        focusColor = t2;
      }
      hoverColor = floatingActionButtonTheme.get$hoverColor();
      if (hoverColor == null) {
        t2 = defaults.get$hoverColor();
        t2.toString;
        hoverColor = t2;
      }
      splashColor = floatingActionButtonTheme.get$splashColor();
      if (splashColor == null) {
        t2 = defaults.get$splashColor();
        t2.toString;
        splashColor = t2;
      }
      elevation = floatingActionButtonTheme.elevation;
      if (elevation == null) {
        t2 = defaults.elevation;
        t2.toString;
        elevation = t2;
      }
      focusElevation = floatingActionButtonTheme.focusElevation;
      if (focusElevation == null) {
        t2 = defaults.focusElevation;
        t2.toString;
        focusElevation = t2;
      }
      hoverElevation = floatingActionButtonTheme.hoverElevation;
      if (hoverElevation == null) {
        t2 = defaults.hoverElevation;
        t2.toString;
        hoverElevation = t2;
      }
      t2 = floatingActionButtonTheme.disabledElevation;
      disabledElevation = t2 == null ? defaults.disabledElevation : t2;
      if (disabledElevation == null)
        disabledElevation = elevation;
      highlightElevation = floatingActionButtonTheme.highlightElevation;
      if (highlightElevation == null) {
        t2 = defaults.highlightElevation;
        t2.toString;
        highlightElevation = t2;
      }
      materialTapTargetSize = theme.materialTapTargetSize;
      enableFeedback = floatingActionButtonTheme.enableFeedback;
      if (enableFeedback == null) {
        t2 = defaults.enableFeedback;
        t2.toString;
        enableFeedback = t2;
      }
      iconSize = floatingActionButtonTheme.get$iconSize();
      if (iconSize == null) {
        t2 = defaults.get$iconSize();
        t2.toString;
        iconSize = t2;
      }
      t2 = floatingActionButtonTheme.get$extendedTextStyle();
      if (t2 == null) {
        t2 = defaults.get$extendedTextStyle();
        t2.toString;
      }
      extendedTextStyle = t2.copyWith$1$color(foregroundColor);
      shape = floatingActionButtonTheme.get$shape();
      if (shape == null) {
        t2 = defaults.get$shape();
        t2.toString;
        shape = t2;
      }
      t2 = resolvedChild != null;
      resolvedChild0 = t2 ? A.IconTheme_merge(resolvedChild, A.IconThemeData$(_null, _null, _null, _null, _null, _null, _null, iconSize, _null)) : resolvedChild;
      switch (t1) {
        case C._FloatingActionButtonType_0:
          sizeConstraints = floatingActionButtonTheme.sizeConstraints;
          if (sizeConstraints == null) {
            t1 = defaults.sizeConstraints;
            t1.toString;
            sizeConstraints = t1;
          }
          resolvedChild = resolvedChild0;
          break;
        case C._FloatingActionButtonType_1:
          sizeConstraints = floatingActionButtonTheme.smallSizeConstraints;
          if (sizeConstraints == null) {
            t1 = defaults.smallSizeConstraints;
            t1.toString;
            sizeConstraints = t1;
          }
          resolvedChild = resolvedChild0;
          break;
        case C._FloatingActionButtonType_2:
          sizeConstraints = floatingActionButtonTheme.largeSizeConstraints;
          if (sizeConstraints == null) {
            t1 = defaults.largeSizeConstraints;
            t1.toString;
            sizeConstraints = t1;
          }
          resolvedChild = resolvedChild0;
          break;
        case C._FloatingActionButtonType_3:
          sizeConstraints = floatingActionButtonTheme.extendedSizeConstraints;
          if (sizeConstraints == null) {
            t1 = defaults.extendedSizeConstraints;
            t1.toString;
            sizeConstraints = t1;
          }
          padding = floatingActionButtonTheme.get$extendedPadding();
          if (padding == null) {
            t1 = defaults.get$extendedPadding();
            t1.toString;
            padding = t1;
          }
          t1 = B._setArrayType([], type$.JSArray_Widget);
          if (t2)
            t1.push(resolvedChild);
          resolvedChild = A._ChildOverflowBox$(A.Padding$(A.Row$(t1, C.MainAxisAlignment_0, C.MainAxisSize_0), padding));
          break;
        default:
          resolvedChild = resolvedChild0;
          sizeConstraints = _null;
      }
      result = A.RawMaterialButton$(false, resolvedChild, D.Clip_0, sizeConstraints, disabledElevation, elevation, enableFeedback, backgroundColor, focusColor, focusElevation, _null, highlightElevation, hoverColor, hoverElevation, materialTapTargetSize, A._EffectiveMouseCursor$(_null, floatingActionButtonTheme.mouseCursor), this.onPressed, shape, splashColor, extendedTextStyle);
      result = A.Hero$(result, C.C__DefaultHeroTag);
      return A.MergeSemantics$(result);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.ObjectFlagProperty$("onPressed", this.onPressed, "disabled", _null, type$.void_Function));
      properties.add$1(0, E.StringProperty$("tooltip", _null, _null, true, true));
      properties.add$1(0, A.ColorProperty$("foregroundColor", _null, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("backgroundColor", _null, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("focusColor", _null, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("hoverColor", _null, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("splashColor", _null, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.ObjectFlagProperty$("heroTag", C.C__DefaultHeroTag, _null, "hero", type$.Object));
      properties.add$1(0, E.DoubleProperty$("elevation", _null, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("focusElevation", _null, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("hoverElevation", _null, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("highlightElevation", _null, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("disabledElevation", _null, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DiagnosticsProperty$("shape", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ShapeBorder));
      properties.add$1(0, E.DiagnosticsProperty$("focusNode", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FocusNode));
      properties.add$1(0, E.FlagProperty$("isExtended", _null, _null, "extended", D.DiagnosticLevel_3, false, false));
      properties.add$1(0, E.DiagnosticsProperty$("materialTapTargetSize", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.MaterialTapTargetSize));
    }
  };
  A._EffectiveMouseCursor.prototype = {
    resolve$1(states) {
      var t1;
      type$.Set_WidgetState._as(states);
      t1 = A.WidgetStateProperty_resolveAs(this.widgetCursor, states, type$.nullable_MouseCursor);
      if (t1 == null) {
        t1 = this.themeCursor;
        t1 = t1 == null ? null : t1.resolve$1(states);
      }
      return t1 == null ? C.C__EnabledAndDisabledMouseCursor.resolve$1(states) : t1;
    },
    get$debugDescription() {
      return "MaterialStateMouseCursor(FloatActionButton)";
    }
  };
  A._ChildOverflowBox.prototype = {
    createRenderObject$1(context) {
      return A._RenderChildOverflowBox$(A.Directionality_of(type$.BuildContext._as(context)));
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$._RenderChildOverflowBox._as(renderObject).set$textDirection(A.Directionality_of(context));
    }
  };
  A._RenderChildOverflowBox.prototype = {
    computeDryLayout$1(constraints) {
      var childSize, t1;
      type$.BoxConstraints._as(constraints);
      if (this.get$child() != null) {
        childSize = this.get$child().getDryLayout$1(C.BoxConstraints_86y0);
        t1 = type$.double;
        return E.Size$(E.max(constraints.minWidth, E.min(constraints.maxWidth, childSize.get$width(), t1), t1), E.max(constraints.minHeight, E.min(constraints.maxHeight, childSize.get$height(), t1), t1));
      } else
        return constraints.get$biggest();
    },
    performLayout$0() {
      var t1, _this = this,
        constraints = _this.get$constraints();
      if (_this.get$child() != null) {
        _this.get$child().layout$2$parentUsesSize(C.BoxConstraints_86y0, true);
        t1 = type$.double;
        _this.set$size(E.Size$(E.max(constraints.minWidth, E.min(constraints.maxWidth, _this.get$child().get$size().get$width(), t1), t1), E.max(constraints.minHeight, E.min(constraints.maxHeight, _this.get$child().get$size().get$height(), t1), t1)));
        _this.alignChild$0();
      } else
        _this.set$size(constraints.get$biggest());
    }
  };
  A._FABDefaultsM2.prototype = {
    get$_isExtended() {
      return J.$eq$(this.type, C._FloatingActionButtonType_3);
    },
    get$_isLarge() {
      return J.$eq$(this.type, C._FloatingActionButtonType_2);
    },
    get$foregroundColor() {
      return this._floating_action_button$_colors.onSecondary;
    },
    get$backgroundColor() {
      return this._floating_action_button$_colors.secondary;
    },
    get$focusColor() {
      return this._theme.focusColor;
    },
    get$hoverColor() {
      return this._theme.hoverColor;
    },
    get$splashColor() {
      return this._theme.splashColor;
    },
    get$shape() {
      return B.boolConversionCheck(this.get$_isExtended()) ? C.StadiumBorder_7BT : C.CircleBorder_0;
    },
    get$iconSize() {
      return B.boolConversionCheck(this.get$_isLarge()) ? 36 : 24;
    },
    get$extendedPadding() {
      return A.EdgeInsetsDirectional$only(20, B.boolConversionCheck(this.hasChild) && B.boolConversionCheck(this.get$_isExtended()) ? 16 : 20);
    },
    get$extendedTextStyle() {
      return this._theme.textTheme.labelLarge.copyWith$1$letterSpacing(1.2);
    }
  };
  A._FABDefaultsM3.prototype = {
    get$_floating_action_button$_colors() {
      var result,
        value = this.___FABDefaultsM3__colors_FI;
      if (B.boolConversionCheck(E.isSentinel(value))) {
        result = A.Theme_of(this.context).colorScheme;
        value !== $ && B.throwLateFieldADI("_colors");
        this.___FABDefaultsM3__colors_FI = result;
        value = result;
      }
      return value;
    },
    get$_textTheme() {
      var result,
        value = this.___FABDefaultsM3__textTheme_FI;
      if (B.boolConversionCheck(E.isSentinel(value))) {
        result = A.Theme_of(this.context).textTheme;
        value !== $ && B.throwLateFieldADI("_textTheme");
        this.___FABDefaultsM3__textTheme_FI = result;
        value = result;
      }
      return value;
    },
    get$_isExtended() {
      return J.$eq$(this.type, C._FloatingActionButtonType_3);
    },
    get$foregroundColor() {
      return this.get$_floating_action_button$_colors().get$onPrimaryContainer();
    },
    get$backgroundColor() {
      return this.get$_floating_action_button$_colors().get$primaryContainer();
    },
    get$splashColor() {
      return this.get$_floating_action_button$_colors().get$onPrimaryContainer().withOpacity$1(0.1);
    },
    get$focusColor() {
      return this.get$_floating_action_button$_colors().get$onPrimaryContainer().withOpacity$1(0.1);
    },
    get$hoverColor() {
      return this.get$_floating_action_button$_colors().get$onPrimaryContainer().withOpacity$1(0.08);
    },
    get$shape() {
      switch (this.type) {
        case C._FloatingActionButtonType_0:
          var t1 = C.RoundedRectangleBorder_NYu1;
          break;
        case C._FloatingActionButtonType_1:
          t1 = C.RoundedRectangleBorder_NYu2;
          break;
        case C._FloatingActionButtonType_2:
          t1 = C.RoundedRectangleBorder_NYu3;
          break;
        case C._FloatingActionButtonType_3:
          t1 = C.RoundedRectangleBorder_NYu1;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    get$iconSize() {
      var t1 = 24;
      switch (this.type) {
        case C._FloatingActionButtonType_0:
          break;
        case C._FloatingActionButtonType_1:
          break;
        case C._FloatingActionButtonType_2:
          t1 = 36;
          break;
        case C._FloatingActionButtonType_3:
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    get$extendedPadding() {
      return A.EdgeInsetsDirectional$only(20, B.boolConversionCheck(this.hasChild) && B.boolConversionCheck(this.get$_isExtended()) ? 16 : 20);
    },
    get$extendedTextStyle() {
      return this.get$_textTheme().labelLarge;
    }
  };
  A.FloatingActionButtonThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.get$foregroundColor(), _this.get$backgroundColor(), _this.get$focusColor(), _this.get$hoverColor(), _this.get$splashColor(), _this.elevation, _this.focusElevation, _this.hoverElevation, _this.disabledElevation, _this.highlightElevation, _this.get$shape(), _this.enableFeedback, _this.get$iconSize(), _this.sizeConstraints, _this.smallSizeConstraints, _this.largeSizeConstraints, _this.extendedSizeConstraints, _this.extendedIconLabelSpacing, _this.get$extendedPadding(), B.Object_hash(_this.get$extendedTextStyle(), _this.mouseCursor, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue));
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.FloatingActionButtonThemeData && B.boolConversionCheck(J.$eq$(other.get$foregroundColor(), _this.get$foregroundColor())) && B.boolConversionCheck(J.$eq$(other.get$backgroundColor(), _this.get$backgroundColor())) && B.boolConversionCheck(J.$eq$(other.get$focusColor(), _this.get$focusColor())) && B.boolConversionCheck(J.$eq$(other.get$hoverColor(), _this.get$hoverColor())) && B.boolConversionCheck(J.$eq$(other.get$splashColor(), _this.get$splashColor())) && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.focusElevation, _this.focusElevation)) && B.boolConversionCheck(J.$eq$(other.hoverElevation, _this.hoverElevation)) && B.boolConversionCheck(J.$eq$(other.disabledElevation, _this.disabledElevation)) && B.boolConversionCheck(J.$eq$(other.highlightElevation, _this.highlightElevation)) && B.boolConversionCheck(J.$eq$(other.get$shape(), _this.get$shape())) && B.boolConversionCheck(J.$eq$(other.enableFeedback, _this.enableFeedback)) && B.boolConversionCheck(J.$eq$(other.get$iconSize(), _this.get$iconSize())) && B.boolConversionCheck(J.$eq$(other.sizeConstraints, _this.sizeConstraints)) && B.boolConversionCheck(J.$eq$(other.smallSizeConstraints, _this.smallSizeConstraints)) && B.boolConversionCheck(J.$eq$(other.largeSizeConstraints, _this.largeSizeConstraints)) && B.boolConversionCheck(J.$eq$(other.extendedSizeConstraints, _this.extendedSizeConstraints)) && B.boolConversionCheck(J.$eq$(other.extendedIconLabelSpacing, _this.extendedIconLabelSpacing)) && B.boolConversionCheck(J.$eq$(other.get$extendedPadding(), _this.get$extendedPadding())) && B.boolConversionCheck(J.$eq$(other.get$extendedTextStyle(), _this.get$extendedTextStyle())) && B.boolConversionCheck(J.$eq$(other.mouseCursor, _this.mouseCursor));
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.ColorProperty$("foregroundColor", _this.get$foregroundColor(), _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("backgroundColor", _this.get$backgroundColor(), _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("focusColor", _this.get$focusColor(), _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("hoverColor", _this.get$hoverColor(), _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("splashColor", _this.get$splashColor(), _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DoubleProperty$("elevation", _this.elevation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("focusElevation", _this.focusElevation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("hoverElevation", _this.hoverElevation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("disabledElevation", _this.disabledElevation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("highlightElevation", _this.highlightElevation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.get$shape(), true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ShapeBorder));
      properties.add$1(0, E.DiagnosticsProperty$("enableFeedback", _this.enableFeedback, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
      properties.add$1(0, E.DoubleProperty$("iconSize", _this.get$iconSize(), _null, _null, D.DiagnosticLevel_3, _null, _null));
      t1 = type$.BoxConstraints;
      properties.add$1(0, E.DiagnosticsProperty$("sizeConstraints", _this.sizeConstraints, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("smallSizeConstraints", _this.smallSizeConstraints, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("largeSizeConstraints", _this.largeSizeConstraints, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("extendedSizeConstraints", _this.extendedSizeConstraints, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DoubleProperty$("extendedIconLabelSpacing", _this.extendedIconLabelSpacing, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DiagnosticsProperty$("extendedPadding", _this.get$extendedPadding(), true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.EdgeInsetsGeometry));
      properties.add$1(0, E.DiagnosticsProperty$("extendedTextStyle", _this.get$extendedTextStyle(), true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextStyle));
      properties.add$1(0, E.DiagnosticsProperty$("mouseCursor", _this.mouseCursor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_MouseCursor));
    },
    $isDiagnosticable: 1,
    get$foregroundColor() {
      return this.foregroundColor;
    },
    get$backgroundColor() {
      return this.backgroundColor;
    },
    get$focusColor() {
      return this.focusColor;
    },
    get$hoverColor() {
      return this.hoverColor;
    },
    get$splashColor() {
      return this.splashColor;
    },
    get$shape() {
      return this.shape;
    },
    get$iconSize() {
      return this.iconSize;
    },
    get$extendedPadding() {
      return this.extendedPadding;
    },
    get$extendedTextStyle() {
      return this.extendedTextStyle;
    }
  };
  A._FloatingActionButtonThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A._IconButtonVariant.prototype = {
    _enumToString$0() {
      return "_IconButtonVariant." + B.S(this._core$_name);
    }
  };
  A.IconButton.prototype = {
    build$1(context) {
      var theme, adjustedStyle, t1, t2, t3, currentColor, effectiveVisualDensity, adjustedConstraints, effectiveIconSize, result, t4, t5, t6, t7, t8, _this = this, _null = null;
      type$.BuildContext._as(context);
      theme = A.Theme_of(context);
      if (B.boolConversionCheck(theme.useMaterial3)) {
        adjustedStyle = A.IconButton_styleFrom(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
        return A._SelectableIconButton$(false, _this.icon, _null, _null, _this.onPressed, adjustedStyle, C._IconButtonVariant_0);
      }
      t1 = _this.onPressed;
      t2 = t1 == null;
      t3 = !t2;
      if (t3)
        currentColor = _null;
      else
        currentColor = theme.disabledColor;
      effectiveVisualDensity = theme.visualDensity;
      adjustedConstraints = effectiveVisualDensity.effectiveConstraints$1(C.BoxConstraints_86y);
      effectiveIconSize = A.IconTheme_of(context).size;
      if (effectiveIconSize == null)
        effectiveIconSize = 24;
      result = A.ConstrainedBox$(A.Padding$(A.SizedBox$(A.Align$(C.Alignment_0_0, A.IconTheme_merge(_this.icon, A.IconThemeData$(_null, currentColor, _null, _null, _null, _null, _null, effectiveIconSize, _null)), _null, _null, _null), effectiveIconSize, effectiveIconSize), C.EdgeInsets_8_8_8_8), adjustedConstraints);
      t2 = t2 ? D.SystemMouseCursor_basic : C.SystemMouseCursor_click;
      t4 = theme.focusColor;
      t5 = theme.hoverColor;
      t6 = theme.highlightColor;
      t7 = theme.splashColor;
      t8 = E.min(C.EdgeInsets_8_8_8_8.get$horizontal(), C.EdgeInsets_8_8_8_8.get$vertical(), type$.num);
      if (typeof t8 !== "number")
        return B.iae(t8);
      t8 = E.max(35, (effectiveIconSize + t8) * 0.7, type$.double);
      return E.Semantics$(true, A.InkResponse$(false, _null, t3, result, false, _null, true, false, t4, _null, t6, C.BoxShape_1, t5, _null, _null, t2, _null, _null, _null, _null, _null, _null, _null, _null, _null, t1, _null, _null, _null, _null, t8, t7, _null, _null), false, t3, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.StringProperty$("tooltip", _null, _null, false, true));
      properties.add$1(0, E.ObjectFlagProperty$("onPressed", this.onPressed, "disabled", _null, type$.void_Function));
      properties.add$1(0, A.ColorProperty$("color", _null, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("disabledColor", _null, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("focusColor", _null, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("hoverColor", _null, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("highlightColor", _null, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("splashColor", _null, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("padding", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.EdgeInsetsGeometry));
      properties.add$1(0, E.DiagnosticsProperty$("focusNode", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FocusNode));
    }
  };
  A._SelectableIconButton.prototype = {
    createState$0() {
      return A._SelectableIconButtonState$();
    }
  };
  A._SelectableIconButtonState.prototype = {
    get$statesController() {
      return this.___SelectableIconButtonState_statesController_F;
    },
    set$statesController(value) {
      type$.WidgetStatesController._as(value);
      this.___SelectableIconButtonState_statesController_F !== $ && B.throwLateFieldAI("statesController");
      this.___SelectableIconButtonState_statesController_F = value;
    },
    initState$0() {
      var t1, t2, _this = this;
      _this.super$State$initState0();
      if (_this.get$widget().isSelected == null)
        _this.set$statesController(A.WidgetStatesController$(null));
      else {
        t1 = B.LinkedHashSet_LinkedHashSet$_empty(type$.WidgetState);
        t2 = _this.get$widget().isSelected;
        t2.toString;
        if (B.boolConversionCheck(t2))
          t1.add$1(0, C.WidgetState_4);
        _this.set$statesController(A.WidgetStatesController$(t1));
      }
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, _this = this;
      type$._SelectableIconButton._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      if (_this.get$widget().isSelected == null) {
        if (B.boolConversionCheck(J.contains$1$asx(_this.get$statesController().get$value(), C.WidgetState_4)))
          _this.get$statesController().update$2(C.WidgetState_4, false);
        return;
      }
      if (!B.boolConversionCheck(J.$eq$(_this.get$widget().isSelected, oldWidget.isSelected))) {
        t1 = _this.get$statesController();
        t2 = _this.get$widget().isSelected;
        t2.toString;
        t1.update$2(C.WidgetState_4, t2);
      }
    },
    build$1(context) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _this = this, _null = null;
      type$.BuildContext._as(context);
      t1 = _this.get$widget().isSelected;
      t2 = _this.get$statesController();
      t3 = _this.get$widget().style;
      t4 = _this.get$widget().autofocus;
      t5 = _this.get$widget().focusNode;
      t6 = _this.get$widget().onPressed;
      t7 = _this.get$widget().variant;
      t8 = _this.get$widget().isSelected;
      return A._IconButtonM3$(t4, E.Semantics$(_null, _this.get$widget().child, false, _null, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, t8, _null, _null, _null, _null), t5, t6, t2, t3, t1 != null, t7);
    },
    dispose$0() {
      this.get$statesController().dispose$0();
      this.super$State$dispose();
    }
  };
  A._IconButtonM3.prototype = {
    defaultStyleOf$1(context) {
      var t1, _this = this;
      type$.BuildContext._as(context);
      switch (_this.variant) {
        case C._IconButtonVariant_1:
          t1 = A._FilledIconButtonDefaultsM3$(context, _this.toggleable);
          break;
        case C._IconButtonVariant_2:
          t1 = A._FilledTonalIconButtonDefaultsM3$(context, _this.toggleable);
          break;
        case C._IconButtonVariant_3:
          t1 = A._OutlinedIconButtonDefaultsM3$(context, _this.toggleable);
          break;
        case C._IconButtonVariant_0:
          t1 = A._IconButtonDefaultsM3$(context, _this.toggleable);
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    themeStyleOf$1(context) {
      var iconTheme, t1, isDefaultSize, t2, t3, iconThemeStyle, _null = null;
      type$.BuildContext._as(context);
      iconTheme = A.IconTheme_of(context);
      t1 = iconTheme.size;
      isDefaultSize = J.$eq$(t1, 24);
      t2 = iconTheme.color;
      switch (A.Theme_of(context).get$brightness()) {
        case D.Brightness_1:
          t3 = $.$get$kDefaultIconDarkColor();
          break;
        case D.Brightness_0:
          t3 = $.$get$kDefaultIconLightColor();
          break;
        default:
          t3 = _null;
      }
      if (t2 == null ? t3 == null : t2 === t3)
        t2 = _null;
      iconThemeStyle = A.IconButton_styleFrom(_null, _null, _null, _null, _null, _null, t2, _null, _null, isDefaultSize ? _null : t1, _null, _null, _null, _null);
      t1 = A.IconButtonTheme_of(context).style;
      t1 = t1 == null ? _null : t1.merge$1(iconThemeStyle);
      return t1 == null ? iconThemeStyle : t1;
    }
  };
  A._IconButtonDefaultForeground.prototype = {
    resolve$1(states) {
      if (B.boolConversionCheck(type$.Set_WidgetState._as(states).contains$1(0, C.WidgetState_6)))
        return this.disabledForegroundColor;
      return this.foregroundColor;
    },
    toString$0(_) {
      return "{disabled: " + B.S(this.disabledForegroundColor) + ", otherwise: " + B.S(this.foregroundColor) + "}";
    }
  };
  A._IconButtonDefaultOverlay.prototype = {
    resolve$1(states) {
      var t1, _this = this, _null = null;
      type$.Set_WidgetState._as(states);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_4))) {
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_2))) {
          t1 = _this.highlightColor;
          if (t1 == null) {
            t1 = _this.overlayColor;
            if (t1 == null)
              t1 = _this.foregroundColor;
            t1 = t1 == null ? _null : t1.withOpacity$1(0.1);
          }
          return t1;
        }
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_0))) {
          t1 = _this.hoverColor;
          if (t1 == null) {
            t1 = _this.overlayColor;
            if (t1 == null)
              t1 = _this.foregroundColor;
            t1 = t1 == null ? _null : t1.withOpacity$1(0.08);
          }
          return t1;
        }
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_1))) {
          t1 = _this.focusColor;
          if (t1 == null) {
            t1 = _this.overlayColor;
            if (t1 == null)
              t1 = _this.foregroundColor;
            t1 = t1 == null ? _null : t1.withOpacity$1(0.1);
          }
          return t1;
        }
      }
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_2))) {
        t1 = _this.highlightColor;
        if (t1 == null) {
          t1 = _this.overlayColor;
          if (t1 == null)
            t1 = _this.foregroundColor;
          t1 = t1 == null ? _null : t1.withOpacity$1(0.1);
        }
        return t1;
      }
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_0))) {
        t1 = _this.hoverColor;
        if (t1 == null) {
          t1 = _this.overlayColor;
          if (t1 == null)
            t1 = _this.foregroundColor;
          t1 = t1 == null ? _null : t1.withOpacity$1(0.08);
        }
        return t1;
      }
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_1))) {
        t1 = _this.focusColor;
        if (t1 == null) {
          t1 = _this.overlayColor;
          if (t1 == null)
            t1 = _this.foregroundColor;
          t1 = t1 == null ? _null : t1.withOpacity$1(0.1);
        }
        return t1;
      }
      return _null;
    },
    toString$0(_) {
      return "{hovered: " + B.S(this.hoverColor) + ", focused: " + B.S(this.focusColor) + ", pressed: " + B.S(this.highlightColor) + ", otherwise: null}";
    }
  };
  A._IconButtonDefaultMouseCursor.prototype = {
    resolve$1(states) {
      if (B.boolConversionCheck(type$.Set_WidgetState._as(states).contains$1(0, C.WidgetState_6)))
        return this.disabledCursor;
      return this.enabledCursor;
    },
    $isDiagnosticable: 1
  };
  A._IconButtonDefaultsM3.prototype = {
    get$_colors() {
      var result,
        value = this.___IconButtonDefaultsM3__colors_FI;
      if (B.boolConversionCheck(E.isSentinel(value))) {
        result = A.Theme_of(this.context).colorScheme;
        value !== $ && B.throwLateFieldADI("_colors");
        this.___IconButtonDefaultsM3__colors_FI = result;
        value = result;
      }
      return value;
    },
    get$backgroundColor() {
      return C.WidgetStatePropertyAll_Color_00;
    },
    get$foregroundColor() {
      return A.WidgetStateProperty_resolveWith(new A._IconButtonDefaultsM3_foregroundColor_closure(this), type$.nullable_Color);
    },
    get$overlayColor() {
      return A.WidgetStateProperty_resolveWith(new A._IconButtonDefaultsM3_overlayColor_closure(this), type$.nullable_Color);
    },
    get$elevation() {
      return C.WidgetStatePropertyAll_0;
    },
    get$shadowColor() {
      return C.WidgetStatePropertyAll_Color_0;
    },
    get$surfaceTintColor() {
      return C.WidgetStatePropertyAll_Color_0;
    },
    get$padding() {
      return C.WidgetStatePropertyAll_wEo;
    },
    get$minimumSize() {
      return C.WidgetStatePropertyAll_Size_40_40;
    },
    get$maximumSize() {
      return C.WidgetStatePropertyAll_Bzp;
    },
    get$iconSize() {
      return C.WidgetStatePropertyAll_24;
    },
    get$side() {
      return null;
    },
    get$shape() {
      return C.WidgetStatePropertyAll_8UW;
    },
    get$mouseCursor() {
      return A.WidgetStateProperty_resolveWith(new A._IconButtonDefaultsM3_mouseCursor_closure(), type$.nullable_MouseCursor);
    },
    get$visualDensity() {
      return C.VisualDensity_0_0;
    },
    get$tapTargetSize() {
      return A.Theme_of(this.context).materialTapTargetSize;
    },
    get$splashFactory() {
      return A.Theme_of(this.context).splashFactory;
    }
  };
  A._FilledIconButtonDefaultsM3.prototype = {
    get$_colors() {
      var result,
        value = this.___FilledIconButtonDefaultsM3__colors_FI;
      if (B.boolConversionCheck(E.isSentinel(value))) {
        result = A.Theme_of(this.context).colorScheme;
        value !== $ && B.throwLateFieldADI("_colors");
        this.___FilledIconButtonDefaultsM3__colors_FI = result;
        value = result;
      }
      return value;
    },
    get$backgroundColor() {
      return A.WidgetStateProperty_resolveWith(new A._FilledIconButtonDefaultsM3_backgroundColor_closure(this), type$.nullable_Color);
    },
    get$foregroundColor() {
      return A.WidgetStateProperty_resolveWith(new A._FilledIconButtonDefaultsM3_foregroundColor_closure(this), type$.nullable_Color);
    },
    get$overlayColor() {
      return A.WidgetStateProperty_resolveWith(new A._FilledIconButtonDefaultsM3_overlayColor_closure(this), type$.nullable_Color);
    },
    get$elevation() {
      return C.WidgetStatePropertyAll_0;
    },
    get$shadowColor() {
      return C.WidgetStatePropertyAll_Color_0;
    },
    get$surfaceTintColor() {
      return C.WidgetStatePropertyAll_Color_0;
    },
    get$padding() {
      return C.WidgetStatePropertyAll_wEo;
    },
    get$minimumSize() {
      return C.WidgetStatePropertyAll_Size_40_40;
    },
    get$maximumSize() {
      return C.WidgetStatePropertyAll_Bzp;
    },
    get$iconSize() {
      return C.WidgetStatePropertyAll_24;
    },
    get$side() {
      return null;
    },
    get$shape() {
      return C.WidgetStatePropertyAll_8UW;
    },
    get$mouseCursor() {
      return A.WidgetStateProperty_resolveWith(new A._FilledIconButtonDefaultsM3_mouseCursor_closure(), type$.nullable_MouseCursor);
    },
    get$visualDensity() {
      return C.VisualDensity_0_0;
    },
    get$tapTargetSize() {
      return A.Theme_of(this.context).materialTapTargetSize;
    },
    get$splashFactory() {
      return A.Theme_of(this.context).splashFactory;
    }
  };
  A._FilledTonalIconButtonDefaultsM3.prototype = {
    get$_colors() {
      var result,
        value = this.___FilledTonalIconButtonDefaultsM3__colors_FI;
      if (B.boolConversionCheck(E.isSentinel(value))) {
        result = A.Theme_of(this.context).colorScheme;
        value !== $ && B.throwLateFieldADI("_colors");
        this.___FilledTonalIconButtonDefaultsM3__colors_FI = result;
        value = result;
      }
      return value;
    },
    get$backgroundColor() {
      return A.WidgetStateProperty_resolveWith(new A._FilledTonalIconButtonDefaultsM3_backgroundColor_closure(this), type$.nullable_Color);
    },
    get$foregroundColor() {
      return A.WidgetStateProperty_resolveWith(new A._FilledTonalIconButtonDefaultsM3_foregroundColor_closure(this), type$.nullable_Color);
    },
    get$overlayColor() {
      return A.WidgetStateProperty_resolveWith(new A._FilledTonalIconButtonDefaultsM3_overlayColor_closure(this), type$.nullable_Color);
    },
    get$elevation() {
      return C.WidgetStatePropertyAll_0;
    },
    get$shadowColor() {
      return C.WidgetStatePropertyAll_Color_0;
    },
    get$surfaceTintColor() {
      return C.WidgetStatePropertyAll_Color_0;
    },
    get$padding() {
      return C.WidgetStatePropertyAll_wEo;
    },
    get$minimumSize() {
      return C.WidgetStatePropertyAll_Size_40_40;
    },
    get$maximumSize() {
      return C.WidgetStatePropertyAll_Bzp;
    },
    get$iconSize() {
      return C.WidgetStatePropertyAll_24;
    },
    get$side() {
      return null;
    },
    get$shape() {
      return C.WidgetStatePropertyAll_8UW;
    },
    get$mouseCursor() {
      return A.WidgetStateProperty_resolveWith(new A._FilledTonalIconButtonDefaultsM3_mouseCursor_closure(), type$.nullable_MouseCursor);
    },
    get$visualDensity() {
      return C.VisualDensity_0_0;
    },
    get$tapTargetSize() {
      return A.Theme_of(this.context).materialTapTargetSize;
    },
    get$splashFactory() {
      return A.Theme_of(this.context).splashFactory;
    }
  };
  A._OutlinedIconButtonDefaultsM3.prototype = {
    get$_colors() {
      var result,
        value = this.___OutlinedIconButtonDefaultsM3__colors_FI;
      if (B.boolConversionCheck(E.isSentinel(value))) {
        result = A.Theme_of(this.context).colorScheme;
        value !== $ && B.throwLateFieldADI("_colors");
        this.___OutlinedIconButtonDefaultsM3__colors_FI = result;
        value = result;
      }
      return value;
    },
    get$backgroundColor() {
      return A.WidgetStateProperty_resolveWith(new A._OutlinedIconButtonDefaultsM3_backgroundColor_closure(this), type$.nullable_Color);
    },
    get$foregroundColor() {
      return A.WidgetStateProperty_resolveWith(new A._OutlinedIconButtonDefaultsM3_foregroundColor_closure(this), type$.nullable_Color);
    },
    get$overlayColor() {
      return A.WidgetStateProperty_resolveWith(new A._OutlinedIconButtonDefaultsM3_overlayColor_closure(this), type$.nullable_Color);
    },
    get$elevation() {
      return C.WidgetStatePropertyAll_0;
    },
    get$shadowColor() {
      return C.WidgetStatePropertyAll_Color_0;
    },
    get$surfaceTintColor() {
      return C.WidgetStatePropertyAll_Color_0;
    },
    get$padding() {
      return C.WidgetStatePropertyAll_wEo;
    },
    get$minimumSize() {
      return C.WidgetStatePropertyAll_Size_40_40;
    },
    get$maximumSize() {
      return C.WidgetStatePropertyAll_Bzp;
    },
    get$iconSize() {
      return C.WidgetStatePropertyAll_24;
    },
    get$side() {
      return A.WidgetStateProperty_resolveWith(new A._OutlinedIconButtonDefaultsM3_side_closure(this), type$.nullable_BorderSide);
    },
    get$shape() {
      return C.WidgetStatePropertyAll_8UW;
    },
    get$mouseCursor() {
      return A.WidgetStateProperty_resolveWith(new A._OutlinedIconButtonDefaultsM3_mouseCursor_closure(), type$.nullable_MouseCursor);
    },
    get$visualDensity() {
      return C.VisualDensity_0_0;
    },
    get$tapTargetSize() {
      return A.Theme_of(this.context).materialTapTargetSize;
    },
    get$splashFactory() {
      return A.Theme_of(this.context).splashFactory;
    }
  };
  A.__IconButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.IconButtonThemeData.prototype = {
    get$hashCode(_) {
      return J.get$hashCode$(this.style);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.IconButtonThemeData && B.boolConversionCheck(J.$eq$(other.style, this.style));
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("style", this.style, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ButtonStyle));
    },
    $isDiagnosticable: 1
  };
  A._IconButtonThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.InkHighlight.prototype = {
    InkHighlight$11$borderRadius$color$controller$customBorder$fadeDuration$onRemoved$radius$rectCallback$referenceBox$shape$textDirection(borderRadius, color, controller, customBorder, fadeDuration, onRemoved, radius, rectCallback, referenceBox, shape, textDirection) {
      var _this = this,
        t1 = A.AnimationController$(null, fadeDuration, null, _this.get$controller().vsync);
      t1.addListener$1(_this.get$controller().get$markNeedsPaint());
      t1.addStatusListener$1(_this.get$_handleAlphaStatusChanged());
      t1.forward$0();
      _this.set$_alphaController(t1);
      _this.set$_alpha(_this.get$_alphaController().drive$1$1(A.IntTween$(0, _this.get$color().get$alpha()), type$.int));
      _this.get$controller().addInkFeature$1(_this);
    },
    get$_alpha() {
      return this.__InkHighlight__alpha_A;
    },
    set$_alpha(value) {
      this.set$__InkHighlight__alpha_A(type$.Animation_int._as(value));
    },
    get$_alphaController() {
      return this.__InkHighlight__alphaController_A;
    },
    set$_alphaController(value) {
      this.__InkHighlight__alphaController_A = type$.AnimationController._as(value);
    },
    get$active() {
      return this._active;
    },
    activate$0() {
      this._active = true;
      this.get$_alphaController().forward$0();
    },
    deactivate$0() {
      this._active = false;
      this.get$_alphaController().reverse$0();
    },
    _handleAlphaStatusChanged$1($status) {
      if (B.boolConversionCheck(type$.AnimationStatus._as($status).get$isDismissed()) && !B.boolConversionCheck(this._active))
        this.dispose$0();
    },
    dispose$0() {
      this.get$_alphaController().dispose$0();
      this.super$InkFeature$dispose();
    },
    _paintHighlight$3(canvas, rect, paint) {
      var t1, t2, t3, _this = this;
      type$.Canvas._as(canvas);
      type$.Rect._as(rect);
      type$.Paint._as(paint);
      canvas.save$0();
      if (_this.get$customBorder() != null)
        canvas.clipPath$1(_this.get$customBorder().getOuterPath$2$textDirection(rect, _this._ink_highlight$_textDirection));
      switch (_this._shape) {
        case C.BoxShape_1:
          t1 = rect.get$center();
          t2 = _this._radius;
          canvas.drawCircle$3(t1, t2 == null ? 35 : t2, paint);
          break;
        case C.BoxShape_0:
          t1 = _this._borderRadius;
          if (!B.boolConversionCheck(J.$eq$(t1, C.BorderRadius_ww8))) {
            t2 = t1.topLeft;
            t3 = t1.topRight;
            canvas.drawRRect$2(E.RRect$fromRectAndCorners(rect, t1.bottomLeft, t1.bottomRight, t2, t3), paint);
          } else
            canvas.drawRect$2(rect, paint);
          break;
      }
      canvas.restore$0();
    },
    paintFeature$2(canvas, transform) {
      var paint, originOffset, t1, rect, _this = this;
      type$.Canvas._as(canvas);
      type$.Matrix4._as(transform);
      paint = E.Paint_Paint();
      paint.set$color(_this.get$color().withAlpha$1(_this.get$_alpha().get$value()));
      originOffset = E.MatrixUtils_getAsTranslation(transform);
      t1 = _this._rectCallback;
      if (t1 != null)
        rect = t1.call$0();
      else
        rect = D.Offset_0_0.$and(0, _this.referenceBox.get$size());
      if (originOffset == null) {
        canvas.save$0();
        canvas.transform$1(transform.get$storage());
        _this._paintHighlight$3(canvas, rect, paint);
        canvas.restore$0();
      } else
        _this._paintHighlight$3(canvas, rect.shift$1(originOffset), paint);
    },
    set$__InkHighlight__alpha_A(__InkHighlight__alpha_A) {
      this.__InkHighlight__alpha_A = type$.Animation_int._as(__InkHighlight__alpha_A);
    }
  };
  A._InkRippleFactory.prototype = {
    create$11$borderRadius$color$containedInkWell$controller$customBorder$onRemoved$position$radius$rectCallback$referenceBox$textDirection(borderRadius, color, containedInkWell, controller, customBorder, onRemoved, position, radius, rectCallback, referenceBox, textDirection) {
      type$.MaterialInkController._as(controller);
      type$.RenderBox._as(referenceBox);
      type$.Offset._as(position);
      type$.Color._as(color);
      type$.TextDirection._as(textDirection);
      B._asBool(containedInkWell);
      type$.nullable_Rect_Function._as(rectCallback);
      type$.nullable_BorderRadius._as(borderRadius);
      type$.nullable_ShapeBorder._as(customBorder);
      B._asDoubleQ(radius);
      return A.InkRipple$(borderRadius, color, containedInkWell, controller, customBorder, type$.nullable_void_Function._as(onRemoved), position, radius, rectCallback, referenceBox, textDirection);
    }
  };
  A.InkRipple.prototype = {
    InkRipple$11$borderRadius$color$containedInkWell$controller$customBorder$onRemoved$position$radius$rectCallback$referenceBox$textDirection(borderRadius, color, containedInkWell, controller, customBorder, onRemoved, position, radius, rectCallback, referenceBox, textDirection) {
      var t4, t5, t6, _this = this, _null = null,
        t1 = controller.vsync,
        t2 = A.AnimationController$(_null, C.Duration_75000, _null, t1),
        t3 = controller.get$markNeedsPaint();
      t2.addListener$1(t3);
      t2.forward$0();
      _this.set$_fadeInController(t2);
      t2 = type$.int;
      _this.set$_fadeIn(_this.get$_fadeInController().drive$1$1(A.IntTween$(0, color.get$alpha()), t2));
      t4 = A.AnimationController$(_null, D.Duration_1000000, _null, t1);
      t4.addListener$1(t3);
      t4.forward$0();
      _this.set$_ink_ripple$_radiusController(t4);
      t4 = _this.get$_ink_ripple$_radiusController();
      t5 = _this._ink_ripple$_targetRadius;
      if (typeof t5 !== "number")
        return t5.$mul();
      t6 = type$.double;
      _this.set$_ink_ripple$_radius(t4.drive$1$1(A.Tween$(t5 * 0.3, t5 + 5, t6).chain$1($.$get$InkRipple__easeCurveTween()), t6));
      t1 = A.AnimationController$(_null, C.Duration_375000, _null, t1);
      t1.addListener$1(t3);
      t1.addStatusListener$1(_this.get$_ink_ripple$_handleAlphaStatusChanged());
      _this.set$_fadeOutController(t1);
      _this.set$_fadeOut(_this.get$_fadeOutController().drive$1$1(A.IntTween$(color.get$alpha(), 0).chain$1($.$get$InkRipple__fadeOutIntervalTween()), t2));
      controller.addInkFeature$1(_this);
    },
    get$_ink_ripple$_radius() {
      return this.__InkRipple__radius_A;
    },
    set$_ink_ripple$_radius(value) {
      this.set$__InkRipple__radius_A(type$.Animation_double._as(value));
    },
    get$_ink_ripple$_radiusController() {
      return this.__InkRipple__radiusController_A;
    },
    set$_ink_ripple$_radiusController(value) {
      this.__InkRipple__radiusController_A = type$.AnimationController._as(value);
    },
    get$_fadeIn() {
      return this.__InkRipple__fadeIn_A;
    },
    set$_fadeIn(value) {
      this.set$__InkRipple__fadeIn_A(type$.Animation_int._as(value));
    },
    get$_fadeInController() {
      return this.__InkRipple__fadeInController_A;
    },
    set$_fadeInController(value) {
      this.__InkRipple__fadeInController_A = type$.AnimationController._as(value);
    },
    get$_fadeOut() {
      return this.__InkRipple__fadeOut_A;
    },
    set$_fadeOut(value) {
      this.set$__InkRipple__fadeOut_A(type$.Animation_int._as(value));
    },
    get$_fadeOutController() {
      return this.__InkRipple__fadeOutController_A;
    },
    set$_fadeOutController(value) {
      this.__InkRipple__fadeOutController_A = type$.AnimationController._as(value);
    },
    confirm$0() {
      var t1 = this.get$_ink_ripple$_radiusController();
      t1.duration = C.Duration_225000;
      t1.forward$0();
      this.get$_fadeInController().forward$0();
      this.get$_fadeOutController().animateTo$2$duration(1, C.Duration_375000);
    },
    cancel$0() {
      var t1, fadeOutValue, _this = this;
      _this.get$_fadeInController().stop$0();
      t1 = _this.get$_fadeInController().get$value();
      if (typeof t1 !== "number")
        return B.iae(t1);
      fadeOutValue = 1 - t1;
      _this.get$_fadeOutController().set$value(fadeOutValue);
      if (fadeOutValue < 1)
        _this.get$_fadeOutController().animateTo$2$duration(1, C.Duration_75000);
    },
    _ink_ripple$_handleAlphaStatusChanged$1($status) {
      if (B.boolConversionCheck(type$.AnimationStatus._as($status).get$isCompleted()))
        this.dispose$0();
    },
    dispose$0() {
      var _this = this;
      _this.get$_ink_ripple$_radiusController().dispose$0();
      _this.get$_fadeInController().dispose$0();
      _this.get$_fadeOutController().dispose$0();
      _this.super$InkFeature$dispose();
    },
    paintFeature$2(canvas, transform) {
      var alpha, paint, t1, rect, t2, t3, _this = this;
      type$.Canvas._as(canvas);
      type$.Matrix4._as(transform);
      alpha = B.boolConversionCheck(_this.get$_fadeInController().get$isAnimating()) ? _this.get$_fadeIn().get$value() : _this.get$_fadeOut().get$value();
      paint = E.Paint_Paint();
      paint.set$color(_this.get$color().withAlpha$1(alpha));
      t1 = _this._ink_ripple$_clipCallback;
      if (t1 != null)
        rect = t1.call$0();
      else
        rect = null;
      t2 = rect != null ? rect.get$center() : _this.referenceBox.get$size().center$1(D.Offset_0_0);
      t2 = A.Offset_lerp(_this._ink_ripple$_position, t2, D.Cubic_WKj.transform$1(_this.get$_ink_ripple$_radiusController().get$value()));
      t2.toString;
      t3 = _this.get$_ink_ripple$_radius().get$value();
      _this.paintInkCircle$9$borderRadius$canvas$center$clipCallback$customBorder$paint$radius$textDirection$transform(_this._ink_ripple$_borderRadius, canvas, t2, t1, _this.get$customBorder(), paint, t3, _this._ink_ripple$_textDirection, transform);
    },
    set$__InkRipple__radius_A(__InkRipple__radius_A) {
      this.__InkRipple__radius_A = type$.Animation_double._as(__InkRipple__radius_A);
    },
    set$__InkRipple__fadeIn_A(__InkRipple__fadeIn_A) {
      this.__InkRipple__fadeIn_A = type$.Animation_int._as(__InkRipple__fadeIn_A);
    },
    set$__InkRipple__fadeOut_A(__InkRipple__fadeOut_A) {
      this.__InkRipple__fadeOut_A = type$.Animation_int._as(__InkRipple__fadeOut_A);
    }
  };
  A._InkSplashFactory.prototype = {
    create$11$borderRadius$color$containedInkWell$controller$customBorder$onRemoved$position$radius$rectCallback$referenceBox$textDirection(borderRadius, color, containedInkWell, controller, customBorder, onRemoved, position, radius, rectCallback, referenceBox, textDirection) {
      type$.MaterialInkController._as(controller);
      type$.RenderBox._as(referenceBox);
      type$.Offset._as(position);
      type$.Color._as(color);
      type$.TextDirection._as(textDirection);
      B._asBool(containedInkWell);
      type$.nullable_Rect_Function._as(rectCallback);
      type$.nullable_BorderRadius._as(borderRadius);
      type$.nullable_ShapeBorder._as(customBorder);
      B._asDoubleQ(radius);
      return A.InkSplash$(borderRadius, color, containedInkWell, controller, customBorder, type$.nullable_void_Function._as(onRemoved), position, radius, rectCallback, referenceBox, textDirection);
    }
  };
  A.InkSplash.prototype = {
    InkSplash$11$borderRadius$color$containedInkWell$controller$customBorder$onRemoved$position$radius$rectCallback$referenceBox$textDirection(borderRadius, color, containedInkWell, controller, customBorder, onRemoved, position, radius, rectCallback, referenceBox, textDirection) {
      var _this = this, _null = null,
        t1 = controller.vsync,
        t2 = A.AnimationController$(_null, D.Duration_1000000, _null, t1),
        t3 = controller.get$markNeedsPaint();
      t2.addListener$1(t3);
      t2.forward$0();
      _this.set$_radiusController(t2);
      t2 = type$.double;
      _this.set$_ink_splash$_radius(_this.get$_radiusController().drive$1$1(A.Tween$(0, _this._targetRadius, t2), t2));
      t1 = A.AnimationController$(_null, D.Duration_200000, _null, t1);
      t1.addListener$1(t3);
      t1.addStatusListener$1(_this.get$_ink_splash$_handleAlphaStatusChanged());
      _this._ink_splash$_alphaController = t1;
      _this.set$_ink_splash$_alpha(t1.drive$1$1(A.IntTween$(color.get$alpha(), 0), type$.int));
      controller.addInkFeature$1(_this);
    },
    get$_ink_splash$_radius() {
      return this.__InkSplash__radius_A;
    },
    set$_ink_splash$_radius(value) {
      this.set$__InkSplash__radius_A(type$.Animation_double._as(value));
    },
    get$_radiusController() {
      return this.__InkSplash__radiusController_A;
    },
    set$_radiusController(value) {
      this.__InkSplash__radiusController_A = type$.AnimationController._as(value);
    },
    get$_ink_splash$_alpha() {
      return this.__InkSplash__alpha_A;
    },
    set$_ink_splash$_alpha(value) {
      this.set$__InkSplash__alpha_A(type$.Animation_int._as(value));
    },
    confirm$0() {
      var duration,
        t1 = this._targetRadius;
      if (typeof t1 !== "number")
        return t1.$div();
      duration = F.JSNumber_methods.floor$0(t1 / 1);
      t1 = this.get$_radiusController();
      t1.duration = E.Duration$(0, duration);
      t1.forward$0();
      this._ink_splash$_alphaController.forward$0();
    },
    cancel$0() {
      var t1 = this._ink_splash$_alphaController;
      if (t1 != null)
        t1.forward$0();
    },
    _ink_splash$_handleAlphaStatusChanged$1($status) {
      if (B.boolConversionCheck(type$.AnimationStatus._as($status).get$isCompleted()))
        this.dispose$0();
    },
    dispose$0() {
      var _this = this;
      _this.get$_radiusController().dispose$0();
      _this._ink_splash$_alphaController.dispose$0();
      _this._ink_splash$_alphaController = null;
      _this.super$InkFeature$dispose();
    },
    paintFeature$2(canvas, transform) {
      var paint, center, t1, _this = this;
      type$.Canvas._as(canvas);
      type$.Matrix4._as(transform);
      paint = E.Paint_Paint();
      paint.set$color(_this.get$color().withAlpha$1(_this.get$_ink_splash$_alpha().get$value()));
      center = _this._ink_splash$_position;
      if (B.boolConversionCheck(_this._repositionToReferenceBox))
        center = A.Offset_lerp(center, _this.referenceBox.get$size().center$1(D.Offset_0_0), _this.get$_radiusController().get$value());
      center.toString;
      t1 = _this.get$_ink_splash$_radius().get$value();
      _this.paintInkCircle$9$borderRadius$canvas$center$clipCallback$customBorder$paint$radius$textDirection$transform(_this._ink_splash$_borderRadius, canvas, center, _this._clipCallback, _this.get$customBorder(), paint, t1, _this._ink_splash$_textDirection, transform);
    },
    set$__InkSplash__radius_A(__InkSplash__radius_A) {
      this.__InkSplash__radius_A = type$.Animation_double._as(__InkSplash__radius_A);
    },
    set$__InkSplash__alpha_A(__InkSplash__alpha_A) {
      this.__InkSplash__alpha_A = type$.Animation_int._as(__InkSplash__alpha_A);
    }
  };
  A.InteractiveInkFeature.prototype = {
    confirm$0() {
    },
    cancel$0() {
    },
    get$color() {
      return this._ink_well$_color;
    },
    set$color(value) {
      type$.Color._as(value);
      if (B.boolConversionCheck(value.$eq(0, this._ink_well$_color)))
        return;
      this._ink_well$_color = value;
      this.get$controller().markNeedsPaint$0();
    },
    get$customBorder() {
      return this._customBorder;
    },
    set$customBorder(value) {
      type$.nullable_ShapeBorder._as(value);
      if (B.boolConversionCheck(J.$eq$(value, this._customBorder)))
        return;
      this._customBorder = value;
      this.get$controller().markNeedsPaint$0();
    },
    paintInkCircle$9$borderRadius$canvas$center$clipCallback$customBorder$paint$radius$textDirection$transform(borderRadius, canvas, center, clipCallback, customBorder, paint, radius, textDirection, transform) {
      var originOffset, rect;
      type$.Canvas._as(canvas);
      type$.Matrix4._as(transform);
      type$.Paint._as(paint);
      type$.Offset._as(center);
      B._asDouble(radius);
      type$.nullable_TextDirection._as(textDirection);
      type$.nullable_ShapeBorder._as(customBorder);
      type$.BorderRadius._as(borderRadius);
      type$.nullable_Rect_Function._as(clipCallback);
      originOffset = E.MatrixUtils_getAsTranslation(transform);
      canvas.save$0();
      if (originOffset == null)
        canvas.transform$1(transform.get$storage());
      else
        canvas.translate$2(originOffset.get$dx(), originOffset.get$dy());
      if (clipCallback != null) {
        rect = clipCallback.call$0();
        if (customBorder != null)
          canvas.clipPath$1(customBorder.getOuterPath$2$textDirection(rect, textDirection));
        else if (!B.boolConversionCheck(borderRadius.$eq(0, C.BorderRadius_ww8)))
          canvas.clipRRect$1(E.RRect$fromRectAndCorners(rect, borderRadius.bottomLeft, borderRadius.bottomRight, borderRadius.topLeft, borderRadius.topRight));
        else
          canvas.clipRect$1(rect);
      }
      canvas.drawCircle$3(center, radius, paint);
      canvas.restore$0();
    }
  };
  A.InteractiveInkFeatureFactory.prototype = {};
  A._ParentInkResponseProvider.prototype = {
    updateShouldNotify$1(oldWidget) {
      return !B.boolConversionCheck(J.$eq$(this.state, type$._ParentInkResponseProvider._as(oldWidget).state));
    }
  };
  A.InkResponse.prototype = {
    getRectCallback$1(referenceBox) {
      type$.RenderBox._as(referenceBox);
      return null;
    },
    build$1(context) {
      var _this = this;
      return A._InkResponseStateWidget$(_this.autofocus, _this.borderRadius, _this.canRequestFocus, _this.child, _this.containedInkWell, _this.customBorder, _this.get$debugCheckContext(), _this.enableFeedback, _this.excludeFromSemantics, _this.focusColor, _this.focusNode, _this.get$getRectCallback(), _this.highlightColor, _this.highlightShape, _this.hoverColor, _this.hoverDuration, _this.mouseCursor, _this.onDoubleTap, _this.onFocusChange, _this.onHighlightChanged, _this.onHover, _this.onLongPress, _this.onSecondaryTap, _this.onSecondaryTapCancel, _this.onSecondaryTapDown, _this.onSecondaryTapUp, _this.onTap, _this.onTapCancel, _this.onTapDown, _this.onTapUp, _this.overlayColor, A._ParentInkResponseProvider_maybeOf(type$.BuildContext._as(context)), _this.radius, _this.splashColor, _this.splashFactory, _this.statesController);
    },
    debugCheckContext$1(context) {
      type$.BuildContext._as(context);
      return true;
    }
  };
  A._InkResponseStateWidget.prototype = {
    createState$0() {
      return A._InkResponseState$();
    },
    debugFillProperties$1(properties) {
      var t1, t2, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Widget$debugFillProperties(properties);
      t1 = B._setArrayType([], type$.JSArray_String);
      if (_this.onTap != null)
        t1.push("tap");
      if (_this.onDoubleTap != null)
        t1.push("double tap");
      if (_this.onLongPress != null)
        t1.push("long press");
      if (_this.onTapDown != null)
        t1.push("tap down");
      if (_this.onTapUp != null)
        t1.push("tap up");
      if (_this.onTapCancel != null)
        t1.push("tap cancel");
      if (_this.onSecondaryTap != null)
        t1.push("secondary tap");
      if (_this.onSecondaryTapUp != null)
        t1.push("secondary tap up");
      if (_this.onSecondaryTapDown != null)
        t1.push("secondary tap down");
      if (_this.onSecondaryTapCancel != null)
        t1.push("secondary tap cancel");
      properties.add$1(0, E.IterableProperty$("gestures", t1, D.C__NoDefaultValue, "<none>", D.DiagnosticLevel_3, D.DiagnosticsTreeStyle_8, type$.String));
      properties.add$1(0, E.DiagnosticsProperty$("mouseCursor", _this.mouseCursor, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.MouseCursor));
      t1 = _this.containedInkWell;
      properties.add$1(0, E.DiagnosticsProperty$("containedInkWell", t1, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_1, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
      t2 = _this.highlightShape;
      t1 = B.boolConversionCheck(t1) ? "clipped to " : "";
      properties.add$1(0, E.DiagnosticsProperty$("highlightShape", t2, true, D.C__NoDefaultValue, t1 + B.S(t2), _null, _null, D.DiagnosticLevel_3, false, false, true, D.DiagnosticsTreeStyle_8, _null, type$.BoxShape));
    }
  };
  A._HighlightType.prototype = {
    _enumToString$0() {
      return "_HighlightType." + B.S(this._core$_name);
    }
  };
  A._InkResponseState.prototype = {
    get$_actionMap() {
      var t1, result,
        value = this.___InkResponseState__actionMap_FI;
      if (B.boolConversionCheck(E.isSentinel(value))) {
        t1 = this.get$activateOnIntent();
        result = B.LinkedHashMap_LinkedHashMap$_literal([C.Type_ActivateIntent_fF3, A.CallbackAction$(t1, type$.ActivateIntent), C.Type_ButtonActivateIntent_Spn, A.CallbackAction$(t1, type$.ButtonActivateIntent)], type$.Type, type$.Action_Intent);
        value !== $ && B.throwLateFieldADI("_actionMap");
        this.set$___InkResponseState__actionMap_FI(result);
        value = result;
      }
      return value;
    },
    get$highlightsExist() {
      return J.get$isNotEmpty$asx(J.where$1$ax(this._highlights.get$values(), new A._InkResponseState_highlightsExist_closure()));
    },
    markChildInkResponsePressed$2(childState, value) {
      var lastAnyPressed, t1, t2, nowAnyPressed, _this = this;
      type$._ParentInkResponseState._as(childState);
      B._asBool(value);
      lastAnyPressed = _this.get$_anyChildInkResponsePressed();
      t1 = _this._activeChildren;
      t2 = J.getInterceptor$ax(t1);
      if (value)
        t2.add$1(t1, childState);
      else
        t2.remove$1(t1, childState);
      nowAnyPressed = _this.get$_anyChildInkResponsePressed();
      if (nowAnyPressed !== lastAnyPressed) {
        t1 = _this.get$widget().parentState;
        if (t1 != null)
          t1.markChildInkResponsePressed$2(_this, nowAnyPressed);
      }
    },
    get$_anyChildInkResponsePressed() {
      return J.get$isNotEmpty$asx(this._activeChildren);
    },
    activateOnIntent$1(intent) {
      var t1, _this = this;
      type$.nullable_Intent._as(intent);
      t1 = _this._activationTimer;
      if (t1 != null)
        t1.cancel$0();
      _this._activationTimer = null;
      _this._startNewSplash$1$context(_this.get$context());
      t1 = _this._currentSplash;
      if (t1 != null)
        t1.confirm$0();
      _this._currentSplash = null;
      if (_this.get$widget().onTap != null) {
        if (B.boolConversionCheck(_this.get$widget().enableFeedback))
          A.Feedback_forTap(_this.get$context());
        t1 = _this.get$widget().onTap;
        if (t1 != null)
          t1.call$0();
      }
      _this.set$_activationTimer(E.Timer_Timer(D.Duration_100000, new A._InkResponseState_activateOnIntent_closure(_this)));
    },
    simulateTap$1(intent) {
      type$.nullable_Intent._as(intent);
      this._startNewSplash$1$context(this.get$context());
      this.handleTap$0();
    },
    simulateTap$0() {
      return this.simulateTap$1(null);
    },
    simulateLongPress$0() {
      this._startNewSplash$1$context(this.get$context());
      this.handleLongPress$0();
    },
    handleStatesControllerChange$0() {
      this.setState$1(new A._InkResponseState_handleStatesControllerChange_closure());
    },
    get$statesController() {
      var t1 = this.get$widget().statesController;
      if (t1 == null) {
        t1 = this.internalStatesController;
        t1.toString;
      }
      return t1;
    },
    initStatesController$0() {
      var _this = this;
      if (_this.get$widget().statesController == null)
        _this.internalStatesController = A.WidgetStatesController$(null);
      _this.get$statesController().update$2(C.WidgetState_6, !B.boolConversionCheck(_this.get$enabled()));
      _this.get$statesController().addListener$1(_this.get$handleStatesControllerChange());
    },
    initState$0() {
      this.super$__InkResponseState_State_AutomaticKeepAliveClientMixin$initState();
      this.initStatesController$0();
      E.FocusManager_instance().addHighlightModeListener$1(this.get$handleFocusHighlightModeChange());
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, hoverHighlight, focusHighlight, _this = this;
      type$._InkResponseStateWidget._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = oldWidget.statesController;
      if (!B.boolConversionCheck(J.$eq$(_this.get$widget().statesController, t1))) {
        if (t1 != null)
          t1.removeListener$1(_this.get$handleStatesControllerChange());
        if (_this.get$widget().statesController != null) {
          t1 = _this.internalStatesController;
          if (t1 != null)
            t1.dispose$0();
          _this.internalStatesController = null;
        }
        _this.initStatesController$0();
      }
      if (!B.boolConversionCheck(J.$eq$(_this.get$widget().radius, oldWidget.radius)) || !B.boolConversionCheck(J.$eq$(_this.get$widget().highlightShape, oldWidget.highlightShape)) || !B.boolConversionCheck(J.$eq$(_this.get$widget().borderRadius, oldWidget.borderRadius))) {
        t1 = _this._highlights;
        t2 = J.getInterceptor$asx(t1);
        hoverHighlight = t2.$index(t1, C._HighlightType_1);
        if (hoverHighlight != null) {
          hoverHighlight.dispose$0();
          _this.updateHighlight$3$callOnHover$value(C._HighlightType_1, false, _this._hovering);
        }
        focusHighlight = t2.$index(t1, C._HighlightType_2);
        if (focusHighlight != null)
          focusHighlight.dispose$0();
      }
      if (!B.boolConversionCheck(J.$eq$(_this.get$widget().customBorder, oldWidget.customBorder)))
        _this._updateHighlightsAndSplashes$0();
      if (!B.boolConversionCheck(J.$eq$(_this.get$enabled(), _this.isWidgetEnabled$1(oldWidget)))) {
        _this.get$statesController().update$2(C.WidgetState_6, !B.boolConversionCheck(_this.get$enabled()));
        if (!B.boolConversionCheck(_this.get$enabled())) {
          _this.get$statesController().update$2(C.WidgetState_2, false);
          hoverHighlight = J.$index$asx(_this._highlights, C._HighlightType_1);
          if (hoverHighlight != null)
            hoverHighlight.dispose$0();
        }
        _this.updateHighlight$3$callOnHover$value(C._HighlightType_1, false, _this._hovering);
      }
      _this.updateFocusHighlights$0();
    },
    dispose$0() {
      var t1, _this = this;
      E.FocusManager_instance().removeHighlightModeListener$1(_this.get$handleFocusHighlightModeChange());
      _this.get$statesController().removeListener$1(_this.get$handleStatesControllerChange());
      t1 = _this.internalStatesController;
      if (t1 != null)
        t1.dispose$0();
      t1 = _this._activationTimer;
      if (t1 != null)
        t1.cancel$0();
      _this._activationTimer = null;
      _this.super$State$dispose();
    },
    get$wantKeepAlive() {
      if (!B.boolConversionCheck(this.get$highlightsExist())) {
        var t1 = this._splashes;
        t1 = t1 != null && B.boolConversionCheck(J.get$isNotEmpty$asx(t1));
      } else
        t1 = true;
      return t1;
    },
    getFadeDurationForType$1(type) {
      var t1;
      switch (type$._HighlightType._as(type).index) {
        case 0:
          return D.Duration_200000;
        case 1:
        case 2:
          t1 = this.get$widget().hoverDuration;
          return t1 == null ? D.Duration_50000 : t1;
      }
    },
    updateHighlight$3$callOnHover$value(type, callOnHover, value) {
      var t1, t2, highlight, t3, t4, resolvedOverlayColor, t5, t6, t7, t8, t9, t10, t11, t12, _this = this;
      type$._HighlightType._as(type);
      B._asBool(value);
      B._asBool(callOnHover);
      t1 = _this._highlights;
      t2 = J.getInterceptor$asx(t1);
      highlight = t2.$index(t1, type);
      t3 = type.index;
      switch (t3) {
        case 0:
          _this.get$statesController().update$2(C.WidgetState_2, value);
          break;
        case 1:
          if (callOnHover)
            _this.get$statesController().update$2(C.WidgetState_0, value);
          break;
        case 2:
          break;
      }
      if (type === C._HighlightType_0) {
        t4 = _this.get$widget().parentState;
        if (t4 != null)
          t4.markChildInkResponsePressed$2(_this, value);
      }
      t4 = highlight == null;
      if (value === (!t4 && B.boolConversionCheck(highlight.get$active())))
        return;
      if (value)
        if (t4) {
          t4 = _this.get$widget().overlayColor;
          resolvedOverlayColor = t4 == null ? null : t4.resolve$1(_this.get$statesController().get$value());
          if (resolvedOverlayColor == null) {
            switch (t3) {
              case 0:
                t4 = _this.get$widget().highlightColor;
                if (t4 == null)
                  t4 = A.Theme_of(_this.get$context()).highlightColor;
                break;
              case 2:
                t4 = _this.get$widget().focusColor;
                if (t4 == null)
                  t4 = A.Theme_of(_this.get$context()).focusColor;
                break;
              case 1:
                t4 = _this.get$widget().hoverColor;
                if (t4 == null)
                  t4 = A.Theme_of(_this.get$context()).hoverColor;
                break;
              default:
                t4 = null;
            }
            resolvedOverlayColor = t4;
          }
          t4 = _this.get$context().findRenderObject$0();
          t4.toString;
          type$.RenderBox._as(t4);
          t5 = A.Material_of(_this.get$context());
          t6 = B.boolConversionCheck(_this.get$enabled()) ? resolvedOverlayColor : resolvedOverlayColor.withAlpha$1(0);
          t7 = _this.get$widget().highlightShape;
          t8 = _this.get$widget().radius;
          t9 = _this.get$widget().borderRadius;
          t10 = _this.get$widget().customBorder;
          t11 = _this.get$widget().getRectCallback.call$1(t4);
          t12 = A.Directionality_of(_this.get$context());
          t2.$indexSet(t1, type, A.InkHighlight$(t9, t6, t5, t10, _this.getFadeDurationForType$1(type), new A._InkResponseState_updateHighlight_handleInkRemoval(_this, type), t8, t11, t4, t7, t12));
          _this.updateKeepAlive$0();
        } else
          highlight.activate$0();
      else
        highlight.deactivate$0();
      switch (t3) {
        case 0:
          t1 = _this.get$widget().onHighlightChanged;
          if (t1 != null)
            t1.call$1(value);
          break;
        case 1:
          if (callOnHover) {
            t1 = _this.get$widget().onHover;
            if (t1 != null)
              t1.call$1(value);
          }
          break;
        case 2:
          break;
      }
    },
    updateHighlight$2$value(type, value) {
      return this.updateHighlight$3$callOnHover$value(type, true, value);
    },
    _updateHighlightsAndSplashes$0() {
      var t1, t2, _this = this;
      for (t1 = J.get$iterator$ax(_this._highlights.get$values()); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        if (t2 != null)
          t2.set$customBorder(_this.get$widget().customBorder);
      }
      t1 = _this._currentSplash;
      if (t1 != null)
        t1.set$customBorder(_this.get$widget().customBorder);
      t1 = _this._splashes;
      if (t1 != null && B.boolConversionCheck(J.get$isNotEmpty$asx(t1))) {
        t1 = _this._splashes;
        t1.toString;
        t1 = J.get$iterator$ax(t1);
        for (; B.boolConversionCheck(t1.moveNext$0());)
          t1.get$current().set$customBorder(_this.get$widget().customBorder);
      }
    },
    _createSplash$1(globalPosition) {
      var inkController, t2, position, t3, color, rectCallback, borderRadius, customBorder, _this = this, t1 = {};
      type$.Offset._as(globalPosition);
      inkController = A.Material_of(_this.get$context());
      t2 = _this.get$context().findRenderObject$0();
      t2.toString;
      type$.RenderBox._as(t2);
      position = t2.globalToLocal$1(globalPosition);
      t3 = _this.get$widget().overlayColor;
      t3 = t3 == null ? null : t3.resolve$1(_this.get$statesController().get$value());
      color = t3 == null ? _this.get$widget().splashColor : t3;
      if (color == null)
        color = A.Theme_of(_this.get$context()).splashColor;
      rectCallback = B.boolConversionCheck(_this.get$widget().containedInkWell) ? _this.get$widget().getRectCallback.call$1(t2) : null;
      borderRadius = _this.get$widget().borderRadius;
      customBorder = _this.get$widget().customBorder;
      t1.splash = null;
      t3 = _this.get$widget().splashFactory;
      if (t3 == null)
        t3 = A.Theme_of(_this.get$context()).splashFactory;
      return t1.splash = t3.create$11$borderRadius$color$containedInkWell$controller$customBorder$onRemoved$position$radius$rectCallback$referenceBox$textDirection(borderRadius, color, _this.get$widget().containedInkWell, inkController, customBorder, new A._InkResponseState__createSplash_onRemoved(t1, _this), position, _this.get$widget().radius, rectCallback, t2, A.Directionality_of(_this.get$context()));
    },
    handleFocusHighlightModeChange$1(mode) {
      type$.FocusHighlightMode._as(mode);
      if (!B.boolConversionCheck(this.get$mounted()))
        return;
      this.setState$1(new A._InkResponseState_handleFocusHighlightModeChange_closure(this));
    },
    get$_shouldShowFocus() {
      var t1, _this = this,
        _0_0 = A.MediaQuery_maybeNavigationModeOf(_this.get$context());
      $label0$0: {
        if (D.NavigationMode_0 === _0_0 || _0_0 == null) {
          t1 = B.boolConversionCheck(_this.get$enabled()) && B.boolConversionCheck(_this._hasFocus);
          break $label0$0;
        }
        if (C.NavigationMode_1 === _0_0) {
          t1 = _this._hasFocus;
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    },
    updateFocusHighlights$0() {
      switch (E.FocusManager_instance().get$highlightMode()) {
        case D.FocusHighlightMode_0:
          var t1 = false;
          break;
        case D.FocusHighlightMode_1:
          t1 = this.get$_shouldShowFocus();
          break;
        default:
          t1 = null;
      }
      this.updateHighlight$2$value(C._HighlightType_2, t1);
    },
    handleFocusUpdate$1(hasFocus) {
      var t1, _this = this;
      B._asBool(hasFocus);
      _this._hasFocus = hasFocus;
      _this.get$statesController().update$2(C.WidgetState_1, hasFocus);
      _this.updateFocusHighlights$0();
      t1 = _this.get$widget().onFocusChange;
      if (t1 != null)
        t1.call$1(hasFocus);
    },
    handleAnyTapDown$1(details) {
      type$.TapDownDetails._as(details);
      if (B.boolConversionCheck(this.get$_anyChildInkResponsePressed()))
        return;
      this._startNewSplash$1$details(details);
    },
    handleTapDown$1(details) {
      var t1;
      type$.TapDownDetails._as(details);
      this.handleAnyTapDown$1(details);
      t1 = this.get$widget().onTapDown;
      if (t1 != null)
        t1.call$1(details);
    },
    handleTapUp$1(details) {
      var t1;
      type$.TapUpDetails._as(details);
      t1 = this.get$widget().onTapUp;
      if (t1 != null)
        t1.call$1(details);
    },
    handleSecondaryTapDown$1(details) {
      var t1;
      type$.TapDownDetails._as(details);
      this.handleAnyTapDown$1(details);
      t1 = this.get$widget().onSecondaryTapDown;
      if (t1 != null)
        t1.call$1(details);
    },
    handleSecondaryTapUp$1(details) {
      var t1;
      type$.TapUpDetails._as(details);
      t1 = this.get$widget().onSecondaryTapUp;
      if (t1 != null)
        t1.call$1(details);
    },
    _startNewSplash$2$context$details(context, details) {
      var t1, globalPosition, splash, _this = this;
      type$.nullable_TapDownDetails._as(details);
      type$.nullable_BuildContext._as(context);
      if (context != null) {
        t1 = context.findRenderObject$0();
        t1.toString;
        type$.RenderBox._as(t1);
        globalPosition = t1.localToGlobal$1(t1.get$paintBounds().get$center());
      } else
        globalPosition = details.globalPosition;
      _this.get$statesController().update$2(C.WidgetState_2, true);
      splash = _this._createSplash$1(globalPosition);
      if (_this._splashes == null)
        _this.set$_splashes(B.HashSet_HashSet(type$.InteractiveInkFeature));
      t1 = _this._splashes;
      t1.toString;
      J.add$1$ax(t1, splash);
      t1 = _this._currentSplash;
      if (t1 != null)
        t1.cancel$0();
      _this._currentSplash = splash;
      _this.updateKeepAlive$0();
      _this.updateHighlight$2$value(C._HighlightType_0, true);
    },
    _startNewSplash$1$details(details) {
      return this._startNewSplash$2$context$details(null, details);
    },
    _startNewSplash$1$context(context) {
      return this._startNewSplash$2$context$details(context, null);
    },
    handleTap$0() {
      var _this = this,
        t1 = _this._currentSplash;
      if (t1 != null)
        t1.confirm$0();
      _this._currentSplash = null;
      _this.updateHighlight$2$value(C._HighlightType_0, false);
      if (_this.get$widget().onTap != null) {
        if (B.boolConversionCheck(_this.get$widget().enableFeedback))
          A.Feedback_forTap(_this.get$context());
        t1 = _this.get$widget().onTap;
        if (t1 != null)
          t1.call$0();
      }
    },
    handleTapCancel$0() {
      var _this = this,
        t1 = _this._currentSplash;
      if (t1 != null)
        t1.cancel$0();
      _this._currentSplash = null;
      t1 = _this.get$widget().onTapCancel;
      if (t1 != null)
        t1.call$0();
      _this.updateHighlight$2$value(C._HighlightType_0, false);
    },
    handleDoubleTap$0() {
      var _this = this,
        t1 = _this._currentSplash;
      if (t1 != null)
        t1.confirm$0();
      _this._currentSplash = null;
      _this.updateHighlight$2$value(C._HighlightType_0, false);
      t1 = _this.get$widget().onDoubleTap;
      if (t1 != null)
        t1.call$0();
    },
    handleLongPress$0() {
      var _this = this,
        t1 = _this._currentSplash;
      if (t1 != null)
        t1.confirm$0();
      _this._currentSplash = null;
      if (_this.get$widget().onLongPress != null) {
        if (B.boolConversionCheck(_this.get$widget().enableFeedback))
          A.Feedback_forLongPress(_this.get$context());
        _this.get$widget().onLongPress.call$0();
      }
    },
    handleSecondaryTap$0() {
      var _this = this,
        t1 = _this._currentSplash;
      if (t1 != null)
        t1.confirm$0();
      _this._currentSplash = null;
      _this.updateHighlight$2$value(C._HighlightType_0, false);
      t1 = _this.get$widget().onSecondaryTap;
      if (t1 != null)
        t1.call$0();
    },
    handleSecondaryTapCancel$0() {
      var _this = this,
        t1 = _this._currentSplash;
      if (t1 != null)
        t1.cancel$0();
      _this._currentSplash = null;
      t1 = _this.get$widget().onSecondaryTapCancel;
      if (t1 != null)
        t1.call$0();
      _this.updateHighlight$2$value(C._HighlightType_0, false);
    },
    deactivate$0() {
      var t2, t3, t4, t5, _this = this,
        t1 = _this._splashes;
      if (t1 != null) {
        _this.set$_splashes(null);
        for (t1 = t1.get$iterator(t1); B.boolConversionCheck(t1.moveNext$0());)
          t1.get$current().dispose$0();
        _this._currentSplash = null;
      }
      for (t1 = _this._highlights, t2 = J.get$iterator$ax(t1.get$keys()), t3 = J.getInterceptor$asx(t1); B.boolConversionCheck(t2.moveNext$0());) {
        t4 = t2.get$current();
        t5 = t3.$index(t1, t4);
        if (t5 != null)
          t5.dispose$0();
        t3.$indexSet(t1, t4, null);
      }
      t1 = _this.get$widget().parentState;
      if (t1 != null)
        t1.markChildInkResponsePressed$2(_this, false);
      _this.super$__InkResponseState_State_AutomaticKeepAliveClientMixin$deactivate();
    },
    isWidgetEnabled$1(widget) {
      type$._InkResponseStateWidget._as(widget);
      return B.boolConversionCheck(this._primaryButtonEnabled$1(widget)) || B.boolConversionCheck(this._secondaryButtonEnabled$1(widget));
    },
    _primaryButtonEnabled$1(widget) {
      type$._InkResponseStateWidget._as(widget);
      return widget.onTap != null || widget.onDoubleTap != null || widget.onLongPress != null || widget.onTapUp != null || widget.onTapDown != null;
    },
    _secondaryButtonEnabled$1(widget) {
      type$._InkResponseStateWidget._as(widget);
      return widget.onSecondaryTap != null || widget.onSecondaryTapUp != null || widget.onSecondaryTapDown != null;
    },
    get$enabled() {
      return this.isWidgetEnabled$1(this.get$widget());
    },
    get$_primaryEnabled() {
      return this._primaryButtonEnabled$1(this.get$widget());
    },
    get$_secondaryEnabled() {
      return this._secondaryButtonEnabled$1(this.get$widget());
    },
    handleMouseEnter$1($event) {
      type$.PointerEnterEvent._as($event);
      this._hovering = true;
      if (B.boolConversionCheck(this.get$enabled()))
        this.handleHoverChange$0();
    },
    handleMouseExit$1($event) {
      type$.PointerExitEvent._as($event);
      this._hovering = false;
      this.handleHoverChange$0();
    },
    handleHoverChange$0() {
      this.updateHighlight$2$value(C._HighlightType_1, this._hovering);
    },
    get$_ink_well$_canRequestFocus() {
      var t1,
        _0_0 = A.MediaQuery_maybeNavigationModeOf(this.get$context());
      $label0$0: {
        if (D.NavigationMode_0 === _0_0 || _0_0 == null) {
          t1 = B.boolConversionCheck(this.get$enabled()) && B.boolConversionCheck(this.get$widget().canRequestFocus);
          break $label0$0;
        }
        if (C.NavigationMode_1 === _0_0) {
          t1 = true;
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    },
    build$1(context) {
      var getHighlightColorForType, t1, t2, t3, t4, t5, effectiveMouseCursor, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, _this = this, _null = null;
      type$.BuildContext._as(context);
      _this.super$AutomaticKeepAliveClientMixin$build(context);
      getHighlightColorForType = new A._InkResponseState_build_getHighlightColorForType(_this, context);
      for (t1 = _this._highlights, t2 = J.get$iterator$ax(t1.get$keys()), t3 = J.getInterceptor$asx(t1); B.boolConversionCheck(t2.moveNext$0());) {
        t4 = t2.get$current();
        t5 = t3.$index(t1, t4);
        if (t5 != null)
          t5.set$color(getHighlightColorForType.call$1(t4));
      }
      t1 = _this._currentSplash;
      if (t1 != null) {
        t2 = _this.get$widget().overlayColor;
        t2 = t2 == null ? _null : t2.resolve$1(_this.get$statesController().get$value());
        if (t2 == null)
          t2 = _this.get$widget().splashColor;
        t1.set$color(t2 == null ? A.Theme_of(context).splashColor : t2);
      }
      t1 = _this.get$widget().mouseCursor;
      if (t1 == null)
        t1 = C.C__EnabledAndDisabledMouseCursor;
      effectiveMouseCursor = A.WidgetStateProperty_resolveAs(t1, _this.get$statesController().get$value(), type$.MouseCursor);
      t1 = _this.get$_actionMap();
      t2 = _this.get$widget().focusNode;
      t3 = _this.get$_ink_well$_canRequestFocus();
      t4 = _this.get$widget().autofocus;
      t5 = B.boolConversionCheck(_this.get$widget().excludeFromSemantics) || _this.get$widget().onTap == null ? _null : _this.get$simulateTap();
      t6 = B.boolConversionCheck(_this.get$widget().excludeFromSemantics) || _this.get$widget().onLongPress == null ? _null : _this.get$simulateLongPress();
      t7 = B.boolConversionCheck(_this.get$_primaryEnabled()) ? _this.get$handleTapDown() : _null;
      t8 = B.boolConversionCheck(_this.get$_primaryEnabled()) ? _this.get$handleTapUp() : _null;
      t9 = B.boolConversionCheck(_this.get$_primaryEnabled()) ? _this.get$handleTap() : _null;
      t10 = B.boolConversionCheck(_this.get$_primaryEnabled()) ? _this.get$handleTapCancel() : _null;
      t11 = _this.get$widget().onDoubleTap != null ? _this.get$handleDoubleTap() : _null;
      t12 = _this.get$widget().onLongPress != null ? _this.get$handleLongPress() : _null;
      t13 = B.boolConversionCheck(_this.get$_secondaryEnabled()) ? _this.get$handleSecondaryTapDown() : _null;
      t14 = B.boolConversionCheck(_this.get$_secondaryEnabled()) ? _this.get$handleSecondaryTapUp() : _null;
      t15 = B.boolConversionCheck(_this.get$_secondaryEnabled()) ? _this.get$handleSecondaryTap() : _null;
      t16 = B.boolConversionCheck(_this.get$_secondaryEnabled()) ? _this.get$handleSecondaryTapCancel() : _null;
      return A._ParentInkResponseProvider$(A.Actions$(t1, E.Focus$(t4, t3, A.MouseRegion$(A.DefaultSelectionStyle_merge(E.Semantics$(_null, A.GestureDetector$(C.HitTestBehavior_1, _this.get$widget().child, true, t11, t12, _null, t15, t16, t13, t14, t9, t10, t7, t8), false, _null, false, _null, _null, _null, _null, _null, t6, t5, _null, _null, _null, _null, _null, _null, _null), effectiveMouseCursor), effectiveMouseCursor, _this.get$handleMouseEnter(), _this.get$handleMouseExit()), _null, _null, _null, t2, true, _null, _this.get$handleFocusUpdate(), _null, _null, _null, _null)), _this);
    },
    set$_splashes(_splashes) {
      this._splashes = type$.nullable_Set_InteractiveInkFeature._as(_splashes);
    },
    set$___InkResponseState__actionMap_FI(___InkResponseState__actionMap_FI) {
      this.___InkResponseState__actionMap_FI = type$.Map_of_Type_and_Action_Intent._as(___InkResponseState__actionMap_FI);
    },
    set$_activationTimer(_activationTimer) {
      this._activationTimer = type$.nullable_Timer._as(_activationTimer);
    },
    $is_ParentInkResponseState: 1,
    $isAutomaticKeepAliveClientMixin: 1
  };
  A.InkWell.prototype = {};
  A.__InkResponseState_State_AutomaticKeepAliveClientMixin.prototype = {
    initState$0() {
      this.super$State$initState0();
      if (B.boolConversionCheck(this.get$wantKeepAlive()))
        this._ensureKeepAlive$0();
    },
    deactivate$0() {
      if (this.AutomaticKeepAliveClientMixin__keepAliveHandle != null)
        this._releaseKeepAlive$0();
      this.super$State$deactivate();
    },
    $isAutomaticKeepAliveClientMixin: 1
  };
  A.FloatingLabelBehavior.prototype = {
    _enumToString$0() {
      return "FloatingLabelBehavior." + B.S(this._core$_name);
    }
  };
  A.FloatingLabelAlignment.prototype = {
    get$hashCode(_) {
      return F.JSInt_methods.get$hashCode(-1);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.FloatingLabelAlignment;
    },
    toString$0(_) {
      return A.FloatingLabelAlignment__stringify(-1);
    }
  };
  A.InputDecorationTheme.prototype = {
    get$hashCode(_) {
      var _null = null;
      return B.Object_hash(_null, _null, _null, _null, _null, _null, _null, C.FloatingLabelBehavior_1, C.C_FloatingLabelAlignment, false, _null, false, _null, _null, _null, _null, _null, _null, false, B.Object_hash(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, false, _null, _null, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue));
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      t1 = false;
      if (other instanceof A.InputDecorationTheme) {
        t1 = B.boolConversionCheck(C.C_FloatingLabelAlignment.$eq(0, C.C_FloatingLabelAlignment));
        t1;
      }
      return t1;
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      t1 = type$.TextStyle;
      properties.add$1(0, E.DiagnosticsProperty$("labelStyle", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("floatingLabelStyle", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("helperStyle", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.IntProperty$("helperMaxLines", _null, _null, _null, D.DiagnosticLevel_3, _null));
      properties.add$1(0, E.DiagnosticsProperty$("hintStyle", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("hintFadeDuration", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Duration));
      properties.add$1(0, E.DiagnosticsProperty$("errorStyle", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.IntProperty$("errorMaxLines", _null, _null, _null, D.DiagnosticLevel_3, _null));
      properties.add$1(0, E.DiagnosticsProperty$("floatingLabelBehavior", C.FloatingLabelBehavior_1, true, C.FloatingLabelBehavior_1, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FloatingLabelBehavior));
      properties.add$1(0, E.DiagnosticsProperty$("floatingLabelAlignment", C.C_FloatingLabelAlignment, true, C.C_FloatingLabelAlignment, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FloatingLabelAlignment));
      t2 = type$.bool;
      properties.add$1(0, E.DiagnosticsProperty$("isDense", false, true, false, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("contentPadding", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.EdgeInsetsGeometry));
      properties.add$1(0, E.DiagnosticsProperty$("isCollapsed", false, true, false, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      t3 = type$.Color;
      properties.add$1(0, E.DiagnosticsProperty$("iconColor", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      properties.add$1(0, E.DiagnosticsProperty$("prefixIconColor", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      properties.add$1(0, E.DiagnosticsProperty$("prefixStyle", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("suffixIconColor", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      properties.add$1(0, E.DiagnosticsProperty$("suffixStyle", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("counterStyle", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("filled", false, true, false, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, A.ColorProperty$("fillColor", _null, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      t1 = type$.BorderSide;
      properties.add$1(0, E.DiagnosticsProperty$("activeIndicatorBorder", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("outlineBorder", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, A.ColorProperty$("focusColor", _null, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("hoverColor", _null, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      t1 = type$.InputBorder;
      properties.add$1(0, E.DiagnosticsProperty$("errorBorder", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("focusedBorder", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("focusedErrorBorder", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("disabledBorder", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("enabledBorder", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("border", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("alignLabelWithHint", false, true, false, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("constraints", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BoxConstraints));
    },
    $isDiagnosticable: 1
  };
  A._InputDecorationTheme_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.ListTileThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.dense, _this.shape, _this.style, _this.selectedColor, _this.iconColor, _this.textColor, _this.titleTextStyle, _this.subtitleTextStyle, _this.leadingAndTrailingTextStyle, _this.contentPadding, _this.tileColor, _this.selectedTileColor, _this.horizontalTitleGap, _this.minVerticalPadding, _this.minLeadingWidth, _this.minTileHeight, _this.enableFeedback, _this.mouseCursor, _this.visualDensity, _this.titleAlignment);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.ListTileThemeData && B.boolConversionCheck(J.$eq$(other.dense, _this.dense)) && B.boolConversionCheck(J.$eq$(other.shape, _this.shape)) && B.boolConversionCheck(J.$eq$(other.style, _this.style)) && B.boolConversionCheck(J.$eq$(other.selectedColor, _this.selectedColor)) && B.boolConversionCheck(J.$eq$(other.iconColor, _this.iconColor)) && B.boolConversionCheck(J.$eq$(other.titleTextStyle, _this.titleTextStyle)) && B.boolConversionCheck(J.$eq$(other.subtitleTextStyle, _this.subtitleTextStyle)) && B.boolConversionCheck(J.$eq$(other.leadingAndTrailingTextStyle, _this.leadingAndTrailingTextStyle)) && B.boolConversionCheck(J.$eq$(other.textColor, _this.textColor)) && B.boolConversionCheck(J.$eq$(other.contentPadding, _this.contentPadding)) && B.boolConversionCheck(J.$eq$(other.tileColor, _this.tileColor)) && B.boolConversionCheck(J.$eq$(other.selectedTileColor, _this.selectedTileColor)) && B.boolConversionCheck(J.$eq$(other.horizontalTitleGap, _this.horizontalTitleGap)) && B.boolConversionCheck(J.$eq$(other.minVerticalPadding, _this.minVerticalPadding)) && B.boolConversionCheck(J.$eq$(other.minLeadingWidth, _this.minLeadingWidth)) && B.boolConversionCheck(J.$eq$(other.minTileHeight, _this.minTileHeight)) && B.boolConversionCheck(J.$eq$(other.enableFeedback, _this.enableFeedback)) && B.boolConversionCheck(J.$eq$(other.mouseCursor, _this.mouseCursor)) && B.boolConversionCheck(J.$eq$(other.visualDensity, _this.visualDensity)) && B.boolConversionCheck(J.$eq$(other.titleAlignment, _this.titleAlignment));
    },
    debugFillProperties$1(properties) {
      var t1, t2, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      t1 = type$.bool;
      properties.add$1(0, E.DiagnosticsProperty$("dense", _this.dense, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.shape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ShapeBorder));
      properties.add$1(0, E.EnumProperty$("style", _this.style, _null, D.DiagnosticLevel_3, type$.ListTileStyle));
      properties.add$1(0, A.ColorProperty$("selectedColor", _this.selectedColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("iconColor", _this.iconColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("textColor", _this.textColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      t2 = type$.TextStyle;
      properties.add$1(0, E.DiagnosticsProperty$("titleTextStyle", _this.titleTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("subtitleTextStyle", _this.subtitleTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("leadingAndTrailingTextStyle", _this.leadingAndTrailingTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("contentPadding", _this.contentPadding, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.EdgeInsetsGeometry));
      properties.add$1(0, A.ColorProperty$("tileColor", _this.tileColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("selectedTileColor", _this.selectedTileColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DoubleProperty$("horizontalTitleGap", _this.horizontalTitleGap, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("minVerticalPadding", _this.minVerticalPadding, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("minLeadingWidth", _this.minLeadingWidth, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("minTileHeight", _this.minTileHeight, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DiagnosticsProperty$("enableFeedback", _this.enableFeedback, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("mouseCursor", _this.mouseCursor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_MouseCursor));
      properties.add$1(0, E.DiagnosticsProperty$("visualDensity", _this.visualDensity, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.VisualDensity));
      properties.add$1(0, E.DiagnosticsProperty$("titleAlignment", _this.titleAlignment, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ListTileTitleAlignment));
    },
    $isDiagnosticable: 1
  };
  A._ListTileThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.MaterialType.prototype = {
    _enumToString$0() {
      return "MaterialType." + B.S(this._core$_name);
    }
  };
  A.Material.prototype = {
    createState$0() {
      return A._MaterialState$();
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.EnumProperty$("type", _this.type, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.MaterialType));
      properties.add$1(0, E.DoubleProperty$("elevation", _this.elevation, 0, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.ColorProperty$("color", _this.color, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("shadowColor", _this.shadowColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceTintColor", _this.surfaceTintColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      t1 = _this.textStyle;
      if (t1 != null)
        t1.debugFillProperties$2$prefix(properties, "textStyle.");
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.shape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ShapeBorder));
      properties.add$1(0, E.DiagnosticsProperty$("borderOnForeground", true, true, true, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
      properties.add$1(0, E.DiagnosticsProperty$("borderRadius", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BorderRadiusGeometry));
    }
  };
  A._MaterialState.prototype = {
    build$1(context) {
      var theme, backgroundColor, _0_0, t1, modelShadowColor, contents, shape, color, _1_0, t2, t3, _this = this;
      type$.BuildContext._as(context);
      theme = A.Theme_of(context);
      backgroundColor = _this.get$widget().color;
      if (backgroundColor == null) {
        _0_0 = _this.get$widget().type;
        $label0$0: {
          backgroundColor = null;
          if (C.MaterialType_0 === _0_0) {
            t1 = theme.canvasColor;
            break $label0$0;
          }
          if (C.MaterialType_1 === _0_0) {
            t1 = theme.cardColor;
            break $label0$0;
          }
          if (C.MaterialType_3 === _0_0 || C.MaterialType_2 === _0_0 || C.MaterialType_4 === _0_0) {
            t1 = backgroundColor;
            break $label0$0;
          }
          t1 = backgroundColor;
        }
        backgroundColor = t1;
      }
      modelShadowColor = _this.get$widget().shadowColor;
      if (modelShadowColor == null)
        modelShadowColor = B.boolConversionCheck(theme.useMaterial3) ? theme.colorScheme.get$shadow() : theme.shadowColor;
      contents = _this.get$widget().child;
      if (contents != null) {
        t1 = _this.get$widget().textStyle;
        if (t1 == null) {
          t1 = A.Theme_of(context).textTheme.bodyMedium;
          t1.toString;
        }
        contents = A.AnimatedDefaultTextStyle$(contents, _this.get$widget().animationDuration, t1);
      }
      contents = A.NotificationListener$(A._InkFeatures$(!B.boolConversionCheck(J.$eq$(_this.get$widget().type, C.MaterialType_4)), contents, backgroundColor, _this._inkFeatureRenderer, _this), new A._MaterialState_build_closure(_this), type$.LayoutChangedNotification);
      _this.get$widget().toString;
      shape = _this.get$widget().shape;
      if (B.boolConversionCheck(J.$eq$(_this.get$widget().type, C.MaterialType_0)) && shape == null) {
        if (B.boolConversionCheck(theme.useMaterial3)) {
          backgroundColor.toString;
          color = A.ElevationOverlay_applySurfaceTint(backgroundColor, _this.get$widget().surfaceTintColor, _this.get$widget().elevation);
        } else {
          backgroundColor.toString;
          color = A.ElevationOverlay_applyOverlay(context, backgroundColor, _this.get$widget().elevation);
        }
        t1 = _this.get$widget().animationDuration;
        return A.AnimatedPhysicalModel$(false, contents, _this.get$widget().clipBehavior, color, C.Cubic_EBD, t1, _this.get$widget().elevation, modelShadowColor);
      }
      if (shape == null) {
        _1_0 = _this.get$widget().type;
        $label1$1: {
          if (C.MaterialType_2 === _1_0) {
            t1 = C.CircleBorder_0;
            break $label1$1;
          }
          if (C.MaterialType_0 === _1_0 || C.MaterialType_4 === _1_0) {
            t1 = C.RoundedRectangleBorder_NYu0;
            break $label1$1;
          }
          if (C.MaterialType_1 === _1_0 || C.MaterialType_3 === _1_0) {
            t1 = C.RoundedRectangleBorder_NYu;
            break $label1$1;
          }
          t1 = null;
        }
        shape = t1;
      }
      if (B.boolConversionCheck(J.$eq$(_this.get$widget().type, C.MaterialType_4))) {
        t1 = A.ShapeBorderClipper$(shape, E.Directionality_maybeOf(context));
        t2 = _this.get$widget().clipBehavior;
        return A.ClipPath$(A._ShapeBorderPaint$(true, contents, shape), t2, t1);
      }
      t1 = _this.get$widget().animationDuration;
      _this.get$widget().toString;
      t2 = _this.get$widget().clipBehavior;
      t3 = _this.get$widget().elevation;
      backgroundColor.toString;
      return A._MaterialInterior$(true, contents, t2, backgroundColor, C.Cubic_EBD, t1, t3, modelShadowColor, shape, _this.get$widget().surfaceTintColor);
    },
    $isTickerProvider: 1,
    $isTickerProviderStateMixin: 1
  };
  A._RenderInkFeatures.prototype = {
    addInkFeature$1(feature) {
      var t1, _this = this;
      type$.InkFeature._as(feature);
      if (_this._inkFeatures == null)
        _this.set$_inkFeatures(B._setArrayType([], type$.JSArray_InkFeature));
      t1 = _this._inkFeatures;
      t1.toString;
      J.add$1$ax(t1, feature);
      _this.markNeedsPaint$0();
    },
    _removeFeature$1(feature) {
      var t1;
      type$.InkFeature._as(feature);
      t1 = this._inkFeatures;
      t1.toString;
      J.remove$1$ax(t1, feature);
      this.markNeedsPaint$0();
    },
    _didChangeLayout$0() {
      var t1 = this._inkFeatures;
      t1 = t1 == null ? null : J.get$isNotEmpty$asx(t1);
      if (B.boolConversionCheck(t1 == null ? false : t1))
        this.markNeedsPaint$0();
    },
    hitTestSelf$1(position) {
      type$.Offset._as(position);
      return this.absorbHitTest;
    },
    paint$2(context, offset) {
      var inkFeatures, canvas, t1;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      inkFeatures = this._inkFeatures;
      if (inkFeatures != null && B.boolConversionCheck(J.get$isNotEmpty$asx(inkFeatures))) {
        canvas = context.get$canvas();
        canvas.save$0();
        canvas.translate$2(offset.get$dx(), offset.get$dy());
        canvas.clipRect$1(D.Offset_0_0.$and(0, this.get$size()));
        for (t1 = J.get$iterator$ax(inkFeatures); B.boolConversionCheck(t1.moveNext$0());)
          t1.get$current()._paint$1(canvas);
        canvas.restore$0();
      }
      this.super$RenderProxyBoxMixin$paint(context, offset);
    },
    set$color(color) {
      type$.nullable_Color._as(color);
    },
    set$absorbHitTest(absorbHitTest) {
      this.absorbHitTest = B._asBool(absorbHitTest);
    },
    set$_inkFeatures(_inkFeatures) {
      this._inkFeatures = type$.nullable_List_InkFeature._as(_inkFeatures);
    },
    $isMaterialInkController: 1
  };
  A._InkFeatures.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A._RenderInkFeatures$(this.absorbHitTest, this.color, this.vsync);
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$._RenderInkFeatures._as(renderObject);
      renderObject.set$color(this.color);
      renderObject.set$absorbHitTest(this.absorbHitTest);
    }
  };
  A.InkFeature.prototype = {
    InkFeature$3$controller$onRemoved$referenceBox(controller, onRemoved, referenceBox) {
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(B.S(C.Type_InkFeature_7iQ), "package:flutter/material.dart", this);
    },
    get$controller() {
      return this._material$_controller;
    },
    dispose$0() {
      var t1, _this = this;
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectDisposed$1$object(_this);
      _this._material$_controller._removeFeature$1(_this);
      t1 = _this.onRemoved;
      if (t1 != null)
        t1.call$0();
    },
    _paint$1(canvas) {
      var transform;
      type$.Canvas._as(canvas);
      transform = A.InkFeature__getPaintTransform(this._material$_controller, this.referenceBox);
      if (transform != null)
        this.paintFeature$2(canvas, transform);
    },
    toString$0(_) {
      return E.describeIdentity(this);
    }
  };
  A.ShapeBorderTween.prototype = {
    lerp$1(t) {
      B._asDouble(t);
      return A.ShapeBorder_lerp(this.begin, this.end, t);
    }
  };
  A._MaterialInterior.prototype = {
    createState$0() {
      return A._MaterialInteriorState$();
    },
    debugFillProperties$1(description) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(description);
      _this.super$ImplicitlyAnimatedWidget$debugFillProperties(description);
      description.add$1(0, E.DiagnosticsProperty$("shape", _this.shape, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ShapeBorder));
      description.add$1(0, E.DoubleProperty$("elevation", _this.elevation, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, _null, _null));
      description.add$1(0, A.ColorProperty$("color", _this.color, D.C__NoDefaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      description.add$1(0, A.ColorProperty$("shadowColor", _this.shadowColor, D.C__NoDefaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
    }
  };
  A._MaterialInteriorState.prototype = {
    forEachTween$1(visitor) {
      var t1, _this = this;
      type$.nullable_Tween_dynamic_Function_3_nullable_Tween_dynamic_and_dynamic_and_Tween_dynamic_Function_dynamic._as(visitor);
      _this.set$_material$_elevation(type$.nullable_Tween_double._as(visitor.call$3(_this._material$_elevation, _this.get$widget().elevation, new A._MaterialInteriorState_forEachTween_closure())));
      t1 = type$.nullable_ColorTween;
      _this._shadowColor = t1._as(visitor.call$3(_this._shadowColor, _this.get$widget().shadowColor, new A._MaterialInteriorState_forEachTween_closure0()));
      _this._surfaceTintColor = _this.get$widget().surfaceTintColor != null ? t1._as(visitor.call$3(_this._surfaceTintColor, _this.get$widget().surfaceTintColor, new A._MaterialInteriorState_forEachTween_closure1())) : null;
      _this._border = type$.nullable_ShapeBorderTween._as(visitor.call$3(_this._border, _this.get$widget().shape, new A._MaterialInteriorState_forEachTween_closure2()));
    },
    build$1(context) {
      var t1, t2, elevation, t3, color, t4, _this = this;
      type$.BuildContext._as(context);
      t1 = _this._border;
      t1.toString;
      t1 = t1.evaluate$1(_this.get$animation());
      t1.toString;
      t2 = _this._material$_elevation;
      t2.toString;
      elevation = t2.evaluate$1(_this.get$animation());
      if (B.boolConversionCheck(A.Theme_of(context).useMaterial3)) {
        t2 = _this.get$widget().color;
        t3 = _this._surfaceTintColor;
        color = A.ElevationOverlay_applySurfaceTint(t2, t3 == null ? null : t3.evaluate$1(_this.get$animation()), elevation);
      } else
        color = A.ElevationOverlay_applyOverlay(context, _this.get$widget().color, elevation);
      t2 = _this._shadowColor;
      t2.toString;
      t2 = t2.evaluate$1(_this.get$animation());
      t2.toString;
      t3 = A.ShapeBorderClipper$(t1, E.Directionality_maybeOf(context));
      t4 = _this.get$widget().clipBehavior;
      return A.PhysicalShape$(A._ShapeBorderPaint$(_this.get$widget().borderOnForeground, _this.get$widget().child, t1), t4, t3, color, elevation, t2);
    },
    set$_material$_elevation(_elevation) {
      this._material$_elevation = type$.nullable_Tween_double._as(_elevation);
    }
  };
  A._ShapeBorderPaint.prototype = {
    build$1(context) {
      var t1, t2, _this = this;
      type$.BuildContext._as(context);
      t1 = B.boolConversionCheck(_this.borderOnForeground);
      t2 = t1 ? null : A._ShapeBorderPainter$(_this.shape, E.Directionality_maybeOf(context));
      t1 = t1 ? A._ShapeBorderPainter$(_this.shape, E.Directionality_maybeOf(context)) : null;
      return A.CustomPaint$(_this.child, t1, t2);
    }
  };
  A._ShapeBorderPainter.prototype = {
    paint$2(canvas, size) {
      this.border.paint$3$textDirection(type$.Canvas._as(canvas), D.Offset_0_0.$and(0, type$.Size._as(size)), this.textDirection);
    },
    shouldRepaint$1(oldDelegate) {
      return !B.boolConversionCheck(J.$eq$(type$._ShapeBorderPainter._as(oldDelegate).border, this.border));
    }
  };
  A.__MaterialState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$State$debugFillProperties(properties);
      t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null) {
        t2 = B.S(J.get$length$asx(t1));
        t3 = this.TickerProviderStateMixin__tickers;
        t3.toString;
        t3 = B.boolConversionCheck(J.$eq$(J.get$length$asx(t3), 1)) ? "" : "s";
        t3 = "tracking " + t2 + " ticker" + t3;
        t2 = t3;
      } else
        t2 = _null;
      properties.add$1(0, E.DiagnosticsProperty$("tickers", t1, true, _null, t2, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Set_Ticker));
    },
    $isTickerProvider: 1,
    $isTickerProviderStateMixin: 1
  };
  A._MaterialLocalizationsDelegate.prototype = {
    isSupported$1(locale) {
      return J.$eq$(type$.Locale._as(locale).get$languageCode(), "en");
    },
    load$1(locale) {
      return A.DefaultMaterialLocalizations_load(type$.Locale._as(locale));
    },
    shouldReload$1(old) {
      type$._MaterialLocalizationsDelegate._as(old);
      return false;
    },
    toString$0(_) {
      return "DefaultMaterialLocalizations.delegate(en_US)";
    }
  };
  A.DefaultMaterialLocalizations.prototype = {
    get$scriptCategory() {
      return C.ScriptCategory_0;
    },
    $isMaterialLocalizations: 1
  };
  A.MaterialStateMixin.prototype = {
    updateMaterialState$2$onChanged(key, onChanged) {
      return new A.MaterialStateMixin_updateMaterialState_closure(this, type$.WidgetState._as(key), type$.nullable_void_Function_bool._as(onChanged));
    },
    updateMaterialState$1(key) {
      return this.updateMaterialState$2$onChanged(key, null);
    },
    setMaterialState$2(state, isSet) {
      type$.WidgetState._as(state);
      return B._asBool(isSet) ? this.addMaterialState$1(state) : this.removeMaterialState$1(state);
    },
    addMaterialState$1(state) {
      if (B.boolConversionCheck(J.add$1$ax(this.MaterialStateMixin_materialStates, type$.WidgetState._as(state))))
        this.setState$1(new A.MaterialStateMixin_addMaterialState_closure());
    },
    removeMaterialState$1(state) {
      if (B.boolConversionCheck(J.remove$1$ax(this.MaterialStateMixin_materialStates, type$.WidgetState._as(state))))
        this.setState$1(new A.MaterialStateMixin_removeMaterialState_closure());
    },
    get$isDisabled() {
      return J.contains$1$asx(this.MaterialStateMixin_materialStates, C.WidgetState_6);
    },
    get$isFocused() {
      return J.contains$1$asx(this.MaterialStateMixin_materialStates, C.WidgetState_1);
    },
    get$isHovered() {
      return J.contains$1$asx(this.MaterialStateMixin_materialStates, C.WidgetState_0);
    },
    get$isPressed() {
      return J.contains$1$asx(this.MaterialStateMixin_materialStates, C.WidgetState_2);
    },
    $isDiagnosticable: 1,
    $isState0: 1,
    $is_State_Object_Diagnosticable: 1
  };
  A.MenuBarThemeData.prototype = {};
  A.MenuButtonThemeData.prototype = {
    get$hashCode(_) {
      return J.get$hashCode$(this.style);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.MenuButtonThemeData && B.boolConversionCheck(J.$eq$(other.style, this.style));
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("style", this.style, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ButtonStyle));
    },
    $isDiagnosticable: 1
  };
  A._MenuButtonThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.MenuStyle.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hashAll([_this.backgroundColor, _this.shadowColor, _this.surfaceTintColor, _this.elevation, _this.padding, _this.minimumSize, _this.fixedSize, _this.maximumSize, _this.side, _this.shape, _this.mouseCursor, _this.visualDensity, _this.alignment]);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.MenuStyle && B.boolConversionCheck(J.$eq$(other.backgroundColor, _this.backgroundColor)) && B.boolConversionCheck(J.$eq$(other.shadowColor, _this.shadowColor)) && B.boolConversionCheck(J.$eq$(other.surfaceTintColor, _this.surfaceTintColor)) && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.padding, _this.padding)) && B.boolConversionCheck(J.$eq$(other.minimumSize, _this.minimumSize)) && B.boolConversionCheck(J.$eq$(other.fixedSize, _this.fixedSize)) && B.boolConversionCheck(J.$eq$(other.maximumSize, _this.maximumSize)) && B.boolConversionCheck(J.$eq$(other.side, _this.side)) && B.boolConversionCheck(J.$eq$(other.shape, _this.shape)) && B.boolConversionCheck(J.$eq$(other.mouseCursor, _this.mouseCursor)) && B.boolConversionCheck(J.$eq$(other.visualDensity, _this.visualDensity)) && B.boolConversionCheck(J.$eq$(other.alignment, _this.alignment));
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      t1 = type$.WidgetStateProperty_nullable_Color;
      properties.add$1(0, E.DiagnosticsProperty$("backgroundColor", _this.backgroundColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("shadowColor", _this.shadowColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("surfaceTintColor", _this.surfaceTintColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("elevation", _this.elevation, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_double));
      properties.add$1(0, E.DiagnosticsProperty$("padding", _this.padding, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_EdgeInsetsGeometry));
      t1 = type$.WidgetStateProperty_nullable_Size;
      properties.add$1(0, E.DiagnosticsProperty$("minimumSize", _this.minimumSize, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("fixedSize", _this.fixedSize, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("maximumSize", _this.maximumSize, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("side", _this.side, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_BorderSide));
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.shape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_OutlinedBorder));
      properties.add$1(0, E.DiagnosticsProperty$("mouseCursor", _this.mouseCursor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_MouseCursor));
      properties.add$1(0, E.DiagnosticsProperty$("visualDensity", _this.visualDensity, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.VisualDensity));
      properties.add$1(0, E.DiagnosticsProperty$("alignment", _this.alignment, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.AlignmentGeometry));
    },
    $isDiagnosticable: 1
  };
  A._MenuStyle_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.MenuThemeData.prototype = {
    get$hashCode(_) {
      return J.get$hashCode$(this.style);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.MenuThemeData && B.boolConversionCheck(J.$eq$(other.style, this.style));
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("style", this.style, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.MenuStyle));
    },
    $isDiagnosticable: 1
  };
  A._MenuThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.NavigationBarThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.height, _this.backgroundColor, _this.elevation, _this.shadowColor, _this.surfaceTintColor, _this.indicatorColor, _this.indicatorShape, _this.labelTextStyle, _this.iconTheme, _this.labelBehavior, _this.overlayColor, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.NavigationBarThemeData && B.boolConversionCheck(J.$eq$(other.height, _this.height)) && B.boolConversionCheck(J.$eq$(other.backgroundColor, _this.backgroundColor)) && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.shadowColor, _this.shadowColor)) && B.boolConversionCheck(J.$eq$(other.surfaceTintColor, _this.surfaceTintColor)) && B.boolConversionCheck(J.$eq$(other.indicatorColor, _this.indicatorColor)) && B.boolConversionCheck(J.$eq$(other.indicatorShape, _this.indicatorShape)) && B.boolConversionCheck(J.$eq$(other.labelTextStyle, _this.labelTextStyle)) && B.boolConversionCheck(J.$eq$(other.iconTheme, _this.iconTheme)) && B.boolConversionCheck(J.$eq$(other.labelBehavior, _this.labelBehavior)) && B.boolConversionCheck(J.$eq$(other.overlayColor, _this.overlayColor));
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DoubleProperty$("height", _this.height, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.ColorProperty$("backgroundColor", _this.backgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DoubleProperty$("elevation", _this.elevation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.ColorProperty$("shadowColor", _this.shadowColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceTintColor", _this.surfaceTintColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("indicatorColor", _this.indicatorColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("indicatorShape", _this.indicatorShape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ShapeBorder));
      properties.add$1(0, E.DiagnosticsProperty$("labelTextStyle", _this.labelTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_TextStyle));
      properties.add$1(0, E.DiagnosticsProperty$("iconTheme", _this.iconTheme, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_IconThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("labelBehavior", _this.labelBehavior, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.NavigationDestinationLabelBehavior));
      properties.add$1(0, E.DiagnosticsProperty$("overlayColor", _this.overlayColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_Color));
    },
    $isDiagnosticable: 1
  };
  A._NavigationBarThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.NavigationDrawerThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.tileHeight, _this.backgroundColor, _this.elevation, _this.shadowColor, _this.surfaceTintColor, _this.indicatorColor, _this.indicatorShape, _this.indicatorSize, _this.labelTextStyle, _this.iconTheme, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.NavigationDrawerThemeData && B.boolConversionCheck(J.$eq$(other.tileHeight, _this.tileHeight)) && B.boolConversionCheck(J.$eq$(other.backgroundColor, _this.backgroundColor)) && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.shadowColor, _this.shadowColor)) && B.boolConversionCheck(J.$eq$(other.surfaceTintColor, _this.surfaceTintColor)) && B.boolConversionCheck(J.$eq$(other.indicatorColor, _this.indicatorColor)) && B.boolConversionCheck(J.$eq$(other.indicatorShape, _this.indicatorShape)) && B.boolConversionCheck(J.$eq$(other.indicatorSize, _this.indicatorSize)) && B.boolConversionCheck(J.$eq$(other.labelTextStyle, _this.labelTextStyle)) && B.boolConversionCheck(J.$eq$(other.iconTheme, _this.iconTheme));
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DoubleProperty$("tileHeight", _this.tileHeight, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.ColorProperty$("backgroundColor", _this.backgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DoubleProperty$("elevation", _this.elevation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.ColorProperty$("shadowColor", _this.shadowColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceTintColor", _this.surfaceTintColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("indicatorColor", _this.indicatorColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("indicatorShape", _this.indicatorShape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ShapeBorder));
      properties.add$1(0, E.DiagnosticsProperty$("indicatorSize", _this.indicatorSize, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Size));
      properties.add$1(0, E.DiagnosticsProperty$("labelTextStyle", _this.labelTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_TextStyle));
      properties.add$1(0, E.DiagnosticsProperty$("iconTheme", _this.iconTheme, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_IconThemeData));
    },
    $isDiagnosticable: 1
  };
  A._NavigationDrawerThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.NavigationRailThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.backgroundColor, _this.elevation, _this.unselectedLabelTextStyle, _this.selectedLabelTextStyle, _this.unselectedIconTheme, _this.selectedIconTheme, _this.groupAlignment, _this.labelType, _this.useIndicator, _this.indicatorColor, _this.indicatorShape, _this.minWidth, _this.minExtendedWidth, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.NavigationRailThemeData && B.boolConversionCheck(J.$eq$(other.backgroundColor, _this.backgroundColor)) && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.unselectedLabelTextStyle, _this.unselectedLabelTextStyle)) && B.boolConversionCheck(J.$eq$(other.selectedLabelTextStyle, _this.selectedLabelTextStyle)) && B.boolConversionCheck(J.$eq$(other.unselectedIconTheme, _this.unselectedIconTheme)) && B.boolConversionCheck(J.$eq$(other.selectedIconTheme, _this.selectedIconTheme)) && B.boolConversionCheck(J.$eq$(other.groupAlignment, _this.groupAlignment)) && B.boolConversionCheck(J.$eq$(other.labelType, _this.labelType)) && B.boolConversionCheck(J.$eq$(other.useIndicator, _this.useIndicator)) && B.boolConversionCheck(J.$eq$(other.indicatorColor, _this.indicatorColor)) && B.boolConversionCheck(J.$eq$(other.indicatorShape, _this.indicatorShape)) && B.boolConversionCheck(J.$eq$(other.minWidth, _this.minWidth)) && B.boolConversionCheck(J.$eq$(other.minExtendedWidth, _this.minExtendedWidth));
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.ColorProperty$("backgroundColor", _this.backgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DoubleProperty$("elevation", _this.elevation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      t1 = type$.TextStyle;
      properties.add$1(0, E.DiagnosticsProperty$("unselectedLabelTextStyle", _this.unselectedLabelTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("selectedLabelTextStyle", _this.selectedLabelTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      t1 = type$.IconThemeData;
      properties.add$1(0, E.DiagnosticsProperty$("unselectedIconTheme", _this.unselectedIconTheme, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("selectedIconTheme", _this.selectedIconTheme, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DoubleProperty$("groupAlignment", _this.groupAlignment, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DiagnosticsProperty$("labelType", _this.labelType, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.NavigationRailLabelType));
      properties.add$1(0, E.DiagnosticsProperty$("useIndicator", _this.useIndicator, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
      properties.add$1(0, A.ColorProperty$("indicatorColor", _this.indicatorColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("indicatorShape", _this.indicatorShape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ShapeBorder));
      properties.add$1(0, E.DoubleProperty$("minWidth", _this.minWidth, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("minExtendedWidth", _this.minExtendedWidth, _null, _null, D.DiagnosticLevel_3, _null, _null));
    },
    $isDiagnosticable: 1
  };
  A._NavigationRailThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.OutlinedButtonThemeData.prototype = {
    get$hashCode(_) {
      return J.get$hashCode$(this.style);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.OutlinedButtonThemeData && B.boolConversionCheck(J.$eq$(other.style, this.style));
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("style", this.style, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ButtonStyle));
    },
    $isDiagnosticable: 1
  };
  A._OutlinedButtonThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.MaterialPageRoute.prototype = {
    buildContent$1(context) {
      return this.builder.call$1(type$.BuildContext._as(context));
    },
    get$debugLabel() {
      return B.S(A.TransitionRoute.prototype.get$debugLabel.call(this)) + "(" + B.S(this.get$settings().name) + ")";
    },
    $isMaterialRouteTransitionMixin: 1
  };
  A.MaterialRouteTransitionMixin.prototype = {
    get$transitionDuration() {
      return D.Duration_300000;
    },
    get$barrierColor() {
      return null;
    },
    get$barrierLabel() {
      return null;
    },
    canTransitionTo$1(nextRoute) {
      var t1 = B.boolConversionCheck(type$.TransitionRoute_dynamic._as(nextRoute).fullscreenDialog);
      return !t1;
    },
    buildPage$3(context, animation, secondaryAnimation) {
      var t1, _null = null;
      type$.BuildContext._as(context);
      t1 = type$.Animation_double;
      t1._as(animation);
      t1._as(secondaryAnimation);
      return E.Semantics$(_null, this.buildContent$1(context), false, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null);
    },
    buildTransitions$4(context, animation, secondaryAnimation, child) {
      var t1;
      type$.BuildContext._as(context);
      t1 = type$.Animation_double;
      t1._as(animation);
      t1._as(secondaryAnimation);
      type$.Widget._as(child);
      return A.Theme_of(context).pageTransitionsTheme.buildTransitions$1$5(this, context, animation, secondaryAnimation, child, this.$ti._precomputed1);
    },
    $isRoute: 1,
    $is_RoutePlaceholder: 1,
    $isPageRoute: 1,
    $isOverlayRoute: 1,
    $isTransitionRoute: 1,
    $isPredictiveBackRoute: 1,
    $isLocalHistoryRoute: 1,
    $isModalRoute: 1,
    $is_ModalRoute_TransitionRoute_LocalHistoryRoute: 1
  };
  A._MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin.prototype = {$isMaterialRouteTransitionMixin: 1};
  A._ZoomPageTransition.prototype = {
    build$1(context) {
      var _this = this;
      type$.BuildContext._as(context);
      return A.DualTransitionBuilder$(_this.animation, A.DualTransitionBuilder$(A.ReverseAnimation$(_this.secondaryAnimation), _this.child, new A._ZoomPageTransition_build_closure(_this), new A._ZoomPageTransition_build_closure0(_this)), new A._ZoomPageTransition_build_closure1(_this), new A._ZoomPageTransition_build_closure2(_this));
    }
  };
  A._ZoomEnterTransition.prototype = {
    createState$0() {
      return A._ZoomEnterTransitionState$();
    }
  };
  A._ZoomEnterTransitionState.prototype = {
    get$useSnapshot() {
      return false;
    },
    get$delegate() {
      return this.___ZoomEnterTransitionState_delegate_A;
    },
    set$delegate(value) {
      this.___ZoomEnterTransitionState_delegate_A = type$._ZoomEnterTransitionPainter._as(value);
    },
    _page_transitions_theme$_updateAnimations$0() {
      var t1, _this = this;
      _this.set$fadeTransition(B.boolConversionCheck(_this.get$widget().reverse) ? C.C__AlwaysCompleteAnimation : $.$get$_ZoomEnterTransitionState__fadeInTransition().animate$1(_this.get$widget().animation));
      t1 = B.boolConversionCheck(_this.get$widget().reverse) ? $.$get$_ZoomEnterTransitionState__scaleDownTransition() : $.$get$_ZoomEnterTransitionState__scaleUpTransition();
      _this.set$scaleTransition(t1.animate$1(_this.get$widget().animation));
      _this.get$widget().animation.addListener$1(_this.get$onAnimationValueChange());
      _this.get$widget().animation.addStatusListener$1(_this.get$onAnimationStatusChange());
    },
    initState$0() {
      var t1, t2, t3, _this = this;
      _this._page_transitions_theme$_updateAnimations$0();
      t1 = _this.get$widget().reverse;
      t2 = _this.get$fadeTransition();
      t3 = _this.get$scaleTransition();
      _this.set$delegate(A._ZoomEnterTransitionPainter$(_this.get$widget().animation, t2, t1, t3));
      _this.super$State$initState0();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, t3, _this = this;
      type$._ZoomEnterTransition._as(oldWidget);
      if (!B.boolConversionCheck(J.$eq$(oldWidget.reverse, _this.get$widget().reverse)) || !B.boolConversionCheck(J.$eq$(oldWidget.animation, _this.get$widget().animation))) {
        t1 = oldWidget.animation;
        t1.removeListener$1(_this.get$onAnimationValueChange());
        t1.removeStatusListener$1(_this.get$onAnimationStatusChange());
        _this._page_transitions_theme$_updateAnimations$0();
        _this.get$delegate().dispose$0();
        t1 = _this.get$widget().reverse;
        t2 = _this.get$fadeTransition();
        t3 = _this.get$scaleTransition();
        _this.set$delegate(A._ZoomEnterTransitionPainter$(_this.get$widget().animation, t2, t1, t3));
      }
      _this.super$State$didUpdateWidget(oldWidget);
    },
    dispose$0() {
      var _this = this;
      _this.get$widget().animation.removeListener$1(_this.get$onAnimationValueChange());
      _this.get$widget().animation.removeStatusListener$1(_this.get$onAnimationStatusChange());
      _this.get$delegate().dispose$0();
      _this.super$__ZoomEnterTransitionState_State__ZoomTransitionBase$dispose();
    },
    build$1(context) {
      var t1;
      type$.BuildContext._as(context);
      t1 = this.get$delegate();
      return A.SnapshotWidget$(true, this.get$widget().child, this._ZoomTransitionBase_controller, C.SnapshotMode_0, t1);
    },
    $is_ZoomTransitionBase: 1
  };
  A._ZoomExitTransition.prototype = {
    createState$0() {
      return A._ZoomExitTransitionState$();
    }
  };
  A._ZoomExitTransitionState.prototype = {
    get$delegate() {
      return this.___ZoomExitTransitionState_delegate_A;
    },
    set$delegate(value) {
      this.___ZoomExitTransitionState_delegate_A = type$._ZoomExitTransitionPainter._as(value);
    },
    get$useSnapshot() {
      return false;
    },
    _page_transitions_theme$_updateAnimations$0() {
      var t1, _this = this;
      _this.set$fadeTransition(B.boolConversionCheck(_this.get$widget().reverse) ? $.$get$_ZoomExitTransitionState__fadeOutTransition().animate$1(_this.get$widget().animation) : C.C__AlwaysCompleteAnimation);
      t1 = B.boolConversionCheck(_this.get$widget().reverse) ? $.$get$_ZoomExitTransitionState__scaleDownTransition() : $.$get$_ZoomExitTransitionState__scaleUpTransition();
      _this.set$scaleTransition(t1.animate$1(_this.get$widget().animation));
      _this.get$widget().animation.addListener$1(_this.get$onAnimationValueChange());
      _this.get$widget().animation.addStatusListener$1(_this.get$onAnimationStatusChange());
    },
    initState$0() {
      var t1, t2, t3, _this = this;
      _this._page_transitions_theme$_updateAnimations$0();
      t1 = _this.get$widget().reverse;
      t2 = _this.get$fadeTransition();
      t3 = _this.get$scaleTransition();
      _this.set$delegate(A._ZoomExitTransitionPainter$(_this.get$widget().animation, t2, t1, t3));
      _this.super$State$initState0();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, t3, _this = this;
      type$._ZoomExitTransition._as(oldWidget);
      if (!B.boolConversionCheck(J.$eq$(oldWidget.reverse, _this.get$widget().reverse)) || !B.boolConversionCheck(J.$eq$(oldWidget.animation, _this.get$widget().animation))) {
        t1 = oldWidget.animation;
        t1.removeListener$1(_this.get$onAnimationValueChange());
        t1.removeStatusListener$1(_this.get$onAnimationStatusChange());
        _this._page_transitions_theme$_updateAnimations$0();
        _this.get$delegate().dispose$0();
        t1 = _this.get$widget().reverse;
        t2 = _this.get$fadeTransition();
        t3 = _this.get$scaleTransition();
        _this.set$delegate(A._ZoomExitTransitionPainter$(_this.get$widget().animation, t2, t1, t3));
      }
      _this.super$State$didUpdateWidget(oldWidget);
    },
    dispose$0() {
      var _this = this;
      _this.get$widget().animation.removeListener$1(_this.get$onAnimationValueChange());
      _this.get$widget().animation.removeStatusListener$1(_this.get$onAnimationStatusChange());
      _this.get$delegate().dispose$0();
      _this.super$__ZoomExitTransitionState_State__ZoomTransitionBase$dispose();
    },
    build$1(context) {
      var t1;
      type$.BuildContext._as(context);
      t1 = this.get$delegate();
      return A.SnapshotWidget$(true, this.get$widget().child, this._ZoomTransitionBase_controller, C.SnapshotMode_0, t1);
    },
    $is_ZoomTransitionBase: 1
  };
  A.PageTransitionsBuilder.prototype = {};
  A.ZoomPageTransitionsBuilder.prototype = {
    buildTransitions$1$5(route, context, animation, secondaryAnimation, child, $T) {
      var t1;
      $T._eval$1("PageRoute<0>")._as(route);
      type$.BuildContext._as(context);
      t1 = type$.Animation_double;
      t1._as(animation);
      t1._as(secondaryAnimation);
      type$.Widget._as(child);
      t1 = B.boolConversionCheck(route.allowSnapshotting);
      return A._ZoomPageTransition$(true, t1, animation, child, secondaryAnimation);
    }
  };
  A.CupertinoPageTransitionsBuilder.prototype = {
    buildTransitions$1$5(route, context, animation, secondaryAnimation, child, $T) {
      var t1 = type$.Animation_double;
      return A.CupertinoRouteTransitionMixin_buildPageTransitions($T._eval$1("PageRoute<0>")._as(route), type$.BuildContext._as(context), t1._as(animation), t1._as(secondaryAnimation), type$.Widget._as(child), $T);
    }
  };
  A.PageTransitionsTheme.prototype = {
    get$builders() {
      return C.Map_wOOAM;
    },
    buildTransitions$1$5(route, context, animation, secondaryAnimation, child, $T) {
      var t1;
      $T._eval$1("PageRoute<0>")._as(route);
      type$.BuildContext._as(context);
      t1 = type$.Animation_double;
      t1._as(animation);
      t1._as(secondaryAnimation);
      type$.Widget._as(child);
      return A._PageTransitionsThemeTransitions$(animation, this.get$builders(), child, route, secondaryAnimation, $T);
    },
    _all$1(builders) {
      return J.toList$0$ax(F.JSArray_methods.map$1$1(C.List_skt, new A.PageTransitionsTheme__all_closure(type$.Map_TargetPlatform_PageTransitionsBuilder._as(builders)), type$.nullable_PageTransitionsBuilder));
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      t1 = other instanceof A.PageTransitionsTheme;
      if (t1) {
        t2 = _this.get$builders();
        t3 = other.get$builders();
        t3 = t2 == null ? t3 == null : t2 === t3;
        t2 = t3;
      } else
        t2 = false;
      if (t2)
        return true;
      return t1 && B.boolConversionCheck(E.listEquals(_this._all$1(other.get$builders()), _this._all$1(_this.get$builders()), type$.nullable_PageTransitionsBuilder));
    },
    get$hashCode(_) {
      return B.Object_hashAll(this._all$1(this.get$builders()));
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("builders", this.get$builders(), true, C.Map_wOOAM, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Map_TargetPlatform_PageTransitionsBuilder));
    },
    $isDiagnosticable: 1
  };
  A._PageTransitionsThemeTransitions.prototype = {
    createState$0() {
      return A._PageTransitionsThemeTransitionsState$(this.$ti._precomputed1);
    }
  };
  A._PageTransitionsThemeTransitionsState.prototype = {
    build$1(context) {
      var platform, platform0, matchingBuilder, t1, _this = this;
      type$.BuildContext._as(context);
      platform = A.Theme_of(context).platform;
      if (B.boolConversionCheck(_this.get$widget().route.get$popGestureInProgress())) {
        platform0 = _this._transitionPlatform;
        if (platform0 == null)
          _this._transitionPlatform = platform;
        else
          platform = platform0;
      } else
        _this._transitionPlatform = null;
      matchingBuilder = J.$index$asx(_this.get$widget().builders, platform);
      if (matchingBuilder == null) {
        $label0$0: {
          if (D.TargetPlatform_2 === platform) {
            t1 = C.C_CupertinoPageTransitionsBuilder;
            break $label0$0;
          }
          if (D.TargetPlatform_0 === platform || D.TargetPlatform_1 === platform || D.TargetPlatform_5 === platform || D.TargetPlatform_4 === platform || D.TargetPlatform_3 === platform) {
            t1 = C.C_ZoomPageTransitionsBuilder;
            break $label0$0;
          }
          t1 = null;
        }
        matchingBuilder = t1;
      }
      return matchingBuilder.buildTransitions$1$5(_this.get$widget().route, context, _this.get$widget().animation, _this.get$widget().secondaryAnimation, _this.get$widget().child, _this.$ti._precomputed1);
    }
  };
  A._ZoomTransitionBase.prototype = {
    get$fadeTransition() {
      return this._ZoomTransitionBase____ZoomTransitionBase_fadeTransition_A;
    },
    set$fadeTransition(value) {
      this.set$___ZoomTransitionBase_fadeTransition_A(type$.Animation_double._as(value));
    },
    get$scaleTransition() {
      return this._ZoomTransitionBase____ZoomTransitionBase_scaleTransition_A;
    },
    set$scaleTransition(value) {
      this.set$___ZoomTransitionBase_scaleTransition_A(type$.Animation_double._as(value));
    },
    onAnimationValueChange$0() {
      var t1, t2, _this = this;
      if (B.boolConversionCheck(J.$eq$(_this.get$scaleTransition().get$value(), 1)))
        t1 = B.boolConversionCheck(J.$eq$(_this.get$fadeTransition().get$value(), 0)) || B.boolConversionCheck(J.$eq$(_this.get$fadeTransition().get$value(), 1));
      else
        t1 = false;
      t2 = _this._ZoomTransitionBase_controller;
      if (t1)
        t2.set$allowSnapshotting(false);
      else
        t2.set$allowSnapshotting(_this.get$useSnapshot());
    },
    onAnimationStatusChange$1($status) {
      var t1 = B.boolConversionCheck(type$.AnimationStatus._as($status).get$isAnimating()) && B.boolConversionCheck(this.get$useSnapshot());
      this._ZoomTransitionBase_controller.set$allowSnapshotting(t1);
    },
    set$___ZoomTransitionBase_fadeTransition_A(___ZoomTransitionBase_fadeTransition_A) {
      this._ZoomTransitionBase____ZoomTransitionBase_fadeTransition_A = type$.Animation_double._as(___ZoomTransitionBase_fadeTransition_A);
    },
    set$___ZoomTransitionBase_scaleTransition_A(___ZoomTransitionBase_scaleTransition_A) {
      this._ZoomTransitionBase____ZoomTransitionBase_scaleTransition_A = type$.Animation_double._as(___ZoomTransitionBase_scaleTransition_A);
    },
    $isDiagnosticable: 1,
    $isState0: 1,
    $is_State_Object_Diagnosticable: 1
  };
  A._ZoomEnterTransitionPainter.prototype = {
    _ZoomEnterTransitionPainter$4$animation$fade$reverse$scale(animation, fade, reverse, scale) {
      var _this = this,
        t1 = _this.animation,
        t2 = _this.get$notifyListeners();
      t1.addListener$1(t2);
      t1.addStatusListener$1(_this.get$_onStatusChange());
      _this.scale.addListener$1(t2);
      _this.fade.addListener$1(t2);
    },
    _onStatusChange$1(_) {
      this.notifyListeners$0();
    },
    _drawScrim$3(context, offset, size) {
      var t1, scrimOpacity, t2, t3;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      type$.Size._as(size);
      if (!B.boolConversionCheck(this.reverse) && !B.boolConversionCheck(this.animation.get$isCompleted())) {
        t1 = $.$get$_ZoomEnterTransitionState__scrimOpacityTween().evaluate$1(this.animation);
        t1.toString;
        scrimOpacity = t1;
      } else
        scrimOpacity = 0;
      if (scrimOpacity > 0) {
        t1 = context.get$canvas();
        t2 = offset.$and(0, size);
        t3 = E.Paint_Paint();
        t3.set$color(C.Color_4278190080.withOpacity$1(scrimOpacity));
        t1.drawRect$2(t2, t3);
      }
    },
    paint$4(context, offset, size, painter) {
      var t1, t2, _this = this;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      type$.Size._as(size);
      type$.void_Function_PaintingContext_Offset._as(painter);
      if (!B.boolConversionCheck(_this.animation.get$isAnimating()))
        return painter.call$2(context, offset);
      _this._drawScrim$3(context, offset, size);
      t1 = _this._page_transitions_theme$_transform;
      A._updateScaledTransform(t1, _this.scale.get$value(), size);
      t2 = _this._transformHandler;
      t2.set$layer(context.pushTransform$5$oldLayer(true, offset, t1, new A._ZoomEnterTransitionPainter_paint_closure(_this, painter), t2.get$layer()));
    },
    paintSnapshot$6(context, offset, size, image, sourceSize, pixelRatio) {
      var t1;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      t1 = type$.Size;
      t1._as(size);
      type$.Image._as(image);
      t1._as(sourceSize);
      B._asDouble(pixelRatio);
      this._drawScrim$3(context, offset, size);
      A._drawImageScaledAndCentered(context, image, this.scale.get$value(), this.fade.get$value(), pixelRatio);
    },
    dispose$0() {
      var _this = this,
        t1 = _this.animation,
        t2 = _this.get$notifyListeners();
      t1.removeListener$1(t2);
      t1.removeStatusListener$1(_this.get$_onStatusChange());
      _this.scale.removeListener$1(t2);
      _this.fade.removeListener$1(t2);
      _this._opacityHandle.set$layer(null);
      _this._transformHandler.set$layer(null);
      _this.super$ChangeNotifier$dispose();
    },
    shouldRepaint$1(oldDelegate) {
      var _this = this;
      type$._ZoomEnterTransitionPainter._as(oldDelegate);
      return !B.boolConversionCheck(J.$eq$(oldDelegate.reverse, _this.reverse)) || !B.boolConversionCheck(J.$eq$(oldDelegate.animation.get$value(), _this.animation.get$value())) || !B.boolConversionCheck(J.$eq$(oldDelegate.scale.get$value(), _this.scale.get$value())) || !B.boolConversionCheck(J.$eq$(oldDelegate.fade.get$value(), _this.fade.get$value()));
    }
  };
  A._ZoomExitTransitionPainter.prototype = {
    _ZoomExitTransitionPainter$4$animation$fade$reverse$scale(animation, fade, reverse, scale) {
      var _this = this,
        t1 = _this.get$notifyListeners();
      _this.scale.addListener$1(t1);
      _this.fade.addListener$1(t1);
      _this.animation.addStatusListener$1(_this.get$_onStatusChange());
    },
    _onStatusChange$1(_) {
      this.notifyListeners$0();
    },
    paintSnapshot$6(context, offset, size, image, sourceSize, pixelRatio) {
      var t1;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      t1 = type$.Size;
      t1._as(size);
      type$.Image._as(image);
      t1._as(sourceSize);
      B._asDouble(pixelRatio);
      A._drawImageScaledAndCentered(context, image, this.scale.get$value(), this.fade.get$value(), pixelRatio);
    },
    paint$4(context, offset, size, painter) {
      var t1, t2, _this = this;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      type$.Size._as(size);
      type$.void_Function_PaintingContext_Offset._as(painter);
      if (!B.boolConversionCheck(_this.animation.get$isAnimating()))
        return painter.call$2(context, offset);
      t1 = _this._page_transitions_theme$_transform;
      A._updateScaledTransform(t1, _this.scale.get$value(), size);
      t2 = _this._transformHandler;
      t2.set$layer(context.pushTransform$5$oldLayer(true, offset, t1, new A._ZoomExitTransitionPainter_paint_closure(_this, painter), t2.get$layer()));
    },
    shouldRepaint$1(oldDelegate) {
      type$._ZoomExitTransitionPainter._as(oldDelegate);
      return !B.boolConversionCheck(J.$eq$(oldDelegate.reverse, this.reverse)) || !B.boolConversionCheck(J.$eq$(oldDelegate.fade.get$value(), this.fade.get$value())) || !B.boolConversionCheck(J.$eq$(oldDelegate.scale.get$value(), this.scale.get$value()));
    },
    dispose$0() {
      var t1, _this = this;
      _this._opacityHandle.set$layer(null);
      _this._transformHandler.set$layer(null);
      t1 = _this.get$notifyListeners();
      _this.scale.removeListener$1(t1);
      _this.fade.removeListener$1(t1);
      _this.animation.removeStatusListener$1(_this.get$_onStatusChange());
      _this.super$ChangeNotifier$dispose();
    }
  };
  A._PageTransitionsTheme_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.__ZoomEnterTransitionState_State__ZoomTransitionBase.prototype = {
    dispose$0() {
      this._ZoomTransitionBase_controller.dispose$0();
      this.super$State$dispose();
    },
    $is_ZoomTransitionBase: 1
  };
  A.__ZoomExitTransitionState_State__ZoomTransitionBase.prototype = {
    dispose$0() {
      this._ZoomTransitionBase_controller.dispose$0();
      this.super$State$dispose();
    },
    $is_ZoomTransitionBase: 1
  };
  A.PopupMenuThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.color, _this.shape, _this.menuPadding, _this.elevation, _this.shadowColor, _this.surfaceTintColor, _this.textStyle, _this.labelTextStyle, _this.enableFeedback, _this.mouseCursor, _this.position, _this.iconColor, _this.iconSize, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.PopupMenuThemeData && B.boolConversionCheck(J.$eq$(other.color, _this.color)) && B.boolConversionCheck(J.$eq$(other.shape, _this.shape)) && B.boolConversionCheck(J.$eq$(other.menuPadding, _this.menuPadding)) && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.shadowColor, _this.shadowColor)) && B.boolConversionCheck(J.$eq$(other.surfaceTintColor, _this.surfaceTintColor)) && B.boolConversionCheck(J.$eq$(other.textStyle, _this.textStyle)) && B.boolConversionCheck(J.$eq$(other.labelTextStyle, _this.labelTextStyle)) && B.boolConversionCheck(J.$eq$(other.enableFeedback, _this.enableFeedback)) && B.boolConversionCheck(J.$eq$(other.mouseCursor, _this.mouseCursor)) && B.boolConversionCheck(J.$eq$(other.position, _this.position)) && B.boolConversionCheck(J.$eq$(other.iconColor, _this.iconColor)) && B.boolConversionCheck(J.$eq$(other.iconSize, _this.iconSize));
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.ColorProperty$("color", _this.color, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.shape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ShapeBorder));
      properties.add$1(0, E.DiagnosticsProperty$("menuPadding", _this.menuPadding, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.EdgeInsetsGeometry));
      properties.add$1(0, E.DoubleProperty$("elevation", _this.elevation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.ColorProperty$("shadowColor", _this.shadowColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("surfaceTintColor", _this.surfaceTintColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("text style", _this.textStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextStyle));
      properties.add$1(0, E.DiagnosticsProperty$("labelTextStyle", _this.labelTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_TextStyle));
      properties.add$1(0, E.DiagnosticsProperty$("enableFeedback", _this.enableFeedback, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
      properties.add$1(0, E.DiagnosticsProperty$("mouseCursor", _this.mouseCursor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_MouseCursor));
      properties.add$1(0, E.EnumProperty$("position", _this.position, _null, D.DiagnosticLevel_3, type$.nullable_PopupMenuPosition));
      properties.add$1(0, A.ColorProperty$("iconColor", _this.iconColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DoubleProperty$("iconSize", _this.iconSize, _null, _null, D.DiagnosticLevel_3, _null, _null));
    },
    $isDiagnosticable: 1
  };
  A._PopupMenuThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.ProgressIndicatorThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.color, _this.linearTrackColor, _this.linearMinHeight, _this.circularTrackColor, _this.refreshBackgroundColor, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.ProgressIndicatorThemeData && B.boolConversionCheck(J.$eq$(other.color, _this.color)) && B.boolConversionCheck(J.$eq$(other.linearTrackColor, _this.linearTrackColor)) && B.boolConversionCheck(J.$eq$(other.linearMinHeight, _this.linearMinHeight)) && B.boolConversionCheck(J.$eq$(other.circularTrackColor, _this.circularTrackColor)) && B.boolConversionCheck(J.$eq$(other.refreshBackgroundColor, _this.refreshBackgroundColor));
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.ColorProperty$("color", _this.color, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("linearTrackColor", _this.linearTrackColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DoubleProperty$("linearMinHeight", _this.linearMinHeight, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.ColorProperty$("circularTrackColor", _this.circularTrackColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("refreshBackgroundColor", _this.refreshBackgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
    },
    $isDiagnosticable: 1
  };
  A._ProgressIndicatorThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.RadioThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.mouseCursor, _this.fillColor, _this.overlayColor, _this.splashRadius, _this.materialTapTargetSize, _this.visualDensity, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.RadioThemeData && B.boolConversionCheck(J.$eq$(other.mouseCursor, _this.mouseCursor)) && B.boolConversionCheck(J.$eq$(other.fillColor, _this.fillColor)) && B.boolConversionCheck(J.$eq$(other.overlayColor, _this.overlayColor)) && B.boolConversionCheck(J.$eq$(other.splashRadius, _this.splashRadius)) && B.boolConversionCheck(J.$eq$(other.materialTapTargetSize, _this.materialTapTargetSize)) && B.boolConversionCheck(J.$eq$(other.visualDensity, _this.visualDensity));
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("mouseCursor", _this.mouseCursor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_MouseCursor));
      t1 = type$.WidgetStateProperty_nullable_Color;
      properties.add$1(0, E.DiagnosticsProperty$("fillColor", _this.fillColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("overlayColor", _this.overlayColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DoubleProperty$("splashRadius", _this.splashRadius, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DiagnosticsProperty$("materialTapTargetSize", _this.materialTapTargetSize, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.MaterialTapTargetSize));
      properties.add$1(0, E.DiagnosticsProperty$("visualDensity", _this.visualDensity, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.VisualDensity));
    },
    $isDiagnosticable: 1
  };
  A._RadioThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.ScaffoldMessenger.prototype = {
    createState$0() {
      return A.ScaffoldMessengerState$();
    }
  };
  A.ScaffoldMessengerState.prototype = {
    didChangeDependencies$0() {
      var _this = this,
        accessibleNavigation = A.MediaQuery_accessibleNavigationOf(_this.get$context()),
        t1 = _this._accessibleNavigation,
        t2 = false;
      if (B.boolConversionCheck(t1 == null ? false : t1))
        if (!accessibleNavigation) {
          t1 = _this._snackBarTimer;
          t1 = t1 != null && !B.boolConversionCheck(t1.get$isActive());
        } else
          t1 = t2;
      else
        t1 = t2;
      if (t1)
        _this.hideCurrentSnackBar$1$reason(C.SnackBarClosedReason_5);
      _this._accessibleNavigation = accessibleNavigation;
      _this.super$State$didChangeDependencies();
    },
    hideCurrentSnackBar$1$reason(reason) {
      var t1, t2, completer, _this = this;
      type$.SnackBarClosedReason._as(reason);
      t1 = _this._snackBars;
      t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t2.get$isEmpty(t1)) || B.boolConversionCheck(null.get$isDismissed()))
        return;
      completer = t2.get$first(t1).get$_completer();
      t1 = _this._accessibleNavigation;
      t1.toString;
      if (B.boolConversionCheck(t1)) {
        null.set$value(0);
        completer.complete$1(reason);
      } else
        null.reverse$0().then$1$1(new A.ScaffoldMessengerState_hideCurrentSnackBar_closure(completer, reason), type$.void);
      t1 = _this._snackBarTimer;
      if (t1 != null)
        t1.cancel$0();
      _this._snackBarTimer = null;
    },
    build$1(context) {
      var route, _this = this;
      type$.BuildContext._as(context);
      _this.set$_accessibleNavigation(A.MediaQuery_accessibleNavigationOf(context));
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(_this._snackBars))) {
        route = A.ModalRoute_of(context, type$.nullable_Object);
        if (route == null || B.boolConversionCheck(route.get$isCurrent()))
          B.boolConversionCheck(null.get$isCompleted());
      }
      return A._ScaffoldMessengerScope$(_this.get$widget().child, _this);
    },
    dispose$0() {
      var t1 = this._snackBarTimer;
      if (t1 != null)
        t1.cancel$0();
      this._snackBarTimer = null;
      this.super$_ScaffoldMessengerState_State_TickerProviderStateMixin$dispose();
    },
    set$_accessibleNavigation(_accessibleNavigation) {
      this._accessibleNavigation = B._asBoolQ(_accessibleNavigation);
    },
    $isTickerProvider: 1,
    $isTickerProviderStateMixin: 1
  };
  A._ScaffoldMessengerScope.prototype = {
    updateShouldNotify$1(old) {
      return !B.boolConversionCheck(J.$eq$(this._scaffoldMessengerState, type$._ScaffoldMessengerScope._as(old)._scaffoldMessengerState));
    }
  };
  A._ScaffoldMessengerState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$State$debugFillProperties(properties);
      t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null) {
        t2 = B.S(J.get$length$asx(t1));
        t3 = this.TickerProviderStateMixin__tickers;
        t3.toString;
        t3 = B.boolConversionCheck(J.$eq$(J.get$length$asx(t3), 1)) ? "" : "s";
        t3 = "tracking " + t2 + " ticker" + t3;
        t2 = t3;
      } else
        t2 = _null;
      properties.add$1(0, E.DiagnosticsProperty$("tickers", t1, true, _null, t2, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Set_Ticker));
    },
    $isTickerProvider: 1,
    $isTickerProviderStateMixin: 1
  };
  A.ScrollbarThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.thumbVisibility, _this.thickness, _this.trackVisibility, _this.interactive, _this.radius, _this.thumbColor, _this.trackColor, _this.trackBorderColor, _this.crossAxisMargin, _this.mainAxisMargin, _this.minThumbLength, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.ScrollbarThemeData && B.boolConversionCheck(J.$eq$(other.thumbVisibility, _this.thumbVisibility)) && B.boolConversionCheck(J.$eq$(other.thickness, _this.thickness)) && B.boolConversionCheck(J.$eq$(other.trackVisibility, _this.trackVisibility)) && B.boolConversionCheck(J.$eq$(other.interactive, _this.interactive)) && B.boolConversionCheck(J.$eq$(other.radius, _this.radius)) && B.boolConversionCheck(J.$eq$(other.thumbColor, _this.thumbColor)) && B.boolConversionCheck(J.$eq$(other.trackColor, _this.trackColor)) && B.boolConversionCheck(J.$eq$(other.trackBorderColor, _this.trackBorderColor)) && B.boolConversionCheck(J.$eq$(other.crossAxisMargin, _this.crossAxisMargin)) && B.boolConversionCheck(J.$eq$(other.mainAxisMargin, _this.mainAxisMargin)) && B.boolConversionCheck(J.$eq$(other.minThumbLength, _this.minThumbLength));
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      t1 = type$.WidgetStateProperty_nullable_bool;
      properties.add$1(0, E.DiagnosticsProperty$("thumbVisibility", _this.thumbVisibility, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("thickness", _this.thickness, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_double));
      properties.add$1(0, E.DiagnosticsProperty$("trackVisibility", _this.trackVisibility, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("interactive", _this.interactive, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
      properties.add$1(0, E.DiagnosticsProperty$("radius", _this.radius, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Radius));
      t1 = type$.WidgetStateProperty_nullable_Color;
      properties.add$1(0, E.DiagnosticsProperty$("thumbColor", _this.thumbColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("trackColor", _this.trackColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("trackBorderColor", _this.trackBorderColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      t1 = type$.double;
      properties.add$1(0, E.DiagnosticsProperty$("crossAxisMargin", _this.crossAxisMargin, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("mainAxisMargin", _this.mainAxisMargin, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("minThumbLength", _this.minThumbLength, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
    },
    $isDiagnosticable: 1
  };
  A._ScrollbarThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.SearchBarThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.elevation, _this.backgroundColor, _this.shadowColor, _this.surfaceTintColor, _this.overlayColor, _this.side, _this.shape, _this.padding, _this.textStyle, _this.hintStyle, _this.constraints, _this.textCapitalization, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.SearchBarThemeData && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.backgroundColor, _this.backgroundColor)) && B.boolConversionCheck(J.$eq$(other.shadowColor, _this.shadowColor)) && B.boolConversionCheck(J.$eq$(other.surfaceTintColor, _this.surfaceTintColor)) && B.boolConversionCheck(J.$eq$(other.overlayColor, _this.overlayColor)) && B.boolConversionCheck(J.$eq$(other.side, _this.side)) && B.boolConversionCheck(J.$eq$(other.shape, _this.shape)) && B.boolConversionCheck(J.$eq$(other.padding, _this.padding)) && B.boolConversionCheck(J.$eq$(other.textStyle, _this.textStyle)) && B.boolConversionCheck(J.$eq$(other.hintStyle, _this.hintStyle)) && B.boolConversionCheck(J.$eq$(other.constraints, _this.constraints)) && B.boolConversionCheck(J.$eq$(other.textCapitalization, _this.textCapitalization));
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("elevation", _this.elevation, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_double));
      t1 = type$.WidgetStateProperty_nullable_Color;
      properties.add$1(0, E.DiagnosticsProperty$("backgroundColor", _this.backgroundColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("shadowColor", _this.shadowColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("surfaceTintColor", _this.surfaceTintColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("overlayColor", _this.overlayColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("side", _this.side, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_BorderSide));
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.shape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_OutlinedBorder));
      properties.add$1(0, E.DiagnosticsProperty$("padding", _this.padding, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_EdgeInsetsGeometry));
      t1 = type$.WidgetStateProperty_nullable_TextStyle;
      properties.add$1(0, E.DiagnosticsProperty$("textStyle", _this.textStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("hintStyle", _this.hintStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("constraints", _this.constraints, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BoxConstraints));
      properties.add$1(0, E.DiagnosticsProperty$("textCapitalization", _this.textCapitalization, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextCapitalization));
    },
    $isDiagnosticable: 1
  };
  A._SearchBarThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.SearchViewThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.backgroundColor, _this.elevation, _this.surfaceTintColor, _this.side, _this.shape, _this.headerHeight, _this.headerTextStyle, _this.headerHintStyle, _this.constraints, _this.dividerColor, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.SearchViewThemeData && B.boolConversionCheck(J.$eq$(other.backgroundColor, _this.backgroundColor)) && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.surfaceTintColor, _this.surfaceTintColor)) && B.boolConversionCheck(J.$eq$(other.side, _this.side)) && B.boolConversionCheck(J.$eq$(other.shape, _this.shape)) && B.boolConversionCheck(J.$eq$(other.headerHeight, _this.headerHeight)) && B.boolConversionCheck(J.$eq$(other.headerTextStyle, _this.headerTextStyle)) && B.boolConversionCheck(J.$eq$(other.headerHintStyle, _this.headerHintStyle)) && B.boolConversionCheck(J.$eq$(other.constraints, _this.constraints)) && B.boolConversionCheck(J.$eq$(other.dividerColor, _this.dividerColor));
    },
    debugFillProperties$1(properties) {
      var t1, t2, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      t1 = type$.nullable_Color;
      properties.add$1(0, E.DiagnosticsProperty$("backgroundColor", _this.backgroundColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      t2 = type$.nullable_double;
      properties.add$1(0, E.DiagnosticsProperty$("elevation", _this.elevation, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("surfaceTintColor", _this.surfaceTintColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("side", _this.side, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.nullable_BorderSide));
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.shape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.nullable_OutlinedBorder));
      properties.add$1(0, E.DiagnosticsProperty$("headerHeight", _this.headerHeight, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      t2 = type$.nullable_TextStyle;
      properties.add$1(0, E.DiagnosticsProperty$("headerTextStyle", _this.headerTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("headerHintStyle", _this.headerHintStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("constraints", _this.constraints, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BoxConstraints));
      properties.add$1(0, E.DiagnosticsProperty$("dividerColor", _this.dividerColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
    },
    $isDiagnosticable: 1
  };
  A._SearchViewThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.SegmentedButtonThemeData.prototype = {
    get$hashCode(_) {
      return B.Object_hash(this.style, this.selectedIcon, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.SegmentedButtonThemeData && B.boolConversionCheck(J.$eq$(other.style, _this.style)) && B.boolConversionCheck(J.$eq$(other.selectedIcon, _this.selectedIcon));
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("style", this.style, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ButtonStyle));
    },
    $isDiagnosticable: 1
  };
  A._SegmentedButtonThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.SliderThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.trackHeight, _this.activeTrackColor, _this.inactiveTrackColor, _this.secondaryActiveTrackColor, _this.disabledActiveTrackColor, _this.disabledInactiveTrackColor, _this.disabledSecondaryActiveTrackColor, _this.activeTickMarkColor, _this.inactiveTickMarkColor, _this.disabledActiveTickMarkColor, _this.disabledInactiveTickMarkColor, _this.thumbColor, _this.overlappingShapeStrokeColor, _this.disabledThumbColor, _this.overlayColor, _this.valueIndicatorColor, _this.overlayShape, _this.tickMarkShape, _this.thumbShape, B.Object_hash(_this.trackShape, _this.valueIndicatorShape, _this.rangeTickMarkShape, _this.rangeThumbShape, _this.rangeTrackShape, _this.rangeValueIndicatorShape, _this.showValueIndicator, _this.valueIndicatorTextStyle, _this.minThumbSeparation, _this.thumbSelector, _this.mouseCursor, _this.allowedInteraction, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue));
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.SliderThemeData && B.boolConversionCheck(J.$eq$(other.trackHeight, _this.trackHeight)) && B.boolConversionCheck(J.$eq$(other.activeTrackColor, _this.activeTrackColor)) && B.boolConversionCheck(J.$eq$(other.inactiveTrackColor, _this.inactiveTrackColor)) && B.boolConversionCheck(J.$eq$(other.secondaryActiveTrackColor, _this.secondaryActiveTrackColor)) && B.boolConversionCheck(J.$eq$(other.disabledActiveTrackColor, _this.disabledActiveTrackColor)) && B.boolConversionCheck(J.$eq$(other.disabledInactiveTrackColor, _this.disabledInactiveTrackColor)) && B.boolConversionCheck(J.$eq$(other.disabledSecondaryActiveTrackColor, _this.disabledSecondaryActiveTrackColor)) && B.boolConversionCheck(J.$eq$(other.activeTickMarkColor, _this.activeTickMarkColor)) && B.boolConversionCheck(J.$eq$(other.inactiveTickMarkColor, _this.inactiveTickMarkColor)) && B.boolConversionCheck(J.$eq$(other.disabledActiveTickMarkColor, _this.disabledActiveTickMarkColor)) && B.boolConversionCheck(J.$eq$(other.disabledInactiveTickMarkColor, _this.disabledInactiveTickMarkColor)) && B.boolConversionCheck(J.$eq$(other.thumbColor, _this.thumbColor)) && B.boolConversionCheck(J.$eq$(other.overlappingShapeStrokeColor, _this.overlappingShapeStrokeColor)) && B.boolConversionCheck(J.$eq$(other.disabledThumbColor, _this.disabledThumbColor)) && B.boolConversionCheck(J.$eq$(other.overlayColor, _this.overlayColor)) && B.boolConversionCheck(J.$eq$(other.valueIndicatorColor, _this.valueIndicatorColor)) && B.boolConversionCheck(J.$eq$(other.valueIndicatorStrokeColor, _this.valueIndicatorStrokeColor)) && B.boolConversionCheck(J.$eq$(other.overlayShape, _this.overlayShape)) && B.boolConversionCheck(J.$eq$(other.tickMarkShape, _this.tickMarkShape)) && B.boolConversionCheck(J.$eq$(other.thumbShape, _this.thumbShape)) && B.boolConversionCheck(J.$eq$(other.trackShape, _this.trackShape)) && B.boolConversionCheck(J.$eq$(other.valueIndicatorShape, _this.valueIndicatorShape)) && B.boolConversionCheck(J.$eq$(other.rangeTickMarkShape, _this.rangeTickMarkShape)) && B.boolConversionCheck(J.$eq$(other.rangeThumbShape, _this.rangeThumbShape)) && B.boolConversionCheck(J.$eq$(other.rangeTrackShape, _this.rangeTrackShape)) && B.boolConversionCheck(J.$eq$(other.rangeValueIndicatorShape, _this.rangeValueIndicatorShape)) && B.boolConversionCheck(J.$eq$(other.showValueIndicator, _this.showValueIndicator)) && B.boolConversionCheck(J.$eq$(other.valueIndicatorTextStyle, _this.valueIndicatorTextStyle)) && B.boolConversionCheck(J.$eq$(other.minThumbSeparation, _this.minThumbSeparation)) && B.boolConversionCheck(J.$eq$(other.thumbSelector, _this.thumbSelector)) && B.boolConversionCheck(J.$eq$(other.mouseCursor, _this.mouseCursor)) && B.boolConversionCheck(J.$eq$(other.allowedInteraction, _this.allowedInteraction));
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DoubleProperty$("trackHeight", _this.trackHeight, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.ColorProperty$("activeTrackColor", _this.activeTrackColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("inactiveTrackColor", _this.inactiveTrackColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("secondaryActiveTrackColor", _this.secondaryActiveTrackColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("disabledActiveTrackColor", _this.disabledActiveTrackColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("disabledInactiveTrackColor", _this.disabledInactiveTrackColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("disabledSecondaryActiveTrackColor", _this.disabledSecondaryActiveTrackColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("activeTickMarkColor", _this.activeTickMarkColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("inactiveTickMarkColor", _this.inactiveTickMarkColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("disabledActiveTickMarkColor", _this.disabledActiveTickMarkColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("disabledInactiveTickMarkColor", _this.disabledInactiveTickMarkColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("thumbColor", _this.thumbColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("overlappingShapeStrokeColor", _this.overlappingShapeStrokeColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("disabledThumbColor", _this.disabledThumbColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("overlayColor", _this.overlayColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("valueIndicatorColor", _this.valueIndicatorColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("valueIndicatorStrokeColor", _this.valueIndicatorStrokeColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      t1 = type$.SliderComponentShape;
      properties.add$1(0, E.DiagnosticsProperty$("overlayShape", _this.overlayShape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("tickMarkShape", _this.tickMarkShape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.SliderTickMarkShape));
      properties.add$1(0, E.DiagnosticsProperty$("thumbShape", _this.thumbShape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("trackShape", _this.trackShape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.SliderTrackShape));
      properties.add$1(0, E.DiagnosticsProperty$("valueIndicatorShape", _this.valueIndicatorShape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("rangeTickMarkShape", _this.rangeTickMarkShape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.RangeSliderTickMarkShape));
      properties.add$1(0, E.DiagnosticsProperty$("rangeThumbShape", _this.rangeThumbShape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.RangeSliderThumbShape));
      properties.add$1(0, E.DiagnosticsProperty$("rangeTrackShape", _this.rangeTrackShape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.RangeSliderTrackShape));
      properties.add$1(0, E.DiagnosticsProperty$("rangeValueIndicatorShape", _this.rangeValueIndicatorShape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.RangeSliderValueIndicatorShape));
      properties.add$1(0, E.EnumProperty$("showValueIndicator", _this.showValueIndicator, _null, D.DiagnosticLevel_3, type$.ShowValueIndicator));
      properties.add$1(0, E.DiagnosticsProperty$("valueIndicatorTextStyle", _this.valueIndicatorTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextStyle));
      properties.add$1(0, E.DoubleProperty$("minThumbSeparation", _this.minThumbSeparation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DiagnosticsProperty$("thumbSelector", _this.thumbSelector, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.nullable_Thumb_Function_TextDirection_RangeValues_double_Size_Size_double));
      properties.add$1(0, E.DiagnosticsProperty$("mouseCursor", _this.mouseCursor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_MouseCursor));
      properties.add$1(0, E.EnumProperty$("allowedInteraction", _this.allowedInteraction, _null, D.DiagnosticLevel_3, type$.SliderInteraction));
    },
    $isDiagnosticable: 1
  };
  A._SliderThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.SnackBarClosedReason.prototype = {
    _enumToString$0() {
      return "SnackBarClosedReason." + B.S(this._core$_name);
    }
  };
  A.SnackBarThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.backgroundColor, _this.actionTextColor, _this.disabledActionTextColor, _this.contentTextStyle, _this.elevation, _this.shape, _this.behavior, _this.width, _this.insetPadding, null, _this.closeIconColor, _this.actionOverflowThreshold, _this.actionBackgroundColor, _this.disabledActionBackgroundColor, _this.dismissDirection, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.SnackBarThemeData && B.boolConversionCheck(J.$eq$(other.backgroundColor, _this.backgroundColor)) && B.boolConversionCheck(J.$eq$(other.actionTextColor, _this.actionTextColor)) && B.boolConversionCheck(J.$eq$(other.disabledActionTextColor, _this.disabledActionTextColor)) && B.boolConversionCheck(J.$eq$(other.contentTextStyle, _this.contentTextStyle)) && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.shape, _this.shape)) && B.boolConversionCheck(J.$eq$(other.behavior, _this.behavior)) && B.boolConversionCheck(J.$eq$(other.width, _this.width)) && B.boolConversionCheck(J.$eq$(other.insetPadding, _this.insetPadding)) && B.boolConversionCheck(J.$eq$(other.closeIconColor, _this.closeIconColor)) && B.boolConversionCheck(J.$eq$(other.actionOverflowThreshold, _this.actionOverflowThreshold)) && B.boolConversionCheck(J.$eq$(other.actionBackgroundColor, _this.actionBackgroundColor)) && B.boolConversionCheck(J.$eq$(other.disabledActionBackgroundColor, _this.disabledActionBackgroundColor)) && B.boolConversionCheck(J.$eq$(other.dismissDirection, _this.dismissDirection));
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.ColorProperty$("backgroundColor", _this.backgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("actionTextColor", _this.actionTextColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("disabledActionTextColor", _this.disabledActionTextColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("contentTextStyle", _this.contentTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextStyle));
      properties.add$1(0, E.DoubleProperty$("elevation", _this.elevation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.shape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ShapeBorder));
      properties.add$1(0, E.DiagnosticsProperty$("behavior", _this.behavior, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.SnackBarBehavior));
      properties.add$1(0, E.DoubleProperty$("width", _this.width, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DiagnosticsProperty$("insetPadding", _this.insetPadding, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.EdgeInsets));
      properties.add$1(0, E.DiagnosticsProperty$("showCloseIcon", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
      properties.add$1(0, A.ColorProperty$("closeIconColor", _this.closeIconColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DoubleProperty$("actionOverflowThreshold", _this.actionOverflowThreshold, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.ColorProperty$("actionBackgroundColor", _this.actionBackgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("disabledActionBackgroundColor", _this.disabledActionBackgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("dismissDirection", _this.dismissDirection, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.DismissDirection));
    },
    $isDiagnosticable: 1
  };
  A._SnackBarThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.SwitchThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.thumbColor, _this.trackColor, _this.trackOutlineColor, _this.trackOutlineWidth, _this.materialTapTargetSize, _this.mouseCursor, _this.overlayColor, _this.splashRadius, _this.thumbIcon, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.SwitchThemeData && B.boolConversionCheck(J.$eq$(other.thumbColor, _this.thumbColor)) && B.boolConversionCheck(J.$eq$(other.trackColor, _this.trackColor)) && B.boolConversionCheck(J.$eq$(other.trackOutlineColor, _this.trackOutlineColor)) && B.boolConversionCheck(J.$eq$(other.trackOutlineWidth, _this.trackOutlineWidth)) && B.boolConversionCheck(J.$eq$(other.materialTapTargetSize, _this.materialTapTargetSize)) && B.boolConversionCheck(J.$eq$(other.mouseCursor, _this.mouseCursor)) && B.boolConversionCheck(J.$eq$(other.overlayColor, _this.overlayColor)) && B.boolConversionCheck(J.$eq$(other.splashRadius, _this.splashRadius)) && B.boolConversionCheck(J.$eq$(other.thumbIcon, _this.thumbIcon));
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      t1 = type$.WidgetStateProperty_nullable_Color;
      properties.add$1(0, E.DiagnosticsProperty$("thumbColor", _this.thumbColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("trackColor", _this.trackColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("trackOutlineColor", _this.trackOutlineColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("trackOutlineWidth", _this.trackOutlineWidth, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_double));
      properties.add$1(0, E.DiagnosticsProperty$("materialTapTargetSize", _this.materialTapTargetSize, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.MaterialTapTargetSize));
      properties.add$1(0, E.DiagnosticsProperty$("mouseCursor", _this.mouseCursor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_MouseCursor));
      properties.add$1(0, E.DiagnosticsProperty$("overlayColor", _this.overlayColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DoubleProperty$("splashRadius", _this.splashRadius, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DiagnosticsProperty$("thumbIcon", _this.thumbIcon, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_Icon));
    },
    $isDiagnosticable: 1
  };
  A._SwitchThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.TabBarTheme.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.indicator, _this.indicatorColor, _this.indicatorSize, _this.dividerColor, _this.dividerHeight, _this.labelColor, _this.labelPadding, _this.labelStyle, _this.unselectedLabelColor, _this.unselectedLabelStyle, _this.overlayColor, _this.splashFactory, _this.mouseCursor, _this.tabAlignment, _this.textScaler, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.TabBarTheme && B.boolConversionCheck(J.$eq$(other.indicator, _this.indicator)) && B.boolConversionCheck(J.$eq$(other.indicatorColor, _this.indicatorColor)) && B.boolConversionCheck(J.$eq$(other.indicatorSize, _this.indicatorSize)) && B.boolConversionCheck(J.$eq$(other.dividerColor, _this.dividerColor)) && B.boolConversionCheck(J.$eq$(other.dividerHeight, _this.dividerHeight)) && B.boolConversionCheck(J.$eq$(other.labelColor, _this.labelColor)) && B.boolConversionCheck(J.$eq$(other.labelPadding, _this.labelPadding)) && B.boolConversionCheck(J.$eq$(other.labelStyle, _this.labelStyle)) && B.boolConversionCheck(J.$eq$(other.unselectedLabelColor, _this.unselectedLabelColor)) && B.boolConversionCheck(J.$eq$(other.unselectedLabelStyle, _this.unselectedLabelStyle)) && B.boolConversionCheck(J.$eq$(other.overlayColor, _this.overlayColor)) && B.boolConversionCheck(J.$eq$(other.splashFactory, _this.splashFactory)) && B.boolConversionCheck(J.$eq$(other.mouseCursor, _this.mouseCursor)) && B.boolConversionCheck(J.$eq$(other.tabAlignment, _this.tabAlignment)) && B.boolConversionCheck(J.$eq$(other.textScaler, _this.textScaler));
    },
    $isDiagnosticable: 1
  };
  A._TabBarTheme_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.TextButtonThemeData.prototype = {
    get$hashCode(_) {
      return J.get$hashCode$(this.style);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.TextButtonThemeData && B.boolConversionCheck(J.$eq$(other.style, this.style));
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("style", this.style, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ButtonStyle));
    },
    $isDiagnosticable: 1
  };
  A._TextButtonThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.TextSelectionThemeData.prototype = {
    get$hashCode(_) {
      return B.Object_hash(this.cursorColor, this.selectionColor, this.selectionHandleColor, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.TextSelectionThemeData && B.boolConversionCheck(J.$eq$(other.cursorColor, _this.cursorColor)) && B.boolConversionCheck(J.$eq$(other.selectionColor, _this.selectionColor)) && B.boolConversionCheck(J.$eq$(other.selectionHandleColor, _this.selectionHandleColor));
    },
    debugFillProperties$1(properties) {
      var _this = this;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.ColorProperty$("cursorColor", _this.cursorColor, null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("selectionColor", _this.selectionColor, null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("selectionHandleColor", _this.selectionHandleColor, null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
    },
    $isDiagnosticable: 1
  };
  A._TextSelectionThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.TextTheme.prototype = {
    copyWith$15$bodyLarge$bodyMedium$bodySmall$displayLarge$displayMedium$displaySmall$headlineLarge$headlineMedium$headlineSmall$labelLarge$labelMedium$labelSmall$titleLarge$titleMedium$titleSmall(bodyLarge, bodyMedium, bodySmall, displayLarge, displayMedium, displaySmall, headlineLarge, headlineMedium, headlineSmall, labelLarge, labelMedium, labelSmall, titleLarge, titleMedium, titleSmall) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, _this = this,
        t1 = type$.nullable_TextStyle;
      t1._as(displayLarge);
      t1._as(displayMedium);
      t1._as(displaySmall);
      t1._as(headlineLarge);
      t1._as(headlineMedium);
      t1._as(headlineSmall);
      t1._as(titleLarge);
      t1._as(titleMedium);
      t1._as(titleSmall);
      t1._as(bodyLarge);
      t1._as(bodyMedium);
      t1._as(bodySmall);
      t1._as(labelLarge);
      t1._as(labelMedium);
      t1._as(labelSmall);
      t1 = displayLarge == null ? _this.displayLarge : displayLarge;
      t2 = displayMedium == null ? _this.displayMedium : displayMedium;
      t3 = displaySmall == null ? _this.displaySmall : displaySmall;
      t4 = headlineLarge == null ? _this.headlineLarge : headlineLarge;
      t5 = headlineMedium == null ? _this.headlineMedium : headlineMedium;
      t6 = headlineSmall == null ? _this.headlineSmall : headlineSmall;
      t7 = titleLarge == null ? _this.titleLarge : titleLarge;
      t8 = titleMedium == null ? _this.titleMedium : titleMedium;
      t9 = titleSmall == null ? _this.titleSmall : titleSmall;
      t10 = bodyLarge == null ? _this.bodyLarge : bodyLarge;
      t11 = bodyMedium == null ? _this.bodyMedium : bodyMedium;
      t12 = bodySmall == null ? _this.bodySmall : bodySmall;
      t13 = labelLarge == null ? _this.labelLarge : labelLarge;
      t14 = labelMedium == null ? _this.labelMedium : labelMedium;
      return A.TextTheme$(t10, t11, t12, t1, t2, t3, t4, t5, t6, t13, t14, labelSmall == null ? _this.labelSmall : labelSmall, t7, t8, t9);
    },
    merge$1(other) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, _this = this, _null = null;
      type$.nullable_TextTheme._as(other);
      if (other == null)
        return _this;
      t1 = _this.displayLarge;
      t1 = t1 == null ? _null : t1.merge$1(other.displayLarge);
      if (t1 == null)
        t1 = other.displayLarge;
      t2 = _this.displayMedium;
      t2 = t2 == null ? _null : t2.merge$1(other.displayMedium);
      if (t2 == null)
        t2 = other.displayMedium;
      t3 = _this.displaySmall;
      t3 = t3 == null ? _null : t3.merge$1(other.displaySmall);
      if (t3 == null)
        t3 = other.displaySmall;
      t4 = _this.headlineLarge;
      t4 = t4 == null ? _null : t4.merge$1(other.headlineLarge);
      if (t4 == null)
        t4 = other.headlineLarge;
      t5 = _this.headlineMedium;
      t5 = t5 == null ? _null : t5.merge$1(other.headlineMedium);
      if (t5 == null)
        t5 = other.headlineMedium;
      t6 = _this.headlineSmall;
      t6 = t6 == null ? _null : t6.merge$1(other.headlineSmall);
      if (t6 == null)
        t6 = other.headlineSmall;
      t7 = _this.titleLarge;
      t7 = t7 == null ? _null : t7.merge$1(other.titleLarge);
      if (t7 == null)
        t7 = other.titleLarge;
      t8 = _this.titleMedium;
      t8 = t8 == null ? _null : t8.merge$1(other.titleMedium);
      if (t8 == null)
        t8 = other.titleMedium;
      t9 = _this.titleSmall;
      t9 = t9 == null ? _null : t9.merge$1(other.titleSmall);
      if (t9 == null)
        t9 = other.titleSmall;
      t10 = _this.bodyLarge;
      t10 = t10 == null ? _null : t10.merge$1(other.bodyLarge);
      if (t10 == null)
        t10 = other.bodyLarge;
      t11 = _this.bodyMedium;
      t11 = t11 == null ? _null : t11.merge$1(other.bodyMedium);
      if (t11 == null)
        t11 = other.bodyMedium;
      t12 = _this.bodySmall;
      t12 = t12 == null ? _null : t12.merge$1(other.bodySmall);
      if (t12 == null)
        t12 = other.bodySmall;
      t13 = _this.labelLarge;
      t13 = t13 == null ? _null : t13.merge$1(other.labelLarge);
      if (t13 == null)
        t13 = other.labelLarge;
      t14 = _this.labelMedium;
      t14 = t14 == null ? _null : t14.merge$1(other.labelMedium);
      if (t14 == null)
        t14 = other.labelMedium;
      t15 = _this.labelSmall;
      t15 = t15 == null ? _null : t15.merge$1(other.labelSmall);
      return _this.copyWith$15$bodyLarge$bodyMedium$bodySmall$displayLarge$displayMedium$displaySmall$headlineLarge$headlineMedium$headlineSmall$labelLarge$labelMedium$labelSmall$titleLarge$titleMedium$titleSmall(t10, t11, t12, t1, t2, t3, t4, t5, t6, t13, t14, t15 == null ? other.labelSmall : t15, t7, t8, t9);
    },
    apply$6$bodyColor$decorationColor$displayColor$fontFamily$fontFamilyFallback$package(bodyColor, decorationColor, displayColor, fontFamily, fontFamilyFallback, $package) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, _this = this, _null = null;
      B._asStringQ(fontFamily);
      type$.nullable_List_String._as(fontFamilyFallback);
      B._asStringQ($package);
      t1 = type$.nullable_Color;
      t1._as(displayColor);
      t1._as(bodyColor);
      t1._as(decorationColor);
      t1 = _this.displayLarge;
      t1 = t1 == null ? _null : t1.apply$9$color$decoration$decorationColor$decorationStyle$fontFamily$fontFamilyFallback$fontSizeDelta$fontSizeFactor$package(displayColor, _null, decorationColor, _null, fontFamily, fontFamilyFallback, 0, 1, $package);
      t2 = _this.displayMedium;
      t2 = t2 == null ? _null : t2.apply$9$color$decoration$decorationColor$decorationStyle$fontFamily$fontFamilyFallback$fontSizeDelta$fontSizeFactor$package(displayColor, _null, decorationColor, _null, fontFamily, fontFamilyFallback, 0, 1, $package);
      t3 = _this.displaySmall;
      t3 = t3 == null ? _null : t3.apply$9$color$decoration$decorationColor$decorationStyle$fontFamily$fontFamilyFallback$fontSizeDelta$fontSizeFactor$package(displayColor, _null, decorationColor, _null, fontFamily, fontFamilyFallback, 0, 1, $package);
      t4 = _this.headlineLarge;
      t4 = t4 == null ? _null : t4.apply$9$color$decoration$decorationColor$decorationStyle$fontFamily$fontFamilyFallback$fontSizeDelta$fontSizeFactor$package(displayColor, _null, decorationColor, _null, fontFamily, fontFamilyFallback, 0, 1, $package);
      t5 = _this.headlineMedium;
      t5 = t5 == null ? _null : t5.apply$9$color$decoration$decorationColor$decorationStyle$fontFamily$fontFamilyFallback$fontSizeDelta$fontSizeFactor$package(displayColor, _null, decorationColor, _null, fontFamily, fontFamilyFallback, 0, 1, $package);
      t6 = _this.headlineSmall;
      t6 = t6 == null ? _null : t6.apply$9$color$decoration$decorationColor$decorationStyle$fontFamily$fontFamilyFallback$fontSizeDelta$fontSizeFactor$package(bodyColor, _null, decorationColor, _null, fontFamily, fontFamilyFallback, 0, 1, $package);
      t7 = _this.titleLarge;
      t7 = t7 == null ? _null : t7.apply$9$color$decoration$decorationColor$decorationStyle$fontFamily$fontFamilyFallback$fontSizeDelta$fontSizeFactor$package(bodyColor, _null, decorationColor, _null, fontFamily, fontFamilyFallback, 0, 1, $package);
      t8 = _this.titleMedium;
      t8 = t8 == null ? _null : t8.apply$9$color$decoration$decorationColor$decorationStyle$fontFamily$fontFamilyFallback$fontSizeDelta$fontSizeFactor$package(bodyColor, _null, decorationColor, _null, fontFamily, fontFamilyFallback, 0, 1, $package);
      t9 = _this.titleSmall;
      t9 = t9 == null ? _null : t9.apply$9$color$decoration$decorationColor$decorationStyle$fontFamily$fontFamilyFallback$fontSizeDelta$fontSizeFactor$package(bodyColor, _null, decorationColor, _null, fontFamily, fontFamilyFallback, 0, 1, $package);
      t10 = _this.bodyLarge;
      t10 = t10 == null ? _null : t10.apply$9$color$decoration$decorationColor$decorationStyle$fontFamily$fontFamilyFallback$fontSizeDelta$fontSizeFactor$package(bodyColor, _null, decorationColor, _null, fontFamily, fontFamilyFallback, 0, 1, $package);
      t11 = _this.bodyMedium;
      t11 = t11 == null ? _null : t11.apply$9$color$decoration$decorationColor$decorationStyle$fontFamily$fontFamilyFallback$fontSizeDelta$fontSizeFactor$package(bodyColor, _null, decorationColor, _null, fontFamily, fontFamilyFallback, 0, 1, $package);
      t12 = _this.bodySmall;
      t12 = t12 == null ? _null : t12.apply$9$color$decoration$decorationColor$decorationStyle$fontFamily$fontFamilyFallback$fontSizeDelta$fontSizeFactor$package(displayColor, _null, decorationColor, _null, fontFamily, fontFamilyFallback, 0, 1, $package);
      t13 = _this.labelLarge;
      t13 = t13 == null ? _null : t13.apply$9$color$decoration$decorationColor$decorationStyle$fontFamily$fontFamilyFallback$fontSizeDelta$fontSizeFactor$package(bodyColor, _null, decorationColor, _null, fontFamily, fontFamilyFallback, 0, 1, $package);
      t14 = _this.labelMedium;
      t14 = t14 == null ? _null : t14.apply$9$color$decoration$decorationColor$decorationStyle$fontFamily$fontFamilyFallback$fontSizeDelta$fontSizeFactor$package(bodyColor, _null, decorationColor, _null, fontFamily, fontFamilyFallback, 0, 1, $package);
      t15 = _this.labelSmall;
      return A.TextTheme$(t10, t11, t12, t1, t2, t3, t4, t5, t6, t13, t14, t15 == null ? _null : t15.apply$9$color$decoration$decorationColor$decorationStyle$fontFamily$fontFamilyFallback$fontSizeDelta$fontSizeFactor$package(bodyColor, _null, decorationColor, _null, fontFamily, fontFamilyFallback, 0, 1, $package), t7, t8, t9);
    },
    apply$3$bodyColor$decorationColor$displayColor(bodyColor, decorationColor, displayColor) {
      return this.apply$6$bodyColor$decorationColor$displayColor$fontFamily$fontFamilyFallback$package(bodyColor, decorationColor, displayColor, null, null, null);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.TextTheme && B.boolConversionCheck(J.$eq$(_this.displayLarge, other.displayLarge)) && B.boolConversionCheck(J.$eq$(_this.displayMedium, other.displayMedium)) && B.boolConversionCheck(J.$eq$(_this.displaySmall, other.displaySmall)) && B.boolConversionCheck(J.$eq$(_this.headlineLarge, other.headlineLarge)) && B.boolConversionCheck(J.$eq$(_this.headlineMedium, other.headlineMedium)) && B.boolConversionCheck(J.$eq$(_this.headlineSmall, other.headlineSmall)) && B.boolConversionCheck(J.$eq$(_this.titleLarge, other.titleLarge)) && B.boolConversionCheck(J.$eq$(_this.titleMedium, other.titleMedium)) && B.boolConversionCheck(J.$eq$(_this.titleSmall, other.titleSmall)) && B.boolConversionCheck(J.$eq$(_this.bodyLarge, other.bodyLarge)) && B.boolConversionCheck(J.$eq$(_this.bodyMedium, other.bodyMedium)) && B.boolConversionCheck(J.$eq$(_this.bodySmall, other.bodySmall)) && B.boolConversionCheck(J.$eq$(_this.labelLarge, other.labelLarge)) && B.boolConversionCheck(J.$eq$(_this.labelMedium, other.labelMedium)) && B.boolConversionCheck(J.$eq$(_this.labelSmall, other.labelSmall));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.displayLarge, _this.displayMedium, _this.displaySmall, _this.headlineLarge, _this.headlineMedium, _this.headlineSmall, _this.titleLarge, _this.titleMedium, _this.titleSmall, _this.bodyLarge, _this.bodyMedium, _this.bodySmall, _this.labelLarge, _this.labelMedium, _this.labelSmall, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    debugFillProperties$1(properties) {
      var defaultTheme, t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      defaultTheme = A.Typography_Typography$material2018(E.defaultTargetPlatform()).black;
      t1 = type$.TextStyle;
      properties.add$1(0, E.DiagnosticsProperty$("displayLarge", _this.displayLarge, true, defaultTheme.displayLarge, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("displayMedium", _this.displayMedium, true, defaultTheme.displayMedium, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("displaySmall", _this.displaySmall, true, defaultTheme.displaySmall, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("headlineLarge", _this.headlineLarge, true, defaultTheme.headlineLarge, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("headlineMedium", _this.headlineMedium, true, defaultTheme.headlineMedium, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("headlineSmall", _this.headlineSmall, true, defaultTheme.headlineSmall, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("titleLarge", _this.titleLarge, true, defaultTheme.titleLarge, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("titleMedium", _this.titleMedium, true, defaultTheme.titleMedium, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("titleSmall", _this.titleSmall, true, defaultTheme.titleSmall, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("bodyLarge", _this.bodyLarge, true, defaultTheme.bodyLarge, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("bodyMedium", _this.bodyMedium, true, defaultTheme.bodyMedium, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("bodySmall", _this.bodySmall, true, defaultTheme.bodySmall, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("labelLarge", _this.labelLarge, true, defaultTheme.labelLarge, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("labelMedium", _this.labelMedium, true, defaultTheme.labelMedium, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("labelSmall", _this.labelSmall, true, defaultTheme.labelSmall, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
    },
    $isDiagnosticable: 1
  };
  A._TextTheme_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.Theme.prototype = {
    _wrapsWidgetThemes$2(context, child) {
      var selectionStyle, t1, t2, t3;
      type$.BuildContext._as(context);
      type$.Widget._as(child);
      selectionStyle = A.DefaultSelectionStyle_of(context);
      t1 = this.data;
      t2 = t1.iconTheme;
      t1 = t1.textSelectionTheme;
      t3 = t1.selectionColor;
      if (t3 == null)
        t3 = selectionStyle.selectionColor;
      t1 = t1.cursorColor;
      return A.IconTheme$(A.DefaultSelectionStyle$(child, t1 == null ? selectionStyle.cursorColor : t1, null, null, t3), t2, null);
    },
    _inheritedCupertinoThemeData$1(context) {
      var inheritedTheme, t1;
      type$.BuildContext._as(context);
      inheritedTheme = context.dependOnInheritedWidgetOfExactType$1$0(type$.InheritedCupertinoTheme);
      t1 = inheritedTheme == null ? null : inheritedTheme.theme.data;
      return (t1 == null ? A.MaterialBasedCupertinoThemeData$(this.data) : t1).resolveFrom$1(context);
    },
    build$1(context) {
      var t1, _this = this;
      type$.BuildContext._as(context);
      t1 = _this._inheritedCupertinoThemeData$1(context);
      return A._InheritedTheme$(A.CupertinoTheme$(_this._wrapsWidgetThemes$2(context, _this.child), t1), _this);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("data", this.data, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, false, true, D.DiagnosticsTreeStyle_8, _null, type$.ThemeData));
    }
  };
  A._InheritedTheme.prototype = {
    updateShouldNotify$1(old) {
      type$._InheritedTheme._as(old);
      return !B.boolConversionCheck(J.$eq$(this.theme.data, old.theme.data));
    }
  };
  A.ThemeDataTween.prototype = {
    lerp$1(t) {
      var t1, t2;
      B._asDouble(t);
      t1 = this.begin;
      t1.toString;
      t2 = this.end;
      t2.toString;
      return A.ThemeData_lerp(t1, t2, t);
    }
  };
  A.AnimatedTheme.prototype = {
    createState$0() {
      return A._AnimatedThemeState$();
    }
  };
  A._AnimatedThemeState.prototype = {
    forEachTween$1(visitor) {
      var t1 = type$.nullable_Tween_dynamic_Function_3_nullable_Tween_dynamic_and_dynamic_and_Tween_dynamic_Function_dynamic._as(visitor).call$3(this._theme$_data, this.get$widget().data, new A._AnimatedThemeState_forEachTween_closure());
      t1.toString;
      this._theme$_data = type$.ThemeDataTween._as(t1);
    },
    build$1(context) {
      var t1;
      type$.BuildContext._as(context);
      t1 = this._theme$_data;
      t1.toString;
      t1 = t1.evaluate$1(this.get$animation());
      return A.Theme$(this.get$widget().child, t1);
    },
    debugFillProperties$1(description) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(description);
      this.super$_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin$debugFillProperties(description);
      description.add$1(0, E.DiagnosticsProperty$("data", this._theme$_data, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, false, true, D.DiagnosticsTreeStyle_8, _null, type$.ThemeDataTween));
    }
  };
  A.MaterialTapTargetSize.prototype = {
    _enumToString$0() {
      return "MaterialTapTargetSize." + B.S(this._core$_name);
    }
  };
  A.ThemeData.prototype = {
    get$brightness() {
      return this.colorScheme.brightness;
    },
    get$buttonBarTheme() {
      var t1 = this._buttonBarTheme;
      t1.toString;
      return t1;
    },
    copyWith$2$primaryTextTheme$textTheme(primaryTextTheme, textTheme) {
      var t2, t3, _this = this,
        t1 = type$.nullable_TextTheme;
      t1._as(primaryTextTheme);
      t1._as(textTheme);
      t1 = _this.colorScheme.copyWith$1$brightness(null);
      t2 = primaryTextTheme == null ? _this.primaryTextTheme : primaryTextTheme;
      t3 = textTheme == null ? _this.textTheme : textTheme;
      return A.ThemeData$raw(_this.actionIconTheme, _this.adaptationMap, _this.appBarTheme, _this.applyElevationOverlayColor, _this.badgeTheme, _this.bannerTheme, _this.bottomAppBarTheme, _this.bottomNavigationBarTheme, _this.bottomSheetTheme, _this._buttonBarTheme, _this.buttonTheme, _this.canvasColor, _this.cardColor, _this.cardTheme, _this.checkboxTheme, _this.chipTheme, t1, _this.cupertinoOverrideTheme, _this.dataTableTheme, _this.datePickerTheme, _this.dialogBackgroundColor, _this.dialogTheme, _this.disabledColor, _this.dividerColor, _this.dividerTheme, _this.drawerTheme, _this.dropdownMenuTheme, _this.elevatedButtonTheme, _this.expansionTileTheme, _this.extensions, _this.filledButtonTheme, _this.floatingActionButtonTheme, _this.focusColor, _this.highlightColor, _this.hintColor, _this.hoverColor, _this.iconButtonTheme, _this.iconTheme, _this.indicatorColor, _this.inputDecorationTheme, _this.listTileTheme, _this.materialTapTargetSize, _this.menuBarTheme, _this.menuButtonTheme, _this.menuTheme, _this.navigationBarTheme, _this.navigationDrawerTheme, _this.navigationRailTheme, _this.outlinedButtonTheme, _this.pageTransitionsTheme, _this.platform, _this.popupMenuTheme, _this.primaryColor, _this.primaryColorDark, _this.primaryColorLight, _this.primaryIconTheme, t2, _this.progressIndicatorTheme, _this.radioTheme, _this.scaffoldBackgroundColor, _this.scrollbarTheme, _this.searchBarTheme, _this.searchViewTheme, _this.secondaryHeaderColor, _this.segmentedButtonTheme, _this.shadowColor, _this.sliderTheme, _this.snackBarTheme, _this.splashColor, _this.splashFactory, _this.switchTheme, _this.tabBarTheme, _this.textButtonTheme, _this.textSelectionTheme, t3, _this.timePickerTheme, _this.toggleButtonsTheme, _this.tooltipTheme, _this.typography, _this.unselectedWidgetColor, _this.useMaterial3, _this.visualDensity);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.ThemeData && B.boolConversionCheck(A.mapEquals(other.adaptationMap, _this.adaptationMap, type$.Type, type$.Adaptation_Object)) && B.boolConversionCheck(J.$eq$(other.applyElevationOverlayColor, _this.applyElevationOverlayColor)) && B.boolConversionCheck(J.$eq$(other.cupertinoOverrideTheme, _this.cupertinoOverrideTheme)) && B.boolConversionCheck(A.mapEquals(other.extensions, _this.extensions, type$.Object, type$.ThemeExtension_dynamic)) && B.boolConversionCheck(J.$eq$(other.inputDecorationTheme, _this.inputDecorationTheme)) && B.boolConversionCheck(J.$eq$(other.materialTapTargetSize, _this.materialTapTargetSize)) && B.boolConversionCheck(J.$eq$(other.pageTransitionsTheme, _this.pageTransitionsTheme)) && B.boolConversionCheck(J.$eq$(other.platform, _this.platform)) && B.boolConversionCheck(J.$eq$(other.scrollbarTheme, _this.scrollbarTheme)) && B.boolConversionCheck(J.$eq$(other.splashFactory, _this.splashFactory)) && B.boolConversionCheck(J.$eq$(other.useMaterial3, _this.useMaterial3)) && B.boolConversionCheck(J.$eq$(other.visualDensity, _this.visualDensity)) && B.boolConversionCheck(J.$eq$(other.canvasColor, _this.canvasColor)) && B.boolConversionCheck(J.$eq$(other.cardColor, _this.cardColor)) && B.boolConversionCheck(J.$eq$(other.colorScheme, _this.colorScheme)) && B.boolConversionCheck(J.$eq$(other.dialogBackgroundColor, _this.dialogBackgroundColor)) && B.boolConversionCheck(J.$eq$(other.disabledColor, _this.disabledColor)) && B.boolConversionCheck(J.$eq$(other.dividerColor, _this.dividerColor)) && B.boolConversionCheck(J.$eq$(other.focusColor, _this.focusColor)) && B.boolConversionCheck(J.$eq$(other.highlightColor, _this.highlightColor)) && B.boolConversionCheck(J.$eq$(other.hintColor, _this.hintColor)) && B.boolConversionCheck(J.$eq$(other.hoverColor, _this.hoverColor)) && B.boolConversionCheck(J.$eq$(other.indicatorColor, _this.indicatorColor)) && B.boolConversionCheck(J.$eq$(other.primaryColor, _this.primaryColor)) && B.boolConversionCheck(J.$eq$(other.primaryColorDark, _this.primaryColorDark)) && B.boolConversionCheck(J.$eq$(other.primaryColorLight, _this.primaryColorLight)) && B.boolConversionCheck(J.$eq$(other.scaffoldBackgroundColor, _this.scaffoldBackgroundColor)) && B.boolConversionCheck(J.$eq$(other.secondaryHeaderColor, _this.secondaryHeaderColor)) && B.boolConversionCheck(J.$eq$(other.shadowColor, _this.shadowColor)) && B.boolConversionCheck(J.$eq$(other.splashColor, _this.splashColor)) && B.boolConversionCheck(J.$eq$(other.unselectedWidgetColor, _this.unselectedWidgetColor)) && B.boolConversionCheck(J.$eq$(other.iconTheme, _this.iconTheme)) && B.boolConversionCheck(J.$eq$(other.primaryIconTheme, _this.primaryIconTheme)) && B.boolConversionCheck(J.$eq$(other.primaryTextTheme, _this.primaryTextTheme)) && B.boolConversionCheck(J.$eq$(other.textTheme, _this.textTheme)) && B.boolConversionCheck(J.$eq$(other.typography, _this.typography)) && B.boolConversionCheck(J.$eq$(other.actionIconTheme, _this.actionIconTheme)) && B.boolConversionCheck(J.$eq$(other.appBarTheme, _this.appBarTheme)) && B.boolConversionCheck(J.$eq$(other.badgeTheme, _this.badgeTheme)) && B.boolConversionCheck(J.$eq$(other.bannerTheme, _this.bannerTheme)) && B.boolConversionCheck(J.$eq$(other.bottomAppBarTheme, _this.bottomAppBarTheme)) && B.boolConversionCheck(J.$eq$(other.bottomNavigationBarTheme, _this.bottomNavigationBarTheme)) && B.boolConversionCheck(J.$eq$(other.bottomSheetTheme, _this.bottomSheetTheme)) && B.boolConversionCheck(J.$eq$(other.buttonTheme, _this.buttonTheme)) && B.boolConversionCheck(J.$eq$(other.cardTheme, _this.cardTheme)) && B.boolConversionCheck(J.$eq$(other.checkboxTheme, _this.checkboxTheme)) && B.boolConversionCheck(J.$eq$(other.chipTheme, _this.chipTheme)) && B.boolConversionCheck(J.$eq$(other.dataTableTheme, _this.dataTableTheme)) && B.boolConversionCheck(J.$eq$(other.datePickerTheme, _this.datePickerTheme)) && B.boolConversionCheck(J.$eq$(other.dialogTheme, _this.dialogTheme)) && B.boolConversionCheck(J.$eq$(other.dividerTheme, _this.dividerTheme)) && B.boolConversionCheck(J.$eq$(other.drawerTheme, _this.drawerTheme)) && B.boolConversionCheck(J.$eq$(other.dropdownMenuTheme, _this.dropdownMenuTheme)) && B.boolConversionCheck(J.$eq$(other.elevatedButtonTheme, _this.elevatedButtonTheme)) && B.boolConversionCheck(J.$eq$(other.expansionTileTheme, _this.expansionTileTheme)) && B.boolConversionCheck(J.$eq$(other.filledButtonTheme, _this.filledButtonTheme)) && B.boolConversionCheck(J.$eq$(other.floatingActionButtonTheme, _this.floatingActionButtonTheme)) && B.boolConversionCheck(J.$eq$(other.iconButtonTheme, _this.iconButtonTheme)) && B.boolConversionCheck(J.$eq$(other.listTileTheme, _this.listTileTheme)) && B.boolConversionCheck(J.$eq$(other.menuBarTheme, _this.menuBarTheme)) && B.boolConversionCheck(J.$eq$(other.menuButtonTheme, _this.menuButtonTheme)) && B.boolConversionCheck(J.$eq$(other.menuTheme, _this.menuTheme)) && B.boolConversionCheck(J.$eq$(other.navigationBarTheme, _this.navigationBarTheme)) && B.boolConversionCheck(J.$eq$(other.navigationDrawerTheme, _this.navigationDrawerTheme)) && B.boolConversionCheck(J.$eq$(other.navigationRailTheme, _this.navigationRailTheme)) && B.boolConversionCheck(J.$eq$(other.outlinedButtonTheme, _this.outlinedButtonTheme)) && B.boolConversionCheck(J.$eq$(other.popupMenuTheme, _this.popupMenuTheme)) && B.boolConversionCheck(J.$eq$(other.progressIndicatorTheme, _this.progressIndicatorTheme)) && B.boolConversionCheck(J.$eq$(other.radioTheme, _this.radioTheme)) && B.boolConversionCheck(J.$eq$(other.searchBarTheme, _this.searchBarTheme)) && B.boolConversionCheck(J.$eq$(other.searchViewTheme, _this.searchViewTheme)) && B.boolConversionCheck(J.$eq$(other.segmentedButtonTheme, _this.segmentedButtonTheme)) && B.boolConversionCheck(J.$eq$(other.sliderTheme, _this.sliderTheme)) && B.boolConversionCheck(J.$eq$(other.snackBarTheme, _this.snackBarTheme)) && B.boolConversionCheck(J.$eq$(other.switchTheme, _this.switchTheme)) && B.boolConversionCheck(J.$eq$(other.tabBarTheme, _this.tabBarTheme)) && B.boolConversionCheck(J.$eq$(other.textButtonTheme, _this.textButtonTheme)) && B.boolConversionCheck(J.$eq$(other.textSelectionTheme, _this.textSelectionTheme)) && B.boolConversionCheck(J.$eq$(other.timePickerTheme, _this.timePickerTheme)) && B.boolConversionCheck(J.$eq$(other.toggleButtonsTheme, _this.toggleButtonsTheme)) && B.boolConversionCheck(J.$eq$(other.tooltipTheme, _this.tooltipTheme)) && B.boolConversionCheck(J.$eq$(other.get$buttonBarTheme(), _this.get$buttonBarTheme()));
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.adaptationMap,
        t2 = B.List_List$of(t1.get$keys(), true, type$.nullable_Object),
        t3 = J.getInterceptor$ax(t2);
      t3.addAll$1(t2, t1.get$values());
      t3.add$1(t2, _this.applyElevationOverlayColor);
      t3.add$1(t2, _this.cupertinoOverrideTheme);
      t1 = _this.extensions;
      t3.addAll$1(t2, t1.get$keys());
      t3.addAll$1(t2, t1.get$values());
      t3.add$1(t2, _this.inputDecorationTheme);
      t3.add$1(t2, _this.materialTapTargetSize);
      t3.add$1(t2, _this.pageTransitionsTheme);
      t3.add$1(t2, _this.platform);
      t3.add$1(t2, _this.scrollbarTheme);
      t3.add$1(t2, _this.splashFactory);
      t3.add$1(t2, _this.useMaterial3);
      t3.add$1(t2, _this.visualDensity);
      t3.add$1(t2, _this.canvasColor);
      t3.add$1(t2, _this.cardColor);
      t3.add$1(t2, _this.colorScheme);
      t3.add$1(t2, _this.dialogBackgroundColor);
      t3.add$1(t2, _this.disabledColor);
      t3.add$1(t2, _this.dividerColor);
      t3.add$1(t2, _this.focusColor);
      t3.add$1(t2, _this.highlightColor);
      t3.add$1(t2, _this.hintColor);
      t3.add$1(t2, _this.hoverColor);
      t3.add$1(t2, _this.indicatorColor);
      t3.add$1(t2, _this.primaryColor);
      t3.add$1(t2, _this.primaryColorDark);
      t3.add$1(t2, _this.primaryColorLight);
      t3.add$1(t2, _this.scaffoldBackgroundColor);
      t3.add$1(t2, _this.secondaryHeaderColor);
      t3.add$1(t2, _this.shadowColor);
      t3.add$1(t2, _this.splashColor);
      t3.add$1(t2, _this.unselectedWidgetColor);
      t3.add$1(t2, _this.iconTheme);
      t3.add$1(t2, _this.primaryIconTheme);
      t3.add$1(t2, _this.primaryTextTheme);
      t3.add$1(t2, _this.textTheme);
      t3.add$1(t2, _this.typography);
      t3.add$1(t2, _this.actionIconTheme);
      t3.add$1(t2, _this.appBarTheme);
      t3.add$1(t2, _this.badgeTheme);
      t3.add$1(t2, _this.bannerTheme);
      t3.add$1(t2, _this.bottomAppBarTheme);
      t3.add$1(t2, _this.bottomNavigationBarTheme);
      t3.add$1(t2, _this.bottomSheetTheme);
      t3.add$1(t2, _this.buttonTheme);
      t3.add$1(t2, _this.cardTheme);
      t3.add$1(t2, _this.checkboxTheme);
      t3.add$1(t2, _this.chipTheme);
      t3.add$1(t2, _this.dataTableTheme);
      t3.add$1(t2, _this.datePickerTheme);
      t3.add$1(t2, _this.dialogTheme);
      t3.add$1(t2, _this.dividerTheme);
      t3.add$1(t2, _this.drawerTheme);
      t3.add$1(t2, _this.dropdownMenuTheme);
      t3.add$1(t2, _this.elevatedButtonTheme);
      t3.add$1(t2, _this.expansionTileTheme);
      t3.add$1(t2, _this.filledButtonTheme);
      t3.add$1(t2, _this.floatingActionButtonTheme);
      t3.add$1(t2, _this.iconButtonTheme);
      t3.add$1(t2, _this.listTileTheme);
      t3.add$1(t2, _this.menuBarTheme);
      t3.add$1(t2, _this.menuButtonTheme);
      t3.add$1(t2, _this.menuTheme);
      t3.add$1(t2, _this.navigationBarTheme);
      t3.add$1(t2, _this.navigationDrawerTheme);
      t3.add$1(t2, _this.navigationRailTheme);
      t3.add$1(t2, _this.outlinedButtonTheme);
      t3.add$1(t2, _this.popupMenuTheme);
      t3.add$1(t2, _this.progressIndicatorTheme);
      t3.add$1(t2, _this.radioTheme);
      t3.add$1(t2, _this.searchBarTheme);
      t3.add$1(t2, _this.searchViewTheme);
      t3.add$1(t2, _this.segmentedButtonTheme);
      t3.add$1(t2, _this.sliderTheme);
      t3.add$1(t2, _this.snackBarTheme);
      t3.add$1(t2, _this.switchTheme);
      t3.add$1(t2, _this.tabBarTheme);
      t3.add$1(t2, _this.textButtonTheme);
      t3.add$1(t2, _this.textSelectionTheme);
      t3.add$1(t2, _this.timePickerTheme);
      t3.add$1(t2, _this.toggleButtonsTheme);
      t3.add$1(t2, _this.tooltipTheme);
      t3.add$1(t2, _this.get$buttonBarTheme());
      return B.Object_hashAll(t2);
    },
    debugFillProperties$1(properties) {
      var defaultData, t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      defaultData = A.ThemeData_ThemeData$fallback();
      properties.add$1(0, E.IterableProperty$("adaptations", _this.adaptationMap.get$values(), defaultData.adaptationMap.get$values(), "[]", D.DiagnosticLevel_2, D.DiagnosticsTreeStyle_8, type$.Adaptation_dynamic));
      t1 = type$.bool;
      properties.add$1(0, E.DiagnosticsProperty$("applyElevationOverlayColor", _this.applyElevationOverlayColor, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("cupertinoOverrideTheme", _this.cupertinoOverrideTheme, true, defaultData.cupertinoOverrideTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.NoDefaultCupertinoThemeData));
      properties.add$1(0, E.IterableProperty$("extensions", _this.extensions.get$values(), defaultData.extensions.get$values(), "[]", D.DiagnosticLevel_2, D.DiagnosticsTreeStyle_8, type$.ThemeExtension_dynamic));
      properties.add$1(0, E.DiagnosticsProperty$("inputDecorationTheme", _this.inputDecorationTheme, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.InputDecorationTheme));
      properties.add$1(0, E.DiagnosticsProperty$("materialTapTargetSize", _this.materialTapTargetSize, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.MaterialTapTargetSize));
      properties.add$1(0, E.DiagnosticsProperty$("pageTransitionsTheme", _this.pageTransitionsTheme, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.PageTransitionsTheme));
      properties.add$1(0, E.EnumProperty$("platform", _this.platform, E.defaultTargetPlatform(), D.DiagnosticLevel_2, type$.TargetPlatform));
      properties.add$1(0, E.DiagnosticsProperty$("scrollbarTheme", _this.scrollbarTheme, true, defaultData.scrollbarTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ScrollbarThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("splashFactory", _this.splashFactory, true, defaultData.splashFactory, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.InteractiveInkFeatureFactory));
      properties.add$1(0, E.DiagnosticsProperty$("useMaterial3", _this.useMaterial3, true, defaultData.useMaterial3, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("visualDensity", _this.visualDensity, true, defaultData.visualDensity, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.VisualDensity));
      properties.add$1(0, A.ColorProperty$("canvasColor", _this.canvasColor, defaultData.canvasColor, D.DiagnosticLevel_2, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("cardColor", _this.cardColor, defaultData.cardColor, D.DiagnosticLevel_2, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("colorScheme", _this.colorScheme, true, defaultData.colorScheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ColorScheme));
      properties.add$1(0, A.ColorProperty$("dialogBackgroundColor", _this.dialogBackgroundColor, defaultData.dialogBackgroundColor, D.DiagnosticLevel_2, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("disabledColor", _this.disabledColor, defaultData.disabledColor, D.DiagnosticLevel_2, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("dividerColor", _this.dividerColor, defaultData.dividerColor, D.DiagnosticLevel_2, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("focusColor", _this.focusColor, defaultData.focusColor, D.DiagnosticLevel_2, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("highlightColor", _this.highlightColor, defaultData.highlightColor, D.DiagnosticLevel_2, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("hintColor", _this.hintColor, defaultData.hintColor, D.DiagnosticLevel_2, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("hoverColor", _this.hoverColor, defaultData.hoverColor, D.DiagnosticLevel_2, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("indicatorColor", _this.indicatorColor, defaultData.indicatorColor, D.DiagnosticLevel_2, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("primaryColorDark", _this.primaryColorDark, defaultData.primaryColorDark, D.DiagnosticLevel_2, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("primaryColorLight", _this.primaryColorLight, defaultData.primaryColorLight, D.DiagnosticLevel_2, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("primaryColor", _this.primaryColor, defaultData.primaryColor, D.DiagnosticLevel_2, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("scaffoldBackgroundColor", _this.scaffoldBackgroundColor, defaultData.scaffoldBackgroundColor, D.DiagnosticLevel_2, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("secondaryHeaderColor", _this.secondaryHeaderColor, defaultData.secondaryHeaderColor, D.DiagnosticLevel_2, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("shadowColor", _this.shadowColor, defaultData.shadowColor, D.DiagnosticLevel_2, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("splashColor", _this.splashColor, defaultData.splashColor, D.DiagnosticLevel_2, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("unselectedWidgetColor", _this.unselectedWidgetColor, defaultData.unselectedWidgetColor, D.DiagnosticLevel_2, true, D.DiagnosticsTreeStyle_8));
      t1 = type$.IconThemeData;
      properties.add$1(0, E.DiagnosticsProperty$("iconTheme", _this.iconTheme, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("primaryIconTheme", _this.primaryIconTheme, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      t1 = type$.TextTheme;
      properties.add$1(0, E.DiagnosticsProperty$("primaryTextTheme", _this.primaryTextTheme, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("textTheme", _this.textTheme, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("typography", _this.typography, true, defaultData.typography, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Typography));
      properties.add$1(0, E.DiagnosticsProperty$("actionIconTheme", _this.actionIconTheme, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ActionIconThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("appBarTheme", _this.appBarTheme, true, defaultData.appBarTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.AppBarTheme));
      properties.add$1(0, E.DiagnosticsProperty$("badgeTheme", _this.badgeTheme, true, defaultData.badgeTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BadgeThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("bannerTheme", _this.bannerTheme, true, defaultData.bannerTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.MaterialBannerThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("bottomAppBarTheme", _this.bottomAppBarTheme, true, defaultData.bottomAppBarTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BottomAppBarTheme));
      properties.add$1(0, E.DiagnosticsProperty$("bottomNavigationBarTheme", _this.bottomNavigationBarTheme, true, defaultData.bottomNavigationBarTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BottomNavigationBarThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("bottomSheetTheme", _this.bottomSheetTheme, true, defaultData.bottomSheetTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BottomSheetThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("buttonTheme", _this.buttonTheme, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ButtonThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("cardTheme", _this.cardTheme, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.CardTheme));
      properties.add$1(0, E.DiagnosticsProperty$("checkboxTheme", _this.checkboxTheme, true, defaultData.checkboxTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.CheckboxThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("chipTheme", _this.chipTheme, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ChipThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("dataTableTheme", _this.dataTableTheme, true, defaultData.dataTableTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.DataTableThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("datePickerTheme", _this.datePickerTheme, true, defaultData.datePickerTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.DatePickerThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("dialogTheme", _this.dialogTheme, true, defaultData.dialogTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.DialogTheme));
      properties.add$1(0, E.DiagnosticsProperty$("dividerTheme", _this.dividerTheme, true, defaultData.dividerTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.DividerThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("drawerTheme", _this.drawerTheme, true, defaultData.drawerTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.DrawerThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("dropdownMenuTheme", _this.dropdownMenuTheme, true, defaultData.dropdownMenuTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.DropdownMenuThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("elevatedButtonTheme", _this.elevatedButtonTheme, true, defaultData.elevatedButtonTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ElevatedButtonThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("expansionTileTheme", _this.expansionTileTheme, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ExpansionTileThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("filledButtonTheme", _this.filledButtonTheme, true, defaultData.filledButtonTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FilledButtonThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("floatingActionButtonTheme", _this.floatingActionButtonTheme, true, defaultData.floatingActionButtonTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FloatingActionButtonThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("iconButtonTheme", _this.iconButtonTheme, true, defaultData.iconButtonTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.IconButtonThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("listTileTheme", _this.listTileTheme, true, defaultData.listTileTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ListTileThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("menuBarTheme", _this.menuBarTheme, true, defaultData.menuBarTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.MenuBarThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("menuButtonTheme", _this.menuButtonTheme, true, defaultData.menuButtonTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.MenuButtonThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("menuTheme", _this.menuTheme, true, defaultData.menuTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.MenuThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("navigationBarTheme", _this.navigationBarTheme, true, defaultData.navigationBarTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.NavigationBarThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("navigationDrawerTheme", _this.navigationDrawerTheme, true, defaultData.navigationDrawerTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.NavigationDrawerThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("navigationRailTheme", _this.navigationRailTheme, true, defaultData.navigationRailTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.NavigationRailThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("outlinedButtonTheme", _this.outlinedButtonTheme, true, defaultData.outlinedButtonTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.OutlinedButtonThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("popupMenuTheme", _this.popupMenuTheme, true, defaultData.popupMenuTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.PopupMenuThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("progressIndicatorTheme", _this.progressIndicatorTheme, true, defaultData.progressIndicatorTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ProgressIndicatorThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("radioTheme", _this.radioTheme, true, defaultData.radioTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.RadioThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("searchBarTheme", _this.searchBarTheme, true, defaultData.searchBarTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.SearchBarThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("searchViewTheme", _this.searchViewTheme, true, defaultData.searchViewTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.SearchViewThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("segmentedButtonTheme", _this.segmentedButtonTheme, true, defaultData.segmentedButtonTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.SegmentedButtonThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("sliderTheme", _this.sliderTheme, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.SliderThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("snackBarTheme", _this.snackBarTheme, true, defaultData.snackBarTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.SnackBarThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("switchTheme", _this.switchTheme, true, defaultData.switchTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.SwitchThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("tabBarTheme", _this.tabBarTheme, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TabBarTheme));
      properties.add$1(0, E.DiagnosticsProperty$("textButtonTheme", _this.textButtonTheme, true, defaultData.textButtonTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextButtonThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("textSelectionTheme", _this.textSelectionTheme, true, defaultData.textSelectionTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextSelectionThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("timePickerTheme", _this.timePickerTheme, true, defaultData.timePickerTheme, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TimePickerThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("toggleButtonsTheme", _this.toggleButtonsTheme, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ToggleButtonsThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("tooltipTheme", _this.tooltipTheme, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TooltipThemeData));
      properties.add$1(0, E.DiagnosticsProperty$("buttonBarTheme", _this.get$buttonBarTheme(), true, defaultData.get$buttonBarTheme(), _null, _null, _null, D.DiagnosticLevel_2, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ButtonBarThemeData));
    },
    $isDiagnosticable: 1
  };
  A.MaterialBasedCupertinoThemeData.prototype = {
    get$brightness() {
      var t1 = this._cupertinoOverrideTheme.get$brightness();
      return t1 == null ? this._materialTheme.get$brightness() : t1;
    },
    get$primaryColor() {
      var t1 = this._cupertinoOverrideTheme.get$primaryColor();
      return t1 == null ? this._materialTheme.colorScheme.primary : t1;
    },
    get$primaryContrastingColor() {
      var t1 = this._cupertinoOverrideTheme.get$primaryContrastingColor();
      return t1 == null ? this._materialTheme.colorScheme.onPrimary : t1;
    },
    get$scaffoldBackgroundColor() {
      var t1 = this._cupertinoOverrideTheme.get$scaffoldBackgroundColor();
      return t1 == null ? this._materialTheme.scaffoldBackgroundColor : t1;
    },
    resolveFrom$1(context) {
      return A.MaterialBasedCupertinoThemeData$_(this._materialTheme, this._cupertinoOverrideTheme.resolveFrom$1(type$.BuildContext._as(context)));
    }
  };
  A.CupertinoBasedMaterialThemeData.prototype = {};
  A._IdentityThemeDataCacheKey.prototype = {
    get$hashCode(_) {
      var t1 = B.identityHashCode(this.baseTheme),
        t2 = B.identityHashCode(this.localTextGeometry);
      if (typeof t1 !== "number")
        return t1.$xor();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return (t1 ^ t2) >>> 0;
    },
    $eq(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      t1 = false;
      if (other instanceof A._IdentityThemeDataCacheKey) {
        t2 = other.baseTheme;
        t3 = this.baseTheme;
        if (t2 == null ? t3 == null : t2 === t3) {
          t1 = other.localTextGeometry;
          t2 = this.localTextGeometry;
          t2 = t1 == null ? t2 == null : t1 === t2;
          t1 = t2;
        }
      }
      return t1;
    }
  };
  A._FifoCache.prototype = {
    putIfAbsent$2(key, loader) {
      var t2, result, t3,
        t1 = this.$ti;
      t1._precomputed1._as(key);
      t1._eval$1("2()")._as(loader);
      t1 = this._theme_data$_cache;
      t2 = J.getInterceptor$asx(t1);
      result = t2.$index(t1, key);
      if (result != null)
        return result;
      if (B.boolConversionCheck(J.$eq$(t2.get$length(t1), this._maximumSize)))
        t2.remove$1(t1, J.get$first$ax(t1.get$keys()));
      t3 = loader.call$0();
      t2.$indexSet(t1, key, t3);
      return t3;
    }
  };
  A.VisualDensity.prototype = {
    get$baseSizeAdjustment() {
      return E.Offset$(this.horizontal, this.vertical).$mul(0, 4);
    },
    effectiveConstraints$1(constraints) {
      var t1, t2, t3;
      type$.BoxConstraints._as(constraints);
      t1 = constraints.minWidth;
      t2 = this.get$baseSizeAdjustment().get$dx();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t2 = E.clampDouble(t1 + t2, 0, constraints.maxWidth);
      t1 = constraints.minHeight;
      t3 = this.get$baseSizeAdjustment().get$dy();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t3 !== "number")
        return B.iae(t3);
      return constraints.copyWith$2$minHeight$minWidth(E.clampDouble(t1 + t3, 0, constraints.maxHeight), t2);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.VisualDensity && B.boolConversionCheck(J.$eq$(other.horizontal, this.horizontal)) && B.boolConversionCheck(J.$eq$(other.vertical, this.vertical));
    },
    get$hashCode(_) {
      return B.Object_hash(this.horizontal, this.vertical, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DoubleProperty$("horizontal", this.horizontal, 0, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("vertical", this.vertical, 0, _null, D.DiagnosticLevel_3, _null, _null));
    },
    toStringShort$0() {
      return B.S(this.super$Diagnosticable$toStringShort()) + "(h: " + B.S(E.debugFormatDouble(this.horizontal)) + ", v: " + B.S(E.debugFormatDouble(this.vertical)) + ")";
    },
    $isDiagnosticable: 1
  };
  A._ThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A._VisualDensity_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.TimePickerThemeData.prototype = {
    get$dayPeriodColor() {
      var t2,
        t1 = this._dayPeriodColor;
      if (t1 != null)
        t2 = t1 instanceof A._WidgetStateColor;
      else
        t2 = true;
      if (t2)
        return t1;
      return A.WidgetStateColor_resolveWith(new A.TimePickerThemeData_dayPeriodColor_closure(this));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hashAll([_this.backgroundColor, _this.cancelButtonStyle, _this.confirmButtonStyle, _this.dayPeriodBorderSide, _this.get$dayPeriodColor(), _this.dayPeriodShape, _this.dayPeriodTextColor, _this.dayPeriodTextStyle, _this.dialBackgroundColor, _this.dialHandColor, _this.dialTextColor, _this.dialTextStyle, _this.elevation, _this.entryModeIconColor, _this.helpTextStyle, _this.hourMinuteColor, _this.hourMinuteShape, _this.hourMinuteTextColor, _this.hourMinuteTextStyle, _this.inputDecorationTheme, _this.padding, _this.shape, _this.timeSelectorSeparatorColor, _this.timeSelectorSeparatorTextStyle]);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.TimePickerThemeData && B.boolConversionCheck(J.$eq$(other.backgroundColor, _this.backgroundColor)) && B.boolConversionCheck(J.$eq$(other.cancelButtonStyle, _this.cancelButtonStyle)) && B.boolConversionCheck(J.$eq$(other.confirmButtonStyle, _this.confirmButtonStyle)) && B.boolConversionCheck(J.$eq$(other.dayPeriodBorderSide, _this.dayPeriodBorderSide)) && B.boolConversionCheck(J.$eq$(other.get$dayPeriodColor(), _this.get$dayPeriodColor())) && B.boolConversionCheck(J.$eq$(other.dayPeriodShape, _this.dayPeriodShape)) && B.boolConversionCheck(J.$eq$(other.dayPeriodTextColor, _this.dayPeriodTextColor)) && B.boolConversionCheck(J.$eq$(other.dayPeriodTextStyle, _this.dayPeriodTextStyle)) && B.boolConversionCheck(J.$eq$(other.dialBackgroundColor, _this.dialBackgroundColor)) && B.boolConversionCheck(J.$eq$(other.dialHandColor, _this.dialHandColor)) && B.boolConversionCheck(J.$eq$(other.dialTextColor, _this.dialTextColor)) && B.boolConversionCheck(J.$eq$(other.dialTextStyle, _this.dialTextStyle)) && B.boolConversionCheck(J.$eq$(other.elevation, _this.elevation)) && B.boolConversionCheck(J.$eq$(other.entryModeIconColor, _this.entryModeIconColor)) && B.boolConversionCheck(J.$eq$(other.helpTextStyle, _this.helpTextStyle)) && B.boolConversionCheck(J.$eq$(other.hourMinuteColor, _this.hourMinuteColor)) && B.boolConversionCheck(J.$eq$(other.hourMinuteShape, _this.hourMinuteShape)) && B.boolConversionCheck(J.$eq$(other.hourMinuteTextColor, _this.hourMinuteTextColor)) && B.boolConversionCheck(J.$eq$(other.hourMinuteTextStyle, _this.hourMinuteTextStyle)) && B.boolConversionCheck(J.$eq$(other.inputDecorationTheme, _this.inputDecorationTheme)) && B.boolConversionCheck(J.$eq$(other.padding, _this.padding)) && B.boolConversionCheck(J.$eq$(other.shape, _this.shape)) && B.boolConversionCheck(J.$eq$(other.timeSelectorSeparatorColor, _this.timeSelectorSeparatorColor)) && B.boolConversionCheck(J.$eq$(other.timeSelectorSeparatorTextStyle, _this.timeSelectorSeparatorTextStyle));
    },
    debugFillProperties$1(properties) {
      var t1, t2, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, A.ColorProperty$("backgroundColor", _this.backgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      t1 = type$.ButtonStyle;
      properties.add$1(0, E.DiagnosticsProperty$("cancelButtonStyle", _this.cancelButtonStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("confirmButtonStyle", _this.confirmButtonStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("dayPeriodBorderSide", _this.dayPeriodBorderSide, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BorderSide));
      properties.add$1(0, A.ColorProperty$("dayPeriodColor", _this.get$dayPeriodColor(), _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      t1 = type$.ShapeBorder;
      properties.add$1(0, E.DiagnosticsProperty$("dayPeriodShape", _this.dayPeriodShape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, A.ColorProperty$("dayPeriodTextColor", _this.dayPeriodTextColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      t2 = type$.TextStyle;
      properties.add$1(0, E.DiagnosticsProperty$("dayPeriodTextStyle", _this.dayPeriodTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, A.ColorProperty$("dialBackgroundColor", _this.dialBackgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("dialHandColor", _this.dialHandColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("dialTextColor", _this.dialTextColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("dialTextStyle", _this.dialTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.nullable_TextStyle));
      properties.add$1(0, E.DoubleProperty$("elevation", _this.elevation, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.ColorProperty$("entryModeIconColor", _this.entryModeIconColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("helpTextStyle", _this.helpTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, A.ColorProperty$("hourMinuteColor", _this.hourMinuteColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("hourMinuteShape", _this.hourMinuteShape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, A.ColorProperty$("hourMinuteTextColor", _this.hourMinuteTextColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("hourMinuteTextStyle", _this.hourMinuteTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, E.DiagnosticsProperty$("inputDecorationTheme", _this.inputDecorationTheme, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.InputDecorationTheme));
      properties.add$1(0, E.DiagnosticsProperty$("padding", _this.padding, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.EdgeInsetsGeometry));
      properties.add$1(0, E.DiagnosticsProperty$("shape", _this.shape, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("timeSelectorSeparatorColor", _this.timeSelectorSeparatorColor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_Color));
      properties.add$1(0, E.DiagnosticsProperty$("timeSelectorSeparatorTextStyle", _this.timeSelectorSeparatorTextStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.WidgetStateProperty_nullable_TextStyle));
    },
    $isDiagnosticable: 1
  };
  A._TimePickerThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.ToggleButtonsThemeData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.textStyle, _this.constraints, _this.color, _this.selectedColor, _this.disabledColor, _this.fillColor, _this.focusColor, _this.highlightColor, _this.hoverColor, _this.splashColor, _this.borderColor, _this.selectedBorderColor, _this.disabledBorderColor, _this.borderRadius, _this.borderWidth, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.ToggleButtonsThemeData && B.boolConversionCheck(J.$eq$(other.textStyle, _this.textStyle)) && B.boolConversionCheck(J.$eq$(other.constraints, _this.constraints)) && B.boolConversionCheck(J.$eq$(other.color, _this.color)) && B.boolConversionCheck(J.$eq$(other.selectedColor, _this.selectedColor)) && B.boolConversionCheck(J.$eq$(other.disabledColor, _this.disabledColor)) && B.boolConversionCheck(J.$eq$(other.fillColor, _this.fillColor)) && B.boolConversionCheck(J.$eq$(other.focusColor, _this.focusColor)) && B.boolConversionCheck(J.$eq$(other.highlightColor, _this.highlightColor)) && B.boolConversionCheck(J.$eq$(other.hoverColor, _this.hoverColor)) && B.boolConversionCheck(J.$eq$(other.splashColor, _this.splashColor)) && B.boolConversionCheck(J.$eq$(other.borderColor, _this.borderColor)) && B.boolConversionCheck(J.$eq$(other.selectedBorderColor, _this.selectedBorderColor)) && B.boolConversionCheck(J.$eq$(other.disabledBorderColor, _this.disabledBorderColor)) && B.boolConversionCheck(J.$eq$(other.borderRadius, _this.borderRadius)) && B.boolConversionCheck(J.$eq$(other.borderWidth, _this.borderWidth));
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      t1 = _this.textStyle;
      if (t1 != null)
        t1.debugFillProperties$2$prefix(properties, "textStyle.");
      properties.add$1(0, E.DiagnosticsProperty$("constraints", _this.constraints, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BoxConstraints));
      properties.add$1(0, A.ColorProperty$("color", _this.color, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("selectedColor", _this.selectedColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("disabledColor", _this.disabledColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("fillColor", _this.fillColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("focusColor", _this.focusColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("highlightColor", _this.highlightColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("hoverColor", _this.hoverColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("splashColor", _this.splashColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("borderColor", _this.borderColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("selectedBorderColor", _this.selectedBorderColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("disabledBorderColor", _this.disabledBorderColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("borderRadius", _this.borderRadius, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BorderRadius));
      properties.add$1(0, E.DoubleProperty$("borderWidth", _this.borderWidth, _null, _null, D.DiagnosticLevel_3, _null, _null));
    },
    $isDiagnosticable: 1
  };
  A._ToggleButtonsThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.TooltipThemeData.prototype = {
    get$hashCode(_) {
      var _this = this, _null = null;
      return B.Object_hash(_this.height, _this.padding, _this.margin, _this.verticalOffset, _this.preferBelow, _this.excludeFromSemantics, _this.decoration, _this.textStyle, _this.textAlign, _null, _null, _null, _null, _null, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      t1 = false;
      if (other instanceof A.TooltipThemeData)
        if (B.boolConversionCheck(J.$eq$(other.height, _this.height)))
          if (B.boolConversionCheck(J.$eq$(other.padding, _this.padding)))
            if (B.boolConversionCheck(J.$eq$(other.margin, _this.margin)))
              if (B.boolConversionCheck(J.$eq$(other.verticalOffset, _this.verticalOffset)))
                if (B.boolConversionCheck(J.$eq$(other.preferBelow, _this.preferBelow)))
                  if (B.boolConversionCheck(J.$eq$(other.excludeFromSemantics, _this.excludeFromSemantics)))
                    if (B.boolConversionCheck(J.$eq$(other.decoration, _this.decoration)))
                      if (B.boolConversionCheck(J.$eq$(other.textStyle, _this.textStyle))) {
                        t1 = B.boolConversionCheck(J.$eq$(other.textAlign, _this.textAlign));
                        t1;
                      }
      return t1;
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DoubleProperty$("height", _this.height, _null, _null, D.DiagnosticLevel_3, _null, _null));
      t1 = type$.EdgeInsetsGeometry;
      properties.add$1(0, E.DiagnosticsProperty$("padding", _this.padding, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("margin", _this.margin, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DoubleProperty$("vertical offset", _this.verticalOffset, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.FlagProperty$("position", _null, "above", "below", D.DiagnosticLevel_3, true, _this.preferBelow));
      properties.add$1(0, E.FlagProperty$("semantics", _null, _null, "excluded", D.DiagnosticLevel_3, true, _this.excludeFromSemantics));
      properties.add$1(0, E.DiagnosticsProperty$("decoration", _this.decoration, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Decoration));
      properties.add$1(0, E.DiagnosticsProperty$("textStyle", _this.textStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextStyle));
      properties.add$1(0, E.DiagnosticsProperty$("textAlign", _this.textAlign, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextAlign));
      t1 = type$.Duration;
      properties.add$1(0, E.DiagnosticsProperty$("wait duration", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("show duration", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("exit duration", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("triggerMode", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TooltipTriggerMode));
      properties.add$1(0, E.FlagProperty$("enableFeedback", _null, _null, "true", D.DiagnosticLevel_3, true, _null));
    },
    $isDiagnosticable: 1
  };
  A._TooltipThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.ScriptCategory.prototype = {
    _enumToString$0() {
      return "ScriptCategory." + B.S(this._core$_name);
    }
  };
  A.Typography.prototype = {
    geometryThemeFor$1(category) {
      var t1;
      switch (type$.ScriptCategory._as(category).index) {
        case 0:
          t1 = this.englishLike;
          break;
        case 1:
          t1 = this.dense;
          break;
        case 2:
          t1 = this.tall;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    copyWith$2$black$white(black, white) {
      var t2, _this = this,
        t1 = type$.nullable_TextTheme;
      t1._as(black);
      t1._as(white);
      t1 = black == null ? _this.black : black;
      t2 = white == null ? _this.white : white;
      return A.Typography$_(t1, t2, _this.englishLike, _this.dense, _this.tall);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.Typography && B.boolConversionCheck(J.$eq$(other.black, _this.black)) && B.boolConversionCheck(J.$eq$(other.white, _this.white)) && B.boolConversionCheck(J.$eq$(other.englishLike, _this.englishLike)) && B.boolConversionCheck(J.$eq$(other.dense, _this.dense)) && B.boolConversionCheck(J.$eq$(other.tall, _this.tall));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.black, _this.white, _this.englishLike, _this.dense, _this.tall, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    debugFillProperties$1(properties) {
      var defaultTypography, t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      defaultTypography = A.Typography_Typography$material2014(D.TargetPlatform_0);
      t1 = type$.TextTheme;
      properties.add$1(0, E.DiagnosticsProperty$("black", _this.black, true, defaultTypography.black, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("white", _this.white, true, defaultTypography.white, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("englishLike", _this.englishLike, true, defaultTypography.englishLike, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("dense", _this.dense, true, defaultTypography.dense, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("tall", _this.tall, true, defaultTypography.tall, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
    },
    $isDiagnosticable: 1
  };
  A._Typography_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.AlignmentGeometry.prototype = {
    toString$0(_) {
      var _this = this;
      if (B.boolConversionCheck(J.$eq$(_this.get$_alignment$_start(), 0)))
        return A.Alignment__stringify(_this.get$_x(), _this.get$_y());
      if (B.boolConversionCheck(J.$eq$(_this.get$_x(), 0)))
        return A.AlignmentDirectional__stringify(_this.get$_alignment$_start(), _this.get$_y());
      return B.S(A.Alignment__stringify(_this.get$_x(), _this.get$_y())) + " + " + B.S(A.AlignmentDirectional__stringify(_this.get$_alignment$_start(), 0));
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.AlignmentGeometry && B.boolConversionCheck(J.$eq$(other.get$_x(), this.get$_x())) && B.boolConversionCheck(J.$eq$(other.get$_alignment$_start(), this.get$_alignment$_start())) && B.boolConversionCheck(J.$eq$(other.get$_y(), this.get$_y()));
    },
    get$hashCode(_) {
      return B.Object_hash(this.get$_x(), this.get$_alignment$_start(), this.get$_y(), F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    }
  };
  A.Alignment.prototype = {
    get$_x() {
      return this.x;
    },
    get$_alignment$_start() {
      return 0;
    },
    get$_y() {
      return this.y;
    },
    $sub(_, other) {
      var t1, t2, t3, t4;
      type$.Alignment._as(other);
      t1 = this.x;
      t2 = other.x;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = this.y;
      t4 = other.y;
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return A.Alignment$(t1 - t2, t3 - t4);
    },
    $add(_, other) {
      var t1, t2, t3, t4;
      type$.Alignment._as(other);
      t1 = this.x;
      t2 = other.x;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = this.y;
      t4 = other.y;
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return A.Alignment$(t1 + t2, t3 + t4);
    },
    $mul(_, other) {
      var t1, t2;
      B._asDouble(other);
      t1 = this.x;
      if (typeof t1 !== "number")
        return t1.$mul();
      t2 = this.y;
      if (typeof t2 !== "number")
        return t2.$mul();
      return A.Alignment$(t1 * other, t2 * other);
    },
    alongOffset$1(other) {
      var t1, centerX, centerY, t2;
      type$.Offset._as(other);
      t1 = other.get$dx();
      if (typeof t1 !== "number")
        return t1.$div();
      centerX = t1 / 2;
      t1 = other.get$dy();
      if (typeof t1 !== "number")
        return t1.$div();
      centerY = t1 / 2;
      t1 = this.x;
      if (typeof t1 !== "number")
        return t1.$mul();
      t2 = this.y;
      if (typeof t2 !== "number")
        return t2.$mul();
      return E.Offset$(centerX + t1 * centerX, centerY + t2 * centerY);
    },
    inscribe$2(size, rect) {
      var t1, t2, halfWidthDelta, halfHeightDelta, t3, t4;
      type$.Size._as(size);
      type$.Rect._as(rect);
      t1 = rect.get$width();
      t2 = size.get$width();
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      halfWidthDelta = (t1 - t2) / 2;
      t2 = rect.get$height();
      t1 = size.get$height();
      if (typeof t2 !== "number")
        return t2.$sub();
      if (typeof t1 !== "number")
        return B.iae(t1);
      halfHeightDelta = (t2 - t1) / 2;
      t1 = rect.left;
      if (typeof t1 !== "number")
        return t1.$add();
      t2 = this.x;
      if (typeof t2 !== "number")
        return t2.$mul();
      t3 = rect.top;
      if (typeof t3 !== "number")
        return t3.$add();
      t4 = this.y;
      if (typeof t4 !== "number")
        return t4.$mul();
      return E.Rect$fromLTWH(t1 + halfWidthDelta + t2 * halfWidthDelta, t3 + halfHeightDelta + t4 * halfHeightDelta, size.get$width(), size.get$height());
    },
    resolve$1(direction) {
      type$.nullable_TextDirection._as(direction);
      return this;
    },
    toString$0(_) {
      return A.Alignment__stringify(this.x, this.y);
    }
  };
  A.AlignmentDirectional.prototype = {
    get$_x() {
      return 0;
    },
    get$_alignment$_start() {
      return this.start;
    },
    get$_y() {
      return this.y;
    },
    $sub(_, other) {
      var t1, t2, t3, t4;
      type$.AlignmentDirectional._as(other);
      t1 = this.start;
      t2 = other.start;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = this.y;
      t4 = other.y;
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return A.AlignmentDirectional$(t1 - t2, t3 - t4);
    },
    $add(_, other) {
      var t1, t2, t3, t4;
      type$.AlignmentDirectional._as(other);
      t1 = this.start;
      t2 = other.start;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = this.y;
      t4 = other.y;
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return A.AlignmentDirectional$(t1 + t2, t3 + t4);
    },
    $mul(_, other) {
      var t1, t2;
      B._asDouble(other);
      t1 = this.start;
      if (typeof t1 !== "number")
        return t1.$mul();
      t2 = this.y;
      if (typeof t2 !== "number")
        return t2.$mul();
      return A.AlignmentDirectional$(t1 * other, t2 * other);
    },
    resolve$1(direction) {
      var t1, _this = this;
      switch (type$.nullable_TextDirection._as(direction).index) {
        case 0:
          t1 = A.Alignment$(J.$negate$in(_this.start), _this.y);
          break;
        case 1:
          t1 = A.Alignment$(_this.start, _this.y);
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    toString$0(_) {
      return A.AlignmentDirectional__stringify(this.start, this.y);
    }
  };
  A._MixedAlignment.prototype = {
    $mul(_, other) {
      var t1, t2, t3;
      B._asDouble(other);
      t1 = this._x;
      if (typeof t1 !== "number")
        return t1.$mul();
      t2 = this._alignment$_start;
      if (typeof t2 !== "number")
        return t2.$mul();
      t3 = this._y;
      if (typeof t3 !== "number")
        return t3.$mul();
      return A._MixedAlignment$(t1 * other, t2 * other, t3 * other);
    },
    resolve$1(direction) {
      var t1, t2, _this = this;
      switch (type$.nullable_TextDirection._as(direction).index) {
        case 0:
          t1 = _this._x;
          t2 = _this._alignment$_start;
          if (typeof t1 !== "number")
            return t1.$sub();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t2 = A.Alignment$(t1 - t2, _this._y);
          t1 = t2;
          break;
        case 1:
          t1 = _this._x;
          t2 = _this._alignment$_start;
          if (typeof t1 !== "number")
            return t1.$add();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t2 = A.Alignment$(t1 + t2, _this._y);
          t1 = t2;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    get$_x() {
      return this._x;
    },
    get$_alignment$_start() {
      return this._alignment$_start;
    },
    get$_y() {
      return this._y;
    }
  };
  A.RenderComparison.prototype = {
    _enumToString$0() {
      return "RenderComparison." + B.S(this._core$_name);
    }
  };
  A.VerticalDirection.prototype = {
    _enumToString$0() {
      return "VerticalDirection." + B.S(this._core$_name);
    }
  };
  A.BorderRadiusGeometry.prototype = {
    subtract$1(other) {
      var _this = this;
      type$.BorderRadiusGeometry._as(other);
      return A._MixedBorderRadius$(J.$sub$n(_this.get$_topLeft(), other.get$_topLeft()), J.$sub$n(_this.get$_topRight(), other.get$_topRight()), J.$sub$n(_this.get$_bottomLeft(), other.get$_bottomLeft()), J.$sub$n(_this.get$_bottomRight(), other.get$_bottomRight()), J.$sub$n(_this.get$_topStart(), other.get$_topStart()), J.$sub$n(_this.get$_topEnd(), other.get$_topEnd()), J.$sub$n(_this.get$_bottomStart(), other.get$_bottomStart()), J.$sub$n(_this.get$_bottomEnd(), other.get$_bottomEnd()));
    },
    add$1(_, other) {
      var _this = this;
      type$.BorderRadiusGeometry._as(other);
      return A._MixedBorderRadius$(J.$add$ansx(_this.get$_topLeft(), other.get$_topLeft()), J.$add$ansx(_this.get$_topRight(), other.get$_topRight()), J.$add$ansx(_this.get$_bottomLeft(), other.get$_bottomLeft()), J.$add$ansx(_this.get$_bottomRight(), other.get$_bottomRight()), J.$add$ansx(_this.get$_topStart(), other.get$_topStart()), J.$add$ansx(_this.get$_topEnd(), other.get$_topEnd()), J.$add$ansx(_this.get$_bottomStart(), other.get$_bottomStart()), J.$add$ansx(_this.get$_bottomEnd(), other.get$_bottomEnd()));
    },
    toString$0(_) {
      var visual, result, comma, logical, t1, _this = this, _s2_ = ", ";
      if (B.boolConversionCheck(J.$eq$(_this.get$_topLeft(), _this.get$_topRight())) && B.boolConversionCheck(J.$eq$(_this.get$_topRight(), _this.get$_bottomLeft())) && B.boolConversionCheck(J.$eq$(_this.get$_bottomLeft(), _this.get$_bottomRight())))
        if (!B.boolConversionCheck(J.$eq$(_this.get$_topLeft(), D.Radius_0_0)))
          visual = B.boolConversionCheck(J.$eq$(_this.get$_topLeft().x, _this.get$_topLeft().y)) ? "BorderRadius.circular(" + B.S(J.toStringAsFixed$1$n(_this.get$_topLeft().x, 1)) + ")" : "BorderRadius.all(" + B.S(_this.get$_topLeft()) + ")";
        else
          visual = null;
      else {
        result = B.StringBuffer$("");
        result.write$1("BorderRadius.only(");
        comma = !B.boolConversionCheck(J.$eq$(_this.get$_topLeft(), D.Radius_0_0));
        if (comma)
          result.write$1("topLeft: " + B.S(_this.get$_topLeft()));
        if (!B.boolConversionCheck(J.$eq$(_this.get$_topRight(), D.Radius_0_0))) {
          if (comma)
            result.write$1(_s2_);
          result.write$1("topRight: " + B.S(_this.get$_topRight()));
          comma = true;
        }
        if (!B.boolConversionCheck(J.$eq$(_this.get$_bottomLeft(), D.Radius_0_0))) {
          if (comma)
            result.write$1(_s2_);
          result.write$1("bottomLeft: " + B.S(_this.get$_bottomLeft()));
          comma = true;
        }
        if (!B.boolConversionCheck(J.$eq$(_this.get$_bottomRight(), D.Radius_0_0))) {
          if (comma)
            result.write$1(_s2_);
          result.write$1("bottomRight: " + B.S(_this.get$_bottomRight()));
        }
        result.write$1(")");
        visual = result.toString$0(0);
      }
      if (B.boolConversionCheck(J.$eq$(_this.get$_topStart(), _this.get$_topEnd())) && B.boolConversionCheck(J.$eq$(_this.get$_topEnd(), _this.get$_bottomEnd())) && B.boolConversionCheck(J.$eq$(_this.get$_bottomEnd(), _this.get$_bottomStart())))
        if (!B.boolConversionCheck(J.$eq$(_this.get$_topStart(), D.Radius_0_0)))
          logical = B.boolConversionCheck(J.$eq$(_this.get$_topStart().x, _this.get$_topStart().y)) ? "BorderRadiusDirectional.circular(" + B.S(J.toStringAsFixed$1$n(_this.get$_topStart().x, 1)) + ")" : "BorderRadiusDirectional.all(" + B.S(_this.get$_topStart()) + ")";
        else
          logical = null;
      else {
        result = B.StringBuffer$("");
        result.write$1("BorderRadiusDirectional.only(");
        comma = !B.boolConversionCheck(J.$eq$(_this.get$_topStart(), D.Radius_0_0));
        if (comma)
          result.write$1("topStart: " + B.S(_this.get$_topStart()));
        if (!B.boolConversionCheck(J.$eq$(_this.get$_topEnd(), D.Radius_0_0))) {
          if (comma)
            result.write$1(_s2_);
          result.write$1("topEnd: " + B.S(_this.get$_topEnd()));
          comma = true;
        }
        if (!B.boolConversionCheck(J.$eq$(_this.get$_bottomStart(), D.Radius_0_0))) {
          if (comma)
            result.write$1(_s2_);
          result.write$1("bottomStart: " + B.S(_this.get$_bottomStart()));
          comma = true;
        }
        if (!B.boolConversionCheck(J.$eq$(_this.get$_bottomEnd(), D.Radius_0_0))) {
          if (comma)
            result.write$1(_s2_);
          result.write$1("bottomEnd: " + B.S(_this.get$_bottomEnd()));
        }
        result.write$1(")");
        logical = result.toString$0(0);
      }
      t1 = visual == null;
      if (!t1 && logical != null)
        return B.S(visual) + " + " + logical;
      t1 = t1 ? logical : visual;
      return t1 == null ? "BorderRadius.zero" : t1;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.BorderRadiusGeometry && B.boolConversionCheck(J.$eq$(other.get$_topLeft(), _this.get$_topLeft())) && B.boolConversionCheck(J.$eq$(other.get$_topRight(), _this.get$_topRight())) && B.boolConversionCheck(J.$eq$(other.get$_bottomLeft(), _this.get$_bottomLeft())) && B.boolConversionCheck(J.$eq$(other.get$_bottomRight(), _this.get$_bottomRight())) && B.boolConversionCheck(J.$eq$(other.get$_topStart(), _this.get$_topStart())) && B.boolConversionCheck(J.$eq$(other.get$_topEnd(), _this.get$_topEnd())) && B.boolConversionCheck(J.$eq$(other.get$_bottomStart(), _this.get$_bottomStart())) && B.boolConversionCheck(J.$eq$(other.get$_bottomEnd(), _this.get$_bottomEnd()));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.get$_topLeft(), _this.get$_topRight(), _this.get$_bottomLeft(), _this.get$_bottomRight(), _this.get$_topStart(), _this.get$_topEnd(), _this.get$_bottomStart(), _this.get$_bottomEnd(), F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    }
  };
  A.BorderRadius.prototype = {
    get$_topLeft() {
      return this.topLeft;
    },
    get$_topRight() {
      return this.topRight;
    },
    get$_bottomLeft() {
      return this.bottomLeft;
    },
    get$_bottomRight() {
      return this.bottomRight;
    },
    get$_topStart() {
      return D.Radius_0_0;
    },
    get$_topEnd() {
      return D.Radius_0_0;
    },
    get$_bottomStart() {
      return D.Radius_0_0;
    },
    get$_bottomEnd() {
      return D.Radius_0_0;
    },
    toRRect$1(rect) {
      var t1, t2, _this = this;
      type$.Rect._as(rect);
      t1 = J.clamp$1$minimum$n(_this.topLeft, D.Radius_0_0);
      t2 = J.clamp$1$minimum$n(_this.topRight, D.Radius_0_0);
      return E.RRect$fromRectAndCorners(rect, J.clamp$1$minimum$n(_this.bottomLeft, D.Radius_0_0), J.clamp$1$minimum$n(_this.bottomRight, D.Radius_0_0), t1, t2);
    },
    subtract$1(other) {
      type$.BorderRadiusGeometry._as(other);
      if (other instanceof A.BorderRadius)
        return this.$sub(0, other);
      return this.super$BorderRadiusGeometry$subtract(other);
    },
    add$1(_, other) {
      type$.BorderRadiusGeometry._as(other);
      if (other instanceof A.BorderRadius)
        return this.$add(0, other);
      return this.super$BorderRadiusGeometry$add(0, other);
    },
    $sub(_, other) {
      var t1, t2, _this = this;
      type$.BorderRadius._as(other);
      t1 = J.$sub$n(_this.topLeft, other.topLeft);
      t2 = J.$sub$n(_this.topRight, other.topRight);
      return A.BorderRadius$only(J.$sub$n(_this.bottomLeft, other.bottomLeft), J.$sub$n(_this.bottomRight, other.bottomRight), t1, t2);
    },
    $add(_, other) {
      var t1, t2, _this = this;
      type$.BorderRadius._as(other);
      t1 = J.$add$ansx(_this.topLeft, other.topLeft);
      t2 = J.$add$ansx(_this.topRight, other.topRight);
      return A.BorderRadius$only(J.$add$ansx(_this.bottomLeft, other.bottomLeft), J.$add$ansx(_this.bottomRight, other.bottomRight), t1, t2);
    },
    $mul(_, other) {
      var t1, t2, _this = this;
      B._asDouble(other);
      t1 = J.$mul$ns(_this.topLeft, other);
      t2 = J.$mul$ns(_this.topRight, other);
      return A.BorderRadius$only(J.$mul$ns(_this.bottomLeft, other), J.$mul$ns(_this.bottomRight, other), t1, t2);
    },
    resolve$1(direction) {
      type$.nullable_TextDirection._as(direction);
      return this;
    }
  };
  A._MixedBorderRadius.prototype = {
    $mul(_, other) {
      var _this = this;
      B._asDouble(other);
      return A._MixedBorderRadius$(J.$mul$ns(_this._topLeft, other), J.$mul$ns(_this._topRight, other), J.$mul$ns(_this._bottomLeft, other), J.$mul$ns(_this._bottomRight, other), J.$mul$ns(_this._topStart, other), J.$mul$ns(_this._topEnd, other), J.$mul$ns(_this._bottomStart, other), J.$mul$ns(_this._bottomEnd, other));
    },
    resolve$1(direction) {
      var t1, t2, _this = this;
      switch (type$.nullable_TextDirection._as(direction).index) {
        case 0:
          t1 = J.$add$ansx(_this._topLeft, _this._topEnd);
          t2 = J.$add$ansx(_this._topRight, _this._topStart);
          return A.BorderRadius$only(J.$add$ansx(_this._bottomLeft, _this._bottomEnd), J.$add$ansx(_this._bottomRight, _this._bottomStart), t1, t2);
        case 1:
          t1 = J.$add$ansx(_this._topLeft, _this._topStart);
          t2 = J.$add$ansx(_this._topRight, _this._topEnd);
          return A.BorderRadius$only(J.$add$ansx(_this._bottomLeft, _this._bottomStart), J.$add$ansx(_this._bottomRight, _this._bottomEnd), t1, t2);
      }
    },
    get$_topLeft() {
      return this._topLeft;
    },
    get$_topRight() {
      return this._topRight;
    },
    get$_bottomLeft() {
      return this._bottomLeft;
    },
    get$_bottomRight() {
      return this._bottomRight;
    },
    get$_topStart() {
      return this._topStart;
    },
    get$_topEnd() {
      return this._topEnd;
    },
    get$_bottomStart() {
      return this._bottomStart;
    },
    get$_bottomEnd() {
      return this._bottomEnd;
    }
  };
  A.BorderStyle.prototype = {
    _enumToString$0() {
      return "BorderStyle." + B.S(this._core$_name);
    }
  };
  A.BorderSide.prototype = {
    scale$1(t) {
      var t1, t2;
      B._asDouble(t);
      t1 = this.width;
      if (typeof t1 !== "number")
        return t1.$mul();
      t1 = E.max(0, t1 * t, type$.double);
      t2 = t <= 0 ? C.BorderStyle_0 : this.style;
      return A.BorderSide$(this.color, -1, t2, t1);
    },
    toPaint$0() {
      switch (this.style) {
        case C.BorderStyle_1:
          var t1 = E.Paint_Paint();
          t1.set$color(this.color);
          t1.set$strokeWidth(this.width);
          t1.set$style(D.PaintingStyle_1);
          return t1;
        case C.BorderStyle_0:
          t1 = E.Paint_Paint();
          t1.set$color(D.Color_0);
          t1.set$strokeWidth(0);
          t1.set$style(D.PaintingStyle_1);
          return t1;
      }
    },
    get$strokeInset() {
      var t1 = this.width,
        t2 = this.strokeAlign;
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (typeof t1 !== "number")
        return t1.$mul();
      return t1 * (1 - (1 + t2) / 2);
    },
    get$strokeOutset() {
      var t1 = this.width,
        t2 = this.strokeAlign;
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (typeof t1 !== "number")
        return t1.$mul();
      return t1 * (1 + t2) / 2;
    },
    get$strokeOffset() {
      var t1 = this.width,
        t2 = this.strokeAlign;
      if (typeof t1 !== "number")
        return t1.$mul();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 * t2;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.BorderSide && B.boolConversionCheck(J.$eq$(other.color, _this.color)) && B.boolConversionCheck(J.$eq$(other.width, _this.width)) && B.boolConversionCheck(J.$eq$(other.style, _this.style)) && B.boolConversionCheck(J.$eq$(other.strokeAlign, _this.strokeAlign));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.color, _this.width, _this.style, _this.strokeAlign, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    toStringShort$0() {
      return "BorderSide";
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("color", _this.color, true, C.Color_4278190080, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Color));
      properties.add$1(0, E.DoubleProperty$("width", _this.width, 1, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("strokeAlign", _this.strokeAlign, -1, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.EnumProperty$("style", _this.style, C.BorderStyle_1, D.DiagnosticLevel_3, type$.BorderStyle));
    },
    $isDiagnosticable: 1
  };
  A.ShapeBorder.prototype = {
    add$2$reversed(_, other, reversed) {
      type$.ShapeBorder._as(other);
      B._asBool(reversed);
      return null;
    },
    add$1(_, other) {
      return this.add$2$reversed(0, other, false);
    },
    $add(_, other) {
      var t1;
      type$.ShapeBorder._as(other);
      t1 = this.add$1(0, other);
      if (t1 == null)
        t1 = other.add$2$reversed(0, this, true);
      return t1 == null ? A._CompoundBorder$(B._setArrayType([other, this], type$.JSArray_ShapeBorder)) : t1;
    },
    lerpFrom$2(a, t) {
      type$.nullable_ShapeBorder._as(a);
      B._asDouble(t);
      if (a == null)
        return this.scale$1(t);
      return null;
    },
    lerpTo$2(b, t) {
      type$.nullable_ShapeBorder._as(b);
      B._asDouble(t);
      if (b == null)
        return this.scale$1(1 - t);
      return null;
    },
    toString$0(_) {
      return B.S(E.objectRuntimeType(this, "ShapeBorder")) + "()";
    }
  };
  A.OutlinedBorder.prototype = {
    get$dimensions() {
      return A.EdgeInsets$all(E.max(this.side.get$strokeInset(), 0, type$.double));
    },
    lerpFrom$2(a, t) {
      type$.nullable_ShapeBorder._as(a);
      B._asDouble(t);
      if (a == null)
        return this.scale$1(t);
      return null;
    },
    lerpTo$2(b, t) {
      type$.nullable_ShapeBorder._as(b);
      B._asDouble(t);
      if (b == null)
        return this.scale$1(1 - t);
      return null;
    }
  };
  A._CompoundBorder.prototype = {
    get$dimensions() {
      return J.fold$1$2$ax(this.borders, D.EdgeInsets_0_0_0_0, new A._CompoundBorder_dimensions_closure(), type$.EdgeInsetsGeometry);
    },
    add$2$reversed(_, other, reversed) {
      var t2, t3, t4, ours, merged,
        t1 = type$.ShapeBorder;
      t1._as(other);
      B._asBool(reversed);
      t2 = other instanceof A._CompoundBorder;
      if (!t2) {
        t3 = this.borders;
        t4 = J.getInterceptor$ax(t3);
        ours = reversed ? t4.get$last(t3) : t4.get$first(t3);
        merged = ours.add$2$reversed(0, other, reversed);
        if (merged == null)
          merged = other.add$2$reversed(0, ours, !reversed);
        if (merged != null) {
          t1 = B.List_List$of(t3, true, t1);
          if (reversed) {
            t2 = J.get$length$asx(t1);
            if (typeof t2 !== "number")
              return t2.$sub();
            --t2;
          } else
            t2 = 0;
          J.$indexSet$ax(t1, t2, merged);
          return A._CompoundBorder$(t1);
        }
      }
      t1 = B._setArrayType([], type$.JSArray_ShapeBorder);
      if (reversed)
        F.JSArray_methods.addAll$1(t1, this.borders);
      if (t2)
        F.JSArray_methods.addAll$1(t1, other.borders);
      else
        t1.push(other);
      if (!reversed)
        F.JSArray_methods.addAll$1(t1, this.borders);
      return A._CompoundBorder$(t1);
    },
    add$1(_, other) {
      return this.add$2$reversed(0, other, false);
    },
    scale$1(t) {
      return A._CompoundBorder$(J.toList$0$ax(J.map$1$1$ax(this.borders, new A._CompoundBorder_scale_closure(B._asDouble(t)), type$.ShapeBorder)));
    },
    lerpFrom$2(a, t) {
      return A._CompoundBorder_lerp(type$.nullable_ShapeBorder._as(a), this, B._asDouble(t));
    },
    lerpTo$2(b, t) {
      return A._CompoundBorder_lerp(this, type$.nullable_ShapeBorder._as(b), B._asDouble(t));
    },
    getOuterPath$2$textDirection(rect, textDirection) {
      type$.Rect._as(rect);
      type$.nullable_TextDirection._as(textDirection);
      return J.get$first$ax(this.borders).getOuterPath$2$textDirection(rect, textDirection);
    },
    paint$3$textDirection(canvas, rect, textDirection) {
      var t1, t2;
      type$.Canvas._as(canvas);
      type$.Rect._as(rect);
      type$.nullable_TextDirection._as(textDirection);
      for (t1 = J.get$iterator$ax(this.borders); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        t2.paint$3$textDirection(canvas, rect, textDirection);
        rect = t2.get$dimensions().resolve$1(textDirection).deflateRect$1(rect);
      }
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A._CompoundBorder && B.boolConversionCheck(E.listEquals(other.borders, this.borders, type$.ShapeBorder));
    },
    get$hashCode(_) {
      return B.Object_hashAll(this.borders);
    },
    toString$0(_) {
      return J.join$1$ax(J.map$1$1$ax(J.get$reversed$ax(this.borders), new A._CompoundBorder_toString_closure(), type$.String), " + ");
    }
  };
  A._BorderSide_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.BoxShape.prototype = {
    _enumToString$0() {
      return "BoxShape." + B.S(this._core$_name);
    }
  };
  A.CircleBorder.prototype = {
    scale$1(t) {
      return A.CircleBorder$(this.eccentricity, this.side.scale$1(B._asDouble(t)));
    },
    lerpFrom$2(a, t) {
      var t1, t2;
      type$.nullable_ShapeBorder._as(a);
      B._asDouble(t);
      if (a instanceof A.CircleBorder) {
        t1 = A.BorderSide_lerp(a.side, this.side, t);
        t2 = A.lerpDouble(a.eccentricity, this.eccentricity, t);
        t2.toString;
        return A.CircleBorder$(E.clampDouble(t2, 0, 1), t1);
      }
      return this.super$OutlinedBorder$lerpFrom(a, t);
    },
    lerpTo$2(b, t) {
      var t1, t2;
      type$.nullable_ShapeBorder._as(b);
      B._asDouble(t);
      if (b instanceof A.CircleBorder) {
        t1 = A.BorderSide_lerp(this.side, b.side, t);
        t2 = A.lerpDouble(this.eccentricity, b.eccentricity, t);
        t2.toString;
        return A.CircleBorder$(E.clampDouble(t2, 0, 1), t1);
      }
      return this.super$OutlinedBorder$lerpTo(b, t);
    },
    getOuterPath$2$textDirection(rect, textDirection) {
      var t1;
      type$.Rect._as(rect);
      type$.nullable_TextDirection._as(textDirection);
      t1 = E.Path_Path();
      t1.addOval$1(this._circle_border$_adjustRect$1(rect));
      return t1;
    },
    copyWith$1$side(side) {
      var t1;
      type$.nullable_BorderSide._as(side);
      t1 = side == null ? this.side : side;
      return A.CircleBorder$(this.eccentricity, t1);
    },
    paint$3$textDirection(canvas, rect, textDirection) {
      var t1, t2, t3, t4, borderRect;
      type$.Canvas._as(canvas);
      type$.Rect._as(rect);
      type$.nullable_TextDirection._as(textDirection);
      t1 = this.side;
      switch (t1.style) {
        case C.BorderStyle_0:
          break;
        case C.BorderStyle_1:
          if (B.boolConversionCheck(J.$eq$(this.eccentricity, 0))) {
            t2 = rect.get$center();
            t3 = rect.get$shortestSide();
            t4 = t1.get$strokeOffset();
            if (typeof t3 !== "number")
              return t3.$add();
            if (typeof t4 !== "number")
              return B.iae(t4);
            canvas.drawCircle$3(t2, (t3 + t4) / 2, t1.toPaint$0());
          } else {
            borderRect = this._circle_border$_adjustRect$1(rect);
            t2 = t1.get$strokeOffset();
            if (typeof t2 !== "number")
              return t2.$div();
            canvas.drawOval$2(borderRect.inflate$1(t2 / 2), t1.toPaint$0());
          }
          break;
      }
    },
    _circle_border$_adjustRect$1(rect) {
      var t1, t2, t3, t4, t5, t6, t7, delta;
      type$.Rect._as(rect);
      t1 = this.eccentricity;
      if (B.boolConversionCheck(J.$eq$(t1, 0)) || B.boolConversionCheck(J.$eq$(rect.get$width(), rect.get$height()))) {
        t1 = rect.get$center();
        t2 = rect.get$shortestSide();
        if (typeof t2 !== "number")
          return t2.$div();
        return E.Rect$fromCircle(t1, t2 / 2);
      }
      t2 = rect.get$width();
      t3 = rect.get$height();
      if (typeof t2 !== "number")
        return t2.$lt();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t4 = rect.left;
      t5 = rect.top;
      t6 = rect.right;
      t7 = rect.bottom;
      if (t2 < t3) {
        if (typeof t1 !== "number")
          return B.iae(t1);
        t2 = rect.get$height();
        t3 = rect.get$width();
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t3 !== "number")
          return B.iae(t3);
        delta = (1 - t1) * (t2 - t3) / 2;
        if (typeof t5 !== "number")
          return t5.$add();
        if (typeof t7 !== "number")
          return t7.$sub();
        return E.Rect$fromLTRB(t4, t5 + delta, t6, t7 - delta);
      } else {
        if (typeof t1 !== "number")
          return B.iae(t1);
        t2 = rect.get$width();
        t3 = rect.get$height();
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t3 !== "number")
          return B.iae(t3);
        delta = (1 - t1) * (t2 - t3) / 2;
        if (typeof t4 !== "number")
          return t4.$add();
        if (typeof t6 !== "number")
          return t6.$sub();
        return E.Rect$fromLTRB(t4 + delta, t5, t6 - delta, t7);
      }
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.CircleBorder && B.boolConversionCheck(J.$eq$(other.side, this.side)) && B.boolConversionCheck(J.$eq$(other.eccentricity, this.eccentricity));
    },
    get$hashCode(_) {
      return B.Object_hash(this.side, this.eccentricity, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this,
        _s12_ = "CircleBorder",
        t1 = _this.eccentricity;
      if (!B.boolConversionCheck(J.$eq$(t1, 0)))
        return B.S(E.objectRuntimeType(_this, _s12_)) + "(" + B.S(_this.side) + ", eccentricity: " + B.S(t1) + ")";
      return B.S(E.objectRuntimeType(_this, _s12_)) + "(" + B.S(_this.side) + ")";
    }
  };
  A.ColorSwatch.prototype = {
    $index(_, index) {
      return J.$index$asx(this._swatch, B._instanceType(this)._eval$1("ColorSwatch.T")._as(index));
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      if (B.boolConversionCheck(_this.super$Color$$eq(0, other))) {
        t1 = B._instanceType(_this);
        t1 = t1._eval$1("ColorSwatch<ColorSwatch.T>")._is(other) && B.boolConversionCheck(A.mapEquals(other._swatch, _this._swatch, t1._eval$1("ColorSwatch.T"), type$.Color));
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return B.Object_hash(this.get$runtimeType(0), this.value, this._swatch, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    toString$0(_) {
      return B.S(E.objectRuntimeType(this, "ColorSwatch")) + "(primary value: " + B.S(this.super$Color$toString(0)) + ")";
    }
  };
  A.ColorProperty.prototype = {};
  A.Decoration.prototype = {
    toStringShort$0() {
      return E.objectRuntimeType(this, "Decoration");
    },
    get$isComplex() {
      return false;
    },
    lerpFrom$2(a, t) {
      type$.nullable_Decoration._as(a);
      B._asDouble(t);
      return null;
    },
    lerpTo$2(b, t) {
      type$.nullable_Decoration._as(b);
      B._asDouble(t);
      return null;
    },
    hitTest$3$textDirection(size, position, textDirection) {
      type$.Size._as(size);
      type$.Offset._as(position);
      type$.nullable_TextDirection._as(textDirection);
      return true;
    },
    $isDiagnosticable: 1
  };
  A.BoxPainter.prototype = {
    dispose$0() {
    }
  };
  A._Decoration_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.EdgeInsetsDirectional.prototype = {
    get$_edge_insets$_start() {
      return this.start;
    },
    get$_top() {
      return this.top;
    },
    get$_edge_insets$_end() {
      return this.end;
    },
    get$_bottom() {
      return this.bottom;
    },
    get$_left() {
      return 0;
    },
    get$_right() {
      return 0;
    },
    add$1(_, other) {
      type$.EdgeInsetsGeometry._as(other);
      if (other instanceof A.EdgeInsetsDirectional)
        return this.$add(0, other);
      return this.super$EdgeInsetsGeometry$add(0, other);
    },
    $sub(_, other) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _this = this;
      type$.EdgeInsetsDirectional._as(other);
      t1 = _this.start;
      t2 = other.start;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = _this.top;
      t4 = other.top;
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t5 = _this.end;
      t6 = other.end;
      if (typeof t5 !== "number")
        return t5.$sub();
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = _this.bottom;
      t8 = other.bottom;
      if (typeof t7 !== "number")
        return t7.$sub();
      if (typeof t8 !== "number")
        return B.iae(t8);
      return A.EdgeInsetsDirectional$fromSTEB(t1 - t2, t3 - t4, t5 - t6, t7 - t8);
    },
    $add(_, other) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _this = this;
      type$.EdgeInsetsDirectional._as(other);
      t1 = _this.start;
      t2 = other.start;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = _this.top;
      t4 = other.top;
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t5 = _this.end;
      t6 = other.end;
      if (typeof t5 !== "number")
        return t5.$add();
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = _this.bottom;
      t8 = other.bottom;
      if (typeof t7 !== "number")
        return t7.$add();
      if (typeof t8 !== "number")
        return B.iae(t8);
      return A.EdgeInsetsDirectional$fromSTEB(t1 + t2, t3 + t4, t5 + t6, t7 + t8);
    },
    $mul(_, other) {
      var t1, t2, t3, t4, _this = this;
      B._asDouble(other);
      t1 = _this.start;
      if (typeof t1 !== "number")
        return t1.$mul();
      t2 = _this.top;
      if (typeof t2 !== "number")
        return t2.$mul();
      t3 = _this.end;
      if (typeof t3 !== "number")
        return t3.$mul();
      t4 = _this.bottom;
      if (typeof t4 !== "number")
        return t4.$mul();
      return A.EdgeInsetsDirectional$fromSTEB(t1 * other, t2 * other, t3 * other, t4 * other);
    },
    resolve$1(direction) {
      var t1, _this = this;
      switch (type$.nullable_TextDirection._as(direction).index) {
        case 0:
          t1 = E.EdgeInsets$fromLTRB(_this.end, _this.top, _this.start, _this.bottom);
          break;
        case 1:
          t1 = E.EdgeInsets$fromLTRB(_this.start, _this.top, _this.end, _this.bottom);
          break;
        default:
          t1 = null;
      }
      return t1;
    }
  };
  A.ImageConfiguration.prototype = {
    copyWith$1$size(size) {
      var t1, _this = this;
      type$.nullable_Size._as(size);
      t1 = size == null ? _this.size : size;
      return A.ImageConfiguration$(_this.bundle, _this.devicePixelRatio, _this.locale, _this.platform, t1, _this.textDirection);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.ImageConfiguration && B.boolConversionCheck(J.$eq$(other.bundle, _this.bundle)) && B.boolConversionCheck(J.$eq$(other.devicePixelRatio, _this.devicePixelRatio)) && B.boolConversionCheck(J.$eq$(other.locale, _this.locale)) && B.boolConversionCheck(J.$eq$(other.textDirection, _this.textDirection)) && B.boolConversionCheck(J.$eq$(other.size, _this.size)) && B.boolConversionCheck(J.$eq$(other.platform, _this.platform));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.bundle, _this.devicePixelRatio, _this.locale, _this.size, _this.platform, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    toString$0(_) {
      var t1, hasArguments, _this = this, _s2_ = ", ",
        result = B.StringBuffer$("");
      result.write$1("ImageConfiguration(");
      t1 = _this.bundle;
      hasArguments = t1 != null;
      if (hasArguments)
        result.write$1("bundle: " + B.S(t1));
      t1 = _this.devicePixelRatio;
      if (t1 != null) {
        if (hasArguments)
          result.write$1(_s2_);
        result.write$1("devicePixelRatio: " + B.S(J.toStringAsFixed$1$n(t1, 1)));
        hasArguments = true;
      }
      t1 = _this.locale;
      if (t1 != null) {
        if (hasArguments)
          result.write$1(_s2_);
        result.write$1("locale: " + B.S(t1));
        hasArguments = true;
      }
      t1 = _this.textDirection;
      if (t1 != null) {
        if (hasArguments)
          result.write$1(_s2_);
        result.write$1("textDirection: " + B.S(t1));
        hasArguments = true;
      }
      t1 = _this.size;
      if (t1 != null) {
        if (hasArguments)
          result.write$1(_s2_);
        result.write$1("size: " + B.S(t1));
        hasArguments = true;
      }
      t1 = _this.platform;
      if (t1 != null) {
        if (hasArguments)
          result.write$1(_s2_);
        result.write$1("platform: " + B.S(B.EnumName_get_name(t1)));
      }
      result.write$1(")");
      return result.toString$0(0);
    }
  };
  A.Accumulator.prototype = {
    get$value() {
      return this._inline_span$_value;
    },
    increment$1(addend) {
      var t1;
      B._asInt(addend);
      t1 = this._inline_span$_value;
      if (typeof t1 !== "number")
        return t1.$add();
      this.set$_inline_span$_value(t1 + addend);
    },
    set$_inline_span$_value(_value) {
      this._inline_span$_value = B._asInt(_value);
    }
  };
  A.InlineSpanSemanticsInformation.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      t1 = false;
      if (other instanceof A.InlineSpanSemanticsInformation)
        if (B.boolConversionCheck(J.$eq$(other.text, _this.text)))
          if (B.boolConversionCheck(J.$eq$(other.semanticsLabel, _this.semanticsLabel)))
            if (B.boolConversionCheck(J.$eq$(other.recognizer, _this.recognizer)))
              t1 = B.boolConversionCheck(E.listEquals(other.stringAttributes, _this.stringAttributes, type$.StringAttribute));
      return t1;
    },
    get$hashCode(_) {
      return B.Object_hash(this.text, this.semanticsLabel, this.recognizer, false, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return B.S(E.objectRuntimeType(_this, "InlineSpanSemanticsInformation")) + "{text: " + B.S(_this.text) + ", semanticsLabel: " + B.S(_this.semanticsLabel) + ", recognizer: " + B.S(_this.recognizer) + "}";
    }
  };
  A.InlineSpan.prototype = {
    getSpanForPosition$1(position) {
      var offset, t1 = {};
      type$.TextPosition._as(position);
      offset = A.Accumulator$();
      t1.result = null;
      this.visitChildren$1(new A.InlineSpan_getSpanForPosition_closure(t1, position, offset));
      return t1.result;
    },
    toPlainText$1$includeSemanticsLabels(includeSemanticsLabels) {
      var buffer;
      B._asBool(includeSemanticsLabels);
      buffer = B.StringBuffer$("");
      this.computeToPlainText$3$includePlaceholders$includeSemanticsLabels(buffer, true, includeSemanticsLabels);
      return buffer.toString$0(0);
    },
    toPlainText$0() {
      return this.toPlainText$1$includeSemanticsLabels(true);
    },
    getSemanticsInformation$0() {
      var collector = B._setArrayType([], type$.JSArray_InlineSpanSemanticsInformation);
      this.computeSemanticsInformation$1(collector);
      return collector;
    },
    codeUnitAt$1(_, index) {
      var offset, t1 = {};
      B._asInt(index);
      if (index < 0)
        return null;
      offset = A.Accumulator$();
      t1.result = null;
      this.visitChildren$1(new A.InlineSpan_codeUnitAt_closure(t1, index, offset));
      return t1.result;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.TextSpan && B.boolConversionCheck(J.$eq$(other.style, this.style));
    },
    get$hashCode(_) {
      return J.get$hashCode$(this.style);
    },
    debugFillProperties$1(properties) {
      var t1;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.defaultDiagnosticsTreeStyle = D.DiagnosticsTreeStyle_6;
      t1 = this.style;
      if (t1 != null)
        t1.debugFillProperties$1(properties);
    }
  };
  A.RoundedRectangleBorder.prototype = {
    scale$1(t) {
      var t1;
      B._asDouble(t);
      t1 = this.side.scale$1(t);
      return A.RoundedRectangleBorder$(J.$mul$ns(this.borderRadius, t), t1);
    },
    lerpFrom$2(a, t) {
      var t1, t2, _this = this;
      type$.nullable_ShapeBorder._as(a);
      B._asDouble(t);
      if (a instanceof A.RoundedRectangleBorder) {
        t1 = A.BorderSide_lerp(a.side, _this.side, t);
        t2 = A.BorderRadiusGeometry_lerp(a.borderRadius, _this.borderRadius, t);
        t2.toString;
        return A.RoundedRectangleBorder$(t2, t1);
      }
      if (a instanceof A.CircleBorder) {
        t1 = A.BorderSide_lerp(a.side, _this.side, t);
        return A._RoundedRectangleToCircleBorder$(_this.borderRadius, 1 - t, a.eccentricity, t1);
      }
      return _this.super$OutlinedBorder$lerpFrom(a, t);
    },
    lerpTo$2(b, t) {
      var t1, t2, _this = this;
      type$.nullable_ShapeBorder._as(b);
      B._asDouble(t);
      if (b instanceof A.RoundedRectangleBorder) {
        t1 = A.BorderSide_lerp(_this.side, b.side, t);
        t2 = A.BorderRadiusGeometry_lerp(_this.borderRadius, b.borderRadius, t);
        t2.toString;
        return A.RoundedRectangleBorder$(t2, t1);
      }
      if (b instanceof A.CircleBorder) {
        t1 = A.BorderSide_lerp(_this.side, b.side, t);
        return A._RoundedRectangleToCircleBorder$(_this.borderRadius, t, b.eccentricity, t1);
      }
      return _this.super$OutlinedBorder$lerpTo(b, t);
    },
    copyWith$1$side(side) {
      var t1;
      type$.nullable_BorderSide._as(side);
      t1 = side == null ? this.side : side;
      return A.RoundedRectangleBorder$(this.borderRadius, t1);
    },
    getOuterPath$2$textDirection(rect, textDirection) {
      var t1;
      type$.Rect._as(rect);
      type$.nullable_TextDirection._as(textDirection);
      t1 = E.Path_Path();
      t1.addRRect$1(this.borderRadius.resolve$1(textDirection).toRRect$1(rect));
      return t1;
    },
    paint$3$textDirection(canvas, rect, textDirection) {
      var t1, t2, paint, borderRect, inner;
      type$.Canvas._as(canvas);
      type$.Rect._as(rect);
      type$.nullable_TextDirection._as(textDirection);
      t1 = this.side;
      switch (t1.style) {
        case C.BorderStyle_0:
          break;
        case C.BorderStyle_1:
          t2 = this.borderRadius;
          if (B.boolConversionCheck(J.$eq$(t1.width, 0)))
            canvas.drawRRect$2(t2.resolve$1(textDirection).toRRect$1(rect), t1.toPaint$0());
          else {
            paint = E.Paint_Paint();
            paint.set$color(t1.color);
            borderRect = t2.resolve$1(textDirection).toRRect$1(rect);
            inner = borderRect.deflate$1(t1.get$strokeInset());
            canvas.drawDRRect$3(borderRect.inflate$1(t1.get$strokeOutset()), inner, paint);
          }
          break;
      }
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.RoundedRectangleBorder && B.boolConversionCheck(J.$eq$(other.side, this.side)) && B.boolConversionCheck(J.$eq$(other.borderRadius, this.borderRadius));
    },
    get$hashCode(_) {
      return B.Object_hash(this.side, this.borderRadius, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    toString$0(_) {
      return B.S(E.objectRuntimeType(this, "RoundedRectangleBorder")) + "(" + B.S(this.side) + ", " + B.S(this.borderRadius) + ")";
    }
  };
  A._RoundedRectangleToCircleBorder.prototype = {
    scale$1(t) {
      var t1;
      B._asDouble(t);
      t1 = this.side.scale$1(t);
      return A._RoundedRectangleToCircleBorder$(J.$mul$ns(this.borderRadius, t), t, this.eccentricity, t1);
    },
    lerpFrom$2(a, t) {
      var t1, t2, t3, _this = this;
      type$.nullable_ShapeBorder._as(a);
      B._asDouble(t);
      if (a instanceof A.RoundedRectangleBorder) {
        t1 = A.BorderSide_lerp(a.side, _this.side, t);
        t2 = A.BorderRadiusGeometry_lerp(a.borderRadius, _this.borderRadius, t);
        t2.toString;
        t3 = _this.circularity;
        if (typeof t3 !== "number")
          return t3.$mul();
        return A._RoundedRectangleToCircleBorder$(t2, t3 * t, _this.eccentricity, t1);
      }
      if (a instanceof A.CircleBorder) {
        t1 = A.BorderSide_lerp(a.side, _this.side, t);
        t2 = _this.circularity;
        if (typeof t2 !== "number")
          return B.iae(t2);
        return A._RoundedRectangleToCircleBorder$(_this.borderRadius, t2 + (1 - t2) * (1 - t), a.eccentricity, t1);
      }
      if (a instanceof A._RoundedRectangleToCircleBorder) {
        t1 = A.BorderSide_lerp(a.side, _this.side, t);
        t2 = A.BorderRadiusGeometry_lerp(a.borderRadius, _this.borderRadius, t);
        t2.toString;
        t3 = A.lerpDouble(a.circularity, _this.circularity, t);
        t3.toString;
        return A._RoundedRectangleToCircleBorder$(t2, t3, _this.eccentricity, t1);
      }
      return _this.super$OutlinedBorder$lerpFrom(a, t);
    },
    lerpTo$2(b, t) {
      var t1, t2, t3, _this = this;
      type$.nullable_ShapeBorder._as(b);
      B._asDouble(t);
      if (b instanceof A.RoundedRectangleBorder) {
        t1 = A.BorderSide_lerp(_this.side, b.side, t);
        t2 = A.BorderRadiusGeometry_lerp(_this.borderRadius, b.borderRadius, t);
        t2.toString;
        t3 = _this.circularity;
        if (typeof t3 !== "number")
          return t3.$mul();
        return A._RoundedRectangleToCircleBorder$(t2, t3 * (1 - t), _this.eccentricity, t1);
      }
      if (b instanceof A.CircleBorder) {
        t1 = A.BorderSide_lerp(_this.side, b.side, t);
        t2 = _this.circularity;
        if (typeof t2 !== "number")
          return B.iae(t2);
        return A._RoundedRectangleToCircleBorder$(_this.borderRadius, t2 + (1 - t2) * t, b.eccentricity, t1);
      }
      if (b instanceof A._RoundedRectangleToCircleBorder) {
        t1 = A.BorderSide_lerp(_this.side, b.side, t);
        t2 = A.BorderRadiusGeometry_lerp(_this.borderRadius, b.borderRadius, t);
        t2.toString;
        t3 = A.lerpDouble(_this.circularity, b.circularity, t);
        t3.toString;
        return A._RoundedRectangleToCircleBorder$(t2, t3, _this.eccentricity, t1);
      }
      return _this.super$OutlinedBorder$lerpTo(b, t);
    },
    _adjustRect$1(rect) {
      var t1, t2, t3, t4, t5, t6, t7, t8, delta;
      type$.Rect._as(rect);
      t1 = this.circularity;
      if (B.boolConversionCheck(J.$eq$(t1, 0)) || B.boolConversionCheck(J.$eq$(rect.get$width(), rect.get$height())))
        return rect;
      t2 = rect.get$width();
      t3 = rect.get$height();
      if (typeof t2 !== "number")
        return t2.$lt();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t4 = this.eccentricity;
      t5 = rect.left;
      t6 = rect.top;
      t7 = rect.right;
      t8 = rect.bottom;
      if (t2 < t3) {
        t2 = rect.get$height();
        t3 = rect.get$width();
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (typeof t1 !== "number")
          return t1.$mul();
        if (typeof t4 !== "number")
          return B.iae(t4);
        delta = t1 * ((t2 - t3) / 2) * (1 - t4);
        if (typeof t6 !== "number")
          return t6.$add();
        if (typeof t8 !== "number")
          return t8.$sub();
        return E.Rect$fromLTRB(t5, t6 + delta, t7, t8 - delta);
      } else {
        t2 = rect.get$width();
        t3 = rect.get$height();
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (typeof t1 !== "number")
          return t1.$mul();
        if (typeof t4 !== "number")
          return B.iae(t4);
        delta = t1 * ((t2 - t3) / 2) * (1 - t4);
        if (typeof t5 !== "number")
          return t5.$add();
        if (typeof t7 !== "number")
          return t7.$sub();
        return E.Rect$fromLTRB(t5 + delta, t6, t7 - delta, t8);
      }
    },
    _adjustBorderRadius$2(rect, textDirection) {
      var resolvedRadius, t1, t2, t3, t4;
      type$.Rect._as(rect);
      resolvedRadius = this.borderRadius.resolve$1(type$.nullable_TextDirection._as(textDirection));
      t1 = this.circularity;
      if (B.boolConversionCheck(J.$eq$(t1, 0)))
        return resolvedRadius;
      t2 = this.eccentricity;
      if (!B.boolConversionCheck(J.$eq$(t2, 0))) {
        t3 = rect.get$width();
        t4 = rect.get$height();
        if (typeof t3 !== "number")
          return t3.$lt();
        if (typeof t4 !== "number")
          return B.iae(t4);
        if (t3 < t4) {
          t3 = rect.get$width();
          if (typeof t3 !== "number")
            return t3.$div();
          if (typeof t2 !== "number")
            return t2.$div();
          t4 = rect.get$height();
          if (typeof t4 !== "number")
            return B.iae(t4);
          t1 = A.BorderRadius_lerp(resolvedRadius, A.BorderRadius$all(E.Radius$elliptical(t3 / 2, (0.5 + t2 / 2) * t4 / 2)), t1);
          t1.toString;
          return t1;
        } else {
          if (typeof t2 !== "number")
            return t2.$div();
          t3 = rect.get$width();
          if (typeof t3 !== "number")
            return B.iae(t3);
          t4 = rect.get$height();
          if (typeof t4 !== "number")
            return t4.$div();
          t1 = A.BorderRadius_lerp(resolvedRadius, A.BorderRadius$all(E.Radius$elliptical((0.5 + t2 / 2) * t3 / 2, t4 / 2)), t1);
          t1.toString;
          return t1;
        }
      }
      t2 = rect.get$shortestSide();
      if (typeof t2 !== "number")
        return t2.$div();
      return A.BorderRadius_lerp(resolvedRadius, A.BorderRadius$circular(t2 / 2), t1);
    },
    getOuterPath$2$textDirection(rect, textDirection) {
      var t1, t2;
      type$.Rect._as(rect);
      type$.nullable_TextDirection._as(textDirection);
      t1 = E.Path_Path();
      t2 = this._adjustBorderRadius$2(rect, textDirection);
      t2.toString;
      t1.addRRect$1(t2.toRRect$1(this._adjustRect$1(rect)));
      return t1;
    },
    copyWith$1$side(side) {
      var t1, _this = this;
      type$.nullable_BorderSide._as(side);
      t1 = side == null ? _this.side : side;
      return A._RoundedRectangleToCircleBorder$(_this.borderRadius, _this.circularity, _this.eccentricity, t1);
    },
    paint$3$textDirection(canvas, rect, textDirection) {
      var t1, t2, borderRect;
      type$.Canvas._as(canvas);
      type$.Rect._as(rect);
      type$.nullable_TextDirection._as(textDirection);
      t1 = this.side;
      switch (t1.style) {
        case C.BorderStyle_0:
          break;
        case C.BorderStyle_1:
          t2 = this._adjustBorderRadius$2(rect, textDirection);
          t2.toString;
          borderRect = t2.toRRect$1(this._adjustRect$1(rect));
          t2 = t1.get$strokeOffset();
          if (typeof t2 !== "number")
            return t2.$div();
          canvas.drawRRect$2(borderRect.inflate$1(t2 / 2), t1.toPaint$0());
          break;
      }
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A._RoundedRectangleToCircleBorder && B.boolConversionCheck(J.$eq$(other.side, _this.side)) && B.boolConversionCheck(J.$eq$(other.borderRadius, _this.borderRadius)) && B.boolConversionCheck(J.$eq$(other.circularity, _this.circularity));
    },
    get$hashCode(_) {
      return B.Object_hash(this.side, this.borderRadius, this.circularity, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    toString$0(_) {
      var t2, t3, t4, _this = this,
        _s23_ = "RoundedRectangleBorder(",
        t1 = _this.eccentricity;
      if (!B.boolConversionCheck(J.$eq$(t1, 0))) {
        t2 = B.S(_this.side);
        t3 = B.S(_this.borderRadius);
        t4 = _this.circularity;
        if (typeof t4 !== "number")
          return t4.$mul();
        t4 = B.S(F.JSNumber_methods.toStringAsFixed$1(t4 * 100, 1));
        if (typeof t1 !== "number")
          return t1.$mul();
        return _s23_ + t2 + ", " + t3 + ", " + t4 + string$.x25_of_t + B.S(F.JSNumber_methods.toStringAsFixed$1(t1 * 100, 1)) + "% oval)";
      }
      t1 = B.S(_this.side);
      t2 = B.S(_this.borderRadius);
      t3 = _this.circularity;
      if (typeof t3 !== "number")
        return t3.$mul();
      return _s23_ + t1 + ", " + t2 + ", " + B.S(F.JSNumber_methods.toStringAsFixed$1(t3 * 100, 1)) + "% of the way to being a CircleBorder)";
    }
  };
  A.StadiumBorder.prototype = {
    scale$1(t) {
      return A.StadiumBorder$(this.side.scale$1(B._asDouble(t)));
    },
    lerpFrom$2(a, t) {
      var t1, _this = this;
      type$.nullable_ShapeBorder._as(a);
      B._asDouble(t);
      if (a instanceof A.StadiumBorder)
        return A.StadiumBorder$(A.BorderSide_lerp(a.side, _this.side, t));
      if (a instanceof A.CircleBorder) {
        t1 = A.BorderSide_lerp(a.side, _this.side, t);
        return A._StadiumToCircleBorder$(1 - t, a.eccentricity, t1);
      }
      if (a instanceof A.RoundedRectangleBorder) {
        t1 = A.BorderSide_lerp(a.side, _this.side, t);
        return A._StadiumToRoundedRectangleBorder$(a.borderRadius, 1 - t, t1);
      }
      return _this.super$OutlinedBorder$lerpFrom(a, t);
    },
    lerpTo$2(b, t) {
      var t1, _this = this;
      type$.nullable_ShapeBorder._as(b);
      B._asDouble(t);
      if (b instanceof A.StadiumBorder)
        return A.StadiumBorder$(A.BorderSide_lerp(_this.side, b.side, t));
      if (b instanceof A.CircleBorder) {
        t1 = A.BorderSide_lerp(_this.side, b.side, t);
        return A._StadiumToCircleBorder$(t, b.eccentricity, t1);
      }
      if (b instanceof A.RoundedRectangleBorder) {
        t1 = A.BorderSide_lerp(_this.side, b.side, t);
        return A._StadiumToRoundedRectangleBorder$(b.borderRadius, t, t1);
      }
      return _this.super$OutlinedBorder$lerpTo(b, t);
    },
    copyWith$1$side(side) {
      type$.nullable_BorderSide._as(side);
      return A.StadiumBorder$(side == null ? this.side : side);
    },
    getOuterPath$2$textDirection(rect, textDirection) {
      var t1, radius;
      type$.Rect._as(rect);
      type$.nullable_TextDirection._as(textDirection);
      t1 = rect.get$shortestSide();
      if (typeof t1 !== "number")
        return t1.$div();
      radius = A.Radius$circular(t1 / 2);
      t1 = E.Path_Path();
      t1.addRRect$1(A.RRect$fromRectAndRadius(rect, radius));
      return t1;
    },
    paint$3$textDirection(canvas, rect, textDirection) {
      var t1, t2, borderRect;
      type$.Canvas._as(canvas);
      type$.Rect._as(rect);
      type$.nullable_TextDirection._as(textDirection);
      t1 = this.side;
      switch (t1.style) {
        case C.BorderStyle_0:
          break;
        case C.BorderStyle_1:
          t2 = rect.get$shortestSide();
          if (typeof t2 !== "number")
            return t2.$div();
          borderRect = A.RRect$fromRectAndRadius(rect, A.Radius$circular(t2 / 2));
          t2 = t1.get$strokeOffset();
          if (typeof t2 !== "number")
            return t2.$div();
          canvas.drawRRect$2(borderRect.inflate$1(t2 / 2), t1.toPaint$0());
          break;
      }
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A.StadiumBorder && B.boolConversionCheck(J.$eq$(other.side, this.side));
    },
    get$hashCode(_) {
      return J.get$hashCode$(this.side);
    },
    toString$0(_) {
      return B.S(E.objectRuntimeType(this, "StadiumBorder")) + "(" + B.S(this.side) + ")";
    }
  };
  A._StadiumToCircleBorder.prototype = {
    scale$1(t) {
      B._asDouble(t);
      return A._StadiumToCircleBorder$(t, this.eccentricity, this.side.scale$1(t));
    },
    lerpFrom$2(a, t) {
      var t1, t2, t3, _this = this;
      type$.nullable_ShapeBorder._as(a);
      B._asDouble(t);
      if (a instanceof A.StadiumBorder) {
        t1 = A.BorderSide_lerp(a.side, _this.side, t);
        t2 = _this.circularity;
        if (typeof t2 !== "number")
          return t2.$mul();
        return A._StadiumToCircleBorder$(t2 * t, _this.eccentricity, t1);
      }
      if (a instanceof A.CircleBorder) {
        t1 = A.BorderSide_lerp(a.side, _this.side, t);
        t2 = _this.circularity;
        if (typeof t2 !== "number")
          return B.iae(t2);
        return A._StadiumToCircleBorder$(t2 + (1 - t2) * (1 - t), a.eccentricity, t1);
      }
      if (a instanceof A._StadiumToCircleBorder) {
        t1 = A.BorderSide_lerp(a.side, _this.side, t);
        t2 = A.lerpDouble(a.circularity, _this.circularity, t);
        t2.toString;
        t3 = A.lerpDouble(a.eccentricity, _this.eccentricity, t);
        t3.toString;
        return A._StadiumToCircleBorder$(t2, t3, t1);
      }
      return _this.super$OutlinedBorder$lerpFrom(a, t);
    },
    lerpTo$2(b, t) {
      var t1, t2, t3, _this = this;
      type$.nullable_ShapeBorder._as(b);
      B._asDouble(t);
      if (b instanceof A.StadiumBorder) {
        t1 = A.BorderSide_lerp(_this.side, b.side, t);
        t2 = _this.circularity;
        if (typeof t2 !== "number")
          return t2.$mul();
        return A._StadiumToCircleBorder$(t2 * (1 - t), _this.eccentricity, t1);
      }
      if (b instanceof A.CircleBorder) {
        t1 = A.BorderSide_lerp(_this.side, b.side, t);
        t2 = _this.circularity;
        if (typeof t2 !== "number")
          return B.iae(t2);
        return A._StadiumToCircleBorder$(t2 + (1 - t2) * t, b.eccentricity, t1);
      }
      if (b instanceof A._StadiumToCircleBorder) {
        t1 = A.BorderSide_lerp(_this.side, b.side, t);
        t2 = A.lerpDouble(_this.circularity, b.circularity, t);
        t2.toString;
        t3 = A.lerpDouble(_this.eccentricity, b.eccentricity, t);
        t3.toString;
        return A._StadiumToCircleBorder$(t2, t3, t1);
      }
      return _this.super$OutlinedBorder$lerpTo(b, t);
    },
    _stadium_border$_adjustRect$1(rect) {
      var t1, t2, t3, t4, t5, t6, t7, t8, delta;
      type$.Rect._as(rect);
      t1 = this.circularity;
      if (B.boolConversionCheck(J.$eq$(t1, 0)) || B.boolConversionCheck(J.$eq$(rect.get$width(), rect.get$height())))
        return rect;
      t2 = rect.get$width();
      t3 = rect.get$height();
      if (typeof t2 !== "number")
        return t2.$lt();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t4 = this.eccentricity;
      t5 = rect.left;
      t6 = rect.top;
      t7 = rect.right;
      t8 = rect.bottom;
      if (t2 < t3) {
        t2 = rect.get$height();
        t3 = rect.get$width();
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (typeof t1 !== "number")
          return t1.$mul();
        if (typeof t4 !== "number")
          return B.iae(t4);
        delta = t1 * ((t2 - t3) / 2) * (1 - t4);
        if (typeof t6 !== "number")
          return t6.$add();
        if (typeof t8 !== "number")
          return t8.$sub();
        return E.Rect$fromLTRB(t5, t6 + delta, t7, t8 - delta);
      } else {
        t2 = rect.get$width();
        t3 = rect.get$height();
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (typeof t1 !== "number")
          return t1.$mul();
        if (typeof t4 !== "number")
          return B.iae(t4);
        delta = t1 * ((t2 - t3) / 2) * (1 - t4);
        if (typeof t5 !== "number")
          return t5.$add();
        if (typeof t7 !== "number")
          return t7.$sub();
        return E.Rect$fromLTRB(t5 + delta, t6, t7 - delta, t8);
      }
    },
    _stadium_border$_adjustBorderRadius$1(rect) {
      var t1, circleRadius, t2, t3, t4;
      type$.Rect._as(rect);
      t1 = rect.get$shortestSide();
      if (typeof t1 !== "number")
        return t1.$div();
      circleRadius = A.BorderRadius$circular(t1 / 2);
      t1 = this.eccentricity;
      if (!B.boolConversionCheck(J.$eq$(t1, 0))) {
        t2 = rect.get$width();
        t3 = rect.get$height();
        if (typeof t2 !== "number")
          return t2.$lt();
        if (typeof t3 !== "number")
          return B.iae(t3);
        t4 = this.circularity;
        if (t2 < t3) {
          t2 = rect.get$width();
          if (typeof t2 !== "number")
            return t2.$div();
          if (typeof t1 !== "number")
            return t1.$div();
          t3 = rect.get$height();
          if (typeof t3 !== "number")
            return B.iae(t3);
          t4 = A.BorderRadius_lerp(circleRadius, A.BorderRadius$all(E.Radius$elliptical(t2 / 2, (0.5 + t1 / 2) * t3 / 2)), t4);
          t4.toString;
          return t4;
        } else {
          if (typeof t1 !== "number")
            return t1.$div();
          t2 = rect.get$width();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t3 = rect.get$height();
          if (typeof t3 !== "number")
            return t3.$div();
          t4 = A.BorderRadius_lerp(circleRadius, A.BorderRadius$all(E.Radius$elliptical((0.5 + t1 / 2) * t2 / 2, t3 / 2)), t4);
          t4.toString;
          return t4;
        }
      }
      return circleRadius;
    },
    getOuterPath$2$textDirection(rect, textDirection) {
      var t1;
      type$.Rect._as(rect);
      type$.nullable_TextDirection._as(textDirection);
      t1 = E.Path_Path();
      t1.addRRect$1(this._stadium_border$_adjustBorderRadius$1(rect).toRRect$1(this._stadium_border$_adjustRect$1(rect)));
      return t1;
    },
    copyWith$1$side(side) {
      var t1;
      type$.nullable_BorderSide._as(side);
      t1 = side == null ? this.side : side;
      return A._StadiumToCircleBorder$(this.circularity, this.eccentricity, t1);
    },
    paint$3$textDirection(canvas, rect, textDirection) {
      var t1, borderRect, t2;
      type$.Canvas._as(canvas);
      type$.Rect._as(rect);
      type$.nullable_TextDirection._as(textDirection);
      t1 = this.side;
      switch (t1.style) {
        case C.BorderStyle_0:
          break;
        case C.BorderStyle_1:
          borderRect = this._stadium_border$_adjustBorderRadius$1(rect).toRRect$1(this._stadium_border$_adjustRect$1(rect));
          t2 = t1.get$strokeOffset();
          if (typeof t2 !== "number")
            return t2.$div();
          canvas.drawRRect$2(borderRect.inflate$1(t2 / 2), t1.toPaint$0());
          break;
      }
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      return other instanceof A._StadiumToCircleBorder && B.boolConversionCheck(J.$eq$(other.side, this.side)) && B.boolConversionCheck(J.$eq$(other.circularity, this.circularity));
    },
    get$hashCode(_) {
      return B.Object_hash(this.side, this.circularity, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    toString$0(_) {
      var t2, t3, _this = this,
        t1 = _this.eccentricity;
      if (!B.boolConversionCheck(J.$eq$(t1, 0))) {
        t2 = B.S(_this.side);
        t3 = _this.circularity;
        if (typeof t3 !== "number")
          return t3.$mul();
        t3 = B.S(F.JSNumber_methods.toStringAsFixed$1(t3 * 100, 1));
        if (typeof t1 !== "number")
          return t1.$mul();
        return "StadiumBorder(" + t2 + ", " + t3 + string$.x25_of_t + B.S(F.JSNumber_methods.toStringAsFixed$1(t1 * 100, 1)) + "% oval)";
      }
      t1 = B.S(_this.side);
      t2 = _this.circularity;
      if (typeof t2 !== "number")
        return t2.$mul();
      return "StadiumBorder(" + t1 + ", " + B.S(F.JSNumber_methods.toStringAsFixed$1(t2 * 100, 1)) + "% of the way to being a CircleBorder)";
    }
  };
  A._StadiumToRoundedRectangleBorder.prototype = {
    scale$1(t) {
      var t1;
      B._asDouble(t);
      t1 = this.side.scale$1(t);
      return A._StadiumToRoundedRectangleBorder$(J.$mul$ns(this.borderRadius, t), t, t1);
    },
    lerpFrom$2(a, t) {
      var t1, t2, t3, _this = this;
      type$.nullable_ShapeBorder._as(a);
      B._asDouble(t);
      if (a instanceof A.StadiumBorder) {
        t1 = A.BorderSide_lerp(a.side, _this.side, t);
        t2 = _this.rectilinearity;
        if (typeof t2 !== "number")
          return t2.$mul();
        return A._StadiumToRoundedRectangleBorder$(_this.borderRadius, t2 * t, t1);
      }
      if (a instanceof A.RoundedRectangleBorder) {
        t1 = A.BorderSide_lerp(a.side, _this.side, t);
        t2 = _this.rectilinearity;
        if (typeof t2 !== "number")
          return B.iae(t2);
        return A._StadiumToRoundedRectangleBorder$(_this.borderRadius, t2 + (1 - t2) * (1 - t), t1);
      }
      if (a instanceof A._StadiumToRoundedRectangleBorder) {
        t1 = A.BorderSide_lerp(a.side, _this.side, t);
        t2 = A.BorderRadiusGeometry_lerp(a.borderRadius, _this.borderRadius, t);
        t2.toString;
        t3 = A.lerpDouble(a.rectilinearity, _this.rectilinearity, t);
        t3.toString;
        return A._StadiumToRoundedRectangleBorder$(t2, t3, t1);
      }
      return _this.super$OutlinedBorder$lerpFrom(a, t);
    },
    lerpTo$2(b, t) {
      var t1, t2, t3, _this = this;
      type$.nullable_ShapeBorder._as(b);
      B._asDouble(t);
      if (b instanceof A.StadiumBorder) {
        t1 = A.BorderSide_lerp(_this.side, b.side, t);
        t2 = _this.rectilinearity;
        if (typeof t2 !== "number")
          return t2.$mul();
        return A._StadiumToRoundedRectangleBorder$(_this.borderRadius, t2 * (1 - t), t1);
      }
      if (b instanceof A.RoundedRectangleBorder) {
        t1 = A.BorderSide_lerp(_this.side, b.side, t);
        t2 = _this.rectilinearity;
        if (typeof t2 !== "number")
          return B.iae(t2);
        return A._StadiumToRoundedRectangleBorder$(_this.borderRadius, t2 + (1 - t2) * t, t1);
      }
      if (b instanceof A._StadiumToRoundedRectangleBorder) {
        t1 = A.BorderSide_lerp(_this.side, b.side, t);
        t2 = A.BorderRadiusGeometry_lerp(_this.borderRadius, b.borderRadius, t);
        t2.toString;
        t3 = A.lerpDouble(_this.rectilinearity, b.rectilinearity, t);
        t3.toString;
        return A._StadiumToRoundedRectangleBorder$(t2, t3, t1);
      }
      return _this.super$OutlinedBorder$lerpTo(b, t);
    },
    _stadium_border$_adjustBorderRadius$1(rect) {
      var t2,
        t1 = type$.Rect._as(rect).get$shortestSide();
      if (typeof t1 !== "number")
        return t1.$div();
      t1 = A.BorderRadius$all(A.Radius$circular(t1 / 2));
      t2 = this.rectilinearity;
      if (typeof t2 !== "number")
        return B.iae(t2);
      t2 = A.BorderRadiusGeometry_lerp(this.borderRadius, t1, 1 - t2);
      t2.toString;
      return t2;
    },
    getOuterPath$2$textDirection(rect, textDirection) {
      var t1;
      type$.Rect._as(rect);
      type$.nullable_TextDirection._as(textDirection);
      t1 = E.Path_Path();
      t1.addRRect$1(this._stadium_border$_adjustBorderRadius$1(rect).resolve$1(textDirection).toRRect$1(rect));
      return t1;
    },
    copyWith$1$side(side) {
      var t1;
      type$.nullable_BorderSide._as(side);
      t1 = side == null ? this.side : side;
      return A._StadiumToRoundedRectangleBorder$(this.borderRadius, this.rectilinearity, t1);
    },
    paint$3$textDirection(canvas, rect, textDirection) {
      var t1, borderRect, t2;
      type$.Canvas._as(canvas);
      type$.Rect._as(rect);
      type$.nullable_TextDirection._as(textDirection);
      t1 = this.side;
      switch (t1.style) {
        case C.BorderStyle_0:
          break;
        case C.BorderStyle_1:
          borderRect = this._stadium_border$_adjustBorderRadius$1(rect).resolve$1(textDirection).toRRect$1(rect);
          t2 = t1.get$strokeOffset();
          if (typeof t2 !== "number")
            return t2.$div();
          canvas.drawRRect$2(borderRect.inflate$1(t2 / 2), t1.toPaint$0());
          break;
      }
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A._StadiumToRoundedRectangleBorder && B.boolConversionCheck(J.$eq$(other.side, _this.side)) && B.boolConversionCheck(J.$eq$(other.borderRadius, _this.borderRadius)) && B.boolConversionCheck(J.$eq$(other.rectilinearity, _this.rectilinearity));
    },
    get$hashCode(_) {
      return B.Object_hash(this.side, this.borderRadius, this.rectilinearity, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = B.S(this.side),
        t2 = B.S(this.borderRadius),
        t3 = this.rectilinearity;
      if (typeof t3 !== "number")
        return t3.$mul();
      return "StadiumBorder(" + t1 + ", " + t2 + ", " + B.S(F.JSNumber_methods.toStringAsFixed$1(t3 * 100, 1)) + "% of the way to being a RoundedRectangleBorder)";
    }
  };
  A.TextOverflow.prototype = {
    _enumToString$0() {
      return "TextOverflow." + B.S(this._core$_name);
    }
  };
  A.PlaceholderDimensions.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      return other instanceof A.PlaceholderDimensions && B.boolConversionCheck(J.$eq$(other.size, _this.size)) && B.boolConversionCheck(J.$eq$(other.alignment, _this.alignment)) && B.boolConversionCheck(J.$eq$(other.baseline, _this.baseline)) && B.boolConversionCheck(J.$eq$(other.baselineOffset, _this.baselineOffset));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.size, _this.alignment, _this.baseline, _this.baselineOffset, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    toString$0(_) {
      var t1, _this = this,
        _s22_ = "PlaceholderDimensions(",
        _0_0 = _this.alignment;
      $label0$0: {
        if (D.PlaceholderAlignment_3 === _0_0 || D.PlaceholderAlignment_4 === _0_0 || D.PlaceholderAlignment_5 === _0_0 || D.PlaceholderAlignment_1 === _0_0 || D.PlaceholderAlignment_2 === _0_0) {
          t1 = _s22_ + B.S(_this.size) + ", " + B.S(_0_0) + ")";
          break $label0$0;
        }
        if (D.PlaceholderAlignment_0 === _0_0) {
          t1 = _s22_ + B.S(_this.size) + ", " + B.S(_0_0) + "(" + B.S(_this.baselineOffset) + " from top))";
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    }
  };
  A.TextWidthBasis.prototype = {
    _enumToString$0() {
      return "TextWidthBasis." + B.S(this._core$_name);
    }
  };
  A.WordBoundary.prototype = {
    getTextBoundaryAt$1(position) {
      return this._text_painter$_paragraph.getWordBoundary$1(E.TextPosition$(D.TextAffinity_1, E.max(B._asInt(position), 0, type$.int)));
    },
    _codePointAt$1(index) {
      var t1, t2, codeUnitAtIndex, _0_0;
      B._asInt(index);
      t1 = this._text_painter$_text;
      t2 = J.getInterceptor$s(t1);
      codeUnitAtIndex = t2.codeUnitAt$1(t1, index);
      if (codeUnitAtIndex == null)
        return null;
      _0_0 = codeUnitAtIndex & 64512;
      $label0$0: {
        if (55296 === _0_0) {
          t1 = t2.codeUnitAt$1(t1, index + 1);
          t1.toString;
          t1 = A.WordBoundary__codePointFromSurrogates(codeUnitAtIndex, t1);
          break $label0$0;
        }
        if (56320 === _0_0) {
          t1 = t2.codeUnitAt$1(t1, index - 1);
          t1.toString;
          t1 = A.WordBoundary__codePointFromSurrogates(t1, codeUnitAtIndex);
          break $label0$0;
        }
        t1 = codeUnitAtIndex;
        break $label0$0;
      }
      return t1;
    },
    _skipSpacesAndPunctuations$2(offset, $forward) {
      var innerCodePoint, t1, outerCodeUnit;
      B._asInt(offset);
      B._asBool($forward);
      innerCodePoint = this._codePointAt$1($forward ? offset - 1 : offset);
      t1 = $forward ? offset : offset - 1;
      outerCodeUnit = J.codeUnitAt$1$s(this._text_painter$_text, t1);
      return innerCodePoint == null || outerCodeUnit == null || B.boolConversionCheck(A.WordBoundary__isNewline(innerCodePoint)) || B.boolConversionCheck(A.WordBoundary__isNewline(outerCodeUnit)) || !B.boolConversionCheck(B.RegExp_RegExp("[\\p{Space_Separator}\\p{Punctuation}]", true, true).hasMatch$1(B.String_String$fromCharCode(innerCodePoint)));
    },
    get$moveByWordBoundary() {
      var result, _this = this,
        value = _this.__WordBoundary_moveByWordBoundary_FI;
      if (B.boolConversionCheck(E.isSentinel(value))) {
        result = A._UntilTextBoundary$(_this, _this.get$_skipSpacesAndPunctuations());
        value !== $ && B.throwLateFieldADI("moveByWordBoundary");
        _this.__WordBoundary_moveByWordBoundary_FI = result;
        value = result;
      }
      return value;
    }
  };
  A._UntilTextBoundary.prototype = {
    getLeadingTextBoundaryAt$1(position) {
      var offset, t1;
      B._asInt(position);
      if (position < 0)
        return null;
      offset = this._textBoundary.getLeadingTextBoundaryAt$1(position);
      if (offset == null || B.boolConversionCheck(this._predicate.call$2(offset, false)))
        t1 = offset;
      else {
        if (typeof offset !== "number")
          return offset.$sub();
        t1 = this.getLeadingTextBoundaryAt$1(offset - 1);
      }
      return t1;
    },
    getTrailingTextBoundaryAt$1(position) {
      var offset = this._textBoundary.getTrailingTextBoundaryAt$1(E.max(B._asInt(position), 0, type$.int));
      return offset == null || B.boolConversionCheck(this._predicate.call$2(offset, true)) ? offset : this.getTrailingTextBoundaryAt$1(offset);
    }
  };
  A._TextLayout.prototype = {
    get$height() {
      return this._text_painter$_paragraph.get$height();
    },
    get$maxIntrinsicLineExtent() {
      return this._text_painter$_paragraph.get$maxIntrinsicWidth();
    },
    get$longestLine() {
      return this._text_painter$_paragraph.get$longestLine();
    },
    getDistanceToBaseline$1(baseline) {
      var t1;
      switch (type$.TextBaseline._as(baseline).index) {
        case 0:
          t1 = this._text_painter$_paragraph.get$alphabeticBaseline();
          break;
        case 1:
          t1 = this._text_painter$_paragraph.get$ideographicBaseline();
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    get$_endOfTextCaretMetrics() {
      var result, _this = this,
        value = _this.___TextLayout__endOfTextCaretMetrics_FI;
      if (B.boolConversionCheck(E.isSentinel(value))) {
        result = _this._computeEndOfTextCaretAnchorOffset$0();
        _this.___TextLayout__endOfTextCaretMetrics_FI !== $ && B.throwLateFieldADI("_endOfTextCaretMetrics");
        _this.___TextLayout__endOfTextCaretMetrics_FI = result;
        value = result;
      }
      return value;
    },
    _computeEndOfTextCaretAnchorOffset$0() {
      var t2, t3, _0_0, baseline, lastGlyph, dx, glyphBounds, _this = this,
        rawString = _this._painter.get$plainText(),
        t1 = _this._text_painter$_paragraph.get$numberOfLines();
      if (typeof t1 !== "number")
        return t1.$sub();
      t1 = _this._text_painter$_paragraph.getLineMetricsAt$1(t1 - 1);
      t1.toString;
      t2 = rawString.length;
      t3 = t2 - 1;
      if (!(t3 >= 0))
        return B.ioore(rawString, t3);
      _0_0 = rawString.charCodeAt(t3);
      $label0$0: {
        t2 = 9 === _0_0 || 12288 === _0_0 || 32 === _0_0;
        if (t2)
          break $label0$0;
        break $label0$0;
      }
      baseline = t1.get$baseline();
      lastGlyph = A._InitializedCell$named("lastGlyph", new A._TextLayout__computeEndOfTextCaretAnchorOffset_closure(_this, rawString));
      dx = null;
      if (t2 && lastGlyph.readFinal$1$0(type$.nullable_GlyphInfo) != null) {
        glyphBounds = lastGlyph.readFinal$1$0(type$.GlyphInfo).graphemeClusterLayoutBounds;
        t1 = _this.writingDirection;
        switch (t1) {
          case D.TextDirection_1:
            t2 = glyphBounds.right;
            break;
          case D.TextDirection_0:
            t2 = glyphBounds.left;
            break;
          default:
            t2 = dx;
        }
        dx = t2;
      } else {
        t2 = _this.writingDirection;
        switch (t2) {
          case D.TextDirection_1:
            t3 = t1.get$left();
            t1 = t1.get$width();
            if (typeof t3 !== "number")
              return t3.$add();
            if (typeof t1 !== "number")
              return B.iae(t1);
            t1 = t3 + t1;
            break;
          case D.TextDirection_0:
            t1 = t1.get$left();
            break;
          default:
            t1 = dx;
        }
        dx = t1;
        t1 = t2;
      }
      return A._LineCaretMetrics$(E.Offset$(dx, baseline), t1);
    },
    _contentWidthFor$3(minWidth, maxWidth, widthBasis) {
      var t1;
      B._asDouble(minWidth);
      B._asDouble(maxWidth);
      switch (type$.TextWidthBasis._as(widthBasis).index) {
        case 1:
          t1 = E.clampDouble(this.get$longestLine(), minWidth, maxWidth);
          break;
        case 0:
          t1 = E.clampDouble(this.get$maxIntrinsicLineExtent(), minWidth, maxWidth);
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    set$_text_painter$_paragraph(_paragraph) {
      this._text_painter$_paragraph = type$.Paragraph._as(_paragraph);
    }
  };
  A._TextPainterLayoutCacheWithOffset.prototype = {
    get$paintOffset() {
      var t2, t3, _this = this,
        t1 = _this.textAlignment;
      if (B.boolConversionCheck(J.$eq$(t1, 0)))
        return D.Offset_0_0;
      if (!B.boolConversionCheck(J.get$isFinite$n(_this.get$paragraph().get$width())))
        return C.Offset_y9W;
      t2 = _this.contentWidth;
      t3 = _this.get$paragraph().get$width();
      if (typeof t2 !== "number")
        return t2.$sub();
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (typeof t1 !== "number")
        return t1.$mul();
      return E.Offset$(t1 * (t2 - t3), 0);
    },
    get$paragraph() {
      return this.layout._text_painter$_paragraph;
    },
    _resizeToFit$3(minWidth, maxWidth, widthBasis) {
      var t1, maxIntrinsicWidth, skipLineBreaking, _this = this;
      B._asDouble(minWidth);
      B._asDouble(maxWidth);
      type$.TextWidthBasis._as(widthBasis);
      t1 = _this.contentWidth;
      if (maxWidth === t1 && minWidth === t1) {
        _this.set$contentWidth(_this.layout._contentWidthFor$3(minWidth, maxWidth, widthBasis));
        return true;
      }
      if (!B.boolConversionCheck(J.get$isFinite$n(_this.get$paintOffset().get$dx())) && !B.boolConversionCheck(J.get$isFinite$n(_this.get$paragraph().get$width())) && B.boolConversionCheck(F.JSNumber_methods.get$isFinite(minWidth)))
        return false;
      maxIntrinsicWidth = _this.get$paragraph().get$maxIntrinsicWidth();
      if (maxWidth !== _this.layoutMaxWidth) {
        t1 = _this.get$paragraph().get$width();
        if (typeof t1 !== "number")
          return t1.$sub();
        skipLineBreaking = t1 - maxIntrinsicWidth > -1e-10 && maxWidth - maxIntrinsicWidth > -1e-10;
      } else
        skipLineBreaking = true;
      if (skipLineBreaking) {
        _this.set$contentWidth(_this.layout._contentWidthFor$3(minWidth, maxWidth, widthBasis));
        return true;
      }
      return false;
    },
    get$inlinePlaceholderBoxes() {
      var t1 = this._cachedInlinePlaceholderBoxes;
      if (t1 == null) {
        t1 = this.get$paragraph().getBoxesForPlaceholders$0();
        this.set$_cachedInlinePlaceholderBoxes(t1);
      }
      return t1;
    },
    get$lineMetrics() {
      var t1 = this._cachedLineMetrics;
      if (t1 == null) {
        t1 = this.get$paragraph().computeLineMetrics$0();
        this.set$_cachedLineMetrics(t1);
      }
      return t1;
    },
    set$contentWidth(contentWidth) {
      this.contentWidth = B._asDouble(contentWidth);
    },
    set$_cachedInlinePlaceholderBoxes(_cachedInlinePlaceholderBoxes) {
      this._cachedInlinePlaceholderBoxes = type$.nullable_List_TextBox._as(_cachedInlinePlaceholderBoxes);
    },
    set$_cachedLineMetrics(_cachedLineMetrics) {
      this._cachedLineMetrics = type$.nullable_List_LineMetrics._as(_cachedLineMetrics);
    }
  };
  A._LineCaretMetrics.prototype = {
    shift$1(offset) {
      type$.Offset._as(offset);
      return B.boolConversionCheck(offset.$eq(0, D.Offset_0_0)) ? this : A._LineCaretMetrics$(offset.$add(0, this.offset), this.writingDirection);
    }
  };
  A.TextPainter.prototype = {
    TextPainter$11$ellipsis$locale$maxLines$strutStyle$text$textAlign$textDirection$textHeightBehavior$textScaleFactor$textScaler$textWidthBasis(ellipsis, locale, maxLines, strutStyle, text, textAlign, textDirection, textHeightBehavior, textScaleFactor, textScaler, textWidthBasis) {
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(B.S(C.Type_TextPainter_58T), "package:flutter/painting.dart", this);
    },
    markNeedsLayout$0() {
      var t1 = this._layoutCache;
      if (t1 != null)
        t1.get$paragraph().dispose$0();
      this._layoutCache = null;
    },
    get$text() {
      return this._text_painter$_text;
    },
    set$text(value) {
      var t1, t2, comparison, _this = this;
      type$.nullable_InlineSpan._as(value);
      if (B.boolConversionCheck(J.$eq$(_this._text_painter$_text, value)))
        return;
      t1 = _this._text_painter$_text;
      t1 = t1 == null ? null : t1.style;
      t2 = value == null;
      if (!B.boolConversionCheck(J.$eq$(t1, t2 ? null : value.style))) {
        t1 = _this._layoutTemplate;
        if (t1 != null)
          t1.dispose$0();
        _this._layoutTemplate = null;
      }
      if (t2)
        comparison = C.RenderComparison_3;
      else {
        t1 = _this._text_painter$_text;
        t1 = t1 == null ? null : J.compareTo$1$ns(t1, value);
        comparison = t1 == null ? C.RenderComparison_3 : t1;
      }
      _this._text_painter$_text = value;
      _this._cachedPlainText = null;
      t1 = comparison.index;
      if (typeof t1 !== "number")
        return t1.$ge();
      if (t1 >= 3)
        _this.markNeedsLayout$0();
      else if (t1 >= 2)
        _this._rebuildParagraphForPaint = true;
    },
    get$plainText() {
      var t1, _this = this;
      if (_this._cachedPlainText == null) {
        t1 = _this._text_painter$_text;
        _this.set$_cachedPlainText(t1 == null ? null : t1.toPlainText$1$includeSemanticsLabels(false));
      }
      t1 = _this._cachedPlainText;
      return t1 == null ? "" : t1;
    },
    get$textAlign() {
      return this._text_painter$_textAlign;
    },
    set$textAlign(value) {
      type$.TextAlign._as(value);
      if (B.boolConversionCheck(J.$eq$(this._text_painter$_textAlign, value)))
        return;
      this._text_painter$_textAlign = value;
      this.markNeedsLayout$0();
    },
    get$textDirection() {
      return this._text_painter$_textDirection;
    },
    set$textDirection(value) {
      var t1, _this = this;
      type$.nullable_TextDirection._as(value);
      if (B.boolConversionCheck(J.$eq$(_this._text_painter$_textDirection, value)))
        return;
      _this._text_painter$_textDirection = value;
      _this.markNeedsLayout$0();
      t1 = _this._layoutTemplate;
      if (t1 != null)
        t1.dispose$0();
      _this._layoutTemplate = null;
    },
    get$textScaler() {
      return this._text_painter$_textScaler;
    },
    set$textScaler(value) {
      var t1, _this = this;
      type$.TextScaler._as(value);
      if (B.boolConversionCheck(value.$eq(0, _this._text_painter$_textScaler)))
        return;
      _this._text_painter$_textScaler = value;
      _this.markNeedsLayout$0();
      t1 = _this._layoutTemplate;
      if (t1 != null)
        t1.dispose$0();
      _this._layoutTemplate = null;
    },
    get$ellipsis() {
      return this._text_painter$_ellipsis;
    },
    set$ellipsis(value) {
      B._asStringQ(value);
      if (B.boolConversionCheck(J.$eq$(this._text_painter$_ellipsis, value)))
        return;
      this._text_painter$_ellipsis = value;
      this.markNeedsLayout$0();
    },
    get$locale() {
      return this._text_painter$_locale;
    },
    set$locale(value) {
      type$.nullable_Locale._as(value);
      if (B.boolConversionCheck(J.$eq$(this._text_painter$_locale, value)))
        return;
      this._text_painter$_locale = value;
      this.markNeedsLayout$0();
    },
    get$maxLines() {
      return this._text_painter$_maxLines;
    },
    set$maxLines(value) {
      B._asIntQ(value);
      if (B.boolConversionCheck(J.$eq$(this._text_painter$_maxLines, value)))
        return;
      this._text_painter$_maxLines = value;
      this.markNeedsLayout$0();
    },
    get$strutStyle() {
      return this._text_painter$_strutStyle;
    },
    set$strutStyle(value) {
      type$.nullable_StrutStyle._as(value);
      if (B.boolConversionCheck(J.$eq$(this._text_painter$_strutStyle, value)))
        return;
      this._text_painter$_strutStyle = value;
      this.markNeedsLayout$0();
    },
    get$textWidthBasis() {
      return this._textWidthBasis;
    },
    set$textWidthBasis(value) {
      type$.TextWidthBasis._as(value);
      if (B.boolConversionCheck(J.$eq$(this._textWidthBasis, value)))
        return;
      this._textWidthBasis = value;
    },
    get$textHeightBehavior() {
      return this._text_painter$_textHeightBehavior;
    },
    set$textHeightBehavior(value) {
      type$.nullable_TextHeightBehavior._as(value);
      if (B.boolConversionCheck(J.$eq$(this._text_painter$_textHeightBehavior, value)))
        return;
      this._text_painter$_textHeightBehavior = value;
      this.markNeedsLayout$0();
    },
    get$inlinePlaceholderBoxes() {
      var offset, rawBoxes,
        layout = this._layoutCache;
      if (layout == null)
        return null;
      offset = layout.get$paintOffset();
      if (!B.boolConversionCheck(J.get$isFinite$n(offset.get$dx())) || !B.boolConversionCheck(J.get$isFinite$n(offset.get$dy())))
        return B._setArrayType([], type$.JSArray_TextBox);
      rawBoxes = layout.get$inlinePlaceholderBoxes();
      if (B.boolConversionCheck(offset.$eq(0, D.Offset_0_0)))
        return rawBoxes;
      return J.toList$1$growable$ax(J.map$1$1$ax(rawBoxes, new A.TextPainter_inlinePlaceholderBoxes_closure(offset), type$.TextBox), false);
    },
    setPlaceholderDimensions$1(value) {
      type$.nullable_List_PlaceholderDimensions._as(value);
      if (value == null || B.boolConversionCheck(J.get$isEmpty$asx(value)) || B.boolConversionCheck(E.listEquals(value, this._text_painter$_placeholderDimensions, type$.PlaceholderDimensions)))
        return;
      this.set$_text_painter$_placeholderDimensions(value);
      this.markNeedsLayout$0();
    },
    _createParagraphStyle$1(textAlignOverride) {
      var t1, baseStyle, t2, t3, t4, t5, _this = this;
      type$.nullable_TextAlign._as(textAlignOverride);
      t1 = _this._text_painter$_text;
      baseStyle = t1 == null ? null : t1.style;
      if (baseStyle == null)
        baseStyle = C.TextStyle_aF8;
      t1 = textAlignOverride == null ? _this.get$textAlign() : textAlignOverride;
      t2 = _this.get$textDirection();
      t3 = _this.get$textScaler();
      t4 = _this._text_painter$_maxLines;
      t5 = _this._text_painter$_textHeightBehavior;
      return baseStyle.getParagraphStyle$8$ellipsis$locale$maxLines$strutStyle$textAlign$textDirection$textHeightBehavior$textScaler(_this._text_painter$_ellipsis, _this._text_painter$_locale, t4, _this._text_painter$_strutStyle, t1, t2, t5, t3);
    },
    _createParagraphStyle$0() {
      return this._createParagraphStyle$1(null);
    },
    _createLayoutTemplate$0() {
      var textStyle,
        builder = E.ParagraphBuilder_ParagraphBuilder(this._createParagraphStyle$1(D.TextAlign_0)),
        t1 = this.get$text();
      if (t1 == null)
        textStyle = null;
      else {
        t1 = t1.style;
        textStyle = t1 == null ? null : t1.getTextStyle$1$textScaler(this.get$textScaler());
      }
      if (textStyle != null)
        builder.pushStyle$1(textStyle);
      builder.addText$1(" ");
      t1 = builder.build$0();
      t1.layout$1(C.ParagraphConstraints_XfG);
      return t1;
    },
    _getOrCreateLayoutTemplate$0() {
      var t1 = this._layoutTemplate;
      if (t1 == null) {
        t1 = this._createLayoutTemplate$0();
        this.set$_layoutTemplate(t1);
      }
      return t1;
    },
    get$preferredLineHeight() {
      return this._getOrCreateLayoutTemplate$0().get$height();
    },
    get$width() {
      return this._layoutCache.contentWidth;
    },
    get$height() {
      return this._layoutCache.layout.get$height();
    },
    get$size() {
      return E.Size$(this.get$width(), this.get$height());
    },
    computeDistanceToActualBaseline$1(baseline) {
      type$.TextBaseline._as(baseline);
      return this._layoutCache.layout.getDistanceToBaseline$1(baseline);
    },
    get$didExceedMaxLines() {
      return this._layoutCache.get$paragraph().get$didExceedMaxLines();
    },
    _createParagraph$1(text) {
      var builder, t1, _this = this;
      type$.InlineSpan._as(text);
      builder = E.ParagraphBuilder_ParagraphBuilder(_this._createParagraphStyle$0());
      t1 = _this.get$textScaler();
      text.build$3$dimensions$textScaler(builder, _this._text_painter$_placeholderDimensions, t1);
      _this._rebuildParagraphForPaint = false;
      return builder.build$0();
    },
    layout$2$maxWidth$minWidth(maxWidth, minWidth) {
      var cachedLayout, t1, text, textDirection, paintOffsetAlignment, adjustedMaxWidth, t2, layoutMaxWidth, paragraph, layout, contentWidth, newInputWidth, newLayoutCache, _this = this;
      B._asDouble(minWidth);
      B._asDouble(maxWidth);
      cachedLayout = _this._layoutCache;
      t1 = cachedLayout == null;
      if (!t1 && B.boolConversionCheck(cachedLayout._resizeToFit$3(minWidth, maxWidth, _this.get$textWidthBasis())))
        return;
      text = _this.get$text();
      if (text == null)
        throw B.wrapException(B.StateError$("TextPainter.text must be set to a non-null value before using the TextPainter."));
      textDirection = _this.get$textDirection();
      if (textDirection == null)
        throw B.wrapException(B.StateError$("TextPainter.textDirection must be set to a non-null value before using the TextPainter."));
      paintOffsetAlignment = A.TextPainter__computePaintOffsetFraction(_this.get$textAlign(), textDirection);
      if (!(!B.boolConversionCheck(F.JSNumber_methods.get$isFinite(maxWidth)) && paintOffsetAlignment !== 0))
        adjustedMaxWidth = maxWidth;
      else
        adjustedMaxWidth = t1 ? null : cachedLayout.layout.get$maxIntrinsicLineExtent();
      t2 = adjustedMaxWidth == null;
      layoutMaxWidth = t2 ? maxWidth : adjustedMaxWidth;
      paragraph = t1 ? null : cachedLayout.get$paragraph();
      if (paragraph == null)
        paragraph = _this._createParagraph$1(text);
      paragraph.layout$1(E.ParagraphConstraints$(layoutMaxWidth));
      layout = A._TextLayout$_(paragraph, textDirection, _this);
      contentWidth = layout._contentWidthFor$3(minWidth, maxWidth, _this.get$textWidthBasis());
      if (t2 && B.boolConversionCheck(F.JSNumber_methods.get$isFinite(minWidth))) {
        newInputWidth = layout.get$maxIntrinsicLineExtent();
        paragraph.layout$1(E.ParagraphConstraints$(newInputWidth));
        newLayoutCache = A._TextPainterLayoutCacheWithOffset$(layout, paintOffsetAlignment, newInputWidth, contentWidth);
      } else
        newLayoutCache = A._TextPainterLayoutCacheWithOffset$(layout, paintOffsetAlignment, layoutMaxWidth, contentWidth);
      _this._layoutCache = newLayoutCache;
    },
    layout$0() {
      return this.layout$2$maxWidth$minWidth(1 / 0, 0);
    },
    layout$1$maxWidth(maxWidth) {
      return this.layout$2$maxWidth$minWidth(maxWidth, 0);
    },
    paint$2(canvas, offset) {
      var layoutCache, paragraph, t1, t2, _this = this;
      type$.Canvas._as(canvas);
      type$.Offset._as(offset);
      layoutCache = _this._layoutCache;
      if (layoutCache == null)
        throw B.wrapException(B.StateError$("TextPainter.paint called when text geometry was not yet calculated.\nPlease call layout() before paint() to position the text before painting it."));
      if (!B.boolConversionCheck(J.get$isFinite$n(layoutCache.get$paintOffset().get$dx())) || !B.boolConversionCheck(J.get$isFinite$n(layoutCache.get$paintOffset().get$dy())))
        return;
      if (B.boolConversionCheck(_this._rebuildParagraphForPaint)) {
        paragraph = layoutCache.get$paragraph();
        t1 = layoutCache.layout;
        t2 = _this.get$text();
        t2.toString;
        t2 = _this._createParagraph$1(t2);
        t2.layout$1(E.ParagraphConstraints$(layoutCache.layoutMaxWidth));
        t1.set$_text_painter$_paragraph(t2);
        paragraph.dispose$0();
      }
      canvas.drawParagraph$2(layoutCache.get$paragraph(), offset.$add(0, layoutCache.get$paintOffset()));
    },
    getOffsetForCaret$2(position, caretPrototype) {
      var t1, caretMetrics, t2, t3, paintOffsetAlignment, dx, _0_1, _0_4_isSet, _0_4, _0_40, offset, t4, adjustedDx, _this = this, _null = null;
      type$.TextPosition._as(position);
      type$.Rect._as(caretPrototype);
      t1 = _this._layoutCache;
      t1.toString;
      caretMetrics = _this._computeCaretMetrics$1(position);
      if (caretMetrics == null) {
        t2 = _this.get$textAlign();
        t3 = _this.get$textDirection();
        t3.toString;
        paintOffsetAlignment = A.TextPainter__computePaintOffsetFraction(t2, t3);
        if (paintOffsetAlignment === 0)
          dx = 0;
        else {
          t1 = t1.contentWidth;
          if (typeof t1 !== "number")
            return B.iae(t1);
          dx = paintOffsetAlignment * t1;
        }
        return E.Offset$(dx, 0);
      }
      $label0$0: {
        _0_1 = caretMetrics.writingDirection;
        t2 = _0_1;
        _0_4_isSet = D.TextDirection_1 === t2;
        _0_4 = _null;
        if (_0_4_isSet) {
          _0_40 = caretMetrics.offset;
          t2 = _0_40;
          _0_4 = t2;
          t2 = t2 instanceof E.Offset;
        } else
          t2 = false;
        if (t2) {
          offset = _0_4_isSet ? _0_4 : caretMetrics.offset;
          t2 = offset;
          break $label0$0;
        }
        if (D.TextDirection_0 === _0_1) {
          if (_0_4_isSet)
            t2 = _0_4;
          else {
            _0_4 = caretMetrics.offset;
            t2 = _0_4;
            _0_4_isSet = true;
          }
          t2 = t2 instanceof E.Offset;
        } else
          t2 = false;
        if (t2) {
          offset = _0_4_isSet ? _0_4 : caretMetrics.offset;
          t2 = offset.get$dx();
          t3 = caretPrototype.get$width();
          if (typeof t2 !== "number")
            return t2.$sub();
          if (typeof t3 !== "number")
            return B.iae(t3);
          t3 = E.Offset$(t2 - t3, offset.get$dy());
          t2 = t3;
          break $label0$0;
        }
        t2 = _null;
      }
      t3 = t2.get$dx();
      t4 = t1.get$paintOffset().get$dx();
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      adjustedDx = E.clampDouble(t3 + t4, 0, t1.contentWidth);
      t2 = t2.get$dy();
      t1 = t1.get$paintOffset().get$dy();
      if (typeof t2 !== "number")
        return t2.$add();
      if (typeof t1 !== "number")
        return B.iae(t1);
      return E.Offset$(adjustedDx, t2 + t1);
    },
    getFullHeightForCaret$2(position, caretPrototype) {
      type$.TextPosition._as(position);
      type$.Rect._as(caretPrototype);
      return J.get$single$ax(this._getOrCreateLayoutTemplate$0().getBoxesForRange$3$boxHeightStyle(0, 1, C.BoxHeightStyle_5)).toRect$0().get$height();
    },
    _isNewlineAtOffset$1(offset) {
      var t1;
      B._asInt(offset);
      if (0 <= offset) {
        t1 = J.get$length$asx(this.get$plainText());
        if (typeof t1 !== "number")
          return B.iae(t1);
        t1 = offset < t1 && B.boolConversionCheck(A.WordBoundary__isNewline(J.codeUnitAt$1$s(this.get$plainText(), offset)));
      } else
        t1 = false;
      return t1;
    },
    get$_caretMetrics() {
      return this.__TextPainter__caretMetrics_A;
    },
    set$_caretMetrics(value) {
      this.__TextPainter__caretMetrics_A = type$._LineCaretMetrics._as(value);
    },
    _computeCaretMetrics$1(position) {
      var t1, t2, _0_1, _0_4_isSet, _0_4, _0_40, offset, _0_8_isSet, _0_8, _1_1, t3, anchorToLeadingEdge, t4, _1_2, caretPositionCacheKey, glyphInfo, baselineOffset, graphemeRange, boxes, box, metrics, graphemeBounds, _this = this, _null = null;
      type$.TextPosition._as(position);
      t1 = _this._layoutCache;
      t1.toString;
      t2 = t1.get$paragraph().get$numberOfLines();
      if (typeof t2 !== "number")
        return t2.$lt();
      if (t2 < 1 || B.boolConversionCheck(J.get$isEmpty$asx(_this.get$plainText())))
        return _null;
      $label0$0: {
        _0_1 = position.offset;
        t2 = _0_1;
        if (0 === t2) {
          t2 = C.Record2_0_true;
          break $label0$0;
        }
        _0_4_isSet = B._isInt(_0_1);
        _0_4 = _null;
        t2 = false;
        if (_0_4_isSet) {
          _0_40 = position.affinity;
          t2 = _0_40;
          _0_4 = t2;
          t2 = D.TextAffinity_1 === t2;
          offset = _0_1;
        } else
          offset = _null;
        if (t2) {
          t2 = new B._Record_2(offset, true);
          break $label0$0;
        }
        _0_8_isSet = B._isInt(_0_1);
        _0_8 = _null;
        t2 = false;
        if (_0_8_isSet) {
          if (_0_4_isSet)
            t2 = _0_4;
          else {
            _0_4 = position.affinity;
            t2 = _0_4;
            _0_4_isSet = true;
          }
          _0_8 = D.TextAffinity_0 === t2;
          t2 = _0_8;
          t2 = B.boolConversionCheck(t2) && B.boolConversionCheck(_this._isNewlineAtOffset$1(_0_1 - 1));
          offset = _0_1;
        } else
          offset = _null;
        if (t2) {
          t2 = new B._Record_2(offset, true);
          break $label0$0;
        }
        t2 = false;
        if (B._isInt(_0_1)) {
          if (_0_8_isSet)
            t2 = _0_8;
          else {
            _0_8 = D.TextAffinity_0 === (_0_4_isSet ? _0_4 : position.affinity);
            t2 = _0_8;
          }
          B.boolConversionCheck(t2);
          offset = _0_1;
        } else
          offset = _null;
        if (t2) {
          if (typeof offset !== "number")
            return offset.$sub();
          t2 = new B._Record_2(offset - 1, false);
          break $label0$0;
        }
        t2 = _null;
      }
      _1_1 = t2._0;
      t3 = _1_1;
      anchorToLeadingEdge = _null;
      t4 = false;
      if (B._isInt(t3)) {
        _1_2 = t2._1;
        t2 = _1_2;
        t2 = B._isBool(t2);
        if (t2)
          anchorToLeadingEdge = _1_2;
        offset = _1_1;
      } else {
        t2 = t4;
        offset = _null;
      }
      if (!t2)
        throw B.wrapException(B.StateError$("Pattern matching error"));
      B.boolConversionCheck(anchorToLeadingEdge);
      if (anchorToLeadingEdge)
        caretPositionCacheKey = offset;
      else {
        if (typeof offset !== "number")
          return offset.$negate();
        caretPositionCacheKey = -offset - 1;
      }
      if (caretPositionCacheKey === t1._previousCaretPositionKey)
        return _this.get$_caretMetrics();
      glyphInfo = t1.get$paragraph().getGlyphInfoAt$1(offset);
      if (glyphInfo == null) {
        baselineOffset = _this._getOrCreateLayoutTemplate$0().getLineMetricsAt$1(0).get$baseline();
        return t1.layout.get$_endOfTextCaretMetrics().shift$1(E.Offset$(0, -baselineOffset));
      }
      graphemeRange = glyphInfo.graphemeClusterCodeUnitRange;
      if (B.boolConversionCheck(graphemeRange.get$isCollapsed())) {
        if (typeof offset !== "number")
          return offset.$add();
        return _this._computeCaretMetrics$1(E.TextPosition$(D.TextAffinity_1, offset + 1));
      }
      if (anchorToLeadingEdge && !B.boolConversionCheck(J.$eq$(graphemeRange.start, offset)))
        return _this._computeCaretMetrics$1(E.TextPosition$(D.TextAffinity_1, graphemeRange.end));
      boxes = t1.get$paragraph().getBoxesForRange$3$boxHeightStyle(graphemeRange.start, graphemeRange.end, C.BoxHeightStyle_5);
      t2 = J.getInterceptor$asx(boxes);
      if (B.boolConversionCheck(t2.get$isNotEmpty(boxes))) {
        switch (glyphInfo.writingDirection) {
          case D.TextDirection_1:
            t3 = anchorToLeadingEdge;
            break;
          case D.TextDirection_0:
            t3 = !anchorToLeadingEdge;
            break;
          default:
            t3 = _null;
        }
        box = t3 ? t2.get$first(boxes) : t2.get$last(boxes);
        t2 = t3 ? box.left : box.right;
        metrics = A._LineCaretMetrics$(E.Offset$(t2, box.top), box.direction);
      } else {
        graphemeBounds = glyphInfo.graphemeClusterLayoutBounds;
        t2 = glyphInfo.writingDirection;
        switch (t2) {
          case D.TextDirection_1:
            t3 = anchorToLeadingEdge ? graphemeBounds.left : graphemeBounds.right;
            break;
          case D.TextDirection_0:
            t3 = anchorToLeadingEdge ? graphemeBounds.right : graphemeBounds.left;
            break;
          default:
            t3 = _null;
        }
        metrics = A._LineCaretMetrics$(E.Offset$(t3, graphemeBounds.top), t2);
      }
      t1._previousCaretPositionKey = caretPositionCacheKey;
      _this.set$_caretMetrics(metrics);
      return metrics;
    },
    getBoxesForSelection$3$boxHeightStyle$boxWidthStyle(selection, boxHeightStyle, boxWidthStyle) {
      var t1, offset, boxes;
      type$.TextSelection._as(selection);
      type$.BoxHeightStyle._as(boxHeightStyle);
      type$.BoxWidthStyle._as(boxWidthStyle);
      t1 = this._layoutCache;
      t1.toString;
      offset = t1.get$paintOffset();
      if (!B.boolConversionCheck(J.get$isFinite$n(offset.get$dx())) || !B.boolConversionCheck(J.get$isFinite$n(offset.get$dy())))
        return B._setArrayType([], type$.JSArray_TextBox);
      boxes = t1.get$paragraph().getBoxesForRange$4$boxHeightStyle$boxWidthStyle(selection.start, selection.end, boxHeightStyle, boxWidthStyle);
      return B.boolConversionCheck(offset.$eq(0, D.Offset_0_0)) ? boxes : J.toList$1$growable$ax(J.map$1$1$ax(boxes, new A.TextPainter_getBoxesForSelection_closure(offset), type$.TextBox), false);
    },
    getClosestGlyphForOffset$1(offset) {
      var t1, rawGlyphInfo;
      type$.Offset._as(offset);
      t1 = this._layoutCache;
      t1.toString;
      rawGlyphInfo = t1.get$paragraph().getClosestGlyphInfoForOffset$1(offset.$sub(0, t1.get$paintOffset()));
      if (rawGlyphInfo == null || B.boolConversionCheck(J.$eq$(t1.get$paintOffset(), D.Offset_0_0)))
        return rawGlyphInfo;
      return E.GlyphInfo$(rawGlyphInfo.graphemeClusterLayoutBounds.shift$1(t1.get$paintOffset()), rawGlyphInfo.graphemeClusterCodeUnitRange, rawGlyphInfo.writingDirection);
    },
    getPositionForOffset$1(offset) {
      var t1;
      type$.Offset._as(offset);
      t1 = this._layoutCache;
      t1.toString;
      return t1.get$paragraph().getPositionForOffset$1(offset.$sub(0, t1.get$paintOffset()));
    },
    getWordBoundary$1(position) {
      type$.TextPosition._as(position);
      return this._layoutCache.get$paragraph().getWordBoundary$1(position);
    },
    get$wordBoundaries() {
      var t1 = this.get$text();
      t1.toString;
      return A.WordBoundary$_(t1, this._layoutCache.get$paragraph());
    },
    getLineBoundary$1(position) {
      type$.TextPosition._as(position);
      return this._layoutCache.get$paragraph().getLineBoundary$1(position);
    },
    computeLineMetrics$0() {
      var offset, rawMetrics,
        t1 = this._layoutCache;
      t1.toString;
      offset = t1.get$paintOffset();
      if (!B.boolConversionCheck(J.get$isFinite$n(offset.get$dx())) || !B.boolConversionCheck(J.get$isFinite$n(offset.get$dy())))
        return C.List_empty9;
      rawMetrics = t1.get$lineMetrics();
      return B.boolConversionCheck(offset.$eq(0, D.Offset_0_0)) ? rawMetrics : J.toList$1$growable$ax(J.map$1$1$ax(rawMetrics, new A.TextPainter_computeLineMetrics_closure(offset), type$.LineMetrics), false);
    },
    dispose$0() {
      var t1, _this = this;
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectDisposed$1$object(_this);
      t1 = _this._layoutTemplate;
      if (t1 != null)
        t1.dispose$0();
      _this._layoutTemplate = null;
      t1 = _this._layoutCache;
      if (t1 != null)
        t1.get$paragraph().dispose$0();
      _this._text_painter$_text = _this._layoutCache = null;
    },
    set$_cachedPlainText(_cachedPlainText) {
      this._cachedPlainText = B._asStringQ(_cachedPlainText);
    },
    set$_text_painter$_placeholderDimensions(_placeholderDimensions) {
      this._text_painter$_placeholderDimensions = type$.nullable_List_PlaceholderDimensions._as(_placeholderDimensions);
    },
    set$_layoutTemplate(_layoutTemplate) {
      this._layoutTemplate = type$.nullable_Paragraph._as(_layoutTemplate);
    }
  };
  A.TextSpan.prototype = {
    get$cursor() {
      return this.mouseCursor;
    },
    get$validForMouseTracker() {
      return true;
    },
    handleEvent$2($event, entry) {
      type$.PointerEvent._as($event);
      type$.HitTestEntry_HitTestTarget._as(entry);
    },
    build$3$dimensions$textScaler(builder, dimensions, textScaler) {
      var exception, stack, t1, hasStyle, exception0, children;
      type$.ParagraphBuilder._as(builder);
      type$.TextScaler._as(textScaler);
      type$.nullable_List_PlaceholderDimensions._as(dimensions);
      t1 = this.style;
      hasStyle = t1 != null;
      if (hasStyle)
        builder.pushStyle$1(t1.getTextStyle$1$textScaler(textScaler));
      t1 = this.text;
      if (t1 != null)
        try {
          builder.addText$1(t1);
        } catch (exception0) {
          t1 = B.unwrapException(exception0);
          if (t1 instanceof B.ArgumentError) {
            exception = t1;
            stack = B.getTraceFromException(exception0);
            E.FlutterError_reportError(E.FlutterErrorDetails$(E.ErrorDescription$("while building a TextSpan"), exception, null, "painting library", true, stack));
            builder.addText$1("\ufffd");
          } else
            throw exception0;
        }
      children = this.children;
      if (children != null)
        for (t1 = J.get$iterator$ax(children); B.boolConversionCheck(t1.moveNext$0());)
          t1.get$current().build$3$dimensions$textScaler(builder, dimensions, textScaler);
      if (hasStyle)
        builder.pop$0();
    },
    visitChildren$1(visitor) {
      var children, t1;
      type$.bool_Function_InlineSpan._as(visitor);
      if (this.text != null && !B.boolConversionCheck(visitor.call$1(this)))
        return false;
      children = this.children;
      if (children != null)
        for (t1 = J.get$iterator$ax(children); B.boolConversionCheck(t1.moveNext$0());)
          if (!B.boolConversionCheck(t1.get$current().visitChildren$1(visitor)))
            return false;
      return true;
    },
    visitDirectChildren$1(visitor) {
      var children, t1;
      type$.bool_Function_InlineSpan._as(visitor);
      children = this.children;
      if (children != null)
        for (t1 = J.get$iterator$ax(children); B.boolConversionCheck(t1.moveNext$0());)
          if (!B.boolConversionCheck(visitor.call$1(t1.get$current())))
            return false;
      return true;
    },
    getSpanForPositionVisitor$2(position, offset) {
      var text, affinity, targetOffset, t1, t2, endOffset, t3;
      type$.TextPosition._as(position);
      type$.Accumulator._as(offset);
      text = this.text;
      if (text == null || B.boolConversionCheck(F.JSString_methods.get$isEmpty(text)))
        return null;
      affinity = position.affinity;
      targetOffset = position.offset;
      t1 = offset.get$value();
      t2 = text.length;
      if (typeof t1 !== "number")
        return t1.$add();
      endOffset = t1 + t2;
      t1 = true;
      if (!(B.boolConversionCheck(J.$eq$(offset.get$value(), targetOffset)) && affinity === D.TextAffinity_1)) {
        t3 = offset.get$value();
        if (typeof t3 !== "number")
          return t3.$lt();
        if (!(t3 < targetOffset && targetOffset < endOffset))
          t1 = endOffset === targetOffset && affinity === D.TextAffinity_0;
      }
      if (t1)
        return this;
      offset.increment$1(t2);
      return null;
    },
    computeToPlainText$3$includePlaceholders$includeSemanticsLabels(buffer, includePlaceholders, includeSemanticsLabels) {
      var t1;
      type$.StringBuffer._as(buffer);
      B._asBool(includeSemanticsLabels);
      B._asBool(includePlaceholders);
      t1 = this.text;
      if (t1 != null)
        buffer.write$1(t1);
      t1 = this.children;
      if (t1 != null)
        for (t1 = J.get$iterator$ax(t1); B.boolConversionCheck(t1.moveNext$0());)
          t1.get$current().computeToPlainText$3$includePlaceholders$includeSemanticsLabels(buffer, includePlaceholders, includeSemanticsLabels);
    },
    computeSemanticsInformation$3$inheritedLocale$inheritedSpellOut(collector, inheritedLocale, inheritedSpellOut) {
      var t1, textLength, t2, children;
      type$.List_InlineSpanSemanticsInformation._as(collector);
      type$.nullable_Locale._as(inheritedLocale);
      B._asBool(inheritedSpellOut);
      t1 = this.text;
      if (t1 != null) {
        textLength = J.get$length$asx(t1);
        t2 = B._setArrayType([], type$.JSArray_StringAttribute);
        if (inheritedSpellOut && textLength > 0)
          t2.push(A.SpellOutStringAttribute$(E.TextRange$(textLength, 0)));
        if (inheritedLocale != null && textLength > 0)
          t2.push(A.LocaleStringAttribute$(inheritedLocale, E.TextRange$(textLength, 0)));
        J.add$1$ax(collector, A.InlineSpanSemanticsInformation$(t1, null, null, t2));
      }
      children = this.children;
      if (children != null)
        for (t1 = J.get$iterator$ax(children); B.boolConversionCheck(t1.moveNext$0());)
          t1.get$current().computeSemanticsInformation$3$inheritedLocale$inheritedSpellOut(collector, inheritedLocale, inheritedSpellOut);
    },
    computeSemanticsInformation$1(collector) {
      return this.computeSemanticsInformation$3$inheritedLocale$inheritedSpellOut(collector, null, false);
    },
    codeUnitAtVisitor$2(index, offset) {
      var text, t1, localOffset;
      B._asInt(index);
      type$.Accumulator._as(offset);
      text = this.text;
      if (text == null)
        return null;
      t1 = offset.get$value();
      if (typeof t1 !== "number")
        return B.iae(t1);
      localOffset = index - t1;
      t1 = text.length;
      offset.increment$1(t1);
      if (localOffset < t1) {
        if (localOffset >>> 0 !== localOffset)
          return B.ioore(text, localOffset);
        t1 = text.charCodeAt(localOffset);
      } else
        t1 = null;
      return t1;
    },
    compareTo$1(_, other) {
      var t1, t2, candidate, result, t3, index, t4, t5, _this = this;
      type$.InlineSpan._as(other);
      if (_this === other)
        return C.RenderComparison_0;
      if (!B.boolConversionCheck(J.$eq$(other.get$runtimeType(0), _this.get$runtimeType(0))))
        return C.RenderComparison_3;
      if (B.boolConversionCheck(J.$eq$(other.text, _this.text))) {
        t1 = _this.children;
        t1 = t1 == null ? null : J.get$length$asx(t1);
        t2 = other.children;
        t1 = !B.boolConversionCheck(J.$eq$(t1, t2 == null ? null : J.get$length$asx(t2))) || _this.style == null !== (other.style == null);
      } else
        t1 = true;
      if (t1)
        return C.RenderComparison_3;
      t1 = _this.style;
      if (t1 != null) {
        t2 = other.style;
        t2.toString;
        candidate = J.compareTo$1$ns(t1, t2);
        t1 = candidate.index;
        if (typeof t1 !== "number")
          return t1.$gt();
        result = t1 > 0 ? candidate : C.RenderComparison_0;
        if (result === C.RenderComparison_3)
          return result;
      } else
        result = C.RenderComparison_0;
      t1 = _this.children;
      if (t1 != null) {
        t2 = J.getInterceptor$asx(t1);
        t3 = other.children;
        index = 0;
        while (true) {
          t4 = t2.get$length(t1);
          if (typeof t4 !== "number")
            return B.iae(t4);
          if (!(index < t4))
            break;
          t4 = t2.$index(t1, index);
          t3.toString;
          candidate = J.compareTo$1$ns(t4, J.$index$asx(t3, index));
          t4 = candidate.index;
          t5 = result.index;
          if (typeof t4 !== "number")
            return t4.$gt();
          if (typeof t5 !== "number")
            return B.iae(t5);
          if (t4 > t5)
            result = candidate;
          if (result === C.RenderComparison_3)
            return result;
          ++index;
        }
      }
      return result;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      if (!B.boolConversionCheck(_this.super$InlineSpan$$eq(0, other)))
        return false;
      return other instanceof A.TextSpan && B.boolConversionCheck(J.$eq$(other.text, _this.text)) && B.boolConversionCheck(J.$eq$(_this.mouseCursor, other.mouseCursor)) && B.boolConversionCheck(E.listEquals(other.children, _this.children, type$.InlineSpan));
    },
    get$hashCode(_) {
      var _this = this, _null = null,
        t1 = A.InlineSpan.prototype.get$hashCode.call(_this, 0),
        t2 = _this.children;
      t2 = t2 == null ? _null : B.Object_hashAll(t2);
      return B.Object_hash(t1, _this.text, _null, _null, _null, _null, _this.mouseCursor, t2, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    toStringShort$0() {
      return E.objectRuntimeType(this, "TextSpan");
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$InlineSpan$debugFillProperties(properties);
      t1 = _this.text;
      properties.add$1(0, E.StringProperty$("text", t1, _null, true, false));
      if (_this.style == null && t1 == null && _this.children == null)
        properties.add$1(0, E.DiagnosticsNode_DiagnosticsNode$message("(empty)", true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("recognizer", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.GestureRecognizer));
      t1 = type$.nullable_Function;
      properties.add$1(0, A.FlagsSummary$("callbacks", B.LinkedHashMap_LinkedHashMap$_literal(["enter", null, "exit", null], type$.String, t1), _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("mouseCursor", _this.get$cursor(), true, D.C__DeferringMouseCursor, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.MouseCursor));
    },
    debugDescribeChildren$0() {
      var t1 = this.children;
      t1 = t1 == null ? null : J.toList$0$ax(J.map$1$1$ax(t1, new A.TextSpan_debugDescribeChildren_closure(), type$.DiagnosticsNode));
      return t1 == null ? D.List_empty1 : t1;
    },
    $isHitTestTarget: 1,
    $isMouseTrackerAnnotation: 1,
    $is_MouseTrackerAnnotation_Object_Diagnosticable: 1,
    get$onEnter() {
      return null;
    },
    get$onExit() {
      return null;
    }
  };
  A.TextStyle.prototype = {
    get$fontFamilyFallback() {
      var t1 = this._text_style$_fontFamilyFallback;
      if (!(this._package == null))
        t1 = t1 == null ? null : J.toList$0$ax(J.map$1$1$ax(t1, new A.TextStyle_fontFamilyFallback_closure(this), type$.String));
      return t1;
    },
    get$_text_style$_fontFamily() {
      var t2,
        t1 = this._package;
      if (t1 != null) {
        t1 = B.S(t1);
        t2 = this.fontFamily;
        return t2 == null ? null : J.substring$1$s(t2, ("packages/" + t1 + "/").length);
      }
      return this.fontFamily;
    },
    copyWith$25$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontVariations$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$overflow$package$shadows$textBaseline$wordSpacing(background, backgroundColor, color, debugLabel, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, leadingDistribution, letterSpacing, locale, overflow, $package, shadows, textBaseline, wordSpacing) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, _this = this,
        t1 = type$.nullable_Color;
      t1._as(color);
      t1._as(backgroundColor);
      B._asDoubleQ(fontSize);
      type$.nullable_FontWeight._as(fontWeight);
      type$.nullable_FontStyle._as(fontStyle);
      B._asDoubleQ(letterSpacing);
      B._asDoubleQ(wordSpacing);
      type$.nullable_TextBaseline._as(textBaseline);
      B._asDoubleQ(height);
      type$.nullable_TextLeadingDistribution._as(leadingDistribution);
      type$.nullable_Locale._as(locale);
      t2 = type$.nullable_Paint;
      t2._as(foreground);
      t2._as(background);
      type$.nullable_List_Shadow._as(shadows);
      type$.nullable_List_FontFeature._as(fontFeatures);
      type$.nullable_List_FontVariation._as(fontVariations);
      type$.nullable_TextDecoration._as(decoration);
      t1._as(decorationColor);
      type$.nullable_TextDecorationStyle._as(decorationStyle);
      B._asDoubleQ(decorationThickness);
      B._asStringQ(debugLabel);
      B._asStringQ(fontFamily);
      type$.nullable_List_String._as(fontFamilyFallback);
      B._asStringQ($package);
      type$.nullable_TextOverflow._as(overflow);
      t1 = _this.foreground;
      if (t1 == null && foreground == null)
        t2 = color == null ? _this.color : color;
      else
        t2 = null;
      t3 = _this.background;
      if (t3 == null && background == null)
        t4 = backgroundColor == null ? _this.backgroundColor : backgroundColor;
      else
        t4 = null;
      t5 = fontSize == null ? _this.fontSize : fontSize;
      t6 = fontWeight == null ? _this.fontWeight : fontWeight;
      t7 = fontStyle == null ? _this.fontStyle : fontStyle;
      t8 = letterSpacing == null ? _this.letterSpacing : letterSpacing;
      t9 = wordSpacing == null ? _this.wordSpacing : wordSpacing;
      t10 = textBaseline == null ? _this.textBaseline : textBaseline;
      t11 = height == null ? _this.height : height;
      t12 = leadingDistribution == null ? _this.leadingDistribution : leadingDistribution;
      t13 = locale == null ? _this.locale : locale;
      t1 = foreground == null ? t1 : foreground;
      t3 = background == null ? t3 : background;
      t14 = shadows == null ? _this.shadows : shadows;
      t15 = fontFeatures == null ? _this.fontFeatures : fontFeatures;
      t16 = fontVariations == null ? _this.fontVariations : fontVariations;
      t17 = decoration == null ? _this.decoration : decoration;
      t18 = decorationColor == null ? _this.decorationColor : decorationColor;
      t19 = decorationStyle == null ? _this.decorationStyle : decorationStyle;
      t20 = decorationThickness == null ? _this.decorationThickness : decorationThickness;
      t21 = fontFamily == null ? _this.get$_text_style$_fontFamily() : fontFamily;
      t22 = fontFamilyFallback == null ? _this._text_style$_fontFamilyFallback : fontFamilyFallback;
      t23 = $package == null ? _this._package : $package;
      t24 = overflow == null ? _this.overflow : overflow;
      return A.TextStyle$(t3, t4, t2, null, t17, t18, t19, t20, t21, t22, t15, t5, t7, t16, t6, t1, t11, _this.inherit, t12, t8, t13, t24, t23, t14, t10, t9);
    },
    copyWith$1$color(color) {
      var _null = null;
      return this.copyWith$25$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontVariations$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$overflow$package$shadows$textBaseline$wordSpacing(_null, _null, color, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    copyWith$1$letterSpacing(letterSpacing) {
      var _null = null;
      return this.copyWith$25$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontVariations$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$overflow$package$shadows$textBaseline$wordSpacing(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, letterSpacing, _null, _null, _null, _null, _null, _null);
    },
    copyWith$3$backgroundColor$color$decorationColor(backgroundColor, color, decorationColor) {
      var _null = null;
      return this.copyWith$25$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontVariations$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$overflow$package$shadows$textBaseline$wordSpacing(_null, backgroundColor, color, _null, _null, decorationColor, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    apply$9$color$decoration$decorationColor$decorationStyle$fontFamily$fontFamilyFallback$fontSizeDelta$fontSizeFactor$package(color, decoration, decorationColor, decorationStyle, fontFamily, fontFamilyFallback, fontSizeDelta, fontSizeFactor, $package) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, _this = this, _null = null,
        t1 = type$.nullable_Color;
      t1._as(color);
      type$.nullable_TextDecoration._as(decoration);
      t1._as(decorationColor);
      type$.nullable_TextDecorationStyle._as(decorationStyle);
      B._asStringQ(fontFamily);
      type$.nullable_List_String._as(fontFamilyFallback);
      B._asDouble(fontSizeFactor);
      B._asDouble(fontSizeDelta);
      B._asStringQ($package);
      t1 = _this.foreground;
      if (t1 == null)
        t2 = color == null ? _this.color : color;
      else
        t2 = _null;
      t3 = _this.background;
      if (t3 == null)
        t4 = _this.backgroundColor;
      else
        t4 = _null;
      t5 = fontFamily == null ? _this.get$_text_style$_fontFamily() : fontFamily;
      t6 = fontFamilyFallback == null ? _this._text_style$_fontFamilyFallback : fontFamilyFallback;
      t7 = _this.fontSize;
      if (t7 == null)
        t7 = _null;
      else {
        if (typeof t7 !== "number")
          return t7.$mul();
        t7 = t7 * fontSizeFactor + fontSizeDelta;
      }
      t8 = _this.fontWeight;
      if (t8 == null)
        t8 = _null;
      else {
        t8 = t8.index;
        if (typeof t8 !== "number")
          return t8.$add();
        t8 = F.JSArray_methods.$index(C.List_bNK, F.JSNumber_methods.clamp$2(t8 + 0, 0, 8));
      }
      t9 = _this.letterSpacing;
      if (t9 == null)
        t9 = _null;
      else {
        if (typeof t9 !== "number")
          return t9.$mul();
        t9 += 0;
      }
      t10 = _this.wordSpacing;
      if (t10 == null)
        t10 = _null;
      else {
        if (typeof t10 !== "number")
          return t10.$mul();
        t10 += 0;
      }
      t11 = _this.height;
      if (!(t11 == null || B.boolConversionCheck(J.$eq$(t11, 0)))) {
        t11.toString;
        if (typeof t11 !== "number")
          return t11.$mul();
        t11 += 0;
      }
      t12 = decoration == null ? _this.decoration : decoration;
      t13 = decorationColor == null ? _this.decorationColor : decorationColor;
      t14 = decorationStyle == null ? _this.decorationStyle : decorationStyle;
      t15 = _this.decorationThickness;
      if (t15 == null)
        t15 = _null;
      else {
        if (typeof t15 !== "number")
          return t15.$mul();
        t15 += 0;
      }
      t16 = $package == null ? _this._package : $package;
      return A.TextStyle$(t3, t4, t2, _null, t12, t13, t14, t15, t5, t6, _this.fontFeatures, t7, _this.fontStyle, _this.fontVariations, t8, t1, t11, _this.inherit, _this.leadingDistribution, t9, _this.locale, _this.overflow, t16, _this.shadows, _this.textBaseline, t10);
    },
    merge$1(other) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23;
      type$.nullable_TextStyle._as(other);
      if (other == null)
        return this;
      if (!B.boolConversionCheck(other.inherit))
        return other;
      t1 = other.color;
      t2 = other.backgroundColor;
      t3 = other.fontSize;
      t4 = other.fontWeight;
      t5 = other.fontStyle;
      t6 = other.letterSpacing;
      t7 = other.wordSpacing;
      t8 = other.textBaseline;
      t9 = other.height;
      t10 = other.leadingDistribution;
      t11 = other.locale;
      t12 = other.foreground;
      t13 = other.background;
      t14 = other.shadows;
      t15 = other.fontFeatures;
      t16 = other.fontVariations;
      t17 = other.decoration;
      t18 = other.decorationColor;
      t19 = other.decorationStyle;
      t20 = other.decorationThickness;
      t21 = other.get$_text_style$_fontFamily();
      t22 = other._text_style$_fontFamilyFallback;
      t23 = other._package;
      return this.copyWith$25$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontVariations$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$overflow$package$shadows$textBaseline$wordSpacing(t13, t2, t1, null, t17, t18, t19, t20, t21, t22, t15, t3, t5, t16, t4, t12, t9, t10, t6, t11, other.overflow, t23, t14, t8, t7);
    },
    getTextStyle$1$textScaler(textScaler) {
      var _0_0, t1, t2, _1_1, _1_2, t3, t4, paint, color, _this = this, _null = null;
      type$.TextScaler._as(textScaler);
      _0_0 = _this.fontSize;
      $label0$0: {
        t1 = _null;
        if (_0_0 == null)
          break $label0$0;
        t2 = B.boolConversionCheck(textScaler.$eq(0, D._LinearTextScaler_1));
        if (t2) {
          t1 = _0_0;
          break $label0$0;
        }
        t2 = textScaler.scale$1(_0_0);
        t1 = t2;
        break $label0$0;
      }
      t2 = _this.get$fontFamilyFallback();
      _1_1 = _this.background;
      _1_2 = _this.backgroundColor;
      $label1$1: {
        t3 = _1_1;
        t4 = type$.Paint;
        if (t4._is(t3)) {
          paint = _1_1 == null ? t4._as(_1_1) : _1_1;
          t3 = paint;
          break $label1$1;
        }
        t3 = _1_2;
        if (t3 instanceof E.Color) {
          color = _1_2 == null ? type$.Color._as(_1_2) : _1_2;
          t3 = E.Paint_Paint();
          t3.set$color(color);
          break $label1$1;
        }
        t3 = _null;
        break $label1$1;
      }
      return E.TextStyle_TextStyle(t3, _this.color, _this.decoration, _this.decorationColor, _this.decorationStyle, _this.decorationThickness, _this.fontFamily, t2, _this.fontFeatures, t1, _this.fontStyle, _this.fontVariations, _this.fontWeight, _this.foreground, _this.height, _this.leadingDistribution, _this.letterSpacing, _this.locale, _this.shadows, _this.textBaseline, _this.wordSpacing);
    },
    getParagraphStyle$8$ellipsis$locale$maxLines$strutStyle$textAlign$textDirection$textHeightBehavior$textScaler(ellipsis, locale, maxLines, strutStyle, textAlign, textDirection, textHeightBehavior, textScaler) {
      var leadingDistribution, effectiveTextHeightBehavior, t1, _this = this;
      type$.nullable_TextAlign._as(textAlign);
      type$.nullable_TextDirection._as(textDirection);
      type$.TextScaler._as(textScaler);
      B._asStringQ(ellipsis);
      B._asIntQ(maxLines);
      type$.nullable_TextHeightBehavior._as(textHeightBehavior);
      type$.nullable_Locale._as(locale);
      type$.nullable_StrutStyle._as(strutStyle);
      leadingDistribution = _this.leadingDistribution;
      if (textHeightBehavior == null)
        effectiveTextHeightBehavior = leadingDistribution == null ? null : A.TextHeightBehavior$(leadingDistribution);
      else
        effectiveTextHeightBehavior = textHeightBehavior;
      t1 = _this.fontSize;
      t1 = textScaler.scale$1(t1 == null ? 14 : t1);
      return E.ParagraphStyle_ParagraphStyle(ellipsis, _this.fontFamily, t1, _this.fontStyle, _this.fontWeight, _this.height, locale, maxLines, null, textAlign, textDirection, effectiveTextHeightBehavior);
    },
    compareTo$1(_, other) {
      var _this = this;
      type$.TextStyle._as(other);
      if (_this === other)
        return C.RenderComparison_0;
      if (!B.boolConversionCheck(J.$eq$(_this.inherit, other.inherit)) || !B.boolConversionCheck(J.$eq$(_this.fontFamily, other.fontFamily)) || !B.boolConversionCheck(J.$eq$(_this.fontSize, other.fontSize)) || !B.boolConversionCheck(J.$eq$(_this.fontWeight, other.fontWeight)) || !B.boolConversionCheck(J.$eq$(_this.fontStyle, other.fontStyle)) || !B.boolConversionCheck(J.$eq$(_this.letterSpacing, other.letterSpacing)) || !B.boolConversionCheck(J.$eq$(_this.wordSpacing, other.wordSpacing)) || !B.boolConversionCheck(J.$eq$(_this.textBaseline, other.textBaseline)) || !B.boolConversionCheck(J.$eq$(_this.height, other.height)) || !B.boolConversionCheck(J.$eq$(_this.leadingDistribution, other.leadingDistribution)) || !B.boolConversionCheck(J.$eq$(_this.locale, other.locale)) || !B.boolConversionCheck(J.$eq$(_this.foreground, other.foreground)) || !B.boolConversionCheck(J.$eq$(_this.background, other.background)) || !B.boolConversionCheck(E.listEquals(_this.shadows, other.shadows, type$.Shadow)) || !B.boolConversionCheck(E.listEquals(_this.fontFeatures, other.fontFeatures, type$.FontFeature)) || !B.boolConversionCheck(E.listEquals(_this.fontVariations, other.fontVariations, type$.FontVariation)) || !B.boolConversionCheck(E.listEquals(_this.get$fontFamilyFallback(), other.get$fontFamilyFallback(), type$.String)) || !B.boolConversionCheck(J.$eq$(_this.overflow, other.overflow)))
        return C.RenderComparison_3;
      if (!B.boolConversionCheck(J.$eq$(_this.color, other.color)) || !B.boolConversionCheck(J.$eq$(_this.backgroundColor, other.backgroundColor)) || !B.boolConversionCheck(J.$eq$(_this.decoration, other.decoration)) || !B.boolConversionCheck(J.$eq$(_this.decorationColor, other.decorationColor)) || !B.boolConversionCheck(J.$eq$(_this.decorationStyle, other.decorationStyle)) || !B.boolConversionCheck(J.$eq$(_this.decorationThickness, other.decorationThickness)))
        return C.RenderComparison_2;
      return C.RenderComparison_0;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.TextStyle && B.boolConversionCheck(J.$eq$(other.inherit, _this.inherit)) && B.boolConversionCheck(J.$eq$(other.color, _this.color)) && B.boolConversionCheck(J.$eq$(other.backgroundColor, _this.backgroundColor)) && B.boolConversionCheck(J.$eq$(other.fontSize, _this.fontSize)) && B.boolConversionCheck(J.$eq$(other.fontWeight, _this.fontWeight)) && B.boolConversionCheck(J.$eq$(other.fontStyle, _this.fontStyle)) && B.boolConversionCheck(J.$eq$(other.letterSpacing, _this.letterSpacing)) && B.boolConversionCheck(J.$eq$(other.wordSpacing, _this.wordSpacing)) && B.boolConversionCheck(J.$eq$(other.textBaseline, _this.textBaseline)) && B.boolConversionCheck(J.$eq$(other.height, _this.height)) && B.boolConversionCheck(J.$eq$(other.leadingDistribution, _this.leadingDistribution)) && B.boolConversionCheck(J.$eq$(other.locale, _this.locale)) && B.boolConversionCheck(J.$eq$(other.foreground, _this.foreground)) && B.boolConversionCheck(J.$eq$(other.background, _this.background)) && B.boolConversionCheck(E.listEquals(other.shadows, _this.shadows, type$.Shadow)) && B.boolConversionCheck(E.listEquals(other.fontFeatures, _this.fontFeatures, type$.FontFeature)) && B.boolConversionCheck(E.listEquals(other.fontVariations, _this.fontVariations, type$.FontVariation)) && B.boolConversionCheck(J.$eq$(other.decoration, _this.decoration)) && B.boolConversionCheck(J.$eq$(other.decorationColor, _this.decorationColor)) && B.boolConversionCheck(J.$eq$(other.decorationStyle, _this.decorationStyle)) && B.boolConversionCheck(J.$eq$(other.decorationThickness, _this.decorationThickness)) && B.boolConversionCheck(J.$eq$(other.fontFamily, _this.fontFamily)) && B.boolConversionCheck(E.listEquals(other.get$fontFamilyFallback(), _this.get$fontFamilyFallback(), type$.String)) && B.boolConversionCheck(J.$eq$(other._package, _this._package)) && B.boolConversionCheck(J.$eq$(other.overflow, _this.overflow));
    },
    get$hashCode(_) {
      var t2, t3, _this = this, _null = null,
        fontFamilyFallback = _this.get$fontFamilyFallback(),
        t1 = fontFamilyFallback == null ? _null : B.Object_hashAll(fontFamilyFallback),
        fontHash = B.Object_hash(_this.decorationStyle, _this.decorationThickness, _this.fontFamily, t1, _this._package, _this.overflow, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue),
        shadows = _this.shadows,
        fontFeatures = _this.fontFeatures,
        fontVariations = _this.fontVariations;
      t1 = shadows == null ? _null : B.Object_hashAll(shadows);
      t2 = fontFeatures == null ? _null : B.Object_hashAll(fontFeatures);
      t3 = fontVariations == null ? _null : B.Object_hashAll(fontVariations);
      return B.Object_hash(_this.inherit, _this.color, _this.backgroundColor, _this.fontSize, _this.fontWeight, _this.fontStyle, _this.letterSpacing, _this.wordSpacing, _this.textBaseline, _this.height, _this.leadingDistribution, _this.locale, _this.foreground, _this.background, t1, t2, t3, _this.decoration, _this.decorationColor, fontHash);
    },
    toStringShort$0() {
      return E.objectRuntimeType(this, "TextStyle");
    },
    debugFillProperties$2$prefix(properties, prefix) {
      var t1, styles, t2, weightDescription, decorationDescription, t3, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      B._asString(prefix);
      _this.super$Diagnosticable$debugFillProperties(properties);
      t1 = _this.debugLabel;
      if (t1 != null)
        properties.add$1(0, E.MessageProperty$(prefix + "debugLabel", t1, D.DiagnosticLevel_3));
      styles = B._setArrayType([A.ColorProperty$(prefix + "color", _this.color, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8), A.ColorProperty$(prefix + "backgroundColor", _this.backgroundColor, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8), E.StringProperty$(prefix + "family", _this.fontFamily, _null, false, true), E.IterableProperty$(prefix + "familyFallback", _this.get$fontFamilyFallback(), _null, "[]", D.DiagnosticLevel_3, D.DiagnosticsTreeStyle_8, type$.String), E.DoubleProperty$(prefix + "size", _this.fontSize, _null, _null, D.DiagnosticLevel_3, _null, _null)], type$.JSArray_DiagnosticsNode);
      t1 = _this.fontWeight;
      if (t1 != null) {
        t2 = t1.index;
        if (typeof t2 !== "number")
          return t2.$add();
        weightDescription = B.S(t2 + 1) + "00";
      } else
        weightDescription = _null;
      F.JSArray_methods.add$1(styles, E.DiagnosticsProperty$(prefix + "weight", t1, true, _null, weightDescription, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FontWeight));
      F.JSArray_methods.add$1(styles, E.EnumProperty$(prefix + "style", _this.fontStyle, _null, D.DiagnosticLevel_3, type$.FontStyle));
      F.JSArray_methods.add$1(styles, E.DoubleProperty$(prefix + "letterSpacing", _this.letterSpacing, _null, _null, D.DiagnosticLevel_3, _null, _null));
      F.JSArray_methods.add$1(styles, E.DoubleProperty$(prefix + "wordSpacing", _this.wordSpacing, _null, _null, D.DiagnosticLevel_3, _null, _null));
      F.JSArray_methods.add$1(styles, E.EnumProperty$(prefix + "baseline", _this.textBaseline, _null, D.DiagnosticLevel_3, type$.TextBaseline));
      F.JSArray_methods.add$1(styles, E.DoubleProperty$(prefix + "height", _this.height, _null, _null, D.DiagnosticLevel_3, _null, "x"));
      F.JSArray_methods.add$1(styles, E.EnumProperty$(prefix + "leadingDistribution", _this.leadingDistribution, _null, D.DiagnosticLevel_3, type$.TextLeadingDistribution));
      F.JSArray_methods.add$1(styles, E.DiagnosticsProperty$(prefix + "locale", _this.locale, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Locale));
      t1 = type$.Paint;
      F.JSArray_methods.add$1(styles, E.DiagnosticsProperty$(prefix + "foreground", _this.foreground, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      F.JSArray_methods.add$1(styles, E.DiagnosticsProperty$(prefix + "background", _this.background, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      t1 = _this.decoration;
      t2 = t1 == null;
      if (!t2 || _this.decorationColor != null || _this.decorationStyle != null || _this.decorationThickness != null) {
        decorationDescription = B._setArrayType([], type$.JSArray_String);
        t3 = _this.decorationStyle;
        if (t3 != null)
          F.JSArray_methods.add$1(decorationDescription, B.EnumName_get_name(t3));
        t3 = _this.decorationColor;
        F.JSArray_methods.add$1(styles, A.ColorProperty$(prefix + "decorationColor", t3, _null, D.DiagnosticLevel_1, true, D.DiagnosticsTreeStyle_8));
        if (t3 != null)
          F.JSArray_methods.add$1(decorationDescription, B.S(t3));
        t3 = prefix + "decoration";
        F.JSArray_methods.add$1(styles, E.DiagnosticsProperty$(t3, t1, true, _null, _null, _null, _null, D.DiagnosticLevel_0, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextDecoration));
        if (!t2)
          F.JSArray_methods.add$1(decorationDescription, B.S(t1));
        F.JSArray_methods.add$1(styles, E.MessageProperty$(t3, F.JSArray_methods.join$1(decorationDescription, " "), D.DiagnosticLevel_3));
        F.JSArray_methods.add$1(styles, E.DoubleProperty$(prefix + "decorationThickness", _this.decorationThickness, _null, _null, D.DiagnosticLevel_3, _null, "x"));
      }
      t1 = _this.inherit;
      t2 = !F.JSArray_methods.any$1(styles, new A.TextStyle_debugFillProperties_closure());
      t3 = t2 && B.boolConversionCheck(t1) ? D.DiagnosticLevel_1 : D.DiagnosticLevel_3;
      properties.add$1(0, E.DiagnosticsProperty$(prefix + "inherit", t1, true, D.C__NoDefaultValue, _null, _null, _null, t3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
      F.JSArray_methods.forEach$1(styles, properties.get$add(properties));
      if (t2)
        properties.add$1(0, E.FlagProperty$("inherit", _null, prefix + "<no style specified>", prefix + "<all styles inherited>", D.DiagnosticLevel_3, false, t1));
      F.JSArray_methods.add$1(styles, E.EnumProperty$(prefix + "overflow", _this.overflow, _null, D.DiagnosticLevel_3, type$.TextOverflow));
    },
    debugFillProperties$1(properties) {
      return this.debugFillProperties$2$prefix(properties, "");
    },
    $isDiagnosticable: 1
  };
  A._TextStyle_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.Simulation.prototype = {
    toString$0(_) {
      return E.objectRuntimeType(this, "Simulation");
    }
  };
  A.ContainerBoxParentData.prototype = {$isContainerParentDataMixin: 1};
  A.RenderBoxContainerDefaultsMixin.prototype = {
    defaultComputeDistanceToFirstActualBaseline$1(baseline) {
      var child, t1, t2, result;
      type$.TextBaseline._as(baseline);
      child = this.get$firstChild();
      for (t1 = B._instanceType(this)._eval$1("RenderBoxContainerDefaultsMixin.1"); child != null;) {
        t2 = child.parentData;
        t2.toString;
        t1._as(t2);
        result = child.getDistanceToActualBaseline$1(baseline);
        if (result != null) {
          t1 = t2.offset.get$dy();
          if (typeof t1 !== "number")
            return B.iae(t1);
          return result + t1;
        }
        child = t2.ContainerParentDataMixin_nextSibling;
      }
      return null;
    },
    defaultComputeDistanceToHighestActualBaseline$1(baseline) {
      var child, t1, minBaseline, t2;
      type$.TextBaseline._as(baseline);
      child = this.get$firstChild();
      for (t1 = B._instanceType(this)._eval$1("RenderBoxContainerDefaultsMixin.1"), minBaseline = null; child != null;) {
        t2 = child.parentData;
        t2.toString;
        t1._as(t2);
        minBaseline = A.BaselineOffset_minOf(minBaseline, A.BaselineOffset__(E.BaselineOffset_constructor_(child.getDistanceToActualBaseline$1(baseline)), t2.offset.get$dy()));
        child = t2.ContainerParentDataMixin_nextSibling;
      }
      return minBaseline;
    },
    defaultHitTestChildren$2$position(result, position) {
      var t1, t2, child, _box_0 = {};
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      t1 = _box_0.child = this.get$lastChild();
      for (t2 = B._instanceType(this)._eval$1("RenderBoxContainerDefaultsMixin.1"); t1 != null; t1 = child) {
        t1 = t1.parentData;
        t1.toString;
        t2._as(t1);
        if (result.addWithPaintOffset$3$hitTest$offset$position(new A.RenderBoxContainerDefaultsMixin_defaultHitTestChildren_closure(_box_0), t1.offset, position))
          return true;
        child = t1.ContainerParentDataMixin_previousSibling;
        _box_0.child = child;
      }
      return false;
    },
    defaultPaint$2(context, offset) {
      var child, t1, t2;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      child = this.get$firstChild();
      for (t1 = B._instanceType(this)._eval$1("RenderBoxContainerDefaultsMixin.1"); child != null;) {
        t2 = child.parentData;
        t2.toString;
        t1._as(t2);
        context.paintChild$2(child, J.$add$ansx(t2.offset, offset));
        child = t2.ContainerParentDataMixin_nextSibling;
      }
    },
    $isDiagnosticable: 1,
    $isDiagnosticableTree: 1,
    $isDiagnosticableTreeMixin: 1,
    $isHitTestTarget: 1,
    $isRenderObject: 1,
    $isContainerRenderObjectMixin: 1,
    $is_DiagnosticableTree_Object_Diagnosticable: 1,
    $is_RenderObject_Object_DiagnosticableTreeMixin: 1
  };
  A._ContainerBoxParentData_BoxParentData_ContainerParentDataMixin.prototype = {
    detach$0() {
      this.super$ParentData$detach();
    },
    $isContainerParentDataMixin: 1
  };
  A.CustomPainter.prototype = {
    addListener$1(listener) {
      type$.void_Function._as(listener);
      return null;
    },
    removeListener$1(listener) {
      type$.void_Function._as(listener);
      return null;
    },
    get$semanticsBuilder() {
      return null;
    },
    shouldRebuildSemantics$1(oldDelegate) {
      return this.shouldRepaint$1(type$.CustomPainter._as(oldDelegate));
    },
    hitTest$1(position) {
      type$.Offset._as(position);
      return null;
    },
    toString$0(_) {
      var t1 = B.S(E.describeIdentity(this));
      return t1 + "()";
    }
  };
  A.RenderCustomPaint.prototype = {
    get$painter() {
      return this._custom_paint$_painter;
    },
    set$painter(value) {
      var oldPainter, _this = this;
      type$.nullable_CustomPainter._as(value);
      if (B.boolConversionCheck(J.$eq$(_this._custom_paint$_painter, value)))
        return;
      oldPainter = _this._custom_paint$_painter;
      _this._custom_paint$_painter = value;
      _this._didUpdatePainter$2(value, oldPainter);
    },
    get$foregroundPainter() {
      return this._foregroundPainter;
    },
    set$foregroundPainter(value) {
      var oldPainter, _this = this;
      type$.nullable_CustomPainter._as(value);
      if (B.boolConversionCheck(J.$eq$(_this._foregroundPainter, value)))
        return;
      oldPainter = _this._foregroundPainter;
      _this._foregroundPainter = value;
      _this._didUpdatePainter$2(value, oldPainter);
    },
    _didUpdatePainter$2(newPainter, oldPainter) {
      var _this = this,
        t1 = type$.nullable_CustomPainter;
      t1._as(newPainter);
      t1._as(oldPainter);
      t1 = newPainter == null;
      if (t1)
        _this.markNeedsPaint$0();
      else if (oldPainter == null || !B.boolConversionCheck(J.$eq$(newPainter.get$runtimeType(0), oldPainter.get$runtimeType(0))) || B.boolConversionCheck(newPainter.shouldRepaint$1(oldPainter)))
        _this.markNeedsPaint$0();
      if (B.boolConversionCheck(_this.get$attached())) {
        if (oldPainter != null)
          oldPainter.removeListener$1(_this.get$markNeedsPaint());
        if (!t1)
          newPainter.addListener$1(_this.get$markNeedsPaint());
      }
      if (t1) {
        if (B.boolConversionCheck(_this.get$attached()))
          _this.markNeedsSemanticsUpdate$0();
      } else if (oldPainter == null || !B.boolConversionCheck(J.$eq$(newPainter.get$runtimeType(0), oldPainter.get$runtimeType(0))) || B.boolConversionCheck(newPainter.shouldRebuildSemantics$1(oldPainter)))
        _this.markNeedsSemanticsUpdate$0();
    },
    get$preferredSize() {
      return this._preferredSize;
    },
    set$preferredSize(value) {
      type$.Size._as(value);
      if (B.boolConversionCheck(J.$eq$(this.get$preferredSize(), value)))
        return;
      this._preferredSize = value;
      this.markNeedsLayout$0();
    },
    attach$1(owner) {
      var t1, _this = this;
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach(type$.PipelineOwner._as(owner));
      t1 = _this._custom_paint$_painter;
      if (t1 != null)
        t1.addListener$1(_this.get$markNeedsPaint());
      t1 = _this._foregroundPainter;
      if (t1 != null)
        t1.addListener$1(_this.get$markNeedsPaint());
    },
    detach$0() {
      var _this = this,
        t1 = _this._custom_paint$_painter;
      if (t1 != null)
        t1.removeListener$1(_this.get$markNeedsPaint());
      t1 = _this._foregroundPainter;
      if (t1 != null)
        t1.removeListener$1(_this.get$markNeedsPaint());
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach();
    },
    hitTestChildren$2$position(result, position) {
      var t1;
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      t1 = this._foregroundPainter;
      if (t1 != null) {
        t1 = t1.hitTest$1(position);
        t1 = B.boolConversionCheck(t1 == null ? false : t1);
      } else
        t1 = false;
      if (t1)
        return true;
      return this.super$RenderProxyBoxMixin$hitTestChildren(result, position);
    },
    hitTestSelf$1(position) {
      var t1;
      type$.Offset._as(position);
      t1 = this._custom_paint$_painter;
      if (t1 != null) {
        t1 = t1.hitTest$1(position);
        t1 = B.boolConversionCheck(t1 == null ? true : t1);
      } else
        t1 = false;
      return t1;
    },
    performLayout$0() {
      this.super$RenderProxyBoxMixin$performLayout();
      this.markNeedsSemanticsUpdate$0();
    },
    computeSizeForNoChild$1(constraints) {
      return type$.BoxConstraints._as(constraints).constrain$1(this.get$preferredSize());
    },
    _paintWithPainter$3(canvas, offset, painter) {
      type$.Canvas._as(canvas);
      type$.Offset._as(offset);
      type$.CustomPainter._as(painter);
      B._Cell$named("debugPreviousCanvasSaveCount");
      canvas.save$0();
      if (!B.boolConversionCheck(offset.$eq(0, D.Offset_0_0)))
        canvas.translate$2(offset.get$dx(), offset.get$dy());
      painter.paint$2(canvas, this.get$size());
      canvas.restore$0();
    },
    paint$2(context, offset) {
      var t1, t2, _this = this;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      if (_this._custom_paint$_painter != null) {
        t1 = context.get$canvas();
        t2 = _this._custom_paint$_painter;
        t2.toString;
        _this._paintWithPainter$3(t1, offset, t2);
        _this._setRasterCacheHints$1(context);
      }
      _this.super$RenderProxyBoxMixin$paint(context, offset);
      if (_this._foregroundPainter != null) {
        t1 = context.get$canvas();
        t2 = _this._foregroundPainter;
        t2.toString;
        _this._paintWithPainter$3(t1, offset, t2);
        _this._setRasterCacheHints$1(context);
      }
    },
    _setRasterCacheHints$1(context) {
      type$.PaintingContext._as(context);
      if (B.boolConversionCheck(this.isComplex))
        context.setIsComplexHint$0();
      if (B.boolConversionCheck(this.willChange))
        context.setWillChangeHint$0();
    },
    describeSemanticsConfiguration$1(config) {
      var t1, _this = this;
      type$.SemanticsConfiguration._as(config);
      _this.super$RenderObject$describeSemanticsConfiguration(config);
      t1 = _this.get$painter();
      _this.set$_backgroundSemanticsBuilder(t1 == null ? null : t1.get$semanticsBuilder());
      t1 = _this.get$foregroundPainter();
      _this.set$_foregroundSemanticsBuilder(t1 == null ? null : t1.get$semanticsBuilder());
      config.set$isSemanticBoundary(_this._backgroundSemanticsBuilder != null || _this._foregroundSemanticsBuilder != null);
    },
    assembleSemanticsNode$3(node, config, children) {
      var t1, backgroundSemantics, foregroundSemantics, hasBackgroundSemantics, hasForegroundSemantics, t2, _this = this;
      type$.SemanticsNode._as(node);
      type$.SemanticsConfiguration._as(config);
      type$.Iterable_SemanticsNode._as(children);
      t1 = _this._backgroundSemanticsBuilder;
      backgroundSemantics = t1 != null ? t1.call$1(_this.get$size()) : C.List_empty11;
      _this.set$_backgroundSemanticsNodes(A.RenderCustomPaint__updateSemanticsChildren(_this._backgroundSemanticsNodes, backgroundSemantics));
      t1 = _this._foregroundSemanticsBuilder;
      foregroundSemantics = t1 != null ? t1.call$1(_this.get$size()) : C.List_empty11;
      _this.set$_foregroundSemanticsNodes(A.RenderCustomPaint__updateSemanticsChildren(_this._foregroundSemanticsNodes, foregroundSemantics));
      t1 = _this._backgroundSemanticsNodes;
      hasBackgroundSemantics = t1 != null && B.boolConversionCheck(J.get$isNotEmpty$asx(t1));
      t1 = _this._foregroundSemanticsNodes;
      hasForegroundSemantics = t1 != null && B.boolConversionCheck(J.get$isNotEmpty$asx(t1));
      t1 = B._setArrayType([], type$.JSArray_SemanticsNode);
      if (hasBackgroundSemantics) {
        t2 = _this._backgroundSemanticsNodes;
        t2.toString;
        F.JSArray_methods.addAll$1(t1, t2);
      }
      F.JSArray_methods.addAll$1(t1, children);
      if (hasForegroundSemantics) {
        t2 = _this._foregroundSemanticsNodes;
        t2.toString;
        F.JSArray_methods.addAll$1(t1, t2);
      }
      _this.super$RenderObject$assembleSemanticsNode(node, config, t1);
    },
    clearSemantics$0() {
      this.super$RenderObject$clearSemantics();
      this.set$_backgroundSemanticsNodes(null);
      this.set$_foregroundSemanticsNodes(null);
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$RenderBox$debugFillProperties(properties);
      properties.add$1(0, E.MessageProperty$("painter", B.S(_this.get$painter()), D.DiagnosticLevel_3));
      t1 = B.S(_this.get$foregroundPainter());
      properties.add$1(0, E.MessageProperty$("foregroundPainter", t1, _this.get$foregroundPainter() != null ? D.DiagnosticLevel_3 : D.DiagnosticLevel_1));
      properties.add$1(0, E.DiagnosticsProperty$("preferredSize", _this.get$preferredSize(), true, D.Size_0_0, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Size));
      t1 = type$.bool;
      properties.add$1(0, E.DiagnosticsProperty$("isComplex", _this.isComplex, true, false, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("willChange", _this.willChange, true, false, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
    },
    set$_backgroundSemanticsBuilder(_backgroundSemanticsBuilder) {
      this._backgroundSemanticsBuilder = type$.nullable_List_CustomPainterSemantics_Function_Size._as(_backgroundSemanticsBuilder);
    },
    set$_foregroundSemanticsBuilder(_foregroundSemanticsBuilder) {
      this._foregroundSemanticsBuilder = type$.nullable_List_CustomPainterSemantics_Function_Size._as(_foregroundSemanticsBuilder);
    },
    set$_backgroundSemanticsNodes(_backgroundSemanticsNodes) {
      this._backgroundSemanticsNodes = type$.nullable_List_SemanticsNode._as(_backgroundSemanticsNodes);
    },
    set$_foregroundSemanticsNodes(_foregroundSemanticsNodes) {
      this._foregroundSemanticsNodes = type$.nullable_List_SemanticsNode._as(_foregroundSemanticsNodes);
    }
  };
  A.DebugOverflowIndicatorMixin.prototype = {$isDiagnosticable: 1, $isDiagnosticableTree: 1, $isDiagnosticableTreeMixin: 1, $isHitTestTarget: 1, $isRenderObject: 1, $is_DiagnosticableTree_Object_Diagnosticable: 1, $is_RenderObject_Object_DiagnosticableTreeMixin: 1};
  A._LayoutSizes.prototype = {};
  A.FlexFit.prototype = {
    _enumToString$0() {
      return "FlexFit." + B.S(this._core$_name);
    }
  };
  A.FlexParentData.prototype = {
    toString$0(_) {
      return B.S(this.super$BoxParentData$toString(0)) + "; flex=null; fit=null";
    }
  };
  A.MainAxisSize.prototype = {
    _enumToString$0() {
      return "MainAxisSize." + B.S(this._core$_name);
    }
  };
  A.MainAxisAlignment.prototype = {
    _enumToString$0() {
      return "MainAxisAlignment." + B.S(this._core$_name);
    },
    _distributeSpace$3(freeSpace, itemCount, flipped) {
      var t1, _0_6, _0_8, _this = this;
      B._asDouble(freeSpace);
      B._asInt(itemCount);
      B._asBool(flipped);
      $label0$0: {
        if (C.MainAxisAlignment_0 === _this) {
          t1 = flipped ? new B._Record_2(freeSpace, 0) : C.Record2_0_0;
          break $label0$0;
        }
        if (C.MainAxisAlignment_1 === _this) {
          t1 = C.MainAxisAlignment_0._distributeSpace$3(freeSpace, itemCount, !flipped);
          break $label0$0;
        }
        _0_6 = C.MainAxisAlignment_3 === _this;
        if (_0_6 && itemCount < 2) {
          t1 = C.MainAxisAlignment_0._distributeSpace$3(freeSpace, itemCount, flipped);
          break $label0$0;
        }
        _0_8 = C.MainAxisAlignment_4 === _this;
        if (_0_8 && itemCount === 0) {
          t1 = C.MainAxisAlignment_0._distributeSpace$3(freeSpace, itemCount, flipped);
          break $label0$0;
        }
        if (C.MainAxisAlignment_2 === _this) {
          t1 = new B._Record_2(freeSpace / 2, 0);
          break $label0$0;
        }
        if (_0_6) {
          t1 = new B._Record_2(0, freeSpace / (itemCount - 1));
          break $label0$0;
        }
        if (_0_8) {
          t1 = freeSpace / itemCount;
          t1 = new B._Record_2(t1 / 2, t1);
          break $label0$0;
        }
        if (C.MainAxisAlignment_5 === _this) {
          t1 = freeSpace / (itemCount + 1);
          t1 = new B._Record_2(t1, t1);
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    }
  };
  A.CrossAxisAlignment.prototype = {
    _enumToString$0() {
      return "CrossAxisAlignment." + B.S(this._core$_name);
    },
    _getChildCrossAxisOffset$2(freeSpace, flipped) {
      var t1, _this = this;
      B._asDouble(freeSpace);
      B._asBool(flipped);
      $label0$0: {
        if (C.CrossAxisAlignment_3 === _this || C.CrossAxisAlignment_4 === _this) {
          t1 = 0;
          break $label0$0;
        }
        if (C.CrossAxisAlignment_0 === _this) {
          t1 = flipped ? freeSpace : 0;
          break $label0$0;
        }
        if (C.CrossAxisAlignment_2 === _this) {
          t1 = freeSpace / 2;
          break $label0$0;
        }
        if (C.CrossAxisAlignment_1 === _this) {
          t1 = C.CrossAxisAlignment_0._getChildCrossAxisOffset$2(freeSpace, !flipped);
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    }
  };
  A.RenderFlex.prototype = {
    RenderFlex$9$children$clipBehavior$crossAxisAlignment$direction$mainAxisAlignment$mainAxisSize$textBaseline$textDirection$verticalDirection(children, clipBehavior, crossAxisAlignment, direction, mainAxisAlignment, mainAxisSize, textBaseline, textDirection, verticalDirection) {
      this.addAll$1(0, children);
    },
    get$direction() {
      return this._flex$_direction;
    },
    set$direction(value) {
      type$.Axis._as(value);
      if (!B.boolConversionCheck(J.$eq$(this._flex$_direction, value))) {
        this._flex$_direction = value;
        this.markNeedsLayout$0();
      }
    },
    get$mainAxisAlignment() {
      return this._mainAxisAlignment;
    },
    set$mainAxisAlignment(value) {
      type$.MainAxisAlignment._as(value);
      if (!B.boolConversionCheck(J.$eq$(this._mainAxisAlignment, value))) {
        this._mainAxisAlignment = value;
        this.markNeedsLayout$0();
      }
    },
    get$mainAxisSize() {
      return this._mainAxisSize;
    },
    set$mainAxisSize(value) {
      type$.MainAxisSize._as(value);
      if (!B.boolConversionCheck(J.$eq$(this._mainAxisSize, value))) {
        this._mainAxisSize = value;
        this.markNeedsLayout$0();
      }
    },
    get$crossAxisAlignment() {
      return this._crossAxisAlignment;
    },
    set$crossAxisAlignment(value) {
      type$.CrossAxisAlignment._as(value);
      if (!B.boolConversionCheck(J.$eq$(this._crossAxisAlignment, value))) {
        this._crossAxisAlignment = value;
        this.markNeedsLayout$0();
      }
    },
    get$textDirection() {
      return this._flex$_textDirection;
    },
    set$textDirection(value) {
      type$.nullable_TextDirection._as(value);
      if (!B.boolConversionCheck(J.$eq$(this._flex$_textDirection, value))) {
        this._flex$_textDirection = value;
        this.markNeedsLayout$0();
      }
    },
    get$verticalDirection() {
      return this._verticalDirection;
    },
    set$verticalDirection(value) {
      type$.VerticalDirection._as(value);
      if (!B.boolConversionCheck(J.$eq$(this._verticalDirection, value))) {
        this._verticalDirection = value;
        this.markNeedsLayout$0();
      }
    },
    get$textBaseline() {
      return this._flex$_textBaseline;
    },
    set$textBaseline(value) {
      type$.nullable_TextBaseline._as(value);
      if (!B.boolConversionCheck(J.$eq$(this._flex$_textBaseline, value))) {
        this._flex$_textBaseline = value;
        this.markNeedsLayout$0();
      }
    },
    get$_hasOverflow() {
      var t1 = this._flex$_overflow;
      if (typeof t1 !== "number")
        return t1.$gt();
      return t1 > 1e-10;
    },
    get$clipBehavior() {
      return this._clipBehavior;
    },
    set$clipBehavior(value) {
      var _this = this;
      type$.Clip._as(value);
      if (value !== _this._clipBehavior) {
        _this._clipBehavior = value;
        _this.markNeedsPaint$0();
        _this.markNeedsSemanticsUpdate$0();
      }
    },
    setupParentData$1(child) {
      type$.RenderBox._as(child);
      if (!(child.parentData instanceof A.FlexParentData))
        child.parentData = A.FlexParentData$();
    },
    computeDistanceToActualBaseline$1(baseline) {
      var t1;
      type$.TextBaseline._as(baseline);
      switch (this._flex$_direction) {
        case D.Axis_0:
          t1 = this.defaultComputeDistanceToHighestActualBaseline$1(baseline);
          break;
        case D.Axis_1:
          t1 = this.defaultComputeDistanceToFirstActualBaseline$1(baseline);
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    get$_isBaselineAligned() {
      var t1,
        _0_0 = this.get$crossAxisAlignment();
      $label0$1: {
        t1 = false;
        if (C.CrossAxisAlignment_4 === _0_0) {
          switch (this.get$direction()) {
            case D.Axis_0:
              t1 = true;
              break;
            case D.Axis_1:
              break;
            default:
              t1 = null;
          }
          break $label0$1;
        }
        if (C.CrossAxisAlignment_0 === _0_0 || C.CrossAxisAlignment_2 === _0_0 || C.CrossAxisAlignment_1 === _0_0 || C.CrossAxisAlignment_3 === _0_0)
          break $label0$1;
        t1 = null;
      }
      return t1;
    },
    _getCrossSize$1(size) {
      var t1;
      type$.Size._as(size);
      switch (this._flex$_direction) {
        case D.Axis_0:
          t1 = size.get$height();
          break;
        case D.Axis_1:
          t1 = size.get$width();
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    _getMainSize$1(size) {
      var t1;
      type$.Size._as(size);
      switch (this._flex$_direction) {
        case D.Axis_0:
          t1 = size.get$width();
          break;
        case D.Axis_1:
          t1 = size.get$height();
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    get$_flipMainAxis() {
      var t1, _0_0, _this = this;
      if (_this.get$firstChild() != null) {
        t1 = null;
        switch (_this.get$direction()) {
          case D.Axis_0:
            _0_0 = _this.get$textDirection();
            $label0$1: {
              if (_0_0 == null || D.TextDirection_1 === _0_0) {
                t1 = false;
                break $label0$1;
              }
              if (D.TextDirection_0 === _0_0) {
                t1 = true;
                break $label0$1;
              }
            }
            break;
          case D.Axis_1:
            switch (_this.get$verticalDirection()) {
              case C.VerticalDirection_1:
                t1 = false;
                break;
              case C.VerticalDirection_0:
                t1 = true;
                break;
            }
            break;
        }
        B.boolConversionCheck(t1);
      } else
        t1 = false;
      return t1;
    },
    get$_flipCrossAxis() {
      var t1, _0_0, _this = this;
      if (_this.get$firstChild() != null) {
        t1 = null;
        switch (_this.get$direction()) {
          case D.Axis_1:
            _0_0 = _this.get$textDirection();
            $label0$1: {
              if (_0_0 == null || D.TextDirection_1 === _0_0) {
                t1 = false;
                break $label0$1;
              }
              if (D.TextDirection_0 === _0_0) {
                t1 = true;
                break $label0$1;
              }
            }
            break;
          case D.Axis_0:
            switch (_this.get$verticalDirection()) {
              case C.VerticalDirection_1:
                t1 = false;
                break;
              case C.VerticalDirection_0:
                t1 = true;
                break;
            }
            break;
        }
        B.boolConversionCheck(t1);
      } else
        t1 = false;
      return t1;
    },
    _constraintsForNonFlexChild$1(constraints) {
      var _0_0, t1, t2, _null = null;
      type$.BoxConstraints._as(constraints);
      _0_0 = this.get$crossAxisAlignment();
      $label0$0: {
        if (C.CrossAxisAlignment_3 === _0_0) {
          t1 = true;
          break $label0$0;
        }
        if (C.CrossAxisAlignment_0 === _0_0 || C.CrossAxisAlignment_2 === _0_0 || C.CrossAxisAlignment_1 === _0_0 || C.CrossAxisAlignment_4 === _0_0) {
          t1 = false;
          break $label0$0;
        }
        t1 = _null;
      }
      switch (this._flex$_direction) {
        case D.Axis_0:
          t2 = constraints.maxHeight;
          t1 = t1 ? E.BoxConstraints$tightFor(t2, _null) : E.BoxConstraints$(t2, 1 / 0, 0, 0);
          break;
        case D.Axis_1:
          t2 = constraints.maxWidth;
          t1 = t1 ? E.BoxConstraints$tightFor(_null, t2) : E.BoxConstraints$(1 / 0, t2, 0, 0);
          break;
        default:
          t1 = _null;
      }
      return t1;
    },
    _constraintsForFlexChild$3(child, constraints, maxChildExtent) {
      var t1, _0_0, t2;
      type$.RenderBox._as(child);
      type$.BoxConstraints._as(constraints);
      B._asDouble(maxChildExtent);
      switch (A.RenderFlex__getFit(child)) {
        case C.FlexFit_0:
          t1 = maxChildExtent;
          break;
        case C.FlexFit_1:
          t1 = 0;
          break;
        default:
          t1 = null;
      }
      _0_0 = this.get$crossAxisAlignment();
      $label0$1: {
        if (C.CrossAxisAlignment_3 === _0_0) {
          t2 = true;
          break $label0$1;
        }
        if (C.CrossAxisAlignment_0 === _0_0 || C.CrossAxisAlignment_2 === _0_0 || C.CrossAxisAlignment_1 === _0_0 || C.CrossAxisAlignment_4 === _0_0) {
          t2 = false;
          break $label0$1;
        }
        t2 = null;
      }
      switch (this._flex$_direction) {
        case D.Axis_0:
          t2 = t2 ? constraints.maxHeight : 0;
          t1 = E.BoxConstraints$(constraints.maxHeight, maxChildExtent, t2, t1);
          break;
        case D.Axis_1:
          t2 = t2 ? constraints.maxWidth : 0;
          t2 = E.BoxConstraints$(maxChildExtent, constraints.maxWidth, t1, t2);
          t1 = t2;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    computeDryBaseline$2(constraints, baseline) {
      var sizes, constraintsForChild, baselineOffset, t1, freeSpace, flipMainAxis, _0_0, _0_1, t2, spaceBetween, t3, _0_2, leadingSpaceY, y, directionUnit, child, childConstraints, childSize, childBaselineOffset, additionalY, flipCrossAxis, distance, _this = this, _null = null;
      type$.BoxConstraints._as(constraints);
      type$.TextBaseline._as(baseline);
      sizes = _this._computeSizes$3$constraints$getBaseline$layoutChild(constraints, A.layout_helper_ChildLayoutHelper_getDryBaseline$closure(), A.layout_helper_ChildLayoutHelper_dryLayoutChild$closure());
      if (B.boolConversionCheck(_this.get$_isBaselineAligned()))
        return sizes.baselineOffset;
      constraintsForChild = new A.RenderFlex_computeDryBaseline_constraintsForChild(_this, sizes, constraints, _this._constraintsForNonFlexChild$1(constraints));
      baselineOffset = _null;
      switch (_this.get$direction()) {
        case D.Axis_1:
          t1 = sizes.mainAxisFreeSpace;
          freeSpace = E.max(0, t1, type$.double);
          flipMainAxis = _this.get$_flipMainAxis();
          _0_0 = _this.get$mainAxisAlignment()._distributeSpace$3(freeSpace, _this.get$childCount(), flipMainAxis);
          _0_1 = _0_0._0;
          t2 = _0_1;
          spaceBetween = _null;
          t3 = false;
          if (typeof t2 == "number") {
            _0_2 = _0_0._1;
            t2 = _0_2;
            t2 = typeof t2 == "number";
            if (t2)
              spaceBetween = _0_2;
            leadingSpaceY = _0_1;
          } else {
            t2 = t3;
            leadingSpaceY = _null;
          }
          if (!t2)
            throw B.wrapException(B.StateError$("Pattern matching error"));
          if (flipMainAxis) {
            t2 = _this.get$childCount();
            if (typeof t2 !== "number")
              return t2.$sub();
            if (typeof spaceBetween !== "number")
              return B.iae(spaceBetween);
            if (typeof leadingSpaceY !== "number")
              return leadingSpaceY.$add();
            t3 = A._AxisSize_get_mainAxisExtent(sizes.axisSize);
            if (typeof t3 !== "number")
              return t3.$sub();
            if (typeof t1 !== "number")
              return B.iae(t1);
            y = leadingSpaceY + (t2 - 1) * spaceBetween + (t3 - t1);
          } else
            y = leadingSpaceY;
          directionUnit = flipMainAxis ? -1 : 1;
          child = _this.get$firstChild();
          while (true) {
            if (!(baselineOffset == null && child != null))
              break;
            childConstraints = constraintsForChild.call$1(child);
            childSize = child.getDryLayout$1(childConstraints);
            childBaselineOffset = child.getDryBaseline$2(childConstraints, baseline);
            additionalY = flipMainAxis ? J.$negate$in(childSize.get$height()) : 0;
            baselineOffset = A.BaselineOffset__(A.BaselineOffset__(E.BaselineOffset_constructor_(childBaselineOffset), y), additionalY);
            t1 = childSize.get$height();
            if (typeof spaceBetween !== "number")
              return spaceBetween.$add();
            if (typeof t1 !== "number")
              return B.iae(t1);
            y += directionUnit * (spaceBetween + t1);
            child = _this.childAfter$1(child);
          }
          break;
        case D.Axis_0:
          flipCrossAxis = _this.get$_flipCrossAxis();
          for (child = _this.get$firstChild(), t1 = sizes.axisSize; child != null; child = _this.childAfter$1(child)) {
            childConstraints = constraintsForChild.call$1(child);
            distance = E.BaselineOffset_constructor_(child.getDryBaseline$2(childConstraints, baseline));
            t2 = A._AxisSize_get_crossAxisExtent(t1);
            t3 = child.getDryLayout$1(childConstraints).get$height();
            if (typeof t2 !== "number")
              return t2.$sub();
            if (typeof t3 !== "number")
              return B.iae(t3);
            baselineOffset = A.BaselineOffset_minOf(baselineOffset, A.BaselineOffset__(distance, _this.get$crossAxisAlignment()._getChildCrossAxisOffset$2(t2 - t3, flipCrossAxis)));
          }
          break;
      }
      return baselineOffset;
    },
    computeDryLayout$1(constraints) {
      type$.BoxConstraints._as(constraints);
      return A._AxisSize_toSize(this._computeSizes$3$constraints$getBaseline$layoutChild(constraints, A.layout_helper_ChildLayoutHelper_getDryBaseline$closure(), A.layout_helper_ChildLayoutHelper_dryLayoutChild$closure()).axisSize, this.get$direction());
    },
    _computeSizes$3$constraints$getBaseline$layoutChild(constraints, getBaseline, layoutChild) {
      var maxMainSize, canFlex, nonFlexChildConstraints, t1, textBaseline, child, accumulatedAscentDescent, firstFlexChild, totalFlex, accumulatedSize, flex, t2, childSize, baselineOffset, spacePerFlex, childConstraints, _0_5, ascent, _0_4, _0_5_isSet, descent, _1_0, _1_2, constrainedSize, t3, t4, _this = this, _null = null;
      type$.BoxConstraints._as(constraints);
      type$.Size_Function_RenderBox_BoxConstraints._as(layoutChild);
      type$.nullable_double_Function_RenderBox_BoxConstraints_TextBaseline._as(getBaseline);
      maxMainSize = _this._getMainSize$1(constraints.get$biggest());
      canFlex = F.JSNumber_methods.get$isFinite(maxMainSize);
      nonFlexChildConstraints = _this._constraintsForNonFlexChild$1(constraints);
      if (B.boolConversionCheck(_this.get$_isBaselineAligned())) {
        t1 = _this.get$textBaseline();
        textBaseline = t1 == null ? B.throwExpression(E.FlutterError_FlutterError('To use CrossAxisAlignment.baseline, you must also specify which baseline to use using the "textBaseline" argument.')) : t1;
      } else
        textBaseline = _null;
      for (child = _this.get$firstChild(), t1 = textBaseline == null, accumulatedAscentDescent = _null, firstFlexChild = accumulatedAscentDescent, totalFlex = 0, accumulatedSize = D.Size_0_0; child != null; child = _this.childAfter$1(child)) {
        if (canFlex) {
          flex = A.RenderFlex__getFlex(child);
          t2 = flex > 0;
        } else {
          flex = _null;
          t2 = false;
        }
        if (t2) {
          if (typeof flex !== "number")
            return B.iae(flex);
          totalFlex += flex;
          if (firstFlexChild == null)
            firstFlexChild = child;
        } else {
          t2 = layoutChild.call$2(child, nonFlexChildConstraints);
          childSize = A._AxisSize_constructor_fromSize(_this.get$direction(), t2);
          accumulatedSize = A._AxisSize__(accumulatedSize, childSize);
          baselineOffset = t1 ? _null : getBaseline.call$3(child, nonFlexChildConstraints, textBaseline);
          accumulatedAscentDescent = A._AscentDescent__(accumulatedAscentDescent, A._AscentDescent_constructor_(baselineOffset, A._AxisSize_get_crossAxisExtent(childSize)));
        }
      }
      t2 = A._AxisSize_get_mainAxisExtent(accumulatedSize);
      if (typeof t2 !== "number")
        return B.iae(t2);
      spacePerFlex = E.max(0, maxMainSize - t2, type$.double) / totalFlex;
      child = firstFlexChild;
      while (true) {
        if (!(child != null && totalFlex > 0))
          break;
        c$0: {
          flex = A.RenderFlex__getFlex(child);
          if (flex === 0)
            break c$0;
          totalFlex -= flex;
          childConstraints = _this._constraintsForFlexChild$3(child, constraints, spacePerFlex * flex);
          t2 = layoutChild.call$2(child, childConstraints);
          childSize = A._AxisSize_constructor_fromSize(_this.get$direction(), t2);
          accumulatedSize = A._AxisSize__(accumulatedSize, childSize);
          baselineOffset = t1 ? _null : getBaseline.call$3(child, childConstraints, textBaseline);
          accumulatedAscentDescent = A._AscentDescent__(accumulatedAscentDescent, A._AscentDescent_constructor_(baselineOffset, A._AxisSize_get_crossAxisExtent(childSize)));
        }
        child = _this.childAfter$1(child);
      }
      $label0$1: {
        if (accumulatedAscentDescent == null) {
          t1 = D.Size_0_0;
          break $label0$1;
        }
        _0_5 = _null;
        ascent = _null;
        t1 = false;
        if (type$.Record_2_nullable_Object_and_nullable_Object._is(accumulatedAscentDescent)) {
          _0_4 = accumulatedAscentDescent._0;
          _0_5_isSet = typeof _0_4 == "number";
          if (_0_5_isSet) {
            B._asDouble(_0_4);
            _0_5 = accumulatedAscentDescent._1;
            t1 = typeof _0_5 == "number";
            ascent = _0_4;
          }
        } else
          _0_5_isSet = false;
        if (t1) {
          descent = B._asDouble(_0_5_isSet ? _0_5 : accumulatedAscentDescent._1);
          if (typeof ascent !== "number")
            return ascent.$add();
          t1 = A._AxisSize_constructor_(ascent + descent, 0);
          break $label0$1;
        }
        t1 = _null;
      }
      accumulatedSize = A._AxisSize__(accumulatedSize, t1);
      _1_0 = _this.get$mainAxisSize();
      $label1$2: {
        _1_2 = C.MainAxisSize_1 === _1_0;
        if (_1_2 && B.boolConversionCheck(F.JSNumber_methods.get$isFinite(maxMainSize))) {
          t1 = maxMainSize;
          break $label1$2;
        }
        if (_1_2 || C.MainAxisSize_0 === _1_0) {
          t1 = A._AxisSize_get_mainAxisExtent(accumulatedSize);
          break $label1$2;
        }
        t1 = _null;
      }
      constrainedSize = A._AxisSize_applyConstraints(A._AxisSize_constructor_(A._AxisSize_get_crossAxisExtent(accumulatedSize), t1), constraints, _this.get$direction());
      t1 = A._AxisSize_get_mainAxisExtent(constrainedSize);
      t2 = A._AxisSize_get_mainAxisExtent(accumulatedSize);
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = A._AscentDescent_get_baselineOffset(accumulatedAscentDescent);
      t4 = firstFlexChild == null ? _null : spacePerFlex;
      return A._LayoutSizes$(constrainedSize, t3, t1 - t2, t4);
    },
    performLayout$0() {
      var t2, remainingSpace, flipMainAxis, flipCrossAxis, _0_0, _0_1, betweenSpace, _0_2, leadingSpace, _1_0, _1_1, topLeftChild, _1_2, nextChild, baselineOffset, child, childMainPosition, t3, childBaselineOffset, baselineAlign, childCrossPosition, t4, _this = this, _null = null,
        _s22_ = "Pattern matching error",
        sizes = _this._computeSizes$3$constraints$getBaseline$layoutChild(_this.get$constraints(), A.layout_helper_ChildLayoutHelper_getBaseline$closure(), A.layout_helper_ChildLayoutHelper_layoutChild$closure()),
        t1 = sizes.axisSize,
        crossAxisExtent = A._AxisSize_get_crossAxisExtent(t1);
      _this.set$size(A._AxisSize_toSize(t1, _this.get$direction()));
      t1 = sizes.mainAxisFreeSpace;
      t2 = type$.double;
      _this.set$_flex$_overflow(E.max(0, J.$negate$in(t1), t2));
      remainingSpace = E.max(0, t1, t2);
      flipMainAxis = _this.get$_flipMainAxis();
      flipCrossAxis = _this.get$_flipCrossAxis();
      _0_0 = _this.get$mainAxisAlignment()._distributeSpace$3(remainingSpace, _this.get$childCount(), flipMainAxis);
      _0_1 = _0_0._0;
      t1 = _0_1;
      betweenSpace = _null;
      t2 = false;
      if (typeof t1 == "number") {
        _0_2 = _0_0._1;
        t1 = _0_2;
        t1 = typeof t1 == "number";
        if (t1)
          betweenSpace = _0_2;
        leadingSpace = _0_1;
      } else {
        t1 = t2;
        leadingSpace = _null;
      }
      if (!t1)
        throw B.wrapException(B.StateError$(_s22_));
      _1_0 = flipMainAxis ? new B._Record_2(_this.get$childBefore(), _this.get$lastChild()) : new B._Record_2(_this.get$childAfter(), _this.get$firstChild());
      _1_1 = _1_0._0;
      t1 = type$.nullable_RenderBox_Function_RenderBox._is(_1_1);
      topLeftChild = _null;
      if (t1) {
        _1_2 = _1_0._1;
        topLeftChild = _1_2;
        nextChild = _1_1;
      } else
        nextChild = _null;
      if (!t1)
        throw B.wrapException(B.StateError$(_s22_));
      baselineOffset = sizes.baselineOffset;
      for (t1 = type$.FlexParentData, t2 = baselineOffset != null, child = topLeftChild, childMainPosition = leadingSpace; child != null; child = nextChild.call$1(child)) {
        if (t2) {
          t3 = _this.get$textBaseline();
          t3.toString;
          childBaselineOffset = child.getDistanceToBaseline$2$onlyReal(t3, true);
          baselineAlign = childBaselineOffset != null;
        } else {
          childBaselineOffset = _null;
          baselineAlign = false;
        }
        if (baselineAlign) {
          childBaselineOffset.toString;
          if (typeof baselineOffset !== "number")
            return baselineOffset.$sub();
          childCrossPosition = baselineOffset - childBaselineOffset;
        } else {
          t3 = _this.get$crossAxisAlignment();
          t4 = _this._getCrossSize$1(child.get$size());
          if (typeof t4 !== "number")
            return B.iae(t4);
          childCrossPosition = t3._getChildCrossAxisOffset$2(crossAxisExtent - t4, flipCrossAxis);
        }
        t3 = child.parentData;
        t3.toString;
        t1._as(t3);
        switch (_this.get$direction()) {
          case D.Axis_0:
            t4 = E.Offset$(childMainPosition, childCrossPosition);
            break;
          case D.Axis_1:
            t4 = E.Offset$(childCrossPosition, childMainPosition);
            break;
          default:
            t4 = _null;
        }
        t3.set$offset(t4);
        t4 = _this._getMainSize$1(child.get$size());
        if (typeof t4 !== "number")
          return t4.$add();
        if (typeof betweenSpace !== "number")
          return B.iae(betweenSpace);
        childMainPosition += t4 + betweenSpace;
      }
    },
    hitTestChildren$2$position(result, position) {
      return this.defaultHitTestChildren$2$position(type$.BoxHitTestResult._as(result), type$.Offset._as(position));
    },
    paint$2(context, offset) {
      var t1, _this = this;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      if (!B.boolConversionCheck(_this.get$_hasOverflow())) {
        _this.defaultPaint$2(context, offset);
        return;
      }
      if (B.boolConversionCheck(J.get$isEmpty$asx(_this.get$size())))
        return;
      t1 = _this._clipRectLayer;
      t1.set$layer(context.pushClipRect$6$clipBehavior$oldLayer(_this.get$needsCompositing(), offset, D.Offset_0_0.$and(0, _this.get$size()), _this.get$defaultPaint(), _this.get$clipBehavior(), t1.get$layer()));
    },
    dispose$0() {
      this._clipRectLayer.set$layer(null);
      this.super$_RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin$dispose();
    },
    describeApproximatePaintClip$1(child) {
      type$.RenderObject._as(child);
      switch (this.get$clipBehavior()) {
        case D.Clip_0:
          return null;
        case D.Clip_1:
        case D.Clip_2:
        case D.Clip_3:
          return B.boolConversionCheck(this.get$_hasOverflow()) ? D.Offset_0_0.$and(0, this.get$size()) : null;
      }
    },
    toStringShort$0() {
      var header = this.super$RenderObject$toStringShort();
      return B.boolConversionCheck(this.get$_hasOverflow()) ? header + " OVERFLOWING" : header;
    },
    debugFillProperties$1(properties) {
      var _this = this;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$RenderBox$debugFillProperties(properties);
      properties.add$1(0, E.EnumProperty$("direction", _this.get$direction(), D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.Axis));
      properties.add$1(0, E.EnumProperty$("mainAxisAlignment", _this.get$mainAxisAlignment(), D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.MainAxisAlignment));
      properties.add$1(0, E.EnumProperty$("mainAxisSize", _this.get$mainAxisSize(), D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.MainAxisSize));
      properties.add$1(0, E.EnumProperty$("crossAxisAlignment", _this.get$crossAxisAlignment(), D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.CrossAxisAlignment));
      properties.add$1(0, E.EnumProperty$("textDirection", _this.get$textDirection(), null, D.DiagnosticLevel_3, type$.TextDirection));
      properties.add$1(0, E.EnumProperty$("verticalDirection", _this.get$verticalDirection(), null, D.DiagnosticLevel_3, type$.VerticalDirection));
      properties.add$1(0, E.EnumProperty$("textBaseline", _this.get$textBaseline(), null, D.DiagnosticLevel_3, type$.TextBaseline));
    },
    set$_flex$_overflow(_overflow) {
      this._flex$_overflow = B._asDouble(_overflow);
    },
    $isRenderBoxContainerDefaultsMixin: 1,
    $isDebugOverflowIndicatorMixin: 1,
    $isContainerRenderObjectMixin: 1
  };
  A._RenderFlex_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      type$.PipelineOwner._as(owner);
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.FlexParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0() {
      var child, t1, t2;
      this.super$RenderObject$detach();
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.FlexParentData; child != null;) {
        child.detach$0();
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    $isContainerRenderObjectMixin: 1
  };
  A._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {$isRenderBoxContainerDefaultsMixin: 1, $isContainerRenderObjectMixin: 1};
  A._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin.prototype = {
    dispose$0() {
      for (var t1 = J.get$iterator$ax(this.DebugOverflowIndicatorMixin__indicatorLabel); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().dispose$0();
      this.super$RenderObject$dispose();
    },
    $isRenderBoxContainerDefaultsMixin: 1,
    $isDebugOverflowIndicatorMixin: 1,
    $isContainerRenderObjectMixin: 1
  };
  A.PerformanceOverlayLayer.prototype = {
    get$overlayRect() {
      return this._overlayRect;
    },
    addToScene$1(builder) {
      type$.SceneBuilder._as(builder).addPerformanceOverlay$2(this.optionsMask, this.get$overlayRect());
    },
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      B.checkTypeBound($S, type$.Object, "S", "findAnnotations");
      $S._eval$1("AnnotationResult<0>")._as(result);
      type$.Offset._as(localPosition);
      B._asBool(onlyFirst);
      return false;
    }
  };
  A.LeaderLayer.prototype = {
    get$link() {
      return this._layer$_link;
    },
    get$offset() {
      return this._layer$_offset;
    },
    attach$1(owner) {
      this.super$ContainerLayer$attach(type$.Object._as(owner));
      this._layer$_link._registerLeader$1(this);
    },
    detach$0() {
      this._layer$_link._unregisterLeader$1(this);
      this.super$ContainerLayer$detach();
    },
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      B.checkTypeBound($S, type$.Object, "S", "findAnnotations");
      $S._eval$1("AnnotationResult<0>")._as(result);
      type$.Offset._as(localPosition);
      B._asBool(onlyFirst);
      return this.super$ContainerLayer$findAnnotations(result, localPosition.$sub(0, this.get$offset()), onlyFirst, $S);
    },
    addToScene$1(builder) {
      var _this = this;
      type$.SceneBuilder._as(builder);
      if (!B.boolConversionCheck(J.$eq$(_this.get$offset(), D.Offset_0_0)))
        _this.set$engineLayer(builder.pushTransform$2$oldLayer(E.Matrix4_Matrix4$translationValues0(_this.get$offset().get$dx(), _this.get$offset().get$dy(), 0).get$storage(), type$.nullable_TransformEngineLayer._as(_this._engineLayer)));
      else
        _this.set$engineLayer(null);
      _this.addChildrenToScene$1(builder);
      if (!B.boolConversionCheck(J.$eq$(_this.get$offset(), D.Offset_0_0)))
        builder.pop$0();
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Layer$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("offset", this.get$offset(), true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Offset));
      properties.add$1(0, E.DiagnosticsProperty$("link", this.get$link(), true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.LayerLink));
    }
  };
  A.ContainerParentDataMixin.prototype = {
    set$previousSibling(previousSibling) {
      this.ContainerParentDataMixin_previousSibling = B._instanceType(this)._eval$1("ContainerParentDataMixin.0?")._as(previousSibling);
    },
    set$nextSibling(nextSibling) {
      this.ContainerParentDataMixin_nextSibling = B._instanceType(this)._eval$1("ContainerParentDataMixin.0?")._as(nextSibling);
    },
    $isParentData: 1
  };
  A.ContainerRenderObjectMixin.prototype = {
    get$childCount() {
      return this.ContainerRenderObjectMixin__childCount;
    },
    _insertIntoChildList$2$after(child, after) {
      var t2, t3, t4, _this = this,
        t1 = B._instanceType(_this);
      t1._eval$1("ContainerRenderObjectMixin.0")._as(child);
      t1._eval$1("ContainerRenderObjectMixin.0?")._as(after);
      t2 = child.parentData;
      t2.toString;
      t1 = t1._eval$1("ContainerRenderObjectMixin.1");
      t1._as(t2);
      t3 = _this.ContainerRenderObjectMixin__childCount;
      if (typeof t3 !== "number")
        return t3.$add();
      _this.set$_childCount(t3 + 1);
      if (after == null) {
        t2.set$nextSibling(_this.ContainerRenderObjectMixin__firstChild);
        t2 = _this.ContainerRenderObjectMixin__firstChild;
        if (t2 != null) {
          t2 = t2.parentData;
          t2.toString;
          t1._as(t2).set$previousSibling(child);
        }
        _this.set$_object$_firstChild(child);
        if (_this.ContainerRenderObjectMixin__lastChild == null)
          _this.set$_object$_lastChild(child);
      } else {
        t3 = after.parentData;
        t3.toString;
        t1._as(t3);
        t4 = t3.ContainerParentDataMixin_nextSibling;
        if (t4 == null) {
          t2.set$previousSibling(after);
          t3.set$nextSibling(child);
          _this.set$_object$_lastChild(child);
        } else {
          t2.set$nextSibling(t4);
          t2.set$previousSibling(after);
          t3 = t2.ContainerParentDataMixin_previousSibling.parentData;
          t3.toString;
          t1._as(t3);
          t2 = t2.ContainerParentDataMixin_nextSibling.parentData;
          t2.toString;
          t1._as(t2);
          t3.set$nextSibling(child);
          t2.set$previousSibling(child);
        }
      }
    },
    insert$2$after(_, child, after) {
      var t1 = B._instanceType(this);
      t1._eval$1("ContainerRenderObjectMixin.0")._as(child);
      t1._eval$1("ContainerRenderObjectMixin.0?")._as(after);
      this.adoptChild$1(child);
      this._insertIntoChildList$2$after(child, after);
    },
    add$1(_, child) {
      this.insert$2$after(0, B._instanceType(this)._eval$1("ContainerRenderObjectMixin.0")._as(child), this.ContainerRenderObjectMixin__lastChild);
    },
    addAll$1(_, children) {
      B._instanceType(this)._eval$1("List<ContainerRenderObjectMixin.0>?")._as(children);
      if (children != null)
        J.forEach$1$ax(children, this.get$add(this));
    },
    _removeFromChildList$1(child) {
      var t3, t4, _this = this,
        t1 = B._instanceType(_this),
        t2 = t1._eval$1("ContainerRenderObjectMixin.0")._as(child).parentData;
      t2.toString;
      t1 = t1._eval$1("ContainerRenderObjectMixin.1");
      t1._as(t2);
      t3 = t2.ContainerParentDataMixin_previousSibling;
      t4 = t2.ContainerParentDataMixin_nextSibling;
      if (t3 == null)
        _this.set$_object$_firstChild(t4);
      else {
        t3 = t3.parentData;
        t3.toString;
        t1._as(t3).set$nextSibling(t4);
      }
      t3 = t2.ContainerParentDataMixin_nextSibling;
      t4 = t2.ContainerParentDataMixin_previousSibling;
      if (t3 == null)
        _this.set$_object$_lastChild(t4);
      else {
        t3 = t3.parentData;
        t3.toString;
        t1._as(t3).set$previousSibling(t4);
      }
      t2.set$previousSibling(null);
      t2.set$nextSibling(null);
      t1 = _this.ContainerRenderObjectMixin__childCount;
      if (typeof t1 !== "number")
        return t1.$sub();
      _this.set$_childCount(t1 - 1);
    },
    remove$1(_, child) {
      B._instanceType(this)._eval$1("ContainerRenderObjectMixin.0")._as(child);
      this._removeFromChildList$1(child);
      this.dropChild$1(child);
    },
    move$2$after(child, after) {
      var t2, _this = this,
        t1 = B._instanceType(_this);
      t1._eval$1("ContainerRenderObjectMixin.0")._as(child);
      t1._eval$1("ContainerRenderObjectMixin.0?")._as(after);
      t2 = child.parentData;
      t2.toString;
      if (B.boolConversionCheck(J.$eq$(t1._eval$1("ContainerRenderObjectMixin.1")._as(t2).ContainerParentDataMixin_previousSibling, after)))
        return;
      _this._removeFromChildList$1(child);
      _this._insertIntoChildList$2$after(child, after);
      _this.markNeedsLayout$0();
    },
    redepthChildren$0() {
      var t1, t2,
        child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = B._instanceType(this)._eval$1("ContainerRenderObjectMixin.1"); child != null;) {
        this.redepthChild$1(child);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    visitChildren$1(visitor) {
      var child, t1, t2;
      type$.void_Function_RenderObject._as(visitor);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = B._instanceType(this)._eval$1("ContainerRenderObjectMixin.1"); child != null;) {
        visitor.call$1(child);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    get$firstChild() {
      return this.ContainerRenderObjectMixin__firstChild;
    },
    get$lastChild() {
      return this.ContainerRenderObjectMixin__lastChild;
    },
    childBefore$1(child) {
      var t1 = B._instanceType(this),
        t2 = t1._eval$1("ContainerRenderObjectMixin.0")._as(child).parentData;
      t2.toString;
      return t1._eval$1("ContainerRenderObjectMixin.1")._as(t2).ContainerParentDataMixin_previousSibling;
    },
    childAfter$1(child) {
      var t1 = B._instanceType(this),
        t2 = t1._eval$1("ContainerRenderObjectMixin.0")._as(child).parentData;
      t2.toString;
      return t1._eval$1("ContainerRenderObjectMixin.1")._as(t2).ContainerParentDataMixin_nextSibling;
    },
    debugDescribeChildren$0() {
      var t1, t2, child, count, _this = this,
        children = B._setArrayType([], type$.JSArray_DiagnosticsNode);
      if (_this.get$firstChild() != null) {
        t1 = _this.get$firstChild();
        t1.toString;
        for (t2 = B._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1"), child = t1, count = 1; true; child = t1) {
          F.JSArray_methods.add$1(children, child.toDiagnosticsNode$1$name("child " + count));
          if (B.boolConversionCheck(J.$eq$(child, _this.get$lastChild())))
            break;
          ++count;
          t1 = child.parentData;
          t1.toString;
          t1 = t2._as(t1).ContainerParentDataMixin_nextSibling;
          t1.toString;
        }
      }
      return children;
    },
    set$_childCount(_childCount) {
      this.ContainerRenderObjectMixin__childCount = B._asInt(_childCount);
    },
    set$_object$_firstChild(_firstChild) {
      this.ContainerRenderObjectMixin__firstChild = B._instanceType(this)._eval$1("ContainerRenderObjectMixin.0?")._as(_firstChild);
    },
    set$_object$_lastChild(_lastChild) {
      this.ContainerRenderObjectMixin__lastChild = B._instanceType(this)._eval$1("ContainerRenderObjectMixin.0?")._as(_lastChild);
    },
    $isDiagnosticable: 1,
    $isDiagnosticableTree: 1,
    $isDiagnosticableTreeMixin: 1,
    $isHitTestTarget: 1,
    $isRenderObject: 1,
    $is_DiagnosticableTree_Object_Diagnosticable: 1,
    $is_RenderObject_Object_DiagnosticableTreeMixin: 1
  };
  A.RelayoutWhenSystemFontsChangeMixin.prototype = {
    systemFontsDidChange$0() {
      this.markNeedsLayout$0();
    },
    _scheduleSystemFontsUpdate$0() {
      if (B.boolConversionCheck(this.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack))
        return;
      this.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack = true;
      E.SchedulerBinding_instance().scheduleFrameCallback$1(new A.RelayoutWhenSystemFontsChangeMixin__scheduleSystemFontsUpdate_closure(this));
    },
    $isDiagnosticable: 1,
    $isDiagnosticableTree: 1,
    $isDiagnosticableTreeMixin: 1,
    $isHitTestTarget: 1,
    $isRenderObject: 1,
    $is_DiagnosticableTree_Object_Diagnosticable: 1,
    $is_RenderObject_Object_DiagnosticableTreeMixin: 1
  };
  A.TextParentData.prototype = {
    get$offset() {
      return this._paragraph$_offset;
    },
    detach$0() {
      this._paragraph$_offset = this.span = null;
      this.super$_TextParentData_ParentData_ContainerParentDataMixin$detach();
    },
    toString$0(_) {
      var t1 = B.S(this.span),
        t2 = this.get$offset() == null ? "not laid out" : "offset: " + B.S(this.get$offset());
      return "widget: " + t1 + ", " + t2;
    },
    $isContainerParentDataMixin: 1
  };
  A.RenderInlineChildrenContainerDefaults.prototype = {
    setupParentData$1(child) {
      type$.RenderBox._as(child);
      if (!(child.parentData instanceof A.TextParentData))
        child.parentData = A.TextParentData$();
    },
    layoutInlineChildren$3(maxWidth, layoutChild, getChildBaseline) {
      var constraints, t1, child;
      B._asDouble(maxWidth);
      type$.Size_Function_RenderBox_BoxConstraints._as(layoutChild);
      type$.nullable_double_Function_RenderBox_BoxConstraints_TextBaseline._as(getChildBaseline);
      constraints = E.BoxConstraints$(1 / 0, maxWidth, 0, 0);
      t1 = B._setArrayType([], type$.JSArray_PlaceholderDimensions);
      for (child = this.get$firstChild(); child != null; child = this.childAfter$1(child))
        t1.push(A.RenderInlineChildrenContainerDefaults__layoutChild(child, constraints, layoutChild, getChildBaseline));
      return t1;
    },
    positionInlineChildren$1(boxes) {
      var child, t1, t2, t3, t4;
      type$.List_TextBox._as(boxes);
      child = this.get$firstChild();
      for (t1 = J.get$iterator$ax(boxes), t2 = type$.TextParentData; B.boolConversionCheck(t1.moveNext$0());) {
        t3 = t1.get$current();
        if (child == null)
          return;
        t4 = child.parentData;
        t4.toString;
        t2._as(t4)._paragraph$_offset = E.Offset$(t3.left, t3.top);
        child = this.childAfter$1(child);
      }
      for (; child != null;) {
        t1 = child.parentData;
        t1.toString;
        t2._as(t1)._paragraph$_offset = null;
        child = this.childAfter$1(child);
      }
    },
    defaultApplyPaintTransform$2(child, transform) {
      var t1, offset;
      type$.RenderBox._as(child);
      type$.Matrix4._as(transform);
      t1 = child.parentData;
      t1.toString;
      offset = type$.TextParentData._as(t1).get$offset();
      if (offset == null)
        transform.setZero$0();
      else
        transform.translate$2(offset.get$dx(), offset.get$dy());
    },
    paintInlineChildren$2(context, offset) {
      var child, t1, t2, childOffset;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      child = this.get$firstChild();
      for (t1 = type$.TextParentData; child != null;) {
        t2 = child.parentData;
        t2.toString;
        childOffset = t1._as(t2).get$offset();
        if (childOffset == null)
          return;
        context.paintChild$2(child, childOffset.$add(0, offset));
        child = this.childAfter$1(child);
      }
    },
    hitTestInlineChildren$2(result, position) {
      var t1, t2, childOffset, child, _box_0 = {};
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      t1 = _box_0.child = this.get$firstChild();
      for (t2 = type$.TextParentData; t1 != null; t1 = child) {
        t1 = t1.parentData;
        t1.toString;
        childOffset = t2._as(t1).get$offset();
        if (childOffset == null)
          return false;
        if (result.addWithPaintOffset$3$hitTest$offset$position(new A.RenderInlineChildrenContainerDefaults_hitTestInlineChildren_closure(_box_0), childOffset, position))
          return true;
        child = this.childAfter$1(_box_0.child);
        _box_0.child = child;
      }
      return false;
    },
    $isDiagnosticable: 1,
    $isDiagnosticableTree: 1,
    $isDiagnosticableTreeMixin: 1,
    $isHitTestTarget: 1,
    $isRenderBox: 1,
    $isRenderObject: 1,
    $isContainerRenderObjectMixin: 1,
    $is_DiagnosticableTree_Object_Diagnosticable: 1,
    $is_RenderObject_Object_DiagnosticableTreeMixin: 1
  };
  A.RenderParagraph.prototype = {
    RenderParagraph$15$children$locale$maxLines$overflow$registrar$selectionColor$softWrap$strutStyle$textAlign$textDirection$textHeightBehavior$textScaleFactor$textScaler$textWidthBasis(text, children, locale, maxLines, overflow, registrar, selectionColor, softWrap, strutStyle, textAlign, textDirection, textHeightBehavior, textScaleFactor, textScaler, textWidthBasis) {
      this.addAll$1(0, children);
      this.set$registrar(registrar);
    },
    get$_textIntrinsics() {
      var t2, _null = null,
        t1 = this._textIntrinsicsCache;
      if (t1 == null)
        t1 = this._textIntrinsicsCache = A.TextPainter$(_null, _null, _null, _null, _null, D.TextAlign_4, _null, _null, D._LinearTextScaler_1, C.TextWidthBasis_0);
      t2 = this._textPainter;
      t1.set$text(t2.get$text());
      t1.set$textAlign(t2.get$textAlign());
      t1.set$textDirection(t2.get$textDirection());
      t1.set$textScaler(t2.get$textScaler());
      t1.set$maxLines(t2.get$maxLines());
      t1.set$ellipsis(t2.get$ellipsis());
      t1.set$locale(t2.get$locale());
      t1.set$strutStyle(t2.get$strutStyle());
      t1.set$textWidthBasis(t2.get$textWidthBasis());
      t1.set$textHeightBehavior(t2.get$textHeightBehavior());
      return t1;
    },
    get$text() {
      var t1 = this._textPainter.get$text();
      t1.toString;
      return t1;
    },
    set$text(value) {
      var t1, t2, _this = this, _null = null;
      type$.InlineSpan._as(value);
      t1 = _this._textPainter;
      t2 = t1.get$text();
      t2.toString;
      switch (J.compareTo$1$ns(t2, value)) {
        case C.RenderComparison_0:
          return;
        case C.RenderComparison_1:
          t1.set$text(value);
          _this.set$_cachedCombinedSemanticsInfos(_null);
          _this.markNeedsSemanticsUpdate$0();
          break;
        case C.RenderComparison_2:
          t1.set$text(value);
          _this.set$_cachedAttributedLabels(_null);
          _this.set$_cachedCombinedSemanticsInfos(_null);
          _this.markNeedsPaint$0();
          _this.markNeedsSemanticsUpdate$0();
          break;
        case C.RenderComparison_3:
          t1.set$text(value);
          _this._overflowShader = null;
          _this.set$_cachedAttributedLabels(_null);
          _this.set$_cachedCombinedSemanticsInfos(_null);
          _this.markNeedsLayout$0();
          _this._removeSelectionRegistrarSubscription$0();
          _this._disposeSelectableFragments$0();
          _this._updateSelectionRegistrarSubscription$0();
          break;
      }
    },
    set$registrar(value) {
      var t1, _this = this;
      type$.nullable_SelectionRegistrar._as(value);
      t1 = _this._registrar;
      if (value == null ? t1 == null : value === t1)
        return;
      _this._removeSelectionRegistrarSubscription$0();
      _this._disposeSelectableFragments$0();
      _this._registrar = value;
      _this._updateSelectionRegistrarSubscription$0();
    },
    _updateSelectionRegistrarSubscription$0() {
      var t1, t2, _this = this;
      if (_this._registrar == null)
        return;
      if (_this._lastSelectableFragments == null)
        _this.set$_lastSelectableFragments(_this._getSelectableFragments$0());
      t1 = _this._lastSelectableFragments;
      t1.toString;
      t2 = _this._registrar;
      t2.toString;
      J.forEach$1$ax(t1, J.get$add$ax(t2));
      t1 = _this._lastSelectableFragments;
      t1.toString;
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(t1)))
        _this.markNeedsCompositingBitsUpdate$0();
    },
    _removeSelectionRegistrarSubscription$0() {
      var t2,
        t1 = this._registrar;
      if (t1 == null || this._lastSelectableFragments == null)
        return;
      t2 = this._lastSelectableFragments;
      t2.toString;
      t1.toString;
      J.forEach$1$ax(t2, J.get$remove$ax(t1));
    },
    _getSelectableFragments$0() {
      var end, start, end0,
        plainText = this.get$text().toPlainText$1$includeSemanticsLabels(false),
        result = B._setArrayType([], type$.JSArray__SelectableFragment);
      for (end = plainText.length, start = 0; start < end;) {
        end0 = F.JSString_methods.indexOf$2(plainText, $.$get$RenderParagraph__placeholderCharacter(), start);
        if (start !== end0) {
          if (end0 === -1)
            end0 = end;
          F.JSArray_methods.add$1(result, A._SelectableFragment$(plainText, this, E.TextRange$(end0, start)));
          start = end0;
        }
        ++start;
      }
      return result;
    },
    selectableBelongsToParagraph$1(selectable) {
      var t1;
      type$.Selectable._as(selectable);
      t1 = this._lastSelectableFragments;
      if (t1 == null)
        return false;
      return J.contains$1$asx(t1, selectable);
    },
    _disposeSelectableFragments$0() {
      var t1 = this._lastSelectableFragments;
      if (t1 == null)
        return;
      for (t1 = J.get$iterator$ax(t1); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().dispose$0();
      this.set$_lastSelectableFragments(null);
    },
    get$alwaysNeedsCompositing() {
      var t1 = this._lastSelectableFragments;
      t1 = t1 == null ? null : J.get$isNotEmpty$asx(t1);
      return t1 == null ? false : t1;
    },
    markNeedsLayout$0() {
      var t1 = this._lastSelectableFragments;
      if (t1 != null)
        J.forEach$1$ax(t1, new A.RenderParagraph_markNeedsLayout_closure());
      this.super$RenderBox$markNeedsLayout();
    },
    dispose$0() {
      var t1, _this = this;
      _this._removeSelectionRegistrarSubscription$0();
      _this._disposeSelectableFragments$0();
      _this._textPainter.dispose$0();
      t1 = _this._textIntrinsicsCache;
      if (t1 != null)
        t1.dispose$0();
      _this.super$RenderObject$dispose();
    },
    get$textAlign() {
      return this._textPainter.get$textAlign();
    },
    set$textAlign(value) {
      var t1;
      type$.TextAlign._as(value);
      t1 = this._textPainter;
      if (B.boolConversionCheck(J.$eq$(t1.get$textAlign(), value)))
        return;
      t1.set$textAlign(value);
      this.markNeedsPaint$0();
    },
    get$textDirection() {
      var t1 = this._textPainter.get$textDirection();
      t1.toString;
      return t1;
    },
    set$textDirection(value) {
      var t1;
      type$.TextDirection._as(value);
      t1 = this._textPainter;
      if (B.boolConversionCheck(J.$eq$(t1.get$textDirection(), value)))
        return;
      t1.set$textDirection(value);
      this.markNeedsLayout$0();
    },
    get$softWrap() {
      return this._softWrap;
    },
    set$softWrap(value) {
      B._asBool(value);
      if (B.boolConversionCheck(J.$eq$(this._softWrap, value)))
        return;
      this._softWrap = value;
      this.markNeedsLayout$0();
    },
    get$overflow() {
      return this._overflow;
    },
    set$overflow(value) {
      var t1, _this = this;
      type$.TextOverflow._as(value);
      if (B.boolConversionCheck(J.$eq$(_this._overflow, value)))
        return;
      _this._overflow = value;
      t1 = value === C.TextOverflow_2 ? "\u2026" : null;
      _this._textPainter.set$ellipsis(t1);
      _this.markNeedsLayout$0();
    },
    get$textScaler() {
      return this._textPainter.get$textScaler();
    },
    set$textScaler(value) {
      var t1;
      type$.TextScaler._as(value);
      t1 = this._textPainter;
      if (B.boolConversionCheck(J.$eq$(t1.get$textScaler(), value)))
        return;
      t1.set$textScaler(value);
      this._overflowShader = null;
      this.markNeedsLayout$0();
    },
    get$maxLines() {
      return this._textPainter.get$maxLines();
    },
    set$maxLines(value) {
      var t1;
      B._asIntQ(value);
      t1 = this._textPainter;
      if (B.boolConversionCheck(J.$eq$(t1.get$maxLines(), value)))
        return;
      t1.set$maxLines(value);
      this._overflowShader = null;
      this.markNeedsLayout$0();
    },
    get$locale() {
      return this._textPainter.get$locale();
    },
    set$locale(value) {
      var t1;
      type$.nullable_Locale._as(value);
      t1 = this._textPainter;
      if (B.boolConversionCheck(J.$eq$(t1.get$locale(), value)))
        return;
      t1.set$locale(value);
      this._overflowShader = null;
      this.markNeedsLayout$0();
    },
    set$strutStyle(value) {
      var t1;
      type$.nullable_StrutStyle._as(value);
      t1 = this._textPainter;
      if (B.boolConversionCheck(J.$eq$(t1.get$strutStyle(), value)))
        return;
      t1.set$strutStyle(value);
      this._overflowShader = null;
      this.markNeedsLayout$0();
    },
    set$textWidthBasis(value) {
      var t1;
      type$.TextWidthBasis._as(value);
      t1 = this._textPainter;
      if (B.boolConversionCheck(J.$eq$(t1.get$textWidthBasis(), value)))
        return;
      t1.set$textWidthBasis(value);
      this._overflowShader = null;
      this.markNeedsLayout$0();
    },
    set$textHeightBehavior(value) {
      var t1;
      type$.nullable_TextHeightBehavior._as(value);
      t1 = this._textPainter;
      if (B.boolConversionCheck(J.$eq$(t1.get$textHeightBehavior(), value)))
        return;
      t1.set$textHeightBehavior(value);
      this._overflowShader = null;
      this.markNeedsLayout$0();
    },
    get$selectionColor() {
      return this._selectionColor;
    },
    set$selectionColor(value) {
      var t1, _this = this;
      type$.nullable_Color._as(value);
      if (B.boolConversionCheck(J.$eq$(_this._selectionColor, value)))
        return;
      _this._selectionColor = value;
      t1 = _this._lastSelectableFragments;
      t1 = t1 == null ? null : J.any$1$ax(t1, new A.RenderParagraph_selectionColor_closure());
      if (B.boolConversionCheck(t1 == null ? false : t1))
        _this.markNeedsPaint$0();
    },
    _getOffsetForPosition$1(position) {
      type$.TextPosition._as(position);
      return J.$add$ansx(this.getOffsetForCaret$2(position, D.Rect_0_0_0_0), E.Offset$(0, this.getFullHeightForCaret$1(position)));
    },
    hitTestSelf$1(position) {
      type$.Offset._as(position);
      return true;
    },
    hitTestChildren$2$position(result, position) {
      var t1, glyph, spanHit, t2, span;
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      t1 = this._textPainter;
      glyph = t1.getClosestGlyphForOffset$1(position);
      if (glyph != null && B.boolConversionCheck(J.contains$1$asx(glyph.graphemeClusterLayoutBounds, position))) {
        t1 = t1.get$text();
        t1.toString;
        spanHit = t1.getSpanForPosition$1(E.TextPosition$(D.TextAffinity_1, glyph.graphemeClusterCodeUnitRange.start));
      } else
        spanHit = null;
      t1 = type$.HitTestTarget;
      t2 = t1._is(spanHit);
      span = t2 ? spanHit : null;
      if (t2) {
        result.add$1(0, E.HitTestEntry$(span, t1));
        return true;
      }
      return this.hitTestInlineChildren$2(result, position);
    },
    systemFontsDidChange$0() {
      this.super$RelayoutWhenSystemFontsChangeMixin$systemFontsDidChange();
      this._textPainter.markNeedsLayout$0();
    },
    _adjustMaxWidth$1(maxWidth) {
      B._asDouble(maxWidth);
      return B.boolConversionCheck(this.get$softWrap()) || B.boolConversionCheck(J.$eq$(this.get$overflow(), C.TextOverflow_2)) ? maxWidth : 1 / 0;
    },
    _layoutTextWithConstraints$1(constraints) {
      var t1;
      type$.BoxConstraints._as(constraints);
      t1 = this._textPainter;
      t1.setPlaceholderDimensions$1(this._placeholderDimensions);
      t1.layout$2$maxWidth$minWidth(this._adjustMaxWidth$1(constraints.maxWidth), constraints.minWidth);
    },
    computeDryLayout$1(constraints) {
      var t1, t2;
      type$.BoxConstraints._as(constraints);
      t1 = this.get$_textIntrinsics();
      t2 = constraints.maxWidth;
      t1.setPlaceholderDimensions$1(this.layoutInlineChildren$3(t2, A.layout_helper_ChildLayoutHelper_dryLayoutChild$closure(), A.layout_helper_ChildLayoutHelper_getDryBaseline$closure()));
      t1.layout$2$maxWidth$minWidth(this._adjustMaxWidth$1(t2), constraints.minWidth);
      return constraints.constrain$1(t1.get$size());
    },
    computeDistanceToActualBaseline$1(baseline) {
      type$.TextBaseline._as(baseline);
      this._layoutTextWithConstraints$1(this.get$constraints());
      return this._textPainter.computeDistanceToActualBaseline$1(D.TextBaseline_0);
    },
    computeDryBaseline$2(constraints, baseline) {
      var t1, t2, _this = this;
      type$.BoxConstraints._as(constraints);
      type$.TextBaseline._as(baseline);
      t1 = _this.get$_textIntrinsics();
      t2 = constraints.maxWidth;
      t1.setPlaceholderDimensions$1(_this.layoutInlineChildren$3(t2, A.layout_helper_ChildLayoutHelper_dryLayoutChild$closure(), A.layout_helper_ChildLayoutHelper_getDryBaseline$closure()));
      t1.layout$2$maxWidth$minWidth(_this._adjustMaxWidth$1(t2), constraints.minWidth);
      return _this.get$_textIntrinsics().computeDistanceToActualBaseline$1(D.TextBaseline_0);
    },
    performLayout$0() {
      var t1, t2, textSize, t3, didOverflowHeight, didOverflowWidth, fadeSizePainter, _0_1, fadeEnd, _0_2, fadeStart, _this = this, _null = null,
        constraints = _this.get$constraints();
      _this.set$_placeholderDimensions(_this.layoutInlineChildren$3(constraints.maxWidth, A.layout_helper_ChildLayoutHelper_layoutChild$closure(), A.layout_helper_ChildLayoutHelper_getBaseline$closure()));
      _this._layoutTextWithConstraints$1(constraints);
      t1 = _this._textPainter;
      t2 = t1.get$inlinePlaceholderBoxes();
      t2.toString;
      _this.positionInlineChildren$1(t2);
      textSize = t1.get$size();
      _this.set$size(constraints.constrain$1(textSize));
      t2 = _this.get$size().get$height();
      t3 = textSize.get$height();
      if (typeof t2 !== "number")
        return t2.$lt();
      if (typeof t3 !== "number")
        return B.iae(t3);
      didOverflowHeight = t2 < t3 || B.boolConversionCheck(t1.get$didExceedMaxLines());
      t2 = _this.get$size().get$width();
      t3 = textSize.get$width();
      if (typeof t2 !== "number")
        return t2.$lt();
      if (typeof t3 !== "number")
        return B.iae(t3);
      didOverflowWidth = t2 < t3;
      if (didOverflowWidth || didOverflowHeight)
        switch (_this._overflow) {
          case C.TextOverflow_3:
            _this._needsClipping = false;
            _this._overflowShader = null;
            break;
          case C.TextOverflow_0:
          case C.TextOverflow_2:
            _this._needsClipping = true;
            _this._overflowShader = null;
            break;
          case C.TextOverflow_1:
            _this._needsClipping = true;
            t1 = A.TextSpan$(_null, t1.get$text().style, "\u2026");
            t2 = _this.get$textDirection();
            t3 = _this.get$textScaler();
            fadeSizePainter = A.TextPainter$(_null, _this.get$locale(), _null, _null, t1, D.TextAlign_4, t2, _null, t3, C.TextWidthBasis_0);
            fadeSizePainter.layout$0();
            if (didOverflowWidth) {
              switch (_this.get$textDirection()) {
                case D.TextDirection_0:
                  t1 = new B._Record_2(fadeSizePainter.get$width(), 0);
                  break;
                case D.TextDirection_1:
                  t1 = _this.get$size().get$width();
                  t2 = fadeSizePainter.get$width();
                  if (typeof t1 !== "number")
                    return t1.$sub();
                  if (typeof t2 !== "number")
                    return B.iae(t2);
                  t2 = new B._Record_2(t1 - t2, _this.get$size().get$width());
                  t1 = t2;
                  break;
                default:
                  t1 = _null;
              }
              _0_1 = t1._0;
              t2 = _0_1;
              fadeEnd = _null;
              t3 = false;
              if (typeof t2 == "number") {
                _0_2 = t1._1;
                t1 = _0_2;
                t1 = typeof t1 == "number";
                if (t1)
                  fadeEnd = _0_2;
                fadeStart = _0_1;
              } else {
                t1 = t3;
                fadeStart = _null;
              }
              if (!t1)
                throw B.wrapException(B.StateError$("Pattern matching error"));
              _this.set$_overflowShader(A.Gradient_Gradient$linear(E.Offset$(fadeStart, 0), E.Offset$(fadeEnd, 0), B._setArrayType([C.Color_4294967295, C.Color_16777215], type$.JSArray_Color)));
            } else {
              fadeEnd = _this.get$size().get$height();
              t1 = fadeSizePainter.get$height();
              if (typeof t1 !== "number")
                return t1.$div();
              _this.set$_overflowShader(A.Gradient_Gradient$linear(E.Offset$(0, fadeEnd - t1 / 2), E.Offset$(0, fadeEnd), B._setArrayType([C.Color_4294967295, C.Color_16777215], type$.JSArray_Color)));
            }
            fadeSizePainter.dispose$0();
            break;
        }
      else {
        _this._needsClipping = false;
        _this._overflowShader = null;
      }
    },
    applyPaintTransform$2(child, transform) {
      this.defaultApplyPaintTransform$2(type$.RenderBox._as(child), type$.Matrix4._as(transform));
    },
    paint$2(context, offset) {
      var bounds, t1, paint, _this = this;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      _this._layoutTextWithConstraints$1(_this.get$constraints());
      if (B.boolConversionCheck(_this._needsClipping)) {
        bounds = offset.$and(0, _this.get$size());
        if (_this._overflowShader != null)
          context.get$canvas().saveLayer$2(bounds, E.Paint_Paint());
        else
          context.get$canvas().save$0();
        context.get$canvas().clipRect$1(bounds);
      }
      t1 = _this._lastSelectableFragments;
      if (t1 != null)
        for (t1 = J.get$iterator$ax(t1); B.boolConversionCheck(t1.moveNext$0());)
          t1.get$current().paint$2(context, offset);
      _this._textPainter.paint$2(context.get$canvas(), offset);
      _this.paintInlineChildren$2(context, offset);
      if (B.boolConversionCheck(_this._needsClipping)) {
        if (_this._overflowShader != null) {
          context.get$canvas().translate$2(offset.get$dx(), offset.get$dy());
          paint = E.Paint_Paint();
          paint.set$blendMode(D.BlendMode_13);
          paint.set$shader(_this._overflowShader);
          context.get$canvas().drawRect$2(D.Offset_0_0.$and(0, _this.get$size()), paint);
        }
        context.get$canvas().restore$0();
      }
    },
    getOffsetForCaret$2(position, caretPrototype) {
      type$.TextPosition._as(position);
      type$.Rect._as(caretPrototype);
      this._layoutTextWithConstraints$1(this.get$constraints());
      return this._textPainter.getOffsetForCaret$2(position, caretPrototype);
    },
    getFullHeightForCaret$1(position) {
      type$.TextPosition._as(position);
      this._layoutTextWithConstraints$1(this.get$constraints());
      return this._textPainter.getFullHeightForCaret$2(position, D.Rect_0_0_0_0);
    },
    getBoxesForSelection$1(selection) {
      type$.TextSelection._as(selection);
      this._layoutTextWithConstraints$1(this.get$constraints());
      return this._textPainter.getBoxesForSelection$3$boxHeightStyle$boxWidthStyle(selection, D.BoxHeightStyle_0, D.BoxWidthStyle_0);
    },
    getPositionForOffset$1(offset) {
      type$.Offset._as(offset);
      this._layoutTextWithConstraints$1(this.get$constraints());
      return this._textPainter.getPositionForOffset$1(offset);
    },
    getWordBoundary$1(position) {
      type$.TextPosition._as(position);
      this._layoutTextWithConstraints$1(this.get$constraints());
      return this._textPainter.getWordBoundary$1(position);
    },
    _getLineAtOffset$1(position) {
      return this._textPainter.getLineBoundary$1(type$.TextPosition._as(position));
    },
    describeSemanticsConfiguration$1(config) {
      var t1, needsAssembleSemanticsNode, buffer, attributes, offset, t2, label, t3, originalRange, t4, t5, _this = this;
      type$.SemanticsConfiguration._as(config);
      _this.super$RenderObject$describeSemanticsConfiguration(config);
      _this.set$_semanticsInfo(_this.get$text().getSemanticsInformation$0());
      t1 = _this._semanticsInfo;
      t1.toString;
      t1 = J.get$iterator$ax(t1);
      while (true) {
        if (!B.boolConversionCheck(t1.moveNext$0())) {
          needsAssembleSemanticsNode = false;
          break;
        }
        if (t1.get$current().recognizer != null) {
          needsAssembleSemanticsNode = true;
          break;
        }
      }
      if (needsAssembleSemanticsNode) {
        config.explicitChildNodes = true;
        config.set$isSemanticBoundary(true);
      } else {
        if (_this._cachedAttributedLabels == null) {
          buffer = B.StringBuffer$("");
          attributes = B._setArrayType([], type$.JSArray_StringAttribute);
          t1 = _this._semanticsInfo;
          t1.toString;
          t1 = J.get$iterator$ax(t1);
          offset = 0;
          for (; B.boolConversionCheck(t1.moveNext$0());) {
            t2 = t1.get$current();
            label = t2.semanticsLabel;
            if (label == null)
              label = t2.text;
            for (t2 = J.get$iterator$ax(t2.stringAttributes); B.boolConversionCheck(t2.moveNext$0());) {
              t3 = t2.get$current();
              originalRange = t3.range;
              t4 = originalRange.start;
              if (typeof t4 !== "number")
                return B.iae(t4);
              t5 = originalRange.end;
              if (typeof t5 !== "number")
                return B.iae(t5);
              F.JSArray_methods.add$1(attributes, t3.copy$1$range(E.TextRange$(offset + t5, offset + t4)));
            }
            buffer.write$1(label);
            offset += label.length;
          }
          _this.set$_cachedAttributedLabels(B._setArrayType([E.AttributedString$(buffer.toString$0(0), attributes)], type$.JSArray_AttributedString));
        }
        t1 = _this._cachedAttributedLabels;
        t1.toString;
        config.set$attributedLabel(J.$index$asx(t1, 0));
        config.set$textDirection(_this.get$textDirection());
      }
    },
    assembleSemanticsNode$3(node, config, children) {
      var newChildren, currentDirection, newChildCache, t2, t3, ordinal, start, t4, t5, t6, t7, selection, rects, rect, currentDirection0, t8, t9, currentRect, configuration, ordinal0, _0_0, _0_2, _0_4, onLongPress, _0_6, newChild, key, _this = this,
        t1 = type$.SemanticsNode;
      t1._as(node);
      type$.SemanticsConfiguration._as(config);
      type$.Iterable_SemanticsNode._as(children);
      newChildren = B._setArrayType([], type$.JSArray_SemanticsNode);
      currentDirection = _this.get$textDirection();
      _this.get$firstChild();
      newChildCache = B.LinkedHashMap_LinkedHashMap(type$.Key, t1);
      if (_this._cachedCombinedSemanticsInfos == null) {
        t1 = _this._semanticsInfo;
        t1.toString;
        _this.set$_cachedCombinedSemanticsInfos(A.combineSemanticsInfo(t1));
      }
      t1 = _this._cachedCombinedSemanticsInfos;
      t1.toString;
      t1 = J.get$iterator$ax(t1);
      t2 = type$.double;
      t3 = type$.nullable_void_Function;
      ordinal = 0;
      start = 0;
      for (; B.boolConversionCheck(t1.moveNext$0());) {
        t4 = t1.get$current();
        t5 = t4.text;
        t6 = J.getInterceptor$asx(t5);
        t7 = t6.get$length(t5);
        if (typeof t7 !== "number")
          return B.iae(t7);
        selection = E.TextSelection$(D.TextAffinity_1, start, start + t7, false);
        t6 = t6.get$length(t5);
        if (typeof t6 !== "number")
          return B.iae(t6);
        start += t6;
        rects = _this.getBoxesForSelection$1(selection);
        t6 = J.getInterceptor$asx(rects);
        if (B.boolConversionCheck(t6.get$isEmpty(rects)))
          continue;
        rect = t6.get$first(rects).toRect$0();
        currentDirection0 = t6.get$first(rects).direction;
        for (t6 = J.get$iterator$ax(t6.skip$1(rects, 1)); B.boolConversionCheck(t6.moveNext$0());) {
          t7 = t6.get$current();
          rect = rect.expandToInclude$1(t7.toRect$0());
          currentDirection0 = t7.direction;
        }
        rect = E.Rect$fromLTWH(E.max(0, rect.left, t2), E.max(0, rect.top, t2), E.min(rect.get$width(), _this.get$constraints().maxWidth, t2), E.min(rect.get$height(), _this.get$constraints().maxHeight, t2));
        t6 = J.floorToDouble$0$n(rect.left);
        if (typeof t6 !== "number")
          return t6.$sub();
        t7 = J.floorToDouble$0$n(rect.top);
        if (typeof t7 !== "number")
          return t7.$sub();
        t8 = J.ceilToDouble$0$n(rect.right);
        if (typeof t8 !== "number")
          return t8.$add();
        t9 = J.ceilToDouble$0$n(rect.bottom);
        if (typeof t9 !== "number")
          return t9.$add();
        currentRect = E.Rect$fromLTRB(t6 - 4, t7 - 4, t8 + 4, t9 + 4);
        configuration = E.SemanticsConfiguration$();
        ordinal0 = ordinal + 1;
        configuration.set$sortKey(A.OrdinalSortKey$(ordinal));
        configuration.set$textDirection(currentDirection);
        t9 = t4.semanticsLabel;
        t5 = t9 == null ? t5 : t9;
        configuration.set$attributedLabel(E.AttributedString$(t5, t4.stringAttributes));
        $label0$1: {
          _0_0 = t4.recognizer;
          t4 = null;
          if (_0_0 instanceof A.TapGestureRecognizer) {
            _0_2 = _0_0.onTap;
            t5 = t3._is(_0_2);
            if (t5)
              t4 = _0_2;
          } else
            t5 = false;
          if (!t5)
            if (_0_0 instanceof A.DoubleTapGestureRecognizer) {
              _0_4 = _0_0.onDoubleTap;
              t5 = t3._is(_0_4);
              if (t5)
                t4 = _0_4;
            } else
              t5 = false;
          else
            t5 = true;
          if (t5) {
            if (t4 != null) {
              configuration.set$onTap(t4);
              configuration.set$isLink(true);
            }
            break $label0$1;
          }
          onLongPress = null;
          if (_0_0 instanceof A.LongPressGestureRecognizer) {
            _0_6 = _0_0.onLongPress;
            t4 = t3._is(_0_6);
            if (t4)
              onLongPress = _0_6;
          } else
            t4 = false;
          if (t4) {
            if (onLongPress != null)
              configuration.set$onLongPress(onLongPress);
            break $label0$1;
          }
          if (_0_0 == null)
            break $label0$1;
        }
        t4 = node.parentPaintClipRect;
        if (t4 != null)
          configuration.set$isHidden(B.boolConversionCheck(t4.intersect$1(currentRect).get$isEmpty(0)) && !B.boolConversionCheck(currentRect.get$isEmpty(0)));
        t4 = _this._cachedChildNodes;
        t4 = t4 == null ? null : J.get$isNotEmpty$asx(t4);
        if (B.boolConversionCheck(t4 == null ? false : t4)) {
          t4 = _this._cachedChildNodes;
          t4 = J.remove$1$ax(t4, J.get$first$ax(t4.get$keys()));
          t4.toString;
          newChild = t4;
        } else {
          key = E.UniqueKey$();
          newChild = E.SemanticsNode$(key, _this._createShowOnScreenFor$1(key));
        }
        newChild.updateWith$1$config(configuration);
        newChild.set$rect(currentRect);
        t4 = newChild.key;
        t4.toString;
        newChildCache.$indexSet(0, t4, newChild);
        F.JSArray_methods.add$1(newChildren, newChild);
        ordinal = ordinal0;
        currentDirection = currentDirection0;
      }
      _this.set$_cachedChildNodes(newChildCache);
      node.updateWith$2$childrenInInversePaintOrder$config(newChildren, config);
    },
    _createShowOnScreenFor$1(key) {
      return new A.RenderParagraph__createShowOnScreenFor_closure(this, type$.Key._as(key));
    },
    clearSemantics$0() {
      this.super$RenderObject$clearSemantics();
      this.set$_cachedChildNodes(null);
    },
    debugDescribeChildren$0() {
      return B._setArrayType([this.get$text().toDiagnosticsNode$2$name$style("text", D.DiagnosticsTreeStyle_4)], type$.JSArray_DiagnosticsNode);
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$RenderBox$debugFillProperties(properties);
      properties.add$1(0, E.EnumProperty$("textAlign", _this.get$textAlign(), D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.TextAlign));
      properties.add$1(0, E.EnumProperty$("textDirection", _this.get$textDirection(), D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.TextDirection));
      properties.add$1(0, E.FlagProperty$("softWrap", _null, string$.no_wra, "wrapping at box width", D.DiagnosticLevel_3, true, _this.get$softWrap()));
      properties.add$1(0, E.EnumProperty$("overflow", _this.get$overflow(), D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.TextOverflow));
      properties.add$1(0, E.DiagnosticsProperty$("textScaler", _this.get$textScaler(), true, D._LinearTextScaler_1, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextScaler));
      properties.add$1(0, E.DiagnosticsProperty$("locale", _this.get$locale(), true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Locale));
      properties.add$1(0, E.IntProperty$("maxLines", _this.get$maxLines(), D.C__NoDefaultValue, "unlimited", D.DiagnosticLevel_3, _null));
    },
    set$_cachedAttributedLabels(_cachedAttributedLabels) {
      this._cachedAttributedLabels = type$.nullable_List_AttributedString._as(_cachedAttributedLabels);
    },
    set$_cachedCombinedSemanticsInfos(_cachedCombinedSemanticsInfos) {
      this._cachedCombinedSemanticsInfos = type$.nullable_List_InlineSpanSemanticsInformation._as(_cachedCombinedSemanticsInfos);
    },
    set$_lastSelectableFragments(_lastSelectableFragments) {
      this._lastSelectableFragments = type$.nullable_List__SelectableFragment._as(_lastSelectableFragments);
    },
    set$_overflowShader(_overflowShader) {
      this._overflowShader = type$.nullable_Shader._as(_overflowShader);
    },
    set$_placeholderDimensions(_placeholderDimensions) {
      this._placeholderDimensions = type$.nullable_List_PlaceholderDimensions._as(_placeholderDimensions);
    },
    set$_semanticsInfo(_semanticsInfo) {
      this._semanticsInfo = type$.nullable_List_InlineSpanSemanticsInformation._as(_semanticsInfo);
    },
    set$_cachedChildNodes(_cachedChildNodes) {
      this._cachedChildNodes = type$.nullable_LinkedHashMap_Key_SemanticsNode._as(_cachedChildNodes);
    },
    $isContainerRenderObjectMixin: 1,
    $isRelayoutWhenSystemFontsChangeMixin: 1,
    $isRenderInlineChildrenContainerDefaults: 1
  };
  A._SelectableFragment.prototype = {
    _SelectableFragment$3$fullText$paragraph$range(fullText, paragraph, range) {
      E.ChangeNotifier_maybeDispatchObjectCreation(this);
      this.set$_selectionGeometry(this._getSelectionGeometry$0());
    },
    get$value() {
      return this.get$_selectionGeometry();
    },
    get$_selectionGeometry() {
      return this.___SelectableFragment__selectionGeometry_A;
    },
    set$_selectionGeometry(value) {
      this.___SelectableFragment__selectionGeometry_A = type$.SelectionGeometry._as(value);
    },
    _paragraph$_updateSelectionGeometry$0() {
      var _this = this,
        newValue = _this._getSelectionGeometry$0();
      if (B.boolConversionCheck(J.$eq$(_this.get$_selectionGeometry(), newValue)))
        return;
      _this.set$_selectionGeometry(newValue);
      _this.notifyListeners$0();
    },
    _getSelectionGeometry$0() {
      var selectionStart, selectionEnd, startOffsetInParagraphCoordinates, endOffsetInParagraphCoordinates, flipHandles, selection, selectionRects, t2, _this = this,
        t1 = _this._textSelectionStart;
      if (t1 == null || _this._textSelectionEnd == null)
        return C.SelectionGeometry_2jN;
      selectionStart = t1.offset;
      selectionEnd = _this._textSelectionEnd.offset;
      t1 = _this.paragraph;
      startOffsetInParagraphCoordinates = t1._getOffsetForPosition$1(E.TextPosition$(D.TextAffinity_1, selectionStart));
      endOffsetInParagraphCoordinates = selectionStart === selectionEnd ? startOffsetInParagraphCoordinates : t1._getOffsetForPosition$1(E.TextPosition$(D.TextAffinity_1, selectionEnd));
      flipHandles = selectionStart > selectionEnd !== (D.TextDirection_0 === t1.get$textDirection());
      selection = E.TextSelection$(D.TextAffinity_1, selectionStart, selectionEnd, false);
      selectionRects = B._setArrayType([], type$.JSArray_Rect);
      for (t2 = J.get$iterator$ax(t1.getBoxesForSelection$1(selection)); B.boolConversionCheck(t2.moveNext$0());)
        F.JSArray_methods.add$1(selectionRects, t2.get$current().toRect$0());
      t1 = t1._textPainter;
      t2 = t1.get$preferredLineHeight();
      t2 = A.SelectionPoint$(flipHandles ? C.TextSelectionHandleType_1 : C.TextSelectionHandleType_0, t2, startOffsetInParagraphCoordinates);
      t1 = t1.get$preferredLineHeight();
      t1 = A.SelectionPoint$(flipHandles ? C.TextSelectionHandleType_0 : C.TextSelectionHandleType_1, t1, endOffsetInParagraphCoordinates);
      return A.SelectionGeometry$(t1, true, selectionRects, t2, B.boolConversionCheck(J.$eq$(_this._textSelectionStart.offset, _this._textSelectionEnd.offset)) ? C.SelectionStatus_1 : C.SelectionStatus_0);
    },
    dispatchSelectionEvent$1($event) {
      var result, existingSelectionStart, existingSelectionEnd, t1, _this = this;
      type$.SelectionEvent._as($event);
      result = B._Cell$named("result");
      existingSelectionStart = _this._textSelectionStart;
      existingSelectionEnd = _this._textSelectionEnd;
      t1 = $event.type;
      switch (t1) {
        case C.SelectionEventType_0:
        case C.SelectionEventType_1:
          type$.SelectionEdgeUpdateEvent._as($event);
          switch ($event.granularity.index) {
            case 0:
              result.set$finalLocalValue(_this._updateSelectionEdge$2$isEnd($event.globalPosition, J.$eq$(t1, C.SelectionEventType_1)));
              break;
            case 1:
              result.set$finalLocalValue(_this._updateSelectionEdgeByTextBoundary$3$getTextBoundary$isEnd($event.globalPosition, _this.get$_getWordBoundaryAtPosition(), J.$eq$(t1, C.SelectionEventType_1)));
              break;
            case 2:
              result.set$finalLocalValue(_this._updateSelectionEdgeByMultiSelectableTextBoundary$4$getClampedTextBoundary$getTextBoundary$isEnd($event.globalPosition, _this.get$_getClampedParagraphBoundaryAtPosition(), _this.get$_getParagraphBoundaryAtPosition(), J.$eq$(t1, C.SelectionEventType_1)));
              break;
            case 4:
            case 3:
              break;
          }
          break;
        case C.SelectionEventType_2:
          result.set$finalLocalValue(_this._handleClearSelection$0());
          break;
        case C.SelectionEventType_3:
          result.set$finalLocalValue(_this._handleSelectAll$0());
          break;
        case C.SelectionEventType_4:
          result.set$finalLocalValue(_this._handleSelectWord$1(type$.SelectWordSelectionEvent._as($event).get$globalPosition()));
          break;
        case C.SelectionEventType_5:
          type$.SelectParagraphSelectionEvent._as($event);
          if (B.boolConversionCheck($event.absorb)) {
            _this._handleSelectAll$0();
            result.set$finalLocalValue(C.SelectionResult_0);
            _this._selectableContainsOriginTextBoundary = true;
          } else
            result.set$finalLocalValue(_this._paragraph$_handleSelectParagraph$1($event.globalPosition));
          break;
        case C.SelectionEventType_6:
          type$.GranularlyExtendSelectionEvent._as($event);
          result.set$finalLocalValue(_this._handleGranularlyExtendSelection$3($event.get$forward(), $event.get$isEnd(), $event.get$granularity()));
          break;
        case C.SelectionEventType_7:
          type$.DirectionallyExtendSelectionEvent._as($event);
          result.set$finalLocalValue(_this._handleDirectionallyExtendSelection$3($event.get$dx(), $event.get$isEnd(), $event.get$direction()));
          break;
      }
      if (!B.boolConversionCheck(J.$eq$(existingSelectionStart, _this._textSelectionStart)) || !B.boolConversionCheck(J.$eq$(existingSelectionEnd, _this._textSelectionEnd)))
        _this._didChangeSelection$0();
      return result.readLocal$1$0(type$.SelectionResult);
    },
    _didChangeSelection$0() {
      this.paragraph.markNeedsPaint$0();
      this._paragraph$_updateSelectionGeometry$0();
    },
    _updateSelectionStartEdgeByTextBoundary$5(textBoundary, getTextBoundary, position, existingSelectionStart, existingSelectionEnd) {
      var t1, t2, isSamePosition, t3, shouldSwapEdges, targetPosition, localTextBoundary, isSelectionInverted, _this = this;
      type$.nullable_Record_2_TextPosition_boundaryEnd_and_TextPosition_boundaryStart._as(textBoundary);
      type$.Record_2_TextPosition_boundaryEnd_and_TextPosition_boundaryStart_Function_TextPosition._as(getTextBoundary);
      type$.TextPosition._as(position);
      t1 = type$.nullable_TextPosition;
      t1._as(existingSelectionStart);
      t1._as(existingSelectionEnd);
      if (textBoundary != null)
        if (B.boolConversionCheck(_this._selectableContainsOriginTextBoundary) && existingSelectionStart != null && existingSelectionEnd != null) {
          t1 = position.offset;
          t2 = existingSelectionEnd.offset;
          isSamePosition = J.$eq$(t1, t2);
          t3 = existingSelectionStart.offset;
          if (typeof t3 !== "number")
            return t3.$gt();
          if (typeof t2 !== "number")
            return B.iae(t2);
          if (!isSamePosition) {
            if (typeof t1 !== "number")
              return t1.$gt();
            shouldSwapEdges = t3 > t2 !== t1 > t2;
          } else
            shouldSwapEdges = false;
          if (shouldSwapEdges) {
            if (typeof t1 !== "number")
              return t1.$lt();
            targetPosition = t1 < t2 ? textBoundary._1 : textBoundary._0;
            localTextBoundary = getTextBoundary.call$1(existingSelectionEnd);
            t1 = localTextBoundary._1;
            _this._setSelectionPosition$2$isEnd(t2 === t1.offset ? localTextBoundary._0 : t1, true);
          } else {
            if (typeof t1 !== "number")
              return t1.$lt();
            if (t1 < t2)
              targetPosition = textBoundary._1;
            else
              targetPosition = t1 > t2 ? textBoundary._0 : existingSelectionStart;
          }
        } else if (existingSelectionEnd != null) {
          t1 = position.offset;
          t2 = existingSelectionEnd.offset;
          if (typeof t1 !== "number")
            return t1.$lt();
          if (typeof t2 !== "number")
            return B.iae(t2);
          targetPosition = t1 < t2 ? textBoundary._1 : textBoundary._0;
        } else
          targetPosition = _this._closestTextBoundary$2(textBoundary, position);
      else {
        if (B.boolConversionCheck(_this._selectableContainsOriginTextBoundary) && existingSelectionStart != null && existingSelectionEnd != null) {
          t1 = position.offset;
          t2 = existingSelectionEnd.offset;
          isSamePosition = J.$eq$(t1, t2);
          t3 = existingSelectionStart.offset;
          if (typeof t3 !== "number")
            return t3.$gt();
          if (typeof t2 !== "number")
            return B.iae(t2);
          isSelectionInverted = t3 > t2;
          if (!isSamePosition) {
            if (typeof t1 !== "number")
              return t1.$gt();
            shouldSwapEdges = isSelectionInverted !== t1 > t2;
          } else
            shouldSwapEdges = false;
          if (shouldSwapEdges) {
            localTextBoundary = getTextBoundary.call$1(existingSelectionEnd);
            _this._setSelectionPosition$2$isEnd(isSelectionInverted ? localTextBoundary._0 : localTextBoundary._1, true);
          }
        }
        targetPosition = null;
      }
      return targetPosition == null ? position : targetPosition;
    },
    _updateSelectionEndEdgeByTextBoundary$5(textBoundary, getTextBoundary, position, existingSelectionStart, existingSelectionEnd) {
      var t1, t2, isSamePosition, t3, shouldSwapEdges, targetPosition, localTextBoundary, isSelectionInverted, _this = this;
      type$.nullable_Record_2_TextPosition_boundaryEnd_and_TextPosition_boundaryStart._as(textBoundary);
      type$.Record_2_TextPosition_boundaryEnd_and_TextPosition_boundaryStart_Function_TextPosition._as(getTextBoundary);
      type$.TextPosition._as(position);
      t1 = type$.nullable_TextPosition;
      t1._as(existingSelectionStart);
      t1._as(existingSelectionEnd);
      if (textBoundary != null)
        if (B.boolConversionCheck(_this._selectableContainsOriginTextBoundary) && existingSelectionStart != null && existingSelectionEnd != null) {
          t1 = position.offset;
          t2 = existingSelectionStart.offset;
          isSamePosition = J.$eq$(t1, t2);
          t3 = existingSelectionEnd.offset;
          if (typeof t2 !== "number")
            return t2.$gt();
          if (typeof t3 !== "number")
            return B.iae(t3);
          if (!isSamePosition) {
            if (typeof t1 !== "number")
              return t1.$lt();
            shouldSwapEdges = t2 > t3 !== t1 < t2;
          } else
            shouldSwapEdges = false;
          if (shouldSwapEdges) {
            if (typeof t1 !== "number")
              return t1.$lt();
            targetPosition = t1 < t2 ? textBoundary._1 : textBoundary._0;
            localTextBoundary = getTextBoundary.call$1(existingSelectionStart);
            t1 = localTextBoundary._1;
            _this._setSelectionPosition$2$isEnd(t2 === t1.offset ? localTextBoundary._0 : t1, false);
          } else {
            if (typeof t1 !== "number")
              return t1.$lt();
            if (t1 < t2)
              targetPosition = textBoundary._1;
            else
              targetPosition = t1 > t2 ? textBoundary._0 : existingSelectionEnd;
          }
        } else if (existingSelectionStart != null) {
          t1 = position.offset;
          t2 = existingSelectionStart.offset;
          if (typeof t1 !== "number")
            return t1.$lt();
          if (typeof t2 !== "number")
            return B.iae(t2);
          targetPosition = t1 < t2 ? textBoundary._1 : textBoundary._0;
        } else
          targetPosition = _this._closestTextBoundary$2(textBoundary, position);
      else {
        if (B.boolConversionCheck(_this._selectableContainsOriginTextBoundary) && existingSelectionStart != null && existingSelectionEnd != null) {
          t1 = position.offset;
          t2 = existingSelectionStart.offset;
          isSamePosition = J.$eq$(t1, t2);
          t3 = existingSelectionEnd.offset;
          if (typeof t2 !== "number")
            return t2.$gt();
          if (typeof t3 !== "number")
            return B.iae(t3);
          isSelectionInverted = t2 > t3;
          if (typeof t1 !== "number")
            return t1.$lt();
          if (isSelectionInverted !== t1 < t2 || isSamePosition) {
            localTextBoundary = getTextBoundary.call$1(existingSelectionStart);
            _this._setSelectionPosition$2$isEnd(isSelectionInverted ? localTextBoundary._1 : localTextBoundary._0, false);
          }
        }
        targetPosition = null;
      }
      return targetPosition == null ? position : targetPosition;
    },
    _updateSelectionEdgeByTextBoundary$3$getTextBoundary$isEnd(globalPosition, getTextBoundary, isEnd) {
      var existingSelectionStart, existingSelectionEnd, t1, transform, localPosition, position, textBoundary, t2, t3, t4, t5, targetPosition, _this = this, _null = null;
      type$.Offset._as(globalPosition);
      B._asBool(isEnd);
      type$.Record_2_TextPosition_boundaryEnd_and_TextPosition_boundaryStart_Function_TextPosition._as(getTextBoundary);
      existingSelectionStart = _this._textSelectionStart;
      existingSelectionEnd = _this._textSelectionEnd;
      _this._setSelectionPosition$2$isEnd(_null, isEnd);
      t1 = _this.paragraph;
      transform = t1.getTransformTo$1(_null);
      transform.invert$0();
      localPosition = E.MatrixUtils_transformPoint(transform, globalPosition);
      if (B.boolConversionCheck(J.get$isEmpty$asx(_this.get$_paragraph$_rect())))
        return A.SelectionUtils_getResultBasedOnRect(_this.get$_paragraph$_rect(), localPosition);
      position = t1.getPositionForOffset$1(A.SelectionUtils_adjustDragOffset(_this.get$_paragraph$_rect(), localPosition, t1.get$textDirection()));
      textBoundary = B.boolConversionCheck(J.contains$1$asx(_this.get$_paragraph$_rect(), localPosition)) ? getTextBoundary.call$1(position) : _null;
      t1 = false;
      if (textBoundary != null) {
        t2 = textBoundary._1.offset;
        t3 = _this.range;
        t4 = t3.start;
        if (typeof t2 !== "number")
          return t2.$lt();
        if (typeof t4 !== "number")
          return B.iae(t4);
        if (t2 < t4) {
          t5 = textBoundary._0.offset;
          if (typeof t5 !== "number")
            return t5.$le();
          t4 = t5 <= t4;
        } else
          t4 = false;
        if (!t4) {
          t3 = t3.end;
          if (typeof t3 !== "number")
            return B.iae(t3);
          if (t2 >= t3) {
            t1 = textBoundary._0.offset;
            if (typeof t1 !== "number")
              return t1.$gt();
            t3 = t1 > t3;
            t1 = t3;
          }
        } else
          t1 = true;
      }
      if (t1)
        textBoundary = _null;
      targetPosition = _this._clampTextPosition$1(isEnd ? _this._updateSelectionEndEdgeByTextBoundary$5(textBoundary, getTextBoundary, position, existingSelectionStart, existingSelectionEnd) : _this._updateSelectionStartEdgeByTextBoundary$5(textBoundary, getTextBoundary, position, existingSelectionStart, existingSelectionEnd));
      _this._setSelectionPosition$2$isEnd(targetPosition, isEnd);
      t1 = targetPosition.offset;
      t2 = _this.range;
      t3 = J.getInterceptor$(t1);
      if (B.boolConversionCheck(t3.$eq(t1, t2.end)))
        return C.SelectionResult_0;
      if (B.boolConversionCheck(t3.$eq(t1, t2.start)))
        return C.SelectionResult_1;
      return A.SelectionUtils_getResultBasedOnRect(_this.get$_paragraph$_rect(), localPosition);
    },
    _updateSelectionEdge$2$isEnd(globalPosition, isEnd) {
      var t1, transform, localPosition, position, t2, t3, _this = this;
      type$.Offset._as(globalPosition);
      B._asBool(isEnd);
      _this._setSelectionPosition$2$isEnd(null, isEnd);
      t1 = _this.paragraph;
      transform = t1.getTransformTo$1(null);
      transform.invert$0();
      localPosition = E.MatrixUtils_transformPoint(transform, globalPosition);
      if (B.boolConversionCheck(J.get$isEmpty$asx(_this.get$_paragraph$_rect())))
        return A.SelectionUtils_getResultBasedOnRect(_this.get$_paragraph$_rect(), localPosition);
      position = _this._clampTextPosition$1(t1.getPositionForOffset$1(A.SelectionUtils_adjustDragOffset(_this.get$_paragraph$_rect(), localPosition, t1.get$textDirection())));
      _this._setSelectionPosition$2$isEnd(position, isEnd);
      t1 = position.offset;
      t2 = _this.range;
      t3 = J.getInterceptor$(t1);
      if (B.boolConversionCheck(t3.$eq(t1, t2.end)))
        return C.SelectionResult_0;
      if (B.boolConversionCheck(t3.$eq(t1, t2.start)))
        return C.SelectionResult_1;
      return A.SelectionUtils_getResultBasedOnRect(_this.get$_paragraph$_rect(), localPosition);
    },
    _updateSelectionStartEdgeByMultiSelectableTextBoundary$5(getTextBoundary, paragraphContainsPosition, position, existingSelectionStart, existingSelectionEnd) {
      var t1, t2, forwardSelection, boundaryAtPosition, originTextBoundary, pivotOffset, targetPosition, t3, t4, t5, t6, clampedPosition, positionOnPlaceholder, backwardSelection, _this = this;
      type$.Record_2_TextPosition_boundaryEnd_and_TextPosition_boundaryStart_Function_TextPosition_String._as(getTextBoundary);
      B._asBool(paragraphContainsPosition);
      type$.TextPosition._as(position);
      t1 = type$.nullable_TextPosition;
      t1._as(existingSelectionStart);
      t1._as(existingSelectionEnd);
      if (B.boolConversionCheck(_this._selectableContainsOriginTextBoundary) && existingSelectionStart != null && existingSelectionEnd != null) {
        t1 = existingSelectionEnd.offset;
        t2 = existingSelectionStart.offset;
        if (typeof t1 !== "number")
          return t1.$ge();
        if (typeof t2 !== "number")
          return B.iae(t2);
        forwardSelection = t1 >= t2;
        if (paragraphContainsPosition) {
          t2 = _this.fullText;
          boundaryAtPosition = getTextBoundary.call$2(position, t2);
          originTextBoundary = getTextBoundary.call$2(forwardSelection ? E.TextPosition$(existingSelectionEnd.affinity, t1 - 1) : existingSelectionEnd, t2);
          pivotOffset = forwardSelection ? originTextBoundary._0.offset : originTextBoundary._1.offset;
          t1 = position.offset;
          if (typeof t1 !== "number")
            return t1.$gt();
          t2 = t1 > pivotOffset;
          if (t1 < pivotOffset)
            targetPosition = boundaryAtPosition._1;
          else if (t2)
            targetPosition = boundaryAtPosition._0;
          else
            targetPosition = forwardSelection ? existingSelectionStart : existingSelectionEnd;
          if (!forwardSelection !== t2)
            _this._setSelectionPosition$2$isEnd(_this._clampTextPosition$1(forwardSelection ? originTextBoundary._1 : originTextBoundary._0), true);
          _this._setSelectionPosition$2$isEnd(_this._clampTextPosition$1(targetPosition), false);
          t1 = _this._textSelectionEnd.offset;
          t2 = _this._textSelectionStart.offset;
          if (typeof t1 !== "number")
            return t1.$ge();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t3 = boundaryAtPosition._1.offset;
          t4 = _this.range;
          t5 = t4.end;
          if (typeof t3 !== "number")
            return t3.$gt();
          if (typeof t5 !== "number")
            return B.iae(t5);
          if (t3 > t5) {
            t6 = boundaryAtPosition._0.offset;
            if (typeof t6 !== "number")
              return t6.$gt();
            t5 = t6 > t5;
          } else
            t5 = false;
          if (t5)
            return C.SelectionResult_0;
          t4 = t4.start;
          if (typeof t4 !== "number")
            return B.iae(t4);
          if (t3 < t4) {
            t5 = boundaryAtPosition._0.offset;
            if (typeof t5 !== "number")
              return t5.$lt();
            t4 = t5 < t4;
          } else
            t4 = false;
          if (t4)
            return C.SelectionResult_1;
          if (t1 >= t2) {
            t1 = originTextBoundary._1.offset;
            if (typeof t1 !== "number")
              return B.iae(t1);
            if (t3 >= t1)
              return C.SelectionResult_2;
            if (t3 < t1)
              return C.SelectionResult_1;
          } else {
            t1 = boundaryAtPosition._0.offset;
            t2 = originTextBoundary._0.offset;
            if (typeof t1 !== "number")
              return t1.$le();
            if (typeof t2 !== "number")
              return B.iae(t2);
            if (t1 <= t2)
              return C.SelectionResult_2;
            if (t1 > t2)
              return C.SelectionResult_0;
          }
        } else {
          clampedPosition = _this._clampTextPosition$1(position);
          t1 = forwardSelection ? E.TextPosition$(existingSelectionEnd.affinity, t1 - 1) : existingSelectionEnd;
          originTextBoundary = getTextBoundary.call$2(t1, _this.fullText);
          if (forwardSelection && B.boolConversionCheck(J.$eq$(clampedPosition.offset, _this.range.start))) {
            _this._setSelectionPosition$2$isEnd(clampedPosition, false);
            return C.SelectionResult_1;
          }
          t1 = !forwardSelection;
          if (t1 && B.boolConversionCheck(J.$eq$(clampedPosition.offset, _this.range.end))) {
            _this._setSelectionPosition$2$isEnd(clampedPosition, false);
            return C.SelectionResult_0;
          }
          if (forwardSelection && B.boolConversionCheck(J.$eq$(clampedPosition.offset, _this.range.end))) {
            _this._setSelectionPosition$2$isEnd(_this._clampTextPosition$1(originTextBoundary._1), true);
            _this._setSelectionPosition$2$isEnd(clampedPosition, false);
            return C.SelectionResult_0;
          }
          if (t1 && B.boolConversionCheck(J.$eq$(clampedPosition.offset, _this.range.start))) {
            _this._setSelectionPosition$2$isEnd(_this._clampTextPosition$1(originTextBoundary._0), true);
            _this._setSelectionPosition$2$isEnd(clampedPosition, false);
            return C.SelectionResult_1;
          }
        }
      } else {
        t1 = _this.fullText;
        positionOnPlaceholder = J.$eq$(_this.paragraph.getWordBoundary$1(position).textInside$1(t1), $.$get$_SelectableFragment__placeholderCharacter());
        if (!paragraphContainsPosition || positionOnPlaceholder)
          return null;
        if (existingSelectionEnd != null) {
          boundaryAtPosition = getTextBoundary.call$2(position, t1);
          t1 = existingSelectionStart == null;
          backwardSelection = true;
          if (!(t1 && B.boolConversionCheck(J.$eq$(existingSelectionEnd.offset, _this.range.start))))
            if (!(B.boolConversionCheck(J.$eq$(existingSelectionStart, existingSelectionEnd)) && B.boolConversionCheck(J.$eq$(existingSelectionEnd.offset, _this.range.start)))) {
              if (!t1) {
                t1 = existingSelectionStart.offset;
                t2 = existingSelectionEnd.offset;
                if (typeof t1 !== "number")
                  return t1.$gt();
                if (typeof t2 !== "number")
                  return B.iae(t2);
                t2 = t1 > t2;
                t1 = t2;
              } else
                t1 = false;
              backwardSelection = t1;
            }
          t1 = boundaryAtPosition._1;
          t2 = t1.offset;
          t3 = _this.range;
          t4 = t3.start;
          if (typeof t2 !== "number")
            return t2.$lt();
          if (typeof t4 !== "number")
            return B.iae(t4);
          t5 = t2 < t4;
          if (t5) {
            t6 = boundaryAtPosition._0.offset;
            if (typeof t6 !== "number")
              return t6.$lt();
            t6 = t6 < t4;
          } else
            t6 = false;
          if (t6) {
            _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, t4), false);
            return C.SelectionResult_1;
          }
          t3 = t3.end;
          if (typeof t3 !== "number")
            return B.iae(t3);
          if (t2 > t3) {
            t6 = boundaryAtPosition._0.offset;
            if (typeof t6 !== "number")
              return t6.$gt();
            t6 = t6 > t3;
          } else
            t6 = false;
          if (t6) {
            _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, t3), false);
            return C.SelectionResult_0;
          }
          if (backwardSelection) {
            t1 = boundaryAtPosition._0;
            t2 = t1.offset;
            if (typeof t2 !== "number")
              return t2.$le();
            if (t2 <= t3) {
              _this._setSelectionPosition$2$isEnd(_this._clampTextPosition$1(t1), false);
              return C.SelectionResult_2;
            }
            if (t2 > t3) {
              _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, t3), false);
              return C.SelectionResult_0;
            }
          } else {
            _this._setSelectionPosition$2$isEnd(_this._clampTextPosition$1(t1), false);
            if (t5)
              return C.SelectionResult_1;
            if (t2 >= t4)
              return C.SelectionResult_2;
          }
        }
      }
      return null;
    },
    _updateSelectionEndEdgeByMultiSelectableTextBoundary$5(getTextBoundary, paragraphContainsPosition, position, existingSelectionStart, existingSelectionEnd) {
      var t1, t2, forwardSelection, boundaryAtPosition, originTextBoundary, pivotOffset, targetPosition, t3, t4, t5, t6, clampedPosition, positionOnPlaceholder, backwardSelection, _this = this;
      type$.Record_2_TextPosition_boundaryEnd_and_TextPosition_boundaryStart_Function_TextPosition_String._as(getTextBoundary);
      B._asBool(paragraphContainsPosition);
      type$.TextPosition._as(position);
      t1 = type$.nullable_TextPosition;
      t1._as(existingSelectionStart);
      t1._as(existingSelectionEnd);
      if (B.boolConversionCheck(_this._selectableContainsOriginTextBoundary) && existingSelectionStart != null && existingSelectionEnd != null) {
        t1 = existingSelectionEnd.offset;
        t2 = existingSelectionStart.offset;
        if (typeof t1 !== "number")
          return t1.$ge();
        if (typeof t2 !== "number")
          return B.iae(t2);
        forwardSelection = t1 >= t2;
        if (paragraphContainsPosition) {
          t1 = _this.fullText;
          boundaryAtPosition = getTextBoundary.call$2(position, t1);
          originTextBoundary = getTextBoundary.call$2(forwardSelection ? existingSelectionStart : E.TextPosition$(existingSelectionStart.affinity, t2 - 1), t1);
          pivotOffset = forwardSelection ? originTextBoundary._1.offset : originTextBoundary._0.offset;
          t1 = position.offset;
          if (typeof t1 !== "number")
            return t1.$lt();
          t2 = t1 < pivotOffset;
          if (t2)
            targetPosition = boundaryAtPosition._1;
          else if (t1 > pivotOffset)
            targetPosition = boundaryAtPosition._0;
          else
            targetPosition = forwardSelection ? existingSelectionEnd : existingSelectionStart;
          if (!forwardSelection !== t2)
            _this._setSelectionPosition$2$isEnd(_this._clampTextPosition$1(forwardSelection ? originTextBoundary._0 : originTextBoundary._1), false);
          _this._setSelectionPosition$2$isEnd(_this._clampTextPosition$1(targetPosition), true);
          t1 = _this._textSelectionEnd.offset;
          t2 = _this._textSelectionStart.offset;
          if (typeof t1 !== "number")
            return t1.$ge();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t3 = boundaryAtPosition._1.offset;
          t4 = _this.range;
          t5 = t4.end;
          if (typeof t3 !== "number")
            return t3.$gt();
          if (typeof t5 !== "number")
            return B.iae(t5);
          if (t3 > t5) {
            t6 = boundaryAtPosition._0.offset;
            if (typeof t6 !== "number")
              return t6.$gt();
            t5 = t6 > t5;
          } else
            t5 = false;
          if (t5)
            return C.SelectionResult_0;
          t4 = t4.start;
          if (typeof t4 !== "number")
            return B.iae(t4);
          if (t3 < t4) {
            t5 = boundaryAtPosition._0.offset;
            if (typeof t5 !== "number")
              return t5.$lt();
            t4 = t5 < t4;
          } else
            t4 = false;
          if (t4)
            return C.SelectionResult_1;
          if (t1 >= t2) {
            t1 = boundaryAtPosition._0.offset;
            t2 = originTextBoundary._0.offset;
            if (typeof t1 !== "number")
              return t1.$le();
            if (typeof t2 !== "number")
              return B.iae(t2);
            if (t1 <= t2)
              return C.SelectionResult_2;
            if (t1 > t2)
              return C.SelectionResult_0;
          } else {
            t1 = originTextBoundary._1.offset;
            if (typeof t1 !== "number")
              return B.iae(t1);
            if (t3 >= t1)
              return C.SelectionResult_2;
            if (t3 < t1)
              return C.SelectionResult_1;
          }
        } else {
          clampedPosition = _this._clampTextPosition$1(position);
          t1 = forwardSelection ? existingSelectionStart : E.TextPosition$(existingSelectionStart.affinity, t2 - 1);
          originTextBoundary = getTextBoundary.call$2(t1, _this.fullText);
          if (forwardSelection && B.boolConversionCheck(J.$eq$(clampedPosition.offset, _this.range.start))) {
            _this._setSelectionPosition$2$isEnd(_this._clampTextPosition$1(originTextBoundary._0), false);
            _this._setSelectionPosition$2$isEnd(clampedPosition, true);
            return C.SelectionResult_1;
          }
          t1 = !forwardSelection;
          if (t1 && B.boolConversionCheck(J.$eq$(clampedPosition.offset, _this.range.end))) {
            _this._setSelectionPosition$2$isEnd(_this._clampTextPosition$1(originTextBoundary._1), false);
            _this._setSelectionPosition$2$isEnd(clampedPosition, true);
            return C.SelectionResult_0;
          }
          if (forwardSelection && B.boolConversionCheck(J.$eq$(clampedPosition.offset, _this.range.end))) {
            _this._setSelectionPosition$2$isEnd(clampedPosition, true);
            return C.SelectionResult_0;
          }
          if (t1 && B.boolConversionCheck(J.$eq$(clampedPosition.offset, _this.range.start))) {
            _this._setSelectionPosition$2$isEnd(clampedPosition, true);
            return C.SelectionResult_1;
          }
        }
      } else {
        t1 = _this.fullText;
        positionOnPlaceholder = J.$eq$(_this.paragraph.getWordBoundary$1(position).textInside$1(t1), $.$get$_SelectableFragment__placeholderCharacter());
        if (!paragraphContainsPosition || positionOnPlaceholder)
          return null;
        if (existingSelectionStart != null) {
          boundaryAtPosition = getTextBoundary.call$2(position, t1);
          t1 = existingSelectionEnd == null;
          backwardSelection = true;
          if (!(t1 && B.boolConversionCheck(J.$eq$(existingSelectionStart.offset, _this.range.end))))
            if (!(B.boolConversionCheck(existingSelectionStart.$eq(0, existingSelectionEnd)) && B.boolConversionCheck(J.$eq$(existingSelectionStart.offset, _this.range.end)))) {
              if (!t1) {
                t1 = existingSelectionStart.offset;
                t2 = existingSelectionEnd.offset;
                if (typeof t1 !== "number")
                  return t1.$gt();
                if (typeof t2 !== "number")
                  return B.iae(t2);
                t2 = t1 > t2;
                t1 = t2;
              } else
                t1 = false;
              backwardSelection = t1;
            }
          t1 = boundaryAtPosition._1;
          t2 = t1.offset;
          t3 = _this.range;
          t4 = t3.start;
          if (typeof t2 !== "number")
            return t2.$lt();
          if (typeof t4 !== "number")
            return B.iae(t4);
          t5 = t2 < t4;
          if (t5) {
            t6 = boundaryAtPosition._0.offset;
            if (typeof t6 !== "number")
              return t6.$lt();
            t6 = t6 < t4;
          } else
            t6 = false;
          if (t6) {
            _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, t4), true);
            return C.SelectionResult_1;
          }
          t3 = t3.end;
          if (typeof t3 !== "number")
            return B.iae(t3);
          if (t2 > t3) {
            t6 = boundaryAtPosition._0.offset;
            if (typeof t6 !== "number")
              return t6.$gt();
            t6 = t6 > t3;
          } else
            t6 = false;
          if (t6) {
            _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, t3), true);
            return C.SelectionResult_0;
          }
          if (backwardSelection) {
            _this._setSelectionPosition$2$isEnd(_this._clampTextPosition$1(t1), true);
            if (t5)
              return C.SelectionResult_1;
            if (t2 >= t4)
              return C.SelectionResult_2;
          } else {
            t1 = boundaryAtPosition._0;
            t2 = t1.offset;
            if (typeof t2 !== "number")
              return t2.$le();
            if (t2 <= t3) {
              _this._setSelectionPosition$2$isEnd(_this._clampTextPosition$1(t1), true);
              return C.SelectionResult_2;
            }
            if (t2 > t3) {
              _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, t3), true);
              return C.SelectionResult_0;
            }
          }
        }
      }
      return null;
    },
    _updateSelectionStartEdgeAtPlaceholderByMultiSelectableTextBoundary$6(getTextBoundary, globalPosition, paragraphContainsPosition, position, existingSelectionStart, existingSelectionEnd) {
      var t1, t2, forwardSelection, originParagraph, originTransform, originParagraphLocalPosition, positionWithinOriginParagraph, positionRelativeToOriginParagraph, originText, boundaryAtPosition, originTextBoundary, pivotOffset, targetPosition, t3, t4, originParagraphPlaceholderRange, t5, adjustedPositionRelativeToOriginParagraph, targetDetails, targetParagraph, positionRelativeToTargetParagraph, targetText, backwardSelection, boundaryAtPositionRelativeToTargetParagraph, targetParagraphPlaceholderRange, _this = this, _null = null;
      type$.Record_2_TextPosition_boundaryEnd_and_TextPosition_boundaryStart_Function_TextPosition_String._as(getTextBoundary);
      type$.Offset._as(globalPosition);
      B._asBool(paragraphContainsPosition);
      type$.TextPosition._as(position);
      t1 = type$.nullable_TextPosition;
      t1._as(existingSelectionStart);
      t1._as(existingSelectionEnd);
      if (B.boolConversionCheck(_this._selectableContainsOriginTextBoundary) && existingSelectionStart != null && existingSelectionEnd != null) {
        t1 = existingSelectionEnd.offset;
        t2 = existingSelectionStart.offset;
        if (typeof t1 !== "number")
          return t1.$ge();
        if (typeof t2 !== "number")
          return B.iae(t2);
        forwardSelection = t1 >= t2;
        originParagraph = _this._getOriginParagraph$0();
        t2 = _this.paragraph;
        if (originParagraph === t2)
          return _this._updateSelectionStartEdgeByMultiSelectableTextBoundary$5(getTextBoundary, paragraphContainsPosition, position, existingSelectionStart, existingSelectionEnd);
        originTransform = originParagraph.getTransformTo$1(_null);
        originTransform.invert$0();
        originParagraphLocalPosition = E.MatrixUtils_transformPoint(originTransform, globalPosition);
        positionWithinOriginParagraph = J.contains$1$asx(originParagraph.get$paintBounds(), originParagraphLocalPosition);
        positionRelativeToOriginParagraph = originParagraph.getPositionForOffset$1(originParagraphLocalPosition);
        if (positionWithinOriginParagraph) {
          originText = originParagraph.get$text().toPlainText$1$includeSemanticsLabels(false);
          boundaryAtPosition = getTextBoundary.call$2(positionRelativeToOriginParagraph, originText);
          originTextBoundary = getTextBoundary.call$2(_this._getPositionInParagraph$1(originParagraph), originText);
          pivotOffset = forwardSelection ? originTextBoundary._0.offset : originTextBoundary._1.offset;
          t1 = positionRelativeToOriginParagraph.offset;
          if (typeof t1 !== "number")
            return t1.$gt();
          t2 = t1 > pivotOffset;
          if (t1 < pivotOffset)
            targetPosition = boundaryAtPosition._1;
          else
            targetPosition = t2 ? boundaryAtPosition._0 : existingSelectionStart;
          if (!forwardSelection !== t2)
            _this._setSelectionPosition$2$isEnd(existingSelectionStart, true);
          _this._setSelectionPosition$2$isEnd(_this._clampTextPosition$1(targetPosition), false);
          t1 = _this._textSelectionEnd.offset;
          t2 = _this._textSelectionStart.offset;
          if (typeof t1 !== "number")
            return t1.$ge();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t3 = _this._getPositionInParagraph$1(originParagraph).offset;
          t4 = $.$get$_SelectableFragment__placeholderLength();
          if (typeof t3 !== "number")
            return t3.$add();
          if (typeof t4 !== "number")
            return B.iae(t4);
          originParagraphPlaceholderRange = E.TextRange$(t3 + t4, t3);
          t3 = boundaryAtPosition._1.offset;
          t4 = originParagraphPlaceholderRange.end;
          if (typeof t3 !== "number")
            return t3.$gt();
          if (typeof t4 !== "number")
            return B.iae(t4);
          if (t3 > t4) {
            t5 = boundaryAtPosition._0.offset;
            if (typeof t5 !== "number")
              return t5.$gt();
            t4 = t5 > t4;
          } else
            t4 = false;
          if (t4)
            return C.SelectionResult_0;
          t4 = originParagraphPlaceholderRange.start;
          if (typeof t4 !== "number")
            return B.iae(t4);
          if (t3 < t4) {
            t5 = boundaryAtPosition._0.offset;
            if (typeof t5 !== "number")
              return t5.$lt();
            t4 = t5 < t4;
          } else
            t4 = false;
          if (t4)
            return C.SelectionResult_1;
          if (t1 >= t2) {
            t1 = boundaryAtPosition._0.offset;
            t2 = originTextBoundary._0.offset;
            if (typeof t1 !== "number")
              return t1.$le();
            if (typeof t2 !== "number")
              return B.iae(t2);
            if (t1 <= t2)
              return C.SelectionResult_2;
            if (t1 > t2)
              return C.SelectionResult_0;
          } else {
            t1 = originTextBoundary._1.offset;
            if (typeof t1 !== "number")
              return B.iae(t1);
            if (t3 >= t1)
              return C.SelectionResult_2;
            if (t3 < t1)
              return C.SelectionResult_1;
          }
        } else {
          adjustedPositionRelativeToOriginParagraph = originParagraph.getPositionForOffset$1(A.SelectionUtils_adjustDragOffset(originParagraph.get$paintBounds(), originParagraphLocalPosition, t2.get$textDirection()));
          t1 = _this._getPositionInParagraph$1(originParagraph).offset;
          t2 = $.$get$_SelectableFragment__placeholderLength();
          if (typeof t1 !== "number")
            return t1.$add();
          if (typeof t2 !== "number")
            return B.iae(t2);
          originParagraphPlaceholderRange = E.TextRange$(t1 + t2, t1);
          if (forwardSelection) {
            t1 = adjustedPositionRelativeToOriginParagraph.offset;
            t2 = originParagraphPlaceholderRange.start;
            if (typeof t1 !== "number")
              return t1.$le();
            if (typeof t2 !== "number")
              return B.iae(t2);
            t2 = t1 <= t2;
            t1 = t2;
          } else
            t1 = false;
          if (t1) {
            _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, _this.range.start), false);
            return C.SelectionResult_1;
          }
          t1 = !forwardSelection;
          if (t1) {
            t2 = adjustedPositionRelativeToOriginParagraph.offset;
            t3 = originParagraphPlaceholderRange.end;
            if (typeof t2 !== "number")
              return t2.$ge();
            if (typeof t3 !== "number")
              return B.iae(t3);
            t3 = t2 >= t3;
            t2 = t3;
          } else
            t2 = false;
          if (t2) {
            _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, _this.range.end), false);
            return C.SelectionResult_0;
          }
          if (forwardSelection) {
            t2 = adjustedPositionRelativeToOriginParagraph.offset;
            t3 = originParagraphPlaceholderRange.end;
            if (typeof t2 !== "number")
              return t2.$ge();
            if (typeof t3 !== "number")
              return B.iae(t3);
            t3 = t2 >= t3;
            t2 = t3;
          } else
            t2 = false;
          if (t2) {
            _this._setSelectionPosition$2$isEnd(existingSelectionStart, true);
            _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, _this.range.end), false);
            return C.SelectionResult_0;
          }
          if (t1) {
            t1 = adjustedPositionRelativeToOriginParagraph.offset;
            t2 = originParagraphPlaceholderRange.start;
            if (typeof t1 !== "number")
              return t1.$le();
            if (typeof t2 !== "number")
              return B.iae(t2);
            t2 = t1 <= t2;
            t1 = t2;
          } else
            t1 = false;
          if (t1) {
            _this._setSelectionPosition$2$isEnd(existingSelectionStart, true);
            _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, _this.range.start), false);
            return C.SelectionResult_1;
          }
        }
      } else {
        if (paragraphContainsPosition)
          return _this._updateSelectionStartEdgeByMultiSelectableTextBoundary$5(getTextBoundary, true, position, existingSelectionStart, existingSelectionEnd);
        if (existingSelectionEnd != null) {
          targetDetails = _this._getParagraphContainingPosition$1(globalPosition);
          if (targetDetails == null)
            return _null;
          targetParagraph = targetDetails._1;
          positionRelativeToTargetParagraph = targetParagraph.getPositionForOffset$1(targetDetails._0);
          targetText = targetParagraph.get$text().toPlainText$1$includeSemanticsLabels(false);
          if (J.$eq$(targetParagraph.getWordBoundary$1(positionRelativeToTargetParagraph).textInside$1(targetText), $.$get$_SelectableFragment__placeholderCharacter()))
            return _null;
          t1 = existingSelectionStart == null;
          backwardSelection = true;
          if (!(t1 && B.boolConversionCheck(J.$eq$(existingSelectionEnd.offset, _this.range.start))))
            if (!(B.boolConversionCheck(J.$eq$(existingSelectionStart, existingSelectionEnd)) && B.boolConversionCheck(J.$eq$(existingSelectionEnd.offset, _this.range.start)))) {
              if (!t1) {
                t1 = existingSelectionStart.offset;
                t2 = existingSelectionEnd.offset;
                if (typeof t1 !== "number")
                  return t1.$gt();
                if (typeof t2 !== "number")
                  return B.iae(t2);
                t2 = t1 > t2;
                t1 = t2;
              } else
                t1 = false;
              backwardSelection = t1;
            }
          boundaryAtPositionRelativeToTargetParagraph = getTextBoundary.call$2(positionRelativeToTargetParagraph, targetText);
          t1 = _this._getPositionInParagraph$1(targetParagraph).offset;
          t2 = $.$get$_SelectableFragment__placeholderLength();
          if (typeof t1 !== "number")
            return t1.$add();
          if (typeof t2 !== "number")
            return B.iae(t2);
          targetParagraphPlaceholderRange = E.TextRange$(t1 + t2, t1);
          t1 = boundaryAtPositionRelativeToTargetParagraph._1.offset;
          t2 = targetParagraphPlaceholderRange.start;
          if (typeof t1 !== "number")
            return t1.$lt();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t3 = t1 < t2;
          if (t3) {
            t4 = boundaryAtPositionRelativeToTargetParagraph._0.offset;
            if (typeof t4 !== "number")
              return t4.$lt();
            t4 = t4 < t2;
          } else
            t4 = false;
          if (t4) {
            _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, _this.range.start), false);
            return C.SelectionResult_1;
          }
          t4 = targetParagraphPlaceholderRange.end;
          if (typeof t4 !== "number")
            return B.iae(t4);
          if (t1 > t4) {
            t5 = boundaryAtPositionRelativeToTargetParagraph._0.offset;
            if (typeof t5 !== "number")
              return t5.$gt();
            t5 = t5 > t4;
          } else
            t5 = false;
          if (t5) {
            _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, _this.range.end), false);
            return C.SelectionResult_0;
          }
          if (backwardSelection) {
            t1 = boundaryAtPositionRelativeToTargetParagraph._0.offset;
            if (typeof t1 !== "number")
              return t1.$le();
            if (t1 <= t4) {
              _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, _this.range.end), false);
              return C.SelectionResult_2;
            }
            if (t1 > t4) {
              _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, _this.range.end), false);
              return C.SelectionResult_0;
            }
          } else {
            if (t1 >= t2) {
              _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, _this.range.start), false);
              return C.SelectionResult_2;
            }
            if (t3) {
              _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, _this.range.start), false);
              return C.SelectionResult_1;
            }
          }
        }
      }
      return _null;
    },
    _updateSelectionEndEdgeAtPlaceholderByMultiSelectableTextBoundary$6(getTextBoundary, globalPosition, paragraphContainsPosition, position, existingSelectionStart, existingSelectionEnd) {
      var t1, t2, forwardSelection, originParagraph, originTransform, originParagraphLocalPosition, positionWithinOriginParagraph, positionRelativeToOriginParagraph, originText, boundaryAtPosition, originTextBoundary, pivotOffset, targetPosition, t3, t4, originParagraphPlaceholderRange, t5, adjustedPositionRelativeToOriginParagraph, targetDetails, targetParagraph, positionRelativeToTargetParagraph, targetText, backwardSelection, boundaryAtPositionRelativeToTargetParagraph, targetParagraphPlaceholderRange, _this = this, _null = null;
      type$.Record_2_TextPosition_boundaryEnd_and_TextPosition_boundaryStart_Function_TextPosition_String._as(getTextBoundary);
      type$.Offset._as(globalPosition);
      B._asBool(paragraphContainsPosition);
      type$.TextPosition._as(position);
      t1 = type$.nullable_TextPosition;
      t1._as(existingSelectionStart);
      t1._as(existingSelectionEnd);
      if (B.boolConversionCheck(_this._selectableContainsOriginTextBoundary) && existingSelectionStart != null && existingSelectionEnd != null) {
        t1 = existingSelectionEnd.offset;
        t2 = existingSelectionStart.offset;
        if (typeof t1 !== "number")
          return t1.$ge();
        if (typeof t2 !== "number")
          return B.iae(t2);
        forwardSelection = t1 >= t2;
        originParagraph = _this._getOriginParagraph$0();
        t2 = _this.paragraph;
        if (originParagraph === t2)
          return _this._updateSelectionEndEdgeByMultiSelectableTextBoundary$5(getTextBoundary, paragraphContainsPosition, position, existingSelectionStart, existingSelectionEnd);
        originTransform = originParagraph.getTransformTo$1(_null);
        originTransform.invert$0();
        originParagraphLocalPosition = E.MatrixUtils_transformPoint(originTransform, globalPosition);
        positionWithinOriginParagraph = J.contains$1$asx(originParagraph.get$paintBounds(), originParagraphLocalPosition);
        positionRelativeToOriginParagraph = originParagraph.getPositionForOffset$1(originParagraphLocalPosition);
        if (positionWithinOriginParagraph) {
          originText = originParagraph.get$text().toPlainText$1$includeSemanticsLabels(false);
          boundaryAtPosition = getTextBoundary.call$2(positionRelativeToOriginParagraph, originText);
          originTextBoundary = getTextBoundary.call$2(_this._getPositionInParagraph$1(originParagraph), originText);
          pivotOffset = forwardSelection ? originTextBoundary._1.offset : originTextBoundary._0.offset;
          t1 = positionRelativeToOriginParagraph.offset;
          if (typeof t1 !== "number")
            return t1.$lt();
          t2 = t1 < pivotOffset;
          if (t2)
            targetPosition = boundaryAtPosition._1;
          else
            targetPosition = t1 > pivotOffset ? boundaryAtPosition._0 : existingSelectionEnd;
          if (!forwardSelection !== t2)
            _this._setSelectionPosition$2$isEnd(existingSelectionEnd, false);
          _this._setSelectionPosition$2$isEnd(_this._clampTextPosition$1(targetPosition), true);
          t1 = _this._textSelectionEnd.offset;
          t2 = _this._textSelectionStart.offset;
          if (typeof t1 !== "number")
            return t1.$ge();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t3 = _this._getPositionInParagraph$1(originParagraph).offset;
          t4 = $.$get$_SelectableFragment__placeholderLength();
          if (typeof t3 !== "number")
            return t3.$add();
          if (typeof t4 !== "number")
            return B.iae(t4);
          originParagraphPlaceholderRange = E.TextRange$(t3 + t4, t3);
          t3 = boundaryAtPosition._1.offset;
          t4 = originParagraphPlaceholderRange.end;
          if (typeof t3 !== "number")
            return t3.$gt();
          if (typeof t4 !== "number")
            return B.iae(t4);
          if (t3 > t4) {
            t5 = boundaryAtPosition._0.offset;
            if (typeof t5 !== "number")
              return t5.$gt();
            t4 = t5 > t4;
          } else
            t4 = false;
          if (t4)
            return C.SelectionResult_0;
          t4 = originParagraphPlaceholderRange.start;
          if (typeof t4 !== "number")
            return B.iae(t4);
          if (t3 < t4) {
            t5 = boundaryAtPosition._0.offset;
            if (typeof t5 !== "number")
              return t5.$lt();
            t4 = t5 < t4;
          } else
            t4 = false;
          if (t4)
            return C.SelectionResult_1;
          if (t1 >= t2) {
            t1 = boundaryAtPosition._0.offset;
            t2 = originTextBoundary._0.offset;
            if (typeof t1 !== "number")
              return t1.$le();
            if (typeof t2 !== "number")
              return B.iae(t2);
            if (t1 <= t2)
              return C.SelectionResult_2;
            if (t1 > t2)
              return C.SelectionResult_0;
          } else {
            t1 = originTextBoundary._1.offset;
            if (typeof t1 !== "number")
              return B.iae(t1);
            if (t3 >= t1)
              return C.SelectionResult_2;
            if (t3 < t1)
              return C.SelectionResult_1;
          }
        } else {
          adjustedPositionRelativeToOriginParagraph = originParagraph.getPositionForOffset$1(A.SelectionUtils_adjustDragOffset(originParagraph.get$paintBounds(), originParagraphLocalPosition, t2.get$textDirection()));
          t1 = _this._getPositionInParagraph$1(originParagraph).offset;
          t2 = $.$get$_SelectableFragment__placeholderLength();
          if (typeof t1 !== "number")
            return t1.$add();
          if (typeof t2 !== "number")
            return B.iae(t2);
          originParagraphPlaceholderRange = E.TextRange$(t1 + t2, t1);
          if (forwardSelection) {
            t1 = adjustedPositionRelativeToOriginParagraph.offset;
            t2 = originParagraphPlaceholderRange.start;
            if (typeof t1 !== "number")
              return t1.$le();
            if (typeof t2 !== "number")
              return B.iae(t2);
            t2 = t1 <= t2;
            t1 = t2;
          } else
            t1 = false;
          if (t1) {
            _this._setSelectionPosition$2$isEnd(existingSelectionEnd, false);
            _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, _this.range.start), true);
            return C.SelectionResult_1;
          }
          t1 = !forwardSelection;
          if (t1) {
            t2 = adjustedPositionRelativeToOriginParagraph.offset;
            t3 = originParagraphPlaceholderRange.end;
            if (typeof t2 !== "number")
              return t2.$ge();
            if (typeof t3 !== "number")
              return B.iae(t3);
            t3 = t2 >= t3;
            t2 = t3;
          } else
            t2 = false;
          if (t2) {
            _this._setSelectionPosition$2$isEnd(existingSelectionEnd, false);
            _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, _this.range.end), true);
            return C.SelectionResult_0;
          }
          if (forwardSelection) {
            t2 = adjustedPositionRelativeToOriginParagraph.offset;
            t3 = originParagraphPlaceholderRange.end;
            if (typeof t2 !== "number")
              return t2.$ge();
            if (typeof t3 !== "number")
              return B.iae(t3);
            t3 = t2 >= t3;
            t2 = t3;
          } else
            t2 = false;
          if (t2) {
            _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, _this.range.end), true);
            return C.SelectionResult_0;
          }
          if (t1) {
            t1 = adjustedPositionRelativeToOriginParagraph.offset;
            t2 = originParagraphPlaceholderRange.start;
            if (typeof t1 !== "number")
              return t1.$le();
            if (typeof t2 !== "number")
              return B.iae(t2);
            t2 = t1 <= t2;
            t1 = t2;
          } else
            t1 = false;
          if (t1) {
            _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, _this.range.start), true);
            return C.SelectionResult_1;
          }
        }
      } else {
        if (paragraphContainsPosition)
          return _this._updateSelectionEndEdgeByMultiSelectableTextBoundary$5(getTextBoundary, true, position, existingSelectionStart, existingSelectionEnd);
        if (existingSelectionStart != null) {
          targetDetails = _this._getParagraphContainingPosition$1(globalPosition);
          if (targetDetails == null)
            return _null;
          targetParagraph = targetDetails._1;
          positionRelativeToTargetParagraph = targetParagraph.getPositionForOffset$1(targetDetails._0);
          targetText = targetParagraph.get$text().toPlainText$1$includeSemanticsLabels(false);
          if (J.$eq$(targetParagraph.getWordBoundary$1(positionRelativeToTargetParagraph).textInside$1(targetText), $.$get$_SelectableFragment__placeholderCharacter()))
            return _null;
          t1 = existingSelectionEnd == null;
          backwardSelection = true;
          if (!(t1 && B.boolConversionCheck(J.$eq$(existingSelectionStart.offset, _this.range.end))))
            if (!(B.boolConversionCheck(existingSelectionStart.$eq(0, existingSelectionEnd)) && B.boolConversionCheck(J.$eq$(existingSelectionStart.offset, _this.range.end)))) {
              if (!t1) {
                t1 = existingSelectionStart.offset;
                t2 = existingSelectionEnd.offset;
                if (typeof t1 !== "number")
                  return t1.$gt();
                if (typeof t2 !== "number")
                  return B.iae(t2);
                t2 = t1 > t2;
                t1 = t2;
              } else
                t1 = false;
              backwardSelection = t1;
            }
          boundaryAtPositionRelativeToTargetParagraph = getTextBoundary.call$2(positionRelativeToTargetParagraph, targetText);
          t1 = _this._getPositionInParagraph$1(targetParagraph).offset;
          t2 = $.$get$_SelectableFragment__placeholderLength();
          if (typeof t1 !== "number")
            return t1.$add();
          if (typeof t2 !== "number")
            return B.iae(t2);
          targetParagraphPlaceholderRange = E.TextRange$(t1 + t2, t1);
          t1 = boundaryAtPositionRelativeToTargetParagraph._1.offset;
          t2 = targetParagraphPlaceholderRange.start;
          if (typeof t1 !== "number")
            return t1.$lt();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t3 = t1 < t2;
          if (t3) {
            t4 = boundaryAtPositionRelativeToTargetParagraph._0.offset;
            if (typeof t4 !== "number")
              return t4.$lt();
            t4 = t4 < t2;
          } else
            t4 = false;
          if (t4) {
            _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, _this.range.start), true);
            return C.SelectionResult_1;
          }
          t4 = targetParagraphPlaceholderRange.end;
          if (typeof t4 !== "number")
            return B.iae(t4);
          if (t1 > t4) {
            t5 = boundaryAtPositionRelativeToTargetParagraph._0.offset;
            if (typeof t5 !== "number")
              return t5.$gt();
            t5 = t5 > t4;
          } else
            t5 = false;
          if (t5) {
            _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, _this.range.end), true);
            return C.SelectionResult_0;
          }
          if (backwardSelection) {
            if (t1 >= t2) {
              _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, _this.range.start), true);
              return C.SelectionResult_2;
            }
            if (t3) {
              _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, _this.range.start), true);
              return C.SelectionResult_1;
            }
          } else {
            t1 = boundaryAtPositionRelativeToTargetParagraph._0.offset;
            if (typeof t1 !== "number")
              return t1.$le();
            if (t1 <= t4) {
              _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, _this.range.end), true);
              return C.SelectionResult_2;
            }
            if (t1 > t4) {
              _this._setSelectionPosition$2$isEnd(E.TextPosition$(D.TextAffinity_1, _this.range.end), true);
              return C.SelectionResult_0;
            }
          }
        }
      }
      return _null;
    },
    _updateSelectionEdgeByMultiSelectableTextBoundary$4$getClampedTextBoundary$getTextBoundary$isEnd(globalPosition, getClampedTextBoundary, getTextBoundary, isEnd) {
      var existingSelectionStart, existingSelectionEnd, t1, transform, localPosition, adjustedOffset, adjustedOffsetRelativeToParagraph, position, positionInFullText, result, textBoundary, t2, t3, t4, t5, targetPosition, _this = this, _null = null;
      type$.Offset._as(globalPosition);
      B._asBool(isEnd);
      type$.Record_2_TextPosition_boundaryEnd_and_TextPosition_boundaryStart_Function_TextPosition_String._as(getTextBoundary);
      type$.Record_2_TextPosition_boundaryEnd_and_TextPosition_boundaryStart_Function_TextPosition._as(getClampedTextBoundary);
      existingSelectionStart = _this._textSelectionStart;
      existingSelectionEnd = _this._textSelectionEnd;
      _this._setSelectionPosition$2$isEnd(_null, isEnd);
      t1 = _this.paragraph;
      transform = t1.getTransformTo$1(_null);
      transform.invert$0();
      localPosition = E.MatrixUtils_transformPoint(transform, globalPosition);
      if (B.boolConversionCheck(J.get$isEmpty$asx(_this.get$_paragraph$_rect())))
        return A.SelectionUtils_getResultBasedOnRect(_this.get$_paragraph$_rect(), localPosition);
      adjustedOffset = A.SelectionUtils_adjustDragOffset(_this.get$_paragraph$_rect(), localPosition, t1.get$textDirection());
      adjustedOffsetRelativeToParagraph = A.SelectionUtils_adjustDragOffset(t1.get$paintBounds(), localPosition, t1.get$textDirection());
      position = t1.getPositionForOffset$1(adjustedOffset);
      positionInFullText = t1.getPositionForOffset$1(adjustedOffsetRelativeToParagraph);
      if (B.boolConversionCheck(_this._isPlaceholder$0()))
        result = isEnd ? _this._updateSelectionEndEdgeAtPlaceholderByMultiSelectableTextBoundary$6(getTextBoundary, globalPosition, J.contains$1$asx(t1.get$paintBounds(), localPosition), positionInFullText, existingSelectionStart, existingSelectionEnd) : _this._updateSelectionStartEdgeAtPlaceholderByMultiSelectableTextBoundary$6(getTextBoundary, globalPosition, J.contains$1$asx(t1.get$paintBounds(), localPosition), positionInFullText, existingSelectionStart, existingSelectionEnd);
      else
        result = isEnd ? _this._updateSelectionEndEdgeByMultiSelectableTextBoundary$5(getTextBoundary, J.contains$1$asx(t1.get$paintBounds(), localPosition), positionInFullText, existingSelectionStart, existingSelectionEnd) : _this._updateSelectionStartEdgeByMultiSelectableTextBoundary$5(getTextBoundary, J.contains$1$asx(t1.get$paintBounds(), localPosition), positionInFullText, existingSelectionStart, existingSelectionEnd);
      if (result != null)
        return result;
      textBoundary = B.boolConversionCheck(_this._boundingBoxesContains$1(localPosition)) ? getClampedTextBoundary.call$1(position) : _null;
      t1 = false;
      if (textBoundary != null) {
        t2 = textBoundary._1.offset;
        t3 = _this.range;
        t4 = t3.start;
        if (typeof t2 !== "number")
          return t2.$lt();
        if (typeof t4 !== "number")
          return B.iae(t4);
        if (t2 < t4) {
          t5 = textBoundary._0.offset;
          if (typeof t5 !== "number")
            return t5.$le();
          t4 = t5 <= t4;
        } else
          t4 = false;
        if (!t4) {
          t3 = t3.end;
          if (typeof t3 !== "number")
            return B.iae(t3);
          if (t2 >= t3) {
            t1 = textBoundary._0.offset;
            if (typeof t1 !== "number")
              return t1.$gt();
            t3 = t1 > t3;
            t1 = t3;
          }
        } else
          t1 = true;
      }
      if (t1)
        textBoundary = _null;
      targetPosition = _this._clampTextPosition$1(isEnd ? _this._updateSelectionEndEdgeByTextBoundary$5(textBoundary, getClampedTextBoundary, position, existingSelectionStart, existingSelectionEnd) : _this._updateSelectionStartEdgeByTextBoundary$5(textBoundary, getClampedTextBoundary, position, existingSelectionStart, existingSelectionEnd));
      _this._setSelectionPosition$2$isEnd(targetPosition, isEnd);
      t1 = targetPosition.offset;
      t2 = _this.range;
      t3 = J.getInterceptor$(t1);
      if (B.boolConversionCheck(t3.$eq(t1, t2.end)))
        return C.SelectionResult_0;
      if (B.boolConversionCheck(t3.$eq(t1, t2.start)))
        return C.SelectionResult_1;
      return A.SelectionUtils_getResultBasedOnRect(_this.get$_paragraph$_rect(), localPosition);
    },
    _closestTextBoundary$2(textBoundary, position) {
      var t1, t2, t3, t4, t5;
      type$.Record_2_TextPosition_boundaryEnd_and_TextPosition_boundaryStart._as(textBoundary);
      t1 = type$.TextPosition._as(position).offset;
      t2 = textBoundary._1;
      t3 = t2.offset;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t3 !== "number")
        return B.iae(t3);
      t4 = textBoundary._0;
      t5 = t4.offset;
      if (typeof t5 !== "number")
        return B.iae(t5);
      return Math.abs(t1 - t3) < Math.abs(t1 - t5) ? t2 : t4;
    },
    _isPlaceholder$0() {
      var current = this.paragraph.get$parent();
      for (; current != null;) {
        if (current instanceof A.RenderParagraph)
          return true;
        current = current.get$parent();
      }
      return false;
    },
    _getOriginParagraph$0() {
      var originParagraph, t2, paragraphContainsOriginTextBoundary,
        t1 = this.paragraph,
        current = t1.get$parent();
      for (originParagraph = null; current != null;) {
        if (current instanceof A.RenderParagraph) {
          t2 = current._lastSelectableFragments;
          if (t2 != null) {
            t2 = J.get$iterator$ax(t2);
            while (true) {
              if (!B.boolConversionCheck(t2.moveNext$0())) {
                paragraphContainsOriginTextBoundary = false;
                break;
              }
              if (B.boolConversionCheck(t2.get$current()._selectableContainsOriginTextBoundary)) {
                originParagraph = current;
                paragraphContainsOriginTextBoundary = true;
                break;
              }
            }
            if (!paragraphContainsOriginTextBoundary)
              return originParagraph == null ? t1 : originParagraph;
          }
        }
        current = current.get$parent();
      }
      return originParagraph == null ? t1 : originParagraph;
    },
    _getParagraphContainingPosition$1(globalPosition) {
      var current, currentTransform, currentParagraphLocalPosition;
      type$.Offset._as(globalPosition);
      current = this.paragraph;
      for (; current != null;) {
        if (current instanceof A.RenderParagraph) {
          currentTransform = current.getTransformTo$1(null);
          currentTransform.invert$0();
          currentParagraphLocalPosition = E.MatrixUtils_transformPoint(currentTransform, globalPosition);
          if (J.contains$1$asx(current.get$paintBounds(), currentParagraphLocalPosition))
            return new B._Record_2_localPosition_paragraph(currentParagraphLocalPosition, current);
        }
        current = current.get$parent();
      }
      return null;
    },
    _boundingBoxesContains$1(position) {
      var t1;
      type$.Offset._as(position);
      for (t1 = J.get$iterator$ax(this.get$boundingBoxes()); B.boolConversionCheck(t1.moveNext$0());)
        if (B.boolConversionCheck(t1.get$current().contains$1(0, position)))
          return true;
      return false;
    },
    _clampTextPosition$1(position) {
      var t1, t2, t3, t4;
      type$.TextPosition._as(position);
      t1 = position.offset;
      t2 = this.range;
      t3 = t2.end;
      if (typeof t1 !== "number")
        return t1.$gt();
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (!(t1 > t3))
        t4 = t1 === t3 && B.boolConversionCheck(J.$eq$(position.affinity, D.TextAffinity_1));
      else
        t4 = true;
      if (t4)
        return E.TextPosition$(D.TextAffinity_0, t3);
      t2 = t2.start;
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (t1 < t2)
        return E.TextPosition$(D.TextAffinity_1, t2);
      return position;
    },
    _setSelectionPosition$2$isEnd(position, isEnd) {
      type$.nullable_TextPosition._as(position);
      if (B._asBool(isEnd))
        this._textSelectionEnd = position;
      else
        this._textSelectionStart = position;
    },
    _handleClearSelection$0() {
      this._textSelectionEnd = this._textSelectionStart = null;
      this._selectableContainsOriginTextBoundary = false;
      return C.SelectionResult_4;
    },
    _handleSelectAll$0() {
      var t1 = this.range;
      this._textSelectionStart = E.TextPosition$(D.TextAffinity_1, t1.start);
      this._textSelectionEnd = E.TextPosition$(D.TextAffinity_0, t1.end);
      return C.SelectionResult_4;
    },
    _handleSelectTextBoundary$1(textBoundary) {
      var t1, t2, t3, t4, t5, _this = this;
      type$.Record_2_TextPosition_boundaryEnd_and_TextPosition_boundaryStart._as(textBoundary);
      t1 = textBoundary._1;
      t2 = t1.offset;
      t3 = _this.range;
      t4 = t3.start;
      if (typeof t2 !== "number")
        return t2.$lt();
      if (typeof t4 !== "number")
        return B.iae(t4);
      if (t2 < t4) {
        t5 = textBoundary._0.offset;
        if (typeof t5 !== "number")
          return t5.$le();
        t4 = t5 <= t4;
      } else
        t4 = false;
      if (t4)
        return C.SelectionResult_1;
      else {
        t3 = t3.end;
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (t2 >= t3) {
          t2 = textBoundary._0.offset;
          if (typeof t2 !== "number")
            return t2.$gt();
          t3 = t2 > t3;
          t2 = t3;
        } else
          t2 = false;
        if (t2)
          return C.SelectionResult_0;
      }
      _this.set$_textSelectionStart(t1);
      _this.set$_textSelectionEnd(textBoundary._0);
      _this._selectableContainsOriginTextBoundary = true;
      return C.SelectionResult_2;
    },
    _paragraph$_intersect$2(a, b) {
      var startMax, endMin,
        t1 = type$.TextRange;
      t1._as(a);
      t1._as(b);
      t1 = type$.int;
      startMax = E.max(a.start, b.start, t1);
      endMin = E.min(a.end, b.end, t1);
      if (startMax <= endMin)
        return E.TextRange$(endMin, startMax);
      return null;
    },
    _handleSelectMultiFragmentTextBoundary$1(textBoundary) {
      var t1, t2, t3, t4, intersectRange, _this = this;
      type$.Record_2_TextPosition_boundaryEnd_and_TextPosition_boundaryStart._as(textBoundary);
      t1 = textBoundary._1.offset;
      t2 = _this.range;
      t3 = t2.start;
      if (typeof t1 !== "number")
        return t1.$lt();
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (t1 < t3) {
        t4 = textBoundary._0.offset;
        if (typeof t4 !== "number")
          return t4.$le();
        t3 = t4 <= t3;
      } else
        t3 = false;
      if (t3)
        return C.SelectionResult_1;
      else {
        t3 = t2.end;
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (t1 >= t3) {
          t4 = textBoundary._0.offset;
          if (typeof t4 !== "number")
            return t4.$gt();
          t4 = t4 > t3;
        } else
          t4 = false;
        if (t4)
          return C.SelectionResult_0;
      }
      t4 = textBoundary._0.offset;
      intersectRange = _this._paragraph$_intersect$2(t2, E.TextRange$(t4, t1));
      if (intersectRange != null) {
        _this._textSelectionStart = E.TextPosition$(D.TextAffinity_1, intersectRange.start);
        _this._textSelectionEnd = E.TextPosition$(D.TextAffinity_1, intersectRange.end);
        _this._selectableContainsOriginTextBoundary = true;
        if (typeof t4 !== "number")
          return B.iae(t4);
        if (t3 < t4)
          return C.SelectionResult_0;
        return C.SelectionResult_2;
      }
      return C.SelectionResult_4;
    },
    _adjustTextBoundaryAtPosition$2(textBoundary, position) {
      var t1, start, end, t2, t3;
      type$.TextRange._as(textBoundary);
      t1 = type$.TextPosition;
      t1._as(position);
      start = B._Cell$named("start");
      end = B._Cell$named("end");
      t2 = position.offset;
      t3 = textBoundary.end;
      if (typeof t2 !== "number")
        return t2.$gt();
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (t2 > t3) {
        t2 = E.TextPosition$(D.TextAffinity_1, t2);
        end.set$finalLocalValue(t2);
        start.set$finalLocalValue(t2);
      } else {
        start.set$finalLocalValue(E.TextPosition$(D.TextAffinity_1, textBoundary.start));
        end.set$finalLocalValue(E.TextPosition$(D.TextAffinity_0, t3));
      }
      t2 = start.readLocal$1$0(t1);
      return new B._Record_2_boundaryEnd_boundaryStart(end.readLocal$1$0(t1), t2);
    },
    _handleSelectWord$1(globalPosition) {
      var _this = this,
        t1 = _this.paragraph,
        position = t1.getPositionForOffset$1(t1.globalToLocal$1(type$.Offset._as(globalPosition)));
      if (B.boolConversionCheck(_this._positionIsWithinCurrentSelection$1(position)) && !B.boolConversionCheck(J.$eq$(_this._textSelectionStart, _this._textSelectionEnd)))
        return C.SelectionResult_2;
      return _this._handleSelectTextBoundary$1(_this._getWordBoundaryAtPosition$1(position));
    },
    _getWordBoundaryAtPosition$1(position) {
      type$.TextPosition._as(position);
      return this._adjustTextBoundaryAtPosition$2(this.paragraph.getWordBoundary$1(position), position);
    },
    _paragraph$_handleSelectParagraph$1(globalPosition) {
      var _this = this,
        t1 = _this.paragraph;
      return _this._handleSelectMultiFragmentTextBoundary$1(_this._getParagraphBoundaryAtPosition$2(t1.getPositionForOffset$1(t1.globalToLocal$1(type$.Offset._as(globalPosition))), _this.fullText));
    },
    _getPositionInParagraph$1(targetParagraph) {
      var t1;
      type$.RenderParagraph._as(targetParagraph);
      t1 = this.paragraph;
      return targetParagraph.getPositionForOffset$1(E.MatrixUtils_transformPoint(t1.getTransformTo$1(targetParagraph), t1.get$paintBounds().get$centerLeft()));
    },
    _getParagraphBoundaryAtPosition$2(position, text) {
      var paragraphBoundary, t1, paragraphEnd, t2, paragraphStart, paragraphEnd0;
      type$.TextPosition._as(position);
      B._asString(text);
      paragraphBoundary = A.ParagraphBoundary$(text);
      t1 = position.offset;
      paragraphEnd = text.length;
      if (B.boolConversionCheck(J.$eq$(t1, paragraphEnd)) || B.boolConversionCheck(J.$eq$(position.affinity, D.TextAffinity_0))) {
        if (typeof t1 !== "number")
          return t1.$sub();
        t2 = t1 - 1;
      } else
        t2 = t1;
      paragraphStart = paragraphBoundary.getLeadingTextBoundaryAt$1(t2);
      if (paragraphStart == null)
        paragraphStart = 0;
      paragraphEnd0 = paragraphBoundary.getTrailingTextBoundaryAt$1(t1);
      return this._adjustTextBoundaryAtPosition$2(E.TextRange$(paragraphEnd0 == null ? paragraphEnd : paragraphEnd0, paragraphStart), position);
    },
    _getClampedParagraphBoundaryAtPosition$1(position) {
      var t1, paragraphBoundary, t2, t3, t4, paragraphStart, paragraphEnd;
      type$.TextPosition._as(position);
      t1 = this.fullText;
      paragraphBoundary = A.ParagraphBoundary$(t1);
      t2 = position.offset;
      t3 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(J.$eq$(t2, t3.get$length(t1))) || B.boolConversionCheck(J.$eq$(position.affinity, D.TextAffinity_0))) {
        if (typeof t2 !== "number")
          return t2.$sub();
        t4 = t2 - 1;
      } else
        t4 = t2;
      paragraphStart = paragraphBoundary.getLeadingTextBoundaryAt$1(t4);
      if (paragraphStart == null)
        paragraphStart = 0;
      paragraphEnd = paragraphBoundary.getTrailingTextBoundaryAt$1(t2);
      if (paragraphEnd == null)
        paragraphEnd = t3.get$length(t1);
      t1 = this.range;
      t2 = t1.start;
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (paragraphStart < t2)
        paragraphStart = t2;
      else {
        t3 = t1.end;
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (paragraphStart > t3)
          paragraphStart = t3;
      }
      t1 = t1.end;
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (paragraphEnd > t1)
        paragraphEnd = t1;
      else if (paragraphEnd < t2)
        paragraphEnd = t2;
      return this._adjustTextBoundaryAtPosition$2(E.TextRange$(paragraphEnd, paragraphStart), position);
    },
    _handleDirectionallyExtendSelection$3(horizontalBaseline, isExtent, movement) {
      var t1, transform, baselineInParagraphCoordinates, targetedEdge, moveResult, newPosition, result, t2, t3, _this = this;
      B._asDouble(horizontalBaseline);
      B._asBool(isExtent);
      type$.SelectionExtendDirection._as(movement);
      t1 = _this.paragraph;
      transform = t1.getTransformTo$1(null);
      if (B.boolConversionCheck(J.$eq$(transform.invert$0(), 0)))
        switch (movement.index) {
          case 0:
          case 3:
            return C.SelectionResult_1;
          case 1:
          case 2:
            return C.SelectionResult_0;
        }
      baselineInParagraphCoordinates = E.MatrixUtils_transformPoint(transform, E.Offset$(horizontalBaseline, 0)).get$dx();
      switch (movement.index) {
        case 0:
        case 1:
          if (isExtent) {
            t1 = _this._textSelectionEnd;
            t1.toString;
            targetedEdge = t1;
          } else {
            t1 = _this._textSelectionStart;
            t1.toString;
            targetedEdge = t1;
          }
          moveResult = _this._handleVerticalMovement$3$below$horizontalBaselineInParagraphCoordinates(targetedEdge, movement === C.SelectionExtendDirection_1, baselineInParagraphCoordinates);
          newPosition = moveResult.key;
          result = moveResult.value;
          break;
        case 2:
        case 3:
          t2 = _this._textSelectionEnd;
          if (t2 == null) {
            t2 = _this.range;
            t2 = _this._textSelectionEnd = movement === C.SelectionExtendDirection_2 ? E.TextPosition$(D.TextAffinity_1, t2.start) : E.TextPosition$(D.TextAffinity_0, t2.end);
          }
          if (_this._textSelectionStart == null)
            _this.set$_textSelectionStart(t2);
          if (isExtent) {
            t2 = _this._textSelectionEnd;
            t2.toString;
            targetedEdge = t2;
          } else {
            t2 = _this._textSelectionStart;
            t2.toString;
            targetedEdge = t2;
          }
          t2 = t1._getOffsetForPosition$1(targetedEdge).get$dy();
          t3 = t1._textPainter.get$preferredLineHeight();
          if (typeof t3 !== "number")
            return t3.$div();
          if (typeof t2 !== "number")
            return t2.$sub();
          newPosition = t1.getPositionForOffset$1(E.Offset$(baselineInParagraphCoordinates, t2 - t3 / 2));
          result = C.SelectionResult_2;
          break;
        default:
          newPosition = null;
          result = null;
      }
      if (isExtent)
        _this._textSelectionEnd = newPosition;
      else
        _this._textSelectionStart = newPosition;
      return result;
    },
    _handleGranularlyExtendSelection$3($forward, isExtent, granularity) {
      var t1, targetedEdge, newPosition, result, t2, _this = this;
      B._asBool($forward);
      B._asBool(isExtent);
      type$.TextGranularity._as(granularity);
      t1 = _this._textSelectionEnd;
      if (t1 == null) {
        t1 = _this.range;
        t1 = _this._textSelectionEnd = $forward ? E.TextPosition$(D.TextAffinity_1, t1.start) : E.TextPosition$(D.TextAffinity_0, t1.end);
      }
      if (_this._textSelectionStart == null)
        _this.set$_textSelectionStart(t1);
      if (isExtent) {
        t1 = _this._textSelectionEnd;
        t1.toString;
        targetedEdge = t1;
      } else {
        t1 = _this._textSelectionStart;
        t1.toString;
        targetedEdge = t1;
      }
      if ($forward && B.boolConversionCheck(J.$eq$(targetedEdge.offset, _this.range.end)))
        return C.SelectionResult_0;
      t1 = !$forward;
      if (t1 && B.boolConversionCheck(J.$eq$(targetedEdge.offset, _this.range.start)))
        return C.SelectionResult_1;
      switch (granularity.index) {
        case 0:
          newPosition = _this._moveBeyondTextBoundaryAtDirection$3(targetedEdge, $forward, A.CharacterBoundary$(_this.range.textInside$1(_this.fullText)));
          result = C.SelectionResult_2;
          break;
        case 1:
          newPosition = _this._moveBeyondTextBoundaryAtDirection$3(targetedEdge, $forward, _this.paragraph._textPainter.get$wordBoundaries().get$moveByWordBoundary());
          result = C.SelectionResult_2;
          break;
        case 2:
          newPosition = _this._moveBeyondTextBoundaryAtDirection$3(targetedEdge, $forward, A.ParagraphBoundary$(_this.range.textInside$1(_this.fullText)));
          result = C.SelectionResult_2;
          break;
        case 3:
          newPosition = _this._moveToTextBoundaryAtDirection$3(targetedEdge, $forward, A.LineBoundary$(_this));
          result = C.SelectionResult_2;
          break;
        case 4:
          t2 = _this.range;
          newPosition = _this._moveBeyondTextBoundaryAtDirection$3(targetedEdge, $forward, A.DocumentBoundary$(t2.textInside$1(_this.fullText)));
          if ($forward && B.boolConversionCheck(J.$eq$(newPosition.offset, t2.end)))
            result = C.SelectionResult_0;
          else
            result = t1 && B.boolConversionCheck(J.$eq$(newPosition.offset, t2.start)) ? C.SelectionResult_1 : C.SelectionResult_2;
          break;
        default:
          result = null;
          newPosition = null;
      }
      if (isExtent)
        _this._textSelectionEnd = newPosition;
      else
        _this._textSelectionStart = newPosition;
      return result;
    },
    _moveBeyondTextBoundaryAtDirection$3(end, $forward, textBoundary) {
      var t1, newOffset;
      type$.TextPosition._as(end);
      B._asBool($forward);
      type$.TextBoundary._as(textBoundary);
      t1 = end.offset;
      if ($forward) {
        t1 = textBoundary.getTrailingTextBoundaryAt$1(t1);
        newOffset = t1 == null ? this.range.end : t1;
      } else {
        if (typeof t1 !== "number")
          return t1.$sub();
        t1 = textBoundary.getLeadingTextBoundaryAt$1(t1 - 1);
        newOffset = t1 == null ? this.range.start : t1;
      }
      return E.TextPosition$(D.TextAffinity_1, newOffset);
    },
    _moveToTextBoundaryAtDirection$3(end, $forward, textBoundary) {
      var t1, characterBoundary, t2, caretOffset, offset, _this = this;
      type$.TextPosition._as(end);
      B._asBool($forward);
      type$.TextBoundary._as(textBoundary);
      switch (end.affinity) {
        case D.TextAffinity_0:
          t1 = end.offset;
          if (typeof t1 !== "number")
            return t1.$lt();
          if (t1 < 1 && !$forward)
            return D.TextPosition_0_TextAffinity_1;
          characterBoundary = A.CharacterBoundary$(_this.fullText);
          t2 = _this.range.start;
          if (typeof t2 !== "number")
            return t2.$add();
          t1 = characterBoundary.getLeadingTextBoundaryAt$1(t2 + t1);
          if (t1 == null)
            t1 = t2;
          t1 = E.max(0, t1, type$.int);
          if (typeof t1 !== "number")
            return t1.$sub();
          caretOffset = t1 - 1;
          break;
        case D.TextAffinity_1:
          caretOffset = end.offset;
          break;
        default:
          caretOffset = null;
      }
      if ($forward) {
        t1 = textBoundary.getTrailingTextBoundaryAt$1(caretOffset);
        offset = t1 == null ? _this.range.end : t1;
      } else {
        t1 = textBoundary.getLeadingTextBoundaryAt$1(caretOffset);
        offset = t1 == null ? _this.range.start : t1;
      }
      return E.TextPosition$(D.TextAffinity_1, offset);
    },
    _handleVerticalMovement$3$below$horizontalBaselineInParagraphCoordinates(position, below, horizontalBaselineInParagraphCoordinates) {
      var t2, lines, offset, t3, t4, currentLine, t5, t6, t7, newPosition, result, _this = this,
        t1 = type$.TextPosition;
      t1._as(position);
      B._asDouble(horizontalBaselineInParagraphCoordinates);
      B._asBool(below);
      t2 = _this.paragraph;
      lines = t2._textPainter.computeLineMetrics$0();
      offset = t2.getOffsetForCaret$2(position, D.Rect_0_0_0_0);
      t3 = J.getInterceptor$asx(lines);
      t4 = t3.get$length(lines);
      if (typeof t4 !== "number")
        return t4.$sub();
      currentLine = t4 - 1;
      for (t4 = t3.get$iterator(lines); B.boolConversionCheck(t4.moveNext$0());) {
        t5 = t4.get$current();
        t6 = t5.get$baseline();
        t7 = offset.get$dy();
        if (typeof t6 !== "number")
          return t6.$gt();
        if (typeof t7 !== "number")
          return B.iae(t7);
        if (t6 > t7) {
          currentLine = t5.get$lineNumber();
          break;
        }
      }
      if (below) {
        t4 = t3.get$length(lines);
        if (typeof t4 !== "number")
          return t4.$sub();
        t4 = currentLine === t4 - 1;
      } else
        t4 = false;
      if (t4)
        newPosition = E.TextPosition$(D.TextAffinity_0, _this.range.end);
      else if (!below && currentLine === 0)
        newPosition = E.TextPosition$(D.TextAffinity_1, _this.range.start);
      else
        newPosition = _this._clampTextPosition$1(t2.getPositionForOffset$1(E.Offset$(horizontalBaselineInParagraphCoordinates, t3.$index(lines, below ? currentLine + 1 : currentLine - 1).get$baseline())));
      t2 = newPosition.offset;
      t3 = _this.range;
      t4 = J.getInterceptor$(t2);
      if (B.boolConversionCheck(t4.$eq(t2, t3.start)))
        result = C.SelectionResult_1;
      else
        result = B.boolConversionCheck(t4.$eq(t2, t3.end)) ? C.SelectionResult_0 : C.SelectionResult_2;
      return B.MapEntry$_(newPosition, result, t1, type$.SelectionResult);
    },
    _positionIsWithinCurrentSelection$1(position) {
      var t2, currentStart, currentEnd, t3, t4, _this = this,
        t1 = type$.TextPosition;
      t1._as(position);
      t2 = _this._textSelectionStart;
      if (t2 == null || _this._textSelectionEnd == null)
        return false;
      currentStart = B._Cell$named("currentStart");
      currentEnd = B._Cell$named("currentEnd");
      t2.toString;
      t3 = _this._textSelectionEnd;
      t3.toString;
      t4 = A._SelectableFragment__compareTextPositions(t2, t3);
      if (typeof t4 !== "number")
        return t4.$gt();
      if (t4 > 0) {
        currentStart.set$value(t2);
        t2 = _this._textSelectionEnd;
        t2.toString;
        currentEnd.set$value(t2);
      } else {
        currentStart.set$value(t3);
        t2 = _this._textSelectionStart;
        t2.toString;
        currentEnd.set$value(t2);
      }
      t2 = A._SelectableFragment__compareTextPositions(currentStart.readLocal$1$0(t1), position);
      if (typeof t2 !== "number")
        return t2.$ge();
      if (t2 >= 0) {
        t1 = A._SelectableFragment__compareTextPositions(currentEnd.readLocal$1$0(t1), position);
        if (typeof t1 !== "number")
          return t1.$le();
        t1 = t1 <= 0;
      } else
        t1 = false;
      return t1;
    },
    getTransformTo$1(ancestor) {
      return this.paragraph.getTransformTo$1(type$.nullable_RenderObject._as(ancestor));
    },
    pushHandleLayers$2(startHandle, endHandle) {
      var _this = this,
        t1 = type$.nullable_LayerLink;
      t1._as(startHandle);
      t1._as(endHandle);
      t1 = _this.paragraph;
      if (!B.boolConversionCheck(t1.get$attached()))
        return;
      if (!B.boolConversionCheck(J.$eq$(_this._startHandleLayerLink, startHandle))) {
        _this._startHandleLayerLink = startHandle;
        t1.markNeedsPaint$0();
      }
      if (!B.boolConversionCheck(J.$eq$(_this._endHandleLayerLink, endHandle))) {
        _this._endHandleLayerLink = endHandle;
        t1.markNeedsPaint$0();
      }
    },
    get$boundingBoxes() {
      var t1, t2, t3, boxes, t4, offset, _this = this;
      if (_this._cachedBoundingBoxes == null) {
        t1 = _this.paragraph;
        t2 = _this.range;
        t3 = t2.start;
        boxes = t1.getBoxesForSelection$1(E.TextSelection$(D.TextAffinity_1, t3, t2.end, false));
        t2 = J.getInterceptor$asx(boxes);
        t4 = type$.JSArray_Rect;
        if (B.boolConversionCheck(t2.get$isNotEmpty(boxes))) {
          _this.set$_cachedBoundingBoxes(B._setArrayType([], t4));
          for (t1 = t2.get$iterator(boxes); B.boolConversionCheck(t1.moveNext$0());) {
            t2 = t1.get$current();
            t3 = _this._cachedBoundingBoxes;
            t3.toString;
            J.add$1$ax(t3, t2.toRect$0());
          }
        } else {
          offset = t1._getOffsetForPosition$1(E.TextPosition$(D.TextAffinity_1, t3));
          _this.set$_cachedBoundingBoxes(B._setArrayType([A.Rect$fromPoints(offset, offset.translate$2(0, J.$negate$in(t1._textPainter.get$preferredLineHeight())))], t4));
        }
      }
      t1 = _this._cachedBoundingBoxes;
      t1.toString;
      return t1;
    },
    get$_paragraph$_rect() {
      var t2, t3, boxes, result, index, offset, _this = this,
        t1 = _this._cachedRect;
      if (t1 == null) {
        t1 = _this.paragraph;
        t2 = _this.range;
        t3 = t2.start;
        boxes = t1.getBoxesForSelection$1(E.TextSelection$(D.TextAffinity_1, t3, t2.end, false));
        t2 = J.getInterceptor$asx(boxes);
        if (B.boolConversionCheck(t2.get$isNotEmpty(boxes))) {
          result = t2.get$first(boxes).toRect$0();
          index = 1;
          while (true) {
            t1 = t2.get$length(boxes);
            if (typeof t1 !== "number")
              return B.iae(t1);
            if (!(index < t1))
              break;
            result = result.expandToInclude$1(t2.$index(boxes, index).toRect$0());
            ++index;
          }
          _this._cachedRect = result;
          t1 = result;
        } else {
          offset = t1._getOffsetForPosition$1(E.TextPosition$(D.TextAffinity_1, t3));
          t1 = A.Rect$fromPoints(offset, offset.translate$2(0, J.$negate$in(t1._textPainter.get$preferredLineHeight())));
          _this._cachedRect = t1;
        }
      }
      return t1;
    },
    didChangeParagraphLayout$0() {
      this._cachedRect = null;
    },
    paint$2(context, offset) {
      var t1, selection, selectionPaint, t2, _this = this;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      if (_this._textSelectionStart == null || _this._textSelectionEnd == null)
        return;
      t1 = _this.paragraph;
      if (t1.get$selectionColor() != null) {
        selection = E.TextSelection$(D.TextAffinity_1, _this._textSelectionStart.offset, _this._textSelectionEnd.offset, false);
        selectionPaint = E.Paint_Paint();
        selectionPaint.set$style(D.PaintingStyle_0);
        t2 = t1.get$selectionColor();
        t2.toString;
        selectionPaint.set$color(t2);
        for (t1 = J.get$iterator$ax(t1.getBoxesForSelection$1(selection)); B.boolConversionCheck(t1.moveNext$0());) {
          t2 = t1.get$current();
          context.get$canvas().drawRect$2(t2.toRect$0().shift$1(offset), selectionPaint);
        }
      }
      if (_this._startHandleLayerLink != null && _this.get$value().startSelectionPoint != null) {
        t1 = _this._startHandleLayerLink;
        t1.toString;
        context.pushLayer$3(A.LeaderLayer$(t1, offset.$add(0, _this.get$value().startSelectionPoint.localPosition)), new A._SelectableFragment_paint_closure(), D.Offset_0_0);
      }
      if (_this._endHandleLayerLink != null && _this.get$value().endSelectionPoint != null) {
        t1 = _this._endHandleLayerLink;
        t1.toString;
        context.pushLayer$3(A.LeaderLayer$(t1, offset.$add(0, _this.get$value().endSelectionPoint.localPosition)), new A._SelectableFragment_paint_closure0(), D.Offset_0_0);
      }
    },
    getLineAtOffset$1(position) {
      var line = this.paragraph._getLineAtOffset$1(type$.TextPosition._as(position)),
        t1 = line.start,
        t2 = this.range,
        t3 = t2.start;
      t2 = t2.end;
      return E.TextSelection$(D.TextAffinity_1, J.clamp$2$n(t1, t3, t2), J.clamp$2$n(line.end, t3, t2), false);
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      t1 = this.range;
      t2 = this.fullText;
      t3 = type$.String;
      properties.add$1(0, E.DiagnosticsProperty$("textInsideRange", t1.textInside$1(t2), true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      properties.add$1(0, E.DiagnosticsProperty$("range", t1, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextRange));
      properties.add$1(0, E.DiagnosticsProperty$("fullText", t2, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
    },
    set$_textSelectionStart(_textSelectionStart) {
      this._textSelectionStart = type$.nullable_TextPosition._as(_textSelectionStart);
    },
    set$_textSelectionEnd(_textSelectionEnd) {
      this._textSelectionEnd = type$.nullable_TextPosition._as(_textSelectionEnd);
    },
    set$_cachedBoundingBoxes(_cachedBoundingBoxes) {
      this._cachedBoundingBoxes = type$.nullable_List_Rect._as(_cachedBoundingBoxes);
    },
    $isListenable: 1,
    $isValueListenable: 1,
    $isChangeNotifier: 1,
    $isDiagnosticable: 1,
    $isSelectionHandler: 1,
    $isSelectable: 1,
    $isTextLayoutMetrics: 1
  };
  A._RenderParagraph_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      type$.PipelineOwner._as(owner);
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.TextParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0() {
      var child, t1, t2;
      this.super$RenderObject$detach();
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.TextParentData; child != null;) {
        child.detach$0();
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    $isContainerRenderObjectMixin: 1
  };
  A._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderInlineChildrenContainerDefaults.prototype = {$isContainerRenderObjectMixin: 1, $isRenderInlineChildrenContainerDefaults: 1};
  A._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderInlineChildrenContainerDefaults_RelayoutWhenSystemFontsChangeMixin.prototype = {
    attach$1(owner) {
      this.super$_RenderParagraph_RenderBox_ContainerRenderObjectMixin$attach(type$.PipelineOwner._as(owner));
      A.PaintingBinding_instance().get$systemFonts().addListener$1(this.get$_scheduleSystemFontsUpdate());
    },
    detach$0() {
      A.PaintingBinding_instance().get$systemFonts().removeListener$1(this.get$_scheduleSystemFontsUpdate());
      this.super$_RenderParagraph_RenderBox_ContainerRenderObjectMixin$detach();
    },
    $isContainerRenderObjectMixin: 1,
    $isRelayoutWhenSystemFontsChangeMixin: 1,
    $isRenderInlineChildrenContainerDefaults: 1
  };
  A._TextParentData_ParentData_ContainerParentDataMixin.prototype = {
    detach$0() {
      this.super$ParentData$detach();
    },
    $isContainerParentDataMixin: 1
  };
  A.__SelectableFragment_Object_Selectable.prototype = {$isListenable: 1, $isValueListenable: 1, $isSelectionHandler: 1, $isSelectable: 1};
  A.__SelectableFragment_Object_Selectable_Diagnosticable.prototype = {$isListenable: 1, $isValueListenable: 1, $isDiagnosticable: 1, $isSelectionHandler: 1, $isSelectable: 1};
  A.__SelectableFragment_Object_Selectable_Diagnosticable_ChangeNotifier.prototype = {$isListenable: 1, $isValueListenable: 1, $isChangeNotifier: 1, $isDiagnosticable: 1, $isSelectionHandler: 1, $isSelectable: 1};
  A.RenderPerformanceOverlay.prototype = {
    get$optionsMask() {
      return this._optionsMask;
    },
    set$optionsMask(value) {
      B._asInt(value);
      if (value === this._optionsMask)
        return;
      this._optionsMask = value;
      this.markNeedsPaint$0();
    },
    get$sizedByParent() {
      return true;
    },
    get$alwaysNeedsCompositing() {
      return true;
    },
    get$_intrinsicHeight() {
      var result, _this = this,
        t1 = _this.get$optionsMask();
      if (typeof t1 !== "number")
        return t1.$or();
      if ((t1 | 1) >>> 0 <= 0) {
        t1 = _this.get$optionsMask();
        if (typeof t1 !== "number")
          return t1.$or();
        t1 = (t1 | 2) >>> 0 > 0;
      } else
        t1 = true;
      result = t1 ? 80 : 0;
      t1 = _this.get$optionsMask();
      if (typeof t1 !== "number")
        return t1.$or();
      if ((t1 | 4) >>> 0 <= 0) {
        t1 = _this.get$optionsMask();
        if (typeof t1 !== "number")
          return t1.$or();
        t1 = (t1 | 8) >>> 0 > 0;
      } else
        t1 = true;
      return t1 ? result + 80 : result;
    },
    computeDryLayout$1(constraints) {
      return type$.BoxConstraints._as(constraints).constrain$1(E.Size$(1 / 0, this.get$_intrinsicHeight()));
    },
    paint$2(context, offset) {
      var t1;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      t1 = E.Rect$fromLTWH(offset.get$dx(), offset.get$dy(), this.get$size().get$width(), this.get$size().get$height());
      context.addLayer$1(A.PerformanceOverlayLayer$(this.get$optionsMask(), t1));
    }
  };
  A.HitTestBehavior.prototype = {
    _enumToString$0() {
      return "HitTestBehavior." + B.S(this._core$_name);
    }
  };
  A.RenderProxyBoxWithHitTestBehavior.prototype = {
    hitTest$2$position(result, position) {
      var hitTarget, _this = this;
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      if (B.boolConversionCheck(J.contains$1$asx(_this.get$size(), position))) {
        hitTarget = B.boolConversionCheck(_this.hitTestChildren$2$position(result, position)) || B.boolConversionCheck(_this.hitTestSelf$1(position));
        if (hitTarget || B.boolConversionCheck(J.$eq$(_this.behavior, C.HitTestBehavior_2)))
          result.add$1(0, E.BoxHitTestEntry$(_this, position));
      } else
        hitTarget = false;
      return hitTarget;
    },
    hitTestSelf$1(position) {
      type$.Offset._as(position);
      return J.$eq$(this.behavior, C.HitTestBehavior_1);
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$RenderBox$debugFillProperties(properties);
      properties.add$1(0, E.EnumProperty$("behavior", this.behavior, null, D.DiagnosticLevel_3, type$.HitTestBehavior));
    },
    set$behavior(behavior) {
      this.behavior = type$.HitTestBehavior._as(behavior);
    }
  };
  A.RenderAnimatedOpacityMixin.prototype = {
    get$isRepaintBoundary() {
      if (this.get$child() != null) {
        var t1 = this.RenderAnimatedOpacityMixin__currentlyIsRepaintBoundary;
        t1.toString;
        B.boolConversionCheck(t1);
      } else
        t1 = false;
      return t1;
    },
    updateCompositedLayer$1$oldLayer(oldLayer) {
      var updatedLayer;
      type$.nullable_OpacityLayer._as(oldLayer);
      updatedLayer = oldLayer == null ? E.OpacityLayer$() : oldLayer;
      updatedLayer.set$alpha(this.RenderAnimatedOpacityMixin__alpha);
      return updatedLayer;
    },
    get$opacity() {
      var t1 = this.RenderAnimatedOpacityMixin__opacity;
      t1.toString;
      return t1;
    },
    set$opacity(value) {
      var _this = this;
      type$.Animation_double._as(value);
      if (B.boolConversionCheck(J.$eq$(_this.RenderAnimatedOpacityMixin__opacity, value)))
        return;
      if (B.boolConversionCheck(_this.get$attached()) && _this.RenderAnimatedOpacityMixin__opacity != null)
        _this.get$opacity().removeListener$1(_this.get$_updateOpacity());
      _this.set$_proxy_box$_opacity(value);
      if (B.boolConversionCheck(_this.get$attached()))
        _this.get$opacity().addListener$1(_this.get$_updateOpacity());
      _this._updateOpacity$0();
    },
    get$alwaysIncludeSemantics() {
      var t1 = this.RenderAnimatedOpacityMixin__alwaysIncludeSemantics;
      t1.toString;
      return t1;
    },
    set$alwaysIncludeSemantics(value) {
      B._asBool(value);
      if (value === this.RenderAnimatedOpacityMixin__alwaysIncludeSemantics)
        return;
      this.RenderAnimatedOpacityMixin__alwaysIncludeSemantics = value;
      this.markNeedsSemanticsUpdate$0();
    },
    _updateOpacity$0() {
      var t1, wasRepaintBoundary, _this = this,
        oldAlpha = _this.RenderAnimatedOpacityMixin__alpha;
      _this.set$_proxy_box$_alpha(A.Color_getAlphaFromOpacity(_this.get$opacity().get$value()));
      t1 = _this.RenderAnimatedOpacityMixin__alpha;
      if (oldAlpha == null ? t1 != null : oldAlpha !== t1) {
        wasRepaintBoundary = _this.RenderAnimatedOpacityMixin__currentlyIsRepaintBoundary;
        t1.toString;
        if (typeof t1 !== "number")
          return t1.$gt();
        _this.RenderAnimatedOpacityMixin__currentlyIsRepaintBoundary = t1 > 0;
        if (_this.get$child() != null) {
          t1 = _this.RenderAnimatedOpacityMixin__currentlyIsRepaintBoundary;
          t1 = wasRepaintBoundary == null ? t1 != null : wasRepaintBoundary !== t1;
        } else
          t1 = false;
        if (t1)
          _this.markNeedsCompositingBitsUpdate$0();
        _this.markNeedsCompositedLayerUpdate$0();
        if (oldAlpha === 0 || B.boolConversionCheck(J.$eq$(_this.RenderAnimatedOpacityMixin__alpha, 0)))
          _this.markNeedsSemanticsUpdate$0();
      }
    },
    paintsChild$1(child) {
      var t1;
      type$.RenderObject._as(child);
      t1 = this.get$opacity().get$value();
      if (typeof t1 !== "number")
        return t1.$gt();
      return t1 > 0;
    },
    visitChildrenForSemantics$1(visitor) {
      var t1, _this = this;
      type$.void_Function_RenderObject._as(visitor);
      if (_this.get$child() != null)
        t1 = !B.boolConversionCheck(J.$eq$(_this.RenderAnimatedOpacityMixin__alpha, 0)) || B.boolConversionCheck(_this.get$alwaysIncludeSemantics());
      else
        t1 = false;
      if (t1) {
        t1 = _this.get$child();
        t1.toString;
        visitor.call$1(t1);
      }
    },
    set$_proxy_box$_alpha(_alpha) {
      this.RenderAnimatedOpacityMixin__alpha = B._asIntQ(_alpha);
    },
    set$_proxy_box$_opacity(_opacity) {
      this.RenderAnimatedOpacityMixin__opacity = type$.nullable_Animation_double._as(_opacity);
    },
    $isDiagnosticable: 1,
    $isDiagnosticableTree: 1,
    $isDiagnosticableTreeMixin: 1,
    $isHitTestTarget: 1,
    $isRenderObject: 1,
    $isRenderObjectWithChildMixin: 1,
    $is_DiagnosticableTree_Object_Diagnosticable: 1,
    $is_RenderObject_Object_DiagnosticableTreeMixin: 1
  };
  A.RenderAnimatedOpacity.prototype = {
    RenderAnimatedOpacity$3$alwaysIncludeSemantics$child$opacity(alwaysIncludeSemantics, child, opacity) {
      this.set$opacity(opacity);
      this.set$alwaysIncludeSemantics(alwaysIncludeSemantics);
    },
    $isRenderAnimatedOpacityMixin: 1
  };
  A.CustomClipper.prototype = {
    addListener$1(listener) {
      type$.void_Function._as(listener);
      return null;
    },
    removeListener$1(listener) {
      type$.void_Function._as(listener);
      return null;
    },
    getApproximateClipRect$1(size) {
      return D.Offset_0_0.$and(0, type$.Size._as(size));
    },
    toString$0(_) {
      return E.objectRuntimeType(this, "CustomClipper");
    }
  };
  A.ShapeBorderClipper.prototype = {
    getClip$1(size) {
      return this.shape.getOuterPath$2$textDirection(D.Offset_0_0.$and(0, type$.Size._as(size)), this.textDirection);
    },
    shouldReclip$1(oldClipper) {
      type$.CustomClipper_Path._as(oldClipper);
      if (!B.boolConversionCheck(J.$eq$(oldClipper.get$runtimeType(0), C.Type_ShapeBorderClipper_bL3)))
        return true;
      type$.ShapeBorderClipper._as(oldClipper);
      return !B.boolConversionCheck(J.$eq$(oldClipper.shape, this.shape)) || !B.boolConversionCheck(J.$eq$(oldClipper.textDirection, this.textDirection));
    }
  };
  A._RenderCustomClip.prototype = {
    get$clipper() {
      return this._clipper;
    },
    set$clipper(newClipper) {
      var oldClipper, t1, _this = this;
      B._instanceType(_this)._eval$1("CustomClipper<_RenderCustomClip.T>?")._as(newClipper);
      if (B.boolConversionCheck(J.$eq$(_this._clipper, newClipper)))
        return;
      oldClipper = _this._clipper;
      _this.set$_clipper(newClipper);
      t1 = newClipper == null;
      if (t1 || oldClipper == null || !B.boolConversionCheck(J.$eq$(newClipper.get$runtimeType(0), oldClipper.get$runtimeType(0))) || B.boolConversionCheck(newClipper.shouldReclip$1(oldClipper)))
        _this._markNeedsClip$0();
      if (B.boolConversionCheck(_this.get$attached())) {
        if (oldClipper != null)
          oldClipper.removeListener$1(_this.get$_markNeedsClip());
        if (!t1)
          newClipper.addListener$1(_this.get$_markNeedsClip());
      }
    },
    attach$1(owner) {
      var t1;
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach(type$.PipelineOwner._as(owner));
      t1 = this._clipper;
      if (t1 != null)
        t1.addListener$1(this.get$_markNeedsClip());
    },
    detach$0() {
      var t1 = this._clipper;
      if (t1 != null)
        t1.removeListener$1(this.get$_markNeedsClip());
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach();
    },
    _markNeedsClip$0() {
      this.set$_clip(null);
      this.markNeedsPaint$0();
      this.markNeedsSemanticsUpdate$0();
    },
    get$clipBehavior() {
      return this._proxy_box$_clipBehavior;
    },
    set$clipBehavior(value) {
      type$.Clip._as(value);
      if (value !== this._proxy_box$_clipBehavior) {
        this._proxy_box$_clipBehavior = value;
        this.markNeedsPaint$0();
      }
    },
    performLayout$0() {
      var _this = this,
        oldSize = B.boolConversionCheck(_this.get$hasSize()) ? _this.get$size() : null;
      _this.super$RenderProxyBoxMixin$performLayout();
      if (!B.boolConversionCheck(J.$eq$(oldSize, _this.get$size())))
        _this.set$_clip(null);
    },
    _updateClip$0() {
      var t1, _this = this;
      if (_this._clip == null) {
        t1 = _this._clipper;
        t1 = t1 == null ? null : t1.getClip$1(_this.get$size());
        _this.set$_clip(t1 == null ? _this.get$_defaultClip() : t1);
      }
    },
    describeApproximatePaintClip$1(child) {
      var t1, _this = this;
      type$.RenderObject._as(child);
      switch (_this.get$clipBehavior()) {
        case D.Clip_0:
          return null;
        case D.Clip_1:
        case D.Clip_2:
        case D.Clip_3:
          t1 = _this._clipper;
          t1 = t1 == null ? null : t1.getApproximateClipRect$1(_this.get$size());
          return t1 == null ? D.Offset_0_0.$and(0, _this.get$size()) : t1;
      }
    },
    dispose$0() {
      var t1 = this._debugText;
      if (t1 != null)
        t1.dispose$0();
      this._debugText = null;
      this.super$RenderObject$dispose();
    },
    set$_clipper(_clipper) {
      this._clipper = B._instanceType(this)._eval$1("CustomClipper<_RenderCustomClip.T>?")._as(_clipper);
    },
    set$_clip(_clip) {
      this._clip = B._instanceType(this)._eval$1("_RenderCustomClip.T?")._as(_clip);
    }
  };
  A.RenderClipPath.prototype = {
    get$_defaultClip() {
      var t1 = E.Path_Path();
      t1.addRect$1(D.Offset_0_0.$and(0, this.get$size()));
      return t1;
    },
    hitTest$2$position(result, position) {
      var t1, _this = this;
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      if (_this._clipper != null) {
        _this._updateClip$0();
        t1 = _this._clip;
        t1.toString;
        if (!B.boolConversionCheck(J.contains$1$asx(t1, position)))
          return false;
      }
      return _this.super$RenderBox$hitTest(result, position);
    },
    paint$2(context, offset) {
      var t1, t2, t3, _this = this;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      if (_this.get$child() != null)
        if (!B.boolConversionCheck(J.$eq$(_this.get$clipBehavior(), D.Clip_0))) {
          _this._updateClip$0();
          t1 = _this.get$needsCompositing();
          t2 = D.Offset_0_0.$and(0, _this.get$size());
          t3 = _this._clip;
          t3.toString;
          _this.set$layer(context.pushClipPath$7$clipBehavior$oldLayer(t1, offset, t2, t3, E.RenderProxyBoxMixin.prototype.get$paint.call(_this), _this.get$clipBehavior(), type$.nullable_ClipPathLayer._as(_this.get$layer())));
        } else {
          t1 = _this.get$child();
          t1.toString;
          context.paintChild$2(t1, offset);
          _this.set$layer(null);
        }
      else
        _this.set$layer(null);
    }
  };
  A._RenderPhysicalModelBase.prototype = {
    get$elevation() {
      return this._proxy_box$_elevation;
    },
    set$elevation(value) {
      var didNeedCompositing, _this = this;
      B._asDouble(value);
      if (B.boolConversionCheck(J.$eq$(_this.get$elevation(), value)))
        return;
      didNeedCompositing = _this.get$alwaysNeedsCompositing();
      _this._proxy_box$_elevation = value;
      if (didNeedCompositing !== _this.get$alwaysNeedsCompositing())
        _this.markNeedsCompositingBitsUpdate$0();
      _this.markNeedsPaint$0();
    },
    get$shadowColor() {
      return this._proxy_box$_shadowColor;
    },
    set$shadowColor(value) {
      type$.Color._as(value);
      if (B.boolConversionCheck(J.$eq$(this.get$shadowColor(), value)))
        return;
      this._proxy_box$_shadowColor = value;
      this.markNeedsPaint$0();
    },
    get$color() {
      return this._proxy_box$_color;
    },
    set$color(value) {
      type$.Color._as(value);
      if (B.boolConversionCheck(J.$eq$(this.get$color(), value)))
        return;
      this._proxy_box$_color = value;
      this.markNeedsPaint$0();
    },
    describeSemanticsConfiguration$1(config) {
      type$.SemanticsConfiguration._as(config);
      this.super$RenderObject$describeSemanticsConfiguration(config);
      config.set$elevation(this.get$elevation());
    },
    debugFillProperties$1(description) {
      var _this = this;
      type$.DiagnosticPropertiesBuilder._as(description);
      _this.super$RenderBox$debugFillProperties(description);
      description.add$1(0, E.DoubleProperty$("elevation", _this.get$elevation(), D.C__NoDefaultValue, null, D.DiagnosticLevel_3, null, null));
      description.add$1(0, A.ColorProperty$("color", _this.get$color(), D.C__NoDefaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      description.add$1(0, A.ColorProperty$("shadowColor", _this.get$color(), D.C__NoDefaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
    }
  };
  A.RenderPhysicalModel.prototype = {
    get$shape() {
      return this._proxy_box$_shape;
    },
    set$shape(value) {
      type$.BoxShape._as(value);
      if (B.boolConversionCheck(J.$eq$(this.get$shape(), value)))
        return;
      this._proxy_box$_shape = value;
      this._markNeedsClip$0();
    },
    get$borderRadius() {
      return this._proxy_box$_borderRadius;
    },
    set$borderRadius(value) {
      type$.nullable_BorderRadius._as(value);
      if (B.boolConversionCheck(J.$eq$(this.get$borderRadius(), value)))
        return;
      this._proxy_box$_borderRadius = value;
      this._markNeedsClip$0();
    },
    get$_defaultClip() {
      var t1, t2,
        rect = D.Offset_0_0.$and(0, this.get$size());
      switch (this._proxy_box$_shape) {
        case C.BoxShape_0:
          t1 = this.get$borderRadius();
          t1 = (t1 == null ? C.BorderRadius_ww8 : t1).toRRect$1(rect);
          break;
        case C.BoxShape_1:
          t1 = rect.get$width();
          if (typeof t1 !== "number")
            return t1.$div();
          t2 = rect.get$height();
          if (typeof t2 !== "number")
            return t2.$div();
          t2 = A.RRect$fromRectXY(rect, t1 / 2, t2 / 2);
          t1 = t2;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    hitTest$2$position(result, position) {
      var t1, _this = this;
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      if (_this._clipper != null) {
        _this._updateClip$0();
        t1 = _this._clip;
        t1.toString;
        if (!B.boolConversionCheck(J.contains$1$asx(t1, position)))
          return false;
      }
      return _this.super$RenderBox$hitTest(result, position);
    },
    paint$2(context, offset) {
      var offsetRRect, offsetRRectAsPath, canvas, t1, usesSaveLayer, t2, t3, t4, _this = this;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      if (_this.get$child() == null) {
        _this.set$layer(null);
        return;
      }
      _this._updateClip$0();
      offsetRRect = _this._clip.shift$1(offset);
      offsetRRectAsPath = E.Path_Path();
      offsetRRectAsPath.addRRect$1(offsetRRect);
      canvas = context.get$canvas();
      t1 = B.boolConversionCheck(J.$eq$(_this.get$elevation(), 0));
      if (!t1)
        canvas.drawShadow$4(offsetRRectAsPath, _this.get$shadowColor(), _this.get$elevation(), !B.boolConversionCheck(J.$eq$(_this.get$color().get$alpha(), 255)));
      usesSaveLayer = J.$eq$(_this.get$clipBehavior(), D.Clip_3);
      if (!usesSaveLayer) {
        t1 = E.Paint_Paint();
        t1.set$color(_this.get$color());
        canvas.drawRRect$2(offsetRRect, t1);
      }
      t1 = _this.get$needsCompositing();
      t2 = D.Offset_0_0.$and(0, _this.get$size());
      t3 = _this._clip;
      t3.toString;
      t4 = type$.nullable_ClipRRectLayer._as(_this.get$layer());
      _this.set$layer(context.pushClipRRect$7$clipBehavior$oldLayer(t1, offset, t2, t3, new A.RenderPhysicalModel_paint_closure(_this, usesSaveLayer), _this.get$clipBehavior(), t4));
    },
    debugFillProperties$1(description) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(description);
      this.super$_RenderPhysicalModelBase$debugFillProperties(description);
      description.add$1(0, E.DiagnosticsProperty$("shape", this.get$shape(), true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BoxShape));
      description.add$1(0, E.DiagnosticsProperty$("borderRadius", this.get$borderRadius(), true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BorderRadius));
    }
  };
  A.RenderPhysicalShape.prototype = {
    get$_defaultClip() {
      var t1 = E.Path_Path();
      t1.addRect$1(D.Offset_0_0.$and(0, this.get$size()));
      return t1;
    },
    hitTest$2$position(result, position) {
      var t1, _this = this;
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      if (_this._clipper != null) {
        _this._updateClip$0();
        t1 = _this._clip;
        t1.toString;
        if (!B.boolConversionCheck(J.contains$1$asx(t1, position)))
          return false;
      }
      return _this.super$RenderBox$hitTest(result, position);
    },
    paint$2(context, offset) {
      var offsetPath, canvas, t1, usesSaveLayer, t2, t3, t4, _this = this;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      if (_this.get$child() == null) {
        _this.set$layer(null);
        return;
      }
      _this._updateClip$0();
      offsetPath = _this._clip.shift$1(offset);
      canvas = context.get$canvas();
      t1 = B.boolConversionCheck(J.$eq$(_this.get$elevation(), 0));
      if (!t1)
        canvas.drawShadow$4(offsetPath, _this.get$shadowColor(), _this.get$elevation(), !B.boolConversionCheck(J.$eq$(_this.get$color().get$alpha(), 255)));
      usesSaveLayer = J.$eq$(_this.get$clipBehavior(), D.Clip_3);
      if (!usesSaveLayer) {
        t1 = E.Paint_Paint();
        t1.set$color(_this.get$color());
        canvas.drawPath$2(offsetPath, t1);
      }
      t1 = _this.get$needsCompositing();
      t2 = D.Offset_0_0.$and(0, _this.get$size());
      t3 = _this._clip;
      t3.toString;
      t4 = type$.nullable_ClipPathLayer._as(_this.get$layer());
      _this.set$layer(context.pushClipPath$7$clipBehavior$oldLayer(t1, offset, t2, t3, new A.RenderPhysicalShape_paint_closure(_this, usesSaveLayer), _this.get$clipBehavior(), t4));
    },
    debugFillProperties$1(description) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(description);
      this.super$_RenderPhysicalModelBase$debugFillProperties(description);
      description.add$1(0, E.DiagnosticsProperty$("clipper", this.get$clipper(), true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.CustomClipper_Path));
    }
  };
  A.DecorationPosition.prototype = {
    _enumToString$0() {
      return "DecorationPosition." + B.S(this._core$_name);
    }
  };
  A.RenderDecoratedBox.prototype = {
    get$decoration() {
      return this._proxy_box$_decoration;
    },
    set$decoration(value) {
      var t1, _this = this;
      type$.Decoration._as(value);
      if (B.boolConversionCheck(value.$eq(0, _this._proxy_box$_decoration)))
        return;
      t1 = _this._proxy_box$_painter;
      if (t1 != null)
        t1.dispose$0();
      _this._proxy_box$_painter = null;
      _this._proxy_box$_decoration = value;
      _this.markNeedsPaint$0();
    },
    get$position() {
      return this._proxy_box$_position;
    },
    set$position(value) {
      type$.DecorationPosition._as(value);
      if (value === this._proxy_box$_position)
        return;
      this._proxy_box$_position = value;
      this.markNeedsPaint$0();
    },
    get$configuration() {
      return this._proxy_box$_configuration;
    },
    set$configuration(value) {
      type$.ImageConfiguration._as(value);
      if (B.boolConversionCheck(value.$eq(0, this._proxy_box$_configuration)))
        return;
      this._proxy_box$_configuration = value;
      this.markNeedsPaint$0();
    },
    detach$0() {
      var _this = this,
        t1 = _this._proxy_box$_painter;
      if (t1 != null)
        t1.dispose$0();
      _this._proxy_box$_painter = null;
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach();
      _this.markNeedsPaint$0();
    },
    dispose$0() {
      var t1 = this._proxy_box$_painter;
      if (t1 != null)
        t1.dispose$0();
      this.super$RenderObject$dispose();
    },
    hitTestSelf$1(position) {
      type$.Offset._as(position);
      return this._proxy_box$_decoration.hitTest$3$textDirection(this.get$size(), position, this.get$configuration().textDirection);
    },
    paint$2(context, offset) {
      var filledConfiguration, t1, _this = this;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      if (_this._proxy_box$_painter == null)
        _this.set$_proxy_box$_painter(_this._proxy_box$_decoration.createBoxPainter$1(_this.get$markNeedsPaint()));
      filledConfiguration = _this.get$configuration().copyWith$1$size(_this.get$size());
      if (B.boolConversionCheck(J.$eq$(_this.get$position(), C.DecorationPosition_0))) {
        t1 = _this._proxy_box$_painter;
        t1.toString;
        t1.paint$3(context.get$canvas(), offset, filledConfiguration);
        if (B.boolConversionCheck(_this.get$decoration().get$isComplex()))
          context.setIsComplexHint$0();
      }
      _this.super$RenderProxyBoxMixin$paint(context, offset);
      if (B.boolConversionCheck(J.$eq$(_this.get$position(), C.DecorationPosition_1))) {
        t1 = _this._proxy_box$_painter;
        t1.toString;
        t1.paint$3(context.get$canvas(), offset, filledConfiguration);
        if (B.boolConversionCheck(_this.get$decoration().get$isComplex()))
          context.setIsComplexHint$0();
      }
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$RenderBox$debugFillProperties(properties);
      properties.add$1(0, this._proxy_box$_decoration.toDiagnosticsNode$1$name("decoration"));
      properties.add$1(0, E.DiagnosticsProperty$("configuration", this.get$configuration(), true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ImageConfiguration));
    },
    set$_proxy_box$_painter(_painter) {
      this._proxy_box$_painter = type$.nullable_BoxPainter._as(_painter);
    }
  };
  A.RenderFractionalTranslation.prototype = {
    get$translation() {
      return this._translation;
    },
    set$translation(value) {
      var _this = this;
      type$.Offset._as(value);
      if (B.boolConversionCheck(J.$eq$(_this._translation, value)))
        return;
      _this._translation = value;
      _this.markNeedsPaint$0();
      _this.markNeedsSemanticsUpdate$0();
    },
    hitTest$2$position(result, position) {
      return this.hitTestChildren$2$position(type$.BoxHitTestResult._as(result), type$.Offset._as(position));
    },
    hitTestChildren$2$position(result, position) {
      var t1, t2, t3, t4, _this = this;
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      if (B.boolConversionCheck(_this.transformHitTests)) {
        t1 = _this.get$translation().get$dx();
        t2 = _this.get$size().get$width();
        if (typeof t1 !== "number")
          return t1.$mul();
        if (typeof t2 !== "number")
          return B.iae(t2);
        t3 = _this.get$translation().get$dy();
        t4 = _this.get$size().get$height();
        if (typeof t3 !== "number")
          return t3.$mul();
        if (typeof t4 !== "number")
          return B.iae(t4);
        t4 = E.Offset$(t1 * t2, t3 * t4);
        t1 = t4;
      } else
        t1 = null;
      return result.addWithPaintOffset$3$hitTest$offset$position(new A.RenderFractionalTranslation_hitTestChildren_closure(_this), t1, position);
    },
    paint$2(context, offset) {
      var t1, t2, t3, t4, t5, t6, _this = this;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      if (_this.get$child() != null) {
        t1 = offset.get$dx();
        t2 = _this.get$translation().get$dx();
        t3 = _this.get$size().get$width();
        if (typeof t2 !== "number")
          return t2.$mul();
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (typeof t1 !== "number")
          return t1.$add();
        t4 = offset.get$dy();
        t5 = _this.get$translation().get$dy();
        t6 = _this.get$size().get$height();
        if (typeof t5 !== "number")
          return t5.$mul();
        if (typeof t6 !== "number")
          return B.iae(t6);
        if (typeof t4 !== "number")
          return t4.$add();
        _this.super$RenderProxyBoxMixin$paint(context, E.Offset$(t1 + t2 * t3, t4 + t5 * t6));
      }
    },
    applyPaintTransform$2(child, transform) {
      var t1, t2, t3, t4, _this = this;
      type$.RenderBox._as(child);
      type$.Matrix4._as(transform);
      t1 = _this.get$translation().get$dx();
      t2 = _this.get$size().get$width();
      if (typeof t1 !== "number")
        return t1.$mul();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = _this.get$translation().get$dy();
      t4 = _this.get$size().get$height();
      if (typeof t3 !== "number")
        return t3.$mul();
      if (typeof t4 !== "number")
        return B.iae(t4);
      transform.translate$2(t1 * t2, t3 * t4);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$RenderBox$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("translation", this.get$translation(), true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Offset));
      properties.add$1(0, E.DiagnosticsProperty$("transformHitTests", this.transformHitTests, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
    },
    set$transformHitTests(transformHitTests) {
      this.transformHitTests = B._asBool(transformHitTests);
    }
  };
  A.RenderPointerListener.prototype = {
    computeSizeForNoChild$1(constraints) {
      return type$.BoxConstraints._as(constraints).get$biggest();
    },
    handleEvent$2($event, entry) {
      var t1, _this = this, _null = null;
      type$.PointerEvent._as($event);
      type$.HitTestEntry_HitTestTarget._as(entry);
      if (type$.PointerDownEvent._is($event)) {
        t1 = _this.onPointerDown;
        return t1 == null ? _null : t1.call$1($event);
      }
      if (type$.PointerMoveEvent._is($event)) {
        t1 = _this.onPointerMove;
        return t1 == null ? _null : t1.call$1($event);
      }
      if (type$.PointerUpEvent._is($event)) {
        t1 = _this.onPointerUp;
        return t1 == null ? _null : t1.call$1($event);
      }
      if (type$.PointerHoverEvent._is($event)) {
        t1 = _this.onPointerHover;
        return t1 == null ? _null : t1.call$1($event);
      }
      if (type$.PointerCancelEvent._is($event)) {
        t1 = _this.onPointerCancel;
        return t1 == null ? _null : t1.call$1($event);
      }
      if (type$.PointerPanZoomStartEvent._is($event)) {
        t1 = _this.onPointerPanZoomStart;
        return t1 == null ? _null : t1.call$1($event);
      }
      if (type$.PointerPanZoomUpdateEvent._is($event)) {
        t1 = _this.onPointerPanZoomUpdate;
        return t1 == null ? _null : t1.call$1($event);
      }
      if (type$.PointerPanZoomEndEvent._is($event)) {
        t1 = _this.onPointerPanZoomEnd;
        return t1 == null ? _null : t1.call$1($event);
      }
      if (type$.PointerSignalEvent._is($event)) {
        t1 = _this.onPointerSignal;
        return t1 == null ? _null : t1.call$1($event);
      }
    },
    debugFillProperties$1(properties) {
      var t1, _this = this;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$RenderProxyBoxWithHitTestBehavior$debugFillProperties(properties);
      t1 = type$.nullable_Function;
      properties.add$1(0, A.FlagsSummary$("listeners", B.LinkedHashMap_LinkedHashMap$_literal(["down", _this.onPointerDown, "move", _this.onPointerMove, "up", _this.onPointerUp, "hover", _this.onPointerHover, "cancel", _this.onPointerCancel, "panZoomStart", _this.onPointerPanZoomStart, "panZoomUpdate", _this.onPointerPanZoomUpdate, "panZoomEnd", _this.onPointerPanZoomEnd, "signal", _this.onPointerSignal], type$.String, t1), "<none>", t1));
    },
    set$onPointerDown(onPointerDown) {
      this.onPointerDown = type$.nullable_void_Function_PointerDownEvent._as(onPointerDown);
    },
    set$onPointerMove(onPointerMove) {
      this.onPointerMove = type$.nullable_void_Function_PointerMoveEvent._as(onPointerMove);
    },
    set$onPointerUp(onPointerUp) {
      this.onPointerUp = type$.nullable_void_Function_PointerUpEvent._as(onPointerUp);
    },
    set$onPointerHover(onPointerHover) {
      this.onPointerHover = type$.nullable_void_Function_PointerHoverEvent._as(onPointerHover);
    },
    set$onPointerCancel(onPointerCancel) {
      this.onPointerCancel = type$.nullable_void_Function_PointerCancelEvent._as(onPointerCancel);
    },
    set$onPointerPanZoomStart(onPointerPanZoomStart) {
      this.onPointerPanZoomStart = type$.nullable_void_Function_PointerPanZoomStartEvent._as(onPointerPanZoomStart);
    },
    set$onPointerPanZoomUpdate(onPointerPanZoomUpdate) {
      this.onPointerPanZoomUpdate = type$.nullable_void_Function_PointerPanZoomUpdateEvent._as(onPointerPanZoomUpdate);
    },
    set$onPointerPanZoomEnd(onPointerPanZoomEnd) {
      this.onPointerPanZoomEnd = type$.nullable_void_Function_PointerPanZoomEndEvent._as(onPointerPanZoomEnd);
    },
    set$onPointerSignal(onPointerSignal) {
      this.onPointerSignal = type$.nullable_void_Function_PointerSignalEvent._as(onPointerSignal);
    }
  };
  A.RenderMouseRegion.prototype = {
    hitTest$2$position(result, position) {
      return B.boolConversionCheck(this.super$RenderProxyBoxWithHitTestBehavior$hitTest(type$.BoxHitTestResult._as(result), type$.Offset._as(position))) && B.boolConversionCheck(this._opaque);
    },
    handleEvent$2($event, entry) {
      var t1;
      type$.PointerEvent._as($event);
      type$.HitTestEntry_HitTestTarget._as(entry);
      t1 = this.onHover;
      if (t1 != null && type$.PointerHoverEvent._is($event))
        return t1.call$1($event);
    },
    get$opaque() {
      return this._opaque;
    },
    set$opaque(value) {
      B._asBool(value);
      if (!B.boolConversionCheck(J.$eq$(this._opaque, value))) {
        this._opaque = value;
        this.markNeedsPaint$0();
      }
    },
    set$hitTestBehavior(value) {
      var newValue;
      type$.nullable_HitTestBehavior._as(value);
      newValue = value == null ? C.HitTestBehavior_1 : value;
      if (!B.boolConversionCheck(J.$eq$(this.behavior, newValue))) {
        this.behavior = newValue;
        this.markNeedsPaint$0();
      }
    },
    get$cursor() {
      return this._cursor;
    },
    set$cursor(value) {
      type$.MouseCursor._as(value);
      if (!B.boolConversionCheck(J.$eq$(this._cursor, value))) {
        this._cursor = value;
        this.markNeedsPaint$0();
      }
    },
    get$validForMouseTracker() {
      return this._validForMouseTracker;
    },
    attach$1(owner) {
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach(type$.PipelineOwner._as(owner));
      this._validForMouseTracker = true;
    },
    detach$0() {
      this._validForMouseTracker = false;
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach();
    },
    computeSizeForNoChild$1(constraints) {
      return type$.BoxConstraints._as(constraints).get$biggest();
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$RenderProxyBoxWithHitTestBehavior$debugFillProperties(properties);
      t1 = type$.nullable_Function;
      properties.add$1(0, A.FlagsSummary$("listeners", B.LinkedHashMap_LinkedHashMap$_literal(["enter", _this.onEnter, "hover", _this.onHover, "exit", _this.onExit], type$.String, t1), "<none>", t1));
      properties.add$1(0, E.DiagnosticsProperty$("cursor", _this.get$cursor(), true, D.C__DeferringMouseCursor, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.MouseCursor));
      properties.add$1(0, E.DiagnosticsProperty$("opaque", _this.get$opaque(), true, true, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
      properties.add$1(0, E.FlagProperty$("validForMouseTracker", true, "invalid for MouseTracker", _null, D.DiagnosticLevel_3, false, _this.get$validForMouseTracker()));
    },
    set$onEnter(onEnter) {
      this.onEnter = type$.nullable_void_Function_PointerEnterEvent._as(onEnter);
    },
    set$onHover(onHover) {
      this.onHover = type$.nullable_void_Function_PointerHoverEvent._as(onHover);
    },
    set$onExit(onExit) {
      this.onExit = type$.nullable_void_Function_PointerExitEvent._as(onExit);
    },
    $isMouseTrackerAnnotation: 1,
    $is_MouseTrackerAnnotation_Object_Diagnosticable: 1,
    get$onEnter() {
      return this.onEnter;
    },
    get$onExit() {
      return this.onExit;
    }
  };
  A.RenderRepaintBoundary.prototype = {
    get$isRepaintBoundary() {
      return true;
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$RenderBox$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsNode_DiagnosticsNode$message("(run in debug mode to collect repaint boundary statistics)", true, D.DiagnosticsTreeStyle_8));
    }
  };
  A.RenderIgnorePointer.prototype = {
    get$ignoring() {
      return this._ignoring;
    },
    set$ignoring(value) {
      var _this = this;
      B._asBool(value);
      if (value === _this._ignoring)
        return;
      _this._ignoring = value;
      if (_this.get$ignoringSemantics() == null)
        _this.markNeedsSemanticsUpdate$0();
    },
    get$ignoringSemantics() {
      return this._ignoringSemantics;
    },
    set$ignoringSemantics(value) {
      var t1;
      B._asBoolQ(value);
      t1 = this._ignoringSemantics;
      if (value == null ? t1 == null : value === t1)
        return;
      this._ignoringSemantics = value;
      this.markNeedsSemanticsUpdate$0();
    },
    hitTest$2$position(result, position) {
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      return !B.boolConversionCheck(this.get$ignoring()) && B.boolConversionCheck(this.super$RenderBox$hitTest(result, position));
    },
    visitChildrenForSemantics$1(visitor) {
      var t1;
      type$.void_Function_RenderObject._as(visitor);
      t1 = this._ignoringSemantics;
      if (B.boolConversionCheck(t1 == null ? false : t1))
        return;
      this.super$RenderObject$visitChildrenForSemantics(visitor);
    },
    describeSemanticsConfiguration$1(config) {
      var t1;
      type$.SemanticsConfiguration._as(config);
      this.super$RenderObject$describeSemanticsConfiguration(config);
      if (B.boolConversionCheck(this._ignoring)) {
        t1 = this._ignoringSemantics;
        t1 = B.boolConversionCheck(t1 == null ? true : t1);
      } else
        t1 = false;
      config.isBlockingUserActions = t1;
    },
    debugFillProperties$1(properties) {
      var t1, t2, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$RenderBox$debugFillProperties(properties);
      t1 = type$.bool;
      properties.add$1(0, E.DiagnosticsProperty$("ignoring", this._ignoring, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      t2 = this._ignoringSemantics;
      properties.add$1(0, E.DiagnosticsProperty$("ignoringSemantics", t2, true, D.C__NoDefaultValue, t2 == null ? _null : "implicitly " + B.S(t2), _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
    }
  };
  A.RenderOffstage.prototype = {
    get$offstage() {
      return this._offstage;
    },
    set$offstage(value) {
      B._asBool(value);
      if (value === this._offstage)
        return;
      this._offstage = value;
      this.markNeedsLayoutForSizedByParentChange$0();
    },
    computeDistanceToActualBaseline$1(baseline) {
      type$.TextBaseline._as(baseline);
      if (B.boolConversionCheck(this.get$offstage()))
        return null;
      return this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin$computeDistanceToActualBaseline(baseline);
    },
    get$sizedByParent() {
      return this.get$offstage();
    },
    computeDryBaseline$2(constraints, baseline) {
      type$.BoxConstraints._as(constraints);
      type$.TextBaseline._as(baseline);
      return B.boolConversionCheck(this.get$offstage()) ? null : this.super$RenderProxyBoxMixin$computeDryBaseline(constraints, baseline);
    },
    computeDryLayout$1(constraints) {
      type$.BoxConstraints._as(constraints);
      if (B.boolConversionCheck(this.get$offstage()))
        return constraints.get$smallest();
      return this.super$RenderProxyBoxMixin$computeDryLayout(constraints);
    },
    performResize$0() {
      this.super$RenderBox$performResize();
    },
    performLayout$0() {
      var t1, _this = this;
      if (B.boolConversionCheck(_this.get$offstage())) {
        t1 = _this.get$child();
        if (t1 != null)
          t1.layout$1(_this.get$constraints());
      } else
        _this.super$RenderProxyBoxMixin$performLayout();
    },
    hitTest$2$position(result, position) {
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      return !B.boolConversionCheck(this.get$offstage()) && B.boolConversionCheck(this.super$RenderBox$hitTest(result, position));
    },
    paintsChild$1(child) {
      type$.RenderBox._as(child);
      return !B.boolConversionCheck(this.get$offstage());
    },
    paint$2(context, offset) {
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      if (B.boolConversionCheck(this.get$offstage()))
        return;
      this.super$RenderProxyBoxMixin$paint(context, offset);
    },
    visitChildrenForSemantics$1(visitor) {
      type$.void_Function_RenderObject._as(visitor);
      if (B.boolConversionCheck(this.get$offstage()))
        return;
      this.super$RenderObject$visitChildrenForSemantics(visitor);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$RenderBox$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("offstage", this.get$offstage(), true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
    },
    debugDescribeChildren$0() {
      if (this.get$child() == null)
        return B._setArrayType([], type$.JSArray_DiagnosticsNode);
      var t1 = this.get$child();
      t1.toString;
      return B._setArrayType([t1.toDiagnosticsNode$2$name$style("child", B.boolConversionCheck(this.get$offstage()) ? D.DiagnosticsTreeStyle_2 : D.DiagnosticsTreeStyle_1)], type$.JSArray_DiagnosticsNode);
    }
  };
  A.RenderAbsorbPointer.prototype = {
    get$absorbing() {
      return this._absorbing;
    },
    set$absorbing(value) {
      var _this = this;
      B._asBool(value);
      if (B.boolConversionCheck(J.$eq$(_this._absorbing, value)))
        return;
      _this._absorbing = value;
      if (_this.get$ignoringSemantics() == null)
        _this.markNeedsSemanticsUpdate$0();
    },
    get$ignoringSemantics() {
      return this._ignoringSemantics;
    },
    set$ignoringSemantics(value) {
      var t1;
      B._asBoolQ(value);
      t1 = this._ignoringSemantics;
      if (value == null ? t1 == null : value === t1)
        return;
      this._ignoringSemantics = value;
      this.markNeedsSemanticsUpdate$0();
    },
    hitTest$2$position(result, position) {
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      return B.boolConversionCheck(this.get$absorbing()) ? J.contains$1$asx(this.get$size(), position) : this.super$RenderBox$hitTest(result, position);
    },
    visitChildrenForSemantics$1(visitor) {
      var t1;
      type$.void_Function_RenderObject._as(visitor);
      t1 = this._ignoringSemantics;
      if (B.boolConversionCheck(t1 == null ? false : t1))
        return;
      this.super$RenderObject$visitChildrenForSemantics(visitor);
    },
    describeSemanticsConfiguration$1(config) {
      var t1;
      type$.SemanticsConfiguration._as(config);
      this.super$RenderObject$describeSemanticsConfiguration(config);
      if (B.boolConversionCheck(this.get$absorbing())) {
        t1 = this._ignoringSemantics;
        t1 = B.boolConversionCheck(t1 == null ? true : t1);
      } else
        t1 = false;
      config.isBlockingUserActions = t1;
    },
    debugFillProperties$1(properties) {
      var t1, t2, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$RenderBox$debugFillProperties(properties);
      t1 = type$.bool;
      properties.add$1(0, E.DiagnosticsProperty$("absorbing", _this.get$absorbing(), true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      t2 = _this.get$ignoringSemantics();
      properties.add$1(0, E.DiagnosticsProperty$("ignoringSemantics", t2, true, D.C__NoDefaultValue, _this.get$ignoringSemantics() == null ? _null : "implicitly " + B.S(_this.get$ignoringSemantics()), _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
    }
  };
  A.RenderSemanticsGestureHandler.prototype = {
    get$validActions() {
      return null;
    },
    get$onTap() {
      return this._proxy_box$_onTap;
    },
    set$onTap(value) {
      var t1, _this = this;
      type$.nullable_void_Function._as(value);
      if (B.boolConversionCheck(J.$eq$(_this._proxy_box$_onTap, value)))
        return;
      t1 = _this._proxy_box$_onTap;
      _this.set$_proxy_box$_onTap(value);
      if (value != null !== (t1 != null))
        _this.markNeedsSemanticsUpdate$0();
    },
    get$onLongPress() {
      return this._proxy_box$_onLongPress;
    },
    set$onLongPress(value) {
      var t1, _this = this;
      type$.nullable_void_Function._as(value);
      if (B.boolConversionCheck(J.$eq$(_this._proxy_box$_onLongPress, value)))
        return;
      t1 = _this._proxy_box$_onLongPress;
      _this.set$_proxy_box$_onLongPress(value);
      if (value != null !== (t1 != null))
        _this.markNeedsSemanticsUpdate$0();
    },
    get$onHorizontalDragUpdate() {
      return this._onHorizontalDragUpdate;
    },
    set$onHorizontalDragUpdate(value) {
      var t1, _this = this;
      type$.nullable_void_Function_DragUpdateDetails._as(value);
      if (B.boolConversionCheck(J.$eq$(_this._onHorizontalDragUpdate, value)))
        return;
      t1 = _this._onHorizontalDragUpdate;
      _this.set$_onHorizontalDragUpdate(value);
      if (value != null !== (t1 != null))
        _this.markNeedsSemanticsUpdate$0();
    },
    get$onVerticalDragUpdate() {
      return this._onVerticalDragUpdate;
    },
    set$onVerticalDragUpdate(value) {
      var t1, _this = this;
      type$.nullable_void_Function_DragUpdateDetails._as(value);
      if (B.boolConversionCheck(J.$eq$(_this._onVerticalDragUpdate, value)))
        return;
      t1 = _this._onVerticalDragUpdate;
      _this.set$_onVerticalDragUpdate(value);
      if (value != null !== (t1 != null))
        _this.markNeedsSemanticsUpdate$0();
    },
    describeSemanticsConfiguration$1(config) {
      var _this = this;
      type$.SemanticsConfiguration._as(config);
      _this.super$RenderObject$describeSemanticsConfiguration(config);
      if (_this.get$onTap() != null && B.boolConversionCheck(_this._isValidAction$1(D.SemanticsAction_1_tap)))
        config.set$onTap(_this.get$onTap());
      if (_this.get$onLongPress() != null && B.boolConversionCheck(_this._isValidAction$1(D.SemanticsAction_2_longPress)))
        config.set$onLongPress(_this.get$onLongPress());
      if (_this.get$onHorizontalDragUpdate() != null) {
        if (B.boolConversionCheck(_this._isValidAction$1(D.SemanticsAction_8_scrollRight)))
          config.set$onScrollRight(_this.get$_performSemanticScrollRight());
        if (B.boolConversionCheck(_this._isValidAction$1(D.SemanticsAction_4_scrollLeft)))
          config.set$onScrollLeft(_this.get$_performSemanticScrollLeft());
      }
      if (_this.get$onVerticalDragUpdate() != null) {
        if (B.boolConversionCheck(_this._isValidAction$1(D.SemanticsAction_16_scrollUp)))
          config.set$onScrollUp(_this.get$_performSemanticScrollUp());
        if (B.boolConversionCheck(_this._isValidAction$1(D.SemanticsAction_32_scrollDown)))
          config.set$onScrollDown(_this.get$_performSemanticScrollDown());
      }
    },
    _isValidAction$1(action) {
      var t1;
      type$.SemanticsAction._as(action);
      if (this.get$validActions() != null) {
        t1 = this.get$validActions();
        t1.toString;
        t1 = B.boolConversionCheck(J.contains$1$asx(t1, action));
      } else
        t1 = true;
      return t1;
    },
    _performSemanticScrollLeft$0() {
      var t1, primaryDelta, _this = this;
      if (_this.get$onHorizontalDragUpdate() != null) {
        t1 = _this.get$size().get$width();
        if (typeof t1 !== "number")
          return t1.$mul();
        primaryDelta = t1 * -0.8;
        t1 = _this.get$onHorizontalDragUpdate();
        t1.toString;
        t1.call$1(A.DragUpdateDetails$(E.Offset$(primaryDelta, 0), _this.localToGlobal$1(_this.get$size().center$1(D.Offset_0_0)), null, primaryDelta, null));
      }
    },
    _performSemanticScrollRight$0() {
      var t1, primaryDelta, _this = this;
      if (_this.get$onHorizontalDragUpdate() != null) {
        t1 = _this.get$size().get$width();
        if (typeof t1 !== "number")
          return t1.$mul();
        primaryDelta = t1 * 0.8;
        t1 = _this.get$onHorizontalDragUpdate();
        t1.toString;
        t1.call$1(A.DragUpdateDetails$(E.Offset$(primaryDelta, 0), _this.localToGlobal$1(_this.get$size().center$1(D.Offset_0_0)), null, primaryDelta, null));
      }
    },
    _performSemanticScrollUp$0() {
      var t1, primaryDelta, _this = this;
      if (_this.get$onVerticalDragUpdate() != null) {
        t1 = _this.get$size().get$height();
        if (typeof t1 !== "number")
          return t1.$mul();
        primaryDelta = t1 * -0.8;
        t1 = _this.get$onVerticalDragUpdate();
        t1.toString;
        t1.call$1(A.DragUpdateDetails$(E.Offset$(0, primaryDelta), _this.localToGlobal$1(_this.get$size().center$1(D.Offset_0_0)), null, primaryDelta, null));
      }
    },
    _performSemanticScrollDown$0() {
      var t1, primaryDelta, _this = this;
      if (_this.get$onVerticalDragUpdate() != null) {
        t1 = _this.get$size().get$height();
        if (typeof t1 !== "number")
          return t1.$mul();
        primaryDelta = t1 * 0.8;
        t1 = _this.get$onVerticalDragUpdate();
        t1.toString;
        t1.call$1(A.DragUpdateDetails$(E.Offset$(0, primaryDelta), _this.localToGlobal$1(_this.get$size().center$1(D.Offset_0_0)), null, primaryDelta, null));
      }
    },
    debugFillProperties$1(properties) {
      var t1, _this = this;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$RenderProxyBoxWithHitTestBehavior$debugFillProperties(properties);
      t1 = B._setArrayType([], type$.JSArray_String);
      if (_this.get$onTap() != null)
        t1.push("tap");
      if (_this.get$onLongPress() != null)
        t1.push("long press");
      if (_this.get$onHorizontalDragUpdate() != null)
        t1.push("horizontal scroll");
      if (_this.get$onVerticalDragUpdate() != null)
        t1.push("vertical scroll");
      if (B.boolConversionCheck(F.JSArray_methods.get$isEmpty(t1)))
        F.JSArray_methods.add$1(t1, "<none>");
      properties.add$1(0, E.IterableProperty$("gestures", t1, D.C__NoDefaultValue, "[]", D.DiagnosticLevel_3, D.DiagnosticsTreeStyle_8, type$.String));
    },
    set$_proxy_box$_onTap(_onTap) {
      this._proxy_box$_onTap = type$.nullable_void_Function._as(_onTap);
    },
    set$_proxy_box$_onLongPress(_onLongPress) {
      this._proxy_box$_onLongPress = type$.nullable_void_Function._as(_onLongPress);
    },
    set$_onHorizontalDragUpdate(_onHorizontalDragUpdate) {
      this._onHorizontalDragUpdate = type$.nullable_void_Function_DragUpdateDetails._as(_onHorizontalDragUpdate);
    },
    set$_onVerticalDragUpdate(_onVerticalDragUpdate) {
      this._onVerticalDragUpdate = type$.nullable_void_Function_DragUpdateDetails._as(_onVerticalDragUpdate);
    }
  };
  A.RenderBlockSemantics.prototype = {
    get$blocking() {
      return this._blocking;
    },
    set$blocking(value) {
      B._asBool(value);
      if (value === this._blocking)
        return;
      this._blocking = value;
      this.markNeedsSemanticsUpdate$0();
    },
    describeSemanticsConfiguration$1(config) {
      type$.SemanticsConfiguration._as(config);
      this.super$RenderObject$describeSemanticsConfiguration(config);
      config.set$isBlockingSemanticsOfPreviouslyPaintedNodes(this.get$blocking());
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$RenderBox$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("blocking", this.get$blocking(), true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
    }
  };
  A.RenderMergeSemantics.prototype = {
    describeSemanticsConfiguration$1(config) {
      type$.SemanticsConfiguration._as(config);
      this.super$RenderObject$describeSemanticsConfiguration(config);
      config.set$isSemanticBoundary(true);
      config.set$isMergingSemanticsOfDescendants(true);
    }
  };
  A.RenderExcludeSemantics.prototype = {
    get$excluding() {
      return this._excluding;
    },
    set$excluding(value) {
      B._asBool(value);
      if (value === this._excluding)
        return;
      this._excluding = value;
      this.markNeedsSemanticsUpdate$0();
    },
    visitChildrenForSemantics$1(visitor) {
      type$.void_Function_RenderObject._as(visitor);
      if (B.boolConversionCheck(this.get$excluding()))
        return;
      this.super$RenderObject$visitChildrenForSemantics(visitor);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$RenderBox$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("excluding", this.get$excluding(), true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
    }
  };
  A._RenderAnimatedOpacity_RenderProxyBox_RenderAnimatedOpacityMixin.prototype = {
    attach$1(owner) {
      var _this = this;
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach(type$.PipelineOwner._as(owner));
      _this.get$opacity().addListener$1(_this.get$_updateOpacity());
      _this._updateOpacity$0();
    },
    detach$0() {
      this.get$opacity().removeListener$1(this.get$_updateOpacity());
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach();
    },
    paint$2(context, offset) {
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      if (B.boolConversionCheck(J.$eq$(this.RenderAnimatedOpacityMixin__alpha, 0)))
        return;
      this.super$RenderProxyBoxMixin$paint(context, offset);
    },
    debugFillProperties$1(properties) {
      var _null = null,
        _s22_ = "alwaysIncludeSemantics";
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$RenderBox$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("opacity", this.get$opacity(), true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Animation_double));
      properties.add$1(0, E.FlagProperty$(_s22_, _null, _null, _s22_, D.DiagnosticLevel_3, false, this.get$alwaysIncludeSemantics()));
    },
    $isRenderAnimatedOpacityMixin: 1
  };
  A.SelectionResult.prototype = {
    _enumToString$0() {
      return "SelectionResult." + B.S(this._core$_name);
    }
  };
  A.Selectable.prototype = {$isListenable: 1, $isValueListenable: 1, $isSelectionHandler: 1};
  A.SelectionRegistrant.prototype = {
    set$registrar(value) {
      var t1, _this = this;
      type$.nullable_SelectionRegistrar._as(value);
      t1 = _this.SelectionRegistrant__registrar;
      if (value == null ? t1 == null : value === t1)
        return;
      if (value == null)
        _this.removeListener$1(_this.get$_selection$_updateSelectionRegistrarSubscription());
      else if (t1 == null)
        _this.addListener$1(_this.get$_selection$_updateSelectionRegistrarSubscription());
      _this._selection$_removeSelectionRegistrarSubscription$0();
      _this.SelectionRegistrant__registrar = value;
      _this._selection$_updateSelectionRegistrarSubscription$0();
    },
    _selection$_updateSelectionRegistrarSubscription$0() {
      var t1, _this = this;
      if (_this.SelectionRegistrant__registrar == null) {
        _this.SelectionRegistrant__subscribedToSelectionRegistrar = false;
        return;
      }
      if (B.boolConversionCheck(_this.SelectionRegistrant__subscribedToSelectionRegistrar) && !B.boolConversionCheck(_this.get$value().hasContent)) {
        t1 = _this.SelectionRegistrant__registrar;
        t1.toString;
        J.remove$1$ax(t1, _this);
        _this.SelectionRegistrant__subscribedToSelectionRegistrar = false;
      } else if (!B.boolConversionCheck(_this.SelectionRegistrant__subscribedToSelectionRegistrar) && B.boolConversionCheck(_this.get$value().hasContent)) {
        t1 = _this.SelectionRegistrant__registrar;
        t1.toString;
        J.add$1$ax(t1, _this);
        _this.SelectionRegistrant__subscribedToSelectionRegistrar = true;
      }
    },
    _selection$_removeSelectionRegistrarSubscription$0() {
      var t1, _this = this;
      if (B.boolConversionCheck(_this.SelectionRegistrant__subscribedToSelectionRegistrar)) {
        t1 = _this.SelectionRegistrant__registrar;
        t1.toString;
        J.remove$1$ax(t1, _this);
        _this.SelectionRegistrant__subscribedToSelectionRegistrar = false;
      }
    },
    $isListenable: 1,
    $isValueListenable: 1,
    $isSelectionHandler: 1,
    $isSelectable: 1
  };
  A.SelectionEventType.prototype = {
    _enumToString$0() {
      return "SelectionEventType." + B.S(this._core$_name);
    }
  };
  A.TextGranularity.prototype = {
    _enumToString$0() {
      return "TextGranularity." + B.S(this._core$_name);
    }
  };
  A.SelectionEvent.prototype = {};
  A.ClearSelectionEvent.prototype = {};
  A.SelectParagraphSelectionEvent.prototype = {};
  A.SelectionEdgeUpdateEvent.prototype = {};
  A.SelectionExtendDirection.prototype = {
    _enumToString$0() {
      return "SelectionExtendDirection." + B.S(this._core$_name);
    }
  };
  A.SelectionStatus.prototype = {
    _enumToString$0() {
      return "SelectionStatus." + B.S(this._core$_name);
    }
  };
  A.SelectionGeometry.prototype = {
    get$hasSelection() {
      return !B.boolConversionCheck(J.$eq$(this.status, C.SelectionStatus_2));
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.SelectionGeometry && B.boolConversionCheck(J.$eq$(other.startSelectionPoint, _this.startSelectionPoint)) && B.boolConversionCheck(J.$eq$(other.endSelectionPoint, _this.endSelectionPoint)) && B.boolConversionCheck(J.$eq$(other.selectionRects, _this.selectionRects)) && B.boolConversionCheck(J.$eq$(other.status, _this.status)) && B.boolConversionCheck(J.$eq$(other.hasContent, _this.hasContent));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.startSelectionPoint, _this.endSelectionPoint, _this.selectionRects, _this.status, _this.hasContent, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    }
  };
  A.SelectionPoint.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.SelectionPoint && B.boolConversionCheck(J.$eq$(other.localPosition, _this.localPosition)) && B.boolConversionCheck(J.$eq$(other.lineHeight, _this.lineHeight)) && B.boolConversionCheck(J.$eq$(other.handleType, _this.handleType));
    },
    get$hashCode(_) {
      return B.Object_hash(this.localPosition, this.lineHeight, this.handleType, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("localPosition", _this.localPosition, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Offset));
      properties.add$1(0, E.DoubleProperty$("lineHeight", _this.lineHeight, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.EnumProperty$("handleType", _this.handleType, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.TextSelectionHandleType));
    },
    $isDiagnosticable: 1
  };
  A.TextSelectionHandleType.prototype = {
    _enumToString$0() {
      return "TextSelectionHandleType." + B.S(this._core$_name);
    }
  };
  A._SelectionPoint_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.RenderShiftedBox.prototype = {
    RenderShiftedBox$1(child) {
      this.set$child(child);
    },
    computeDistanceToActualBaseline$1(baseline) {
      var child, result, t1;
      type$.TextBaseline._as(baseline);
      child = this.get$child();
      if (child != null) {
        result = child.getDistanceToActualBaseline$1(baseline);
        t1 = child.parentData;
        t1.toString;
        type$.BoxParentData._as(t1);
        if (result != null) {
          t1 = t1.offset.get$dy();
          if (typeof t1 !== "number")
            return B.iae(t1);
          result += t1;
        }
      } else
        result = this.super$RenderBox$computeDistanceToActualBaseline(baseline);
      return result;
    },
    paint$2(context, offset) {
      var child, t1;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      child = this.get$child();
      if (child != null) {
        t1 = child.parentData;
        t1.toString;
        context.paintChild$2(child, J.$add$ansx(type$.BoxParentData._as(t1).offset, offset));
      }
    },
    hitTestChildren$2$position(result, position) {
      var child, t1;
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      child = this.get$child();
      if (child != null) {
        t1 = child.parentData;
        t1.toString;
        return result.addWithPaintOffset$3$hitTest$offset$position(new A.RenderShiftedBox_hitTestChildren_closure(child), type$.BoxParentData._as(t1).offset, position);
      }
      return false;
    },
    $isRenderObjectWithChildMixin: 1
  };
  A.RenderPadding.prototype = {
    get$_resolvedPadding() {
      var _this = this,
        $returnValue = _this._resolvedPaddingCache;
      if ($returnValue == null) {
        $returnValue = _this.get$padding().resolve$1(_this.get$textDirection());
        _this.set$_resolvedPaddingCache($returnValue);
      }
      return $returnValue;
    },
    _markNeedResolution$0() {
      this._resolvedPaddingCache = null;
      this.markNeedsLayout$0();
    },
    get$padding() {
      return this._padding;
    },
    set$padding(value) {
      type$.EdgeInsetsGeometry._as(value);
      if (B.boolConversionCheck(J.$eq$(this._padding, value)))
        return;
      this._padding = value;
      this._markNeedResolution$0();
    },
    get$textDirection() {
      return this._shifted_box$_textDirection;
    },
    set$textDirection(value) {
      type$.nullable_TextDirection._as(value);
      if (B.boolConversionCheck(J.$eq$(this._shifted_box$_textDirection, value)))
        return;
      this._shifted_box$_textDirection = value;
      this._markNeedResolution$0();
    },
    computeDryLayout$1(constraints) {
      var padding, innerConstraints, childSize, t1, t2, t3, t4;
      type$.BoxConstraints._as(constraints);
      padding = this.get$_resolvedPadding();
      if (this.get$child() == null)
        return constraints.constrain$1(E.Size$(padding.get$horizontal(), padding.get$vertical()));
      innerConstraints = constraints.deflate$1(padding);
      childSize = this.get$child().getDryLayout$1(innerConstraints);
      t1 = padding.get$horizontal();
      t2 = childSize.get$width();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = padding.get$vertical();
      t4 = childSize.get$height();
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      return constraints.constrain$1(E.Size$(t1 + t2, t3 + t4));
    },
    computeDryBaseline$2(constraints, baseline) {
      var child, padding;
      type$.BoxConstraints._as(constraints);
      type$.TextBaseline._as(baseline);
      child = this.get$child();
      if (child == null)
        return null;
      padding = this.get$_resolvedPadding();
      return A.BaselineOffset__(E.BaselineOffset_constructor_(child.getDryBaseline$2(constraints.deflate$1(padding), baseline)), padding.top);
    },
    performLayout$0() {
      var innerConstraints, t1, t2, t3, t4, _this = this,
        constraints = _this.get$constraints(),
        padding = _this.get$_resolvedPadding();
      if (_this.get$child() == null) {
        _this.set$size(constraints.constrain$1(E.Size$(padding.get$horizontal(), padding.get$vertical())));
        return;
      }
      innerConstraints = constraints.deflate$1(padding);
      _this.get$child().layout$2$parentUsesSize(innerConstraints, true);
      t1 = _this.get$child().parentData;
      t1.toString;
      type$.BoxParentData._as(t1).offset = E.Offset$(padding.left, padding.top);
      t1 = padding.get$horizontal();
      t2 = _this.get$child().get$size().get$width();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = padding.get$vertical();
      t4 = _this.get$child().get$size().get$height();
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      _this.set$size(constraints.constrain$1(E.Size$(t1 + t2, t3 + t4)));
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$RenderBox$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("padding", this.get$padding(), true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.EdgeInsetsGeometry));
      properties.add$1(0, E.EnumProperty$("textDirection", this.get$textDirection(), _null, D.DiagnosticLevel_3, type$.TextDirection));
    },
    set$_resolvedPaddingCache(_resolvedPaddingCache) {
      this._resolvedPaddingCache = type$.nullable_EdgeInsets._as(_resolvedPaddingCache);
    }
  };
  A.RenderAligningShiftedBox.prototype = {
    get$resolvedAlignment() {
      var _this = this,
        t1 = _this._resolvedAlignment;
      if (t1 == null) {
        t1 = _this.get$alignment().resolve$1(_this.get$textDirection());
        _this.set$_resolvedAlignment(t1);
      }
      return t1;
    },
    _markNeedResolution$0() {
      this._resolvedAlignment = null;
      this.markNeedsLayout$0();
    },
    get$alignment() {
      return this._alignment;
    },
    set$alignment(value) {
      type$.AlignmentGeometry._as(value);
      if (B.boolConversionCheck(J.$eq$(this._alignment, value)))
        return;
      this._alignment = value;
      this._markNeedResolution$0();
    },
    get$textDirection() {
      return this._shifted_box$_textDirection;
    },
    set$textDirection(value) {
      type$.nullable_TextDirection._as(value);
      if (B.boolConversionCheck(J.$eq$(this._shifted_box$_textDirection, value)))
        return;
      this._shifted_box$_textDirection = value;
      this._markNeedResolution$0();
    },
    alignChild$0() {
      var _this = this,
        t1 = _this.get$child().parentData;
      t1.toString;
      type$.BoxParentData._as(t1).set$offset(_this.get$resolvedAlignment().alongOffset$1(type$.Offset._as(J.$sub$n(_this.get$size(), _this.get$child().get$size()))));
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$RenderBox$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("alignment", this.get$alignment(), true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.AlignmentGeometry));
      properties.add$1(0, E.EnumProperty$("textDirection", this.get$textDirection(), _null, D.DiagnosticLevel_3, type$.TextDirection));
    },
    set$_resolvedAlignment(_resolvedAlignment) {
      this._resolvedAlignment = type$.nullable_Alignment._as(_resolvedAlignment);
    }
  };
  A.RenderPositionedBox.prototype = {
    set$widthFactor(value) {
      B._asDoubleQ(value);
      if (B.boolConversionCheck(J.$eq$(this._widthFactor, value)))
        return;
      this._widthFactor = value;
      this.markNeedsLayout$0();
    },
    set$heightFactor(value) {
      B._asDoubleQ(value);
      if (B.boolConversionCheck(J.$eq$(this._heightFactor, value)))
        return;
      this._heightFactor = value;
      this.markNeedsLayout$0();
    },
    computeDryLayout$1(constraints) {
      var shrinkWrapWidth, shrinkWrapHeight, t1, childSize, t2, t3, _this = this;
      type$.BoxConstraints._as(constraints);
      shrinkWrapWidth = _this._widthFactor != null || B.boolConversionCheck(J.$eq$(constraints.maxWidth, 1 / 0));
      shrinkWrapHeight = _this._heightFactor != null || B.boolConversionCheck(J.$eq$(constraints.maxHeight, 1 / 0));
      if (_this.get$child() != null) {
        t1 = _this.get$child();
        t1.toString;
        childSize = t1.getDryLayout$1(constraints.loosen$0());
        if (shrinkWrapWidth) {
          t1 = childSize.get$width();
          t2 = _this._widthFactor;
          if (t2 == null)
            t2 = 1;
          if (typeof t1 !== "number")
            return t1.$mul();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t2 = t1 * t2;
          t1 = t2;
        } else
          t1 = 1 / 0;
        if (shrinkWrapHeight) {
          t2 = childSize.get$height();
          t3 = _this._heightFactor;
          if (t3 == null)
            t3 = 1;
          if (typeof t2 !== "number")
            return t2.$mul();
          if (typeof t3 !== "number")
            return B.iae(t3);
          t3 = t2 * t3;
          t2 = t3;
        } else
          t2 = 1 / 0;
        return constraints.constrain$1(E.Size$(t1, t2));
      }
      t1 = shrinkWrapWidth ? 0 : 1 / 0;
      return constraints.constrain$1(E.Size$(t1, shrinkWrapHeight ? 0 : 1 / 0));
    },
    performLayout$0() {
      var t1, t2, t3, _this = this,
        constraints = _this.get$constraints(),
        shrinkWrapWidth = _this._widthFactor != null || B.boolConversionCheck(J.$eq$(constraints.maxWidth, 1 / 0)),
        shrinkWrapHeight = _this._heightFactor != null || B.boolConversionCheck(J.$eq$(constraints.maxHeight, 1 / 0));
      if (_this.get$child() != null) {
        t1 = _this.get$child();
        t1.toString;
        t1.layout$2$parentUsesSize(constraints.loosen$0(), true);
        if (shrinkWrapWidth) {
          t1 = _this.get$child().get$size().get$width();
          t2 = _this._widthFactor;
          if (t2 == null)
            t2 = 1;
          if (typeof t1 !== "number")
            return t1.$mul();
          if (typeof t2 !== "number")
            return B.iae(t2);
          t2 = t1 * t2;
          t1 = t2;
        } else
          t1 = 1 / 0;
        if (shrinkWrapHeight) {
          t2 = _this.get$child().get$size().get$height();
          t3 = _this._heightFactor;
          if (t3 == null)
            t3 = 1;
          if (typeof t2 !== "number")
            return t2.$mul();
          if (typeof t3 !== "number")
            return B.iae(t3);
          t3 = t2 * t3;
          t2 = t3;
        } else
          t2 = 1 / 0;
        _this.set$size(constraints.constrain$1(E.Size$(t1, t2)));
        _this.alignChild$0();
      } else {
        t1 = shrinkWrapWidth ? 0 : 1 / 0;
        _this.set$size(constraints.constrain$1(E.Size$(t1, shrinkWrapHeight ? 0 : 1 / 0)));
      }
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$RenderAligningShiftedBox$debugFillProperties(properties);
      properties.add$1(0, E.DoubleProperty$("widthFactor", this._widthFactor, D.C__NoDefaultValue, "expand", D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("heightFactor", this._heightFactor, D.C__NoDefaultValue, "expand", D.DiagnosticLevel_3, _null, _null));
    }
  };
  A._RenderShiftedBox_RenderBox_RenderObjectWithChildMixin.prototype = {
    attach$1(owner) {
      var t1;
      type$.PipelineOwner._as(owner);
      this.super$RenderObject$attach(owner);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.attach$1(owner);
    },
    detach$0() {
      this.super$RenderObject$detach();
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.detach$0();
    },
    $isRenderObjectWithChildMixin: 1
  };
  A.RelativeRect.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      return other instanceof A.RelativeRect && B.boolConversionCheck(J.$eq$(other.left, _this.left)) && B.boolConversionCheck(J.$eq$(other.top, _this.top)) && B.boolConversionCheck(J.$eq$(other.right, _this.right)) && B.boolConversionCheck(J.$eq$(other.bottom, _this.bottom));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.left, _this.top, _this.right, _this.bottom, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "RelativeRect.fromLTRB(" + B.S(J.toStringAsFixed$1$n(_this.left, 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.top, 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.right, 1)) + ", " + B.S(J.toStringAsFixed$1$n(_this.bottom, 1)) + ")";
    }
  };
  A.StackParentData.prototype = {
    get$isPositioned() {
      var _this = this;
      return _this.top != null || _this.right != null || _this.bottom != null || _this.left != null || _this.width != null || _this.height != null;
    },
    positionedChildConstraints$1(stackSize) {
      var _0_1, _0_3, t1, _0_3_isSet, _0_30, left, t2, right, _1_1, _1_3, _1_3_isSet, _1_30, $top, t3, bottom, _this = this, _null = null;
      type$.Size._as(stackSize);
      _0_1 = _this.left;
      _0_3 = _this.right;
      $label0$0: {
        t1 = _0_1;
        _0_3_isSet = t1 != null;
        _0_30 = _null;
        left = _null;
        t1 = false;
        if (_0_3_isSet) {
          t2 = _0_1 == null;
          if (t2)
            B._asDouble(_0_1);
          left = t2 ? B._asDouble(_0_1) : _0_1;
          t1 = _0_3;
          _0_30 = t1;
          t1 = t1 != null;
          if (t1)
            if (_0_30 == null)
              B._asDouble(_0_30);
        }
        if (t1) {
          right = _0_3_isSet ? _0_30 : _0_3;
          if (right == null)
            right = B._asDouble(right);
          t1 = stackSize.get$width();
          if (typeof t1 !== "number")
            return t1.$sub();
          if (typeof left !== "number")
            return B.iae(left);
          t1 = t1 - right - left;
          break $label0$0;
        }
        t1 = _this.width;
        break $label0$0;
      }
      _1_1 = _this.top;
      _1_3 = _this.bottom;
      $label1$1: {
        t2 = _1_1;
        _1_3_isSet = t2 != null;
        _1_30 = _null;
        $top = _null;
        t2 = false;
        if (_1_3_isSet) {
          t3 = _1_1 == null;
          if (t3)
            B._asDouble(_1_1);
          $top = t3 ? B._asDouble(_1_1) : _1_1;
          t2 = _1_3;
          _1_30 = t2;
          t2 = t2 != null;
          if (t2)
            if (_1_30 == null)
              B._asDouble(_1_30);
        }
        if (t2) {
          bottom = _1_3_isSet ? _1_30 : _1_3;
          if (bottom == null)
            bottom = B._asDouble(bottom);
          t2 = stackSize.get$height();
          if (typeof t2 !== "number")
            return t2.$sub();
          if (typeof $top !== "number")
            return B.iae($top);
          t2 = t2 - bottom - $top;
          break $label1$1;
        }
        t2 = _this.height;
        break $label1$1;
      }
      t1 = t1 == null ? _null : E.max(0, t1, type$.double);
      return E.BoxConstraints$tightFor(t2 == null ? _null : E.max(0, t2, type$.double), t1);
    },
    toString$0(_) {
      var _this = this,
        t1 = B._setArrayType([], type$.JSArray_String),
        t2 = _this.top;
      if (t2 != null)
        t1.push("top=" + B.S(E.debugFormatDouble(t2)));
      t2 = _this.right;
      if (t2 != null)
        t1.push("right=" + B.S(E.debugFormatDouble(t2)));
      t2 = _this.bottom;
      if (t2 != null)
        t1.push("bottom=" + B.S(E.debugFormatDouble(t2)));
      t2 = _this.left;
      if (t2 != null)
        t1.push("left=" + B.S(E.debugFormatDouble(t2)));
      t2 = _this.width;
      if (t2 != null)
        t1.push("width=" + B.S(E.debugFormatDouble(t2)));
      t2 = _this.height;
      if (t2 != null)
        t1.push("height=" + B.S(E.debugFormatDouble(t2)));
      if (B.boolConversionCheck(F.JSArray_methods.get$isEmpty(t1)))
        F.JSArray_methods.add$1(t1, "not positioned");
      F.JSArray_methods.add$1(t1, _this.super$BoxParentData$toString(0));
      return F.JSArray_methods.join$1(t1, "; ");
    },
    set$top($top) {
      this.top = B._asDoubleQ($top);
    },
    set$right(right) {
      this.right = B._asDoubleQ(right);
    },
    set$bottom(bottom) {
      this.bottom = B._asDoubleQ(bottom);
    },
    set$left(left) {
      this.left = B._asDoubleQ(left);
    },
    set$width(width) {
      this.width = B._asDoubleQ(width);
    },
    set$height(height) {
      this.height = B._asDoubleQ(height);
    }
  };
  A.StackFit.prototype = {
    _enumToString$0() {
      return "StackFit." + B.S(this._core$_name);
    }
  };
  A.RenderStack.prototype = {
    RenderStack$5$alignment$children$clipBehavior$fit$textDirection(alignment, children, clipBehavior, fit, textDirection) {
      this.addAll$1(0, children);
    },
    setupParentData$1(child) {
      type$.RenderBox._as(child);
      if (!(child.parentData instanceof A.StackParentData))
        child.parentData = A.StackParentData$();
    },
    get$_stack$_resolvedAlignment() {
      var _this = this,
        t1 = _this._resolvedAlignmentCache;
      if (t1 == null) {
        t1 = _this.get$alignment().resolve$1(_this.get$textDirection());
        _this.set$_resolvedAlignmentCache(t1);
      }
      return t1;
    },
    _stack$_markNeedResolution$0() {
      this._resolvedAlignmentCache = null;
      this.markNeedsLayout$0();
    },
    get$alignment() {
      return this._stack$_alignment;
    },
    set$alignment(value) {
      type$.AlignmentGeometry._as(value);
      if (B.boolConversionCheck(J.$eq$(this._stack$_alignment, value)))
        return;
      this._stack$_alignment = value;
      this._stack$_markNeedResolution$0();
    },
    get$textDirection() {
      return this._stack$_textDirection;
    },
    set$textDirection(value) {
      type$.nullable_TextDirection._as(value);
      if (B.boolConversionCheck(J.$eq$(this._stack$_textDirection, value)))
        return;
      this._stack$_textDirection = value;
      this._stack$_markNeedResolution$0();
    },
    get$fit() {
      return this._fit;
    },
    set$fit(value) {
      type$.StackFit._as(value);
      if (!B.boolConversionCheck(J.$eq$(this._fit, value))) {
        this._fit = value;
        this.markNeedsLayout$0();
      }
    },
    get$clipBehavior() {
      return this._stack$_clipBehavior;
    },
    set$clipBehavior(value) {
      var _this = this;
      type$.Clip._as(value);
      if (value !== _this._stack$_clipBehavior) {
        _this._stack$_clipBehavior = value;
        _this.markNeedsPaint$0();
        _this.markNeedsSemanticsUpdate$0();
      }
    },
    computeDistanceToActualBaseline$1(baseline) {
      return this.defaultComputeDistanceToHighestActualBaseline$1(type$.TextBaseline._as(baseline));
    },
    computeDryBaseline$2(constraints, baseline) {
      var t1, alignment, size, child, baselineOffset, _this = this;
      type$.BoxConstraints._as(constraints);
      type$.TextBaseline._as(baseline);
      switch (_this.get$fit()) {
        case C.StackFit_0:
          t1 = constraints.loosen$0();
          break;
        case C.StackFit_1:
          t1 = A.BoxConstraints$tight(constraints.get$biggest());
          break;
        case C.StackFit_2:
          t1 = constraints;
          break;
        default:
          t1 = null;
      }
      alignment = _this.get$_stack$_resolvedAlignment();
      size = _this.getDryLayout$1(constraints);
      for (child = _this.get$firstChild(), baselineOffset = null; child != null; child = _this.childAfter$1(child))
        baselineOffset = A.BaselineOffset_minOf(baselineOffset, E.BaselineOffset_constructor_(A.RenderStack__baselineForChild(child, size, t1, alignment, baseline)));
      return baselineOffset;
    },
    computeDryLayout$1(constraints) {
      return this._stack$_computeSize$2$constraints$layoutChild(type$.BoxConstraints._as(constraints), A.layout_helper_ChildLayoutHelper_dryLayoutChild$closure());
    },
    _stack$_computeSize$2$constraints$layoutChild(constraints, layoutChild) {
      var width, height, t1, child, t2, t3, hasNonPositionedChildren, t4, childSize;
      type$.BoxConstraints._as(constraints);
      type$.Size_Function_RenderBox_BoxConstraints._as(layoutChild);
      if (B.boolConversionCheck(J.$eq$(this.get$childCount(), 0)))
        return B.boolConversionCheck(J.get$isFinite$n(constraints.get$biggest())) ? constraints.get$biggest() : constraints.get$smallest();
      width = constraints.minWidth;
      height = constraints.minHeight;
      switch (this.get$fit()) {
        case C.StackFit_0:
          t1 = constraints.loosen$0();
          break;
        case C.StackFit_1:
          t1 = A.BoxConstraints$tight(constraints.get$biggest());
          break;
        case C.StackFit_2:
          t1 = constraints;
          break;
        default:
          t1 = null;
      }
      child = this.get$firstChild();
      for (t2 = type$.StackParentData, t3 = type$.double, hasNonPositionedChildren = false; child != null;) {
        t4 = child.parentData;
        t4.toString;
        t2._as(t4);
        if (!B.boolConversionCheck(t4.get$isPositioned())) {
          childSize = layoutChild.call$2(child, t1);
          width = E.max(width, childSize.get$width(), t3);
          height = E.max(height, childSize.get$height(), t3);
          hasNonPositionedChildren = true;
        }
        child = t4.ContainerParentDataMixin_nextSibling;
      }
      return hasNonPositionedChildren ? E.Size$(width, height) : constraints.get$biggest();
    },
    performLayout$0() {
      var resolvedAlignment, child, t1, t2, t3, _this = this,
        constraints = _this.get$constraints();
      _this._hasVisualOverflow = false;
      _this.set$size(_this._stack$_computeSize$2$constraints$layoutChild(constraints, A.layout_helper_ChildLayoutHelper_layoutChild$closure()));
      resolvedAlignment = _this.get$_stack$_resolvedAlignment();
      child = _this.get$firstChild();
      for (t1 = type$.StackParentData, t2 = type$.Offset; child != null;) {
        t3 = child.parentData;
        t3.toString;
        t1._as(t3);
        if (!B.boolConversionCheck(t3.get$isPositioned()))
          t3.set$offset(resolvedAlignment.alongOffset$1(t2._as(J.$sub$n(_this.get$size(), child.get$size()))));
        else
          _this._hasVisualOverflow = B.boolConversionCheck(A.RenderStack_layoutPositionedChild(child, t3, _this.get$size(), resolvedAlignment)) || B.boolConversionCheck(_this._hasVisualOverflow);
        child = t3.ContainerParentDataMixin_nextSibling;
      }
    },
    hitTestChildren$2$position(result, position) {
      return this.defaultHitTestChildren$2$position(type$.BoxHitTestResult._as(result), type$.Offset._as(position));
    },
    paintStack$2(context, offset) {
      this.defaultPaint$2(type$.PaintingContext._as(context), type$.Offset._as(offset));
    },
    paint$2(context, offset) {
      var t1, t2, _this = this;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      t1 = !B.boolConversionCheck(J.$eq$(_this.get$clipBehavior(), D.Clip_0)) && B.boolConversionCheck(_this._hasVisualOverflow);
      t2 = _this._stack$_clipRectLayer;
      if (t1)
        t2.set$layer(context.pushClipRect$6$clipBehavior$oldLayer(_this.get$needsCompositing(), offset, D.Offset_0_0.$and(0, _this.get$size()), _this.get$paintStack(), _this.get$clipBehavior(), t2.get$layer()));
      else {
        t2.set$layer(null);
        _this.paintStack$2(context, offset);
      }
    },
    dispose$0() {
      this._stack$_clipRectLayer.set$layer(null);
      this.super$RenderObject$dispose();
    },
    describeApproximatePaintClip$1(child) {
      type$.RenderObject._as(child);
      switch (this.get$clipBehavior()) {
        case D.Clip_0:
          return null;
        case D.Clip_1:
        case D.Clip_2:
        case D.Clip_3:
          return B.boolConversionCheck(this._hasVisualOverflow) ? D.Offset_0_0.$and(0, this.get$size()) : null;
      }
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$RenderBox$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("alignment", _this.get$alignment(), true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.AlignmentGeometry));
      properties.add$1(0, E.EnumProperty$("textDirection", _this.get$textDirection(), D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.TextDirection));
      properties.add$1(0, E.EnumProperty$("fit", _this.get$fit(), D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.StackFit));
      properties.add$1(0, E.EnumProperty$("clipBehavior", _this.get$clipBehavior(), D.Clip_1, D.DiagnosticLevel_3, type$.Clip));
    },
    set$_resolvedAlignmentCache(_resolvedAlignmentCache) {
      this._resolvedAlignmentCache = type$.nullable_Alignment._as(_resolvedAlignmentCache);
    },
    $isRenderBoxContainerDefaultsMixin: 1,
    $isContainerRenderObjectMixin: 1
  };
  A._RenderStack_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      type$.PipelineOwner._as(owner);
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0() {
      var child, t1, t2;
      this.super$RenderObject$detach();
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData; child != null;) {
        child.detach$0();
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    $isContainerRenderObjectMixin: 1
  };
  A._RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {$isRenderBoxContainerDefaultsMixin: 1, $isContainerRenderObjectMixin: 1};
  A.Ticker.prototype = {
    Ticker$2$debugLabel(_onTick, debugLabel) {
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(B.S(C.Type_Ticker_C3K), "package:flutter/scheduler.dart", this);
    },
    get$muted() {
      return this._muted;
    },
    set$muted(value) {
      var _this = this;
      B._asBool(value);
      if (value === _this.get$muted())
        return;
      _this._muted = value;
      if (value)
        _this.unscheduleTick$0();
      else if (B.boolConversionCheck(_this.get$shouldScheduleTick()))
        _this.scheduleTick$0();
    },
    get$isActive() {
      return this._ticker$_future != null;
    },
    start$0() {
      var t1, _this = this;
      _this._ticker$_future = A.TickerFuture$_();
      if (B.boolConversionCheck(_this.get$shouldScheduleTick()))
        _this.scheduleTick$0();
      t1 = E.SchedulerBinding_instance().get$schedulerPhase().index;
      if (typeof t1 !== "number")
        return t1.$gt();
      if (t1 > 0) {
        t1 = E.SchedulerBinding_instance().get$schedulerPhase().index;
        if (typeof t1 !== "number")
          return t1.$lt();
        t1 = t1 < 4;
      } else
        t1 = false;
      if (t1)
        _this.set$_startTime(E.SchedulerBinding_instance().get$currentFrameTimeStamp());
      t1 = _this._ticker$_future;
      t1.toString;
      return t1;
    },
    stop$1$canceled(canceled) {
      var t1, _this = this;
      B._asBool(canceled);
      if (!B.boolConversionCheck(_this.get$isActive()))
        return;
      t1 = _this._ticker$_future;
      t1.toString;
      _this._startTime = _this._ticker$_future = null;
      _this.unscheduleTick$0();
      if (canceled)
        t1._ticker$_cancel$1(_this);
      else
        t1._ticker$_complete$0();
    },
    get$scheduled() {
      return this._animationId != null;
    },
    get$shouldScheduleTick() {
      return !B.boolConversionCheck(this.get$muted()) && B.boolConversionCheck(this.get$isActive()) && !B.boolConversionCheck(this.get$scheduled());
    },
    _ticker$_tick$1(timeStamp) {
      var t1, _this = this;
      type$.Duration._as(timeStamp);
      _this._animationId = null;
      t1 = _this._startTime;
      if (t1 == null) {
        _this._startTime = timeStamp;
        t1 = timeStamp;
      }
      _this._onTick.call$1(timeStamp.$sub(0, t1));
      if (B.boolConversionCheck(_this.get$shouldScheduleTick()))
        _this.scheduleTick$1$rescheduling(true);
    },
    scheduleTick$1$rescheduling(rescheduling) {
      B._asBool(rescheduling);
      this.set$_animationId(E.SchedulerBinding_instance().scheduleFrameCallback$2$rescheduling(this.get$_ticker$_tick(), rescheduling));
    },
    scheduleTick$0() {
      return this.scheduleTick$1$rescheduling(false);
    },
    unscheduleTick$0() {
      var t1, t2;
      if (B.boolConversionCheck(this.get$scheduled())) {
        t1 = E.SchedulerBinding_instance();
        t2 = this._animationId;
        t2.toString;
        t1.cancelFrameCallbackWithId$1(t2);
        this._animationId = null;
      }
    },
    dispose$0() {
      var t1, _this = this;
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectDisposed$1$object(_this);
      t1 = _this._ticker$_future;
      if (t1 != null) {
        _this._ticker$_future = null;
        _this.unscheduleTick$0();
        t1._ticker$_cancel$1(_this);
      }
    },
    toString$0(_) {
      var buffer = B.StringBuffer$("");
      buffer.write$1(B.S(E.objectRuntimeType(this, "Ticker")) + "(");
      buffer.write$1(")");
      return buffer.toString$0(0);
    },
    set$_startTime(_startTime) {
      this._startTime = type$.nullable_Duration._as(_startTime);
    },
    set$_animationId(_animationId) {
      this._animationId = B._asIntQ(_animationId);
    }
  };
  A.TickerFuture.prototype = {
    TickerFuture$complete$0() {
      this._ticker$_complete$0();
    },
    _ticker$_complete$0() {
      this._completed = true;
      this._primaryCompleter.complete$0();
      var t1 = this._secondaryCompleter;
      if (t1 != null)
        t1.complete$0();
    },
    _ticker$_cancel$1(ticker) {
      var t1;
      type$.Ticker._as(ticker);
      this._completed = false;
      t1 = this._secondaryCompleter;
      if (t1 != null)
        t1.completeError$1(A.TickerCanceled$(ticker));
    },
    whenCompleteOrCancel$1(callback) {
      var t1 = new A.TickerFuture_whenCompleteOrCancel_thunk(type$.void_Function._as(callback));
      this.get$orCancel().then$1$2$onError(t1, t1, type$.void);
    },
    get$orCancel() {
      var t1, t2, _this = this;
      if (_this._secondaryCompleter == null) {
        _this.set$_secondaryCompleter(B.Completer_Completer(type$.void));
        t1 = _this._completed;
        if (t1 != null) {
          B.boolConversionCheck(t1);
          t2 = _this._secondaryCompleter;
          if (t1)
            t2.complete$0();
          else
            t2.completeError$1(C.TickerCanceled_null);
        }
      }
      return _this._secondaryCompleter.get$future();
    },
    catchError$2$test(onError, test) {
      type$.Function._as(onError);
      type$.nullable_bool_Function_Object._as(test);
      return this._primaryCompleter.get$future().catchError$2$test(onError, test);
    },
    catchError$1(onError) {
      return this.catchError$2$test(onError, null);
    },
    then$1$2$onError(onValue, onError, $R) {
      $R._eval$1("0/(~)")._as(onValue);
      type$.nullable_Function._as(onError);
      return this._primaryCompleter.get$future().then$1$2$onError(onValue, onError, $R);
    },
    then$1$1(onValue, $R) {
      return this.then$1$2$onError(onValue, null, $R);
    },
    whenComplete$1(action) {
      type$.dynamic_Function._as(action);
      return this._primaryCompleter.get$future().whenComplete$1(action);
    },
    toString$0(_) {
      var t1 = B.S(E.describeIdentity(this)),
        t2 = this._completed;
      if (t2 == null)
        t2 = "active";
      else
        t2 = B.boolConversionCheck(t2) ? "complete" : "canceled";
      return t1 + "(" + t2 + ")";
    },
    set$_secondaryCompleter(_secondaryCompleter) {
      this._secondaryCompleter = type$.nullable_Completer_void._as(_secondaryCompleter);
    },
    $isFuture: 1
  };
  A.TickerCanceled.prototype = {
    toString$0(_) {
      var t1 = this.ticker;
      if (t1 != null)
        return "This ticker was canceled: " + B.S(t1);
      return 'The ticker was canceled before the "orCancel" property was first used.';
    },
    $isException: 1
  };
  A.SemanticsSortKey.prototype = {
    compareTo$1(_, other) {
      var t1, t2, t3, t4;
      type$.SemanticsSortKey._as(other);
      t1 = this.name;
      t2 = other.name;
      t3 = J.getInterceptor$(t1);
      if (B.boolConversionCheck(t3.$eq(t1, t2)))
        return this.doCompare$1(other);
      t4 = t1 == null;
      if (t4 && t2 != null)
        return -1;
      else if (!t4 && t2 == null)
        return 1;
      t1.toString;
      t2.toString;
      return t3.compareTo$1(t1, t2);
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.StringProperty$("name", this.name, null, true, true));
    },
    $isComparable: 1,
    $isDiagnosticable: 1
  };
  A.OrdinalSortKey.prototype = {
    doCompare$1(other) {
      var t1 = type$.OrdinalSortKey._as(other).order,
        t2 = this.order;
      if (B.boolConversionCheck(J.$eq$(t1, t2)))
        return 0;
      return J.compareTo$1$ns(t2, t1);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$SemanticsSortKey$debugFillProperties(properties);
      properties.add$1(0, E.DoubleProperty$("order", this.order, _null, _null, D.DiagnosticLevel_3, _null, _null));
    }
  };
  A._SemanticsSortKey_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.SemanticsEvent.prototype = {
    toMap$1$nodeId(nodeId) {
      var $event;
      B._asIntQ(nodeId);
      $event = B.LinkedHashMap_LinkedHashMap$_literal(["type", this.type, "data", this.getDataMap$0()], type$.String, type$.dynamic);
      if (nodeId != null)
        $event.$indexSet(0, "nodeId", nodeId);
      return $event;
    },
    toString$0(_) {
      var t2,
        pairs = B._setArrayType([], type$.JSArray_String),
        dataMap = this.getDataMap$0(),
        sortedKeys = J.toList$0$ax(dataMap.get$keys()),
        t1 = J.getInterceptor$ax(sortedKeys);
      t1.sort$0(sortedKeys);
      for (t1 = t1.get$iterator(sortedKeys); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        F.JSArray_methods.add$1(pairs, t2 + ": " + B.S(dataMap.$index(0, t2)));
      }
      return B.S(E.objectRuntimeType(this, "SemanticsEvent")) + "(" + B.S(F.JSArray_methods.join$1(pairs, ", ")) + ")";
    }
  };
  A.LongPressSemanticsEvent.prototype = {
    getDataMap$0() {
      return F.Map_empty2;
    }
  };
  A.TapSemanticEvent.prototype = {
    getDataMap$0() {
      return F.Map_empty2;
    }
  };
  A.FocusSemanticEvent.prototype = {
    getDataMap$0() {
      return F.Map_empty2;
    }
  };
  A.ApplicationSwitcherDescription.prototype = {};
  A.SystemSoundType.prototype = {
    _enumToString$0() {
      return "SystemSoundType." + B.S(this._core$_name);
    }
  };
  A.TextBoundary.prototype = {
    getLeadingTextBoundaryAt$1(position) {
      var start;
      B._asInt(position);
      if (position < 0)
        return null;
      start = this.getTextBoundaryAt$1(position).start;
      return start >= 0 ? start : null;
    },
    getTrailingTextBoundaryAt$1(position) {
      var end = this.getTextBoundaryAt$1(E.max(0, B._asInt(position), type$.int)).end;
      return end >= 0 ? end : null;
    },
    getTextBoundaryAt$1(position) {
      var start, end;
      B._asInt(position);
      start = this.getLeadingTextBoundaryAt$1(position);
      if (start == null)
        start = -1;
      end = this.getTrailingTextBoundaryAt$1(position);
      return E.TextRange$(end == null ? -1 : end, start);
    }
  };
  A.CharacterBoundary.prototype = {
    getLeadingTextBoundaryAt$1(position) {
      var t1;
      B._asInt(position);
      if (position < 0)
        return null;
      t1 = this._text_boundary$_text;
      return A.StringCharacterRange_StringCharacterRange$at(t1, E.min(position, J.get$length$asx(t1), type$.int)).get$stringBeforeLength();
    },
    getTrailingTextBoundaryAt$1(position) {
      var t1, t2, rangeAtPosition;
      B._asInt(position);
      t1 = this._text_boundary$_text;
      t2 = J.get$length$asx(t1);
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (position >= t2)
        return null;
      rangeAtPosition = A.StringCharacterRange_StringCharacterRange$at(t1, E.max(0, position + 1, type$.int));
      t1 = rangeAtPosition.get$stringBeforeLength();
      t2 = J.get$length$asx(rangeAtPosition.get$current());
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      return t1 + t2;
    },
    getTextBoundaryAt$1(position) {
      var t1, t2, rangeAtPosition, t3, _this = this;
      B._asInt(position);
      if (position < 0) {
        t1 = _this.getTrailingTextBoundaryAt$1(position);
        return E.TextRange$(t1 == null ? -1 : t1, -1);
      } else {
        t1 = _this._text_boundary$_text;
        t2 = J.get$length$asx(t1);
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (position >= t2) {
          t1 = _this.getLeadingTextBoundaryAt$1(position);
          return E.TextRange$(-1, t1 == null ? -1 : t1);
        }
      }
      rangeAtPosition = A.StringCharacterRange_StringCharacterRange$at(t1, position);
      if (B.boolConversionCheck(rangeAtPosition.get$isNotEmpty(0))) {
        t1 = rangeAtPosition.get$stringBeforeLength();
        t2 = rangeAtPosition.get$stringBeforeLength();
        t3 = J.get$length$asx(rangeAtPosition.get$current());
        if (typeof t2 !== "number")
          return t2.$add();
        if (typeof t3 !== "number")
          return B.iae(t3);
        t1 = E.TextRange$(t2 + t3, t1);
      } else {
        t1 = rangeAtPosition.get$stringBeforeLength();
        t2 = _this.getTrailingTextBoundaryAt$1(position);
        t1 = E.TextRange$(t2 == null ? -1 : t2, t1);
      }
      return t1;
    }
  };
  A.LineBoundary.prototype = {
    getTextBoundaryAt$1(position) {
      return this._textLayout.getLineAtOffset$1(E.TextPosition$(D.TextAffinity_1, E.max(B._asInt(position), 0, type$.int)));
    }
  };
  A.ParagraphBoundary.prototype = {
    getLeadingTextBoundaryAt$1(position) {
      var t1, t2, t3, index;
      B._asInt(position);
      if (position < 0 || B.boolConversionCheck(J.get$isEmpty$asx(this._text_boundary$_text)))
        return null;
      t1 = this._text_boundary$_text;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.get$length(t1);
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (position >= t3)
        return t2.get$length(t1);
      if (position === 0)
        return 0;
      if (position > 1 && B.boolConversionCheck(J.$eq$(t2.codeUnitAt$1(t1, position), 10)) && B.boolConversionCheck(J.$eq$(t2.codeUnitAt$1(t1, position - 1), 13)))
        index = position - 2;
      else
        index = B.boolConversionCheck(A.TextLayoutMetrics_isLineTerminator(t2.codeUnitAt$1(t1, position))) ? position - 1 : position;
      for (; index > 0;) {
        if (B.boolConversionCheck(A.TextLayoutMetrics_isLineTerminator(t2.codeUnitAt$1(t1, index))))
          return index + 1;
        --index;
      }
      return E.max(index, 0, type$.int);
    },
    getTrailingTextBoundaryAt$1(position) {
      var t1, t2, t3, index;
      B._asInt(position);
      t1 = this._text_boundary$_text;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.get$length(t1);
      if (typeof t3 !== "number")
        return B.iae(t3);
      if (position >= t3 || B.boolConversionCheck(t2.get$isEmpty(t1)))
        return null;
      if (position < 0)
        return 0;
      for (index = position; !B.boolConversionCheck(A.TextLayoutMetrics_isLineTerminator(t2.codeUnitAt$1(t1, index)));) {
        ++index;
        if (index === t2.get$length(t1))
          return index;
      }
      t3 = t2.get$length(t1);
      if (typeof t3 !== "number")
        return t3.$sub();
      return index < t3 - 1 && B.boolConversionCheck(J.$eq$(t2.codeUnitAt$1(t1, index), 13)) && B.boolConversionCheck(J.$eq$(t2.codeUnitAt$1(t1, index + 1), 10)) ? index + 2 : index + 1;
    }
  };
  A.DocumentBoundary.prototype = {
    getLeadingTextBoundaryAt$1(position) {
      return B._asInt(position) < 0 ? null : 0;
    },
    getTrailingTextBoundaryAt$1(position) {
      var t1, t2, t3;
      B._asInt(position);
      t1 = this._text_boundary$_text;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.get$length(t1);
      if (typeof t3 !== "number")
        return B.iae(t3);
      return position >= t3 ? null : t2.get$length(t1);
    }
  };
  A.SelectionChangedCause.prototype = {
    _enumToString$0() {
      return "SelectionChangedCause." + B.S(this._core$_name);
    }
  };
  A.Intent.prototype = {$isDiagnosticable: 1};
  A.Action.prototype = {
    _updateCallingAction$1(value) {
      this.set$_currentCallingAction(B._instanceType(this)._eval$1("Action<Action.T>?")._as(value));
    },
    get$callingAction() {
      return this._currentCallingAction;
    },
    isEnabled$1(intent) {
      B._instanceType(this)._eval$1("Action.T")._as(intent);
      return this.get$isActionEnabled();
    },
    _isEnabled$2(intent, context) {
      var _this = this,
        t1 = B._instanceType(_this);
      t1._eval$1("Action.T")._as(intent);
      type$.nullable_BuildContext._as(context);
      if (t1._eval$1("ContextAction<Action.T>")._is(_this))
        return _this.isEnabled$2(intent, context);
      return _this.isEnabled$1(intent);
    },
    get$isActionEnabled() {
      return true;
    },
    consumesKey$1(intent) {
      B._instanceType(this)._eval$1("Action.T")._as(intent);
      return true;
    },
    toKeyEventResult$2(intent, invokeResult) {
      return B.boolConversionCheck(this.consumesKey$1(B._instanceType(this)._eval$1("Action.T")._as(intent))) ? D.KeyEventResult_0 : D.KeyEventResult_2;
    },
    _invoke$2(intent, context) {
      var _this = this,
        t1 = B._instanceType(_this);
      t1._eval$1("Action.T")._as(intent);
      type$.nullable_BuildContext._as(context);
      if (t1._eval$1("ContextAction<Action.T>")._is(_this))
        return _this.invoke$2(intent, context);
      return _this.invoke$1(intent);
    },
    addActionListener$1(listener) {
      return J.add$1$ax(this._actions$_listeners, type$.void_Function_Action_Intent._as(listener));
    },
    removeActionListener$1(listener) {
      return J.remove$1$ax(this._actions$_listeners, type$.void_Function_Action_Intent._as(listener));
    },
    _makeOverridableAction$1(context) {
      return A._OverridableAction$(this, type$.BuildContext._as(context), B._instanceType(this)._eval$1("Action.T"));
    },
    set$_currentCallingAction(_currentCallingAction) {
      this._currentCallingAction = B._instanceType(this)._eval$1("Action<Action.T>?")._as(_currentCallingAction);
    },
    $isDiagnosticable: 1
  };
  A.ContextAction.prototype = {
    isEnabled$2(intent, context) {
      B._instanceType(this)._eval$1("ContextAction.T")._as(intent);
      type$.nullable_BuildContext._as(context);
      return this.super$Action$isEnabled(intent);
    },
    isEnabled$1(intent) {
      return this.isEnabled$2(intent, null);
    },
    _makeOverridableAction$1(context) {
      return A._OverridableContextAction$(this, type$.BuildContext._as(context), B._instanceType(this)._eval$1("ContextAction.T"));
    }
  };
  A.CallbackAction.prototype = {
    invoke$1(intent) {
      return this.onInvoke.call$1(this.$ti._precomputed1._as(intent));
    }
  };
  A.Actions.prototype = {
    createState$0() {
      return A._ActionsState$();
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("dispatcher", _null, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ActionDispatcher));
      properties.add$1(0, E.DiagnosticsProperty$("actions", this.actions, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Map_of_Type_and_Action_Intent));
    }
  };
  A._ActionsState.prototype = {
    initState$0() {
      this.super$State$initState0();
      this._updateActionListeners$0();
    },
    _handleActionChanged$1(action) {
      type$.Action_Intent._as(action);
      this.setState$1(new A._ActionsState__handleActionChanged_closure(this));
    },
    _updateActionListeners$0() {
      var addedActions, t2, _this = this,
        widgetActions = J.toSet$0$ax(_this.get$widget().actions.get$values()),
        removedActions = _this.listenedActions.difference$1(widgetActions),
        t1 = _this.listenedActions;
      t1.toString;
      addedActions = widgetActions.difference$1(t1);
      for (t1 = removedActions.get$iterator(removedActions), t2 = _this.get$_handleActionChanged(); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().removeActionListener$1(t2);
      for (t1 = addedActions.get$iterator(addedActions); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().addActionListener$1(t2);
      _this.set$listenedActions(widgetActions);
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(type$.Actions._as(oldWidget));
      this._updateActionListeners$0();
    },
    dispose$0() {
      var t1, t2, _this = this;
      _this.super$State$dispose();
      t1 = _this.listenedActions;
      t1.toString;
      t1 = J.get$iterator$ax(t1);
      t2 = _this.get$_handleActionChanged();
      for (; B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().removeActionListener$1(t2);
      _this.set$listenedActions(null);
    },
    build$1(context) {
      var t1, t2, _this = this;
      type$.BuildContext._as(context);
      t1 = _this.get$widget().actions;
      _this.get$widget().toString;
      t2 = _this.rebuildKey;
      return A._ActionsScope$(t1, _this.get$widget().child, null, t2);
    },
    set$listenedActions(listenedActions) {
      this.listenedActions = type$.nullable_Set_Action_Intent._as(listenedActions);
    }
  };
  A._ActionsScope.prototype = {
    updateShouldNotify$1(oldWidget) {
      type$._ActionsScope._as(oldWidget);
      return !B.boolConversionCheck(J.$eq$(this.rebuildKey, oldWidget.rebuildKey)) || !B.boolConversionCheck(J.$eq$(oldWidget.dispatcher, this.dispatcher)) || !B.boolConversionCheck(A.mapEquals(oldWidget.actions, this.actions, type$.Type, type$.Action_Intent));
    }
  };
  A.VoidCallbackAction.prototype = {
    invoke$1(intent) {
      type$.VoidCallbackIntent._as(intent).callback$0();
      return null;
    }
  };
  A.DoNothingAction.prototype = {
    consumesKey$1(intent) {
      type$.Intent._as(intent);
      return this._consumesKey;
    },
    invoke$1(intent) {
      type$.Intent._as(intent);
    }
  };
  A.ActivateIntent.prototype = {};
  A.ButtonActivateIntent.prototype = {};
  A.DismissIntent.prototype = {};
  A.DismissAction.prototype = {};
  A.PrioritizedIntents.prototype = {};
  A.PrioritizedAction.prototype = {
    get$_selectedAction() {
      return this.__PrioritizedAction__selectedAction_A;
    },
    set$_selectedAction(value) {
      this.__PrioritizedAction__selectedAction_A = type$.Action_dynamic._as(value);
    },
    get$_selectedIntent() {
      return this.__PrioritizedAction__selectedIntent_A;
    },
    set$_selectedIntent(value) {
      this.__PrioritizedAction__selectedIntent_A = type$.Intent._as(value);
    },
    isEnabled$2(intent, context) {
      var $focus, t1, t2, t3, t4, candidateAction;
      type$.PrioritizedIntents._as(intent);
      type$.nullable_BuildContext._as(context);
      $focus = E.primaryFocus();
      if ($focus == null || $focus.get$context() == null)
        return false;
      for (t1 = F.JSArray_methods.get$iterator(C.List_6w5), t2 = type$.Intent; B.boolConversionCheck(t1.moveNext$0());) {
        t3 = t1.get$current();
        t4 = $focus.get$context();
        t4.toString;
        candidateAction = A.Actions_maybeFind(t4, t3, t2);
        if (candidateAction != null && B.boolConversionCheck(candidateAction._isEnabled$2(t3, context))) {
          this.set$_selectedAction(candidateAction);
          this.set$_selectedIntent(t3);
          return true;
        }
      }
      return false;
    },
    isEnabled$1(intent) {
      return this.isEnabled$2(intent, null);
    },
    invoke$2(intent, context) {
      type$.PrioritizedIntents._as(intent);
      type$.nullable_BuildContext._as(context);
      this.get$_selectedAction()._invoke$2(this.get$_selectedIntent(), context);
    },
    invoke$1(intent) {
      return this.invoke$2(intent, null);
    }
  };
  A._OverridableActionMixin.prototype = {
    getOverrideAction$1$declareDependency(declareDependency) {
      var t1 = B._instanceType(this)._precomputed1;
      return B._asBool(declareDependency) ? A.Actions_maybeFind(this.get$lookupContext(), null, t1) : A.Actions__maybeFindWithoutDependingOn(this.get$lookupContext(), t1);
    },
    getOverrideAction$0() {
      return this.getOverrideAction$1$declareDependency(false);
    },
    _invokeOverride$3(overrideAction, intent, context) {
      var $returnValue,
        t1 = B._instanceType(this);
      t1._eval$1("Action<1>")._as(overrideAction);
      t1._precomputed1._as(intent);
      type$.nullable_BuildContext._as(context);
      overrideAction._updateCallingAction$1(this.get$defaultAction());
      $returnValue = overrideAction._invoke$2(intent, context);
      overrideAction._updateCallingAction$1(null);
      return $returnValue;
    },
    invoke$2(intent, context) {
      var overrideAction, _this = this;
      B._instanceType(_this)._precomputed1._as(intent);
      type$.nullable_BuildContext._as(context);
      overrideAction = _this.getOverrideAction$0();
      return overrideAction == null ? _this.invokeDefaultAction$3(intent, _this.get$callingAction(), context) : _this._invokeOverride$3(overrideAction, intent, context);
    },
    invoke$1(intent) {
      return this.invoke$2(intent, null);
    },
    isOverrideActionEnabled$1(overrideAction) {
      var isOverrideEnabled;
      B._instanceType(this)._eval$1("Action<1>")._as(overrideAction);
      overrideAction._updateCallingAction$1(this.get$defaultAction());
      isOverrideEnabled = overrideAction.get$isActionEnabled();
      overrideAction._updateCallingAction$1(null);
      return isOverrideEnabled;
    },
    get$isActionEnabled() {
      var overrideAction = this.getOverrideAction$1$declareDependency(true);
      return overrideAction != null ? this.isOverrideActionEnabled$1(overrideAction) : this.get$defaultAction().get$isActionEnabled();
    },
    isEnabled$2(intent, context) {
      var overrideAction, t1, $returnValue, _this = this;
      B._instanceType(_this)._precomputed1._as(intent);
      type$.nullable_BuildContext._as(context);
      overrideAction = _this.getOverrideAction$0();
      t1 = overrideAction == null;
      if (!t1)
        overrideAction._updateCallingAction$1(_this.get$defaultAction());
      $returnValue = (t1 ? _this.get$defaultAction() : overrideAction)._isEnabled$2(intent, context);
      if (!t1)
        overrideAction._updateCallingAction$1(null);
      return $returnValue;
    },
    isEnabled$1(intent) {
      return this.isEnabled$2(intent, null);
    },
    consumesKey$1(intent) {
      var overrideAction, t1, isEnabled, _this = this;
      B._instanceType(_this)._precomputed1._as(intent);
      overrideAction = _this.getOverrideAction$0();
      t1 = overrideAction == null;
      if (!t1)
        overrideAction._updateCallingAction$1(_this.get$defaultAction());
      isEnabled = (t1 ? _this.get$defaultAction() : overrideAction).consumesKey$1(intent);
      if (!t1)
        overrideAction._updateCallingAction$1(null);
      return isEnabled;
    },
    $isDiagnosticable: 1,
    $isAction: 1,
    $is_Action_Object_Diagnosticable: 1
  };
  A._OverridableAction.prototype = {
    invokeDefaultAction$3(intent, fromAction, context) {
      var t1 = this.$ti;
      t1._precomputed1._as(intent);
      t1._eval$1("Action<1>?")._as(fromAction);
      type$.nullable_BuildContext._as(context);
      t1 = this.defaultAction;
      if (fromAction == null)
        return t1.invoke$1(intent);
      else
        return t1.invoke$1(intent);
    },
    _makeOverridableAction$1(context) {
      return A._OverridableAction$(this.defaultAction, type$.BuildContext._as(context), this.$ti._precomputed1);
    },
    $is_OverridableActionMixin: 1,
    get$defaultAction() {
      return this.defaultAction;
    },
    get$lookupContext() {
      return this.lookupContext;
    }
  };
  A._OverridableContextAction.prototype = {
    _invokeOverride$3(overrideAction, intent, context) {
      var $returnValue,
        t1 = this.$ti;
      t1._eval$1("Action<1>")._as(overrideAction);
      t1 = t1._precomputed1;
      t1._as(intent);
      type$.nullable_BuildContext._as(context);
      context.toString;
      overrideAction._updateCallingAction$1(A._ContextActionToActionAdapter$(this.defaultAction, context, t1));
      $returnValue = overrideAction._invoke$2(intent, context);
      overrideAction._updateCallingAction$1(null);
      return $returnValue;
    },
    invokeDefaultAction$3(intent, fromAction, context) {
      var t1 = this.$ti;
      t1._precomputed1._as(intent);
      t1._eval$1("Action<1>?")._as(fromAction);
      type$.nullable_BuildContext._as(context);
      t1 = this.defaultAction;
      if (fromAction == null)
        return t1.invoke$2(intent, context);
      else
        return t1.invoke$2(intent, context);
    },
    _makeOverridableAction$1(context) {
      return A._OverridableContextAction$(this.defaultAction, type$.BuildContext._as(context), this.$ti._precomputed1);
    },
    $is_OverridableActionMixin: 1,
    get$defaultAction() {
      return this.defaultAction;
    },
    get$lookupContext() {
      return this.lookupContext;
    }
  };
  A._ContextActionToActionAdapter.prototype = {
    _updateCallingAction$1(value) {
      this.action._updateCallingAction$1(this.$ti._eval$1("Action<1>?")._as(value));
    },
    isEnabled$1(intent) {
      return this.action.isEnabled$2(this.$ti._precomputed1._as(intent), this.invokeContext);
    },
    get$isActionEnabled() {
      return this.action.get$isActionEnabled();
    },
    consumesKey$1(intent) {
      return this.action.consumesKey$1(this.$ti._precomputed1._as(intent));
    },
    addActionListener$1(listener) {
      type$.void_Function_Action_Intent._as(listener);
      this.super$Action$addActionListener(listener);
      this.action.addActionListener$1(listener);
    },
    removeActionListener$1(listener) {
      type$.void_Function_Action_Intent._as(listener);
      this.super$Action$removeActionListener(listener);
      this.action.removeActionListener$1(listener);
    },
    invoke$1(intent) {
      return this.action.invoke$2(this.$ti._precomputed1._as(intent), this.invokeContext);
    }
  };
  A._Action_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A._Intent_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.__OverridableAction_ContextAction__OverridableActionMixin.prototype = {
    _updateCallingAction$1(value) {
      this.$ti._eval$1("Action<1>?")._as(value);
      this.super$Action$_updateCallingAction(value);
      this.defaultAction._updateCallingAction$1(value);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("defaultAction", this.defaultAction, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, this.$ti._eval$1("Action<1>")));
    },
    $is_OverridableActionMixin: 1
  };
  A.__OverridableContextAction_ContextAction__OverridableActionMixin.prototype = {
    _updateCallingAction$1(value) {
      this.$ti._eval$1("Action<1>?")._as(value);
      this.super$Action$_updateCallingAction(value);
      this.defaultAction._updateCallingAction$1(value);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("defaultAction", this.defaultAction, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, this.$ti._eval$1("Action<1>")));
    },
    $is_OverridableActionMixin: 1
  };
  A.WidgetsApp.prototype = {
    createState$0() {
      return A._WidgetsAppState$();
    }
  };
  A._WidgetsAppState.prototype = {
    get$_initialRouteName() {
      if (!B.boolConversionCheck(J.$eq$(E.WidgetsBinding_instance().get$platformDispatcher().get$defaultRouteName(), "/")))
        var t1 = E.WidgetsBinding_instance().get$platformDispatcher().get$defaultRouteName();
      else {
        t1 = this.get$widget().initialRoute;
        if (t1 == null)
          t1 = E.WidgetsBinding_instance().get$platformDispatcher().get$defaultRouteName();
      }
      return t1;
    },
    _defaultOnNavigationNotification$1(notification) {
      type$.NavigationNotification._as(notification);
      switch (this._app$_appLifecycleState) {
        case null:
        case void 0:
        case D.AppLifecycleState_0:
        case D.AppLifecycleState_2:
          return true;
        case D.AppLifecycleState_1:
        case D.AppLifecycleState_3:
        case D.AppLifecycleState_4:
          A.SystemNavigator_setFrameworkHandlesBack(notification.canHandlePop);
          return true;
      }
    },
    didChangeAppLifecycleState$1(state) {
      type$.AppLifecycleState._as(state);
      this._app$_appLifecycleState = state;
      this.super$WidgetsBindingObserver$didChangeAppLifecycleState(state);
    },
    initState$0() {
      var _this = this;
      _this.super$State$initState0();
      _this._updateRouting$0();
      _this.set$_app$_locale(_this._resolveLocales$2(E.WidgetsBinding_instance().get$platformDispatcher().get$locales(), _this.get$widget().supportedLocales));
      E.WidgetsBinding_instance().addObserver$1(_this);
      _this.set$_app$_appLifecycleState(E.WidgetsBinding_instance().get$lifecycleState());
    },
    didUpdateWidget$1(oldWidget) {
      type$.WidgetsApp._as(oldWidget);
      this.super$State$didUpdateWidget(oldWidget);
      this._updateRouting$1$oldWidget(oldWidget);
    },
    dispose$0() {
      E.WidgetsBinding_instance().removeObserver$1(this);
      var t1 = this._defaultRouteInformationProvider;
      if (t1 != null)
        t1.dispose$0();
      this.super$State$dispose();
    },
    _clearRouterResource$0() {
      var t1 = this._defaultRouteInformationProvider;
      if (t1 != null)
        t1.dispose$0();
      this._defaultBackButtonDispatcher = this._defaultRouteInformationProvider = null;
    },
    _clearNavigatorResource$0() {
      this.set$_navigator(null);
    },
    _updateRouting$1$oldWidget(oldWidget) {
      var t1, _this = this;
      type$.nullable_WidgetsApp._as(oldWidget);
      if (B.boolConversionCheck(_this.get$_usesRouterWithDelegates())) {
        _this._clearNavigatorResource$0();
        if (_this.get$widget().routeInformationProvider == null && _this.get$widget().routeInformationParser != null) {
          if (_this._defaultRouteInformationProvider == null)
            _this._defaultRouteInformationProvider = A.PlatformRouteInformationProvider$(E.RouteInformation$(null, E.Uri_parse(_this.get$_initialRouteName())));
        } else {
          t1 = _this._defaultRouteInformationProvider;
          if (t1 != null)
            t1.dispose$0();
          _this._defaultRouteInformationProvider = null;
        }
        if (_this.get$widget().backButtonDispatcher == null)
          if (_this._defaultBackButtonDispatcher == null)
            _this._defaultBackButtonDispatcher = A.RootBackButtonDispatcher$();
      } else if (B.boolConversionCheck(_this.get$_usesNavigator())) {
        _this._clearRouterResource$0();
        if (_this._navigator == null || !B.boolConversionCheck(J.$eq$(_this.get$widget().navigatorKey, oldWidget.navigatorKey))) {
          t1 = _this.get$widget().navigatorKey;
          _this.set$_navigator(t1 == null ? A.GlobalObjectKey$(_this, type$.NavigatorState) : t1);
        }
      } else {
        _this._clearRouterResource$0();
        _this._clearNavigatorResource$0();
      }
    },
    _updateRouting$0() {
      return this._updateRouting$1$oldWidget(null);
    },
    get$_usesRouterWithDelegates() {
      return this.get$widget().routerDelegate != null;
    },
    get$_usesRouterWithConfig() {
      return this.get$widget().routerConfig != null;
    },
    get$_usesNavigator() {
      var t1, _this = this;
      if (_this.get$widget().home == null) {
        t1 = _this.get$widget().routes;
        t1 = t1 == null ? null : J.get$isNotEmpty$asx(t1);
        t1 = B.boolConversionCheck(t1 == null ? false : t1) || _this.get$widget().onGenerateRoute != null || _this.get$widget().onUnknownRoute != null;
      } else
        t1 = true;
      return t1;
    },
    get$_effectiveRouteInformationProvider() {
      var t1 = this.get$widget().routeInformationProvider;
      return t1 == null ? this._defaultRouteInformationProvider : t1;
    },
    get$_effectiveBackButtonDispatcher() {
      var t1 = this.get$widget().backButtonDispatcher;
      if (t1 == null) {
        t1 = this._defaultBackButtonDispatcher;
        t1.toString;
      }
      return t1;
    },
    _onGenerateRoute$1(settings) {
      var $name, pageContentBuilder, t1, _this = this;
      type$.RouteSettings._as(settings);
      $name = settings.name;
      if ($name === "/" && _this.get$widget().home != null)
        pageContentBuilder = new A._WidgetsAppState__onGenerateRoute_closure(_this);
      else {
        t1 = _this.get$widget().routes;
        t1.toString;
        pageContentBuilder = J.$index$asx(t1, $name);
      }
      if (pageContentBuilder != null)
        return _this.get$widget().pageRouteBuilder.call$1$2(settings, pageContentBuilder, type$.dynamic);
      if (_this.get$widget().onGenerateRoute != null)
        return _this.get$widget().onGenerateRoute.call$1(settings);
      return null;
    },
    _onUnknownRoute$1(settings) {
      var result;
      type$.RouteSettings._as(settings);
      result = this.get$widget().onUnknownRoute.call$1(settings);
      result.toString;
      return result;
    },
    didPopRoute$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, t1, $navigator;
      var $async$didPopRoute$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (B.boolConversionCheck($async$self.get$_usesRouterWithDelegates())) {
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = $async$self._navigator;
              $navigator = t1 == null ? null : t1.get$currentState();
              if ($navigator == null) {
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = $navigator.maybePop$1$0(type$.nullable_Object);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$didPopRoute$0, $async$completer);
    },
    didPushRouteInformation$1(routeInformation) {
      return this.didPushRouteInformation$body$_WidgetsAppState(type$.RouteInformation._as(routeInformation));
    },
    didPushRouteInformation$body$_WidgetsAppState(routeInformation) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, t1, $navigator, uri, t2;
      var $async$didPushRouteInformation$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (B.boolConversionCheck($async$self.get$_usesRouterWithDelegates())) {
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = $async$self._navigator;
              $navigator = t1 == null ? null : t1.get$currentState();
              if ($navigator == null) {
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              uri = routeInformation.get$uri();
              t1 = B.boolConversionCheck(J.get$isEmpty$asx(uri.get$path())) ? "/" : uri.get$path();
              t2 = B.boolConversionCheck(J.get$isEmpty$asx(uri.get$queryParametersAll())) ? null : uri.get$queryParametersAll();
              $navigator.pushNamed$1$1(E.Uri_decodeComponent(J.toString$0$(E._Uri__Uri(B.boolConversionCheck(J.get$isEmpty$asx(uri.get$fragment())) ? null : uri.get$fragment(), t1, t2))), type$.nullable_Object);
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$didPushRouteInformation$1, $async$completer);
    },
    _resolveLocales$2(preferredLocales, supportedLocales) {
      var t1, locale, t2, _this = this;
      type$.nullable_List_Locale._as(preferredLocales);
      type$.Iterable_Locale._as(supportedLocales);
      if (_this.get$widget().localeListResolutionCallback != null) {
        t1 = _this.get$widget().localeListResolutionCallback;
        t1.toString;
        locale = t1.call$2(preferredLocales, _this.get$widget().supportedLocales);
        if (locale != null)
          return locale;
      }
      if (_this.get$widget().localeResolutionCallback != null) {
        t1 = _this.get$widget().localeResolutionCallback;
        t1.toString;
        t2 = preferredLocales != null && B.boolConversionCheck(J.get$isNotEmpty$asx(preferredLocales)) ? J.get$first$ax(preferredLocales) : null;
        locale = t1.call$2(t2, _this.get$widget().supportedLocales);
        if (locale != null)
          return locale;
      }
      return A.basicLocaleListResolution(preferredLocales, supportedLocales);
    },
    didChangeLocales$1(locales) {
      var _this = this,
        newLocale = _this._resolveLocales$2(type$.nullable_List_Locale._as(locales), _this.get$widget().supportedLocales);
      if (!B.boolConversionCheck(newLocale.$eq(0, _this._app$_locale)))
        _this.setState$1(new A._WidgetsAppState_didChangeLocales_closure(_this, newLocale));
    },
    get$_app$_localizationsDelegates() {
      var t2,
        t1 = B._setArrayType([], type$.JSArray_LocalizationsDelegate_dynamic);
      if (this.get$widget().localizationsDelegates != null) {
        t2 = this.get$widget().localizationsDelegates;
        t2.toString;
        F.JSArray_methods.addAll$1(t1, t2);
      }
      t1.push(C.C__WidgetsLocalizationsDelegate);
      return t1;
    },
    build$1(context) {
      var t2, t3, t4, t5, routing, title, appLocale, _this = this, _null = null, t1 = {};
      type$.BuildContext._as(context);
      t1.routing = null;
      if (B.boolConversionCheck(_this.get$_usesRouterWithDelegates())) {
        t2 = _this.get$_effectiveRouteInformationProvider();
        t3 = _this.get$widget().routeInformationParser;
        t4 = _this.get$widget().routerDelegate;
        t4.toString;
        t4 = t1.routing = A.Router$(_this.get$_effectiveBackButtonDispatcher(), _null, "router", t3, t2, t4, type$.Object);
        t2 = t4;
      } else if (B.boolConversionCheck(_this.get$_usesNavigator())) {
        t2 = _this._navigator;
        t3 = _this.get$_initialRouteName();
        t4 = _this.get$widget().onGenerateInitialRoutes == null ? A.navigator_Navigator_defaultGenerateInitialRoutes$closure() : new A._WidgetsAppState_build_closure(_this);
        t5 = _this.get$widget().navigatorObservers;
        t5.toString;
        routing = E.FocusScope$(true, A.Navigator$(D.Clip_0, t3, t2, t5, t4, _this.get$_onGenerateRoute(), _this.get$_onUnknownRoute(), true, "nav", D.TraversalEdgeBehavior_1), "Navigator Scope", true, _null, _null, _null, _null);
        t1.routing = routing;
        t2 = routing;
      } else if (B.boolConversionCheck(_this.get$_usesRouterWithConfig())) {
        t2 = _this.get$widget().routerConfig;
        t2.toString;
        routing = A.Router_Router$withConfig(t2, "router", type$.Object);
        t1.routing = routing;
        t2 = routing;
      } else
        t2 = _null;
      t1.result = null;
      if (_this.get$widget().builder != null)
        t1.result = A.Builder$(new A._WidgetsAppState_build_closure0(t1, _this));
      else {
        t2.toString;
        t1.result = t2;
      }
      if (_this.get$widget().textStyle != null) {
        t2 = _this.get$widget().textStyle;
        t2.toString;
        t1.result = A.DefaultTextStyle$(t1.result, _null, C.TextOverflow_0, true, t2, _null, _null, C.TextWidthBasis_0);
      }
      t2 = B.boolConversionCheck(_this.get$widget().showPerformanceOverlay);
      if (t2)
        t1.result = A.Stack$(B._setArrayType([t1.result, A.Positioned$(_null, A.PerformanceOverlay$allEnabled(), _null, _null, 0, 0, 0, _null)], type$.JSArray_Widget), C.StackFit_0);
      if (B.boolConversionCheck(_this.get$widget().showSemanticsDebugger))
        t1.result = A.SemanticsDebugger$(t1.result);
      if (_this.get$widget().onGenerateTitle != null)
        title = A.Builder$(new A._WidgetsAppState_build_closure1(t1, _this));
      else {
        t2 = _this.get$widget().title;
        t3 = _this.get$widget().color.withOpacity$1(1);
        title = A.Title$(t1.result, t3, t2);
      }
      if (_this.get$widget().locale != null) {
        t1 = _this.get$widget().locale;
        t1.toString;
        appLocale = _this._resolveLocales$2(B._setArrayType([t1], type$.JSArray_Locale), _this.get$widget().supportedLocales);
      } else {
        t1 = _this._app$_locale;
        t1.toString;
        appLocale = t1;
      }
      t1 = _this.get$widget().restorationScopeId;
      t2 = _this.get$widget().onNavigationNotification;
      if (t2 == null)
        t2 = _this.get$_defaultOnNavigationNotification();
      t3 = _this.get$widget().shortcuts;
      if (t3 == null)
        t3 = A.WidgetsApp_defaultShortcuts();
      t4 = _this.get$widget().actions;
      if (t4 == null) {
        t4 = B.LinkedHashMap_LinkedHashMap$of($.$get$WidgetsApp_defaultActions(), type$.Type, type$.Action_Intent);
        t4.$indexSet(0, C.Type_ScrollIntent_eXW, A.Action_Action$overridable(context, A.ScrollAction$(), type$.ScrollIntent));
      }
      t5 = E.ReadingOrderTraversalPolicy$();
      return A.RootRestorationScope$(A.SharedAppData$(A.NotificationListener$(A.Shortcuts$(A.DefaultTextEditingShortcuts$(A.Actions$(t4, E.FocusTraversalGroup$(A.TapRegionSurface$(A.ShortcutRegistrar$(A.Localizations$(title, J.toList$0$ax(_this.get$_app$_localizationsDelegates()), appLocale))), t5))), "<Default WidgetsApp Shortcuts>", t3), t2, type$.NavigationNotification)), t1);
    },
    set$_app$_appLifecycleState(_appLifecycleState) {
      this._app$_appLifecycleState = type$.nullable_AppLifecycleState._as(_appLifecycleState);
    },
    set$_navigator(_navigator) {
      this._navigator = type$.nullable_GlobalKey_NavigatorState._as(_navigator);
    },
    set$_app$_locale(_locale) {
      this._app$_locale = type$.nullable_Locale._as(_locale);
    },
    $isWidgetsBindingObserver: 1
  };
  A.__WidgetsAppState_State_WidgetsBindingObserver.prototype = {$isWidgetsBindingObserver: 1};
  A.KeepAliveNotification.prototype = {};
  A.KeepAliveHandle.prototype = {
    dispose$0() {
      this.notifyListeners$0();
      this.super$ChangeNotifier$dispose();
    }
  };
  A.AutomaticKeepAliveClientMixin.prototype = {
    _ensureKeepAlive$0() {
      var t1 = A.KeepAliveHandle$();
      this.AutomaticKeepAliveClientMixin__keepAliveHandle = t1;
      A.KeepAliveNotification$(t1).dispatch$1(this.get$context());
    },
    _releaseKeepAlive$0() {
      this.AutomaticKeepAliveClientMixin__keepAliveHandle.dispose$0();
      this.AutomaticKeepAliveClientMixin__keepAliveHandle = null;
    },
    updateKeepAlive$0() {
      var _this = this;
      if (B.boolConversionCheck(_this.get$wantKeepAlive())) {
        if (_this.AutomaticKeepAliveClientMixin__keepAliveHandle == null)
          _this._ensureKeepAlive$0();
      } else if (_this.AutomaticKeepAliveClientMixin__keepAliveHandle != null)
        _this._releaseKeepAlive$0();
    },
    build$1(context) {
      type$.BuildContext._as(context);
      if (B.boolConversionCheck(this.get$wantKeepAlive()) && this.AutomaticKeepAliveClientMixin__keepAliveHandle == null)
        this._ensureKeepAlive$0();
      return C._NullWidget_null0;
    },
    $isDiagnosticable: 1,
    $isState0: 1,
    $is_State_Object_Diagnosticable: 1
  };
  A._NullWidget0.prototype = {
    build$1(context) {
      type$.BuildContext._as(context);
      throw B.wrapException(E.FlutterError_FlutterError("Widgets that mix AutomaticKeepAliveClientMixin into their State must call super.build() but must ignore the return value of the superclass."));
    }
  };
  A._UbiquitousInheritedElement.prototype = {
    setDependencies$2(dependent, value) {
      type$.Element._as(dependent);
    },
    notifyClients$1(oldWidget) {
      A._UbiquitousInheritedElement__recurseChildren(this, new A._UbiquitousInheritedElement_notifyClients_closure(this, type$.InheritedWidget._as(oldWidget)));
    }
  };
  A._UbiquitousInheritedWidget.prototype = {
    createElement$0() {
      return A._UbiquitousInheritedElement$(this);
    }
  };
  A.Directionality.prototype = {
    updateShouldNotify$1(oldWidget) {
      return !B.boolConversionCheck(J.$eq$(this.textDirection, type$.Directionality._as(oldWidget).textDirection));
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.EnumProperty$("textDirection", this.textDirection, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.TextDirection));
    }
  };
  A.CustomPaint.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A.RenderCustomPaint$(this.foregroundPainter, false, this.painter, D.Size_0_0, false);
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$.RenderCustomPaint._as(renderObject);
      renderObject.set$painter(this.painter);
      renderObject.set$foregroundPainter(this.foregroundPainter);
      renderObject.set$preferredSize(D.Size_0_0);
      renderObject.willChange = renderObject.isComplex = false;
    },
    didUnmountRenderObject$1(renderObject) {
      type$.RenderCustomPaint._as(renderObject);
      renderObject.set$painter(null);
      renderObject.set$foregroundPainter(null);
    }
  };
  A.ClipPath.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A.RenderClipPath$(this.clipBehavior, this.clipper);
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$.RenderClipPath._as(renderObject);
      renderObject.set$clipper(this.clipper);
      renderObject.set$clipBehavior(this.clipBehavior);
    },
    didUnmountRenderObject$1(renderObject) {
      type$.RenderClipPath._as(renderObject).set$clipper(null);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("clipper", this.clipper, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.CustomClipper_Path));
    }
  };
  A.PhysicalModel.prototype = {
    createRenderObject$1(context) {
      var _this = this;
      type$.BuildContext._as(context);
      return A.RenderPhysicalModel$(_this.borderRadius, _this.clipBehavior, _this.color, _this.elevation, _this.shadowColor, _this.shape);
    },
    updateRenderObject$2(context, renderObject) {
      var _this = this;
      type$.BuildContext._as(context);
      type$.RenderPhysicalModel._as(renderObject);
      renderObject.set$shape(_this.shape);
      renderObject.set$clipBehavior(_this.clipBehavior);
      renderObject.set$borderRadius(_this.borderRadius);
      renderObject.set$elevation(_this.elevation);
      renderObject.set$color(_this.color);
      renderObject.set$shadowColor(_this.shadowColor);
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.EnumProperty$("shape", _this.shape, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.BoxShape));
      properties.add$1(0, E.DiagnosticsProperty$("borderRadius", _this.borderRadius, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BorderRadius));
      properties.add$1(0, E.DoubleProperty$("elevation", _this.elevation, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.ColorProperty$("color", _this.color, D.C__NoDefaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("shadowColor", _this.shadowColor, D.C__NoDefaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
    }
  };
  A.PhysicalShape.prototype = {
    createRenderObject$1(context) {
      var _this = this;
      type$.BuildContext._as(context);
      return A.RenderPhysicalShape$(_this.clipBehavior, _this.clipper, _this.color, _this.elevation, _this.shadowColor);
    },
    updateRenderObject$2(context, renderObject) {
      var _this = this;
      type$.BuildContext._as(context);
      type$.RenderPhysicalShape._as(renderObject);
      renderObject.set$clipper(_this.clipper);
      renderObject.set$clipBehavior(_this.clipBehavior);
      renderObject.set$elevation(_this.elevation);
      renderObject.set$color(_this.color);
      renderObject.set$shadowColor(_this.shadowColor);
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("clipper", _this.clipper, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.CustomClipper_Path));
      properties.add$1(0, E.DoubleProperty$("elevation", _this.elevation, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.ColorProperty$("color", _this.color, D.C__NoDefaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, A.ColorProperty$("shadowColor", _this.shadowColor, D.C__NoDefaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
    }
  };
  A.FractionalTranslation.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A.RenderFractionalTranslation$(this.transformHitTests, this.translation);
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$.RenderFractionalTranslation._as(renderObject);
      renderObject.set$translation(this.translation);
      renderObject.set$transformHitTests(this.transformHitTests);
    }
  };
  A.Padding.prototype = {
    createRenderObject$1(context) {
      return A.RenderPadding$(this.padding, E.Directionality_maybeOf(type$.BuildContext._as(context)));
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$.RenderPadding._as(renderObject);
      renderObject.set$padding(this.padding);
      renderObject.set$textDirection(E.Directionality_maybeOf(context));
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("padding", this.padding, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.EdgeInsetsGeometry));
    }
  };
  A.Align.prototype = {
    createRenderObject$1(context) {
      return A.RenderPositionedBox$(this.alignment, this.heightFactor, E.Directionality_maybeOf(type$.BuildContext._as(context)), this.widthFactor);
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$.RenderPositionedBox._as(renderObject);
      renderObject.set$alignment(this.alignment);
      renderObject.set$widthFactor(this.widthFactor);
      renderObject.set$heightFactor(this.heightFactor);
      renderObject.set$textDirection(E.Directionality_maybeOf(context));
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("alignment", _this.alignment, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.AlignmentGeometry));
      properties.add$1(0, E.DoubleProperty$("widthFactor", _this.widthFactor, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("heightFactor", _this.heightFactor, _null, _null, D.DiagnosticLevel_3, _null, _null));
    }
  };
  A.Center.prototype = {};
  A.ConstrainedBox.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return E.RenderConstrainedBox$(this.constraints);
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$.RenderConstrainedBox._as(renderObject).set$additionalConstraints(this.constraints);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("constraints", this.constraints, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, false, true, D.DiagnosticsTreeStyle_8, _null, type$.BoxConstraints));
    }
  };
  A.Offstage.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A.RenderOffstage$(this.offstage);
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$.RenderOffstage._as(renderObject).set$offstage(this.offstage);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("offstage", this.offstage, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
    },
    createElement$0() {
      return A._OffstageElement$(this);
    }
  };
  A._OffstageElement.prototype = {};
  A.Stack.prototype = {
    createRenderObject$1(context) {
      var t1 = E.Directionality_maybeOf(type$.BuildContext._as(context));
      return A.RenderStack$(C.AlignmentDirectional_m1_m1, D.Clip_1, this.fit, t1);
    },
    updateRenderObject$2(context, renderObject) {
      var t1;
      type$.BuildContext._as(context);
      type$.RenderStack._as(renderObject);
      renderObject.set$alignment(C.AlignmentDirectional_m1_m1);
      t1 = E.Directionality_maybeOf(context);
      renderObject.set$textDirection(t1);
      renderObject.set$fit(this.fit);
      renderObject.set$clipBehavior(D.Clip_1);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("alignment", C.AlignmentDirectional_m1_m1, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.AlignmentGeometry));
      properties.add$1(0, E.EnumProperty$("textDirection", _null, _null, D.DiagnosticLevel_3, type$.TextDirection));
      properties.add$1(0, E.EnumProperty$("fit", this.fit, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.StackFit));
      properties.add$1(0, E.EnumProperty$("clipBehavior", D.Clip_1, D.Clip_1, D.DiagnosticLevel_3, type$.Clip));
    }
  };
  A.Positioned.prototype = {
    applyParentData$1(renderObject) {
      var t1, t2, needsLayout, targetParent, _this = this;
      type$.RenderObject._as(renderObject);
      t1 = renderObject.parentData;
      t1.toString;
      type$.StackParentData._as(t1);
      t2 = _this.left;
      needsLayout = !B.boolConversionCheck(J.$eq$(t1.left, t2));
      if (needsLayout)
        t1.set$left(t2);
      t2 = _this.top;
      if (!B.boolConversionCheck(J.$eq$(t1.top, t2))) {
        t1.set$top(t2);
        needsLayout = true;
      }
      t2 = _this.right;
      if (!B.boolConversionCheck(J.$eq$(t1.right, t2))) {
        t1.set$right(t2);
        needsLayout = true;
      }
      t2 = _this.bottom;
      if (!B.boolConversionCheck(J.$eq$(t1.bottom, t2))) {
        t1.set$bottom(t2);
        needsLayout = true;
      }
      t2 = _this.width;
      if (!B.boolConversionCheck(J.$eq$(t1.width, t2))) {
        t1.set$width(t2);
        needsLayout = true;
      }
      t2 = _this.height;
      if (!B.boolConversionCheck(J.$eq$(t1.height, t2))) {
        t1.set$height(t2);
        needsLayout = true;
      }
      if (needsLayout) {
        targetParent = renderObject.get$parent();
        if (targetParent instanceof E.RenderObject)
          targetParent.markNeedsLayout$0();
      }
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.DoubleProperty$("left", _this.left, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("top", _this.top, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("right", _this.right, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("bottom", _this.bottom, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("width", _this.width, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("height", _this.height, _null, _null, D.DiagnosticLevel_3, _null, _null));
    }
  };
  A.PositionedDirectional.prototype = {
    build$1(context) {
      var _this = this;
      return A.Positioned_Positioned$directional(_this.bottom, _this.child, null, null, _this.start, A.Directionality_of(type$.BuildContext._as(context)), _this.top, _this.width);
    }
  };
  A.Flex.prototype = {
    get$_needTextDirection() {
      var t1, t2;
      switch (this.direction) {
        case D.Axis_0:
          return true;
        case D.Axis_1:
          t1 = this.crossAxisAlignment;
          t2 = J.getInterceptor$(t1);
          return B.boolConversionCheck(t2.$eq(t1, C.CrossAxisAlignment_0)) || B.boolConversionCheck(t2.$eq(t1, C.CrossAxisAlignment_1));
      }
    },
    getEffectiveTextDirection$1(context) {
      var t1;
      type$.BuildContext._as(context);
      t1 = this.textDirection;
      if (t1 == null)
        t1 = B.boolConversionCheck(this.get$_needTextDirection()) ? E.Directionality_maybeOf(context) : null;
      return t1;
    },
    createRenderObject$1(context) {
      var _this = this;
      return A.RenderFlex$(D.Clip_0, _this.crossAxisAlignment, _this.direction, _this.mainAxisAlignment, _this.mainAxisSize, _this.textBaseline, _this.getEffectiveTextDirection$1(type$.BuildContext._as(context)), _this.verticalDirection);
    },
    updateRenderObject$2(context, renderObject) {
      var _this = this;
      type$.BuildContext._as(context);
      type$.RenderFlex._as(renderObject);
      renderObject.set$direction(_this.direction);
      renderObject.set$mainAxisAlignment(_this.mainAxisAlignment);
      renderObject.set$mainAxisSize(_this.mainAxisSize);
      renderObject.set$crossAxisAlignment(_this.crossAxisAlignment);
      renderObject.set$textDirection(_this.getEffectiveTextDirection$1(context));
      renderObject.set$verticalDirection(_this.verticalDirection);
      renderObject.set$textBaseline(_this.textBaseline);
      renderObject.set$clipBehavior(D.Clip_0);
    },
    debugFillProperties$1(properties) {
      var _this = this;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.EnumProperty$("direction", _this.direction, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.Axis));
      properties.add$1(0, E.EnumProperty$("mainAxisAlignment", _this.mainAxisAlignment, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.MainAxisAlignment));
      properties.add$1(0, E.EnumProperty$("mainAxisSize", _this.mainAxisSize, C.MainAxisSize_1, D.DiagnosticLevel_3, type$.MainAxisSize));
      properties.add$1(0, E.EnumProperty$("crossAxisAlignment", _this.crossAxisAlignment, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.CrossAxisAlignment));
      properties.add$1(0, E.EnumProperty$("textDirection", _this.textDirection, null, D.DiagnosticLevel_3, type$.TextDirection));
      properties.add$1(0, E.EnumProperty$("verticalDirection", _this.verticalDirection, C.VerticalDirection_1, D.DiagnosticLevel_3, type$.VerticalDirection));
      properties.add$1(0, E.EnumProperty$("textBaseline", _this.textBaseline, null, D.DiagnosticLevel_3, type$.TextBaseline));
    }
  };
  A.Row.prototype = {};
  A.Column.prototype = {};
  A.RichText.prototype = {
    createRenderObject$1(context) {
      var t1, t2, _this = this;
      type$.BuildContext._as(context);
      t1 = _this.textDirection;
      if (t1 == null)
        t1 = A.Directionality_of(context);
      t2 = _this.locale;
      if (t2 == null)
        t2 = A.Localizations_maybeLocaleOf(context);
      return A.RenderParagraph$(_this.text, t2, _this.maxLines, _this.overflow, _this.selectionRegistrar, _this.selectionColor, _this.softWrap, _this.strutStyle, _this.textAlign, t1, _this.textHeightBehavior, _this.textScaler, _this.textWidthBasis);
    },
    updateRenderObject$2(context, renderObject) {
      var t1, _this = this;
      type$.BuildContext._as(context);
      type$.RenderParagraph._as(renderObject);
      renderObject.set$text(_this.text);
      renderObject.set$textAlign(_this.textAlign);
      t1 = _this.textDirection;
      renderObject.set$textDirection(t1 == null ? A.Directionality_of(context) : t1);
      renderObject.set$softWrap(_this.softWrap);
      renderObject.set$overflow(_this.overflow);
      renderObject.set$textScaler(_this.textScaler);
      renderObject.set$maxLines(_this.maxLines);
      renderObject.set$strutStyle(_this.strutStyle);
      renderObject.set$textWidthBasis(_this.textWidthBasis);
      renderObject.set$textHeightBehavior(_this.textHeightBehavior);
      t1 = _this.locale;
      renderObject.set$locale(t1 == null ? A.Localizations_maybeLocaleOf(context) : t1);
      renderObject.set$registrar(_this.selectionRegistrar);
      renderObject.set$selectionColor(_this.selectionColor);
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.EnumProperty$("textAlign", _this.textAlign, D.TextAlign_4, D.DiagnosticLevel_3, type$.TextAlign));
      properties.add$1(0, E.EnumProperty$("textDirection", _this.textDirection, _null, D.DiagnosticLevel_3, type$.TextDirection));
      properties.add$1(0, E.FlagProperty$("softWrap", _null, string$.no_wra, "wrapping at box width", D.DiagnosticLevel_3, true, _this.softWrap));
      properties.add$1(0, E.EnumProperty$("overflow", _this.overflow, C.TextOverflow_0, D.DiagnosticLevel_3, type$.TextOverflow));
      properties.add$1(0, E.DiagnosticsProperty$("textScaler", _this.textScaler, true, D._LinearTextScaler_1, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextScaler));
      properties.add$1(0, E.IntProperty$("maxLines", _this.maxLines, D.C__NoDefaultValue, "unlimited", D.DiagnosticLevel_3, _null));
      properties.add$1(0, E.EnumProperty$("textWidthBasis", _this.textWidthBasis, C.TextWidthBasis_0, D.DiagnosticLevel_3, type$.TextWidthBasis));
      properties.add$1(0, E.StringProperty$("text", _this.text.toPlainText$0(), D.C__NoDefaultValue, true, true));
      properties.add$1(0, E.DiagnosticsProperty$("locale", _this.locale, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Locale));
      properties.add$1(0, E.DiagnosticsProperty$("strutStyle", _this.strutStyle, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.StrutStyle));
      properties.add$1(0, E.DiagnosticsProperty$("textHeightBehavior", _this.textHeightBehavior, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextHeightBehavior));
    }
  };
  A.Listener0.prototype = {
    createRenderObject$1(context) {
      var _this = this, _null = null;
      type$.BuildContext._as(context);
      return A.RenderPointerListener$(_this.behavior, _this.onPointerCancel, _this.onPointerDown, _null, _null, _null, _this.onPointerPanZoomStart, _null, _null, _this.onPointerUp);
    },
    updateRenderObject$2(context, renderObject) {
      var _this = this, _null = null;
      type$.BuildContext._as(context);
      type$.RenderPointerListener._as(renderObject);
      renderObject.set$onPointerDown(_this.onPointerDown);
      renderObject.set$onPointerMove(_null);
      renderObject.set$onPointerUp(_this.onPointerUp);
      renderObject.set$onPointerHover(_null);
      renderObject.set$onPointerCancel(_this.onPointerCancel);
      renderObject.set$onPointerPanZoomStart(_this.onPointerPanZoomStart);
      renderObject.set$onPointerPanZoomUpdate(_null);
      renderObject.set$onPointerPanZoomEnd(_null);
      renderObject.set$onPointerSignal(_null);
      renderObject.set$behavior(_this.behavior);
    },
    debugFillProperties$1(properties) {
      var t1, _this = this;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Widget$debugFillProperties(properties);
      t1 = B._setArrayType([], type$.JSArray_String);
      if (_this.onPointerDown != null)
        t1.push("down");
      if (_this.onPointerUp != null)
        t1.push("up");
      if (_this.onPointerCancel != null)
        t1.push("cancel");
      if (_this.onPointerPanZoomStart != null)
        t1.push("panZoomStart");
      properties.add$1(0, E.IterableProperty$("listeners", t1, D.C__NoDefaultValue, "<none>", D.DiagnosticLevel_3, D.DiagnosticsTreeStyle_8, type$.String));
      properties.add$1(0, E.EnumProperty$("behavior", _this.behavior, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.HitTestBehavior));
    }
  };
  A.MouseRegion.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A.RenderMouseRegion$(this.cursor, null, this.onEnter, this.onExit, null, true);
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$.RenderMouseRegion._as(renderObject);
      renderObject.set$onEnter(this.onEnter);
      renderObject.set$onHover(null);
      renderObject.set$onExit(this.onExit);
      renderObject.set$cursor(this.cursor);
      renderObject.set$opaque(true);
      renderObject.set$hitTestBehavior(null);
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Widget$debugFillProperties(properties);
      t1 = B._setArrayType([], type$.JSArray_String);
      if (_this.onEnter != null)
        t1.push("enter");
      if (_this.onExit != null)
        t1.push("exit");
      properties.add$1(0, E.IterableProperty$("listeners", t1, D.C__NoDefaultValue, "<none>", D.DiagnosticLevel_3, D.DiagnosticsTreeStyle_8, type$.String));
      properties.add$1(0, E.DiagnosticsProperty$("cursor", _this.cursor, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.MouseCursor));
      properties.add$1(0, E.DiagnosticsProperty$("opaque", true, true, true, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
    }
  };
  A.RepaintBoundary.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A.RenderRepaintBoundary$();
    }
  };
  A.IgnorePointer.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A.RenderIgnorePointer$(this.ignoring, null);
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$.RenderIgnorePointer._as(renderObject);
      renderObject.set$ignoring(this.ignoring);
      renderObject.set$ignoringSemantics(null);
    },
    debugFillProperties$1(properties) {
      var t1, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      t1 = type$.bool;
      properties.add$1(0, E.DiagnosticsProperty$("ignoring", this.ignoring, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("ignoringSemantics", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
    }
  };
  A.AbsorbPointer.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A.RenderAbsorbPointer$(this.absorbing, null);
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$.RenderAbsorbPointer._as(renderObject);
      renderObject.set$absorbing(this.absorbing);
      renderObject.set$ignoringSemantics(null);
    },
    debugFillProperties$1(properties) {
      var t1, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      t1 = type$.bool;
      properties.add$1(0, E.DiagnosticsProperty$("absorbing", this.absorbing, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, E.DiagnosticsProperty$("ignoringSemantics", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
    }
  };
  A.MergeSemantics.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A.RenderMergeSemantics$();
    }
  };
  A.BlockSemantics.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A.RenderBlockSemantics$(true);
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$.RenderBlockSemantics._as(renderObject).set$blocking(true);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("blocking", true, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
    }
  };
  A.ExcludeSemantics.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A.RenderExcludeSemantics$(this.excluding);
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$.RenderExcludeSemantics._as(renderObject).set$excluding(this.excluding);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("excluding", this.excluding, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
    }
  };
  A.KeyedSubtree.prototype = {
    build$1(context) {
      type$.BuildContext._as(context);
      return this.child;
    }
  };
  A.Builder.prototype = {
    build$1(context) {
      return this.builder.call$1(type$.BuildContext._as(context));
    }
  };
  A.ColoredBox.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A._RenderColoredBox$(this.color);
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$._RenderColoredBox._as(type$.RenderObject._as(renderObject)).set$color(this.color);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("color", this.color, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Color));
    }
  };
  A._RenderColoredBox.prototype = {
    get$color() {
      return this._basic$_color;
    },
    set$color(value) {
      type$.Color._as(value);
      if (B.boolConversionCheck(value.$eq(0, this._basic$_color)))
        return;
      this._basic$_color = value;
      this.markNeedsPaint$0();
    },
    paint$2(context, offset) {
      var t1, t2, t3, _this = this;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      if (B.boolConversionCheck(J.$gt$n(_this.get$size(), D.Size_0_0))) {
        t1 = context.get$canvas();
        t2 = offset.$and(0, _this.get$size());
        t3 = E.Paint_Paint();
        t3.set$color(_this.get$color());
        t1.drawRect$2(t2, t3);
      }
      if (_this.get$child() != null) {
        t1 = _this.get$child();
        t1.toString;
        context.paintChild$2(t1, offset);
      }
    }
  };
  A.DecoratedBox.prototype = {
    createRenderObject$1(context) {
      return A.RenderDecoratedBox$(A.createLocalImageConfiguration(type$.BuildContext._as(context)), this.decoration, this.position);
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$.RenderDecoratedBox._as(renderObject);
      renderObject.set$decoration(this.decoration);
      renderObject.set$configuration(A.createLocalImageConfiguration(context));
      renderObject.set$position(this.position);
    },
    debugFillProperties$1(properties) {
      var t1, t2, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      t1 = this.position;
      switch (t1) {
        case C.DecorationPosition_0:
          t2 = "bg";
          break;
        case C.DecorationPosition_1:
          t2 = "fg";
          break;
        default:
          t2 = _null;
      }
      properties.add$1(0, E.EnumProperty$("position", t1, D.C__NoDefaultValue, D.DiagnosticLevel_0, type$.DecorationPosition));
      properties.add$1(0, E.DiagnosticsProperty$(t2, this.decoration, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Decoration));
    }
  };
  A.DefaultSelectionStyle.prototype = {
    updateShouldNotify$1(oldWidget) {
      type$.DefaultSelectionStyle._as(oldWidget);
      return !B.boolConversionCheck(J.$eq$(this.cursorColor, oldWidget.cursorColor)) || !B.boolConversionCheck(J.$eq$(this.selectionColor, oldWidget.selectionColor)) || !B.boolConversionCheck(J.$eq$(this.mouseCursor, oldWidget.mouseCursor));
    }
  };
  A._NullWidget1.prototype = {
    build$1(context) {
      type$.BuildContext._as(context);
      throw B.wrapException(E.FlutterError_FlutterError("A DefaultSelectionStyle constructed with DefaultSelectionStyle.fallback cannot be incorporated into the widget tree, it is meant only to provide a fallback value returned by DefaultSelectionStyle.of() when no enclosing default selection style is present in a BuildContext."));
    }
  };
  A.DefaultTextEditingShortcuts.prototype = {
    _getDisablingShortcut$0() {
      var t1, t2;
      switch (E.defaultTargetPlatform()) {
        case D.TargetPlatform_3:
          t1 = B.LinkedHashMap_LinkedHashMap$of($.$get$DefaultTextEditingShortcuts__webDisablingTextShortcuts(), type$.ShortcutActivator, type$.Intent);
          for (t2 = J.get$iterator$ax($.$get$DefaultTextEditingShortcuts__linuxNumpadShortcuts().get$keys()); B.boolConversionCheck(t2.moveNext$0());)
            t1.$indexSet(0, t2.get$current(), C.C_DoNothingAndStopPropagationTextIntent);
          return t1;
        case D.TargetPlatform_0:
        case D.TargetPlatform_1:
        case D.TargetPlatform_5:
        case D.TargetPlatform_2:
        case D.TargetPlatform_4:
          return $.$get$DefaultTextEditingShortcuts__webDisablingTextShortcuts();
      }
      switch (E.defaultTargetPlatform()) {
        case D.TargetPlatform_0:
        case D.TargetPlatform_1:
        case D.TargetPlatform_3:
        case D.TargetPlatform_5:
          return null;
        case D.TargetPlatform_2:
          return C.Map_rrcAz;
        case D.TargetPlatform_4:
          return $.$get$DefaultTextEditingShortcuts__macDisablingTextShortcuts();
      }
    },
    build$1(context) {
      var result, disablingShortcut;
      type$.BuildContext._as(context);
      result = this.child;
      disablingShortcut = this._getDisablingShortcut$0();
      if (disablingShortcut != null)
        result = A.Shortcuts$(result, "<Web Disabling Text Editing Shortcuts>", disablingShortcut);
      return A.Shortcuts$(result, "<Default Text Editing Shortcuts>", A.DefaultTextEditingShortcuts__shortcuts());
    }
  };
  A.DualTransitionBuilder.prototype = {
    createState$0() {
      return A._DualTransitionBuilderState$();
    },
    forwardBuilder$3(arg0, arg1, arg2) {
      return this.forwardBuilder.call$3(arg0, arg1, arg2);
    },
    reverseBuilder$3(arg0, arg1, arg2) {
      return this.reverseBuilder.call$3(arg0, arg1, arg2);
    }
  };
  A._DualTransitionBuilderState.prototype = {
    get$_effectiveAnimationStatus() {
      return this.___DualTransitionBuilderState__effectiveAnimationStatus_A;
    },
    set$_effectiveAnimationStatus(value) {
      this.___DualTransitionBuilderState__effectiveAnimationStatus_A = type$.AnimationStatus._as(value);
    },
    initState$0() {
      var _this = this;
      _this.super$State$initState0();
      _this.set$_effectiveAnimationStatus(_this.get$widget().animation.get$status());
      _this.get$widget().animation.addStatusListener$1(_this.get$_animationListener());
      _this._updateAnimations$0();
    },
    _animationListener$1(animationStatus) {
      var oldEffective, _this = this;
      type$.AnimationStatus._as(animationStatus);
      oldEffective = _this.get$_effectiveAnimationStatus();
      _this.set$_effectiveAnimationStatus(_this._calculateEffectiveAnimationStatus$2$current$lastEffective(animationStatus, _this.get$_effectiveAnimationStatus()));
      if (oldEffective !== _this.get$_effectiveAnimationStatus())
        _this._updateAnimations$0();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, _this = this;
      type$.DualTransitionBuilder._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = oldWidget.animation;
      if (!B.boolConversionCheck(J.$eq$(t1, _this.get$widget().animation))) {
        t2 = _this.get$_animationListener();
        t1.removeStatusListener$1(t2);
        _this.get$widget().animation.addStatusListener$1(t2);
        _this._animationListener$1(_this.get$widget().animation.get$status());
      }
    },
    _calculateEffectiveAnimationStatus$2$current$lastEffective(current, lastEffective) {
      var t1 = type$.AnimationStatus;
      t1._as(lastEffective);
      t1._as(current);
      switch (current.index) {
        case 0:
        case 3:
          return current;
        case 1:
          switch (lastEffective.index) {
            case 0:
            case 3:
            case 1:
              return current;
            case 2:
              return lastEffective;
          }
          break;
        case 2:
          switch (lastEffective.index) {
            case 0:
            case 3:
            case 2:
              return current;
            case 1:
              return lastEffective;
          }
          break;
      }
    },
    _updateAnimations$0() {
      var _this = this;
      switch (_this.get$_effectiveAnimationStatus()) {
        case C.AnimationStatus_0:
        case C.AnimationStatus_1:
          _this._forwardAnimation.set$parent(_this.get$widget().animation);
          _this._reverseAnimation.set$parent(C.C__AlwaysDismissedAnimation);
          break;
        case C.AnimationStatus_2:
        case C.AnimationStatus_3:
          _this._forwardAnimation.set$parent(C.C__AlwaysCompleteAnimation);
          _this._reverseAnimation.set$parent(A.ReverseAnimation$(_this.get$widget().animation));
          break;
      }
    },
    dispose$0() {
      this.get$widget().animation.removeStatusListener$1(this.get$_animationListener());
      this.super$State$dispose();
    },
    build$1(context) {
      var _this = this;
      type$.BuildContext._as(context);
      return _this.get$widget().forwardBuilder$3(context, _this._forwardAnimation, _this.get$widget().reverseBuilder$3(context, _this._reverseAnimation, _this.get$widget().child));
    }
  };
  A.RequestFocusAction.prototype = {
    invoke$1(intent) {
      type$.RequestFocusIntent._as(intent);
      intent.requestFocusCallback$1(intent.get$focusNode());
    }
  };
  A.NextFocusIntent.prototype = {};
  A.NextFocusAction.prototype = {
    invoke$1(intent) {
      type$.NextFocusIntent._as(intent);
      return E.primaryFocus().nextFocus$0();
    },
    toKeyEventResult$2(intent, invokeResult) {
      type$.NextFocusIntent._as(intent);
      return B._asBool(invokeResult) ? D.KeyEventResult_0 : D.KeyEventResult_2;
    }
  };
  A.PreviousFocusIntent.prototype = {};
  A.PreviousFocusAction.prototype = {
    invoke$1(intent) {
      type$.PreviousFocusIntent._as(intent);
      return E.primaryFocus().previousFocus$0();
    },
    toKeyEventResult$2(intent, invokeResult) {
      type$.PreviousFocusIntent._as(intent);
      return B._asBool(invokeResult) ? D.KeyEventResult_0 : D.KeyEventResult_2;
    }
  };
  A.DirectionalFocusAction.prototype = {
    invoke$1(intent) {
      type$.DirectionalFocusIntent._as(intent);
      E.primaryFocus().focusInDirection$1(intent.direction);
    }
  };
  A.LabeledGlobalKey.prototype = {
    toString$0(_) {
      var label, _this = this,
        t1 = _this._framework0$_debugLabel;
      if (t1 != null)
        label = " " + B.S(t1);
      else
        label = "";
      if (B.boolConversionCheck(J.$eq$(_this.get$runtimeType(0), C.Type_LabeledGlobalKey_EKR)))
        return "[GlobalKey#" + B.S(E.shortHash(_this)) + label + "]";
      return "[" + B.S(E.describeIdentity(_this)) + label + "]";
    }
  };
  A.GlobalObjectKey.prototype = {
    $eq(_, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      if (this.$ti._is(other)) {
        t1 = other.value;
        t2 = this.value;
        t2 = t1 == null ? t2 == null : t1 === t2;
        t1 = t2;
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return B.identityHashCode(this.value);
    },
    toString$0(_) {
      var selfType = E.objectRuntimeType(this, "GlobalObjectKey");
      if (B.boolConversionCheck(F.JSString_methods.endsWith$1(selfType, "<State<StatefulWidget>>")))
        selfType = F.JSString_methods.substring$2(selfType, 0, selfType.length - 23);
      return "[" + selfType + " " + B.S(E.describeIdentity(this.value)) + "]";
    }
  };
  A.ParentDataWidget.prototype = {
    createElement$0() {
      return A.ParentDataElement$(this, B._instanceType(this)._eval$1("ParentDataWidget.T"));
    }
  };
  A.MultiChildRenderObjectWidget.prototype = {
    createElement$0() {
      return A.MultiChildRenderObjectElement$(this);
    }
  };
  A.NotifiableElementMixin.prototype = {
    attachNotificationTree$0() {
      var t1 = this._framework0$_parent;
      this._framework0$_notificationTree = A._NotificationNode$(t1 == null ? null : t1._framework0$_notificationTree, this);
    },
    $isDiagnosticable: 1,
    $isDiagnosticableTree: 1,
    $isBuildContext: 1,
    $isElement0: 1,
    $is_DiagnosticableTree_Object_Diagnosticable: 1
  };
  A._NotificationNode.prototype = {
    dispatchNotification$1(notification) {
      var t1;
      type$.Notification._as(notification);
      t1 = this.current;
      t1 = t1 == null ? null : t1.onNotification$1(notification);
      if (B.boolConversionCheck(t1 == null ? true : t1))
        return;
      t1 = this.parent;
      if (t1 != null)
        t1.dispatchNotification$1(notification);
    }
  };
  A.ParentDataElement.prototype = {
    _applyParentData$1(widget) {
      var t1;
      this.$ti._eval$1("ParentDataWidget<1>")._as(widget);
      if (this.get$renderObjectAttachingChild() != null) {
        t1 = this.get$renderObjectAttachingChild();
        t1.toString;
        new A.ParentDataElement__applyParentData_applyParentDataToChild(widget).call$1(t1);
      }
    },
    notifyClients$1(oldWidget) {
      var t1 = this.$ti._eval$1("ParentDataWidget<1>");
      t1._as(oldWidget);
      this._applyParentData$1(t1._as(this.get$widget()));
    }
  };
  A.MultiChildRenderObjectElement.prototype = {
    get$renderObject() {
      return type$.ContainerRenderObjectMixin_of_RenderObject_and_ContainerParentDataMixin_RenderObject._as(E.RenderObjectElement.prototype.get$renderObject.call(this));
    },
    get$_framework0$_children() {
      return this.__MultiChildRenderObjectElement__children_A;
    },
    set$_framework0$_children(value) {
      this.set$__MultiChildRenderObjectElement__children_A(type$.List_Element._as(value));
    },
    insertRenderObjectChild$2(child, slot) {
      var renderObject, t1;
      type$.RenderObject._as(child);
      type$.IndexedSlot_nullable_Element._as(slot);
      renderObject = this.get$renderObject();
      t1 = slot.value;
      renderObject.insert$2$after(0, child, t1 == null ? null : t1.get$renderObject());
    },
    moveRenderObjectChild$3(child, oldSlot, newSlot) {
      var t1, renderObject;
      type$.RenderObject._as(child);
      t1 = type$.IndexedSlot_nullable_Element;
      t1._as(oldSlot);
      t1._as(newSlot);
      renderObject = this.get$renderObject();
      t1 = newSlot.value;
      renderObject.move$2$after(child, t1 == null ? null : t1.get$renderObject());
    },
    removeRenderObjectChild$2(child, slot) {
      type$.RenderObject._as(child);
      this.get$renderObject().remove$1(0, child);
    },
    visitChildren$1(visitor) {
      var t1, t2, t3, t4;
      type$.void_Function_Element._as(visitor);
      for (t1 = J.get$iterator$ax(this.get$_framework0$_children()), t2 = this._framework0$_forgottenChildren, t3 = J.getInterceptor$asx(t2); B.boolConversionCheck(t1.moveNext$0());) {
        t4 = t1.get$current();
        if (!B.boolConversionCheck(t3.contains$1(t2, t4)))
          visitor.call$1(t4);
      }
    },
    forgetChild$1(child) {
      type$.Element._as(child);
      J.add$1$ax(this._framework0$_forgottenChildren, child);
      this.super$Element$forgetChild(child);
    },
    inflateWidget$2(newWidget, newSlot) {
      return this.super$Element$inflateWidget(type$.Widget._as(newWidget), newSlot);
    },
    mount$2($parent, newSlot) {
      var t2, t3, children, t4, previousChild, i, t5, newChild, _this = this,
        t1 = type$.nullable_Element;
      _this.super$RenderObjectElement$mount(t1._as($parent), newSlot);
      t2 = type$.MultiChildRenderObjectWidget._as(_this.get$widget()).children;
      t3 = J.getInterceptor$asx(t2);
      children = B.List_List$filled(t3.get$length(t2), $.$get$_NullElement_instance(), false, type$.Element);
      t4 = J.getInterceptor$asx(children);
      previousChild = null;
      i = 0;
      while (true) {
        t5 = t4.get$length(children);
        if (typeof t5 !== "number")
          return B.iae(t5);
        if (!(i < t5))
          break;
        newChild = _this.inflateWidget$2(t3.$index(t2, i), E.IndexedSlot$(i, previousChild, t1));
        t4.$indexSet(children, i, newChild);
        ++i;
        previousChild = newChild;
      }
      _this.set$_framework0$_children(children);
    },
    update$1(newWidget) {
      var multiChildRenderObjectWidget, _this = this,
        t1 = type$.MultiChildRenderObjectWidget;
      _this.super$RenderObjectElement$update(t1._as(newWidget));
      multiChildRenderObjectWidget = t1._as(_this.get$widget());
      t1 = _this._framework0$_forgottenChildren;
      _this.set$_framework0$_children(_this.updateChildren$3$forgottenChildren(_this.get$_framework0$_children(), multiChildRenderObjectWidget.children, t1));
      J.clear$0$ax(t1);
    },
    set$__MultiChildRenderObjectElement__children_A(__MultiChildRenderObjectElement__children_A) {
      this.__MultiChildRenderObjectElement__children_A = type$.List_Element._as(__MultiChildRenderObjectElement__children_A);
    }
  };
  A.GestureRecognizerFactory.prototype = {};
  A.GestureRecognizerFactoryWithHandlers.prototype = {
    constructor$0() {
      return this._constructor.call$0();
    },
    initializer$1(instance) {
      return this._gesture_detector$_initializer.call$1(this.$ti._precomputed1._as(instance));
    }
  };
  A.GestureDetector.prototype = {
    build$1(context) {
      var gestures, gestureSettings, configuration, t1, _this = this;
      type$.BuildContext._as(context);
      gestures = B.LinkedHashMap_LinkedHashMap$_empty(type$.Type, type$.GestureRecognizerFactory_GestureRecognizer);
      gestureSettings = A.MediaQuery_maybeGestureSettingsOf(context);
      configuration = A.ScrollConfiguration_of(context);
      t1 = true;
      if (_this.onTapDown == null)
        if (_this.onTapUp == null)
          if (_this.onTap == null)
            if (_this.onTapCancel == null)
              if (_this.onSecondaryTap == null)
                if (_this.onSecondaryTapDown == null)
                  if (_this.onSecondaryTapUp == null)
                    t1 = _this.onSecondaryTapCancel != null;
      if (t1)
        gestures.$indexSet(0, C.Type_TapGestureRecognizer_o05, A.GestureRecognizerFactoryWithHandlers$(new A.GestureDetector_build_closure(_this), new A.GestureDetector_build_closure0(_this, gestureSettings), type$.TapGestureRecognizer));
      if (_this.onDoubleTap != null)
        gestures.$indexSet(0, C.Type_DoubleTapGestureRecognizer_ww8, A.GestureRecognizerFactoryWithHandlers$(new A.GestureDetector_build_closure1(_this), new A.GestureDetector_build_closure2(_this, gestureSettings), type$.DoubleTapGestureRecognizer));
      t1 = true;
      t1 = _this.onLongPress == null;
      t1;
      t1 = !t1;
      if (t1)
        gestures.$indexSet(0, C.Type_LongPressGestureRecognizer_kMT, A.GestureRecognizerFactoryWithHandlers$(new A.GestureDetector_build_closure3(_this), new A.GestureDetector_build_closure4(_this, gestureSettings), type$.LongPressGestureRecognizer));
      t1 = true;
      t1 = _this.onPanEnd != null;
      if (t1)
        gestures.$indexSet(0, C.Type_PanGestureRecognizer_wX3, A.GestureRecognizerFactoryWithHandlers$(new A.GestureDetector_build_closure5(_this), new A.GestureDetector_build_closure6(_this, configuration, context, gestureSettings), type$.PanGestureRecognizer));
      return A.RawGestureDetector$(_this.behavior, _this.child, _this.excludeFromSemantics, gestures);
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.EnumProperty$("startBehavior", C.DragStartBehavior_1, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.DragStartBehavior));
    }
  };
  A.RawGestureDetector.prototype = {
    createState$0() {
      return A.RawGestureDetectorState$();
    }
  };
  A.RawGestureDetectorState.prototype = {
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState0();
      _this.get$widget().toString;
      t1 = A._DefaultSemanticsGestureDelegate$(_this);
      _this._gesture_detector$_semantics = t1;
      _this._syncAll$1(_this.get$widget().gestures);
    },
    didUpdateWidget$1(oldWidget) {
      var _this = this;
      _this.super$State$didUpdateWidget(type$.RawGestureDetector._as(oldWidget));
      _this.get$widget().toString;
      _this._syncAll$1(_this.get$widget().gestures);
    },
    dispose$0() {
      for (var t1 = J.get$iterator$ax(this._recognizers.get$values()); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().dispose$0();
      this.set$_recognizers(null);
      this.super$State$dispose();
    },
    _syncAll$1(gestures) {
      var t1, t2, t3, t4, t5, _this = this;
      type$.Map_of_Type_and_GestureRecognizerFactory_GestureRecognizer._as(gestures);
      t1 = _this._recognizers;
      t1.toString;
      _this.set$_recognizers(B.LinkedHashMap_LinkedHashMap$_empty(type$.Type, type$.GestureRecognizer));
      for (t2 = J.get$iterator$ax(gestures.get$keys()); B.boolConversionCheck(t2.moveNext$0());) {
        t3 = t2.get$current();
        t4 = _this._recognizers;
        t4.toString;
        t5 = t1.$index(0, t3);
        J.$indexSet$ax(t4, t3, t5 == null ? gestures.$index(0, t3).constructor$0() : t5);
        t4 = gestures.$index(0, t3);
        t4.toString;
        t5 = _this._recognizers;
        t5.toString;
        t3 = J.$index$asx(t5, t3);
        t3.toString;
        t4.initializer$1(t3);
      }
      for (t2 = J.get$iterator$ax(t1.get$keys()); B.boolConversionCheck(t2.moveNext$0());) {
        t3 = t2.get$current();
        if (!B.boolConversionCheck(_this._recognizers.containsKey$1(t3)))
          t1.$index(0, t3).dispose$0();
      }
    },
    _handlePointerDown$1($event) {
      var t1;
      type$.PointerDownEvent._as($event);
      for (t1 = J.get$iterator$ax(this._recognizers.get$values()); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().addPointer$1($event);
    },
    _handlePointerPanZoomStart$1($event) {
      var t1;
      type$.PointerPanZoomStartEvent._as($event);
      for (t1 = J.get$iterator$ax(this._recognizers.get$values()); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().addPointerPanZoom$1($event);
    },
    get$_defaultBehavior() {
      return this.get$widget().child == null ? C.HitTestBehavior_2 : C.HitTestBehavior_0;
    },
    _updateSemanticsForRenderObject$1(renderObject) {
      type$.RenderSemanticsGestureHandler._as(renderObject);
      this._gesture_detector$_semantics.assignSemantics$1(renderObject);
    },
    build$1(context) {
      var t1, result, _this = this;
      type$.BuildContext._as(context);
      t1 = _this.get$widget().behavior;
      if (t1 == null)
        t1 = _this.get$_defaultBehavior();
      result = A.Listener$(t1, _this.get$widget().child, null, _this.get$_handlePointerDown(), _this.get$_handlePointerPanZoomStart(), null);
      if (!B.boolConversionCheck(_this.get$widget().excludeFromSemantics)) {
        t1 = _this.get$widget().behavior;
        if (t1 == null)
          t1 = _this.get$_defaultBehavior();
        result = A._GestureSemantics$(_this.get$_updateSemanticsForRenderObject(), t1, result);
      }
      return result;
    },
    debugFillProperties$1(properties) {
      var t1, t2, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$State$debugFillProperties(properties);
      t1 = _this._recognizers;
      if (t1 == null)
        properties.add$1(0, E.DiagnosticsNode_DiagnosticsNode$message("DISPOSED", true, D.DiagnosticsTreeStyle_8));
      else {
        t2 = type$.String;
        properties.add$1(0, E.IterableProperty$("gestures", J.toList$0$ax(J.map$1$1$ax(t1.get$values(), new A.RawGestureDetectorState_debugFillProperties_closure(), t2)), D.C__NoDefaultValue, "<none>", D.DiagnosticLevel_3, D.DiagnosticsTreeStyle_8, t2));
        properties.add$1(0, E.IterableProperty$("recognizers", _this._recognizers.get$values(), D.C__NoDefaultValue, "[]", D.DiagnosticLevel_1, D.DiagnosticsTreeStyle_8, type$.GestureRecognizer));
        properties.add$1(0, E.DiagnosticsProperty$("excludeFromSemantics", _this.get$widget().excludeFromSemantics, true, false, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
        if (!B.boolConversionCheck(_this.get$widget().excludeFromSemantics)) {
          _this.get$widget().toString;
          properties.add$1(0, E.DiagnosticsProperty$("semantics", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.SemanticsGestureDelegate));
        }
      }
      properties.add$1(0, E.EnumProperty$("behavior", _this.get$widget().behavior, _null, D.DiagnosticLevel_3, type$.HitTestBehavior));
    },
    set$_recognizers(_recognizers) {
      this._recognizers = type$.nullable_Map_Type_GestureRecognizer._as(_recognizers);
    }
  };
  A._GestureSemantics.prototype = {
    createRenderObject$1(context) {
      var renderObject;
      type$.BuildContext._as(context);
      renderObject = A.RenderSemanticsGestureHandler$();
      renderObject.set$behavior(this.behavior);
      this.assignSemantics.call$1(renderObject);
      return renderObject;
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$.RenderSemanticsGestureHandler._as(renderObject);
      renderObject.set$behavior(this.behavior);
      this.assignSemantics.call$1(renderObject);
    }
  };
  A.SemanticsGestureDelegate.prototype = {
    toString$0(_) {
      return B.S(E.objectRuntimeType(this, "SemanticsGestureDelegate")) + "()";
    }
  };
  A._DefaultSemanticsGestureDelegate.prototype = {
    assignSemantics$1(renderObject) {
      var t1, _this = this;
      type$.RenderSemanticsGestureHandler._as(renderObject);
      t1 = _this.detectorState._recognizers;
      t1.toString;
      renderObject.set$onTap(_this._getTapHandler$1(t1));
      renderObject.set$onLongPress(_this._getLongPressHandler$1(t1));
      renderObject.set$onHorizontalDragUpdate(_this._getHorizontalDragUpdateHandler$1(t1));
      renderObject.set$onVerticalDragUpdate(_this._getVerticalDragUpdateHandler$1(t1));
    },
    _getTapHandler$1(recognizers) {
      var tap = type$.nullable_TapGestureRecognizer._as(type$.Map_Type_GestureRecognizer._as(recognizers).$index(0, C.Type_TapGestureRecognizer_o05));
      if (tap == null)
        return null;
      return new A._DefaultSemanticsGestureDelegate__getTapHandler_closure(tap);
    },
    _getLongPressHandler$1(recognizers) {
      var longPress = type$.nullable_LongPressGestureRecognizer._as(type$.Map_Type_GestureRecognizer._as(recognizers).$index(0, C.Type_LongPressGestureRecognizer_kMT));
      if (longPress == null)
        return null;
      return new A._DefaultSemanticsGestureDelegate__getLongPressHandler_closure(longPress);
    },
    _getHorizontalDragUpdateHandler$1(recognizers) {
      var horizontal, pan, horizontalHandler, panHandler;
      type$.Map_Type_GestureRecognizer._as(recognizers);
      horizontal = type$.nullable_HorizontalDragGestureRecognizer._as(recognizers.$index(0, C.Type_Q4d));
      pan = type$.nullable_PanGestureRecognizer._as(recognizers.$index(0, C.Type_PanGestureRecognizer_wX3));
      horizontalHandler = horizontal == null ? null : new A._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure(horizontal);
      panHandler = pan == null ? null : new A._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure0(pan);
      if (horizontalHandler == null && panHandler == null)
        return null;
      return new A._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure1(horizontalHandler, panHandler);
    },
    _getVerticalDragUpdateHandler$1(recognizers) {
      var vertical, pan, verticalHandler, panHandler;
      type$.Map_Type_GestureRecognizer._as(recognizers);
      vertical = type$.nullable_VerticalDragGestureRecognizer._as(recognizers.$index(0, C.Type_4AN));
      pan = type$.nullable_PanGestureRecognizer._as(recognizers.$index(0, C.Type_PanGestureRecognizer_wX3));
      verticalHandler = vertical == null ? null : new A._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure(vertical);
      panHandler = pan == null ? null : new A._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure0(pan);
      if (verticalHandler == null && panHandler == null)
        return null;
      return new A._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure1(verticalHandler, panHandler);
    }
  };
  A.HeroFlightDirection.prototype = {
    _enumToString$0() {
      return "HeroFlightDirection." + B.S(this._core$_name);
    }
  };
  A.Hero.prototype = {
    createState$0() {
      return A._HeroState$();
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("tag", this.tag, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Object));
    }
  };
  A._HeroState.prototype = {
    startFlight$1$shouldIncludedChildInPlaceholder(shouldIncludedChildInPlaceholder) {
      var t1, _this = this;
      _this._shouldIncludeChild = B._asBool(shouldIncludedChildInPlaceholder);
      t1 = _this.get$context().findRenderObject$0();
      t1.toString;
      _this.setState$1(new A._HeroState_startFlight_closure(_this, type$.RenderBox._as(t1)));
    },
    startFlight$0() {
      return this.startFlight$1$shouldIncludedChildInPlaceholder(false);
    },
    endFlight$1$keepPlaceholder(keepPlaceholder) {
      var _this = this;
      if (B._asBool(keepPlaceholder) || _this._placeholderSize == null)
        return;
      _this._placeholderSize = null;
      if (B.boolConversionCheck(_this.get$mounted()))
        _this.setState$1(new A._HeroState_endFlight_closure());
    },
    endFlight$0() {
      return this.endFlight$1$keepPlaceholder(false);
    },
    build$1(context) {
      var t1, showPlaceholder, t2, t3, _this = this;
      type$.BuildContext._as(context);
      t1 = _this._placeholderSize == null;
      showPlaceholder = !t1;
      if (showPlaceholder)
        _this.get$widget().toString;
      if (showPlaceholder && !B.boolConversionCheck(_this._shouldIncludeChild)) {
        t1 = _this._placeholderSize.get$width();
        return A.SizedBox$(null, _this._placeholderSize.get$height(), t1);
      }
      t2 = _this._placeholderSize;
      t2 = t2 == null ? null : t2.get$width();
      t3 = _this._placeholderSize;
      t3 = t3 == null ? null : t3.get$height();
      return A.SizedBox$(A.Offstage$(A.TickerMode$(A.KeyedSubtree$(_this.get$widget().child, _this._heroes$_key), t1), showPlaceholder), t3, t2);
    },
    set$_placeholderSize(_placeholderSize) {
      this._placeholderSize = type$.nullable_Size._as(_placeholderSize);
    }
  };
  A._HeroFlightManifest.prototype = {
    get$tag() {
      return this.fromHero.get$widget().tag;
    },
    get$animation() {
      var _this = this,
        t1 = _this._heroes$_animation;
      if (t1 == null) {
        if (B.boolConversionCheck(J.$eq$(_this.type, C.HeroFlightDirection_0))) {
          t1 = _this.toRoute.get$animation();
          t1.toString;
        } else {
          t1 = _this.fromRoute.get$animation();
          t1.toString;
        }
        t1 = _this._heroes$_animation = A.CurvedAnimation$(C.Cubic_EBD, t1, B.boolConversionCheck(_this.isDiverted) ? null : C.Cubic_EBD.get$flipped());
      }
      return t1;
    },
    createHeroRectTween$2$begin$end(begin, end) {
      var createRectTween,
        t1 = type$.nullable_Rect;
      t1._as(begin);
      t1._as(end);
      this.toHero.get$widget().toString;
      createRectTween = this.createRectTween;
      t1 = createRectTween == null ? null : createRectTween.call$2(begin, end);
      return t1 == null ? A.RectTween$(begin, end) : t1;
    },
    get$fromHeroLocation() {
      var result, _this = this,
        value = _this.___HeroFlightManifest_fromHeroLocation_FI;
      if (B.boolConversionCheck(E.isSentinel(value))) {
        result = A._HeroFlightManifest__boundingBoxFor(_this.fromHero.get$context(), _this.fromRoute.get$subtreeContext());
        _this.___HeroFlightManifest_fromHeroLocation_FI !== $ && B.throwLateFieldADI("fromHeroLocation");
        _this.___HeroFlightManifest_fromHeroLocation_FI = result;
        value = result;
      }
      return value;
    },
    get$toHeroLocation() {
      var result, _this = this,
        value = _this.___HeroFlightManifest_toHeroLocation_FI;
      if (B.boolConversionCheck(E.isSentinel(value))) {
        result = A._HeroFlightManifest__boundingBoxFor(_this.toHero.get$context(), _this.toRoute.get$subtreeContext());
        _this.___HeroFlightManifest_toHeroLocation_FI !== $ && B.throwLateFieldADI("toHeroLocation");
        _this.___HeroFlightManifest_toHeroLocation_FI = result;
        value = result;
      }
      return value;
    },
    get$isValid() {
      var result, _this = this,
        value = _this.___HeroFlightManifest_isValid_FI;
      if (B.boolConversionCheck(E.isSentinel(value))) {
        if (B.boolConversionCheck(J.get$isFinite$n(_this.get$toHeroLocation())))
          result = B.boolConversionCheck(_this.isDiverted) || B.boolConversionCheck(J.get$isFinite$n(_this.get$fromHeroLocation()));
        else
          result = false;
        _this.___HeroFlightManifest_isValid_FI !== $ && B.throwLateFieldADI("isValid");
        value = _this.___HeroFlightManifest_isValid_FI = result;
      }
      return value;
    },
    toString$0(_) {
      var _this = this,
        t1 = B.S(_this.type),
        t2 = B.S(_this.get$tag()),
        t3 = B.S(_this.fromRoute.get$settings()),
        t4 = B.S(_this.toRoute.get$settings()),
        t5 = B.S(_this.fromHero),
        t6 = B.S(_this.toHero),
        t7 = B.boolConversionCheck(_this.get$isValid()) ? "" : ", INVALID";
      return "_HeroFlightManifest(" + t1 + " tag: " + t2 + " from route: " + t3 + " to route: " + t4 + " with hero: " + t5 + " to " + t6 + ")" + t7;
    },
    dispose$0() {
      var t1 = this._heroes$_animation;
      if (t1 != null)
        t1.dispose$0();
    },
    shuttleBuilder$5(arg0, arg1, arg2, arg3, arg4) {
      return this.shuttleBuilder.call$5(arg0, arg1, arg2, arg3, arg4);
    }
  };
  A._HeroFlight.prototype = {
    _HeroFlight$1(onFlightEnded) {
      var t1;
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(B.S(C.Type__HeroFlight_ku2), "package:flutter/widgets.dart", this);
      t1 = A.ProxyAnimation$(null);
      t1.addStatusListener$1(this.get$_handleAnimationUpdate());
      this.set$_proxyAnimation(t1);
    },
    get$heroRectTween() {
      return this.___HeroFlight_heroRectTween_A;
    },
    set$heroRectTween(value) {
      this.set$___HeroFlight_heroRectTween_A(type$.Tween_nullable_Rect._as(value));
    },
    get$_proxyAnimation() {
      return this.___HeroFlight__proxyAnimation_A;
    },
    set$_proxyAnimation(value) {
      this.___HeroFlight__proxyAnimation_A = type$.ProxyAnimation._as(value);
    },
    get$manifest() {
      var t1 = this._manifest;
      t1.toString;
      return t1;
    },
    set$manifest(value) {
      var t1;
      type$._HeroFlightManifest._as(value);
      t1 = this._manifest;
      if (t1 != null)
        t1.dispose$0();
      this._manifest = value;
    },
    _buildOverlay$1(context) {
      var _this = this;
      type$.BuildContext._as(context);
      if (_this.shuttle == null)
        _this.set$shuttle(_this.get$manifest().shuttleBuilder$5(context, _this.get$manifest().get$animation(), _this.get$manifest().type, _this.get$manifest().fromHero.get$context(), _this.get$manifest().toHero.get$context()));
      return A.AnimatedBuilder$(_this.get$_proxyAnimation(), new A._HeroFlight__buildOverlay_closure(_this), _this.shuttle);
    },
    _performAnimationUpdate$1($status) {
      var t1, _this = this;
      type$.AnimationStatus._as($status);
      if (!B.boolConversionCheck($status.get$isAnimating())) {
        _this.get$_proxyAnimation().set$parent(null);
        t1 = _this.overlayEntry;
        t1.toString;
        J.remove$0$ax(t1);
        _this.overlayEntry.dispose$0();
        _this.overlayEntry = null;
        _this.get$manifest().fromHero.endFlight$1$keepPlaceholder($status.get$isCompleted());
        _this.get$manifest().toHero.endFlight$1$keepPlaceholder($status.get$isDismissed());
        _this.onFlightEnded.call$1(_this);
        _this.get$_proxyAnimation().removeListener$1(_this.get$onTick());
      }
    },
    _handleAnimationUpdate$1($status) {
      var t1, _this = this;
      type$.AnimationStatus._as($status);
      t1 = _this.get$manifest().fromRoute.get$navigator();
      if (!B.boolConversionCheck(J.$eq$(t1 == null ? null : t1.get$userGestureInProgress(), true))) {
        _this._performAnimationUpdate$1($status);
        return;
      }
      if (B.boolConversionCheck(_this._scheduledPerformAnimationUpdate))
        return;
      t1 = _this.get$manifest().fromRoute.get$navigator();
      t1.toString;
      _this._scheduledPerformAnimationUpdate = true;
      t1.userGestureInProgressNotifier.addListener$1(new A._HeroFlight__handleAnimationUpdate_delayedPerformAnimationUpdate(_this, t1));
    },
    dispose$0() {
      var t1, _this = this;
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectDisposed$1$object(_this);
      t1 = _this.overlayEntry;
      if (t1 != null) {
        J.remove$0$ax(t1);
        _this.overlayEntry.dispose$0();
        _this.overlayEntry = null;
        _this.get$_proxyAnimation().set$parent(null);
        _this.get$_proxyAnimation().removeListener$1(_this.get$onTick());
        _this.get$_proxyAnimation().removeStatusListener$1(_this.get$_handleAnimationUpdate());
      }
      t1 = _this._manifest;
      if (t1 != null)
        t1.dispose$0();
    },
    onTick$0() {
      var t1, toHeroOrigin, heroRectEnd, _this = this,
        toHeroBox = !B.boolConversionCheck(_this._aborted) && B.boolConversionCheck(_this.get$manifest().toHero.get$mounted()) ? type$.nullable_RenderBox._as(_this.get$manifest().toHero.get$context().findRenderObject$0()) : null;
      if (toHeroBox != null && B.boolConversionCheck(toHeroBox.get$attached()) && B.boolConversionCheck(toHeroBox.get$hasSize())) {
        t1 = _this.get$manifest().toRoute.get$subtreeContext();
        t1 = t1 == null ? null : t1.findRenderObject$0();
        toHeroOrigin = toHeroBox.localToGlobal$2$ancestor(D.Offset_0_0, type$.nullable_RenderBox._as(t1));
      } else
        toHeroOrigin = null;
      t1 = toHeroOrigin != null;
      if (t1 && B.boolConversionCheck(toHeroOrigin.get$isFinite(0))) {
        if (!B.boolConversionCheck(J.$eq$(toHeroOrigin, _this.get$heroRectTween().end.get$topLeft()))) {
          heroRectEnd = toHeroOrigin.$and(0, _this.get$heroRectTween().end.get$size());
          _this.set$heroRectTween(_this.get$manifest().createHeroRectTween$2$begin$end(_this.get$heroRectTween().begin, heroRectEnd));
        }
      } else if (B.boolConversionCheck(_this._heroOpacity.get$isCompleted()))
        _this.set$_heroOpacity(_this.get$_proxyAnimation().drive$1$1($.$get$_HeroFlight__reverseTween().chain$1(A.CurveTween$(A.Interval$(_this.get$_proxyAnimation().get$value(), 1))), type$.double));
      _this._aborted = !t1 || !B.boolConversionCheck(toHeroOrigin.get$isFinite(0));
    },
    start$1(initialManifest) {
      var shouldIncludeChildInPlaceholder, t1, t2, _this = this;
      _this.set$manifest(type$._HeroFlightManifest._as(initialManifest));
      switch (_this.get$manifest().type) {
        case C.HeroFlightDirection_1:
          _this.get$_proxyAnimation().set$parent(A.ReverseAnimation$(_this.get$manifest().get$animation()));
          shouldIncludeChildInPlaceholder = false;
          break;
        case C.HeroFlightDirection_0:
          _this.get$_proxyAnimation().set$parent(_this.get$manifest().get$animation());
          shouldIncludeChildInPlaceholder = true;
          break;
        default:
          shouldIncludeChildInPlaceholder = null;
      }
      _this.set$heroRectTween(_this.get$manifest().createHeroRectTween$2$begin$end(_this.get$manifest().get$fromHeroLocation(), _this.get$manifest().get$toHeroLocation()));
      _this.get$manifest().fromHero.startFlight$1$shouldIncludedChildInPlaceholder(shouldIncludeChildInPlaceholder);
      _this.get$manifest().toHero.startFlight$0();
      t1 = _this.get$manifest().overlay;
      t2 = A.OverlayEntry$(_this.get$_buildOverlay(), false, false);
      _this.overlayEntry = t2;
      J.insert$1$ax(t1, t2);
      _this.get$_proxyAnimation().addListener$1(_this.get$onTick());
    },
    divert$1(newManifest) {
      var t1, t2, _this = this;
      type$._HeroFlightManifest._as(newManifest);
      if (B.boolConversionCheck(J.$eq$(_this.get$manifest().type, C.HeroFlightDirection_0)) && B.boolConversionCheck(J.$eq$(newManifest.type, C.HeroFlightDirection_1))) {
        _this.get$_proxyAnimation().set$parent(A.ReverseAnimation$(newManifest.get$animation()));
        _this.set$heroRectTween(A.ReverseTween$(_this.get$heroRectTween(), type$.nullable_Rect));
      } else if (B.boolConversionCheck(J.$eq$(_this.get$manifest().type, C.HeroFlightDirection_1)) && B.boolConversionCheck(J.$eq$(newManifest.type, C.HeroFlightDirection_0))) {
        t1 = type$.double;
        _this.get$_proxyAnimation().set$parent(newManifest.get$animation().drive$1$1(A.Tween$(_this.get$manifest().get$animation().get$value(), 1, t1), t1));
        t1 = newManifest.toHero;
        if (!B.boolConversionCheck(J.$eq$(_this.get$manifest().fromHero, t1))) {
          _this.get$manifest().fromHero.endFlight$1$keepPlaceholder(true);
          t1.startFlight$0();
          _this.set$heroRectTween(_this.get$manifest().createHeroRectTween$2$begin$end(_this.get$heroRectTween().end, newManifest.get$toHeroLocation()));
        } else
          _this.set$heroRectTween(_this.get$manifest().createHeroRectTween$2$begin$end(_this.get$heroRectTween().end, _this.get$heroRectTween().begin));
      } else {
        _this.set$heroRectTween(_this.get$manifest().createHeroRectTween$2$begin$end(_this.get$heroRectTween().evaluate$1(_this.get$_proxyAnimation()), newManifest.get$toHeroLocation()));
        _this.shuttle = null;
        t1 = newManifest.type;
        t2 = J.getInterceptor$(t1);
        if (B.boolConversionCheck(t2.$eq(t1, C.HeroFlightDirection_1)))
          _this.get$_proxyAnimation().set$parent(A.ReverseAnimation$(newManifest.get$animation()));
        else
          _this.get$_proxyAnimation().set$parent(newManifest.get$animation());
        _this.get$manifest().fromHero.endFlight$1$keepPlaceholder(true);
        _this.get$manifest().toHero.endFlight$1$keepPlaceholder(true);
        newManifest.fromHero.startFlight$1$shouldIncludedChildInPlaceholder(t2.$eq(t1, C.HeroFlightDirection_0));
        newManifest.toHero.startFlight$0();
        _this.overlayEntry.markNeedsBuild$0();
      }
      _this.set$manifest(newManifest);
    },
    abort$0() {
      this._aborted = true;
    },
    toString$0(_) {
      var _this = this,
        from = _this.get$manifest().fromRoute.get$settings(),
        to = _this.get$manifest().toRoute.get$settings();
      return "HeroFlight(for: " + B.S(_this.get$manifest().get$tag()) + ", from: " + B.S(from) + ", to: " + B.S(to) + " " + B.S(_this.get$_proxyAnimation().get$parent()) + ")";
    },
    set$___HeroFlight_heroRectTween_A(___HeroFlight_heroRectTween_A) {
      this.___HeroFlight_heroRectTween_A = type$.Tween_nullable_Rect._as(___HeroFlight_heroRectTween_A);
    },
    set$shuttle(shuttle) {
      this.shuttle = type$.nullable_Widget._as(shuttle);
    },
    set$_heroOpacity(_heroOpacity) {
      this._heroOpacity = type$.Animation_double._as(_heroOpacity);
    }
  };
  A.HeroController.prototype = {
    HeroController$1$createRectTween(createRectTween) {
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(B.S(C.Type_HeroController_ivD), "package:flutter/widgets.dart", this);
    },
    didPush$2(route, previousRoute) {
      type$.Route_dynamic._as(route);
      this._maybeStartHeroTransition$4(type$.nullable_Route_dynamic._as(previousRoute), route, C.HeroFlightDirection_0, false);
    },
    didPop$2(route, previousRoute) {
      type$.Route_dynamic._as(route);
      type$.nullable_Route_dynamic._as(previousRoute);
      if (!B.boolConversionCheck(this.get$navigator().get$userGestureInProgress()))
        this._maybeStartHeroTransition$4(route, previousRoute, C.HeroFlightDirection_1, false);
    },
    didReplace$2$newRoute$oldRoute(newRoute, oldRoute) {
      var t1 = type$.nullable_Route_dynamic;
      t1._as(newRoute);
      t1._as(oldRoute);
      t1 = newRoute == null ? null : newRoute.get$isCurrent();
      if (B.boolConversionCheck(t1 == null ? false : t1))
        this._maybeStartHeroTransition$4(oldRoute, newRoute, C.HeroFlightDirection_0, false);
    },
    didStartUserGesture$2(route, previousRoute) {
      this._maybeStartHeroTransition$4(type$.Route_dynamic._as(route), type$.nullable_Route_dynamic._as(previousRoute), C.HeroFlightDirection_1, true);
    },
    didStopUserGesture$0() {
      if (B.boolConversionCheck(this.get$navigator().get$userGestureInProgress()))
        return;
      for (var t1 = J.get$iterator$ax(J.toList$1$growable$ax(J.where$1$ax(this._flights.get$values(), new A.HeroController_didStopUserGesture_isInvalidFlight()), false)); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current()._handleAnimationUpdate$1(C.AnimationStatus_0);
    },
    _maybeStartHeroTransition$4(fromRoute, toRoute, flightType, isUserGestureTransition) {
      var t1 = type$.nullable_Route_dynamic;
      t1._as(fromRoute);
      t1._as(toRoute);
      type$.HeroFlightDirection._as(flightType);
      B._asBool(isUserGestureTransition);
      if (toRoute == fromRoute || !(toRoute instanceof A.MaterialPageRoute) || !(fromRoute instanceof A.MaterialPageRoute))
        return;
      switch (flightType.index) {
        case 1:
          if (B.boolConversionCheck(J.$eq$(fromRoute.get$animation().get$value(), 0)))
            return;
          break;
        case 0:
          if (B.boolConversionCheck(J.$eq$(toRoute.get$animation().get$value(), 1)))
            return;
          break;
      }
      if (isUserGestureTransition)
        t1 = flightType === C.HeroFlightDirection_1;
      else
        t1 = false;
      if (t1)
        this._startHeroTransition$4(fromRoute, toRoute, flightType, isUserGestureTransition);
      else {
        toRoute.set$offstage(J.$eq$(toRoute.get$animation().get$value(), 0));
        E.WidgetsBinding_instance().addPostFrameCallback$2$debugLabel(new A.HeroController__maybeStartHeroTransition_closure(this, fromRoute, toRoute, flightType, isUserGestureTransition), "HeroController.startTransition");
      }
    },
    _startHeroTransition$4(from, to, flightType, isUserGestureTransition) {
      var $navigator, overlay, navigatorRenderObject, fromSubtreeContext, fromHeroes, toSubtreeContext, toHeroes, t2, t3, t4, t5, t6, t7, tag, fromHero, toHero, existingFlight, manifest, _this = this,
        t1 = type$.PageRoute_dynamic;
      t1._as(from);
      t1._as(to);
      type$.HeroFlightDirection._as(flightType);
      B._asBool(isUserGestureTransition);
      to.set$offstage(false);
      $navigator = _this.get$navigator();
      t1 = $navigator == null;
      overlay = t1 ? null : $navigator.get$overlay();
      if (t1 || overlay == null)
        return;
      navigatorRenderObject = $navigator.get$context().findRenderObject$0();
      if (!(navigatorRenderObject instanceof E.RenderBox))
        return;
      fromSubtreeContext = from.get$subtreeContext();
      fromHeroes = fromSubtreeContext != null ? A.Hero__allHeroesFor(fromSubtreeContext, isUserGestureTransition, $navigator) : C.Map_empty5;
      toSubtreeContext = to.get$subtreeContext();
      toHeroes = toSubtreeContext != null ? A.Hero__allHeroesFor(toSubtreeContext, isUserGestureTransition, $navigator) : C.Map_empty5;
      for (t1 = J.get$iterator$ax(fromHeroes.get$entries()), t2 = _this.get$_defaultHeroFlightShuttleBuilder(), t3 = _this.createRectTween, t4 = _this._flights, t5 = J.getInterceptor$asx(t4), t6 = _this.get$_handleFlightEnded(); B.boolConversionCheck(t1.moveNext$0());) {
        t7 = t1.get$current();
        tag = t7.key;
        fromHero = t7.value;
        toHero = toHeroes.$index(0, tag);
        existingFlight = t5.$index(t4, tag);
        if (toHero == null)
          manifest = null;
        else {
          t7 = navigatorRenderObject.get$size();
          toHero.get$widget().toString;
          fromHero.get$widget().toString;
          manifest = A._HeroFlightManifest$(t3, fromHero, from, existingFlight != null, isUserGestureTransition, t7, overlay, t2, toHero, to, flightType);
        }
        if (manifest != null && B.boolConversionCheck(manifest.get$isValid())) {
          toHeroes.remove$1(0, tag);
          if (existingFlight != null)
            existingFlight.divert$1(manifest);
          else {
            t7 = A._HeroFlight$(t6);
            t7.start$1(manifest);
            t5.$indexSet(t4, tag, t7);
          }
        } else if (existingFlight != null)
          existingFlight.abort$0();
      }
      for (t1 = J.get$iterator$ax(toHeroes.get$values()); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().endFlight$0();
    },
    _handleFlightEnded$1(flight) {
      var t1 = J.remove$1$ax(this._flights, type$._HeroFlight._as(flight).get$manifest().get$tag());
      if (t1 != null)
        t1.dispose$0();
    },
    _defaultHeroFlightShuttleBuilder$5(flightContext, animation, flightDirection, fromHeroContext, toHeroContext) {
      var toHero, toMediaQueryData, fromMediaQueryData,
        t1 = type$.BuildContext;
      t1._as(flightContext);
      type$.Animation_double._as(animation);
      type$.HeroFlightDirection._as(flightDirection);
      t1._as(fromHeroContext);
      t1._as(toHeroContext);
      toHero = type$.Hero._as(toHeroContext.get$widget());
      toMediaQueryData = E.MediaQuery_maybeOf(toHeroContext);
      fromMediaQueryData = E.MediaQuery_maybeOf(fromHeroContext);
      if (toMediaQueryData == null || fromMediaQueryData == null)
        return toHero.child;
      return A.AnimatedBuilder$(animation, new A.HeroController__defaultHeroFlightShuttleBuilder_closure(toMediaQueryData, flightDirection, fromMediaQueryData.padding, toMediaQueryData.padding, animation, toHero), null);
    },
    dispose$0() {
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectDisposed$1$object(this);
      for (var t1 = J.get$iterator$ax(this._flights.get$values()); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().dispose$0();
    }
  };
  A.Icon.prototype = {
    build$1(context) {
      var textDirection, iconTheme, applyTextScaling, tentativeIconSize, iconSize, iconFill, iconWeight, iconGrade, iconOpticalSize, iconShadows, icon, iconOpacity, t1, t2, iconColor, iconWidget, _null = null;
      type$.BuildContext._as(context);
      textDirection = A.Directionality_of(context);
      iconTheme = A.IconTheme_of(context);
      applyTextScaling = iconTheme.applyTextScaling;
      if (applyTextScaling == null)
        applyTextScaling = false;
      tentativeIconSize = iconTheme.size;
      if (tentativeIconSize == null)
        tentativeIconSize = 14;
      iconSize = applyTextScaling ? A.MediaQuery_textScalerOf(context).scale$1(tentativeIconSize) : tentativeIconSize;
      iconFill = iconTheme.fill;
      iconWeight = iconTheme.weight;
      iconGrade = iconTheme.grade;
      iconOpticalSize = iconTheme.opticalSize;
      iconShadows = iconTheme.shadows;
      icon = this.icon;
      if (icon == null)
        return E.Semantics$(_null, A.SizedBox$(_null, iconSize, iconSize), false, _null, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      iconOpacity = iconTheme.get$opacity();
      if (iconOpacity == null)
        iconOpacity = 1;
      t1 = iconTheme.color;
      t1.toString;
      if (iconOpacity !== 1) {
        t2 = t1.get$opacity();
        if (typeof t2 !== "number")
          return t2.$mul();
        iconColor = t1.withOpacity$1(t2 * iconOpacity);
      } else
        iconColor = t1;
      t1 = B._setArrayType([], type$.JSArray_FontVariation);
      if (iconFill != null)
        t1.push(A.FontVariation$("FILL", iconFill));
      if (iconWeight != null)
        t1.push(A.FontVariation$("wght", iconWeight));
      if (iconGrade != null)
        t1.push(A.FontVariation$("GRAD", iconGrade));
      if (iconOpticalSize != null)
        t1.push(A.FontVariation$("opsz", iconOpticalSize));
      iconWidget = A.RichText$(_null, _null, _null, C.TextOverflow_3, _null, _null, true, _null, A.TextSpan$(_null, A.TextStyle$(_null, _null, iconColor, _null, _null, _null, _null, _null, "MaterialIcons", _null, _null, iconSize, _null, t1, _null, _null, 1, false, D.TextLeadingDistribution_1, _null, _null, _null, _null, iconShadows, _null, _null), B.String_String$fromCharCode(icon.codePoint)), D.TextAlign_4, textDirection, _null, D._LinearTextScaler_1, C.TextWidthBasis_0);
      return E.Semantics$(_null, A.ExcludeSemantics$(A.SizedBox$(A.Center$(iconWidget, _null, _null), iconSize, iconSize), true), false, _null, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, A.IconDataProperty$("icon", this.icon, "<empty>", false));
      properties.add$1(0, E.DoubleProperty$("size", _null, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("fill", _null, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("weight", _null, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("grade", _null, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("opticalSize", _null, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.ColorProperty$("color", _null, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.IterableProperty$("shadows", _null, _null, "[]", D.DiagnosticLevel_3, D.DiagnosticsTreeStyle_8, type$.Shadow));
      properties.add$1(0, E.StringProperty$("semanticLabel", _null, _null, true, true));
      properties.add$1(0, E.EnumProperty$("textDirection", _null, _null, D.DiagnosticLevel_3, type$.TextDirection));
      properties.add$1(0, E.DiagnosticsProperty$("applyTextScaling", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
    }
  };
  A.IconData.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), this.get$runtimeType(0))))
        return false;
      t1 = false;
      if (other instanceof A.IconData)
        if (B.boolConversionCheck(J.$eq$(other.codePoint, this.codePoint)))
          t1 = B.boolConversionCheck(E.listEquals(null, null, type$.String));
      return t1;
    },
    get$hashCode(_) {
      return B.Object_hash(this.codePoint, "MaterialIcons", null, false, B.Object_hashAll(C.List_empty6), F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    toString$0(_) {
      return "IconData(U+" + B.S(J.padLeft$2$s(J.toUpperCase$0$s(J.toRadixString$1$n(this.codePoint, 16)), 5, "0")) + ")";
    }
  };
  A.IconDataProperty.prototype = {};
  A.IconTheme.prototype = {
    updateShouldNotify$1(oldWidget) {
      return !B.boolConversionCheck(J.$eq$(this.data, type$.IconTheme._as(oldWidget).data));
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      this.data.debugFillProperties$1(properties);
    }
  };
  A.IconThemeData.prototype = {
    copyWith$9$applyTextScaling$color$fill$grade$opacity$opticalSize$shadows$size$weight(applyTextScaling, color, fill, grade, opacity, opticalSize, shadows, size, weight) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _this = this;
      B._asDoubleQ(size);
      B._asDoubleQ(fill);
      B._asDoubleQ(weight);
      B._asDoubleQ(grade);
      B._asDoubleQ(opticalSize);
      type$.nullable_Color._as(color);
      B._asDoubleQ(opacity);
      type$.nullable_List_Shadow._as(shadows);
      B._asBoolQ(applyTextScaling);
      t1 = size == null ? _this.size : size;
      t2 = fill == null ? _this.fill : fill;
      t3 = weight == null ? _this.weight : weight;
      t4 = grade == null ? _this.grade : grade;
      t5 = opticalSize == null ? _this.opticalSize : opticalSize;
      t6 = color == null ? _this.color : color;
      t7 = opacity == null ? _this.get$opacity() : opacity;
      t8 = shadows == null ? _this.shadows : shadows;
      return A.IconThemeData$(applyTextScaling == null ? _this.applyTextScaling : applyTextScaling, t6, t2, t4, t7, t5, t8, t1, t3);
    },
    merge$1(other) {
      var t1, t2, t3, t4, t5, t6, t7, t8;
      type$.nullable_IconThemeData._as(other);
      if (other == null)
        return this;
      t1 = other.size;
      t2 = other.fill;
      t3 = other.weight;
      t4 = other.grade;
      t5 = other.opticalSize;
      t6 = other.color;
      t7 = other.get$opacity();
      t8 = other.shadows;
      return this.copyWith$9$applyTextScaling$color$fill$grade$opacity$opticalSize$shadows$size$weight(other.applyTextScaling, t6, t2, t4, t7, t5, t8, t1, t3);
    },
    resolve$1(context) {
      type$.BuildContext._as(context);
      return this;
    },
    get$isConcrete() {
      var _this = this;
      return _this.size != null && _this.fill != null && _this.weight != null && _this.grade != null && _this.opticalSize != null && _this.color != null && _this.get$opacity() != null && _this.applyTextScaling != null;
    },
    get$opacity() {
      var t1 = this._opacity;
      if (t1 == null)
        t1 = null;
      else
        t1 = E.clampDouble(t1, 0, 1);
      return t1;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!B.boolConversionCheck(J.$eq$(J.get$runtimeType$(other), _this.get$runtimeType(0))))
        return false;
      return other instanceof A.IconThemeData && B.boolConversionCheck(J.$eq$(other.size, _this.size)) && B.boolConversionCheck(J.$eq$(other.fill, _this.fill)) && B.boolConversionCheck(J.$eq$(other.weight, _this.weight)) && B.boolConversionCheck(J.$eq$(other.grade, _this.grade)) && B.boolConversionCheck(J.$eq$(other.opticalSize, _this.opticalSize)) && B.boolConversionCheck(J.$eq$(other.color, _this.color)) && B.boolConversionCheck(J.$eq$(other.get$opacity(), _this.get$opacity())) && B.boolConversionCheck(E.listEquals(other.shadows, _this.shadows, type$.Shadow)) && B.boolConversionCheck(J.$eq$(other.applyTextScaling, _this.applyTextScaling));
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.get$opacity(),
        t2 = _this.shadows;
      t2 = t2 == null ? null : B.Object_hashAll(t2);
      return B.Object_hash(_this.size, _this.fill, _this.weight, _this.grade, _this.opticalSize, _this.color, t1, t2, _this.applyTextScaling, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DoubleProperty$("size", _this.size, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("fill", _this.fill, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("weight", _this.weight, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("grade", _this.grade, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.DoubleProperty$("opticalSize", _this.opticalSize, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.ColorProperty$("color", _this.color, _null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DoubleProperty$("opacity", _this.get$opacity(), _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.IterableProperty$("shadows", _this.shadows, _null, "[]", D.DiagnosticLevel_3, D.DiagnosticsTreeStyle_8, type$.Shadow));
      properties.add$1(0, E.DiagnosticsProperty$("applyTextScaling", _this.applyTextScaling, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
    },
    $isDiagnosticable: 1
  };
  A._IconThemeData_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.DecorationTween.prototype = {
    lerp$1(t) {
      var t1;
      B._asDouble(t);
      t1 = A.Decoration_lerp(this.begin, this.end, t);
      t1.toString;
      return t1;
    }
  };
  A.EdgeInsetsTween.prototype = {
    lerp$1(t) {
      var t1;
      B._asDouble(t);
      t1 = A.EdgeInsets_lerp(this.begin, this.end, t);
      t1.toString;
      return t1;
    }
  };
  A.BorderRadiusTween.prototype = {
    lerp$1(t) {
      B._asDouble(t);
      return A.BorderRadius_lerp(this.begin, this.end, t);
    }
  };
  A.TextStyleTween.prototype = {
    lerp$1(t) {
      var t1;
      B._asDouble(t);
      t1 = A.TextStyle_lerp(this.begin, this.end, t);
      t1.toString;
      return t1;
    }
  };
  A.ImplicitlyAnimatedWidget.prototype = {
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.IntProperty$("duration", this.duration.get$inMilliseconds(), D.C__NoDefaultValue, null, D.DiagnosticLevel_3, "ms"));
    }
  };
  A.ImplicitlyAnimatedWidgetState.prototype = {
    get$controller() {
      return this.get$_implicit_animations$_controller();
    },
    get$_implicit_animations$_controller() {
      var t1, result, _this = this,
        value = _this.__ImplicitlyAnimatedWidgetState__controller_FI;
      if (B.boolConversionCheck(E.isSentinel(value))) {
        t1 = _this.get$widget().duration;
        result = A.AnimationController$(_this.get$widget().toStringShort$0(), t1, null, _this);
        _this.__ImplicitlyAnimatedWidgetState__controller_FI !== $ && B.throwLateFieldADI("_controller");
        _this.__ImplicitlyAnimatedWidgetState__controller_FI = result;
        value = result;
      }
      return value;
    },
    get$animation() {
      return this.get$_animation();
    },
    get$_animation() {
      var value = this.__ImplicitlyAnimatedWidgetState__animation_AI;
      if (B.boolConversionCheck(E.isSentinel(value))) {
        value = this._createCurve$0();
        this.set$__ImplicitlyAnimatedWidgetState__animation_AI(value);
      }
      return value;
    },
    set$_animation(value) {
      this.__ImplicitlyAnimatedWidgetState__animation_AI = type$.CurvedAnimation._as(value);
    },
    initState$0() {
      var _this = this;
      _this.super$State$initState0();
      _this.get$_implicit_animations$_controller().addStatusListener$1(new A.ImplicitlyAnimatedWidgetState_initState_closure(_this));
      _this._constructTweens$0();
      _this.didUpdateTweens$0();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      B._instanceType(_this)._eval$1("ImplicitlyAnimatedWidgetState.T")._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      if (!B.boolConversionCheck(J.$eq$(_this.get$widget().curve, oldWidget.curve))) {
        _this.get$_animation().dispose$0();
        _this.set$_animation(_this._createCurve$0());
      }
      _this.get$_implicit_animations$_controller().set$duration(_this.get$widget().duration);
      if (B.boolConversionCheck(_this._constructTweens$0())) {
        _this.forEachTween$1(new A.ImplicitlyAnimatedWidgetState_didUpdateWidget_closure(_this));
        t1 = _this.get$_implicit_animations$_controller();
        t1.set$value(0);
        t1.forward$0();
        _this.didUpdateTweens$0();
      }
    },
    _createCurve$0() {
      var t1 = this.get$_implicit_animations$_controller();
      return A.CurvedAnimation$(this.get$widget().curve, t1, null);
    },
    dispose$0() {
      this.get$_animation().dispose$0();
      this.get$_implicit_animations$_controller().dispose$0();
      this.super$_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin$dispose();
    },
    _shouldAnimateTween$2(tween, targetValue) {
      var t1;
      type$.Tween_dynamic._as(tween);
      t1 = tween.end;
      return !B.boolConversionCheck(J.$eq$(targetValue, t1 == null ? tween.begin : t1));
    },
    _updateTween$2(tween, targetValue) {
      type$.nullable_Tween_dynamic._as(tween);
      if (tween == null)
        return;
      tween.set$begin(tween.evaluate$1(this.get$_animation()));
      tween.set$end(targetValue);
    },
    _constructTweens$0() {
      var t1 = {};
      t1.shouldStartAnimation = false;
      this.forEachTween$1(new A.ImplicitlyAnimatedWidgetState__constructTweens_closure(t1, this));
      return t1.shouldStartAnimation;
    },
    didUpdateTweens$0() {
    },
    set$__ImplicitlyAnimatedWidgetState__animation_AI(__ImplicitlyAnimatedWidgetState__animation_AI) {
      this.__ImplicitlyAnimatedWidgetState__animation_AI = type$.CurvedAnimation._as(__ImplicitlyAnimatedWidgetState__animation_AI);
    },
    $isTickerProvider: 1,
    $isSingleTickerProviderStateMixin: 1
  };
  A.AnimatedWidgetBaseState.prototype = {
    initState$0() {
      this.super$ImplicitlyAnimatedWidgetState$initState();
      this.get$controller().addListener$1(this.get$_handleAnimationChanged());
    },
    _handleAnimationChanged$0() {
      this.setState$1(new A.AnimatedWidgetBaseState__handleAnimationChanged_closure());
    }
  };
  A.AnimatedDefaultTextStyle.prototype = {
    createState$0() {
      return A._AnimatedDefaultTextStyleState$();
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$ImplicitlyAnimatedWidget$debugFillProperties(properties);
      this.style.debugFillProperties$1(properties);
      properties.add$1(0, E.EnumProperty$("textAlign", _null, _null, D.DiagnosticLevel_3, type$.TextAlign));
      properties.add$1(0, E.FlagProperty$("softWrap", _null, string$.no_wra, "wrapping at box width", D.DiagnosticLevel_3, true, true));
      properties.add$1(0, E.EnumProperty$("overflow", C.TextOverflow_0, _null, D.DiagnosticLevel_3, type$.TextOverflow));
      properties.add$1(0, E.IntProperty$("maxLines", _null, _null, _null, D.DiagnosticLevel_3, _null));
      properties.add$1(0, E.EnumProperty$("textWidthBasis", C.TextWidthBasis_0, C.TextWidthBasis_0, D.DiagnosticLevel_3, type$.TextWidthBasis));
      properties.add$1(0, E.DiagnosticsProperty$("textHeightBehavior", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextHeightBehavior));
    }
  };
  A._AnimatedDefaultTextStyleState.prototype = {
    forEachTween$1(visitor) {
      this._implicit_animations$_style = type$.nullable_TextStyleTween._as(type$.nullable_Tween_dynamic_Function_3_nullable_Tween_dynamic_and_dynamic_and_Tween_dynamic_Function_dynamic._as(visitor).call$3(this._implicit_animations$_style, this.get$widget().style, new A._AnimatedDefaultTextStyleState_forEachTween_closure()));
    },
    build$1(context) {
      var t1, _this = this;
      type$.BuildContext._as(context);
      t1 = _this._implicit_animations$_style;
      t1.toString;
      t1 = t1.evaluate$1(_this.get$animation());
      _this.get$widget().toString;
      _this.get$widget().toString;
      _this.get$widget().toString;
      _this.get$widget().toString;
      _this.get$widget().toString;
      _this.get$widget().toString;
      return A.DefaultTextStyle$(_this.get$widget().child, null, C.TextOverflow_0, true, t1, null, null, C.TextWidthBasis_0);
    }
  };
  A.AnimatedPhysicalModel.prototype = {
    createState$0() {
      return A._AnimatedPhysicalModelState$();
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$ImplicitlyAnimatedWidget$debugFillProperties(properties);
      properties.add$1(0, E.EnumProperty$("shape", C.BoxShape_0, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.BoxShape));
      properties.add$1(0, E.DiagnosticsProperty$("borderRadius", _null, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BorderRadius));
      properties.add$1(0, E.DoubleProperty$("elevation", _this.elevation, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, A.ColorProperty$("color", _this.color, D.C__NoDefaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      t1 = type$.bool;
      properties.add$1(0, E.DiagnosticsProperty$("animateColor", _this.animateColor, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, A.ColorProperty$("shadowColor", _this.shadowColor, D.C__NoDefaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, E.DiagnosticsProperty$("animateShadowColor", true, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
    }
  };
  A._AnimatedPhysicalModelState.prototype = {
    forEachTween$1(visitor) {
      var t1, _this = this;
      type$.nullable_Tween_dynamic_Function_3_nullable_Tween_dynamic_and_dynamic_and_Tween_dynamic_Function_dynamic._as(visitor);
      t1 = _this._implicit_animations$_borderRadius;
      _this.get$widget().toString;
      _this._implicit_animations$_borderRadius = type$.nullable_BorderRadiusTween._as(visitor.call$3(t1, C.BorderRadius_ww8, new A._AnimatedPhysicalModelState_forEachTween_closure()));
      _this.set$_implicit_animations$_elevation(type$.nullable_Tween_double._as(visitor.call$3(_this._implicit_animations$_elevation, _this.get$widget().elevation, new A._AnimatedPhysicalModelState_forEachTween_closure0())));
      t1 = type$.nullable_ColorTween;
      _this._implicit_animations$_color = t1._as(visitor.call$3(_this._implicit_animations$_color, _this.get$widget().color, new A._AnimatedPhysicalModelState_forEachTween_closure1()));
      _this._implicit_animations$_shadowColor = t1._as(visitor.call$3(_this._implicit_animations$_shadowColor, _this.get$widget().shadowColor, new A._AnimatedPhysicalModelState_forEachTween_closure2()));
    },
    build$1(context) {
      var t1, t2, t3, t4, t5, _this = this;
      type$.BuildContext._as(context);
      _this.get$widget().toString;
      t1 = _this.get$widget().clipBehavior;
      t2 = _this._implicit_animations$_borderRadius;
      t2.toString;
      t2 = t2.evaluate$1(_this.get$animation());
      t3 = _this._implicit_animations$_elevation;
      t3.toString;
      t3 = t3.evaluate$1(_this.get$animation());
      if (B.boolConversionCheck(_this.get$widget().animateColor)) {
        t4 = _this._implicit_animations$_color;
        t4.toString;
        t4 = t4.evaluate$1(_this.get$animation());
        t4.toString;
      } else
        t4 = _this.get$widget().color;
      _this.get$widget().toString;
      t5 = _this._implicit_animations$_shadowColor;
      t5.toString;
      t5 = t5.evaluate$1(_this.get$animation());
      t5.toString;
      return A.PhysicalModel$(t2, _this.get$widget().child, t1, t4, t3, t5, C.BoxShape_0);
    },
    set$_implicit_animations$_elevation(_elevation) {
      this._implicit_animations$_elevation = type$.nullable_Tween_double._as(_elevation);
    }
  };
  A._ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin.prototype = {
    dispose$0() {
      var _this = this,
        t1 = _this.SingleTickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTicker());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTicker$0();
    },
    debugFillProperties$1(properties) {
      var t1, _0_1, _0_10, t2, _0_3, _0_5, t3, t4, _0_7, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$State$debugFillProperties(properties);
      t1 = _this.SingleTickerProviderStateMixin__ticker;
      _0_1 = t1 == null ? _null : t1.get$isActive();
      t1 = _this.SingleTickerProviderStateMixin__ticker;
      t1 = t1 == null ? _null : t1.get$muted();
      $label0$0: {
        _0_10 = _null;
        t2 = _0_1;
        _0_3 = true === t2;
        t2 = _0_3;
        B.boolConversionCheck(t2);
        if (t2) {
          _0_5 = true === t1;
          t3 = _0_5;
        } else {
          _0_5 = _null;
          t3 = false;
        }
        t4 = _null;
        if (t3) {
          t1 = "active but muted";
          break $label0$0;
        }
        if (B.boolConversionCheck(_0_3)) {
          t1 = "active";
          break $label0$0;
        }
        _0_7 = false === _0_1;
        t3 = _0_7;
        if (B.boolConversionCheck(t3))
          t1 = B.boolConversionCheck(t2 ? _0_5 : true === t1);
        else
          t1 = false;
        if (t1) {
          t1 = "inactive and muted";
          break $label0$0;
        }
        if (B.boolConversionCheck(_0_7)) {
          t1 = "inactive";
          break $label0$0;
        }
        if (_0_1 == null) {
          t1 = t4;
          break $label0$0;
        }
        t1 = t4;
      }
      properties.add$1(0, E.DiagnosticsProperty$("ticker", _this.SingleTickerProviderStateMixin__ticker, true, _null, t1, _null, _null, D.DiagnosticLevel_3, false, true, false, D.DiagnosticsTreeStyle_8, _null, type$.Ticker));
    },
    $isTickerProvider: 1,
    $isSingleTickerProviderStateMixin: 1
  };
  A.InheritedTheme.prototype = {};
  A._Pending.prototype = {};
  A.LocalizationsDelegate.prototype = {
    get$type() {
      return B.createRuntimeType(B._instanceType(this)._eval$1("LocalizationsDelegate.T"));
    },
    toString$0(_) {
      return B.S(E.objectRuntimeType(this, "LocalizationsDelegate")) + "[" + B.S(this.get$type()) + "]";
    }
  };
  A._WidgetsLocalizationsDelegate.prototype = {
    isSupported$1(locale) {
      type$.Locale._as(locale);
      return true;
    },
    load$1(locale) {
      return A.DefaultWidgetsLocalizations_load(type$.Locale._as(locale));
    },
    shouldReload$1(old) {
      type$._WidgetsLocalizationsDelegate._as(old);
      return false;
    },
    toString$0(_) {
      return "DefaultWidgetsLocalizations.delegate(en_US)";
    }
  };
  A.DefaultWidgetsLocalizations.prototype = {
    get$textDirection() {
      return D.TextDirection_1;
    },
    $isWidgetsLocalizations: 1
  };
  A._LocalizationsScope.prototype = {
    updateShouldNotify$1(old) {
      return !B.boolConversionCheck(J.$eq$(this.typeToResources, type$._LocalizationsScope._as(old).typeToResources));
    }
  };
  A.Localizations.prototype = {
    createState$0() {
      return A._LocalizationsState$();
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("locale", this.locale, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Locale));
      properties.add$1(0, E.IterableProperty$("delegates", this.delegates, D.C__NoDefaultValue, "[]", D.DiagnosticLevel_3, D.DiagnosticsTreeStyle_8, type$.LocalizationsDelegate_dynamic));
    }
  };
  A._LocalizationsState.prototype = {
    get$locale() {
      return this._localizations$_locale;
    },
    initState$0() {
      this.super$State$initState0();
      this.load$1(this.get$widget().locale);
    },
    _anyDelegatesShouldReload$1(old) {
      var delegates, oldDelegates, i, t3, delegate, oldDelegate,
        t1 = type$.Localizations._as(old).delegates,
        t2 = J.getInterceptor$asx(t1);
      if (!B.boolConversionCheck(J.$eq$(J.get$length$asx(this.get$widget().delegates), t2.get$length(t1))))
        return true;
      delegates = J.toList$0$ax(this.get$widget().delegates);
      oldDelegates = t2.toList$0(t1);
      t1 = J.getInterceptor$asx(delegates);
      t2 = J.getInterceptor$asx(oldDelegates);
      i = 0;
      while (true) {
        t3 = t1.get$length(delegates);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(i < t3))
          break;
        delegate = t1.$index(delegates, i);
        oldDelegate = t2.$index(oldDelegates, i);
        if (!B.boolConversionCheck(J.$eq$(delegate.get$runtimeType(0), oldDelegate.get$runtimeType(0))) || B.boolConversionCheck(delegate.shouldReload$1(oldDelegate)))
          return true;
        ++i;
      }
      return false;
    },
    didUpdateWidget$1(old) {
      var _this = this;
      type$.Localizations._as(old);
      _this.super$State$didUpdateWidget(old);
      if (!B.boolConversionCheck(J.$eq$(_this.get$widget().locale, old.locale)) || B.boolConversionCheck(_this._anyDelegatesShouldReload$1(old)))
        _this.load$1(_this.get$widget().locale);
    },
    load$1(locale) {
      var delegates, typeToResourcesFuture, _this = this, t1 = {};
      type$.Locale._as(locale);
      delegates = _this.get$widget().delegates;
      if (B.boolConversionCheck(J.get$isEmpty$asx(delegates))) {
        _this._localizations$_locale = locale;
        return;
      }
      t1.typeToResources = null;
      typeToResourcesFuture = A._loadAll(locale, delegates).then$1$1(new A._LocalizationsState_load_closure(t1), type$.Map_Type_dynamic);
      t1 = t1.typeToResources;
      if (t1 != null) {
        _this.set$_typeToResources(t1);
        _this._localizations$_locale = locale;
      } else {
        E.RendererBinding_instance().deferFirstFrame$0();
        typeToResourcesFuture.then$1$1(new A._LocalizationsState_load_closure0(_this, locale), type$.void);
      }
    },
    resourcesFor$1$1(type, $T) {
      type$.Type._as(type);
      return $T._as(J.$index$asx(this._typeToResources, type));
    },
    get$_localizations$_textDirection() {
      return type$.WidgetsLocalizations._as(J.$index$asx(this._typeToResources, C.Type_WidgetsLocalizations_eAf)).get$textDirection();
    },
    build$1(context) {
      var t1, t2, t3, t4, t5, _this = this, _null = null;
      type$.BuildContext._as(context);
      if (_this._localizations$_locale == null)
        return C.SizedBox_0_0_null_null;
      t1 = _this.get$_localizations$_textDirection();
      t2 = _this._localizations$_locale;
      t2.toString;
      t3 = _this._typeToResources;
      t4 = _this.get$_localizations$_textDirection();
      t5 = _this.get$widget().child;
      t5.toString;
      return E.Semantics$(_null, A._LocalizationsScope$(A.Directionality$(t5, t4), _this._localizedResourcesScopeKey, t2, _this, t3), false, _null, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, t1, _null);
    },
    set$_typeToResources(_typeToResources) {
      this._typeToResources = type$.Map_Type_dynamic._as(_typeToResources);
    },
    set$_localizations$_locale(_locale) {
      this._localizations$_locale = type$.nullable_Locale._as(_locale);
    }
  };
  A._SemanticsClipper.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A._RenderSemanticsClipper$(this.clipDetailsNotifier);
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$._RenderSemanticsClipper._as(renderObject).set$clipDetailsNotifier(this.clipDetailsNotifier);
    }
  };
  A._RenderSemanticsClipper.prototype = {
    get$clipDetailsNotifier() {
      return this._clipDetailsNotifier;
    },
    set$clipDetailsNotifier(newNotifier) {
      var _this = this;
      type$.ValueNotifier_EdgeInsets._as(newNotifier);
      if (B.boolConversionCheck(J.$eq$(_this._clipDetailsNotifier, newNotifier)))
        return;
      if (B.boolConversionCheck(_this.get$attached()))
        _this._clipDetailsNotifier.removeListener$1(_this.get$markNeedsSemanticsUpdate());
      _this.set$_clipDetailsNotifier(newNotifier);
      _this._clipDetailsNotifier.addListener$1(_this.get$markNeedsSemanticsUpdate());
      _this.markNeedsSemanticsUpdate$0();
    },
    get$semanticBounds() {
      var t3, t4, t5, t6, t7, t8,
        clipDetails = this._clipDetailsNotifier.get$value(),
        originalRect = E.RenderBox.prototype.get$semanticBounds.call(this),
        t1 = originalRect.left,
        t2 = clipDetails.left;
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return B.iae(t2);
      t3 = originalRect.top;
      t4 = clipDetails.top;
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return B.iae(t4);
      t5 = originalRect.right;
      t6 = clipDetails.right;
      if (typeof t5 !== "number")
        return t5.$sub();
      if (typeof t6 !== "number")
        return B.iae(t6);
      t7 = originalRect.bottom;
      t8 = clipDetails.bottom;
      if (typeof t7 !== "number")
        return t7.$sub();
      if (typeof t8 !== "number")
        return B.iae(t8);
      return E.Rect$fromLTRB(t1 + t2, t3 + t4, t5 - t6, t7 - t8);
    },
    attach$1(owner) {
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach(type$.PipelineOwner._as(owner));
      this.get$clipDetailsNotifier().addListener$1(this.get$markNeedsSemanticsUpdate());
    },
    detach$0() {
      this.get$clipDetailsNotifier().removeListener$1(this.get$markNeedsSemanticsUpdate());
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach();
    },
    describeSemanticsConfiguration$1(config) {
      type$.SemanticsConfiguration._as(config);
      this.super$RenderObject$describeSemanticsConfiguration(config);
      config.set$isSemanticBoundary(true);
    },
    set$_clipDetailsNotifier(_clipDetailsNotifier) {
      this._clipDetailsNotifier = type$.ValueNotifier_EdgeInsets._as(_clipDetailsNotifier);
    }
  };
  A.ModalBarrier.prototype = {
    build$1(context) {
      var platformSupportsDismissingBarrier, semanticsDismissible, modalBarrierSemanticsDismissible, t1, t2, t3, t4, t5, t6, barrier, excluding, _this = this, _null = null;
      type$.BuildContext._as(context);
      switch (E.defaultTargetPlatform()) {
        case D.TargetPlatform_1:
        case D.TargetPlatform_3:
        case D.TargetPlatform_5:
          platformSupportsDismissingBarrier = false;
          break;
        case D.TargetPlatform_0:
        case D.TargetPlatform_2:
        case D.TargetPlatform_4:
          platformSupportsDismissingBarrier = true;
          break;
        default:
          platformSupportsDismissingBarrier = _null;
      }
      semanticsDismissible = B.boolConversionCheck(_this.dismissible) && B.boolConversionCheck(platformSupportsDismissingBarrier);
      modalBarrierSemanticsDismissible = _this.barrierSemanticsDismissible;
      if (modalBarrierSemanticsDismissible == null)
        modalBarrierSemanticsDismissible = semanticsDismissible;
      t1 = new A.ModalBarrier_build_handleDismiss(_this, context);
      t2 = semanticsDismissible && _this.semanticsLabel != null ? t1 : _null;
      t3 = semanticsDismissible && _this.semanticsLabel != null ? t1 : _null;
      t4 = semanticsDismissible ? _this.semanticsLabel : _null;
      t5 = semanticsDismissible && _this.semanticsLabel != null ? A.Directionality_of(context) : _null;
      t6 = _this.color;
      barrier = E.Semantics$(_null, A.MouseRegion$(A.ConstrainedBox$(t6 == null ? _null : A.ColoredBox$(_null, t6), C.BoxConstraints_xqM), D.SystemMouseCursor_basic, _null, _null), false, _null, false, _null, _null, t4, t3, _null, _null, t2, _this.semanticsOnTapHint, _null, _null, _null, _null, t5, _null);
      excluding = !semanticsDismissible || !modalBarrierSemanticsDismissible;
      if (!excluding && _this.clipDetailsNotifier != null) {
        t2 = _this.clipDetailsNotifier;
        t2.toString;
        barrier = A._SemanticsClipper$(barrier, t2);
      }
      return A.BlockSemantics$(A.ExcludeSemantics$(A._ModalBarrierGestureDetector$(barrier, t1), excluding));
    }
  };
  A.AnimatedModalBarrier.prototype = {
    get$color() {
      return type$.Animation_nullable_Color._as(this.listenable);
    },
    build$1(context) {
      var _this = this;
      type$.BuildContext._as(context);
      return A.ModalBarrier$(_this.barrierSemanticsDismissible, null, _this.get$color().get$value(), _this.dismissible, null, _this.semanticsLabel, null);
    }
  };
  A._AnyTapGestureRecognizer.prototype = {
    isPointerAllowed$1($event) {
      type$.PointerDownEvent._as($event);
      if (this.onAnyTapUp == null)
        return false;
      return this.super$GestureRecognizer$isPointerAllowed($event);
    },
    handleTapDown$1$down(down) {
      type$.nullable_PointerDownEvent._as(down);
    },
    handleTapUp$2$down$up(down, up) {
      var t1;
      type$.nullable_PointerDownEvent._as(down);
      type$.nullable_PointerUpEvent._as(up);
      t1 = this.onAnyTapUp;
      if (t1 != null)
        this.invokeCallback$1$2("onAnyTapUp", t1, type$.void);
    },
    handleTapCancel$3$cancel$down$reason(cancel, down, reason) {
      type$.nullable_PointerDownEvent._as(down);
      type$.nullable_PointerCancelEvent._as(cancel);
      B._asStringQ(reason);
    },
    get$debugDescription() {
      return "any tap";
    },
    set$onAnyTapUp(onAnyTapUp) {
      this.onAnyTapUp = type$.nullable_void_Function._as(onAnyTapUp);
    }
  };
  A._AnyTapGestureRecognizerFactory.prototype = {
    constructor$0() {
      return A._AnyTapGestureRecognizer$();
    },
    initializer$1(instance) {
      type$._AnyTapGestureRecognizer._as(instance).set$onAnyTapUp(this.onAnyTapUp);
    }
  };
  A._ModalBarrierGestureDetector.prototype = {
    build$1(context) {
      type$.BuildContext._as(context);
      return A.RawGestureDetector$(C.HitTestBehavior_1, this.child, false, B.LinkedHashMap_LinkedHashMap$_literal([C.Type__AnyTapGestureRecognizer_pdd, A._AnyTapGestureRecognizerFactory$(this.onDismiss)], type$.Type, type$.GestureRecognizerFactory_GestureRecognizer));
    }
  };
  A.RoutePopDisposition.prototype = {
    _enumToString$0() {
      return "RoutePopDisposition." + B.S(this._core$_name);
    }
  };
  A.Route.prototype = {
    Route$1$settings(settings, $T) {
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(B.S(C.Type_Route_8Oh) + "<" + B.S(B.createRuntimeType($T)) + ">", "package:flutter/widgets.dart", this);
    },
    get$navigator() {
      return this._navigator$_navigator;
    },
    get$settings() {
      return this._settings;
    },
    get$_isPageBased() {
      this.get$settings();
      return false;
    },
    get$restorationScopeId() {
      return this._restorationScopeId;
    },
    _updateRestorationId$1(restorationId) {
      this._restorationScopeId.set$value(B._asStringQ(restorationId));
    },
    install$0() {
    },
    didPush$0() {
      var t1 = A.TickerFuture$complete();
      t1.then$1$1(new A.Route_didPush_closure(this), type$.void);
      return t1;
    },
    didAdd$0() {
      var t1 = this.get$navigator();
      if (t1 == null)
        t1 = null;
      else {
        t1.get$widget().toString;
        t1 = true;
      }
      if (t1 === true)
        A.TickerFuture$complete().then$1$1(new A.Route_didAdd_closure(this), type$.void);
    },
    didReplace$1(oldRoute) {
      type$.nullable_Route_dynamic._as(oldRoute);
    },
    willPop$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.RoutePopDisposition),
        $async$returnValue, $async$self = this;
      var $async$willPop$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = B.boolConversionCheck($async$self.get$isFirst()) ? C.RoutePopDisposition_2 : C.RoutePopDisposition_0;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$willPop$0, $async$completer);
    },
    get$popDisposition() {
      if (B.boolConversionCheck(this.get$_isPageBased()))
        if (!B.boolConversionCheck(type$.Page_nullable_Object._as(this.get$settings()).get$canPop()))
          return C.RoutePopDisposition_1;
      return B.boolConversionCheck(this.get$isFirst()) ? C.RoutePopDisposition_2 : C.RoutePopDisposition_0;
    },
    onPopInvokedWithResult$2(didPop, result) {
      B._asBool(didPop);
      this.$ti._eval$1("1?")._as(result);
      if (B.boolConversionCheck(this.get$_isPageBased()))
        type$.void_Function_2_bool_and_nullable_Object._as(type$.Page_nullable_Object._as(this.get$settings()).get$onPopInvoked()).call$2(didPop, result);
    },
    get$currentResult() {
      return null;
    },
    get$popped() {
      return this._popCompleter.get$future();
    },
    didPop$1(result) {
      this.didComplete$1(this.$ti._eval$1("1?")._as(result));
      return true;
    },
    didComplete$1(result) {
      var t1;
      this.$ti._eval$1("1?")._as(result);
      t1 = result == null ? this.get$currentResult() : result;
      this._popCompleter.complete$1(t1);
    },
    didPopNext$1(nextRoute) {
      type$.Route_dynamic._as(nextRoute);
    },
    didChangeNext$1(nextRoute) {
      type$.nullable_Route_dynamic._as(nextRoute);
    },
    didChangePrevious$1(previousRoute) {
      type$.nullable_Route_dynamic._as(previousRoute);
    },
    changedInternalState$0() {
    },
    changedExternalState$0() {
    },
    dispose$0() {
      var _this = this;
      _this._navigator$_navigator = null;
      _this._restorationScopeId.dispose$0();
      _this._disposeCompleter.complete$0();
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectDisposed$1$object(_this);
    },
    get$isCurrent() {
      var currentRouteEntry,
        t1 = this._navigator$_navigator;
      if (t1 == null)
        return false;
      currentRouteEntry = t1._lastRouteEntryWhereOrNull$1(A.navigator__RouteEntry_isPresentPredicate$closure());
      if (currentRouteEntry == null)
        return false;
      return J.$eq$(currentRouteEntry.route, this);
    },
    get$isFirst() {
      var currentRouteEntry,
        t1 = this._navigator$_navigator;
      if (t1 == null)
        return false;
      currentRouteEntry = t1._firstRouteEntryWhereOrNull$1(A.navigator__RouteEntry_isPresentPredicate$closure());
      if (currentRouteEntry == null)
        return false;
      return J.$eq$(currentRouteEntry.route, this);
    },
    get$hasActiveRouteBelow() {
      var t2,
        t1 = this._navigator$_navigator;
      if (t1 == null)
        return false;
      for (t1 = J.get$iterator$ax(t1._navigator$_history); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        if (B.boolConversionCheck(J.$eq$(t2.route, this)))
          return false;
        if (B.boolConversionCheck(A._RouteEntry_isPresentPredicate(t2)))
          return true;
      }
      return false;
    },
    get$isActive() {
      var t1 = this._navigator$_navigator;
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1._firstRouteEntryWhereOrNull$1(A._RouteEntry_isRoutePredicate(this));
        t1 = t1 == null ? null : t1.get$isPresent();
      }
      return t1 == null ? false : t1;
    }
  };
  A.RouteSettings.prototype = {
    toString$0(_) {
      var t1 = B.S(E.objectRuntimeType(this, "RouteSettings")),
        t2 = this.name;
      t2 = t2 == null ? "none" : '"' + B.S(t2) + '"';
      return t1 + "(" + t2 + ", " + B.S(this.$arguments) + ")";
    }
  };
  A.NavigatorObserver.prototype = {
    get$navigator() {
      return J.$index$asx($.$get$NavigatorObserver__navigators(), this);
    },
    didRemove$2(route, previousRoute) {
      type$.Route_dynamic._as(route);
      type$.nullable_Route_dynamic._as(previousRoute);
    }
  };
  A.HeroControllerScope.prototype = {
    updateShouldNotify$1(oldWidget) {
      return !B.boolConversionCheck(J.$eq$(type$.HeroControllerScope._as(oldWidget).controller, this.controller));
    }
  };
  A.RouteTransitionRecord.prototype = {};
  A.TransitionDelegate.prototype = {};
  A.DefaultTransitionDelegate.prototype = {};
  A.Navigator.prototype = {
    createState$0() {
      return A.NavigatorState$();
    },
    onGenerateInitialRoutes$2(arg0, arg1) {
      return this.onGenerateInitialRoutes.call$2(arg0, arg1);
    }
  };
  A._RouteLifecycle.prototype = {
    _enumToString$0() {
      return "_RouteLifecycle." + B.S(this._core$_name);
    }
  };
  A._RoutePlaceholder.prototype = {};
  A._RouteEntry.prototype = {
    _RouteEntry$4$initialState$pageBased$restorationInformation(route, initialState, pageBased, restorationInformation) {
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(B.S(C.Type__RouteEntry_yHm), "package:flutter/widgets.dart", this);
    },
    get$restorationId() {
      var page, t1;
      if (B.boolConversionCheck(this.pageBased)) {
        page = type$.Page_nullable_Object._as(this.route.get$settings());
        return page.get$restorationId() != null ? "p+" + B.S(page.get$restorationId()) : null;
      }
      t1 = this.restorationInformation;
      if (t1 != null)
        return "r+" + B.S(t1.get$restorationScopeId());
      return null;
    },
    handleAdd$2$navigator$previousPresent($navigator, previousPresent) {
      var t1;
      type$.NavigatorState._as($navigator);
      type$.nullable_Route_dynamic._as(previousPresent);
      t1 = this.route;
      t1._navigator$_navigator = $navigator;
      t1.install$0();
      this.currentState = C._RouteLifecycle_2;
      J.add$1$ax($navigator._observedRouteAdditions, A._NavigatorPushObservation$(t1, previousPresent));
    },
    handlePush$4$isNewFirst$navigator$previous$previousPresent(isNewFirst, $navigator, previous, previousPresent) {
      var t1, previousState, routeFuture, t2, t3, t4, _this = this;
      type$.NavigatorState._as($navigator);
      B._asBool(isNewFirst);
      t1 = type$.nullable_Route_dynamic;
      t1._as(previous);
      t1._as(previousPresent);
      previousState = _this.currentState;
      t1 = _this.route;
      t1._navigator$_navigator = $navigator;
      t1.install$0();
      if (B.boolConversionCheck(J.$eq$(_this.currentState, C._RouteLifecycle_3)) || B.boolConversionCheck(J.$eq$(_this.currentState, C._RouteLifecycle_4))) {
        routeFuture = t1.didPush$0();
        _this.currentState = C._RouteLifecycle_5;
        routeFuture.whenCompleteOrCancel$1(new A._RouteEntry_handlePush_closure(_this, $navigator));
      } else {
        t1.didReplace$1(previous);
        _this.currentState = C._RouteLifecycle_7;
      }
      if (isNewFirst)
        t1.didChangeNext$1(null);
      t2 = previousState === C._RouteLifecycle_6 || previousState === C._RouteLifecycle_4;
      t3 = $navigator._observedRouteAdditions;
      t4 = J.getInterceptor$ax(t3);
      if (t2)
        t4.add$1(t3, A._NavigatorReplaceObservation$(t1, previousPresent));
      else
        t4.add$1(t3, A._NavigatorPushObservation$(t1, previousPresent));
    },
    handleDidPopNext$1(poppedRoute) {
      var _this = this,
        t1 = type$.Route_dynamic;
      t1._as(poppedRoute);
      _this.route.didPopNext$1(poppedRoute);
      _this.set$lastAnnouncedPoppedNextRoute(A.WeakReference_WeakReference(poppedRoute, t1));
      if (_this.lastFocusNode != null)
        poppedRoute._disposeCompleter.get$future().then$1$1(new A._RouteEntry_handleDidPopNext_closure(_this), type$.Null);
    },
    handlePop$2$navigator$previousPresent($navigator, previousPresent) {
      var t1, _this = this;
      type$.NavigatorState._as($navigator);
      type$.nullable_Route_dynamic._as(previousPresent);
      _this.currentState = C._RouteLifecycle_11;
      t1 = _this.route;
      if (B.boolConversionCheck(t1._popCompleter.get$isCompleted()))
        return true;
      if (!B.boolConversionCheck(t1.didPop$1(_this.pendingResult))) {
        _this.currentState = C._RouteLifecycle_7;
        return false;
      }
      t1.onPopInvokedWithResult$2(true, _this.pendingResult);
      if (B.boolConversionCheck(_this.pageBased)) {
        type$.Page_nullable_Object._as(t1.get$settings());
        $navigator.get$widget().toString;
      }
      _this.pendingResult = null;
      return true;
    },
    handleComplete$0() {
      var _this = this;
      _this.route.didComplete$1(_this.pendingResult);
      _this.pendingResult = null;
      _this.currentState = C._RouteLifecycle_10;
    },
    handleRemoval$2$navigator$previousPresent($navigator, previousPresent) {
      type$.NavigatorState._as($navigator);
      type$.nullable_Route_dynamic._as(previousPresent);
      this.currentState = C._RouteLifecycle_12;
      if (B.boolConversionCheck(this._reportRemovalToObserver))
        J.add$1$ax($navigator._observedRouteDeletions, A._NavigatorRemoveObservation$(this.route, previousPresent));
    },
    didAdd$2$isNewFirst$navigator(isNewFirst, $navigator) {
      var t1;
      type$.NavigatorState._as($navigator);
      B._asBool(isNewFirst);
      t1 = this.route;
      t1.didAdd$0();
      this.currentState = C._RouteLifecycle_7;
      if (isNewFirst)
        t1.didChangeNext$1(null);
    },
    pop$1$1(result, $T) {
      this.pendingResult = $T._eval$1("0?")._as(result);
      this.currentState = C._RouteLifecycle_8;
    },
    finalize$0() {
      this.currentState = C._RouteLifecycle_13;
    },
    forcedDispose$0() {
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectDisposed$1$object(this);
      this.currentState = C._RouteLifecycle_15;
      this.route.dispose$0();
    },
    dispose$0() {
      var t1, mountedEntries, t2, t3, t4, listener, _this = this, _box_0 = {};
      _this.currentState = C._RouteLifecycle_14;
      t1 = _this.route;
      mountedEntries = J.where$1$ax(t1.get$overlayEntries(), new A._RouteEntry_dispose_closure());
      t2 = J.getInterceptor$asx(mountedEntries);
      if (B.boolConversionCheck(t2.get$isEmpty(mountedEntries))) {
        _this.forcedDispose$0();
        return;
      }
      _box_0.mounted = t2.get$length(mountedEntries);
      t1 = t1._navigator$_navigator;
      t1.toString;
      J.add$1$ax(t1._entryWaitingForSubTreeDisposal, _this);
      for (t2 = t2.get$iterator(mountedEntries), t3 = type$.void_Function; B.boolConversionCheck(t2.moveNext$0());) {
        t4 = t2.get$current();
        listener = B._Cell$named("listener");
        listener.set$value(new A._RouteEntry_dispose_closure0(_box_0, _this, t4, listener, t1));
        t4.addListener$1(listener.readLocal$1$0(t3));
      }
    },
    get$willBePresent() {
      var t1 = this.currentState.index;
      if (typeof t1 !== "number")
        return t1.$le();
      return t1 <= 7 && t1 >= 1;
    },
    get$isPresent() {
      var t1 = this.currentState.index;
      if (typeof t1 !== "number")
        return t1.$le();
      return t1 <= 10 && t1 >= 1;
    },
    get$isPresentForRestoration() {
      var t1 = this.currentState.index;
      if (typeof t1 !== "number")
        return t1.$le();
      return t1 <= 7;
    },
    get$suitableForAnnouncement() {
      var t1 = this.currentState.index;
      if (typeof t1 !== "number")
        return t1.$le();
      return t1 <= 12 && t1 >= 3;
    },
    get$suitableForTransitionAnimation() {
      var t1 = this.currentState.index;
      if (typeof t1 !== "number")
        return t1.$le();
      return t1 <= 10 && t1 >= 3;
    },
    shouldAnnounceChangeToNext$1(nextRoute) {
      return !(type$.nullable_Route_dynamic._as(nextRoute) == null && B.boolConversionCheck(J.$eq$(this.lastAnnouncedPoppedNextRoute.get$target(), this.lastAnnouncedNextRoute)));
    },
    set$restorationEnabled(value) {
      var t1 = B._asBool(value) ? this.get$restorationId() : null;
      this.route._updateRestorationId$1(t1);
    },
    set$lastAnnouncedPreviousRoute(lastAnnouncedPreviousRoute) {
      this.lastAnnouncedPreviousRoute = type$.nullable__RoutePlaceholder._as(lastAnnouncedPreviousRoute);
    },
    set$lastAnnouncedPoppedNextRoute(lastAnnouncedPoppedNextRoute) {
      this.lastAnnouncedPoppedNextRoute = type$.WeakReference__RoutePlaceholder._as(lastAnnouncedPoppedNextRoute);
    },
    set$lastAnnouncedNextRoute(lastAnnouncedNextRoute) {
      this.lastAnnouncedNextRoute = type$.nullable__RoutePlaceholder._as(lastAnnouncedNextRoute);
    },
    set$lastFocusNode(lastFocusNode) {
      this.lastFocusNode = B._asIntQ(lastFocusNode);
    }
  };
  A._NavigatorObservation.prototype = {};
  A._NavigatorPushObservation.prototype = {
    notify$1(observer) {
      type$.NavigatorObserver._as(observer).didPush$2(this.primaryRoute, this.secondaryRoute);
    }
  };
  A._NavigatorPopObservation.prototype = {
    notify$1(observer) {
      type$.NavigatorObserver._as(observer).didPop$2(this.primaryRoute, this.secondaryRoute);
    }
  };
  A._NavigatorRemoveObservation.prototype = {
    notify$1(observer) {
      type$.NavigatorObserver._as(observer).didRemove$2(this.primaryRoute, this.secondaryRoute);
    }
  };
  A._NavigatorReplaceObservation.prototype = {
    notify$1(observer) {
      type$.NavigatorObserver._as(observer).didReplace$2$newRoute$oldRoute(this.primaryRoute, this.secondaryRoute);
    }
  };
  A._History.prototype = {
    _History$0() {
      E.ChangeNotifier_maybeDispatchObjectCreation(this);
    },
    indexWhere$1(_, test) {
      return J.indexWhere$2$ax(this._navigator$_value, type$.bool_Function__RouteEntry._as(test), 0);
    },
    add$1(_, element) {
      J.add$1$ax(this._navigator$_value, type$._RouteEntry._as(element));
      this.notifyListeners$0();
    },
    addAll$1(_, elements) {
      type$.Iterable__RouteEntry._as(elements);
      J.addAll$1$ax(this._navigator$_value, elements);
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(elements)))
        this.notifyListeners$0();
    },
    removeAt$1(_, index) {
      var entry = J.removeAt$1$ax(this._navigator$_value, B._asInt(index));
      this.notifyListeners$0();
      return entry;
    },
    removeLast$0(_) {
      var entry = J.removeLast$0$ax(this._navigator$_value);
      this.notifyListeners$0();
      return entry;
    },
    $index(_, index) {
      return J.$index$asx(this._navigator$_value, B._asInt(index));
    },
    get$iterator(_) {
      return J.get$iterator$ax(this._navigator$_value);
    },
    toString$0(_) {
      return J.toString$0$(this._navigator$_value);
    },
    $isListenable: 1,
    $isChangeNotifier: 1
  };
  A.NavigatorState.prototype = {
    get$_overlayKey() {
      return this.__NavigatorState__overlayKey_A;
    },
    set$_overlayKey(value) {
      this.set$__NavigatorState__overlayKey_A(type$.GlobalKey_OverlayState._as(value));
    },
    get$_effectiveObservers() {
      return this.__NavigatorState__effectiveObservers_A;
    },
    set$_effectiveObservers(value) {
      this.set$__NavigatorState__effectiveObservers_A(type$.List_NavigatorObserver._as(value));
    },
    _handleHistoryChanged$0() {
      var lastEntry, notification, _this = this,
        navigatorCanPop = _this.canPop$0(),
        routeBlocksPop = B._Cell$named("routeBlocksPop"),
        t1 = !navigatorCanPop;
      if (t1) {
        lastEntry = _this._lastRouteEntryWhereOrNull$1(A.navigator__RouteEntry_isPresentPredicate$closure());
        routeBlocksPop.set$finalLocalValue(lastEntry != null && B.boolConversionCheck(J.$eq$(lastEntry.route.get$popDisposition(), C.RoutePopDisposition_1)));
      } else
        routeBlocksPop.set$finalLocalValue(false);
      notification = A.NavigationNotification$(!t1 || B.boolConversionCheck(routeBlocksPop.readLocal$1$0(type$.bool)));
      switch (E.SchedulerBinding_instance().get$schedulerPhase()) {
        case D.SchedulerPhase_4:
          notification.dispatch$1(_this.get$context());
          break;
        case D.SchedulerPhase_0:
        case D.SchedulerPhase_2:
        case D.SchedulerPhase_3:
        case D.SchedulerPhase_1:
          E.SchedulerBinding_instance().addPostFrameCallback$2$debugLabel(new A.NavigatorState__handleHistoryChanged_closure(_this, notification), "Navigator.dispatchNotification");
          break;
      }
    },
    initState$0() {
      var t1, t2, _this = this;
      _this.super$State$initState0();
      for (t1 = J.get$iterator$ax(_this.get$widget().observers); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        J.$indexSet$ax($.$get$NavigatorObserver__navigators(), t2, _this);
      }
      _this.set$_effectiveObservers(_this.get$widget().observers);
      t1 = _this.get$context().getElementForInheritedWidgetOfExactType$1$0(type$.HeroControllerScope);
      t1 = t1 == null ? null : t1.get$widget();
      type$.nullable_HeroControllerScope._as(t1);
      _this._updateHeroController$1(t1 == null ? null : t1.controller);
      if (B.boolConversionCheck(_this.get$widget().reportsRouteUpdateToEngine))
        A.SystemNavigator_selectSingleEntryHistory();
      E.ServicesBinding_instance().ServicesBinding_accessibilityFocus.addListener$1(_this.get$_recordLastFocus());
      _this._navigator$_history.addListener$1(_this.get$_handleHistoryChanged());
    },
    _recordLastFocus$0() {
      var entry = E.IterableExtensions_get_lastOrNull(J.where$1$ax(this._navigator$_history, A.navigator__RouteEntry_isPresentPredicate$closure()), type$._RouteEntry);
      if (entry != null)
        entry.set$lastFocusNode(E.ServicesBinding_instance().ServicesBinding_accessibilityFocus.get$value());
    },
    get$_nextPagelessRestorationScopeId() {
      var t1 = this._rawNextPagelessRestorationScopeId,
        t2 = t1.get$value();
      if (typeof t2 !== "number")
        return t2.$add();
      t1.set$value(t2 + 1);
      return t2;
    },
    restoreState$2(oldBucket, initialRestore) {
      var t1, t2, t3, t4, entry, initialRoute, _this = this;
      type$.nullable_RestorationBucket._as(oldBucket);
      B._asBool(initialRestore);
      _this.registerForRestoration$2(_this._rawNextPagelessRestorationScopeId, "id");
      t1 = _this._serializableHistory;
      _this.registerForRestoration$2(t1, "history");
      _this._forcedDisposeAllRouteEntries$0();
      _this.set$_overlayKey(A.GlobalKey_GlobalKey(null, type$.OverlayState));
      t2 = _this._navigator$_history;
      t3 = J.getInterceptor$ax(t2);
      t3.addAll$1(t2, t1.restoreEntriesForPage$2(null, _this));
      _this.get$widget().toString;
      t4 = F.JSArray_methods.get$iterator(C.List_empty14);
      for (; B.boolConversionCheck(t4.moveNext$0());) {
        entry = A._RouteEntry$(t4.get$current().createRoute$1(_this.get$context()), C._RouteLifecycle_1, true, null);
        t3.add$1(t2, entry);
        t3.addAll$1(t2, t1.restoreEntriesForPage$2(entry, _this));
      }
      if (!B.boolConversionCheck(t1.get$hasData())) {
        initialRoute = _this.get$widget().initialRoute;
        _this.get$widget().toString;
        if ((B.boolConversionCheck(F.JSArray_methods.get$isEmpty(C.List_empty14)) ? initialRoute == null ? "/" : initialRoute : initialRoute) != null) {
          t1 = _this.get$widget();
          t4 = _this.get$widget().initialRoute;
          t3.addAll$1(t2, J.map$1$1$ax(t1.onGenerateInitialRoutes$2(_this, t4 == null ? "/" : t4), new A.NavigatorState_restoreState_closure(_this), type$._RouteEntry));
        }
      }
      _this._flushHistoryUpdates$0();
    },
    didToggleBucket$1(oldBucket) {
      var t1, _this = this;
      _this.super$RestorationMixin$didToggleBucket(type$.nullable_RestorationBucket._as(oldBucket));
      t1 = _this._serializableHistory;
      if (_this.get$bucket() != null)
        t1.update$1(_this._navigator$_history);
      else
        J.clear$0$ax(t1);
    },
    get$restorationId() {
      return this.get$widget().restorationScopeId;
    },
    didChangeDependencies$0() {
      var t1, _this = this;
      _this.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$didChangeDependencies();
      _this._updateHeroController$1(A.HeroControllerScope_maybeOf(_this.get$context()));
      for (t1 = J.get$iterator$ax(_this._navigator$_history); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().route.changedExternalState$0();
    },
    _forcedDisposeAllRouteEntries$0() {
      var t1, t2;
      J.removeWhere$1$ax(this._entryWaitingForSubTreeDisposal, new A.NavigatorState__forcedDisposeAllRouteEntries_closure());
      for (t1 = this._navigator$_history, t2 = J.getInterceptor$asx(t1); B.boolConversionCheck(t2.get$isNotEmpty(t1));)
        A.NavigatorState__disposeRouteEntry(t2.removeLast$0(t1), false);
    },
    _updateHeroController$1(newHeroController) {
      var t1, t2, _this = this;
      type$.nullable_HeroController._as(newHeroController);
      if (!B.boolConversionCheck(J.$eq$(_this._heroControllerFromScope, newHeroController))) {
        if (newHeroController != null)
          J.$indexSet$ax($.$get$NavigatorObserver__navigators(), newHeroController, _this);
        t1 = _this._heroControllerFromScope;
        if (B.boolConversionCheck(J.$eq$(t1 == null ? null : t1.get$navigator(), _this))) {
          t1 = $.$get$NavigatorObserver__navigators();
          t2 = _this._heroControllerFromScope;
          t2.toString;
          J.$indexSet$ax(t1, t2, null);
        }
        _this._heroControllerFromScope = newHeroController;
        _this._updateEffectiveObservers$0();
      }
    },
    _updateEffectiveObservers$0() {
      var t1, t2, _this = this;
      if (_this._heroControllerFromScope != null) {
        t1 = _this.get$widget().observers;
        t2 = _this._heroControllerFromScope;
        t2.toString;
        _this.set$_effectiveObservers(J.$add$ansx(t1, B._setArrayType([t2], type$.JSArray_NavigatorObserver)));
      } else
        _this.set$_effectiveObservers(_this.get$widget().observers);
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, _this = this;
      type$.Navigator._as(oldWidget);
      _this.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$didUpdateWidget(oldWidget);
      t1 = oldWidget.observers;
      t2 = J.getInterceptor$(t1);
      if (!B.boolConversionCheck(t2.$eq(t1, _this.get$widget().observers))) {
        for (t1 = t2.get$iterator(t1); B.boolConversionCheck(t1.moveNext$0());) {
          t2 = t1.get$current();
          J.$indexSet$ax($.$get$NavigatorObserver__navigators(), t2, null);
        }
        for (t1 = J.get$iterator$ax(_this.get$widget().observers); B.boolConversionCheck(t1.moveNext$0());) {
          t2 = t1.get$current();
          J.$indexSet$ax($.$get$NavigatorObserver__navigators(), t2, _this);
        }
        _this._updateEffectiveObservers$0();
      }
      _this.get$widget().toString;
      for (t1 = J.get$iterator$ax(_this._navigator$_history); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().route.changedExternalState$0();
    },
    deactivate$0() {
      var t1, t2;
      for (t1 = J.get$iterator$ax(this.get$_effectiveObservers()); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        J.$indexSet$ax($.$get$NavigatorObserver__navigators(), t2, null);
      }
      this.super$State$deactivate();
    },
    activate$0() {
      var t1, t2;
      this.super$_NavigatorState_State_TickerProviderStateMixin$activate();
      for (t1 = J.get$iterator$ax(this.get$_effectiveObservers()); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        J.$indexSet$ax($.$get$NavigatorObserver__navigators(), t2, this);
      }
    },
    dispose$0() {
      var t1, _this = this;
      _this._updateHeroController$1(null);
      _this.focusNode.dispose$0();
      _this._forcedDisposeAllRouteEntries$0();
      _this._rawNextPagelessRestorationScopeId.dispose$0();
      _this._serializableHistory.dispose$0();
      _this.userGestureInProgressNotifier.dispose$0();
      E.ServicesBinding_instance().ServicesBinding_accessibilityFocus.removeListener$1(_this.get$_recordLastFocus());
      t1 = _this._navigator$_history;
      t1.removeListener$1(_this.get$_handleHistoryChanged());
      t1.dispose$0();
      _this.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$dispose();
    },
    get$overlay() {
      return this.get$_overlayKey().get$currentState();
    },
    get$_allRouteOverlayEntries() {
      var t2,
        t1 = B._setArrayType([], type$.JSArray_OverlayEntry);
      for (t2 = J.get$iterator$ax(this._navigator$_history); B.boolConversionCheck(t2.moveNext$0());)
        F.JSArray_methods.addAll$1(t1, t2.get$current().route.get$overlayEntries());
      return t1;
    },
    _flushHistoryUpdates$1$rearrangeOverlay(rearrangeOverlay) {
      var t1, t2, t3, index, entry, previous, toBeDisposed, poppedRoute, next, canRemoveOrAdd, seenTopActiveRoute, canRemoveOrAdd0, seenTopActiveRoute0, t4, t5, previous0, lastEntry, routeName, _this = this, _null = null;
      B._asBool(rearrangeOverlay);
      _this._flushingHistory = true;
      t1 = _this._navigator$_history;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.get$length(t1);
      if (typeof t3 !== "number")
        return t3.$sub();
      index = t3 - 1;
      entry = t2.$index(t1, index);
      previous = index > 0 ? t2.$index(t1, index - 1) : _null;
      toBeDisposed = B._setArrayType([], type$.JSArray__RouteEntry);
      $label0$1:
        for (t3 = _this._observedRouteDeletions, poppedRoute = _null, next = poppedRoute, canRemoveOrAdd = false, seenTopActiveRoute = false; index >= 0;) {
          canRemoveOrAdd0 = true;
          seenTopActiveRoute0 = true;
          switch (entry.currentState) {
            case C._RouteLifecycle_1:
              t4 = _this._getRouteBefore$2(index - 1, A.navigator__RouteEntry_isPresentPredicate$closure());
              entry.handleAdd$2$navigator$previousPresent(_this, t4 == null ? _null : t4.route);
              continue $label0$1;
            case C._RouteLifecycle_2:
              if (canRemoveOrAdd || next == null) {
                entry.didAdd$2$isNewFirst$navigator(next == null, _this);
                continue $label0$1;
              }
              break;
            case C._RouteLifecycle_3:
            case C._RouteLifecycle_4:
            case C._RouteLifecycle_6:
              t4 = previous == null ? _null : previous.route;
              t5 = _this._getRouteBefore$2(index - 1, A.navigator__RouteEntry_isPresentPredicate$closure());
              t5 = t5 == null ? _null : t5.route;
              entry.handlePush$4$isNewFirst$navigator$previous$previousPresent(next == null, _this, t4, t5);
              if (B.boolConversionCheck(J.$eq$(entry.currentState, C._RouteLifecycle_7)))
                continue $label0$1;
              break;
            case C._RouteLifecycle_5:
              if (!seenTopActiveRoute && poppedRoute != null)
                entry.handleDidPopNext$1(poppedRoute);
              seenTopActiveRoute = seenTopActiveRoute0;
              break;
            case C._RouteLifecycle_7:
              if (!seenTopActiveRoute && poppedRoute != null)
                entry.handleDidPopNext$1(poppedRoute);
              seenTopActiveRoute = seenTopActiveRoute0;
              canRemoveOrAdd = canRemoveOrAdd0;
              break;
            case C._RouteLifecycle_8:
              t4 = _this._getRouteBefore$2(index, A.navigator__RouteEntry_willBePresentPredicate$closure());
              if (!B.boolConversionCheck(entry.handlePop$2$navigator$previousPresent(_this, t4 == null ? _null : t4.route)))
                continue $label0$1;
              if (!seenTopActiveRoute) {
                if (poppedRoute != null)
                  entry.handleDidPopNext$1(poppedRoute);
                poppedRoute = entry.route;
              }
              t4 = entry.route;
              t5 = _this._getRouteBefore$2(index, A.navigator__RouteEntry_willBePresentPredicate$closure());
              J.add$1$ax(t3, A._NavigatorPopObservation$(t4, t5 == null ? _null : t5.route));
              if (B.boolConversionCheck(J.$eq$(entry.currentState, C._RouteLifecycle_13)))
                continue $label0$1;
              canRemoveOrAdd = canRemoveOrAdd0;
              break;
            case C._RouteLifecycle_11:
              break;
            case C._RouteLifecycle_9:
              entry.handleComplete$0();
              continue $label0$1;
            case C._RouteLifecycle_10:
              if (!seenTopActiveRoute) {
                if (poppedRoute != null)
                  entry.route.didPopNext$1(poppedRoute);
                poppedRoute = _null;
              }
              t4 = _this._getRouteBefore$2(index, A.navigator__RouteEntry_willBePresentPredicate$closure());
              entry.handleRemoval$2$navigator$previousPresent(_this, t4 == null ? _null : t4.route);
              continue $label0$1;
            case C._RouteLifecycle_12:
              if (!canRemoveOrAdd && next != null)
                break;
              if (B.boolConversionCheck(entry.pageBased))
                _this.get$widget().toString;
              entry.currentState = C._RouteLifecycle_13;
              continue $label0$1;
            case C._RouteLifecycle_13:
              F.JSArray_methods.add$1(toBeDisposed, t2.removeAt$1(t1, index));
              entry = next;
              break;
            case C._RouteLifecycle_14:
            case C._RouteLifecycle_15:
            case C._RouteLifecycle_0:
              break;
          }
          --index;
          previous0 = index > 0 ? t2.$index(t1, index - 1) : _null;
          next = entry;
          entry = previous;
          previous = previous0;
        }
      _this._flushObserverNotifications$0();
      _this._flushRouteAnnouncement$0();
      if (B.boolConversionCheck(_this.get$widget().reportsRouteUpdateToEngine)) {
        lastEntry = _this._lastRouteEntryWhereOrNull$1(A.navigator__RouteEntry_isPresentPredicate$closure());
        routeName = lastEntry == null ? _null : lastEntry.route.get$settings().name;
        if (routeName != null && routeName !== _this._lastAnnouncedRouteName) {
          A.SystemNavigator_routeInformationUpdated(false, _null, E.Uri_parse(routeName));
          _this._lastAnnouncedRouteName = routeName;
        }
      }
      for (t2 = F.JSArray_methods.get$iterator(toBeDisposed); B.boolConversionCheck(t2.moveNext$0());)
        A.NavigatorState__disposeRouteEntry(t2.get$current(), true);
      if (rearrangeOverlay) {
        t2 = _this.get$overlay();
        if (t2 != null)
          t2.rearrange$1(_this.get$_allRouteOverlayEntries());
      }
      if (_this.get$bucket() != null)
        _this._serializableHistory.update$1(t1);
      _this._flushingHistory = false;
    },
    _flushHistoryUpdates$0() {
      return this._flushHistoryUpdates$1$rearrangeOverlay(true);
    },
    _flushObserverNotifications$0() {
      var t1, t2, observation, _this = this;
      if (B.boolConversionCheck(J.get$isEmpty$asx(_this.get$_effectiveObservers()))) {
        J.clear$0$ax(_this._observedRouteDeletions);
        J.clear$0$ax(_this._observedRouteAdditions);
        return;
      }
      for (t1 = _this._observedRouteAdditions, t2 = J.getInterceptor$asx(t1); B.boolConversionCheck(t2.get$isNotEmpty(t1));) {
        observation = t2.removeLast$0(t1);
        J.forEach$1$ax(_this.get$_effectiveObservers(), observation.get$notify());
      }
      for (t1 = _this._observedRouteDeletions, t2 = J.getInterceptor$asx(t1); B.boolConversionCheck(t2.get$isNotEmpty(t1));) {
        observation = t1.removeFirst$0();
        J.forEach$1$ax(_this.get$_effectiveObservers(), observation.get$notify());
      }
    },
    _flushRouteAnnouncement$0() {
      var index, entry, next, t4, previous, _null = null,
        t1 = this._navigator$_history,
        t2 = J.getInterceptor$asx(t1),
        t3 = t2.get$length(t1);
      if (typeof t3 !== "number")
        return t3.$sub();
      index = t3 - 1;
      for (; index >= 0;) {
        entry = t2.$index(t1, index);
        if (!B.boolConversionCheck(entry.get$suitableForAnnouncement())) {
          --index;
          continue;
        }
        next = this._getRouteAfter$2(index + 1, A.navigator__RouteEntry_suitableForTransitionAnimationPredicate$closure());
        t3 = next == null;
        t4 = t3 ? _null : next.route;
        if (!B.boolConversionCheck(J.$eq$(t4, entry.lastAnnouncedNextRoute))) {
          if (B.boolConversionCheck(entry.shouldAnnounceChangeToNext$1(t3 ? _null : next.route))) {
            t4 = entry.route;
            t4.didChangeNext$1(t3 ? _null : next.route);
          }
          entry.set$lastAnnouncedNextRoute(t3 ? _null : next.route);
        }
        --index;
        previous = this._getRouteBefore$2(index, A.navigator__RouteEntry_suitableForTransitionAnimationPredicate$closure());
        t3 = previous == null;
        t4 = t3 ? _null : previous.route;
        if (!B.boolConversionCheck(J.$eq$(t4, entry.lastAnnouncedPreviousRoute))) {
          t4 = entry.route;
          t4.didChangePrevious$1(t3 ? _null : previous.route);
          entry.set$lastAnnouncedPreviousRoute(t3 ? _null : previous.route);
        }
      }
    },
    _getRouteBefore$2(index, predicate) {
      index = this._getIndexBefore$2(B._asInt(index), type$.bool_Function__RouteEntry._as(predicate));
      return index >= 0 ? J.$index$asx(this._navigator$_history, index) : null;
    },
    _getIndexBefore$2(index, predicate) {
      var t1, t2;
      B._asInt(index);
      type$.bool_Function__RouteEntry._as(predicate);
      t1 = this._navigator$_history;
      t2 = J.getInterceptor$asx(t1);
      while (true) {
        if (!(index >= 0 && !B.boolConversionCheck(predicate.call$1(t2.$index(t1, index)))))
          break;
        --index;
      }
      return index;
    },
    _getRouteAfter$2(index, predicate) {
      var t1, t2, t3;
      B._asInt(index);
      type$.bool_Function__RouteEntry._as(predicate);
      t1 = this._navigator$_history;
      t2 = J.getInterceptor$asx(t1);
      while (true) {
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return B.iae(t3);
        if (!(index < t3 && !B.boolConversionCheck(predicate.call$1(t2.$index(t1, index)))))
          break;
        ++index;
      }
      t3 = t2.get$length(t1);
      if (typeof t3 !== "number")
        return B.iae(t3);
      return index < t3 ? t2.$index(t1, index) : null;
    },
    _routeNamed$1$3$allowNull$arguments($name, allowNull, $arguments, $T) {
      var settings, t1, route;
      B._asString($name);
      B._asBool(allowNull);
      if (allowNull && this.get$widget().onGenerateRoute == null)
        return null;
      settings = A.RouteSettings$($arguments, $name);
      t1 = $T._eval$1("Route<0?>?");
      route = t1._as(this.get$widget().onGenerateRoute.call$1(settings));
      return route == null && !allowNull ? t1._as(this.get$widget().onUnknownRoute.call$1(settings)) : route;
    },
    _routeNamed$1$2$arguments($name, $arguments, $T) {
      return this._routeNamed$1$3$allowNull$arguments($name, false, $arguments, $T);
    },
    pushNamed$1$1(routeName, $T) {
      var t1 = this._routeNamed$1$2$arguments(B._asString(routeName), null, $T);
      t1.toString;
      return this.push$1$1(t1, $T._eval$1("0?"));
    },
    push$1$1(route, $T) {
      $T._eval$1("Route<0>")._as(route);
      this._pushEntry$1(A._RouteEntry$(route, C._RouteLifecycle_3, false, null));
      return route.get$popped();
    },
    _pushEntry$1(entry) {
      type$._RouteEntry._as(entry);
      J.add$1$ax(this._navigator$_history, entry);
      this._flushHistoryUpdates$0();
      this._afterNavigation$1(entry.route);
    },
    _afterNavigation$1(route) {
      var t1, t2, routeJsonable, description, settings, settingsJsonable;
      type$.nullable_Route_dynamic._as(route);
      if (route != null) {
        t1 = type$.String;
        t2 = type$.dynamic;
        routeJsonable = B.LinkedHashMap_LinkedHashMap$_empty(t1, t2);
        description = route.get$debugLabel();
        routeJsonable.$indexSet(0, "description", description);
        settings = route.get$settings();
        settingsJsonable = B.LinkedHashMap_LinkedHashMap$_literal(["name", settings.name], t1, t2);
        t1 = settings.$arguments;
        if (t1 != null)
          settingsJsonable.$indexSet(0, "arguments", A.jsonEncode(t1, new A.NavigatorState__afterNavigation_closure()));
        routeJsonable.$indexSet(0, "settings", settingsJsonable);
      } else
        routeJsonable = null;
      E.postEvent("Flutter.Navigation", B.LinkedHashMap_LinkedHashMap$_literal(["route", routeJsonable], type$.String, type$.dynamic));
      this._cancelActivePointers$0();
    },
    canPop$0() {
      var iterator = J.get$iterator$ax(J.where$1$ax(this._navigator$_history, A.navigator__RouteEntry_isPresentPredicate$closure()));
      if (!B.boolConversionCheck(iterator.moveNext$0()))
        return false;
      if (B.boolConversionCheck(iterator.get$current().route.get$willHandlePopInternally()))
        return true;
      if (!B.boolConversionCheck(iterator.moveNext$0()))
        return false;
      return true;
    },
    maybePop$1$1(result, $T) {
      return this.maybePop$body$NavigatorState($T._eval$1("0?")._as(result), $T);
    },
    maybePop$1$0($T) {
      return this.maybePop$1$1(null, $T);
    },
    maybePop$body$NavigatorState(result, $T) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, t1, lastEntry, $async$temp1, $async$temp2;
      var $async$maybePop$1$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                lastEntry = $async$self._lastRouteEntryWhereOrNull$1(A.navigator__RouteEntry_isPresentPredicate$closure());
                if (lastEntry == null) {
                  $async$returnValue = false;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t1 = lastEntry.route;
                $async$temp1 = B;
                $async$temp2 = J;
                $async$goto = 3;
                return B._asyncAwait(t1.willPop$0(), $async$maybePop$1$1);
              case 3:
                // returning from await.
                if ($async$temp1.boolConversionCheck($async$temp2.$eq$($async$result, C.RoutePopDisposition_1))) {
                  $async$returnValue = true;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                if (!B.boolConversionCheck($async$self.get$mounted())) {
                  $async$returnValue = true;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                if (lastEntry !== $async$self._lastRouteEntryWhereOrNull$1(A.navigator__RouteEntry_isPresentPredicate$closure())) {
                  $async$returnValue = true;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                switch (t1.get$popDisposition()) {
                  case C.RoutePopDisposition_2:
                    $async$returnValue = false;
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case C.RoutePopDisposition_0:
                    $async$self.pop$1$1(result, $T);
                    $async$returnValue = true;
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case C.RoutePopDisposition_1:
                    t1.onPopInvokedWithResult$2(false, result);
                    $async$returnValue = true;
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                }
              case 1:
                // return
                return B._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return B._asyncStartSync($async$maybePop$1$1, $async$completer);
    },
    pop$1$1(result, $T) {
      var entry, _this = this;
      $T._eval$1("0?")._as(result);
      entry = J.lastWhere$1$z(_this._navigator$_history, A.navigator__RouteEntry_isPresentPredicate$closure());
      if (B.boolConversionCheck(entry.pageBased))
        _this.get$widget().toString;
      entry.pop$1$1(result, $T);
      if (B.boolConversionCheck(J.$eq$(entry.currentState, C._RouteLifecycle_8)))
        _this._flushHistoryUpdates$1$rearrangeOverlay(false);
      _this._afterNavigation$1(entry.route);
    },
    pop$1$0($T) {
      return this.pop$1$1(null, $T);
    },
    finalizeRoute$1(route) {
      var t1, t2, index, entry, _this = this;
      type$.Route_dynamic._as(route);
      t1 = _this._navigator$_history;
      t2 = J.getInterceptor$ax(t1);
      index = t2.indexWhere$1(t1, A._RouteEntry_isRoutePredicate(route));
      entry = t2.$index(t1, index);
      if (B.boolConversionCheck(entry.pageBased)) {
        t1 = entry.currentState.index;
        if (typeof t1 !== "number")
          return t1.$lt();
        t1 = t1 < 8;
      } else
        t1 = false;
      if (t1) {
        t1 = _this._getRouteBefore$2(index - 1, A.navigator__RouteEntry_willBePresentPredicate$closure());
        J.add$1$ax(_this._observedRouteDeletions, A._NavigatorPopObservation$(route, t1 == null ? null : t1.route));
      }
      entry.finalize$0();
      if (!B.boolConversionCheck(_this._flushingHistory))
        _this._flushHistoryUpdates$1$rearrangeOverlay(false);
    },
    get$_userGesturesInProgress() {
      return this._userGesturesInProgressCount;
    },
    set$_userGesturesInProgress(value) {
      var t1;
      this._userGesturesInProgressCount = B._asInt(value);
      t1 = this.get$_userGesturesInProgress();
      if (typeof t1 !== "number")
        return t1.$gt();
      this.userGestureInProgressNotifier.set$value(t1 > 0);
    },
    get$userGestureInProgress() {
      return this.userGestureInProgressNotifier.get$value();
    },
    didStartUserGesture$0() {
      var t2, t3, routeIndex, route, previousRoute, _this = this,
        t1 = _this.get$_userGesturesInProgress();
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$_userGesturesInProgress(t1 + 1);
      if (B.boolConversionCheck(J.$eq$(_this.get$_userGesturesInProgress(), 1))) {
        t1 = _this._navigator$_history;
        t2 = J.getInterceptor$asx(t1);
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return t3.$sub();
        routeIndex = _this._getIndexBefore$2(t3 - 1, A.navigator__RouteEntry_willBePresentPredicate$closure());
        route = t2.$index(t1, routeIndex).route;
        previousRoute = !B.boolConversionCheck(route.get$willHandlePopInternally()) && routeIndex > 0 ? _this._getRouteBefore$2(routeIndex - 1, A.navigator__RouteEntry_willBePresentPredicate$closure()).route : null;
        for (t1 = J.get$iterator$ax(_this.get$_effectiveObservers()); B.boolConversionCheck(t1.moveNext$0());)
          t1.get$current().didStartUserGesture$2(route, previousRoute);
      }
    },
    didStopUserGesture$0() {
      var _this = this,
        t1 = _this.get$_userGesturesInProgress();
      if (typeof t1 !== "number")
        return t1.$sub();
      _this.set$_userGesturesInProgress(t1 - 1);
      if (B.boolConversionCheck(J.$eq$(_this.get$_userGesturesInProgress(), 0)))
        for (t1 = J.get$iterator$ax(_this.get$_effectiveObservers()); B.boolConversionCheck(t1.moveNext$0());)
          t1.get$current().didStopUserGesture$0();
    },
    _navigator$_handlePointerDown$1($event) {
      J.add$1$ax(this._activePointers, type$.PointerDownEvent._as($event).get$pointer());
    },
    _handlePointerUpOrCancel$1($event) {
      J.remove$1$ax(this._activePointers, type$.PointerEvent._as($event).get$pointer());
    },
    _cancelActivePointers$0() {
      if (B.boolConversionCheck(J.$eq$(E.SchedulerBinding_instance().get$schedulerPhase(), D.SchedulerPhase_0))) {
        var t1 = this.get$_overlayKey().get$currentContext();
        this.setState$1(new A.NavigatorState__cancelActivePointers_closure(t1 == null ? null : t1.findAncestorRenderObjectOfType$1$0(type$.RenderAbsorbPointer)));
      }
      J.forEach$1$ax(J.toList$0$ax(this._activePointers), E.WidgetsBinding_instance().get$cancelPointer());
    },
    _firstRouteEntryWhereOrNull$1(test) {
      var t1, t2;
      type$.bool_Function__RouteEntry._as(test);
      for (t1 = J.get$iterator$ax(this._navigator$_history); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        if (B.boolConversionCheck(test.call$1(t2)))
          return t2;
      }
      return null;
    },
    _lastRouteEntryWhereOrNull$1(test) {
      var t1, result, result0;
      type$.bool_Function__RouteEntry._as(test);
      for (t1 = J.get$iterator$ax(this._navigator$_history), result = null; B.boolConversionCheck(t1.moveNext$0());) {
        result0 = t1.get$current();
        if (B.boolConversionCheck(test.call$1(result0)))
          result = result0;
      }
      return result;
    },
    build$1(context) {
      var t1, t2, t3, t4, t5, _this = this, _null = null;
      type$.BuildContext._as(context);
      t1 = _this.get$_handlePointerUpOrCancel();
      t2 = E.FocusTraversalGroup_maybeOf(context);
      t3 = _this.get$bucket();
      t4 = _this.get$_overlayKey();
      t5 = _this.get$widget().clipBehavior;
      return A.HeroControllerScope$none(A.NotificationListener$(A.Listener$(C.HitTestBehavior_0, A.AbsorbPointer$(false, E.FocusTraversalGroup$(E.Focus$(true, _null, A.UnmanagedRestorationScope$(t3, A.Overlay$(t5, _this.get$overlay() == null ? J.toList$1$growable$ax(_this.get$_allRouteOverlayEntries(), false) : C.List_empty13, t4)), _null, _null, _null, _this.focusNode, false, _null, _null, _null, _null, _null, true), t2)), t1, _this.get$_navigator$_handlePointerDown(), _null, t1), new A.NavigatorState_build_closure(_this, context), type$.NavigationNotification));
    },
    set$__NavigatorState__overlayKey_A(__NavigatorState__overlayKey_A) {
      this.__NavigatorState__overlayKey_A = type$.GlobalKey_OverlayState._as(__NavigatorState__overlayKey_A);
    },
    set$__NavigatorState__effectiveObservers_A(__NavigatorState__effectiveObservers_A) {
      this.__NavigatorState__effectiveObservers_A = type$.List_NavigatorObserver._as(__NavigatorState__effectiveObservers_A);
    },
    $isTickerProvider: 1,
    $isRestorationMixin: 1,
    $isTickerProviderStateMixin: 1
  };
  A._RouteRestorationType.prototype = {
    _enumToString$0() {
      return "_RouteRestorationType." + B.S(this._core$_name);
    }
  };
  A._RestorationInformation.prototype = {
    get$isRestorable() {
      return true;
    },
    getSerializableData$0() {
      var t1 = this._serializableData;
      if (t1 == null)
        t1 = this._serializableData = this.computeSerializableData$0();
      t1.toString;
      return t1;
    },
    computeSerializableData$0() {
      return B._setArrayType([this.type.index], type$.JSArray_Object);
    },
    toRouteEntry$1($navigator) {
      return A._RouteEntry$(this.createRoute$1(type$.NavigatorState._as($navigator)), C._RouteLifecycle_1, false, this);
    }
  };
  A._NamedRestorationInformation.prototype = {
    computeSerializableData$0() {
      var _this = this,
        t1 = _this.super$_RestorationInformation$computeSerializableData(),
        t2 = B._setArrayType([_this.restorationScopeId, _this.name], type$.JSArray_Object),
        t3 = _this.$arguments;
      if (t3 != null)
        t2.push(t3);
      J.addAll$1$ax(t1, t2);
      return t1;
    },
    createRoute$1($navigator) {
      var t1 = type$.NavigatorState._as($navigator)._routeNamed$1$2$arguments(this.name, this.$arguments, type$.dynamic);
      t1.toString;
      return t1;
    },
    get$restorationScopeId() {
      return this.restorationScopeId;
    }
  };
  A._AnonymousRestorationInformation.prototype = {
    get$isRestorable() {
      return false;
    },
    computeSerializableData$0() {
      var _this = this,
        handle = A.PluginUtilities_getCallbackHandle(_this.routeBuilder),
        t1 = _this.super$_RestorationInformation$computeSerializableData(),
        t2 = B._setArrayType([_this.restorationScopeId, handle.toRawHandle$0()], type$.JSArray_Object),
        t3 = _this.$arguments;
      if (t3 != null)
        t2.push(t3);
      J.addAll$1$ax(t1, t2);
      return t1;
    },
    createRoute$1($navigator) {
      return this.routeBuilder.call$2(type$.NavigatorState._as($navigator).get$context(), this.$arguments);
    },
    get$restorationScopeId() {
      return this.restorationScopeId;
    }
  };
  A._HistoryProperty.prototype = {
    update$1($history) {
      var wasUninitialized, t1, newRoutesForCurrentPage, t2, oldRoutesForCurrentPage, newMap, removedPages, needsSerialization, currentPage, restorationEnabled, currentPage0, t3, serializedData, t4, t5, _this = this;
      type$._History._as($history);
      wasUninitialized = _this._pageToPagelessRoutes == null;
      if (wasUninitialized)
        _this.set$_pageToPagelessRoutes(B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.List_Object));
      t1 = type$.JSArray_Object;
      newRoutesForCurrentPage = B._setArrayType([], t1);
      t2 = _this._pageToPagelessRoutes;
      t2.toString;
      oldRoutesForCurrentPage = J.$index$asx(t2, null);
      if (oldRoutesForCurrentPage == null)
        oldRoutesForCurrentPage = C.List_empty15;
      newMap = B.LinkedHashMap_LinkedHashMap$_empty(type$.nullable_String, type$.List_Object);
      removedPages = J.toSet$0$ax(_this._pageToPagelessRoutes.get$keys());
      for (t2 = $history.get$iterator(0), needsSerialization = wasUninitialized, currentPage = null, restorationEnabled = true; B.boolConversionCheck(t2.moveNext$0());) {
        currentPage0 = t2.get$current();
        if (!B.boolConversionCheck(currentPage0.get$isPresentForRestoration())) {
          currentPage0.set$restorationEnabled(false);
          continue;
        }
        if (B.boolConversionCheck(currentPage0.pageBased)) {
          needsSerialization = needsSerialization || newRoutesForCurrentPage.length !== J.get$length$asx(oldRoutesForCurrentPage);
          _this._finalizeEntry$4(newRoutesForCurrentPage, currentPage, newMap, removedPages);
          restorationEnabled = currentPage0.get$restorationId() != null;
          currentPage0.set$restorationEnabled(restorationEnabled);
          if (restorationEnabled) {
            newRoutesForCurrentPage = B._setArrayType([], t1);
            t3 = _this._pageToPagelessRoutes;
            t3.toString;
            oldRoutesForCurrentPage = J.$index$asx(t3, currentPage0.get$restorationId());
            if (oldRoutesForCurrentPage == null)
              oldRoutesForCurrentPage = C.List_empty15;
          } else {
            newRoutesForCurrentPage = C.List_empty15;
            oldRoutesForCurrentPage = C.List_empty15;
          }
          currentPage = currentPage0;
          continue;
        }
        if (restorationEnabled) {
          t3 = currentPage0.restorationInformation;
          t3 = t3 == null ? null : t3.get$isRestorable();
          restorationEnabled = B.boolConversionCheck(t3 == null ? false : t3);
        } else
          restorationEnabled = false;
        currentPage0.set$restorationEnabled(restorationEnabled);
        if (restorationEnabled) {
          serializedData = currentPage0.restorationInformation.getSerializableData$0();
          if (!needsSerialization) {
            t3 = J.getInterceptor$asx(oldRoutesForCurrentPage);
            t4 = t3.get$length(oldRoutesForCurrentPage);
            t5 = newRoutesForCurrentPage.length;
            if (typeof t4 !== "number")
              return t4.$le();
            needsSerialization = t4 <= t5 || !B.boolConversionCheck(J.$eq$(t3.$index(oldRoutesForCurrentPage, t5), serializedData));
          } else
            needsSerialization = true;
          F.JSArray_methods.add$1(newRoutesForCurrentPage, serializedData);
        }
      }
      needsSerialization = needsSerialization || newRoutesForCurrentPage.length !== J.get$length$asx(oldRoutesForCurrentPage);
      _this._finalizeEntry$4(newRoutesForCurrentPage, currentPage, newMap, removedPages);
      if (needsSerialization || B.boolConversionCheck(removedPages.get$isNotEmpty(removedPages))) {
        _this.set$_pageToPagelessRoutes(newMap);
        _this.notifyListeners$0();
      }
    },
    _finalizeEntry$4(routes, page, pageToRoutes, pagesToRemove) {
      var restorationId;
      type$.List_Object._as(routes);
      type$.nullable__RouteEntry._as(page);
      type$.Map_of_nullable_String_and_List_Object._as(pageToRoutes);
      type$.Set_nullable_String._as(pagesToRemove);
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(routes))) {
        restorationId = page == null ? null : page.get$restorationId();
        pageToRoutes.$indexSet(0, restorationId, routes);
        pagesToRemove.remove$1(0, restorationId);
      }
    },
    clear$0(_) {
      if (this._pageToPagelessRoutes == null)
        return;
      this.set$_pageToPagelessRoutes(null);
      this.notifyListeners$0();
    },
    get$hasData() {
      return this._pageToPagelessRoutes != null;
    },
    restoreEntriesForPage$2(page, $navigator) {
      var result, t1, serializedData;
      type$.nullable__RouteEntry._as(page);
      type$.NavigatorState._as($navigator);
      result = B._setArrayType([], type$.JSArray__RouteEntry);
      if (this._pageToPagelessRoutes != null)
        t1 = page != null && page.get$restorationId() == null;
      else
        t1 = true;
      if (t1)
        return result;
      t1 = this._pageToPagelessRoutes;
      t1.toString;
      serializedData = J.$index$asx(t1, page == null ? null : page.get$restorationId());
      if (serializedData == null)
        return result;
      for (t1 = J.get$iterator$ax(serializedData); B.boolConversionCheck(t1.moveNext$0());)
        F.JSArray_methods.add$1(result, A._RestorationInformation__RestorationInformation$fromSerializableData(t1.get$current()).toRouteEntry$1($navigator));
      return result;
    },
    createDefaultValue$0() {
      return null;
    },
    fromPrimitives$1(data) {
      data.toString;
      return type$.Map_dynamic_dynamic._as(data).map$2$1(0, new A._HistoryProperty_fromPrimitives_closure(), type$.nullable_String, type$.List_Object);
    },
    initWithValue$1(value) {
      this.set$_pageToPagelessRoutes(type$.nullable_Map_of_nullable_String_and_List_Object._as(value));
    },
    toPrimitives$0() {
      return this._pageToPagelessRoutes;
    },
    get$enabled() {
      return this.get$hasData();
    },
    set$_pageToPagelessRoutes(_pageToPagelessRoutes) {
      this._pageToPagelessRoutes = type$.nullable_Map_of_nullable_String_and_List_Object._as(_pageToPagelessRoutes);
    }
  };
  A.NavigationNotification.prototype = {
    toString$0(_) {
      return "NavigationNotification canHandlePop: " + B.S(this.canHandlePop);
    }
  };
  A._NavigatorState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$State$debugFillProperties(properties);
      t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null) {
        t2 = B.S(J.get$length$asx(t1));
        t3 = this.TickerProviderStateMixin__tickers;
        t3.toString;
        t3 = B.boolConversionCheck(J.$eq$(J.get$length$asx(t3), 1)) ? "" : "s";
        t3 = "tracking " + t2 + " ticker" + t3;
        t2 = t3;
      } else
        t2 = _null;
      properties.add$1(0, E.DiagnosticsProperty$("tickers", t1, true, _null, t2, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Set_Ticker));
    },
    $isTickerProvider: 1,
    $isTickerProviderStateMixin: 1
  };
  A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin.prototype = {
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(type$.Navigator._as(oldWidget));
      this.didUpdateRestorationId$0();
    },
    didChangeDependencies$0() {
      var oldBucket, needsRestore, didReplaceBucket, _this = this;
      _this.super$State$didChangeDependencies();
      oldBucket = _this.RestorationMixin__bucket;
      needsRestore = _this.get$restorePending();
      _this.set$_currentParent(A.RestorationScope_maybeOf(_this.get$context()));
      didReplaceBucket = _this._updateBucketIfNecessary$2$parent$restorePending(_this.RestorationMixin__currentParent, needsRestore);
      if (needsRestore)
        _this._doRestore$1(oldBucket);
      if (didReplaceBucket)
        if (oldBucket != null)
          oldBucket.dispose$0();
    },
    dispose$0() {
      var t1, _this = this;
      J.forEach$1$ax(_this.RestorationMixin__properties, new A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure());
      t1 = _this.RestorationMixin__bucket;
      if (t1 != null)
        t1.dispose$0();
      _this.RestorationMixin__bucket = null;
      _this.super$_NavigatorState_State_TickerProviderStateMixin$dispose();
    },
    $isTickerProvider: 1,
    $isRestorationMixin: 1,
    $isTickerProviderStateMixin: 1
  };
  A.__History_Iterable_ChangeNotifier.prototype = {$isListenable: 1, $isChangeNotifier: 1};
  A.Notification.prototype = {
    dispatch$1(target) {
      type$.nullable_BuildContext._as(target);
      if (target != null)
        target.dispatchNotification$1(this);
    },
    toString$0(_) {
      var description = B._setArrayType([], type$.JSArray_String);
      this.debugFillDescription$1(description);
      return B.S(E.objectRuntimeType(this, "Notification")) + "(" + B.S(F.JSArray_methods.join$1(description, ", ")) + ")";
    },
    debugFillDescription$1(description) {
      type$.List_String._as(description);
    }
  };
  A.NotificationListener.prototype = {
    createElement$0() {
      return A._NotificationElement$(this, this.$ti._precomputed1);
    }
  };
  A._NotificationElement.prototype = {
    onNotification$1(notification) {
      var t1, t2;
      type$.Notification._as(notification);
      t1 = this.$ti;
      t2 = t1._eval$1("bool(1)?")._as(t1._eval$1("NotificationListener<1>")._as(this.get$widget()).onNotification);
      if (t2 != null && t1._precomputed1._is(notification))
        return t2.call$1(notification);
      return false;
    },
    notifyClients$1(oldWidget) {
      type$.ProxyWidget._as(oldWidget);
    },
    $isNotifiableElementMixin: 1
  };
  A.__NotificationElement_ProxyElement_NotifiableElementMixin.prototype = {$isNotifiableElementMixin: 1};
  A.OverlayEntry.prototype = {
    OverlayEntry$4$builder$canSizeOverlay$maintainState$opaque(builder, canSizeOverlay, maintainState, opaque) {
      this._overlay$_maybeDispatchObjectCreation$0();
    },
    get$opaque() {
      return this._overlay$_opaque;
    },
    set$opaque(value) {
      var t1;
      B._asBool(value);
      if (B.boolConversionCheck(J.$eq$(this._overlay$_opaque, value)))
        return;
      this._overlay$_opaque = value;
      t1 = this._overlay;
      if (t1 != null)
        t1._didChangeEntryOpacity$0();
    },
    get$maintainState() {
      return this._maintainState;
    },
    set$maintainState(value) {
      B._asBool(value);
      if (B.boolConversionCheck(J.$eq$(this._maintainState, value)))
        return;
      this._maintainState = value;
      this._overlay._didChangeEntryOpacity$0();
    },
    get$mounted() {
      var t1 = this._overlayEntryStateNotifier;
      return (t1 == null ? null : t1.get$value()) != null;
    },
    _overlay$_maybeDispatchObjectCreation$0() {
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(B.S(C.Type_OverlayEntry_rBb), "package:flutter/widgets.dart", this);
    },
    addListener$1(listener) {
      var t1;
      type$.void_Function._as(listener);
      t1 = this._overlayEntryStateNotifier;
      if (t1 != null)
        t1.addListener$1(listener);
    },
    removeListener$1(listener) {
      var t1;
      type$.void_Function._as(listener);
      t1 = this._overlayEntryStateNotifier;
      if (t1 != null)
        t1.removeListener$1(listener);
    },
    remove$0(_) {
      var t1 = this._overlay;
      t1.toString;
      this._overlay = null;
      if (!B.boolConversionCheck(t1.get$mounted()))
        return;
      J.remove$1$ax(t1._overlay$_entries, this);
      if (B.boolConversionCheck(J.$eq$(E.SchedulerBinding_instance().get$schedulerPhase(), D.SchedulerPhase_3)))
        E.SchedulerBinding_instance().addPostFrameCallback$2$debugLabel(new A.OverlayEntry_remove_closure(t1), "OverlayEntry.markDirty");
      else
        t1._overlay$_markDirty$0();
    },
    markNeedsBuild$0() {
      var t1 = this._key.get$currentState();
      if (t1 != null)
        t1._markNeedsBuild$0();
    },
    _didUnmount$0() {
      if (B.boolConversionCheck(this._disposedByOwner)) {
        var t1 = this._overlayEntryStateNotifier;
        if (t1 != null)
          t1.dispose$0();
        this.set$_overlayEntryStateNotifier(null);
      }
    },
    dispose$0() {
      var t1, _this = this;
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectDisposed$1$object(_this);
      _this._disposedByOwner = true;
      if (!B.boolConversionCheck(_this.get$mounted())) {
        t1 = _this._overlayEntryStateNotifier;
        if (t1 != null)
          t1.dispose$0();
        _this.set$_overlayEntryStateNotifier(null);
      }
    },
    toString$0(_) {
      var _this = this,
        t1 = B.S(E.describeIdentity(_this)),
        t2 = B.S(_this.get$opaque()),
        t3 = B.S(_this.get$maintainState()),
        t4 = B.boolConversionCheck(_this._disposedByOwner) ? "(DISPOSED)" : "";
      return t1 + "(opaque: " + t2 + "; maintainState: " + t3 + ")" + t4;
    },
    set$_overlayEntryStateNotifier(_overlayEntryStateNotifier) {
      this._overlayEntryStateNotifier = type$.nullable_ValueNotifier_nullable__OverlayEntryWidgetState._as(_overlayEntryStateNotifier);
    },
    $isListenable: 1,
    builder$1(arg0) {
      return this.builder.call$1(arg0);
    }
  };
  A._OverlayEntryWidget.prototype = {
    createState$0() {
      return A._OverlayEntryWidgetState$();
    }
  };
  A._OverlayEntryWidgetState.prototype = {
    get$_theater() {
      return this.___OverlayEntryWidgetState__theater_A;
    },
    set$_theater(value) {
      this.___OverlayEntryWidgetState__theater_A = type$._RenderTheater._as(value);
    },
    get$_paintOrderIterable() {
      var result, _this = this,
        value = _this.___OverlayEntryWidgetState__paintOrderIterable_FI;
      if (B.boolConversionCheck(E.isSentinel(value))) {
        result = _this._createChildIterable$1$reversed(false);
        _this.___OverlayEntryWidgetState__paintOrderIterable_FI !== $ && B.throwLateFieldADI("_paintOrderIterable");
        _this.set$___OverlayEntryWidgetState__paintOrderIterable_FI(result);
        value = result;
      }
      return value;
    },
    get$_hitTestOrderIterable() {
      var result, _this = this,
        value = _this.___OverlayEntryWidgetState__hitTestOrderIterable_FI;
      if (B.boolConversionCheck(E.isSentinel(value))) {
        result = _this._createChildIterable$1$reversed(true);
        _this.___OverlayEntryWidgetState__hitTestOrderIterable_FI !== $ && B.throwLateFieldADI("_hitTestOrderIterable");
        _this.set$___OverlayEntryWidgetState__hitTestOrderIterable_FI(result);
        value = result;
      }
      return value;
    },
    _createChildIterable$1$reversed(reversed) {
      return B._makeSyncStarIterable(this._createChildIterable$body$_OverlayEntryWidgetState(B._asBool(reversed)), type$.RenderBox);
    },
    _createChildIterable$body$_OverlayEntryWidgetState($async$reversed) {
      var $async$self = this;
      return function() {
        var reversed = $async$reversed;
        var $async$goto = 0, $async$handler = 2, $async$currentError, candidate, renderBox, children;
        return function $async$_createChildIterable$1$reversed($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                children = $async$self._sortedTheaterSiblings;
                if (children == null || B.boolConversionCheck(children.get$isEmpty(0))) {
                  // goto return
                  $async$goto = 1;
                  break;
                }
                candidate = reversed ? children.get$last(0) : children.get$first(0);
              case 3:
                // for condition
                if (!(candidate != null)) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                renderBox = candidate._overlayChildRenderBox;
                candidate = reversed ? candidate.get$previous() : candidate.get$next();
                $async$goto = renderBox != null ? 5 : 6;
                break;
              case 5:
                // then
                $async$goto = 7;
                return $async$iterator._async$_current = renderBox, 1;
              case 7:
                // after yield
              case 6:
                // join
                // goto for condition
                $async$goto = 3;
                break;
              case 4:
                // after for
              case 1:
                // return
                return 0;
              case 2:
                // rethrow
                return $async$iterator._datum = $async$currentError, 3;
            }
        };
      };
    },
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState0();
      _this.get$widget().entry._overlayEntryStateNotifier.set$value(_this);
      t1 = _this.get$context().findAncestorRenderObjectOfType$1$0(type$._RenderTheater);
      t1.toString;
      _this.set$_theater(t1);
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      type$._OverlayEntryWidget._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      if (!B.boolConversionCheck(J.$eq$(oldWidget.overlayState, _this.get$widget().overlayState))) {
        t1 = _this.get$context().findAncestorRenderObjectOfType$1$0(type$._RenderTheater);
        t1.toString;
        _this.set$_theater(t1);
      }
    },
    dispose$0() {
      var _this = this,
        t1 = _this.get$widget().entry._overlayEntryStateNotifier;
      if (t1 != null)
        t1.set$value(null);
      _this.get$widget().entry._didUnmount$0();
      _this.set$_sortedTheaterSiblings(null);
      _this.super$State$dispose();
    },
    build$1(context) {
      var t1, t2, _this = this;
      type$.BuildContext._as(context);
      t1 = _this.get$widget().tickerEnabled;
      t2 = _this.get$_theater();
      return A.TickerMode$(A._RenderTheaterMarker$(_this.get$widget().entry.builder$1(context), _this, t2), t1);
    },
    _markNeedsBuild$0() {
      this.setState$1(new A._OverlayEntryWidgetState__markNeedsBuild_closure());
    },
    set$_sortedTheaterSiblings(_sortedTheaterSiblings) {
      this._sortedTheaterSiblings = type$.nullable_LinkedList__OverlayEntryLocation._as(_sortedTheaterSiblings);
    },
    set$___OverlayEntryWidgetState__paintOrderIterable_FI(___OverlayEntryWidgetState__paintOrderIterable_FI) {
      this.___OverlayEntryWidgetState__paintOrderIterable_FI = type$.Iterable_RenderBox._as(___OverlayEntryWidgetState__paintOrderIterable_FI);
    },
    set$___OverlayEntryWidgetState__hitTestOrderIterable_FI(___OverlayEntryWidgetState__hitTestOrderIterable_FI) {
      this.___OverlayEntryWidgetState__hitTestOrderIterable_FI = type$.Iterable_RenderBox._as(___OverlayEntryWidgetState__hitTestOrderIterable_FI);
    }
  };
  A.Overlay.prototype = {
    createState$0() {
      return A.OverlayState$();
    }
  };
  A.OverlayState.prototype = {
    initState$0() {
      this.super$State$initState0();
      this.insertAll$1(0, this.get$widget().initialEntries);
    },
    _insertionIndex$2(below, above) {
      var t1 = type$.nullable_OverlayEntry;
      t1._as(below);
      t1._as(above);
      if (below != null)
        return J.indexOf$1$asx(this._overlay$_entries, below);
      if (above != null) {
        t1 = J.indexOf$1$asx(this._overlay$_entries, above);
        if (typeof t1 !== "number")
          return t1.$add();
        return t1 + 1;
      }
      return J.get$length$asx(this._overlay$_entries);
    },
    insert$1(_, entry) {
      type$.OverlayEntry._as(entry);
      entry._overlay = this;
      this.setState$1(new A.OverlayState_insert_closure(this, null, null, entry));
    },
    insertAll$1(_, entries) {
      var t1;
      type$.Iterable_OverlayEntry._as(entries);
      t1 = J.getInterceptor$asx(entries);
      if (B.boolConversionCheck(t1.get$isEmpty(entries)))
        return;
      for (t1 = t1.get$iterator(entries); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current()._overlay = this;
      this.setState$1(new A.OverlayState_insertAll_closure(this, null, null, entries));
    },
    rearrange$1(newEntries) {
      var newEntriesList, t1, t2, t3, old, _this = this;
      type$.Iterable_OverlayEntry._as(newEntries);
      newEntriesList = type$.List_OverlayEntry._is(newEntries) ? newEntries : J.toList$1$growable$ax(newEntries, false);
      t1 = J.getInterceptor$asx(newEntriesList);
      if (B.boolConversionCheck(t1.get$isEmpty(newEntriesList)))
        return;
      t2 = _this._overlay$_entries;
      t3 = type$.OverlayEntry;
      if (B.boolConversionCheck(E.listEquals(t2, newEntriesList, t3)))
        return;
      old = B.LinkedHashSet_LinkedHashSet$of(t2, t3);
      for (t1 = t1.get$iterator(newEntriesList); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        if (t2._overlay == null)
          t2._overlay = _this;
      }
      _this.setState$1(new A.OverlayState_rearrange_closure(_this, newEntriesList, old, null, null));
    },
    _overlay$_markDirty$0() {
      if (B.boolConversionCheck(this.get$mounted()))
        this.setState$1(new A.OverlayState__markDirty_closure());
    },
    _didChangeEntryOpacity$0() {
      this.setState$1(new A.OverlayState__didChangeEntryOpacity_closure());
    },
    build$1(context) {
      var children, t1, onstage, onstageCount, t2, _this = this;
      type$.BuildContext._as(context);
      children = B._setArrayType([], type$.JSArray__OverlayEntryWidget);
      for (t1 = J.get$iterator$ax(J.get$reversed$ax(_this._overlay$_entries)), onstage = true, onstageCount = 0; B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        if (onstage) {
          ++onstageCount;
          F.JSArray_methods.add$1(children, A._OverlayEntryWidget$(t2, t2._key, _this, true));
          t2 = B.boolConversionCheck(t2.get$opaque());
          onstage = !t2;
        } else if (B.boolConversionCheck(t2.get$maintainState()))
          F.JSArray_methods.add$1(children, A._OverlayEntryWidget$(t2, t2._key, _this, false));
      }
      t1 = children.length;
      t2 = _this.get$widget().clipBehavior;
      return A._Theater$(J.toList$1$growable$ax(F.JSArray_methods.get$reversed(children), false), t2, t1 - onstageCount);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$_OverlayState_State_TickerProviderStateMixin$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("entries", this._overlay$_entries, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.List_OverlayEntry));
    },
    $isTickerProvider: 1,
    $isTickerProviderStateMixin: 1
  };
  A._Theater.prototype = {
    createElement$0() {
      return A._TheaterElement$(this);
    },
    createRenderObject$1(context) {
      return A._RenderTheater$(this.clipBehavior, this.skipCount, A.Directionality_of(type$.BuildContext._as(context)));
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$._RenderTheater._as(renderObject);
      renderObject.set$skipCount(this.skipCount);
      renderObject.set$textDirection(A.Directionality_of(context));
      renderObject.set$clipBehavior(this.clipBehavior);
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.IntProperty$("skipCount", this.skipCount, D.C__NoDefaultValue, null, D.DiagnosticLevel_3, null));
    }
  };
  A._TheaterElement.prototype = {
    get$renderObject() {
      return type$._RenderTheater._as(A.MultiChildRenderObjectElement.prototype.get$renderObject.call(this));
    },
    insertRenderObjectChild$2(child, slot) {
      var t1;
      type$.RenderBox._as(child);
      type$.IndexedSlot_nullable_Element._as(slot);
      this.super$MultiChildRenderObjectElement$insertRenderObjectChild(child, slot);
      t1 = child.parentData;
      t1.toString;
      type$._TheaterParentData._as(t1).set$overlayEntry(type$._OverlayEntryWidget._as(J.$index$asx(type$._Theater._as(this.get$widget()).children, slot.index)).entry);
    },
    moveRenderObjectChild$3(child, oldSlot, newSlot) {
      var t1 = type$.IndexedSlot_nullable_Element;
      this.super$MultiChildRenderObjectElement$moveRenderObjectChild(type$.RenderBox._as(child), t1._as(oldSlot), t1._as(newSlot));
    }
  };
  A._RenderTheaterMixin.prototype = {
    setupParentData$1(child) {
      type$.RenderBox._as(child);
      if (!(child.parentData instanceof A.StackParentData))
        child.parentData = A.StackParentData$();
    },
    computeDistanceToActualBaseline$1(baseline) {
      var t1, t2, baselineOffset, t3, t4;
      type$.TextBaseline._as(baseline);
      for (t1 = J.get$iterator$ax(this._childrenInPaintOrder$0()), t2 = type$.StackParentData, baselineOffset = null; B.boolConversionCheck(t1.moveNext$0());) {
        t3 = t1.get$current();
        t4 = t3.parentData;
        t4.toString;
        t2._as(t4);
        baselineOffset = A.BaselineOffset_minOf(baselineOffset, A.BaselineOffset__(E.BaselineOffset_constructor_(t3.getDistanceToActualBaseline$1(baseline)), t4.offset.get$dy()));
      }
      return baselineOffset;
    },
    layoutChild$2(child, nonPositionedChildConstraints) {
      var t1, alignment;
      type$.RenderBox._as(child);
      type$.BoxConstraints._as(nonPositionedChildConstraints);
      t1 = child.parentData;
      t1.toString;
      type$.StackParentData._as(t1);
      alignment = this.get$theater().get$_overlay$_resolvedAlignment();
      if (!B.boolConversionCheck(t1.get$isPositioned())) {
        child.layout$2$parentUsesSize(nonPositionedChildConstraints, true);
        t1.offset = D.Offset_0_0;
      } else
        A.RenderStack_layoutPositionedChild(child, t1, this.get$size(), alignment);
    },
    hitTestChildren$2$position(result, position) {
      var iterator, t1, isHit, child, t2;
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      iterator = J.get$iterator$ax(this._overlay$_childrenInHitTestOrder$0());
      t1 = type$.StackParentData;
      isHit = false;
      while (true) {
        if (!(!isHit && B.boolConversionCheck(iterator.moveNext$0())))
          break;
        child = iterator.get$current();
        t2 = child.parentData;
        t2.toString;
        isHit = result.addWithPaintOffset$3$hitTest$offset$position(new A._RenderTheaterMixin_hitTestChildren_childHitTest(child), t1._as(t2).offset, position);
      }
      return isHit;
    },
    paint$2(context, offset) {
      var t1, t2, t3, t4;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      for (t1 = J.get$iterator$ax(this._childrenInPaintOrder$0()), t2 = type$.StackParentData; B.boolConversionCheck(t1.moveNext$0());) {
        t3 = t1.get$current();
        t4 = t3.parentData;
        t4.toString;
        context.paintChild$2(t3, J.$add$ansx(t2._as(t4).offset, offset));
      }
    },
    $isDiagnosticable: 1,
    $isDiagnosticableTree: 1,
    $isDiagnosticableTreeMixin: 1,
    $isHitTestTarget: 1,
    $isRenderBox: 1,
    $isRenderObject: 1,
    $is_DiagnosticableTree_Object_Diagnosticable: 1,
    $is_RenderObject_Object_DiagnosticableTreeMixin: 1
  };
  A._TheaterParentData.prototype = {
    get$paintOrderIterator() {
      var t1 = this.overlayEntry;
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1._overlayEntryStateNotifier;
        t1 = t1 == null ? null : J.get$iterator$ax(t1.get$value().get$_paintOrderIterable());
      }
      return t1;
    },
    get$hitTestOrderIterator() {
      var t1 = this.overlayEntry;
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1._overlayEntryStateNotifier;
        t1 = t1 == null ? null : J.get$iterator$ax(t1.get$value().get$_hitTestOrderIterable());
      }
      return t1;
    },
    visitOverlayPortalChildrenOnOverlayEntry$1(visitor) {
      var t1;
      type$.void_Function_RenderObject._as(visitor);
      t1 = this.overlayEntry;
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1._overlayEntryStateNotifier;
        t1 = t1 == null ? null : J.forEach$1$ax(t1.get$value().get$_paintOrderIterable(), visitor);
      }
      return t1;
    },
    set$overlayEntry(overlayEntry) {
      this.overlayEntry = type$.nullable_OverlayEntry._as(overlayEntry);
    }
  };
  A._RenderTheater.prototype = {
    _RenderTheater$4$children$clipBehavior$skipCount$textDirection(children, clipBehavior, skipCount, textDirection) {
      this.addAll$1(0, children);
    },
    get$theater() {
      return this;
    },
    setupParentData$1(child) {
      type$.RenderBox._as(child);
      if (!(child.parentData instanceof A._TheaterParentData))
        child.parentData = A._TheaterParentData$();
    },
    attach$1(owner) {
      var child, t1, t2, iterator;
      type$.PipelineOwner._as(owner);
      this.super$__RenderTheater_RenderBox_ContainerRenderObjectMixin$attach(owner);
      child = this.get$firstChild();
      for (t1 = type$._TheaterParentData; child != null;) {
        t2 = child.parentData;
        t2.toString;
        t1._as(t2);
        iterator = t2.get$paintOrderIterator();
        if (iterator != null)
          for (; B.boolConversionCheck(iterator.moveNext$0());)
            iterator.get$current().attach$1(owner);
        child = t2.ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0() {
      var child, t1, t2;
      this.super$__RenderTheater_RenderBox_ContainerRenderObjectMixin$detach();
      child = this.get$firstChild();
      for (t1 = type$._TheaterParentData; child != null;) {
        t2 = child.parentData;
        t2.toString;
        t1._as(t2);
        t2.visitOverlayPortalChildrenOnOverlayEntry$1(A.overlay__RenderTheater__detachChild$closure());
        child = t2.ContainerParentDataMixin_nextSibling;
      }
    },
    redepthChildren$0() {
      return this.visitChildren$1(this.get$redepthChild());
    },
    get$_overlay$_resolvedAlignment() {
      var t1 = this._alignmentCache;
      if (t1 == null) {
        t1 = C.AlignmentDirectional_m1_m1.resolve$1(this.get$textDirection());
        this.set$_alignmentCache(t1);
      }
      return t1;
    },
    _overlay$_markNeedResolution$0() {
      this._alignmentCache = null;
      this.markNeedsLayout$0();
    },
    get$textDirection() {
      return this._overlay$_textDirection;
    },
    set$textDirection(value) {
      type$.TextDirection._as(value);
      if (B.boolConversionCheck(J.$eq$(this._overlay$_textDirection, value)))
        return;
      this._overlay$_textDirection = value;
      this._overlay$_markNeedResolution$0();
    },
    get$skipCount() {
      return this._overlay$_skipCount;
    },
    set$skipCount(value) {
      B._asInt(value);
      if (!B.boolConversionCheck(J.$eq$(this._overlay$_skipCount, value))) {
        this._overlay$_skipCount = value;
        this.markNeedsLayout$0();
      }
    },
    get$clipBehavior() {
      return this._overlay$_clipBehavior;
    },
    set$clipBehavior(value) {
      var _this = this;
      type$.Clip._as(value);
      if (value !== _this._overlay$_clipBehavior) {
        _this._overlay$_clipBehavior = value;
        _this.markNeedsPaint$0();
        _this.markNeedsSemanticsUpdate$0();
      }
    },
    markNeedsLayout$0() {
      if (!B.boolConversionCheck(this._skipMarkNeedsLayout))
        this.super$RenderBox$markNeedsLayout();
    },
    get$_firstOnstageChild() {
      var child, toSkip, t1, t2, _this = this;
      if (B.boolConversionCheck(J.$eq$(_this.get$skipCount(), A.ContainerRenderObjectMixin.prototype.get$childCount.call(_this))))
        return null;
      child = A.ContainerRenderObjectMixin.prototype.get$firstChild.call(_this);
      for (toSkip = _this.get$skipCount(), t1 = type$.StackParentData; toSkip > 0; --toSkip) {
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
      return child;
    },
    get$_lastOnstageChild() {
      return B.boolConversionCheck(J.$eq$(this.get$skipCount(), A.ContainerRenderObjectMixin.prototype.get$childCount.call(this))) ? null : this.get$lastChild();
    },
    computeDryBaseline$2(constraints, baseline) {
      var size, nonPositionedChildConstraints, alignment, t1, baselineOffset;
      type$.BoxConstraints._as(constraints);
      type$.TextBaseline._as(baseline);
      size = B.boolConversionCheck(J.get$isFinite$n(constraints.get$biggest())) ? constraints.get$biggest() : this._findSizeDeterminingChild$0().getDryLayout$1(constraints);
      nonPositionedChildConstraints = A.BoxConstraints$tight(size);
      alignment = this.get$theater().get$_overlay$_resolvedAlignment();
      for (t1 = J.get$iterator$ax(this._childrenInPaintOrder$0()), baselineOffset = null; B.boolConversionCheck(t1.moveNext$0());)
        baselineOffset = A.BaselineOffset_minOf(baselineOffset, E.BaselineOffset_constructor_(A._RenderTheaterMixin_baselineForChild(t1.get$current(), size, nonPositionedChildConstraints, alignment, baseline)));
      return baselineOffset;
    },
    computeDryLayout$1(constraints) {
      type$.BoxConstraints._as(constraints);
      if (B.boolConversionCheck(J.get$isFinite$n(constraints.get$biggest())))
        return constraints.get$biggest();
      return this._findSizeDeterminingChild$0().getDryLayout$1(constraints);
    },
    _childrenInPaintOrder$0() {
      return B._makeSyncStarIterable(this._childrenInPaintOrder$body$_RenderTheater(), type$.RenderBox);
    },
    _childrenInPaintOrder$body$_RenderTheater() {
      var $async$self = this;
      return function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, innerIterator, child;
        return function $async$_childrenInPaintOrder$0($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                child = $async$self.get$_firstOnstageChild();
                t1 = type$._TheaterParentData;
              case 2:
                // for condition
                if (!(child != null)) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                $async$goto = 4;
                return $async$iterator._async$_current = child, 1;
              case 4:
                // after yield
                t2 = child.parentData;
                t2.toString;
                t1._as(t2);
                innerIterator = t2.get$paintOrderIterator();
                $async$goto = innerIterator != null ? 5 : 6;
                break;
              case 5:
                // then
              case 7:
                // for condition
                if (!B.boolConversionCheck(innerIterator.moveNext$0())) {
                  // goto after for
                  $async$goto = 8;
                  break;
                }
                $async$goto = 9;
                return $async$iterator._async$_current = innerIterator.get$current(), 1;
              case 9:
                // after yield
                // goto for condition
                $async$goto = 7;
                break;
              case 8:
                // after for
              case 6:
                // join
                child = t2.ContainerParentDataMixin_nextSibling;
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$currentError, 3;
            }
        };
      };
    },
    _overlay$_childrenInHitTestOrder$0() {
      return B._makeSyncStarIterable(this._childrenInHitTestOrder$body$_RenderTheater(), type$.RenderBox);
    },
    _childrenInHitTestOrder$body$_RenderTheater() {
      var $async$self = this;
      return function() {
        var $async$goto = 0, $async$handler = 2, $async$currentError, childLeft, innerIterator, child, t1, t2;
        return function $async$_overlay$_childrenInHitTestOrder$0($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                child = $async$self.get$_lastOnstageChild();
                t1 = $async$self.get$childCount();
                t2 = $async$self.get$skipCount();
                if (typeof t1 !== "number") {
                  t1.$sub();
                  // goto return
                  $async$goto = 1;
                  break;
                }
                if (typeof t2 !== "number") {
                  B.iae(t2);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                childLeft = t1 - t2;
                t1 = type$._TheaterParentData;
              case 3:
                // for condition
                if (!(child != null)) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                t2 = child.parentData;
                t2.toString;
                t1._as(t2);
                innerIterator = t2.get$hitTestOrderIterator();
                $async$goto = innerIterator != null ? 5 : 6;
                break;
              case 5:
                // then
              case 7:
                // for condition
                if (!B.boolConversionCheck(innerIterator.moveNext$0())) {
                  // goto after for
                  $async$goto = 8;
                  break;
                }
                $async$goto = 9;
                return $async$iterator._async$_current = innerIterator.get$current(), 1;
              case 9:
                // after yield
                // goto for condition
                $async$goto = 7;
                break;
              case 8:
                // after for
              case 6:
                // join
                $async$goto = 10;
                return $async$iterator._async$_current = child, 1;
              case 10:
                // after yield
                --childLeft;
                child = childLeft <= 0 ? null : t2.ContainerParentDataMixin_previousSibling;
                // goto for condition
                $async$goto = 3;
                break;
              case 4:
                // after for
              case 1:
                // return
                return 0;
              case 2:
                // rethrow
                return $async$iterator._datum = $async$currentError, 3;
            }
        };
      };
    },
    get$sizedByParent() {
      return false;
    },
    performLayout$0() {
      var sizeDeterminingChild, nonPositionedChildConstraints, t1, t2, _this = this;
      if (B.boolConversionCheck(J.get$isFinite$n(_this.get$constraints().get$biggest()))) {
        _this.set$size(_this.get$constraints().get$biggest());
        sizeDeterminingChild = null;
      } else {
        sizeDeterminingChild = _this._findSizeDeterminingChild$0();
        _this.layoutChild$2(sizeDeterminingChild, _this.get$constraints());
        _this.set$size(sizeDeterminingChild.get$size());
      }
      nonPositionedChildConstraints = A.BoxConstraints$tight(_this.get$size());
      for (t1 = J.get$iterator$ax(_this._childrenInPaintOrder$0()); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        if (t2 !== sizeDeterminingChild)
          _this.layoutChild$2(t2, nonPositionedChildConstraints);
      }
    },
    _findSizeDeterminingChild$0() {
      var t1, t2, t3,
        child = this.get$_lastOnstageChild();
      for (t1 = type$._TheaterParentData; child != null;) {
        t2 = child.parentData;
        t2.toString;
        t1._as(t2);
        t3 = t2.overlayEntry;
        t3 = t3 == null ? null : t3.canSizeOverlay;
        if (B.boolConversionCheck(t3 == null ? false : t3) && !B.boolConversionCheck(t2.get$isPositioned()))
          return child;
        child = t2.ContainerParentDataMixin_previousSibling;
      }
      throw B.wrapException(E.FlutterError$fromParts(B._setArrayType([E.ErrorSummary$("Overlay was given infinite constraints and cannot be sized by a suitable child."), E.ErrorDescription$("The constraints given to the overlay (" + B.S(this.get$constraints()) + ") would result in an illegal infinite size (" + B.S(this.get$constraints().get$biggest()) + "). To avoid that, the Overlay tried to size itself to one of its children, but no suitable non-positioned child that belongs to an OverlayEntry with canSizeOverlay set to true could be found."), E.ErrorHint$("Try wrapping the Overlay in a SizedBox to give it a finite size or use an OverlayEntry with canSizeOverlay set to true.")], type$.JSArray_DiagnosticsNode)));
    },
    paint$2(context, offset) {
      var t1, _this = this;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      t1 = _this._overlay$_clipRectLayer;
      if (!B.boolConversionCheck(J.$eq$(_this.get$clipBehavior(), D.Clip_0)))
        t1.set$layer(context.pushClipRect$6$clipBehavior$oldLayer(_this.get$needsCompositing(), offset, D.Offset_0_0.$and(0, _this.get$size()), A._RenderTheaterMixin.prototype.get$paint.call(_this), _this.get$clipBehavior(), t1.get$layer()));
      else {
        t1.set$layer(null);
        _this.super$_RenderTheaterMixin$paint(context, offset);
      }
    },
    dispose$0() {
      this._overlay$_clipRectLayer.set$layer(null);
      this.super$RenderObject$dispose();
    },
    visitChildren$1(visitor) {
      var child, t1, t2;
      type$.void_Function_RenderObject._as(visitor);
      child = this.get$firstChild();
      for (t1 = type$._TheaterParentData; child != null;) {
        visitor.call$1(child);
        t2 = child.parentData;
        t2.toString;
        t1._as(t2);
        t2.visitOverlayPortalChildrenOnOverlayEntry$1(visitor);
        child = t2.ContainerParentDataMixin_nextSibling;
      }
    },
    visitChildrenForSemantics$1(visitor) {
      var child, t1, t2;
      type$.void_Function_RenderObject._as(visitor);
      child = this.get$_firstOnstageChild();
      for (t1 = type$._TheaterParentData; child != null;) {
        visitor.call$1(child);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    describeApproximatePaintClip$1(child) {
      type$.RenderObject._as(child);
      switch (this.get$clipBehavior()) {
        case D.Clip_0:
          return null;
        case D.Clip_1:
        case D.Clip_2:
        case D.Clip_3:
          return D.Offset_0_0.$and(0, this.get$size());
      }
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$RenderBox$debugFillProperties(properties);
      properties.add$1(0, E.IntProperty$("skipCount", this.get$skipCount(), D.C__NoDefaultValue, null, D.DiagnosticLevel_3, null));
      properties.add$1(0, E.EnumProperty$("textDirection", this.get$textDirection(), D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.TextDirection));
    },
    debugDescribeChildren$0() {
      var child, firstOnstageChild, t2, t3, t4, count, _box_1 = {},
        t1 = type$.JSArray_DiagnosticsNode,
        offstageChildren = B._setArrayType([], t1),
        onstageChildren = B._setArrayType([], t1);
      _box_1.count = 1;
      _box_1.onstage = false;
      child = this.get$firstChild();
      firstOnstageChild = this.get$_firstOnstageChild();
      for (t1 = type$._TheaterParentData, t2 = 1; child != null; t2 = count) {
        t3 = {};
        t4 = child.parentData;
        t4.toString;
        t1._as(t4);
        if (child === firstOnstageChild) {
          _box_1.onstage = true;
          t2 = _box_1.count = 1;
        }
        t2 = "" + t2;
        if (B.boolConversionCheck(_box_1.onstage))
          F.JSArray_methods.add$1(onstageChildren, child.toDiagnosticsNode$1$name("onstage " + t2));
        else
          F.JSArray_methods.add$1(offstageChildren, child.toDiagnosticsNode$2$name$style("offstage " + t2, D.DiagnosticsTreeStyle_2));
        t3.subcount = 1;
        t4.visitOverlayPortalChildrenOnOverlayEntry$1(new A._RenderTheater_debugDescribeChildren_closure(_box_1, t3, onstageChildren, offstageChildren));
        child = t4.ContainerParentDataMixin_nextSibling;
        t2 = _box_1.count;
        if (typeof t2 !== "number")
          return t2.$add();
        count = t2 + 1;
        _box_1.count = count;
      }
      t1 = B.List_List$of(onstageChildren, true, type$.DiagnosticsNode);
      t2 = J.getInterceptor$ax(t1);
      if (B.boolConversionCheck(F.JSArray_methods.get$isNotEmpty(offstageChildren)))
        t2.addAll$1(t1, offstageChildren);
      else
        t2.add$1(t1, E.DiagnosticsNode_DiagnosticsNode$message("no offstage children", true, D.DiagnosticsTreeStyle_2));
      return t1;
    },
    set$_alignmentCache(_alignmentCache) {
      this._alignmentCache = type$.nullable_Alignment._as(_alignmentCache);
    },
    $isContainerRenderObjectMixin: 1,
    $is_RenderTheaterMixin: 1
  };
  A._RenderTheaterMarker.prototype = {
    updateShouldNotify$1(oldWidget) {
      type$._RenderTheaterMarker._as(oldWidget);
      return !B.boolConversionCheck(J.$eq$(oldWidget.theater, this.theater)) || !B.boolConversionCheck(J.$eq$(oldWidget.overlayEntryWidgetState, this.overlayEntryWidgetState));
    }
  };
  A._OverlayState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$State$debugFillProperties(properties);
      t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null) {
        t2 = B.S(J.get$length$asx(t1));
        t3 = this.TickerProviderStateMixin__tickers;
        t3.toString;
        t3 = B.boolConversionCheck(J.$eq$(J.get$length$asx(t3), 1)) ? "" : "s";
        t3 = "tracking " + t2 + " ticker" + t3;
        t2 = t3;
      } else
        t2 = _null;
      properties.add$1(0, E.DiagnosticsProperty$("tickers", t1, true, _null, t2, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Set_Ticker));
    },
    $isTickerProvider: 1,
    $isTickerProviderStateMixin: 1
  };
  A.__RenderTheater_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      type$.PipelineOwner._as(owner);
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0() {
      var child, t1, t2;
      this.super$RenderObject$detach();
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData; child != null;) {
        child.detach$0();
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    $isContainerRenderObjectMixin: 1
  };
  A.__RenderTheater_RenderBox_ContainerRenderObjectMixin__RenderTheaterMixin.prototype = {$isContainerRenderObjectMixin: 1, $is_RenderTheaterMixin: 1};
  A.PageStorageBucket.prototype = {};
  A.PageStorage.prototype = {
    build$1(context) {
      type$.BuildContext._as(context);
      return this.child;
    }
  };
  A.PageRoute.prototype = {
    get$opaque() {
      return true;
    },
    get$barrierDismissible() {
      return this._barrierDismissible;
    },
    canTransitionFrom$1(previousRoute) {
      type$.TransitionRoute_dynamic._as(previousRoute);
      return true;
    },
    get$popGestureEnabled() {
      return !B.boolConversionCheck(this.fullscreenDialog) && B.boolConversionCheck(A.ModalRoute.prototype.get$popGestureEnabled.call(this));
    }
  };
  A.PerformanceOverlay.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A.RenderPerformanceOverlay$(this.optionsMask);
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$.RenderPerformanceOverlay._as(renderObject).set$optionsMask(this.optionsMask);
    }
  };
  A.MenuSerializableShortcut.prototype = {$isShortcutActivator: 1};
  A.PrimaryScrollController.prototype = {
    updateShouldNotify$1(oldWidget) {
      return !B.boolConversionCheck(J.$eq$(this.controller, type$.PrimaryScrollController._as(oldWidget).controller));
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("controller", this.controller, true, D.C__NoDefaultValue, null, null, "no controller", D.DiagnosticLevel_3, false, false, true, D.DiagnosticsTreeStyle_8, null, type$.ScrollController));
    }
  };
  A.RestorationScope.prototype = {
    createState$0() {
      return A._RestorationScopeState$();
    }
  };
  A._RestorationScopeState.prototype = {
    get$restorationId() {
      return this.get$widget().restorationId;
    },
    restoreState$2(oldBucket, initialRestore) {
      type$.nullable_RestorationBucket._as(oldBucket);
      B._asBool(initialRestore);
    },
    build$1(context) {
      type$.BuildContext._as(context);
      return A.UnmanagedRestorationScope$(this.get$bucket(), this.get$widget().child);
    },
    $isRestorationMixin: 1
  };
  A.UnmanagedRestorationScope.prototype = {
    updateShouldNotify$1(oldWidget) {
      return !B.boolConversionCheck(J.$eq$(type$.UnmanagedRestorationScope._as(oldWidget).bucket, this.bucket));
    }
  };
  A.RootRestorationScope.prototype = {
    createState$0() {
      return A._RootRestorationScopeState$();
    }
  };
  A._RootRestorationScopeState.prototype = {
    didChangeDependencies$0() {
      var _this = this;
      _this.super$State$didChangeDependencies();
      _this.set$_ancestorBucket(A.RestorationScope_maybeOf(_this.get$context()));
      _this._loadRootBucketIfNecessary$0();
      if (_this._okToRenderBlankContainer == null)
        _this._okToRenderBlankContainer = _this.get$widget().restorationId != null && B.boolConversionCheck(_this.get$_needsRootBucketInserted());
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(type$.RootRestorationScope._as(oldWidget));
      this._loadRootBucketIfNecessary$0();
    },
    get$_needsRootBucketInserted() {
      return this._ancestorBucket == null;
    },
    get$_isWaitingForRootBucket() {
      return this.get$widget().restorationId != null && B.boolConversionCheck(this.get$_needsRootBucketInserted()) && !B.boolConversionCheck(this._rootBucketValid);
    },
    _loadRootBucketIfNecessary$0() {
      var _this = this;
      if (B.boolConversionCheck(_this.get$_isWaitingForRootBucket()) && !B.boolConversionCheck(_this._isLoadingRootBucket)) {
        _this._isLoadingRootBucket = true;
        E.RendererBinding_instance().deferFirstFrame$0();
        E.ServicesBinding_instance().get$restorationManager().get$rootBucket().then$1$1(new A._RootRestorationScopeState__loadRootBucketIfNecessary_closure(_this), type$.Null);
      }
    },
    _replaceRootBucket$0() {
      var _this = this;
      _this._rootBucketValid = false;
      _this._restoration0$_rootBucket = null;
      E.ServicesBinding_instance().get$restorationManager().removeListener$1(_this.get$_replaceRootBucket());
      _this._loadRootBucketIfNecessary$0();
    },
    dispose$0() {
      if (B.boolConversionCheck(this._rootBucketValid))
        E.ServicesBinding_instance().get$restorationManager().removeListener$1(this.get$_replaceRootBucket());
      this.super$State$dispose();
    },
    build$1(context) {
      var t1, t2, _this = this;
      type$.BuildContext._as(context);
      t1 = _this._okToRenderBlankContainer;
      t1.toString;
      if (B.boolConversionCheck(t1) && B.boolConversionCheck(_this.get$_isWaitingForRootBucket()))
        return C.SizedBox_0_0_null_null;
      t1 = _this._ancestorBucket;
      if (t1 == null)
        t1 = _this._restoration0$_rootBucket;
      t2 = _this.get$widget().restorationId;
      return A.UnmanagedRestorationScope$(t1, A.RestorationScope$(_this.get$widget().child, t2));
    },
    set$_restoration0$_rootBucket(_rootBucket) {
      this._restoration0$_rootBucket = type$.nullable_RestorationBucket._as(_rootBucket);
    },
    set$_ancestorBucket(_ancestorBucket) {
      this._ancestorBucket = type$.nullable_RestorationBucket._as(_ancestorBucket);
    }
  };
  A.RestorableProperty.prototype = {
    RestorableProperty$0($T) {
      E.ChangeNotifier_maybeDispatchObjectCreation(this);
    },
    get$enabled() {
      return true;
    },
    dispose$0() {
      var _this = this,
        t1 = _this._restoration0$_owner;
      if (t1 != null)
        t1._unregister$1(_this);
      _this.super$ChangeNotifier$dispose();
      _this._restoration0$_disposed = true;
    },
    _register$2(restorationId, owner) {
      B._asString(restorationId);
      type$.RestorationMixin_StatefulWidget._as(owner);
      this._restoration0$_restorationId = restorationId;
      this.set$_restoration0$_owner(owner);
    },
    _unregister$0() {
      this._restoration0$_restorationId = null;
      this.set$_restoration0$_owner(null);
    },
    get$isRegistered() {
      return this._restoration0$_restorationId != null;
    },
    set$_restoration0$_owner(_owner) {
      this._restoration0$_owner = type$.nullable_RestorationMixin_StatefulWidget._as(_owner);
    }
  };
  A.RestorationMixin.prototype = {
    get$bucket() {
      return this.RestorationMixin__bucket;
    },
    didToggleBucket$1(oldBucket) {
      type$.nullable_RestorationBucket._as(oldBucket);
    },
    registerForRestoration$2(property, restorationId) {
      var t1, hasSerializedValue, initialValue, _this = this;
      type$.RestorableProperty_nullable_Object._as(property);
      B._asString(restorationId);
      t1 = _this.get$bucket();
      hasSerializedValue = t1 == null ? null : J.contains$1$asx(t1, restorationId);
      if (hasSerializedValue == null)
        hasSerializedValue = false;
      initialValue = hasSerializedValue ? property.fromPrimitives$1(_this.get$bucket().read$1$1(restorationId, type$.Object)) : property.createDefaultValue$0();
      if (!B.boolConversionCheck(property.get$isRegistered())) {
        property._register$2(restorationId, _this);
        t1 = new A.RestorationMixin_registerForRestoration_listener(_this, property);
        property.addListener$1(t1);
        J.$indexSet$ax(_this.RestorationMixin__properties, property, t1);
      }
      property.initWithValue$1(initialValue);
      if (!hasSerializedValue && B.boolConversionCheck(property.get$enabled()) && _this.get$bucket() != null)
        _this._updateProperty$1(property);
    },
    didUpdateRestorationId$0() {
      var t1, oldBucket, _this = this;
      if (_this.RestorationMixin__currentParent != null) {
        t1 = _this.RestorationMixin__bucket;
        t1 = t1 == null ? null : t1.get$restorationId();
        t1 = B.boolConversionCheck(J.$eq$(t1, _this.get$restorationId())) || B.boolConversionCheck(_this.get$restorePending());
      } else
        t1 = true;
      if (t1)
        return;
      oldBucket = _this.RestorationMixin__bucket;
      if (_this._updateBucketIfNecessary$2$parent$restorePending(_this.RestorationMixin__currentParent, false))
        if (oldBucket != null)
          oldBucket.dispose$0();
    },
    get$restorePending() {
      var potentialNewParent, t1, _this = this;
      if (B.boolConversionCheck(_this.RestorationMixin__firstRestorePending))
        return true;
      if (_this.get$restorationId() == null)
        return false;
      potentialNewParent = A.RestorationScope_maybeOf(_this.get$context());
      t1 = _this.RestorationMixin__currentParent;
      if (potentialNewParent == null ? t1 != null : potentialNewParent !== t1) {
        t1 = potentialNewParent == null ? null : potentialNewParent.get$isReplacing();
        t1 = B.boolConversionCheck(t1 == null ? false : t1);
      } else
        t1 = false;
      return t1;
    },
    _doRestore$1(oldBucket) {
      this.restoreState$2(type$.nullable_RestorationBucket._as(oldBucket), this.RestorationMixin__firstRestorePending);
      this.RestorationMixin__firstRestorePending = false;
    },
    _updateBucketIfNecessary$2$parent$restorePending($parent, restorePending) {
      var t1, t2, _this = this;
      type$.nullable_RestorationBucket._as($parent);
      B._asBool(restorePending);
      if (_this.get$restorationId() == null || $parent == null)
        return _this._setNewBucketIfNecessary$2$newBucket$restorePending(null, restorePending);
      if (restorePending || _this.RestorationMixin__bucket == null) {
        t1 = _this.get$restorationId();
        t1.toString;
        return _this._setNewBucketIfNecessary$2$newBucket$restorePending($parent.claimChild$2$debugOwner(t1, _this), restorePending);
      }
      t1 = _this.RestorationMixin__bucket;
      t1.toString;
      t2 = _this.get$restorationId();
      t2.toString;
      t1.rename$1(t2);
      t2 = _this.RestorationMixin__bucket;
      t2.toString;
      $parent.adoptChild$1(t2);
      return false;
    },
    _setNewBucketIfNecessary$2$newBucket$restorePending(newBucket, restorePending) {
      var t1, _this = this;
      type$.nullable_RestorationBucket._as(newBucket);
      B._asBool(restorePending);
      t1 = _this.RestorationMixin__bucket;
      if (newBucket == null ? t1 == null : newBucket === t1)
        return false;
      _this.RestorationMixin__bucket = newBucket;
      if (!restorePending) {
        if (newBucket != null)
          J.forEach$1$ax(_this.RestorationMixin__properties.get$keys(), _this.get$_updateProperty());
        _this.didToggleBucket$1(t1);
      }
      return true;
    },
    _updateProperty$1(property) {
      var t1, t2;
      type$.RestorableProperty_nullable_Object._as(property);
      t1 = B.boolConversionCheck(property.get$enabled());
      t2 = this.RestorationMixin__bucket;
      if (t1) {
        if (t2 != null) {
          t1 = property._restoration0$_restorationId;
          t1.toString;
          t2.write$1$2(t1, property.toPrimitives$0(), type$.nullable_Object);
        }
      } else if (t2 != null) {
        t1 = property._restoration0$_restorationId;
        t1.toString;
        J.remove$1$1$ax(t2, t1, type$.Object);
      }
    },
    _unregister$1(property) {
      var t1;
      type$.RestorableProperty_nullable_Object._as(property);
      t1 = J.remove$1$ax(this.RestorationMixin__properties, property);
      t1.toString;
      property.removeListener$1(t1);
      property._unregister$0();
    },
    set$_currentParent(_currentParent) {
      this.RestorationMixin__currentParent = type$.nullable_RestorationBucket._as(_currentParent);
    },
    $isDiagnosticable: 1,
    $isState0: 1,
    $is_State_Object_Diagnosticable: 1
  };
  A.__RestorationScopeState_State_RestorationMixin.prototype = {
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(type$.RestorationScope._as(oldWidget));
      this.didUpdateRestorationId$0();
    },
    didChangeDependencies$0() {
      var oldBucket, needsRestore, didReplaceBucket, _this = this;
      _this.super$State$didChangeDependencies();
      oldBucket = _this.RestorationMixin__bucket;
      needsRestore = _this.get$restorePending();
      _this.set$_currentParent(A.RestorationScope_maybeOf(_this.get$context()));
      didReplaceBucket = _this._updateBucketIfNecessary$2$parent$restorePending(_this.RestorationMixin__currentParent, needsRestore);
      if (needsRestore)
        _this._doRestore$1(oldBucket);
      if (didReplaceBucket)
        if (oldBucket != null)
          oldBucket.dispose$0();
    },
    dispose$0() {
      var t1, _this = this;
      J.forEach$1$ax(_this.RestorationMixin__properties, new A.__RestorationScopeState_State_RestorationMixin_dispose_closure());
      t1 = _this.RestorationMixin__bucket;
      if (t1 != null)
        t1.dispose$0();
      _this.RestorationMixin__bucket = null;
      _this.super$State$dispose();
    },
    $isRestorationMixin: 1
  };
  A.RestorableValue.prototype = {
    get$value() {
      var t1 = this._restoration_properties$_value;
      return t1 == null ? B._instanceType(this)._eval$1("RestorableValue.T")._as(t1) : t1;
    },
    set$value(newValue) {
      var oldValue, _this = this;
      B._instanceType(_this)._eval$1("RestorableValue.T")._as(newValue);
      if (!B.boolConversionCheck(J.$eq$(newValue, _this._restoration_properties$_value))) {
        oldValue = _this._restoration_properties$_value;
        _this.set$_restoration_properties$_value(newValue);
        _this.didUpdateValue$1(oldValue);
      }
    },
    initWithValue$1(value) {
      this.set$_restoration_properties$_value(B._instanceType(this)._eval$1("RestorableValue.T")._as(value));
    },
    set$_restoration_properties$_value(_value) {
      this._restoration_properties$_value = B._instanceType(this)._eval$1("RestorableValue.T?")._as(_value);
    }
  };
  A._RestorablePrimitiveValueN.prototype = {
    createDefaultValue$0() {
      return this._restoration_properties$_defaultValue;
    },
    didUpdateValue$1(oldValue) {
      this.$ti._eval$1("1?")._as(oldValue);
      this.notifyListeners$0();
    },
    fromPrimitives$1(serialized) {
      return this.$ti._precomputed1._as(serialized);
    },
    toPrimitives$0() {
      return this.get$value();
    }
  };
  A._RestorablePrimitiveValue.prototype = {
    set$value(value) {
      this.super$RestorableValue$value(this.$ti._precomputed1._as(value));
    },
    fromPrimitives$1(serialized) {
      return this.super$_RestorablePrimitiveValueN$fromPrimitives(serialized);
    },
    toPrimitives$0() {
      var t1 = this.super$_RestorablePrimitiveValueN$toPrimitives();
      t1.toString;
      return t1;
    }
  };
  A.RestorableNum.prototype = {};
  A.Router.prototype = {
    createState$0() {
      return A._RouterState$(this.$ti._precomputed1);
    }
  };
  A.RouteInformationReportingType.prototype = {
    _enumToString$0() {
      return "RouteInformationReportingType." + B.S(this._core$_name);
    }
  };
  A._RouterState.prototype = {
    get$_routeParsePending() {
      return this.___RouterState__routeParsePending_A;
    },
    set$_routeParsePending(value) {
      this.___RouterState__routeParsePending_A = B._asBool(value);
    },
    get$restorationId() {
      return this.get$widget().restorationScopeId;
    },
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState0();
      t1 = _this.get$widget().routeInformationProvider;
      if (t1 != null)
        t1.addListener$1(_this.get$_handleRouteInformationProviderNotification());
      t1 = _this.get$widget().backButtonDispatcher;
      if (t1 != null)
        t1.addCallback$1(_this.get$_handleBackButtonDispatcherNotification());
      _this.get$widget().routerDelegate.addListener$1(_this.get$_handleRouterDelegateNotification());
    },
    restoreState$2(oldBucket, initialRestore) {
      var t1, _this = this;
      type$.nullable_RestorationBucket._as(oldBucket);
      B._asBool(initialRestore);
      t1 = _this._routeInformation;
      _this.registerForRestoration$2(t1, "route");
      if (t1.get$value() != null) {
        t1 = t1.get$value();
        t1.toString;
        _this._processRouteInformation$2(t1, new A._RouterState_restoreState_closure(_this));
      } else if (_this.get$widget().routeInformationProvider != null)
        _this._processRouteInformation$2(_this.get$widget().routeInformationProvider.get$value(), new A._RouterState_restoreState_closure0(_this));
    },
    _scheduleRouteInformationReportingTask$0() {
      var _this = this;
      if (B.boolConversionCheck(_this._routeInformationReportingTaskScheduled) || _this.get$widget().routeInformationProvider == null)
        return;
      _this._routeInformationReportingTaskScheduled = true;
      E.SchedulerBinding_instance().addPostFrameCallback$2$debugLabel(_this.get$_reportRouteInformation(), "Router.reportRouteInfo");
    },
    _reportRouteInformation$1(timestamp) {
      var t1, t2, t3, _this = this;
      type$.Duration._as(timestamp);
      if (!B.boolConversionCheck(_this.get$mounted()))
        return;
      _this._routeInformationReportingTaskScheduled = false;
      t1 = _this._routeInformation;
      if (t1.get$value() != null) {
        t1 = t1.get$value();
        t1.toString;
        t2 = _this.get$widget().routeInformationProvider;
        t2.toString;
        t3 = _this._currentIntentionToReport;
        t3.toString;
        t2.routerReportsNewRouteInformation$2$type(t1, t3);
      }
      _this._currentIntentionToReport = C.RouteInformationReportingType_0;
    },
    _retrieveNewRouteInformation$0() {
      var t1,
        configuration = this.get$widget().routerDelegate.get$currentConfiguration();
      if (configuration == null)
        return null;
      t1 = this.get$widget().routeInformationParser;
      return t1 == null ? null : t1.restoreRouteInformation$1(configuration);
    },
    _maybeNeedToReportRouteInformation$0() {
      var _this = this;
      _this._routeInformation.set$value(_this._retrieveNewRouteInformation$0());
      if (_this._currentIntentionToReport == null)
        _this._currentIntentionToReport = C.RouteInformationReportingType_0;
      _this._scheduleRouteInformationReportingTask$0();
    },
    didChangeDependencies$0() {
      var currentRouteInformation, t1, _this = this;
      _this.set$_routeParsePending(true);
      _this.super$__RouterState_State_RestorationMixin$didChangeDependencies();
      currentRouteInformation = _this._routeInformation.get$value();
      if (currentRouteInformation == null) {
        t1 = _this.get$widget().routeInformationProvider;
        currentRouteInformation = t1 == null ? null : t1.get$value();
      }
      if (currentRouteInformation != null && B.boolConversionCheck(_this.get$_routeParsePending()))
        _this._processRouteInformation$2(currentRouteInformation, new A._RouterState_didChangeDependencies_closure(_this));
      _this.set$_routeParsePending(false);
      _this._maybeNeedToReportRouteInformation$0();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, t3, _this = this;
      _this.$ti._eval$1("Router<1>")._as(oldWidget);
      _this.super$__RouterState_State_RestorationMixin$didUpdateWidget(oldWidget);
      t1 = oldWidget.routeInformationProvider;
      if (!B.boolConversionCheck(J.$eq$(_this.get$widget().routeInformationProvider, t1)) || !B.boolConversionCheck(J.$eq$(_this.get$widget().backButtonDispatcher, oldWidget.backButtonDispatcher)) || !B.boolConversionCheck(J.$eq$(_this.get$widget().routeInformationParser, oldWidget.routeInformationParser)) || !B.boolConversionCheck(J.$eq$(_this.get$widget().routerDelegate, oldWidget.routerDelegate)))
        _this._currentRouterTransaction = B.Object$();
      if (!B.boolConversionCheck(J.$eq$(_this.get$widget().routeInformationProvider, t1))) {
        t2 = t1 == null;
        if (!t2)
          t1.removeListener$1(_this.get$_handleRouteInformationProviderNotification());
        t3 = _this.get$widget().routeInformationProvider;
        if (t3 != null)
          t3.addListener$1(_this.get$_handleRouteInformationProviderNotification());
        t1 = t2 ? null : t1.get$value();
        t2 = _this.get$widget().routeInformationProvider;
        if (!B.boolConversionCheck(J.$eq$(t1, t2 == null ? null : t2.get$value())))
          _this._handleRouteInformationProviderNotification$0();
      }
      t1 = oldWidget.backButtonDispatcher;
      if (!B.boolConversionCheck(J.$eq$(_this.get$widget().backButtonDispatcher, t1))) {
        if (t1 != null)
          t1.removeCallback$1(_this.get$_handleBackButtonDispatcherNotification());
        t1 = _this.get$widget().backButtonDispatcher;
        if (t1 != null)
          t1.addCallback$1(_this.get$_handleBackButtonDispatcherNotification());
      }
      t1 = oldWidget.routerDelegate;
      if (!B.boolConversionCheck(J.$eq$(_this.get$widget().routerDelegate, t1))) {
        t2 = _this.get$_handleRouterDelegateNotification();
        t1.removeListener$1(t2);
        _this.get$widget().routerDelegate.addListener$1(t2);
        _this._maybeNeedToReportRouteInformation$0();
      }
    },
    dispose$0() {
      var t1, _this = this;
      _this._routeInformation.dispose$0();
      t1 = _this.get$widget().routeInformationProvider;
      if (t1 != null)
        t1.removeListener$1(_this.get$_handleRouteInformationProviderNotification());
      t1 = _this.get$widget().backButtonDispatcher;
      if (t1 != null)
        t1.removeCallback$1(_this.get$_handleBackButtonDispatcherNotification());
      _this.get$widget().routerDelegate.removeListener$1(_this.get$_handleRouterDelegateNotification());
      _this._currentRouterTransaction = null;
      _this.super$__RouterState_State_RestorationMixin$dispose();
    },
    _processRouteInformation$2(information, delegateRouteSetter) {
      var t1, _this = this;
      type$.RouteInformation._as(information);
      _this.$ti._eval$1("Future<~>(1)()")._as(delegateRouteSetter);
      _this.set$_routeParsePending(false);
      _this._currentRouterTransaction = B.Object$();
      t1 = _this.get$widget().routeInformationParser;
      t1.toString;
      t1.parseRouteInformationWithDependencies$2(information, _this.get$context()).then$1$1(_this._processParsedRouteInformation$2(_this._currentRouterTransaction, delegateRouteSetter), type$.void);
    },
    _processParsedRouteInformation$2(transaction, delegateRouteSetter) {
      return new A._RouterState__processParsedRouteInformation_closure(this, transaction, this.$ti._eval$1("Future<~>(1)()")._as(delegateRouteSetter));
    },
    _handleRouteInformationProviderNotification$0() {
      var _this = this;
      _this.set$_routeParsePending(true);
      _this._processRouteInformation$2(_this.get$widget().routeInformationProvider.get$value(), new A._RouterState__handleRouteInformationProviderNotification_closure(_this));
    },
    _handleBackButtonDispatcherNotification$0() {
      var _this = this;
      _this._currentRouterTransaction = B.Object$();
      return _this.get$widget().routerDelegate.popRoute$0().then$1$1(_this._handleRoutePopped$1(_this._currentRouterTransaction), type$.bool);
    },
    _handleRoutePopped$1(transaction) {
      return new A._RouterState__handleRoutePopped_closure(this, transaction);
    },
    _router$_rebuild$0() {
      this.setState$1(new A._RouterState__rebuild_closure());
      this._maybeNeedToReportRouteInformation$0();
      return E.SynchronousFuture$(null, type$.void);
    },
    _handleRouterDelegateNotification$0() {
      this.setState$1(new A._RouterState__handleRouterDelegateNotification_closure());
      this._maybeNeedToReportRouteInformation$0();
    },
    build$1(context) {
      var t1, t2, t3, t4, t5, _this = this;
      type$.BuildContext._as(context);
      t1 = _this.get$bucket();
      t2 = _this.get$widget().routeInformationProvider;
      t3 = _this.get$widget().backButtonDispatcher;
      t4 = _this.get$widget().routeInformationParser;
      t5 = _this.get$widget().routerDelegate;
      return A.UnmanagedRestorationScope$(t1, A._RouterScope$(t3, A.Builder$(_this.get$widget().routerDelegate.get$build()), t4, t2, t5, _this));
    },
    $isRestorationMixin: 1
  };
  A._RouterScope.prototype = {
    updateShouldNotify$1(oldWidget) {
      var _this = this;
      type$._RouterScope._as(oldWidget);
      return !B.boolConversionCheck(J.$eq$(_this.routeInformationProvider, oldWidget.routeInformationProvider)) || !B.boolConversionCheck(J.$eq$(_this.backButtonDispatcher, oldWidget.backButtonDispatcher)) || !B.boolConversionCheck(J.$eq$(_this.routeInformationParser, oldWidget.routeInformationParser)) || !B.boolConversionCheck(J.$eq$(_this.routerDelegate, oldWidget.routerDelegate)) || !B.boolConversionCheck(J.$eq$(_this.routerState, oldWidget.routerState));
    }
  };
  A._CallbackHookProvider.prototype = {
    get$hasCallbacks() {
      return J.get$isNotEmpty$asx(this._router$_callbacks);
    },
    addCallback$1(callback) {
      return J.add$1$ax(this._router$_callbacks, B._instanceType(this)._eval$1("_CallbackHookProvider.T()")._as(callback));
    },
    removeCallback$1(callback) {
      return J.remove$1$ax(this._router$_callbacks, B._instanceType(this)._eval$1("_CallbackHookProvider.T()")._as(callback));
    },
    invokeCallback$1(defaultValue) {
      var exception, stack, t1, t2, exception0, _this = this;
      B._instanceType(_this)._eval$1("_CallbackHookProvider.T")._as(defaultValue);
      t1 = _this._router$_callbacks;
      t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t2.get$isEmpty(t1)))
        return defaultValue;
      try {
        t1 = t2.single$0(t1);
        return t1;
      } catch (exception0) {
        exception = B.unwrapException(exception0);
        stack = B.getTraceFromException(exception0);
        E.FlutterError_reportError(E.FlutterErrorDetails$(E.ErrorDescription$("while invoking the callback for " + B.S(_this.get$runtimeType(0))), exception, new A._CallbackHookProvider_invokeCallback_closure(_this), "widget library", false, stack));
        return defaultValue;
      }
    }
  };
  A.BackButtonDispatcher.prototype = {
    get$_router$_children() {
      var result,
        value = this.__BackButtonDispatcher__children_FI;
      if (B.boolConversionCheck(E.isSentinel(value))) {
        result = type$.LinkedHashSet_ChildBackButtonDispatcher._as(B.LinkedHashSet_LinkedHashSet$_empty(type$.ChildBackButtonDispatcher));
        value !== $ && B.throwLateFieldADI("_children");
        this.set$__BackButtonDispatcher__children_FI(result);
        value = result;
      }
      return value;
    },
    get$hasCallbacks() {
      return B.boolConversionCheck(A._CallbackHookProvider.prototype.get$hasCallbacks.call(this)) || B.boolConversionCheck(J.get$isNotEmpty$asx(this.get$_router$_children()));
    },
    invokeCallback$1(defaultValue) {
      var children, t2, t3, childIndex, _this = this, t1 = {};
      type$.Future_bool._as(defaultValue);
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(_this.get$_router$_children()))) {
        children = J.toList$0$ax(_this.get$_router$_children());
        t2 = J.getInterceptor$asx(children);
        t3 = t2.get$length(children);
        if (typeof t3 !== "number")
          return t3.$sub();
        childIndex = t3 - 1;
        t1.childIndex = childIndex;
        return t2.$index(children, childIndex).notifiedByParent$1(defaultValue).then$1$1(new A.BackButtonDispatcher_invokeCallback_notifyNextChild(t1, _this, children, defaultValue), type$.bool);
      }
      return _this.super$_CallbackHookProvider$invokeCallback(defaultValue);
    },
    set$__BackButtonDispatcher__children_FI(__BackButtonDispatcher__children_FI) {
      this.__BackButtonDispatcher__children_FI = type$.LinkedHashSet_ChildBackButtonDispatcher._as(__BackButtonDispatcher__children_FI);
    }
  };
  A.RootBackButtonDispatcher.prototype = {
    addCallback$1(callback) {
      type$.Future_bool_Function._as(callback);
      if (!B.boolConversionCheck(this.get$hasCallbacks()))
        E.WidgetsBinding_instance().addObserver$1(this);
      this.super$_CallbackHookProvider$addCallback(callback);
    },
    removeCallback$1(callback) {
      this.super$_CallbackHookProvider$removeCallback(type$.Future_bool_Function._as(callback));
      if (!B.boolConversionCheck(this.get$hasCallbacks()))
        E.WidgetsBinding_instance().removeObserver$1(this);
    },
    didPopRoute$0() {
      return this.invokeCallback$1(B.Future_Future$value(false, type$.bool));
    },
    $isWidgetsBindingObserver: 1
  };
  A.RouteInformationProvider.prototype = {};
  A.PlatformRouteInformationProvider.prototype = {
    PlatformRouteInformationProvider$1$initialRouteInformation(initialRouteInformation) {
      E.ChangeNotifier_maybeDispatchObjectCreation(this);
    },
    routerReportsNewRouteInformation$2$type(routeInformation, type) {
      var t1, t2;
      type$.RouteInformation._as(routeInformation);
      type$.RouteInformationReportingType._as(type);
      A.SystemNavigator_selectMultiEntryHistory();
      t1 = routeInformation.get$uri();
      switch (type.index) {
        case 1:
          t2 = true;
          break;
        case 2:
          t2 = false;
          break;
        case 0:
          t2 = A.PlatformRouteInformationProvider__equals(this._valueInEngine.get$uri(), routeInformation.get$uri());
          break;
        default:
          t2 = null;
      }
      A.SystemNavigator_routeInformationUpdated(t2, routeInformation.state, t1);
      this._valueInEngine = this._router$_value = routeInformation;
    },
    get$value() {
      return this._router$_value;
    },
    _platformReportsNewRouteInformation$1(routeInformation) {
      var _this = this;
      type$.RouteInformation._as(routeInformation);
      if (B.boolConversionCheck(J.$eq$(_this._router$_value, routeInformation)))
        return;
      _this._valueInEngine = _this._router$_value = routeInformation;
      _this.notifyListeners$0();
    },
    addListener$1(listener) {
      type$.void_Function._as(listener);
      if (!B.boolConversionCheck(this.get$hasListeners()))
        E.WidgetsBinding_instance().addObserver$1(this);
      this.super$ChangeNotifier$addListener(listener);
    },
    removeListener$1(listener) {
      this.super$ChangeNotifier$removeListener(type$.void_Function._as(listener));
      if (!B.boolConversionCheck(this.get$hasListeners()))
        E.WidgetsBinding_instance().removeObserver$1(this);
    },
    dispose$0() {
      if (B.boolConversionCheck(this.get$hasListeners()))
        E.WidgetsBinding_instance().removeObserver$1(this);
      this.super$ChangeNotifier$dispose();
    },
    didPushRouteInformation$1(routeInformation) {
      return this.didPushRouteInformation$body$PlatformRouteInformationProvider(type$.RouteInformation._as(routeInformation));
    },
    didPushRouteInformation$body$PlatformRouteInformationProvider(routeInformation) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this;
      var $async$didPushRouteInformation$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._platformReportsNewRouteInformation$1(routeInformation);
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$didPushRouteInformation$1, $async$completer);
    },
    $isChangeNotifier: 1,
    $isWidgetsBindingObserver: 1
  };
  A._RestorableRouteInformation.prototype = {
    createDefaultValue$0() {
      return null;
    },
    didUpdateValue$1(oldValue) {
      type$.nullable_RouteInformation._as(oldValue);
      this.notifyListeners$0();
    },
    fromPrimitives$1(data) {
      var t1, uri, t2;
      if (data == null)
        return null;
      type$.List_nullable_Object._as(data);
      t1 = J.getInterceptor$ax(data);
      uri = B._asStringQ(t1.get$first(data));
      if (uri == null)
        return null;
      t2 = E.Uri_parse(uri);
      return E.RouteInformation$(t1.get$last(data), t2);
    },
    toPrimitives$0() {
      return this.get$value() == null ? null : [J.toString$0$(this.get$value().get$uri()), this.get$value().state];
    }
  };
  A._PlatformRouteInformationProvider_RouteInformationProvider_WidgetsBindingObserver.prototype = {$isWidgetsBindingObserver: 1};
  A._PlatformRouteInformationProvider_RouteInformationProvider_WidgetsBindingObserver_ChangeNotifier.prototype = {$isChangeNotifier: 1, $isWidgetsBindingObserver: 1};
  A._RootBackButtonDispatcher_BackButtonDispatcher_WidgetsBindingObserver.prototype = {$isWidgetsBindingObserver: 1};
  A.__RouterState_State_RestorationMixin.prototype = {
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(this.$ti._eval$1("Router<1>")._as(oldWidget));
      this.didUpdateRestorationId$0();
    },
    didChangeDependencies$0() {
      var oldBucket, needsRestore, didReplaceBucket, _this = this;
      _this.super$State$didChangeDependencies();
      oldBucket = _this.RestorationMixin__bucket;
      needsRestore = _this.get$restorePending();
      _this.set$_currentParent(A.RestorationScope_maybeOf(_this.get$context()));
      didReplaceBucket = _this._updateBucketIfNecessary$2$parent$restorePending(_this.RestorationMixin__currentParent, needsRestore);
      if (needsRestore)
        _this._doRestore$1(oldBucket);
      if (didReplaceBucket)
        if (oldBucket != null)
          oldBucket.dispose$0();
    },
    dispose$0() {
      var t1, _this = this;
      J.forEach$1$ax(_this.RestorationMixin__properties, new A.__RouterState_State_RestorationMixin_dispose_closure());
      t1 = _this.RestorationMixin__bucket;
      if (t1 != null)
        t1.dispose$0();
      _this.RestorationMixin__bucket = null;
      _this.super$State$dispose();
    },
    $isRestorationMixin: 1
  };
  A.OverlayRoute.prototype = {
    get$overlayEntries() {
      return this._overlayEntries;
    },
    install$0() {
      J.addAll$1$ax(this._overlayEntries, this.createOverlayEntries$0());
      this.super$Route$install();
    },
    didPop$1(result) {
      var _this = this,
        $returnValue = _this.super$Route$didPop(_this.$ti._eval$1("1?")._as(result));
      if (B.boolConversionCheck(_this.get$finishedWhenPopped()))
        _this.get$navigator().finalizeRoute$1(_this);
      return $returnValue;
    },
    dispose$0() {
      var t1, t2, t3;
      for (t1 = this._overlayEntries, t2 = J.getInterceptor$ax(t1), t3 = t2.get$iterator(t1); B.boolConversionCheck(t3.moveNext$0());)
        t3.get$current().dispose$0();
      t2.clear$0(t1);
      this.super$Route$dispose();
    }
  };
  A.TransitionRoute.prototype = {
    get$completed() {
      return this._transitionCompleter.get$future();
    },
    get$reverseTransitionDuration() {
      return this.get$transitionDuration();
    },
    get$finishedWhenPopped() {
      return B.boolConversionCheck(this._routes$_controller.get$isDismissed()) && !B.boolConversionCheck(this._popFinalized);
    },
    get$animation() {
      return this._routes$_animation;
    },
    get$controller() {
      return this._routes$_controller;
    },
    get$secondaryAnimation() {
      return this._secondaryAnimation;
    },
    createAnimationController$0() {
      var _this = this,
        duration = _this.get$transitionDuration(),
        reverseDuration = _this.get$reverseTransitionDuration(),
        t1 = _this.get$debugLabel(),
        t2 = _this.get$navigator();
      t2.toString;
      return A.AnimationController$(t1, duration, reverseDuration, t2);
    },
    createAnimation$0() {
      return this._routes$_controller.get$view();
    },
    _routes$_handleStatusChanged$1($status) {
      var t1, _this = this;
      switch (type$.AnimationStatus._as($status).index) {
        case 3:
          if (B.boolConversionCheck(J.get$isNotEmpty$asx(_this.get$overlayEntries())))
            J.get$first$ax(_this.get$overlayEntries()).set$opaque(_this.get$opaque());
          t1 = _this._performanceModeRequestHandle;
          if (t1 != null)
            t1.dispose$0();
          _this._performanceModeRequestHandle = null;
          break;
        case 1:
        case 2:
          if (B.boolConversionCheck(J.get$isNotEmpty$asx(_this.get$overlayEntries())))
            J.get$first$ax(_this.get$overlayEntries()).set$opaque(false);
          if (_this._performanceModeRequestHandle == null)
            _this.set$_performanceModeRequestHandle(E.SchedulerBinding_instance().requestPerformanceMode$1(C.DartPerformanceMode_1));
          break;
        case 0:
          if (!B.boolConversionCheck(_this.get$isActive())) {
            _this.get$navigator().finalizeRoute$1(_this);
            _this._popFinalized = true;
            t1 = _this._performanceModeRequestHandle;
            if (t1 != null)
              t1.dispose$0();
            _this._performanceModeRequestHandle = null;
          }
          break;
      }
    },
    install$0() {
      var t1, _this = this;
      _this.set$_routes$_controller(_this.createAnimationController$0());
      t1 = _this.createAnimation$0();
      t1.addStatusListener$1(_this.get$_routes$_handleStatusChanged());
      _this.set$_routes$_animation(t1);
      _this.super$OverlayRoute$install();
      if (B.boolConversionCheck(_this._routes$_animation.get$isCompleted()) && B.boolConversionCheck(J.get$isNotEmpty$asx(_this.get$overlayEntries())))
        J.get$first$ax(_this.get$overlayEntries()).set$opaque(_this.get$opaque());
    },
    didPush$0() {
      this.super$Route$didPush();
      return this._routes$_controller.forward$0();
    },
    didAdd$0() {
      this.super$Route$didAdd();
      this._routes$_controller.set$value(1);
    },
    didReplace$1(oldRoute) {
      var t1;
      type$.nullable_Route_dynamic._as(oldRoute);
      if (oldRoute instanceof A.MaterialPageRoute) {
        t1 = this._routes$_controller;
        t1.toString;
        t1.set$value(oldRoute._routes$_controller.get$value());
      }
      this.super$Route$didReplace(oldRoute);
    },
    didPop$1(result) {
      var _this = this;
      _this.$ti._eval$1("1?")._as(result);
      _this.set$_result(result);
      _this._routes$_controller.reverse$0();
      return _this.super$OverlayRoute$didPop(result);
    },
    didPopNext$1(nextRoute) {
      type$.Route_dynamic._as(nextRoute);
      this._updateSecondaryAnimation$1(nextRoute);
      this.super$Route$didPopNext(nextRoute);
    },
    didChangeNext$1(nextRoute) {
      type$.nullable_Route_dynamic._as(nextRoute);
      this._updateSecondaryAnimation$1(nextRoute);
      this.super$Route$didChangeNext(nextRoute);
    },
    _updateSecondaryAnimation$1(nextRoute) {
      var previousTrainHoppingListenerRemover, current, t2, t3, t4, newAnimation, _this = this, t1 = {};
      type$.nullable_Route_dynamic._as(nextRoute);
      previousTrainHoppingListenerRemover = _this._trainHoppingListenerRemover;
      _this.set$_trainHoppingListenerRemover(null);
      if (nextRoute instanceof A.MaterialPageRoute && B.boolConversionCheck(_this.canTransitionTo$1(nextRoute)) && B.boolConversionCheck(nextRoute.canTransitionFrom$1(_this))) {
        current = _this._secondaryAnimation.get$parent();
        if (current != null) {
          t2 = current instanceof A.TrainHoppingAnimation ? current.get$currentTrain() : current;
          t2.toString;
          t3 = nextRoute._routes$_animation;
          t3.toString;
          if (B.boolConversionCheck(J.$eq$(t2.get$value(), t3.get$value())) || !B.boolConversionCheck(t3.get$isAnimating()))
            _this._setSecondaryAnimation$2(t3, nextRoute.get$completed());
          else {
            t1.newAnimation = null;
            t4 = new A.TransitionRoute__updateSecondaryAnimation_jumpOnAnimationEnd(_this, t3, nextRoute);
            _this.set$_trainHoppingListenerRemover(new A.TransitionRoute__updateSecondaryAnimation_closure(t1, t3, t4));
            t3.addStatusListener$1(t4);
            newAnimation = A.TrainHoppingAnimation$(t2, t3, new A.TransitionRoute__updateSecondaryAnimation_closure0(t1, _this, nextRoute));
            t1.newAnimation = newAnimation;
            _this._setSecondaryAnimation$2(newAnimation, nextRoute.get$completed());
          }
        } else
          _this._setSecondaryAnimation$2(nextRoute._routes$_animation, nextRoute.get$completed());
      } else
        _this._setSecondaryAnimation$1(C.C__AlwaysDismissedAnimation);
      if (previousTrainHoppingListenerRemover != null)
        previousTrainHoppingListenerRemover.call$0();
    },
    _setSecondaryAnimation$2(animation, disposed) {
      type$.nullable_Animation_double._as(animation);
      type$.nullable_Future_dynamic._as(disposed);
      this._secondaryAnimation.set$parent(animation);
      if (disposed != null)
        disposed.then$1$1(new A.TransitionRoute__setSecondaryAnimation_closure(this, animation), type$.Null);
    },
    _setSecondaryAnimation$1(animation) {
      return this._setSecondaryAnimation$2(animation, null);
    },
    dispose$0() {
      var _this = this,
        t1 = _this._routes$_animation;
      if (t1 != null)
        t1.removeStatusListener$1(_this.get$_routes$_handleStatusChanged());
      t1 = _this._performanceModeRequestHandle;
      if (t1 != null)
        t1.dispose$0();
      _this._performanceModeRequestHandle = null;
      t1 = _this._routes$_controller;
      if (t1 != null)
        t1.dispose$0();
      _this._transitionCompleter.complete$1(_this._result);
      _this.super$OverlayRoute$dispose();
    },
    get$debugLabel() {
      return E.objectRuntimeType(this, "TransitionRoute");
    },
    toString$0(_) {
      return B.S(E.objectRuntimeType(this, "TransitionRoute")) + "(animation: " + B.S(this._routes$_controller) + ")";
    },
    set$_performanceModeRequestHandle(_performanceModeRequestHandle) {
      this._performanceModeRequestHandle = type$.nullable_PerformanceModeRequestHandle._as(_performanceModeRequestHandle);
    },
    set$_routes$_animation(_animation) {
      this._routes$_animation = type$.nullable_Animation_double._as(_animation);
    },
    set$_routes$_controller(_controller) {
      this._routes$_controller = type$.nullable_AnimationController._as(_controller);
    },
    set$_result(_result) {
      this._result = this.$ti._eval$1("1?")._as(_result);
    },
    set$_trainHoppingListenerRemover(_trainHoppingListenerRemover) {
      this._trainHoppingListenerRemover = type$.nullable_void_Function._as(_trainHoppingListenerRemover);
    },
    $isPredictiveBackRoute: 1
  };
  A.LocalHistoryRoute.prototype = {
    get$willHandlePopInternally() {
      var t1 = this.LocalHistoryRoute__localHistory;
      return t1 != null && B.boolConversionCheck(J.get$isNotEmpty$asx(t1));
    },
    set$_entriesImpliesAppBarDismissal(_entriesImpliesAppBarDismissal) {
      this.LocalHistoryRoute__entriesImpliesAppBarDismissal = B._asInt(_entriesImpliesAppBarDismissal);
    },
    $isRoute: 1,
    $is_RoutePlaceholder: 1
  };
  A._DismissModalAction.prototype = {
    isEnabled$1(intent) {
      var t1;
      type$.DismissIntent._as(intent);
      t1 = A.ModalRoute_of(this.context, type$.dynamic);
      t1.toString;
      return t1.get$barrierDismissible();
    },
    invoke$1(intent) {
      type$.DismissIntent._as(intent);
      return A.Navigator_of(this.context).maybePop$1$0(type$.nullable_Object);
    }
  };
  A._ModalScopeStatus.prototype = {
    updateShouldNotify$1(old) {
      var _this = this;
      type$._ModalScopeStatus._as(old);
      return !B.boolConversionCheck(J.$eq$(_this.isCurrent, old.isCurrent)) || !B.boolConversionCheck(J.$eq$(_this.canPop, old.canPop)) || !B.boolConversionCheck(J.$eq$(_this.impliesAppBarDismissal, old.impliesAppBarDismissal)) || !B.boolConversionCheck(J.$eq$(_this.route, old.route));
    },
    debugFillProperties$1(description) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(description);
      _this.super$Widget$debugFillProperties(description);
      description.add$1(0, E.FlagProperty$("isCurrent", _null, "inactive", "active", D.DiagnosticLevel_3, false, _this.isCurrent));
      description.add$1(0, E.FlagProperty$("canPop", _null, _null, "can pop", D.DiagnosticLevel_3, false, _this.canPop));
      description.add$1(0, E.FlagProperty$("impliesAppBarDismissal", _null, _null, "implies app bar dismissal", D.DiagnosticLevel_3, false, _this.impliesAppBarDismissal));
    },
    updateShouldNotifyDependent$2(oldWidget, dependencies) {
      type$._ModalScopeStatus._as(oldWidget);
      return type$.Set__ModalRouteAspect._as(dependencies).any$1(0, new A._ModalScopeStatus_updateShouldNotifyDependent_closure(this, oldWidget));
    }
  };
  A._ModalScope.prototype = {
    createState$0() {
      return A._ModalScopeState$(this.$ti._precomputed1);
    }
  };
  A._ModalScopeState.prototype = {
    get$_listenable() {
      return this.___ModalScopeState__listenable_A;
    },
    set$_listenable(value) {
      this.___ModalScopeState__listenable_A = type$.Listenable._as(value);
    },
    initState$0() {
      var t1, t2, _this = this;
      _this.super$State$initState0();
      t1 = B._setArrayType([], type$.JSArray_Listenable);
      if (_this.get$widget().route.get$animation() != null) {
        t2 = _this.get$widget().route.get$animation();
        t2.toString;
        t1.push(t2);
      }
      if (_this.get$widget().route.get$secondaryAnimation() != null) {
        t2 = _this.get$widget().route.get$secondaryAnimation();
        t2.toString;
        t1.push(t2);
      }
      _this.set$_listenable(A._MergingListenable$(t1));
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(this.$ti._eval$1("_ModalScope<1>")._as(oldWidget));
      this._updateFocusScopeNode$0();
    },
    didChangeDependencies$0() {
      this.super$State$didChangeDependencies();
      this._page = null;
      this._updateFocusScopeNode$0();
    },
    _updateFocusScopeNode$0() {
      var t2,
        route = this.get$widget().route,
        traversalEdgeBehavior = route.get$navigator().get$widget().routeTraversalEdgeBehavior,
        t1 = this.focusScopeNode;
      t1.traversalEdgeBehavior = traversalEdgeBehavior;
      if (B.boolConversionCheck(route.get$isCurrent()) && B.boolConversionCheck(this.get$_shouldRequestFocus())) {
        t2 = route.get$navigator().focusNode.get$enclosingScope();
        if (t2 != null)
          t2.setFirstFocus$1(t1);
      }
    },
    _forceRebuildPage$0() {
      this.setState$1(new A._ModalScopeState__forceRebuildPage_closure(this));
    },
    dispose$0() {
      this.focusScopeNode.dispose$0();
      this.primaryScrollController.dispose$0();
      this.super$State$dispose();
    },
    get$_shouldIgnoreFocusRequest() {
      var t1 = this.get$widget().route.get$animation();
      if (!B.boolConversionCheck(J.$eq$(t1 == null ? null : t1.get$status(), C.AnimationStatus_2))) {
        t1 = this.get$widget().route.get$navigator();
        t1 = t1 == null ? null : t1.get$userGestureInProgress();
        t1 = B.boolConversionCheck(t1 == null ? false : t1);
      } else
        t1 = true;
      return t1;
    },
    get$_shouldRequestFocus() {
      this.get$widget().route.get$navigator().get$widget().toString;
      return true;
    },
    _routeSetState$1(fn) {
      var t1, _this = this;
      type$.void_Function._as(fn);
      if (B.boolConversionCheck(_this.get$widget().route.get$isCurrent()) && !B.boolConversionCheck(_this.get$_shouldIgnoreFocusRequest()) && B.boolConversionCheck(_this.get$_shouldRequestFocus())) {
        t1 = _this.get$widget().route.get$navigator().focusNode.get$enclosingScope();
        if (t1 != null)
          t1.setFirstFocus$1(_this.focusScopeNode);
      }
      _this.setState$1(fn);
    },
    build$1(context) {
      var t1, t2, t3, t4, t5, t6, _this = this;
      type$.BuildContext._as(context);
      _this.focusScopeNode.set$skipTraversal(!B.boolConversionCheck(_this.get$widget().route.get$isCurrent()));
      t1 = _this.get$widget().route.get$restorationScopeId();
      t2 = _this.get$widget().route;
      t3 = _this.get$widget().route.get$isCurrent();
      t4 = _this.get$widget().route.get$canPop();
      t5 = _this.get$widget().route.get$impliesAppBarDismissal();
      t6 = _this.get$widget().route.get$offstage();
      return A.AnimatedBuilder$(t1, new A._ModalScopeState_build_closure(_this), A._ModalScopeStatus$(t4, A.Offstage$(A.PageStorage$(_this.get$widget().route._storageBucket, A.Builder$(new A._ModalScopeState_build_closure0(_this))), t6), t5, t3, t2));
    }
  };
  A.ModalRoute.prototype = {
    setState$1(fn) {
      var t1;
      type$.void_Function._as(fn);
      t1 = this._scopeKey;
      if (t1.get$currentState() != null)
        t1.get$currentState()._routeSetState$1(fn);
      else
        fn.call$0();
    },
    install$0() {
      var _this = this;
      _this.super$TransitionRoute$install();
      _this._animationProxy = A.ProxyAnimation$(A.TransitionRoute.prototype.get$animation.call(_this));
      _this._secondaryAnimationProxy = A.ProxyAnimation$(A.TransitionRoute.prototype.get$secondaryAnimation.call(_this));
    },
    didPush$0() {
      var _this = this,
        t1 = _this._scopeKey,
        t2 = t1.get$currentState() != null;
      if (t2)
        _this.get$navigator().get$widget().toString;
      if (t2) {
        t2 = _this.get$navigator().focusNode.get$enclosingScope();
        if (t2 != null)
          t2.setFirstFocus$1(t1.get$currentState().focusScopeNode);
      }
      return _this.super$TransitionRoute$didPush();
    },
    didAdd$0() {
      var _this = this,
        t1 = _this._scopeKey,
        t2 = t1.get$currentState() != null;
      if (t2)
        _this.get$navigator().get$widget().toString;
      if (t2) {
        t2 = _this.get$navigator().focusNode.get$enclosingScope();
        if (t2 != null)
          t2.setFirstFocus$1(t1.get$currentState().focusScopeNode);
      }
      _this.super$TransitionRoute$didAdd();
    },
    get$semanticsDismissible() {
      return true;
    },
    get$barrierCurve() {
      return D.Cubic_WKj;
    },
    get$popGestureInProgress() {
      return this.get$navigator().get$userGestureInProgress();
    },
    get$popGestureEnabled() {
      var _this = this;
      if (B.boolConversionCheck(_this.get$isFirst()))
        return false;
      if (B.boolConversionCheck(_this.get$willHandlePopInternally()))
        return false;
      if (B.boolConversionCheck(_this.get$hasScopedWillPopCallback()) || B.boolConversionCheck(J.$eq$(_this.get$popDisposition(), C.RoutePopDisposition_1)))
        return false;
      if (!B.boolConversionCheck(_this.get$animation().get$isCompleted()))
        return false;
      if (!B.boolConversionCheck(_this.get$secondaryAnimation().get$isDismissed()))
        return false;
      if (B.boolConversionCheck(_this.get$popGestureInProgress()))
        return false;
      return true;
    },
    get$offstage() {
      return this._routes$_offstage;
    },
    set$offstage(value) {
      var t1, _this = this;
      B._asBool(value);
      if (B.boolConversionCheck(J.$eq$(_this._routes$_offstage, value)))
        return;
      _this.setState$1(new A.ModalRoute_offstage_closure(_this, value));
      t1 = _this._animationProxy;
      t1.toString;
      t1.set$parent(B.boolConversionCheck(_this._routes$_offstage) ? C.C__AlwaysCompleteAnimation : A.TransitionRoute.prototype.get$animation.call(_this));
      t1 = _this._secondaryAnimationProxy;
      t1.toString;
      t1.set$parent(B.boolConversionCheck(_this._routes$_offstage) ? C.C__AlwaysDismissedAnimation : A.TransitionRoute.prototype.get$secondaryAnimation.call(_this));
      _this.changedInternalState$0();
    },
    get$subtreeContext() {
      return this._subtreeKey.get$currentContext();
    },
    get$animation() {
      return this._animationProxy;
    },
    get$secondaryAnimation() {
      return this._secondaryAnimationProxy;
    },
    willPop$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.RoutePopDisposition),
        $async$returnValue, $async$self = this, t1, $async$temp1;
      var $async$willPop$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._scopeKey.get$currentState();
              t1 = J.get$iterator$ax(B.List_List$of($async$self._willPopCallbacks, true, type$.Future_bool_Function));
            case 3:
              // for condition
              if (!B.boolConversionCheck(t1.moveNext$0())) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$temp1 = B;
              $async$goto = 5;
              return B._asyncAwait(t1.get$current().call$0(), $async$willPop$0);
            case 5:
              // returning from await.
              if (!$async$temp1.boolConversionCheck($async$result)) {
                $async$returnValue = C.RoutePopDisposition_1;
                // goto return
                $async$goto = 1;
                break;
              }
              // goto for condition
              $async$goto = 3;
              break;
            case 4:
              // after for
              $async$returnValue = $async$self.super$_ModalRoute_TransitionRoute_LocalHistoryRoute$willPop();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$willPop$0, $async$completer);
    },
    get$popDisposition() {
      for (var t1 = J.get$iterator$ax(this._popEntries); B.boolConversionCheck(t1.moveNext$0());)
        if (!B.boolConversionCheck(t1.get$current().get$canPopNotifier().get$value()))
          return C.RoutePopDisposition_1;
      return A._ModalRoute_TransitionRoute_LocalHistoryRoute.prototype.get$popDisposition.call(this);
    },
    onPopInvokedWithResult$2(didPop, result) {
      var t1;
      B._asBool(didPop);
      this.$ti._eval$1("1?")._as(result);
      for (t1 = J.get$iterator$ax(this._popEntries); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().onPopInvokedWithResult$2(didPop, result);
      this.super$Route$onPopInvokedWithResult(didPop, result);
    },
    _maybeDispatchNavigationNotification$0() {
      var notification, _this = this;
      if (!B.boolConversionCheck(_this.get$isCurrent()))
        return;
      notification = A.NavigationNotification$(J.$eq$(_this.get$popDisposition(), C.RoutePopDisposition_1));
      switch (E.SchedulerBinding_instance().get$schedulerPhase()) {
        case D.SchedulerPhase_4:
          notification.dispatch$1(_this.get$subtreeContext());
          break;
        case D.SchedulerPhase_0:
        case D.SchedulerPhase_2:
        case D.SchedulerPhase_3:
        case D.SchedulerPhase_1:
          E.SchedulerBinding_instance().addPostFrameCallback$2$debugLabel(new A.ModalRoute__maybeDispatchNavigationNotification_closure(_this, notification), "ModalRoute.dispatchNotification");
          break;
      }
    },
    get$hasScopedWillPopCallback() {
      return J.get$isNotEmpty$asx(this._willPopCallbacks);
    },
    didChangePrevious$1(previousRoute) {
      this.super$Route$didChangePrevious(type$.nullable_Route_dynamic._as(previousRoute));
      this.changedInternalState$0();
    },
    didChangeNext$1(nextRoute) {
      this.super$TransitionRoute$didChangeNext(type$.nullable_Route_dynamic._as(nextRoute));
      this.changedInternalState$0();
    },
    didPopNext$1(nextRoute) {
      this.super$TransitionRoute$didPopNext(type$.Route_dynamic._as(nextRoute));
      this.changedInternalState$0();
      this._maybeDispatchNavigationNotification$0();
    },
    changedInternalState$0() {
      var _this = this;
      _this.super$Route$changedInternalState();
      if (!B.boolConversionCheck(J.$eq$(E.SchedulerBinding_instance().get$schedulerPhase(), D.SchedulerPhase_3))) {
        _this.setState$1(new A.ModalRoute_changedInternalState_closure());
        _this.get$_modalBarrier().markNeedsBuild$0();
      }
      _this.get$_modalScope().set$maintainState(true);
    },
    changedExternalState$0() {
      this.super$Route$changedExternalState();
      this.get$_modalBarrier().markNeedsBuild$0();
      var t1 = this._scopeKey;
      if (t1.get$currentState() != null)
        t1.get$currentState()._forceRebuildPage$0();
    },
    get$canPop() {
      return B.boolConversionCheck(this.get$hasActiveRouteBelow()) || B.boolConversionCheck(this.get$willHandlePopInternally());
    },
    get$impliesAppBarDismissal() {
      if (!B.boolConversionCheck(this.get$hasActiveRouteBelow())) {
        var t1 = this.LocalHistoryRoute__entriesImpliesAppBarDismissal;
        if (typeof t1 !== "number")
          return t1.$gt();
        t1 = t1 > 0;
      } else
        t1 = true;
      return t1;
    },
    get$_modalBarrier() {
      return this.__ModalRoute__modalBarrier_A;
    },
    set$_modalBarrier(value) {
      this.__ModalRoute__modalBarrier_A = type$.OverlayEntry._as(value);
    },
    _buildModalBarrier$1(context) {
      var barrier, _this = this, _null = null;
      type$.BuildContext._as(context);
      barrier = _this.buildModalBarrier$0();
      barrier = A.IgnorePointer$(barrier, !B.boolConversionCheck(_this.get$animation().get$isForwardOrCompleted()));
      return B.boolConversionCheck(_this.get$semanticsDismissible()) && B.boolConversionCheck(_this.get$barrierDismissible()) ? E.Semantics$(_null, barrier, false, _null, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, C.OrdinalSortKey_1_null, _null, _null, _null) : barrier;
    },
    buildModalBarrier$0() {
      var t1, color, t2, barrier, _this = this, _null = null;
      if (_this.get$barrierColor() != null && !B.boolConversionCheck(J.$eq$(_this.get$barrierColor().get$alpha(), 0)) && !B.boolConversionCheck(_this.get$offstage())) {
        t1 = _this.get$animation();
        t1.toString;
        color = t1.drive$1$1(A.ColorTween$(_this.get$barrierColor().withOpacity$1(0), _this.get$barrierColor()).chain$1(A.CurveTween$(_this.get$barrierCurve())), type$.nullable_Color);
        t1 = _this.get$barrierDismissible();
        t2 = _this.get$barrierLabel();
        barrier = A.AnimatedModalBarrier$(_this.get$semanticsDismissible(), color, t1, t2);
      } else {
        t1 = _this.get$barrierDismissible();
        t2 = _this.get$barrierLabel();
        barrier = A.ModalBarrier$(_this.get$semanticsDismissible(), _null, _null, t1, _null, t2, _null);
      }
      return barrier;
    },
    _buildModalScope$1(context) {
      var t1, _this = this, _null = null;
      type$.BuildContext._as(context);
      t1 = _this._modalScopeCache;
      return t1 == null ? _this._modalScopeCache = E.Semantics$(_null, A._ModalScope$(_this._scopeKey, _this, _this.$ti._precomputed1), false, _null, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, C.OrdinalSortKey_0_null, _null, _null, _null) : t1;
    },
    get$_modalScope() {
      return this.__ModalRoute__modalScope_A;
    },
    set$_modalScope(value) {
      this.__ModalRoute__modalScope_A = type$.OverlayEntry._as(value);
    },
    createOverlayEntries$0() {
      var t2, _this = this,
        t1 = A.OverlayEntry$(_this.get$_buildModalBarrier(), false, false);
      _this.set$_modalBarrier(t1);
      t2 = A.OverlayEntry$(_this.get$_buildModalScope(), _this.get$opaque(), true);
      _this.set$_modalScope(t2);
      return B._setArrayType([t1, t2], type$.JSArray_OverlayEntry);
    },
    toString$0(_) {
      return B.S(E.objectRuntimeType(this, "ModalRoute")) + "(" + B.S(this.get$settings()) + ", animation: " + B.S(this._routes$_animation) + ")";
    },
    set$_routes$_offstage(_offstage) {
      this._routes$_offstage = B._asBool(_offstage);
    },
    $isLocalHistoryRoute: 1
  };
  A._ModalRoute_TransitionRoute_LocalHistoryRoute.prototype = {
    willPop$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.RoutePopDisposition),
        $async$returnValue, $async$self = this;
      var $async$willPop$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (B.boolConversionCheck($async$self.get$willHandlePopInternally())) {
                $async$returnValue = C.RoutePopDisposition_0;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = $async$self.super$Route$willPop();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$willPop$0, $async$completer);
    },
    get$popDisposition() {
      if (B.boolConversionCheck(this.get$willHandlePopInternally()))
        return C.RoutePopDisposition_0;
      return A.Route.prototype.get$popDisposition.call(this);
    },
    didPop$1(result) {
      var t1, t2, entry, t3, internalStateChanged, _this = this;
      _this.$ti._eval$1("1?")._as(result);
      t1 = _this.LocalHistoryRoute__localHistory;
      if (t1 != null && B.boolConversionCheck(J.get$isNotEmpty$asx(t1))) {
        t1.toString;
        t2 = J.getInterceptor$ax(t1);
        entry = t2.removeLast$0(t1);
        entry.set$_routes$_owner(null);
        entry._notifyRemoved$0();
        if (B.boolConversionCheck(entry.get$impliesAppBarDismissal())) {
          t3 = _this.LocalHistoryRoute__entriesImpliesAppBarDismissal;
          if (typeof t3 !== "number")
            return t3.$sub();
          _this.set$_entriesImpliesAppBarDismissal(t3 - 1);
          internalStateChanged = J.$eq$(_this.LocalHistoryRoute__entriesImpliesAppBarDismissal, 0);
        } else
          internalStateChanged = false;
        if (B.boolConversionCheck(t2.get$isEmpty(t1)) || internalStateChanged)
          _this.changedInternalState$0();
        return false;
      }
      return _this.super$TransitionRoute$didPop(result);
    },
    $isLocalHistoryRoute: 1
  };
  A.ScrollBehavior.prototype = {
    getPlatform$1(context) {
      type$.BuildContext._as(context);
      return E.defaultTargetPlatform();
    },
    getMultitouchDragStrategy$1(context) {
      switch (this.getPlatform$1(type$.BuildContext._as(context))) {
        case D.TargetPlatform_4:
        case D.TargetPlatform_2:
          return C.MultitouchDragStrategy_1;
        case D.TargetPlatform_3:
        case D.TargetPlatform_5:
        case D.TargetPlatform_0:
        case D.TargetPlatform_1:
          return C.MultitouchDragStrategy_0;
      }
    },
    shouldNotify$1(oldDelegate) {
      type$.ScrollBehavior._as(oldDelegate);
      return false;
    },
    toString$0(_) {
      return E.objectRuntimeType(this, "ScrollBehavior");
    }
  };
  A.ScrollConfiguration.prototype = {
    updateShouldNotify$1(oldWidget) {
      var t1 = this.behavior,
        t2 = J.getInterceptor$(t1),
        t3 = type$.ScrollConfiguration._as(oldWidget).behavior;
      if (B.boolConversionCheck(J.$eq$(t2.get$runtimeType(t1), J.get$runtimeType$(t3))))
        t1 = !B.boolConversionCheck(t2.$eq(t1, t3)) && B.boolConversionCheck(t1.shouldNotify$1(t3));
      else
        t1 = true;
      return t1;
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("behavior", this.behavior, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ScrollBehavior));
    }
  };
  A.ScrollController.prototype = {
    ScrollController$5$debugLabel$initialScrollOffset$keepScrollOffset$onAttach$onDetach(debugLabel, initialScrollOffset, keepScrollOffset, onAttach, onDetach) {
      E.ChangeNotifier_maybeDispatchObjectCreation(this);
    },
    get$initialScrollOffset() {
      return 0;
    },
    get$hasClients() {
      return J.get$isNotEmpty$asx(this._positions);
    },
    get$position() {
      return J.get$single$ax(this._positions);
    },
    get$offset() {
      return this.get$position().get$pixels();
    },
    dispose$0() {
      var t1, t2;
      for (t1 = J.get$iterator$ax(this._positions), t2 = this.get$notifyListeners(); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().removeListener$1(t2);
      this.super$ChangeNotifier$dispose();
    },
    toString$0(_) {
      var description = B._setArrayType([], type$.JSArray_String);
      this.debugFillDescription$1(description);
      return B.S(E.describeIdentity(this)) + "(" + B.S(F.JSArray_methods.join$1(description, ", ")) + ")";
    },
    debugFillDescription$1(description) {
      var t1, t2, t3, _this = this;
      type$.List_String._as(description);
      if (!B.boolConversionCheck(J.$eq$(_this.get$initialScrollOffset(), 0)))
        J.add$1$ax(description, "initialScrollOffset: " + B.S(J.toStringAsFixed$1$n(_this.get$initialScrollOffset(), 1)) + ", ");
      t1 = _this._positions;
      t2 = J.getInterceptor$asx(t1);
      if (B.boolConversionCheck(t2.get$isEmpty(t1)))
        J.add$1$ax(description, "no clients");
      else {
        t3 = J.getInterceptor$ax(description);
        if (B.boolConversionCheck(J.$eq$(t2.get$length(t1), 1)))
          t3.add$1(description, "one client, offset " + B.S(J.toStringAsFixed$1$n(_this.get$offset(), 1)));
        else
          t3.add$1(description, B.S(t2.get$length(t1)) + " clients");
      }
    }
  };
  A.ScrollIncrementType.prototype = {
    _enumToString$0() {
      return "ScrollIncrementType." + B.S(this._core$_name);
    }
  };
  A.ScrollIncrementDetails.prototype = {};
  A.ScrollIntent.prototype = {};
  A.ScrollAction.prototype = {
    isEnabled$2(intent, context) {
      var primaryScrollController;
      type$.ScrollIntent._as(intent);
      type$.nullable_BuildContext._as(context);
      if (context == null)
        return false;
      if (E.Scrollable_maybeOf(context) != null)
        return true;
      primaryScrollController = A.PrimaryScrollController_maybeOf(context);
      return primaryScrollController != null && B.boolConversionCheck(primaryScrollController.get$hasClients());
    },
    isEnabled$1(intent) {
      return this.isEnabled$2(intent, null);
    },
    invoke$2(intent, context) {
      var state, primaryScrollController, t1, increment, t2;
      type$.ScrollIntent._as(intent);
      type$.nullable_BuildContext._as(context);
      context.toString;
      state = E.Scrollable_maybeOf(context);
      primaryScrollController = A.PrimaryScrollController_of(context);
      if (primaryScrollController.get$position().get$context().get$notificationContext() == null) {
        t1 = primaryScrollController.get$position().get$context().get$notificationContext();
        t1.toString;
        t1 = E.Scrollable_maybeOf(t1) == null;
      } else
        t1 = false;
      if (t1)
        return;
      t1 = primaryScrollController.get$position().get$context().get$notificationContext();
      t1.toString;
      state = E.Scrollable_maybeOf(t1);
      if (state.get$resolvedPhysics() != null) {
        t1 = state.get$resolvedPhysics();
        t1.toString;
        t1 = !B.boolConversionCheck(t1.shouldAcceptUserOffset$1(state.get$position()));
      } else
        t1 = false;
      if (t1)
        return;
      increment = A.ScrollAction_getDirectionalIncrement(state, intent);
      if (increment === 0)
        return;
      t1 = state.get$position();
      t2 = state.get$position().get$pixels();
      if (typeof t2 !== "number")
        return t2.$add();
      t1.moveTo$3$curve$duration(t2 + increment, C.Cubic_OxC, D.Duration_100000);
    },
    invoke$1(intent) {
      return this.invoke$2(intent, null);
    }
  };
  A.MultiSelectableSelectionContainerDelegate.prototype = {
    MultiSelectableSelectionContainerDelegate$0() {
      E.ChangeNotifier_maybeDispatchObjectCreation(this);
    },
    add$1(_, selectable) {
      type$.Selectable._as(selectable);
      J.add$1$ax(this._additions, selectable);
      this._scheduleSelectableUpdate$0();
    },
    remove$1(_, selectable) {
      type$.Selectable._as(selectable);
      if (B.boolConversionCheck(J.remove$1$ax(this._additions, selectable)))
        return;
      this._removeSelectable$1(selectable);
      this._scheduleSelectableUpdate$0();
    },
    _scheduleSelectableUpdate$0() {
      if (!B.boolConversionCheck(this._scheduledSelectableUpdate)) {
        this._scheduledSelectableUpdate = true;
        var t1 = new A.MultiSelectableSelectionContainerDelegate__scheduleSelectableUpdate_runScheduledTask(this);
        if (B.boolConversionCheck(J.$eq$(E.SchedulerBinding_instance().get$schedulerPhase(), D.SchedulerPhase_4)))
          B.scheduleMicrotask(t1);
        else
          E.SchedulerBinding_instance().addPostFrameCallback$2$debugLabel(t1, "SelectionContainer.runScheduledTask");
      }
    },
    _updateSelectables$0() {
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(this._additions)))
        this._flushAdditions$0();
      this.didChangeSelectables$0();
    },
    _flushAdditions$0() {
      var existingSelectables, selectionStartIndex, selectionEndIndex, t2, t3, t4, mergingIndex, existingIndex, t5, mergingSelectable, t6, t7, _this = this,
        mergingSelectables = J.toList$0$ax(_this._additions),
        t1 = J.getInterceptor$ax(mergingSelectables);
      t1.sort$1(mergingSelectables, _this.get$compareOrder());
      existingSelectables = _this.selectables;
      _this.set$selectables(B._setArrayType([], type$.JSArray_Selectable));
      selectionStartIndex = _this.currentSelectionStartIndex;
      selectionEndIndex = _this.currentSelectionEndIndex;
      t2 = _this.get$_handleSelectableGeometryChange();
      t3 = type$.num;
      t4 = J.getInterceptor$asx(existingSelectables);
      mergingIndex = 0;
      existingIndex = 0;
      while (true) {
        t5 = t1.get$length(mergingSelectables);
        if (typeof t5 !== "number")
          return B.iae(t5);
        if (!(mergingIndex < t5)) {
          t5 = t4.get$length(existingSelectables);
          if (typeof t5 !== "number")
            return B.iae(t5);
          t5 = existingIndex < t5;
        } else
          t5 = true;
        if (!t5)
          break;
        c$0: {
          t5 = t1.get$length(mergingSelectables);
          if (typeof t5 !== "number")
            return B.iae(t5);
          if (!(mergingIndex >= t5)) {
            t5 = t4.get$length(existingSelectables);
            if (typeof t5 !== "number")
              return B.iae(t5);
            if (existingIndex < t5) {
              t5 = _this.compareOrder$2(t4.$index(existingSelectables, existingIndex), t1.$index(mergingSelectables, mergingIndex));
              if (typeof t5 !== "number")
                return t5.$lt();
              t5 = t5 < 0;
            } else
              t5 = false;
          } else
            t5 = true;
          if (t5) {
            if (existingIndex === _this.currentSelectionStartIndex)
              selectionStartIndex = J.get$length$asx(_this.selectables);
            if (existingIndex === _this.currentSelectionEndIndex)
              selectionEndIndex = J.get$length$asx(_this.selectables);
            J.add$1$ax(_this.selectables, t4.$index(existingSelectables, existingIndex));
            ++existingIndex;
            break c$0;
          }
          mergingSelectable = t1.$index(mergingSelectables, mergingIndex);
          t5 = _this.currentSelectionStartIndex;
          t6 = _this.currentSelectionEndIndex;
          t7 = E.max(t5, t6, t3);
          if (typeof t7 !== "number")
            return B.iae(t7);
          if (existingIndex < t7) {
            t5 = E.min(t5, t6, t3);
            if (typeof t5 !== "number")
              return B.iae(t5);
            t5 = existingIndex > t5;
          } else
            t5 = false;
          if (t5)
            _this.ensureChildUpdated$1(mergingSelectable);
          mergingSelectable.addListener$1(t2);
          J.add$1$ax(_this.selectables, mergingSelectable);
          ++mergingIndex;
        }
      }
      _this.currentSelectionEndIndex = selectionEndIndex;
      _this.currentSelectionStartIndex = selectionStartIndex;
      _this.set$_additions(B.LinkedHashSet_LinkedHashSet$_empty(type$.Selectable));
    },
    _removeSelectable$1(selectable) {
      var index, t1, _this = this;
      type$.Selectable._as(selectable);
      index = J.indexOf$1$asx(_this.selectables, selectable);
      J.removeAt$1$ax(_this.selectables, index);
      t1 = _this.currentSelectionEndIndex;
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (index <= t1)
        _this.set$currentSelectionEndIndex(t1 - 1);
      t1 = _this.currentSelectionStartIndex;
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (index <= t1)
        _this.set$currentSelectionStartIndex(t1 - 1);
      selectable.removeListener$1(_this.get$_handleSelectableGeometryChange());
    },
    didChangeSelectables$0() {
      this._updateSelectionGeometry$0();
    },
    get$value() {
      return this._selectable_region$_selectionGeometry;
    },
    _updateSelectionGeometry$0() {
      var _this = this,
        newValue = _this.getSelectionGeometry$0();
      if (!B.boolConversionCheck(J.$eq$(_this._selectable_region$_selectionGeometry, newValue))) {
        _this._selectable_region$_selectionGeometry = newValue;
        _this.notifyListeners$0();
      }
      _this._updateHandleLayersAndOwners$0();
    },
    _handleSelectableGeometryChange$0() {
      if (B.boolConversionCheck(this._isHandlingSelectionEvent))
        return;
      this._updateSelectionGeometry$0();
    },
    getSelectionGeometry$0() {
      var startGeometry, t1, t2, forwardSelection, startIndexWalker, startPoint, start, endGeometry, endIndexWalker, endPoint, end, selectionRects, drawableArea, index, _this = this, _null = null;
      if (B.boolConversionCheck(J.$eq$(_this.currentSelectionEndIndex, -1)) || B.boolConversionCheck(J.$eq$(_this.currentSelectionStartIndex, -1)) || B.boolConversionCheck(J.get$isEmpty$asx(_this.selectables)))
        return A.SelectionGeometry$(_null, J.get$isNotEmpty$asx(_this.selectables), C.List_empty8, _null, C.SelectionStatus_2);
      if (!B.boolConversionCheck(_this._extendSelectionInProgress)) {
        _this.set$currentSelectionStartIndex(_this._adjustSelectionIndexBasedOnSelectionGeometry$2(_this.currentSelectionStartIndex, _this.currentSelectionEndIndex));
        _this.set$currentSelectionEndIndex(_this._adjustSelectionIndexBasedOnSelectionGeometry$2(_this.currentSelectionEndIndex, _this.currentSelectionStartIndex));
      }
      startGeometry = J.$index$asx(_this.selectables, _this.currentSelectionStartIndex).get$value();
      t1 = _this.currentSelectionEndIndex;
      t2 = _this.currentSelectionStartIndex;
      if (typeof t1 !== "number")
        return t1.$ge();
      if (typeof t2 !== "number")
        return B.iae(t2);
      forwardSelection = t1 >= t2;
      startIndexWalker = t2;
      while (true) {
        if (!(startIndexWalker !== _this.currentSelectionEndIndex && startGeometry.startSelectionPoint == null))
          break;
        startIndexWalker += forwardSelection ? 1 : -1;
        startGeometry = J.$index$asx(_this.selectables, startIndexWalker).get$value();
      }
      t1 = startGeometry.startSelectionPoint;
      startPoint = _null;
      if (t1 != null) {
        start = E.MatrixUtils_transformPoint(_this.getTransformFrom$1(J.$index$asx(_this.selectables, startIndexWalker)), t1.localPosition);
        if (B.boolConversionCheck(start.get$isFinite(0))) {
          t2 = t1.lineHeight;
          startPoint = A.SelectionPoint$(t1.handleType, t2, start);
        }
      }
      endGeometry = J.$index$asx(_this.selectables, _this.currentSelectionEndIndex).get$value();
      endIndexWalker = _this.currentSelectionEndIndex;
      while (true) {
        if (!(endIndexWalker !== _this.currentSelectionStartIndex && endGeometry.endSelectionPoint == null))
          break;
        endIndexWalker += forwardSelection ? -1 : 1;
        endGeometry = J.$index$asx(_this.selectables, endIndexWalker).get$value();
      }
      t1 = endGeometry.endSelectionPoint;
      endPoint = _null;
      if (t1 != null) {
        end = E.MatrixUtils_transformPoint(_this.getTransformFrom$1(J.$index$asx(_this.selectables, endIndexWalker)), t1.localPosition);
        if (B.boolConversionCheck(end.get$isFinite(0))) {
          t2 = t1.lineHeight;
          endPoint = A.SelectionPoint$(t1.handleType, t2, end);
        }
      }
      selectionRects = B._setArrayType([], type$.JSArray_Rect);
      drawableArea = B.boolConversionCheck(_this.get$hasSize()) ? E.Rect$fromLTWH(0, 0, _this.get$containerSize().get$width(), _this.get$containerSize().get$height()) : _null;
      index = _this.currentSelectionStartIndex;
      t1 = type$.Rect;
      while (true) {
        t2 = _this.currentSelectionEndIndex;
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (!(index <= t2))
          break;
        F.JSArray_methods.addAll$1(selectionRects, J.toList$0$ax(J.where$1$ax(J.map$1$1$ax(J.$index$asx(_this.selectables, index).get$value().selectionRects, new A.MultiSelectableSelectionContainerDelegate_getSelectionGeometry_closure(_this, index, drawableArea), t1), new A.MultiSelectableSelectionContainerDelegate_getSelectionGeometry_closure0())));
        ++index;
      }
      return A.SelectionGeometry$(endPoint, true, selectionRects, startPoint, !B.boolConversionCheck(startGeometry.$eq(0, endGeometry)) ? C.SelectionStatus_0 : startGeometry.status);
    },
    _adjustSelectionIndexBasedOnSelectionGeometry$2(currentIndex, towardIndex) {
      var $forward;
      B._asInt(currentIndex);
      B._asInt(towardIndex);
      $forward = towardIndex > currentIndex;
      while (true) {
        if (!(currentIndex !== towardIndex && !B.boolConversionCheck(J.$eq$(J.$index$asx(this.selectables, currentIndex).get$value().status, C.SelectionStatus_0))))
          break;
        currentIndex += $forward ? 1 : -1;
      }
      return currentIndex;
    },
    pushHandleLayers$2(startHandle, endHandle) {
      var _this = this,
        t1 = type$.nullable_LayerLink;
      t1._as(startHandle);
      t1._as(endHandle);
      if (B.boolConversionCheck(J.$eq$(_this._startHandleLayer, startHandle)) && B.boolConversionCheck(J.$eq$(_this._endHandleLayer, endHandle)))
        return;
      _this._startHandleLayer = startHandle;
      _this._endHandleLayer = endHandle;
      _this._updateHandleLayersAndOwners$0();
    },
    _updateHandleLayersAndOwners$0() {
      var t1, _this = this, _null = null,
        effectiveStartHandle = _this._startHandleLayer,
        effectiveEndHandle = _this._endHandleLayer;
      if (B.boolConversionCheck(J.$eq$(_this.currentSelectionStartIndex, -1)) || B.boolConversionCheck(J.$eq$(_this.currentSelectionEndIndex, -1))) {
        t1 = _this._startHandleLayerOwner;
        if (t1 != null) {
          t1.pushHandleLayers$2(_null, _null);
          _this._startHandleLayerOwner = null;
        }
        t1 = _this._endHandleLayerOwner;
        if (t1 != null) {
          t1.pushHandleLayers$2(_null, _null);
          _this._endHandleLayerOwner = null;
        }
        return;
      }
      if (!B.boolConversionCheck(J.$eq$(J.$index$asx(_this.selectables, _this.currentSelectionStartIndex), _this._startHandleLayerOwner))) {
        t1 = _this._startHandleLayerOwner;
        if (t1 != null)
          t1.pushHandleLayers$2(_null, _null);
      }
      if (!B.boolConversionCheck(J.$eq$(J.$index$asx(_this.selectables, _this.currentSelectionEndIndex), _this._endHandleLayerOwner))) {
        t1 = _this._endHandleLayerOwner;
        if (t1 != null)
          t1.pushHandleLayers$2(_null, _null);
      }
      _this.set$_startHandleLayerOwner(J.$index$asx(_this.selectables, _this.currentSelectionStartIndex));
      if (B.boolConversionCheck(J.$eq$(_this.currentSelectionStartIndex, _this.currentSelectionEndIndex))) {
        _this.set$_endHandleLayerOwner(_this._startHandleLayerOwner);
        _this._startHandleLayerOwner.pushHandleLayers$2(effectiveStartHandle, effectiveEndHandle);
        return;
      }
      _this._startHandleLayerOwner.pushHandleLayers$2(effectiveStartHandle, _null);
      _this.set$_endHandleLayerOwner(J.$index$asx(_this.selectables, _this.currentSelectionEndIndex));
      _this._endHandleLayerOwner.pushHandleLayers$2(_null, effectiveEndHandle);
    },
    _flushInactiveSelections$0() {
      var skipIndex, t1, t2, t3, skipStart, skipEnd, index, _this = this;
      if (B.boolConversionCheck(J.$eq$(_this.currentSelectionStartIndex, -1)) && B.boolConversionCheck(J.$eq$(_this.currentSelectionEndIndex, -1)))
        return;
      if (B.boolConversionCheck(J.$eq$(_this.currentSelectionStartIndex, -1)) || B.boolConversionCheck(J.$eq$(_this.currentSelectionEndIndex, -1))) {
        skipIndex = B.boolConversionCheck(J.$eq$(_this.currentSelectionStartIndex, -1)) ? _this.currentSelectionEndIndex : _this.currentSelectionStartIndex;
        J.forEach$1$ax(J.where$1$ax(_this.selectables, new A.MultiSelectableSelectionContainerDelegate__flushInactiveSelections_closure(_this, skipIndex)), new A.MultiSelectableSelectionContainerDelegate__flushInactiveSelections_closure0(_this));
        return;
      }
      t1 = _this.currentSelectionStartIndex;
      t2 = _this.currentSelectionEndIndex;
      t3 = type$.int;
      skipStart = E.min(t1, t2, t3);
      skipEnd = E.max(t1, t2, t3);
      index = 0;
      while (true) {
        t1 = J.get$length$asx(_this.selectables);
        if (typeof t1 !== "number")
          return B.iae(t1);
        if (!(index < t1))
          break;
        c$0: {
          if (index >= skipStart && index <= skipEnd)
            break c$0;
          _this.dispatchSelectionEventToChild$2(J.$index$asx(_this.selectables, index), C.ClearSelectionEvent_SelectionEventType_2);
        }
        ++index;
      }
    },
    handleSelectAll$1($event) {
      var t1, _this = this;
      type$.SelectAllSelectionEvent._as($event);
      for (t1 = J.get$iterator$ax(_this.selectables); B.boolConversionCheck(t1.moveNext$0());)
        _this.dispatchSelectionEventToChild$2(t1.get$current(), $event);
      _this.currentSelectionStartIndex = 0;
      t1 = J.get$length$asx(_this.selectables);
      if (typeof t1 !== "number")
        return t1.$sub();
      _this.set$currentSelectionEndIndex(t1 - 1);
      return C.SelectionResult_4;
    },
    _handleSelectBoundary$1($event) {
      var effectiveGlobalPosition, t1, t2, lastSelectionResult, index, globalRectsContainPosition, t3, existingGeometry, _this = this;
      type$.SelectionEvent._as($event);
      effectiveGlobalPosition = B._Cell$named("effectiveGlobalPosition");
      t1 = $event.type;
      t2 = J.getInterceptor$(t1);
      if (B.boolConversionCheck(t2.$eq(t1, C.SelectionEventType_4)))
        effectiveGlobalPosition.set$finalLocalValue(type$.SelectWordSelectionEvent._as($event).get$globalPosition());
      else if (B.boolConversionCheck(t2.$eq(t1, C.SelectionEventType_5)))
        effectiveGlobalPosition.set$finalLocalValue(type$.SelectParagraphSelectionEvent._as($event).globalPosition);
      t1 = type$.Offset;
      lastSelectionResult = null;
      index = 0;
      while (true) {
        t2 = J.get$length$asx(_this.selectables);
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (!(index < t2))
          break;
        c$1: {
          globalRectsContainPosition = false;
          if (B.boolConversionCheck(J.get$isNotEmpty$asx(J.$index$asx(_this.selectables, index).get$boundingBoxes())))
            for (t2 = J.get$iterator$ax(J.$index$asx(_this.selectables, index).get$boundingBoxes()); B.boolConversionCheck(t2.moveNext$0());) {
              t3 = t2.get$current();
              if (B.boolConversionCheck(E.MatrixUtils_transformRect(J.$index$asx(_this.selectables, index).getTransformTo$1(null), t3).contains$1(0, effectiveGlobalPosition.readLocal$1$0(t1)))) {
                globalRectsContainPosition = true;
                break;
              }
            }
          if (globalRectsContainPosition) {
            existingGeometry = J.$index$asx(_this.selectables, index).get$value();
            lastSelectionResult = _this.dispatchSelectionEventToChild$2(J.$index$asx(_this.selectables, index), $event);
            t2 = J.get$length$asx(_this.selectables);
            if (typeof t2 !== "number")
              return t2.$sub();
            if (index === t2 - 1 && lastSelectionResult === C.SelectionResult_0)
              return C.SelectionResult_0;
            if (lastSelectionResult === C.SelectionResult_0)
              break c$1;
            if (index === 0 && lastSelectionResult === C.SelectionResult_1)
              return C.SelectionResult_1;
            if (!B.boolConversionCheck(J.$eq$(J.$index$asx(_this.selectables, index).get$value(), existingGeometry))) {
              J.forEach$1$ax(J.where$1$ax(_this.selectables, new A.MultiSelectableSelectionContainerDelegate__handleSelectBoundary_closure(_this, index)), new A.MultiSelectableSelectionContainerDelegate__handleSelectBoundary_closure0(_this));
              _this.currentSelectionStartIndex = _this.currentSelectionEndIndex = index;
            }
            return C.SelectionResult_2;
          } else if (lastSelectionResult === C.SelectionResult_0) {
            _this.currentSelectionStartIndex = _this.currentSelectionEndIndex = index - 1;
            return C.SelectionResult_2;
          }
        }
        ++index;
      }
      return C.SelectionResult_2;
    },
    handleSelectWord$1($event) {
      return this._handleSelectBoundary$1(type$.SelectWordSelectionEvent._as($event));
    },
    handleClearSelection$1($event) {
      var t1, _this = this;
      type$.ClearSelectionEvent._as($event);
      for (t1 = J.get$iterator$ax(_this.selectables); B.boolConversionCheck(t1.moveNext$0());)
        _this.dispatchSelectionEventToChild$2(t1.get$current(), $event);
      _this.currentSelectionStartIndex = _this.currentSelectionEndIndex = -1;
      return C.SelectionResult_4;
    },
    handleGranularlyExtendSelection$1($event) {
      var t1, targetIndex, result, _this = this;
      type$.GranularlyExtendSelectionEvent._as($event);
      if (B.boolConversionCheck(J.$eq$(_this.currentSelectionStartIndex, -1)))
        if (B.boolConversionCheck($event.get$forward()))
          _this.currentSelectionStartIndex = _this.currentSelectionEndIndex = 0;
        else {
          t1 = J.get$length$asx(_this.selectables);
          _this.set$currentSelectionEndIndex(t1);
          _this.set$currentSelectionStartIndex(t1);
        }
      targetIndex = B.boolConversionCheck($event.get$isEnd()) ? _this.currentSelectionEndIndex : _this.currentSelectionStartIndex;
      result = _this.dispatchSelectionEventToChild$2(J.$index$asx(_this.selectables, targetIndex), $event);
      if (B.boolConversionCheck($event.get$forward()))
        while (true) {
          t1 = J.get$length$asx(_this.selectables);
          if (typeof t1 !== "number")
            return t1.$sub();
          if (!(targetIndex < t1 - 1 && result === C.SelectionResult_0))
            break;
          ++targetIndex;
          result = _this.dispatchSelectionEventToChild$2(J.$index$asx(_this.selectables, targetIndex), $event);
        }
      else
        while (true) {
          if (!(targetIndex > 0 && result === C.SelectionResult_1))
            break;
          --targetIndex;
          result = _this.dispatchSelectionEventToChild$2(J.$index$asx(_this.selectables, targetIndex), $event);
        }
      if (B.boolConversionCheck($event.get$isEnd()))
        _this.currentSelectionEndIndex = targetIndex;
      else
        _this.currentSelectionStartIndex = targetIndex;
      return result;
    },
    handleDirectionallyExtendSelection$1($event) {
      var _0_0, t1, targetIndex, result, _this = this;
      type$.DirectionallyExtendSelectionEvent._as($event);
      if (B.boolConversionCheck(J.$eq$(_this.currentSelectionStartIndex, -1))) {
        _0_0 = $event.get$direction();
        $label0$0: {
          if (C.SelectionExtendDirection_0 === _0_0 || C.SelectionExtendDirection_3 === _0_0) {
            t1 = J.get$length$asx(_this.selectables);
            if (typeof t1 !== "number")
              return t1.$sub();
            --t1;
            break $label0$0;
          }
          if (C.SelectionExtendDirection_1 === _0_0 || C.SelectionExtendDirection_2 === _0_0) {
            t1 = 0;
            break $label0$0;
          }
          t1 = null;
        }
        _this.set$currentSelectionEndIndex(t1);
        _this.set$currentSelectionStartIndex(t1);
      }
      targetIndex = B.boolConversionCheck($event.get$isEnd()) ? _this.currentSelectionEndIndex : _this.currentSelectionStartIndex;
      result = _this.dispatchSelectionEventToChild$2(J.$index$asx(_this.selectables, targetIndex), $event);
      switch ($event.get$direction()) {
        case C.SelectionExtendDirection_0:
          if (result === C.SelectionResult_1)
            if (targetIndex > 0) {
              --targetIndex;
              result = _this.dispatchSelectionEventToChild$2(J.$index$asx(_this.selectables, targetIndex), $event.copyWith$1$direction(C.SelectionExtendDirection_3));
            }
          break;
        case C.SelectionExtendDirection_1:
          if (result === C.SelectionResult_0) {
            t1 = J.get$length$asx(_this.selectables);
            if (typeof t1 !== "number")
              return t1.$sub();
            if (targetIndex < t1 - 1) {
              ++targetIndex;
              result = _this.dispatchSelectionEventToChild$2(J.$index$asx(_this.selectables, targetIndex), $event.copyWith$1$direction(C.SelectionExtendDirection_2));
            }
          }
          break;
        case C.SelectionExtendDirection_2:
        case C.SelectionExtendDirection_3:
          break;
      }
      if (B.boolConversionCheck($event.get$isEnd()))
        _this.currentSelectionEndIndex = targetIndex;
      else
        _this.currentSelectionStartIndex = targetIndex;
      return result;
    },
    handleSelectionEdgeUpdate$1($event) {
      var _this = this;
      type$.SelectionEdgeUpdateEvent._as($event);
      if (B.boolConversionCheck(J.$eq$($event.type, C.SelectionEventType_1)))
        return B.boolConversionCheck(J.$eq$(_this.currentSelectionEndIndex, -1)) ? _this._selectable_region$_initSelection$2$isEnd($event, true) : _this._selectable_region$_adjustSelection$2$isEnd($event, true);
      return B.boolConversionCheck(J.$eq$(_this.currentSelectionStartIndex, -1)) ? _this._selectable_region$_initSelection$2$isEnd($event, false) : _this._selectable_region$_adjustSelection$2$isEnd($event, false);
    },
    dispatchSelectionEvent$1($event) {
      var selectionWillBeInProgress, result, _this = this;
      type$.SelectionEvent._as($event);
      selectionWillBeInProgress = !($event instanceof A.ClearSelectionEvent);
      if (!B.boolConversionCheck(_this._selectionInProgress) && selectionWillBeInProgress)
        J.sort$1$ax(_this.selectables, _this.get$compareOrder());
      _this._selectionInProgress = selectionWillBeInProgress;
      _this._isHandlingSelectionEvent = true;
      result = B._Cell$named("result");
      switch ($event.type) {
        case C.SelectionEventType_0:
        case C.SelectionEventType_1:
          _this._extendSelectionInProgress = false;
          result.set$value(_this.handleSelectionEdgeUpdate$1(type$.SelectionEdgeUpdateEvent._as($event)));
          break;
        case C.SelectionEventType_2:
          _this._extendSelectionInProgress = false;
          result.set$value(_this.handleClearSelection$1(type$.ClearSelectionEvent._as($event)));
          break;
        case C.SelectionEventType_3:
          _this._extendSelectionInProgress = false;
          result.set$value(_this.handleSelectAll$1(type$.SelectAllSelectionEvent._as($event)));
          break;
        case C.SelectionEventType_4:
          _this._extendSelectionInProgress = false;
          result.set$value(_this.handleSelectWord$1(type$.SelectWordSelectionEvent._as($event)));
          break;
        case C.SelectionEventType_5:
          _this._extendSelectionInProgress = false;
          result.set$value(_this.handleSelectParagraph$1(type$.SelectParagraphSelectionEvent._as($event)));
          break;
        case C.SelectionEventType_6:
          _this._extendSelectionInProgress = true;
          result.set$value(_this.handleGranularlyExtendSelection$1(type$.GranularlyExtendSelectionEvent._as($event)));
          break;
        case C.SelectionEventType_7:
          _this._extendSelectionInProgress = true;
          result.set$value(_this.handleDirectionallyExtendSelection$1(type$.DirectionallyExtendSelectionEvent._as($event)));
          break;
      }
      _this._isHandlingSelectionEvent = false;
      _this._updateSelectionGeometry$0();
      return result.readLocal$1$0(type$.SelectionResult);
    },
    dispose$0() {
      var t1, t2, _this = this;
      for (t1 = J.get$iterator$ax(_this.selectables), t2 = _this.get$_handleSelectableGeometryChange(); B.boolConversionCheck(t1.moveNext$0());)
        t1.get$current().removeListener$1(t2);
      _this.set$selectables(C.List_empty10);
      _this._scheduledSelectableUpdate = false;
      _this.super$ChangeNotifier$dispose();
    },
    dispatchSelectionEventToChild$2(selectable, $event) {
      return type$.Selectable._as(selectable).dispatchSelectionEvent$1(type$.SelectionEvent._as($event));
    },
    _selectable_region$_initSelection$2$isEnd($event, isEnd) {
      var newIndex, hasFoundEdgeIndex, result, index, t1, hasFoundEdgeIndex0, _this = this;
      type$.SelectionEdgeUpdateEvent._as($event);
      B._asBool(isEnd);
      newIndex = -1;
      hasFoundEdgeIndex = false;
      result = null;
      index = 0;
      while (true) {
        t1 = J.get$length$asx(_this.selectables);
        if (typeof t1 !== "number")
          return B.iae(t1);
        if (!(index < t1 && !hasFoundEdgeIndex))
          break;
        hasFoundEdgeIndex0 = true;
        switch (_this.dispatchSelectionEventToChild$2(J.$index$asx(_this.selectables, index), $event).index) {
          case 0:
          case 4:
            newIndex = index;
            break;
          case 2:
            hasFoundEdgeIndex = hasFoundEdgeIndex0;
            newIndex = index;
            result = C.SelectionResult_2;
            break;
          case 1:
            if (index === 0) {
              newIndex = 0;
              result = C.SelectionResult_1;
            }
            if (result == null)
              result = C.SelectionResult_2;
            hasFoundEdgeIndex = hasFoundEdgeIndex0;
            break;
          case 3:
            hasFoundEdgeIndex = hasFoundEdgeIndex0;
            newIndex = index;
            result = C.SelectionResult_3;
            break;
        }
        ++index;
      }
      if (newIndex === -1)
        return C.SelectionResult_4;
      if (isEnd)
        _this.currentSelectionEndIndex = newIndex;
      else
        _this.currentSelectionStartIndex = newIndex;
      _this._flushInactiveSelections$0();
      return result == null ? C.SelectionResult_0 : result;
    },
    _selectable_region$_adjustSelection$2$isEnd($event, isEnd) {
      var t1, isCurrentEdgeWithinViewport, isOppositeEdgeWithinViewport, _0_7, _0_6, _0_6_isSet, _0_7_isSet, _0_4, _0_5, t2, _0_9, t3, _0_4_isSet, _0_5_isSet, _0_9_isSet, _0_10, _0_11, _0_10_isSet, currentSelectableResult, $forward, newIndex, finalResult, _this = this, _null = null;
      type$.SelectionEdgeUpdateEvent._as($event);
      B._asBool(isEnd);
      t1 = _this._selectable_region$_selectionGeometry;
      isCurrentEdgeWithinViewport = isEnd ? t1.endSelectionPoint != null : t1.startSelectionPoint != null;
      isOppositeEdgeWithinViewport = isEnd ? t1.startSelectionPoint != null : t1.endSelectionPoint != null;
      $label0$0: {
        B.boolConversionCheck(isEnd);
        _0_7 = _null;
        _0_6 = _null;
        t1 = false;
        if (isEnd) {
          B.boolConversionCheck(isCurrentEdgeWithinViewport);
          if (isCurrentEdgeWithinViewport) {
            B.boolConversionCheck(isOppositeEdgeWithinViewport);
            t1 = isOppositeEdgeWithinViewport;
            _0_6 = t1;
            _0_7 = _0_6;
          }
          _0_6_isSet = isCurrentEdgeWithinViewport;
          _0_7_isSet = _0_6_isSet;
          _0_4 = _0_7_isSet;
          _0_5 = _0_4;
        } else {
          _0_4 = _null;
          _0_5 = _0_4;
          _0_7_isSet = false;
          _0_6_isSet = false;
        }
        t2 = 0;
        if (t1) {
          t1 = _this.currentSelectionEndIndex;
          break $label0$0;
        }
        B.boolConversionCheck(isEnd);
        _0_9 = _null;
        t1 = false;
        if (isEnd) {
          if (isEnd) {
            t3 = _0_5;
            _0_4_isSet = isEnd;
            _0_5_isSet = _0_4_isSet;
          } else {
            t3 = isCurrentEdgeWithinViewport;
            _0_4 = t3;
            _0_5 = _0_4;
            _0_5_isSet = true;
            _0_4_isSet = true;
          }
          B.boolConversionCheck(t3);
          if (t3) {
            if (_0_6_isSet)
              t1 = _0_6;
            else {
              t1 = isOppositeEdgeWithinViewport;
              _0_6 = t1;
              _0_6_isSet = true;
            }
            _0_9 = false === t1;
            t1 = _0_9;
            B.boolConversionCheck(t1);
          }
          _0_9_isSet = t3;
        } else {
          _0_4_isSet = isEnd;
          _0_5_isSet = _0_4_isSet;
          _0_9_isSet = false;
        }
        if (t1) {
          t1 = _this.currentSelectionEndIndex;
          break $label0$0;
        }
        _0_10 = _null;
        t1 = false;
        if (isEnd) {
          if (_0_4_isSet)
            t3 = _0_4;
          else {
            t3 = isCurrentEdgeWithinViewport;
            _0_4 = t3;
            _0_4_isSet = true;
          }
          _0_10 = false === t3;
          t3 = _0_10;
          if (B.boolConversionCheck(t3)) {
            if (_0_7_isSet)
              t1 = _0_7;
            else {
              if (_0_6_isSet)
                t1 = _0_6;
              else {
                t1 = isOppositeEdgeWithinViewport;
                _0_6 = t1;
                _0_6_isSet = true;
              }
              _0_7 = true === t1;
              t1 = _0_7;
              _0_7_isSet = true;
            }
            B.boolConversionCheck(t1);
          }
        }
        if (t1) {
          t1 = _this.currentSelectionStartIndex;
          break $label0$0;
        }
        t1 = false;
        if (isEnd)
          if (B.boolConversionCheck(_0_10)) {
            if (_0_9_isSet)
              t1 = _0_9;
            else {
              if (_0_6_isSet)
                t1 = _0_6;
              else {
                t1 = isOppositeEdgeWithinViewport;
                _0_6 = t1;
                _0_6_isSet = true;
              }
              _0_9 = false === t1;
              t1 = _0_9;
              _0_9_isSet = true;
            }
            B.boolConversionCheck(t1);
          }
        if (t1) {
          t1 = t2;
          break $label0$0;
        }
        _0_11 = false === isEnd;
        t1 = _0_11;
        t3 = false;
        if (B.boolConversionCheck(t1)) {
          if (_0_5_isSet)
            t1 = _0_5;
          else {
            if (_0_4_isSet)
              t1 = _0_4;
            else {
              t1 = isCurrentEdgeWithinViewport;
              _0_4 = t1;
              _0_4_isSet = true;
            }
            _0_5 = true === t1;
            t1 = _0_5;
            _0_5_isSet = true;
          }
          if (B.boolConversionCheck(t1)) {
            if (_0_7_isSet)
              t1 = _0_7;
            else {
              if (_0_6_isSet)
                t1 = _0_6;
              else {
                t1 = isOppositeEdgeWithinViewport;
                _0_6 = t1;
                _0_6_isSet = true;
              }
              _0_7 = true === t1;
              t1 = _0_7;
              _0_7_isSet = true;
            }
            B.boolConversionCheck(t1);
          } else
            t1 = t3;
        } else
          t1 = t3;
        if (t1) {
          t1 = _this.currentSelectionStartIndex;
          break $label0$0;
        }
        B.boolConversionCheck(_0_11);
        t1 = false;
        if (_0_11) {
          if (_0_5_isSet)
            t3 = _0_5;
          else {
            if (_0_4_isSet)
              t3 = _0_4;
            else {
              t3 = isCurrentEdgeWithinViewport;
              _0_4 = t3;
              _0_4_isSet = true;
            }
            _0_5 = true === t3;
            t3 = _0_5;
          }
          if (B.boolConversionCheck(t3)) {
            if (_0_9_isSet)
              t1 = _0_9;
            else {
              if (_0_6_isSet)
                t1 = _0_6;
              else {
                t1 = isOppositeEdgeWithinViewport;
                _0_6 = t1;
                _0_6_isSet = true;
              }
              _0_9 = false === t1;
              t1 = _0_9;
              _0_9_isSet = true;
            }
            B.boolConversionCheck(t1);
          }
        }
        if (t1) {
          t1 = _this.currentSelectionStartIndex;
          break $label0$0;
        }
        t1 = false;
        if (_0_11) {
          if (isEnd) {
            t3 = _0_10;
            _0_10_isSet = isEnd;
          } else {
            if (_0_4_isSet)
              t3 = _0_4;
            else {
              t3 = isCurrentEdgeWithinViewport;
              _0_4 = t3;
              _0_4_isSet = true;
            }
            _0_10 = false === t3;
            t3 = _0_10;
            _0_10_isSet = true;
          }
          if (B.boolConversionCheck(t3)) {
            if (_0_7_isSet)
              t1 = _0_7;
            else {
              if (_0_6_isSet)
                t1 = _0_6;
              else {
                t1 = isOppositeEdgeWithinViewport;
                _0_6 = t1;
                _0_6_isSet = true;
              }
              _0_7 = true === t1;
              t1 = _0_7;
            }
            B.boolConversionCheck(t1);
          }
        } else
          _0_10_isSet = isEnd;
        if (t1) {
          t1 = _this.currentSelectionEndIndex;
          break $label0$0;
        }
        t1 = false;
        if (_0_11) {
          if (_0_10_isSet)
            t3 = _0_10;
          else {
            _0_10 = false === (_0_4_isSet ? _0_4 : isCurrentEdgeWithinViewport);
            t3 = _0_10;
          }
          if (B.boolConversionCheck(t3)) {
            if (_0_9_isSet)
              t1 = _0_9;
            else {
              _0_9 = false === (_0_6_isSet ? _0_6 : isOppositeEdgeWithinViewport);
              t1 = _0_9;
            }
            B.boolConversionCheck(t1);
          }
        }
        if (t1) {
          t1 = t2;
          break $label0$0;
        }
        t1 = _null;
      }
      currentSelectableResult = B._Cell$named("currentSelectableResult");
      t2 = type$.SelectionResult;
      $forward = _null;
      newIndex = t1;
      finalResult = $forward;
      while (true) {
        t1 = J.get$length$asx(_this.selectables);
        if (typeof t1 !== "number")
          return B.iae(t1);
        if (!(newIndex < t1 && newIndex >= 0 && finalResult == null))
          break;
        currentSelectableResult.set$value(_this.dispatchSelectionEventToChild$2(J.$index$asx(_this.selectables, newIndex), $event));
        switch (currentSelectableResult.readLocal$1$0(t2)) {
          case C.SelectionResult_2:
          case C.SelectionResult_3:
          case C.SelectionResult_4:
            finalResult = currentSelectableResult.readLocal$1$0(t2);
            break;
          case C.SelectionResult_0:
            if ($forward === false) {
              ++newIndex;
              finalResult = C.SelectionResult_2;
            } else {
              t1 = J.get$length$asx(_this.selectables);
              if (typeof t1 !== "number")
                return t1.$sub();
              if (newIndex === t1 - 1)
                finalResult = currentSelectableResult.readLocal$1$0(t2);
              else {
                ++newIndex;
                $forward = true;
              }
            }
            break;
          case C.SelectionResult_1:
            if ($forward === true) {
              --newIndex;
              finalResult = C.SelectionResult_2;
            } else if (newIndex === 0)
              finalResult = currentSelectableResult.readLocal$1$0(t2);
            else {
              --newIndex;
              $forward = false;
            }
            break;
        }
      }
      if (isEnd)
        _this.currentSelectionEndIndex = newIndex;
      else
        _this.currentSelectionStartIndex = newIndex;
      _this._flushInactiveSelections$0();
      finalResult.toString;
      return finalResult;
    },
    set$selectables(selectables) {
      this.selectables = type$.List_Selectable._as(selectables);
    },
    set$currentSelectionEndIndex(currentSelectionEndIndex) {
      this.currentSelectionEndIndex = B._asInt(currentSelectionEndIndex);
    },
    set$currentSelectionStartIndex(currentSelectionStartIndex) {
      this.currentSelectionStartIndex = B._asInt(currentSelectionStartIndex);
    },
    set$_startHandleLayerOwner(_startHandleLayerOwner) {
      this._startHandleLayerOwner = type$.nullable_Selectable._as(_startHandleLayerOwner);
    },
    set$_endHandleLayerOwner(_endHandleLayerOwner) {
      this._endHandleLayerOwner = type$.nullable_Selectable._as(_endHandleLayerOwner);
    },
    set$_additions(_additions) {
      this._additions = type$.Set_Selectable._as(_additions);
    },
    $isChangeNotifier: 1
  };
  A._MultiSelectableSelectionContainerDelegate_SelectionContainerDelegate_ChangeNotifier.prototype = {$isChangeNotifier: 1};
  A.SelectionContainer.prototype = {
    get$_disabled() {
      return this.delegate == null;
    },
    createState$0() {
      return A._SelectionContainerState$();
    }
  };
  A._SelectionContainerState.prototype = {
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState0();
      if (!B.boolConversionCheck(_this.get$widget().get$_disabled())) {
        t1 = _this.get$widget().delegate;
        t1.toString;
        t1.set$_selectionContainerContext(_this.get$context());
        _this.get$widget().toString;
      }
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, _this = this;
      type$.SelectionContainer._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = oldWidget.delegate;
      if (!B.boolConversionCheck(J.$eq$(t1, _this.get$widget().delegate))) {
        if (!B.boolConversionCheck(oldWidget.get$_disabled())) {
          t1._selectionContainerContext = null;
          J.forEach$1$ax(_this._selection_container$_listeners, t1.get$removeListener());
        }
        if (!B.boolConversionCheck(_this.get$widget().get$_disabled())) {
          t2 = _this.get$widget().delegate;
          t2.toString;
          t2.set$_selectionContainerContext(_this.get$context());
          J.forEach$1$ax(_this._selection_container$_listeners, _this.get$widget().delegate.get$addListener());
        }
        t1 = t1 == null ? null : t1.get$value();
        t2 = _this.get$widget().delegate;
        if (!B.boolConversionCheck(J.$eq$(t1, t2 == null ? null : t2.get$value())))
          for (t1 = J.get$iterator$ax(J.toList$1$growable$ax(_this._selection_container$_listeners, false)); B.boolConversionCheck(t1.moveNext$0());)
            t1.get$current().call$0();
      }
      if (B.boolConversionCheck(_this.get$widget().get$_disabled()))
        _this.set$registrar(null);
      else
        _this.get$widget().toString;
    },
    didChangeDependencies$0() {
      var t1, _this = this;
      _this.super$State$didChangeDependencies();
      _this.get$widget().toString;
      t1 = B.boolConversionCheck(_this.get$widget().get$_disabled());
      if (!t1)
        _this.set$registrar(A.SelectionContainer_maybeOf(_this.get$context()));
    },
    addListener$1(listener) {
      type$.void_Function._as(listener);
      this.get$widget().delegate.addListener$1(listener);
      J.add$1$ax(this._selection_container$_listeners, listener);
    },
    removeListener$1(listener) {
      var t1;
      type$.void_Function._as(listener);
      t1 = this.get$widget().delegate;
      if (t1 != null)
        t1.removeListener$1(listener);
      J.remove$1$ax(this._selection_container$_listeners, listener);
    },
    pushHandleLayers$2(startHandle, endHandle) {
      var t1 = type$.nullable_LayerLink;
      t1._as(startHandle);
      t1._as(endHandle);
      this.get$widget().delegate.pushHandleLayers$2(startHandle, endHandle);
    },
    dispatchSelectionEvent$1($event) {
      type$.SelectionEvent._as($event);
      return this.get$widget().delegate.dispatchSelectionEvent$1($event);
    },
    get$value() {
      if (B.boolConversionCheck(this.get$widget().get$_disabled()))
        return C.SelectionGeometry_2jN;
      return this.get$widget().delegate.get$value();
    },
    getTransformTo$1(ancestor) {
      type$.nullable_RenderObject._as(ancestor);
      return this.get$context().findRenderObject$0().getTransformTo$1(ancestor);
    },
    get$boundingBoxes() {
      var t1 = this.get$context().findRenderObject$0();
      t1.toString;
      return B._setArrayType([type$.RenderBox._as(t1).get$paintBounds()], type$.JSArray_Rect);
    },
    dispose$0() {
      var _this = this;
      if (!B.boolConversionCheck(_this.get$widget().get$_disabled())) {
        _this.get$widget().delegate._selectionContainerContext = null;
        J.forEach$1$ax(_this._selection_container$_listeners, _this.get$widget().delegate.get$removeListener());
      }
      _this.super$__SelectionContainerState_State_Selectable_SelectionRegistrant$dispose();
    },
    build$1(context) {
      var t1, _this = this;
      type$.BuildContext._as(context);
      if (B.boolConversionCheck(_this.get$widget().get$_disabled()))
        return A.SelectionRegistrarScope$_disabled(_this.get$widget().child);
      t1 = _this.get$widget().delegate;
      t1.toString;
      return A.SelectionRegistrarScope$(_this.get$widget().child, t1);
    },
    $isListenable: 1,
    $isValueListenable: 1,
    $isSelectionHandler: 1,
    $isSelectable: 1,
    $isSelectionRegistrant: 1
  };
  A.SelectionRegistrarScope.prototype = {
    updateShouldNotify$1(oldWidget) {
      return !B.boolConversionCheck(J.$eq$(type$.SelectionRegistrarScope._as(oldWidget).registrar, this.registrar));
    }
  };
  A.SelectionContainerDelegate.prototype = {
    getTransformFrom$1(child) {
      var t1;
      type$.Selectable._as(child);
      t1 = this._selectionContainerContext.findRenderObject$0();
      t1.toString;
      return child.getTransformTo$1(type$.RenderBox._as(t1));
    },
    get$hasSize() {
      var t1 = this._selectionContainerContext.findRenderObject$0();
      t1.toString;
      return type$.RenderBox._as(t1).get$hasSize();
    },
    get$containerSize() {
      var t1 = this._selectionContainerContext.findRenderObject$0();
      t1.toString;
      return type$.RenderBox._as(t1).get$size();
    },
    set$_selectionContainerContext(_selectionContainerContext) {
      this._selectionContainerContext = type$.nullable_BuildContext._as(_selectionContainerContext);
    },
    $isListenable: 1,
    $isValueListenable: 1,
    $isSelectionHandler: 1,
    $isSelectionRegistrar: 1
  };
  A.__SelectionContainerState_State_Selectable.prototype = {$isListenable: 1, $isValueListenable: 1, $isSelectionHandler: 1, $isSelectable: 1};
  A.__SelectionContainerState_State_Selectable_SelectionRegistrant.prototype = {
    dispose$0() {
      this._selection$_removeSelectionRegistrarSubscription$0();
      this.super$State$dispose();
    },
    $isListenable: 1,
    $isValueListenable: 1,
    $isSelectionHandler: 1,
    $isSelectable: 1,
    $isSelectionRegistrant: 1
  };
  A.SemanticsDebugger.prototype = {
    createState$0() {
      return A._SemanticsDebuggerState$();
    }
  };
  A._SemanticsDebuggerState.prototype = {
    initState$0() {
      this.super$State$initState0();
      this.set$_semantics_debugger$_semanticsHandle(E.SemanticsBinding_instance().ensureSemantics$0());
      E.WidgetsBinding_instance().addObserver$1(this);
    },
    didChangeDependencies$0() {
      var newOwner, t1, _this = this;
      _this.super$State$didChangeDependencies();
      newOwner = E.View_pipelineOwnerOf(_this.get$context());
      t1 = _this._semantics_debugger$_pipelineOwner;
      if (newOwner !== t1) {
        if (t1 != null) {
          t1 = t1.get$semanticsOwner();
          if (t1 != null)
            t1.removeListener$1(_this.get$_update());
        }
        newOwner.get$semanticsOwner().addListener$1(_this.get$_update());
        _this._semantics_debugger$_pipelineOwner = newOwner;
      }
    },
    dispose$0() {
      var _this = this,
        t1 = _this._semantics_debugger$_pipelineOwner;
      if (t1 != null) {
        t1 = t1.get$semanticsOwner();
        if (t1 != null)
          t1.removeListener$1(_this.get$_update());
      }
      t1 = _this._semantics_debugger$_semanticsHandle;
      if (t1 != null)
        t1.dispose$0();
      E.WidgetsBinding_instance().removeObserver$1(_this);
      _this.super$State$dispose();
    },
    didChangeMetrics$0() {
      this.setState$1(new A._SemanticsDebuggerState_didChangeMetrics_closure());
    },
    _update$0() {
      var t1 = this._generation;
      if (typeof t1 !== "number")
        return t1.$add();
      this.set$_generation(t1 + 1);
      E.SchedulerBinding_instance().addPostFrameCallback$2$debugLabel(new A._SemanticsDebuggerState__update_closure(this), "SemanticsDebugger.update");
    },
    _semantics_debugger$_handlePointerDown$1($event) {
      this.setState$1(new A._SemanticsDebuggerState__handlePointerDown_closure(this, type$.PointerDownEvent._as($event)));
    },
    _handleTap$0() {
      var _this = this,
        t1 = _this._lastPointerDownLocation;
      t1.toString;
      _this._performAction$2(t1, D.SemanticsAction_1_tap);
      _this.setState$1(new A._SemanticsDebuggerState__handleTap_closure(_this));
    },
    _handleLongPress$0() {
      var _this = this,
        t1 = _this._lastPointerDownLocation;
      t1.toString;
      _this._performAction$2(t1, D.SemanticsAction_2_longPress);
      _this.setState$1(new A._SemanticsDebuggerState__handleLongPress_closure(_this));
    },
    _handlePanEnd$1(details) {
      var t2, _this = this,
        t1 = type$.DragEndDetails._as(details).velocity.pixelsPerSecond,
        vx = t1.get$dx(),
        vy = t1.get$dy();
      t1 = Math.abs(vx);
      t2 = Math.abs(vy);
      if (t1 === t2)
        return;
      if (t1 > t2) {
        t1 = J.get$sign$in(vx);
        if (typeof t1 !== "number")
          return t1.$lt();
        t2 = _this._lastPointerDownLocation;
        if (t1 < 0) {
          t2.toString;
          _this._performAction$2(t2, D.SemanticsAction_128_decrease);
          t1 = _this._lastPointerDownLocation;
          t1.toString;
          _this._performAction$2(t1, D.SemanticsAction_4_scrollLeft);
        } else {
          t2.toString;
          _this._performAction$2(t2, D.SemanticsAction_64_increase);
          t1 = _this._lastPointerDownLocation;
          t1.toString;
          _this._performAction$2(t1, D.SemanticsAction_8_scrollRight);
        }
      } else {
        t1 = J.get$sign$in(vy);
        if (typeof t1 !== "number")
          return t1.$lt();
        t2 = _this._lastPointerDownLocation;
        if (t1 < 0) {
          t2.toString;
          _this._performAction$2(t2, D.SemanticsAction_16_scrollUp);
        } else {
          t2.toString;
          _this._performAction$2(t2, D.SemanticsAction_32_scrollDown);
        }
      }
      _this.setState$1(new A._SemanticsDebuggerState__handlePanEnd_closure(_this));
    },
    _performAction$2(position, action) {
      var t1;
      type$.Offset._as(position);
      type$.SemanticsAction._as(action);
      t1 = this._semantics_debugger$_pipelineOwner;
      if (t1 != null) {
        t1 = t1.get$semanticsOwner();
        if (t1 != null)
          t1.performActionAt$2(position, action);
      }
    },
    build$1(context) {
      var t1, t2, t3, t4, _this = this, _null = null;
      type$.BuildContext._as(context);
      t1 = _this._semantics_debugger$_pipelineOwner;
      t1.toString;
      t2 = _this._generation;
      t3 = _this._lastPointerDownLocation;
      t4 = A.View_of(context).get$devicePixelRatio();
      _this.get$widget().toString;
      t4 = A._SemanticsDebuggerPainter$(t1, t2, t3, t4, C.TextStyle_qBv);
      return A.CustomPaint$(A.GestureDetector$(C.HitTestBehavior_1, A.Listener$(C.HitTestBehavior_1, A._IgnorePointerWithSemantics$(_this.get$widget().child), _null, _this.get$_semantics_debugger$_handlePointerDown(), _null, _null), true, _null, _this.get$_handleLongPress(), _this.get$_handlePanEnd(), _null, _null, _null, _null, _this.get$_handleTap(), _null, _null, _null), t4, _null);
    },
    set$_semantics_debugger$_semanticsHandle(_semanticsHandle) {
      this._semantics_debugger$_semanticsHandle = type$.nullable_SemanticsHandle._as(_semanticsHandle);
    },
    set$_generation(_generation) {
      this._generation = B._asInt(_generation);
    },
    set$_lastPointerDownLocation(_lastPointerDownLocation) {
      this._lastPointerDownLocation = type$.nullable_Offset._as(_lastPointerDownLocation);
    },
    $isWidgetsBindingObserver: 1
  };
  A._SemanticsDebuggerPainter.prototype = {
    get$_rootSemanticsNode() {
      var t1 = this.owner.get$semanticsOwner();
      return t1 == null ? null : t1.get$rootSemanticsNode();
    },
    paint$2(canvas, size) {
      var rootNode, t1, t2, paint, _this = this;
      type$.Canvas._as(canvas);
      type$.Size._as(size);
      rootNode = _this.get$_rootSemanticsNode();
      canvas.save$0();
      t1 = _this.devicePixelRatio;
      if (typeof t1 !== "number")
        return B.iae(t1);
      t2 = 1 / t1;
      canvas.scale$2(t2, t2);
      if (rootNode != null)
        _this._semantics_debugger$_paint$3(canvas, rootNode, _this._findDepth$1(rootNode));
      t2 = _this.pointerPosition;
      if (t2 != null) {
        paint = E.Paint_Paint();
        paint.set$color(C.Color_2130743551);
        canvas.drawCircle$3(t2, 10 * t1, paint);
      }
      canvas.restore$0();
    },
    shouldRepaint$1(oldDelegate) {
      type$._SemanticsDebuggerPainter._as(oldDelegate);
      return !B.boolConversionCheck(J.$eq$(this.owner, oldDelegate.owner)) || !B.boolConversionCheck(J.$eq$(this.generation, oldDelegate.generation)) || !B.boolConversionCheck(J.$eq$(this.pointerPosition, oldDelegate.pointerPosition));
    },
    getMessage$1(node) {
      var isScrollable, isAdjustable, shouldIgnoreDuplicatedLabel, t2, tooltipAndLabel, message, effectivelabel,
        data = type$.SemanticsNode._as(node).getSemanticsData$0(),
        t1 = type$.JSArray_String,
        annotations = B._setArrayType([], t1),
        wantsTap = B.boolConversionCheck(data.hasFlag$1(D.SemanticsFlag_1_hasCheckedState));
      if (wantsTap)
        F.JSArray_methods.add$1(annotations, B.boolConversionCheck(data.hasFlag$1(D.SemanticsFlag_2_isChecked)) ? "checked" : "unchecked");
      if (B.boolConversionCheck(data.hasFlag$1(D.SemanticsFlag_16_isTextField))) {
        F.JSArray_methods.add$1(annotations, "textfield");
        wantsTap = true;
      }
      if (B.boolConversionCheck(data.hasAction$1(D.SemanticsAction_1_tap))) {
        if (!wantsTap)
          F.JSArray_methods.add$1(annotations, "button");
      } else if (wantsTap)
        F.JSArray_methods.add$1(annotations, "disabled");
      if (B.boolConversionCheck(data.hasAction$1(D.SemanticsAction_2_longPress)))
        F.JSArray_methods.add$1(annotations, "long-pressable");
      isScrollable = B.boolConversionCheck(data.hasAction$1(D.SemanticsAction_4_scrollLeft)) || B.boolConversionCheck(data.hasAction$1(D.SemanticsAction_8_scrollRight)) || B.boolConversionCheck(data.hasAction$1(D.SemanticsAction_16_scrollUp)) || B.boolConversionCheck(data.hasAction$1(D.SemanticsAction_32_scrollDown));
      isAdjustable = B.boolConversionCheck(data.hasAction$1(D.SemanticsAction_64_increase)) || B.boolConversionCheck(data.hasAction$1(D.SemanticsAction_128_decrease));
      if (isScrollable)
        F.JSArray_methods.add$1(annotations, "scrollable");
      if (isAdjustable)
        F.JSArray_methods.add$1(annotations, "adjustable");
      shouldIgnoreDuplicatedLabel = B.boolConversionCheck(J.$eq$(E.defaultTargetPlatform(), D.TargetPlatform_0)) && B.boolConversionCheck(J.$eq$(data.attributedLabel.string, data.tooltip));
      t1 = B._setArrayType([], t1);
      t2 = data.tooltip;
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(t2)))
        t1.push(t2);
      t2 = data.attributedLabel.string;
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(t2)) && !shouldIgnoreDuplicatedLabel)
        t1.push(t2);
      tooltipAndLabel = F.JSArray_methods.join$1(t1, "\n");
      if (B.boolConversionCheck(F.JSString_methods.get$isEmpty(tooltipAndLabel)))
        message = F.JSArray_methods.join$1(annotations, "; ");
      else {
        t1 = data.textDirection;
        if (t1 == null) {
          effectivelabel = "\u2068" + tooltipAndLabel + "\u2069";
          F.JSArray_methods.insert$2(annotations, 0, "MISSING TEXT DIRECTION");
        } else {
          switch (t1) {
            case D.TextDirection_0:
              t1 = "\u2067" + tooltipAndLabel + "\u2069";
              break;
            case D.TextDirection_1:
              t1 = tooltipAndLabel;
              break;
            default:
              t1 = null;
          }
          effectivelabel = t1;
        }
        message = B.boolConversionCheck(F.JSArray_methods.get$isEmpty(annotations)) ? effectivelabel : effectivelabel + " (" + B.S(F.JSArray_methods.join$1(annotations, "; ")) + ")";
      }
      return F.JSString_methods.trim$0(message);
    },
    _paintMessage$2(canvas, node) {
      var message, rect, textPainter, _null = null;
      type$.Canvas._as(canvas);
      type$.SemanticsNode._as(node);
      message = this.getMessage$1(node);
      if (B.boolConversionCheck(F.JSString_methods.get$isEmpty(message)))
        return;
      rect = node.get$rect();
      canvas.save$0();
      canvas.clipRect$1(rect);
      textPainter = A.TextPainter$(_null, _null, _null, _null, _null, D.TextAlign_4, _null, _null, D._LinearTextScaler_1, C.TextWidthBasis_0);
      textPainter.set$text(A.TextSpan$(_null, this.labelStyle, message));
      textPainter.set$textDirection(D.TextDirection_1);
      textPainter.set$textAlign(D.TextAlign_2);
      textPainter.layout$1$maxWidth(rect.get$width());
      textPainter.paint$2(canvas, C.Alignment_0_0.inscribe$2(textPainter.get$size(), rect).get$topLeft());
      textPainter.dispose$0();
      canvas.restore$0();
    },
    _findDepth$1(node) {
      var t1 = {};
      type$.SemanticsNode._as(node);
      if (!B.boolConversionCheck(node.get$hasChildren()) || B.boolConversionCheck(node.get$mergeAllDescendantsIntoThisNode()))
        return 1;
      t1.childrenDepth = 0;
      node.visitChildren$1(new A._SemanticsDebuggerPainter__findDepth_closure(t1, this));
      t1 = t1.childrenDepth;
      if (typeof t1 !== "number")
        return t1.$add();
      return t1 + 1;
    },
    _semantics_debugger$_paint$3(canvas, node, rank) {
      var rect, t1, lineColor, innerRect, fill, line;
      type$.Canvas._as(canvas);
      type$.SemanticsNode._as(node);
      B._asInt(rank);
      canvas.save$0();
      if (node.get$transform() != null)
        canvas.transform$1(node.get$transform().get$storage());
      rect = node.get$rect();
      if (!B.boolConversionCheck(rect.get$isEmpty(0))) {
        t1 = A.Random_Random(node.get$id()).nextInt$1(16777215);
        if (typeof t1 !== "number")
          return B.iae(t1);
        lineColor = E.Color$(4278190080 + t1);
        innerRect = rect.deflate$1(rank);
        if (B.boolConversionCheck(innerRect.get$isEmpty(0))) {
          fill = E.Paint_Paint();
          fill.set$color(lineColor);
          fill.set$style(D.PaintingStyle_0);
          canvas.drawRect$2(rect, fill);
        } else {
          fill = E.Paint_Paint();
          fill.set$color(C.Color_4294967295);
          fill.set$style(D.PaintingStyle_0);
          canvas.drawRect$2(rect, fill);
          line = E.Paint_Paint();
          line.set$strokeWidth(rank * 2);
          line.set$color(lineColor);
          line.set$style(D.PaintingStyle_1);
          canvas.drawRect$2(innerRect, line);
        }
        this._paintMessage$2(canvas, node);
      }
      if (!B.boolConversionCheck(node.get$mergeAllDescendantsIntoThisNode()))
        node.visitChildren$1(new A._SemanticsDebuggerPainter__paint_closure(this, canvas, rank - 1));
      canvas.restore$0();
    }
  };
  A._IgnorePointerWithSemantics.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A._RenderIgnorePointerWithSemantics$();
    }
  };
  A._RenderIgnorePointerWithSemantics.prototype = {
    hitTest$2$position(result, position) {
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      return false;
    }
  };
  A.__SemanticsDebuggerState_State_WidgetsBindingObserver.prototype = {$isWidgetsBindingObserver: 1};
  A.SharedAppData.prototype = {
    createState$0() {
      return A._SharedAppDataState$();
    }
  };
  A._SharedAppDataState.prototype = {
    get$data() {
      var value = this.___SharedAppDataState_data_AI;
      if (B.boolConversionCheck(E.isSentinel(value))) {
        value = B.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$.nullable_Object);
        this.set$___SharedAppDataState_data_AI(value);
      }
      return value;
    },
    build$1(context) {
      type$.BuildContext._as(context);
      return A._SharedAppModel$(this.get$widget().child, this);
    },
    set$___SharedAppDataState_data_AI(___SharedAppDataState_data_AI) {
      this.___SharedAppDataState_data_AI = type$.Map_of_Object_and_nullable_Object._as(___SharedAppDataState_data_AI);
    }
  };
  A._SharedAppModel.prototype = {
    updateShouldNotify$1(old) {
      return !B.boolConversionCheck(J.$eq$(this.data, type$._SharedAppModel._as(old).data));
    },
    updateShouldNotifyDependent$2(old, keys) {
      var t1, t2, t3, t4, t5, t6;
      type$._SharedAppModel._as(old);
      type$.Set_Object._as(keys);
      for (t1 = keys.get$iterator(keys), t2 = this.data, t3 = J.getInterceptor$asx(t2), t4 = old.data, t5 = J.getInterceptor$asx(t4); B.boolConversionCheck(t1.moveNext$0());) {
        t6 = t1.get$current();
        if (!B.boolConversionCheck(J.$eq$(t3.$index(t2, t6), t5.$index(t4, t6))))
          return true;
      }
      return false;
    }
  };
  A.LockState.prototype = {
    _enumToString$0() {
      return "LockState." + B.S(this._core$_name);
    }
  };
  A.ShortcutMapProperty.prototype = {
    get$value() {
      var t1 = E.DiagnosticsProperty.prototype.get$value.call(this);
      t1.toString;
      return t1;
    },
    valueToString$1$parentConfiguration(parentConfiguration) {
      type$.nullable_TextTreeConfiguration._as(parentConfiguration);
      return "{" + B.S(J.join$1$ax(J.map$1$1$ax(this.get$value().get$keys(), new A.ShortcutMapProperty_valueToString_closure(this), type$.String), ", ")) + "}";
    }
  };
  A.SingleActivator.prototype = {
    get$triggers() {
      return B._setArrayType([this.trigger], type$.JSArray_LogicalKeyboardKey);
    },
    _shouldAcceptModifiers$1(pressed) {
      var _this = this;
      type$.Set_LogicalKeyboardKey._as(pressed);
      return B.boolConversionCheck(J.$eq$(_this.control, J.get$isNotEmpty$asx(pressed.intersection$1($.$get$_controlSynonyms())))) && B.boolConversionCheck(J.$eq$(_this.shift, J.get$isNotEmpty$asx(pressed.intersection$1($.$get$_shiftSynonyms())))) && B.boolConversionCheck(J.$eq$(_this.alt, J.get$isNotEmpty$asx(pressed.intersection$1($.$get$_altSynonyms())))) && B.boolConversionCheck(J.$eq$(_this.meta, J.get$isNotEmpty$asx(pressed.intersection$1($.$get$_metaSynonyms()))));
    },
    _shouldAcceptNumLock$1(state) {
      var t1;
      type$.HardwareKeyboard._as(state);
      switch (this.numLock) {
        case C.LockState_0:
          t1 = true;
          break;
        case C.LockState_1:
          t1 = J.contains$1$asx(state.get$lockModesEnabled(), D.KeyboardLockMode_YYi);
          break;
        case C.LockState_2:
          t1 = !B.boolConversionCheck(J.contains$1$asx(state.get$lockModesEnabled(), D.KeyboardLockMode_YYi));
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    accepts$2($event, state) {
      var t1;
      type$.KeyEvent._as($event);
      type$.HardwareKeyboard._as(state);
      if (!type$.KeyDownEvent._is($event))
        t1 = type$.KeyRepeatEvent._is($event);
      else
        t1 = true;
      return t1 && B.boolConversionCheck(J.contains$1$asx(this.get$triggers(), $event.logicalKey)) && B.boolConversionCheck(this._shouldAcceptModifiers$1(state.get$logicalKeysPressed())) && B.boolConversionCheck(this._shouldAcceptNumLock$1(state));
    },
    debugDescribeKeys$0() {
      return "";
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.MessageProperty$("keys", this.debugDescribeKeys$0(), D.DiagnosticLevel_3));
      properties.add$1(0, E.FlagProperty$("includeRepeats", null, "excluding repeats", null, D.DiagnosticLevel_3, false, true));
    },
    $isDiagnosticable: 1,
    $isMenuSerializableShortcut: 1,
    $isShortcutActivator: 1
  };
  A._ActivatorIntentPair.prototype = {
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("activator", this.activator.debugDescribeKeys$0(), true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.String));
      properties.add$1(0, E.DiagnosticsProperty$("intent", this.intent, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Intent));
    },
    $isDiagnosticable: 1
  };
  A.ShortcutManager.prototype = {
    ShortcutManager$2$modal$shortcuts(modal, shortcuts) {
      E.ChangeNotifier_maybeDispatchObjectCreation(this);
    },
    get$shortcuts() {
      return this._shortcuts;
    },
    set$shortcuts(value) {
      var _this = this;
      type$.Map_ShortcutActivator_Intent._as(value);
      if (!B.boolConversionCheck(A.mapEquals(_this._shortcuts, value, type$.ShortcutActivator, type$.Intent))) {
        _this.set$_shortcuts(value);
        _this.set$_indexedShortcutsCache(null);
        _this.notifyListeners$0();
      }
    },
    get$_indexedShortcuts() {
      var t1 = this._indexedShortcutsCache;
      if (t1 == null) {
        t1 = A.ShortcutManager__indexShortcuts(this.get$shortcuts());
        this.set$_indexedShortcutsCache(t1);
      }
      return t1;
    },
    _getCandidates$1(key) {
      var t1, t2;
      type$.LogicalKeyboardKey._as(key);
      t1 = J.$index$asx(this.get$_indexedShortcuts(), key);
      if (t1 == null)
        t1 = B._setArrayType([], type$.JSArray__ActivatorIntentPair);
      t1 = B.List_List$of(t1, true, type$._ActivatorIntentPair);
      t2 = J.$index$asx(this.get$_indexedShortcuts(), null);
      J.addAll$1$ax(t1, t2 == null ? B._setArrayType([], type$.JSArray__ActivatorIntentPair) : t2);
      return t1;
    },
    _find$2($event, state) {
      var t1, t2;
      type$.KeyEvent._as($event);
      type$.HardwareKeyboard._as(state);
      for (t1 = J.get$iterator$ax(this._getCandidates$1($event.logicalKey)); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current();
        if (B.boolConversionCheck(t2.activator.accepts$2($event, state)))
          return t2.intent;
      }
      return null;
    },
    handleKeypress$2(context, $event) {
      var matchedIntent, t1, primaryContext, action, _0_0, _0_1, _0_2_isSet, invokeResult, _0_2, enabled, _null = null;
      type$.BuildContext._as(context);
      matchedIntent = this._find$2(type$.KeyEvent._as($event), A.HardwareKeyboard_instance());
      if (matchedIntent != null) {
        t1 = E.primaryFocus();
        primaryContext = t1 == null ? _null : t1.get$context();
        if (primaryContext != null) {
          action = A.Actions_maybeFind(primaryContext, matchedIntent, type$.Intent);
          if (action != null) {
            _0_0 = A.Actions_of(primaryContext).invokeActionIfEnabled$3(action, matchedIntent, primaryContext);
            _0_1 = _0_0._0;
            t1 = _0_1;
            _0_2_isSet = B._isBool(t1);
            invokeResult = _null;
            if (_0_2_isSet) {
              _0_2 = _0_0._1;
              invokeResult = _0_2;
              enabled = _0_1;
            } else
              enabled = _null;
            if (!_0_2_isSet)
              throw B.wrapException(B.StateError$("Pattern matching error"));
            if (B.boolConversionCheck(enabled))
              return action.toKeyEventResult$2(matchedIntent, invokeResult);
          }
        }
      }
      return D.KeyEventResult_1;
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Diagnosticable$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("shortcuts", this.get$shortcuts(), true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Map_ShortcutActivator_Intent));
      properties.add$1(0, E.FlagProperty$("modal", false, _null, "modal", D.DiagnosticLevel_3, false, false));
    },
    set$_shortcuts(_shortcuts) {
      this._shortcuts = type$.Map_ShortcutActivator_Intent._as(_shortcuts);
    },
    set$_indexedShortcutsCache(_indexedShortcutsCache) {
      this._indexedShortcutsCache = type$.nullable_Map_of_nullable_LogicalKeyboardKey_and_List__ActivatorIntentPair._as(_indexedShortcutsCache);
    },
    $isListenable: 1,
    $isChangeNotifier: 1,
    $isDiagnosticable: 1
  };
  A.Shortcuts.prototype = {
    get$shortcuts() {
      var t1 = this.manager;
      return t1 == null ? this._shortcuts : t1.get$shortcuts();
    },
    createState$0() {
      return A._ShortcutsState$();
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("manager", _this.manager, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ShortcutManager));
      t1 = _this.get$shortcuts();
      t2 = _this.debugLabel;
      t3 = t2 == null ? _null : J.get$isNotEmpty$asx(t2);
      properties.add$1(0, A.ShortcutMapProperty$("shortcuts", t1, B.boolConversionCheck(t3 == null ? false : t3) ? t2 : _null));
    }
  };
  A._ShortcutsState.prototype = {
    get$manager() {
      var t1 = this.get$widget().manager;
      if (t1 == null) {
        t1 = this._internalManager;
        t1.toString;
      }
      return t1;
    },
    dispose$0() {
      var t1 = this._internalManager;
      if (t1 != null)
        t1.dispose$0();
      this.super$State$dispose();
    },
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState0();
      if (_this.get$widget().manager == null) {
        t1 = A.ShortcutManager$();
        _this._internalManager = t1;
        t1.set$shortcuts(_this.get$widget().get$shortcuts());
      }
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      type$.Shortcuts._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      if (!B.boolConversionCheck(J.$eq$(_this.get$widget().manager, oldWidget.manager)))
        if (_this.get$widget().manager != null) {
          t1 = _this._internalManager;
          if (t1 != null)
            t1.dispose$0();
          _this._internalManager = null;
        } else if (_this._internalManager == null)
          _this._internalManager = A.ShortcutManager$();
      t1 = _this._internalManager;
      if (t1 != null)
        t1.set$shortcuts(_this.get$widget().get$shortcuts());
    },
    _handleOnKeyEvent$2(node, $event) {
      var t1, t2;
      type$.FocusNode._as(node);
      type$.KeyEvent._as($event);
      if (node.get$context() == null)
        return D.KeyEventResult_1;
      t1 = this.get$manager();
      t2 = node.get$context();
      t2.toString;
      return t1.handleKeypress$2(t2, $event);
    },
    build$1(context) {
      var t1, _null = null;
      type$.BuildContext._as(context);
      t1 = B.S(C.Type_Shortcuts_GZK);
      return E.Focus$(false, false, this.get$widget().child, t1, _null, _null, _null, true, _null, _null, _null, this.get$_handleOnKeyEvent(), _null, _null);
    }
  };
  A.ShortcutRegistry.prototype = {
    ShortcutRegistry$0() {
      E.ChangeNotifier_maybeDispatchObjectCreation(this);
    },
    dispose$0() {
      this.super$ChangeNotifier$dispose();
    },
    get$shortcuts() {
      var t2,
        t1 = B.LinkedHashMap_LinkedHashMap$_empty(type$.ShortcutActivator, type$.Intent);
      for (t2 = J.get$iterator$ax(this._registeredShortcuts.get$entries()); B.boolConversionCheck(t2.moveNext$0());)
        t1.addAll$1(0, t2.get$current().value);
      return t1;
    },
    $isListenable: 1,
    $isChangeNotifier: 1
  };
  A.ShortcutRegistrar.prototype = {
    createState$0() {
      return A._ShortcutRegistrarState$();
    }
  };
  A._ShortcutRegistrarState.prototype = {
    initState$0() {
      this.super$State$initState0();
      this.registry.addListener$1(this.get$_shortcutsChanged());
    },
    _shortcutsChanged$0() {
      this.manager.set$shortcuts(this.registry.get$shortcuts());
    },
    dispose$0() {
      var _this = this,
        t1 = _this.registry;
      t1.removeListener$1(_this.get$_shortcutsChanged());
      t1.dispose$0();
      _this.manager.dispose$0();
      _this.super$State$dispose();
    },
    build$1(context) {
      type$.BuildContext._as(context);
      return A._ShortcutRegistrarScope$(A.Shortcuts$manager(this.get$widget().child, this.manager), this.registry);
    }
  };
  A._ShortcutRegistrarScope.prototype = {
    updateShouldNotify$1(oldWidget) {
      return !B.boolConversionCheck(J.$eq$(this.registry, type$._ShortcutRegistrarScope._as(oldWidget).registry));
    }
  };
  A._ShortcutManager_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A._ShortcutManager_Object_Diagnosticable_ChangeNotifier.prototype = {$isListenable: 1, $isChangeNotifier: 1, $isDiagnosticable: 1};
  A._ShortcutRegistry_Object_ChangeNotifier.prototype = {$isListenable: 1, $isChangeNotifier: 1};
  A._SingleActivator_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A._SingleActivator_Object_Diagnosticable_MenuSerializableShortcut.prototype = {$isDiagnosticable: 1, $isMenuSerializableShortcut: 1, $isShortcutActivator: 1};
  A.__ActivatorIntentPair_Object_Diagnosticable.prototype = {$isDiagnosticable: 1};
  A.SnapshotMode.prototype = {
    _enumToString$0() {
      return "SnapshotMode." + B.S(this._core$_name);
    }
  };
  A.SnapshotController.prototype = {
    get$allowSnapshotting() {
      return this._allowSnapshotting;
    },
    set$allowSnapshotting(value) {
      B._asBool(value);
      if (value === this.get$allowSnapshotting())
        return;
      this._allowSnapshotting = value;
      this.notifyListeners$0();
    }
  };
  A.SnapshotWidget.prototype = {
    createRenderObject$1(context) {
      var _this = this;
      type$.BuildContext._as(context);
      A.debugCheckHasMediaQuery(context);
      return A._RenderSnapshotWidget$(_this.autoresize, _this.controller, A.MediaQuery_devicePixelRatioOf(context), _this.mode, _this.painter);
    },
    updateRenderObject$2(context, renderObject) {
      var _this = this;
      type$.BuildContext._as(context);
      type$.RenderObject._as(renderObject);
      A.debugCheckHasMediaQuery(context);
      type$._RenderSnapshotWidget._as(renderObject);
      renderObject.set$controller(_this.controller);
      renderObject.set$mode(_this.mode);
      renderObject.set$devicePixelRatio(A.MediaQuery_devicePixelRatioOf(context));
      renderObject.set$painter(_this.painter);
      renderObject.set$autoresize(_this.autoresize);
    }
  };
  A._RenderSnapshotWidget.prototype = {
    get$devicePixelRatio() {
      return this._snapshot_widget$_devicePixelRatio;
    },
    set$devicePixelRatio(value) {
      var t1, _this = this;
      B._asDouble(value);
      if (value === _this.get$devicePixelRatio())
        return;
      _this._snapshot_widget$_devicePixelRatio = value;
      t1 = _this._childRaster;
      if (t1 == null)
        return;
      else {
        t1.dispose$0();
        _this._childRaster = null;
        _this.markNeedsPaint$0();
      }
    },
    get$painter() {
      return this._snapshot_widget$_painter;
    },
    set$painter(value) {
      var oldPainter, t1, _this = this;
      type$.SnapshotPainter._as(value);
      if (value === _this.get$painter())
        return;
      oldPainter = _this.get$painter();
      t1 = _this.get$markNeedsPaint();
      oldPainter.removeListener$1(t1);
      _this._snapshot_widget$_painter = value;
      if (!B.boolConversionCheck(J.$eq$(oldPainter.get$runtimeType(0), J.get$runtimeType$(_this.get$painter()))) || B.boolConversionCheck(_this.get$painter().shouldRepaint$1(oldPainter)))
        _this.markNeedsPaint$0();
      if (B.boolConversionCheck(_this.get$attached()))
        _this.get$painter().addListener$1(t1);
    },
    get$controller() {
      return this._snapshot_widget$_controller;
    },
    set$controller(value) {
      var t1, oldValue, _this = this;
      type$.SnapshotController._as(value);
      if (value === _this.get$controller())
        return;
      t1 = _this.get$_onRasterValueChanged();
      _this.get$controller().removeListener$1(t1);
      oldValue = _this.get$controller().get$allowSnapshotting();
      _this._snapshot_widget$_controller = value;
      if (B.boolConversionCheck(_this.get$attached())) {
        _this.get$controller().addListener$1(t1);
        if (oldValue !== _this.get$controller().get$allowSnapshotting())
          _this._onRasterValueChanged$0();
      }
    },
    get$mode() {
      return this._snapshot_widget$_mode;
    },
    set$mode(value) {
      type$.SnapshotMode._as(value);
      if (value === this._snapshot_widget$_mode)
        return;
      this._snapshot_widget$_mode = value;
      this.markNeedsPaint$0();
    },
    get$autoresize() {
      return this._autoresize;
    },
    set$autoresize(value) {
      B._asBool(value);
      if (value === this.get$autoresize())
        return;
      this._autoresize = value;
      this.markNeedsPaint$0();
    },
    attach$1(owner) {
      var _this = this;
      type$.PipelineOwner._as(owner);
      _this.get$controller().addListener$1(_this.get$_onRasterValueChanged());
      _this.get$painter().addListener$1(_this.get$markNeedsPaint());
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach(owner);
    },
    detach$0() {
      var t1, _this = this;
      _this._disableSnapshotAttempt = false;
      _this.get$controller().removeListener$1(_this.get$_onRasterValueChanged());
      _this.get$painter().removeListener$1(_this.get$markNeedsPaint());
      t1 = _this._childRaster;
      if (t1 != null)
        t1.dispose$0();
      _this._childRasterSize = _this._childRaster = null;
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach();
    },
    dispose$0() {
      var t1, _this = this;
      _this.get$controller().removeListener$1(_this.get$_onRasterValueChanged());
      _this.get$painter().removeListener$1(_this.get$markNeedsPaint());
      t1 = _this._childRaster;
      if (t1 != null)
        t1.dispose$0();
      _this._childRasterSize = _this._childRaster = null;
      _this.super$RenderObject$dispose();
    },
    _onRasterValueChanged$0() {
      var t1, _this = this;
      _this._disableSnapshotAttempt = false;
      t1 = _this._childRaster;
      if (t1 != null)
        t1.dispose$0();
      _this._childRasterSize = _this._childRaster = null;
      _this.markNeedsPaint$0();
    },
    _paintAndDetachToImage$0() {
      var image, _this = this,
        offsetLayer = E.OffsetLayer$(D.Offset_0_0),
        context = E.PaintingContext$(offsetLayer, D.Offset_0_0.$and(0, _this.get$size()));
      _this.super$RenderProxyBoxMixin$paint(context, D.Offset_0_0);
      context.stopRecordingIfNeeded$0();
      if (!B.boolConversionCheck(J.$eq$(_this.get$mode(), C.SnapshotMode_2)) && !B.boolConversionCheck(offsetLayer.supportsRasterization$0())) {
        offsetLayer.dispose$0();
        if (B.boolConversionCheck(J.$eq$(_this.get$mode(), C.SnapshotMode_1)))
          throw B.wrapException(E.FlutterError_FlutterError("SnapshotWidget used with a child that contains a PlatformView."));
        _this._disableSnapshotAttempt = true;
        return null;
      }
      image = offsetLayer.toImageSync$2$pixelRatio(D.Offset_0_0.$and(0, _this.get$size()), _this.get$devicePixelRatio());
      offsetLayer.dispose$0();
      _this.set$_lastCachedSize(_this.get$size());
      return image;
    },
    paint$2(context, offset) {
      var t1, t2, t3, t4, _this = this;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      if (B.boolConversionCheck(J.get$isEmpty$asx(_this.get$size()))) {
        t1 = _this._childRaster;
        if (t1 != null)
          t1.dispose$0();
        _this._childRasterSize = _this._childRaster = null;
        return;
      }
      if (!B.boolConversionCheck(_this.get$controller().get$allowSnapshotting()) || B.boolConversionCheck(_this._disableSnapshotAttempt)) {
        t1 = _this._childRaster;
        if (t1 != null)
          t1.dispose$0();
        _this._childRasterSize = _this._childRaster = null;
        _this.get$painter().paint$4(context, offset, _this.get$size(), E.RenderProxyBoxMixin.prototype.get$paint.call(_this));
        return;
      }
      if (B.boolConversionCheck(_this.get$autoresize()) && !B.boolConversionCheck(J.$eq$(_this.get$size(), _this._lastCachedSize)) && _this._lastCachedSize != null) {
        t1 = _this._childRaster;
        if (t1 != null)
          t1.dispose$0();
        _this._childRaster = null;
      }
      if (_this._childRaster == null) {
        _this.set$_childRaster(_this._paintAndDetachToImage$0());
        _this.set$_childRasterSize(J.$mul$ns(_this.get$size(), _this.get$devicePixelRatio()));
      }
      if (_this._childRaster == null)
        _this.get$painter().paint$4(context, offset, _this.get$size(), E.RenderProxyBoxMixin.prototype.get$paint.call(_this));
      else {
        t1 = _this.get$painter();
        t2 = _this.get$size();
        t3 = _this._childRaster;
        t3.toString;
        t4 = _this._childRasterSize;
        t4.toString;
        t1.paintSnapshot$6(context, offset, t2, t3, t4, _this.get$devicePixelRatio());
      }
    },
    set$_childRaster(_childRaster) {
      this._childRaster = type$.nullable_Image._as(_childRaster);
    },
    set$_childRasterSize(_childRasterSize) {
      this._childRasterSize = type$.nullable_Size._as(_childRasterSize);
    },
    set$_lastCachedSize(_lastCachedSize) {
      this._lastCachedSize = type$.nullable_Size._as(_lastCachedSize);
    }
  };
  A.SnapshotPainter.prototype = {
    SnapshotPainter$0() {
      E.ChangeNotifier_maybeDispatchObjectCreation(this);
    }
  };
  A._DefaultSnapshotPainter.prototype = {
    get$_count() {
      return B.throwExpression(B.NoSuchMethodError_NoSuchMethodError$withInvocation(this, B.createUnmangledInvocationMirror(F.Symbol__count, "get$_snapshot_widget$_count", 1, [], [], 0)));
    },
    set$_count(value) {
      B.throwExpression(B.NoSuchMethodError_NoSuchMethodError$withInvocation(this, B.createUnmangledInvocationMirror(F.Symbol_gg4, "set$_count_", 2, [B._asInt(value)], [], 0)));
    },
    get$_creationDispatched() {
      return B.throwExpression(B.NoSuchMethodError_NoSuchMethodError$withInvocation(this, B.createUnmangledInvocationMirror(F.Symbol__creationDispatched, "get$_snapshot_widget$_creationDispatched", 1, [], [], 0)));
    },
    set$_creationDispatched(value) {
      B.throwExpression(B.NoSuchMethodError_NoSuchMethodError$withInvocation(this, B.createUnmangledInvocationMirror(F.Symbol_gg9, "set$_creationDispatched_", 2, [B._asBool(value)], [], 0)));
    },
    get$_change_notifier$_listeners() {
      return B.throwExpression(B.NoSuchMethodError_NoSuchMethodError$withInvocation(this, B.createUnmangledInvocationMirror(F.Symbol__listeners, "get$_snapshot_widget$_listeners", 1, [], [], 0)));
    },
    set$_change_notifier$_listeners(value) {
      B.throwExpression(B.NoSuchMethodError_NoSuchMethodError$withInvocation(this, B.createUnmangledInvocationMirror(F.Symbol_JhD, "set$_listeners_", 2, [type$.List_of_nullable_void_Function._as(value)], [], 0)));
    },
    get$_notificationCallStackDepth() {
      return B.throwExpression(B.NoSuchMethodError_NoSuchMethodError$withInvocation(this, B.createUnmangledInvocationMirror(F.Symbol__notificationCallStackDepth, "get$_snapshot_widget$_notificationCallStackDepth", 1, [], [], 0)));
    },
    set$_notificationCallStackDepth(value) {
      B.throwExpression(B.NoSuchMethodError_NoSuchMethodError$withInvocation(this, B.createUnmangledInvocationMirror(F.Symbol_7BT, "set$_notificationCallStackDepth_", 2, [B._asInt(value)], [], 0)));
    },
    get$_reentrantlyRemovedListeners() {
      return B.throwExpression(B.NoSuchMethodError_NoSuchMethodError$withInvocation(this, B.createUnmangledInvocationMirror(F.Symbol__reentrantlyRemovedListeners, "get$_snapshot_widget$_reentrantlyRemovedListeners", 1, [], [], 0)));
    },
    set$_reentrantlyRemovedListeners(value) {
      B.throwExpression(B.NoSuchMethodError_NoSuchMethodError$withInvocation(this, B.createUnmangledInvocationMirror(F.Symbol_Ri2, "set$_reentrantlyRemovedListeners_", 2, [B._asInt(value)], [], 0)));
    },
    _removeAt$1(index) {
      return B.throwExpression(B.NoSuchMethodError_NoSuchMethodError$withInvocation(this, B.createUnmangledInvocationMirror(F.Symbol__removeAt, "_snapshot_widget$_removeAt$1", 0, [B._asInt(index)], [], 0)));
    },
    addListener$1(listener) {
      type$.void_Function._as(listener);
    },
    paint$4(context, offset, size, painter) {
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      type$.Size._as(size);
      type$.void_Function_PaintingContext_Offset._as(painter).call$2(context, offset);
    },
    paintSnapshot$6(context, offset, size, image, sourceSize, pixelRatio) {
      var t1, src, dst, paint;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      t1 = type$.Size;
      t1._as(size);
      type$.Image._as(image);
      t1._as(sourceSize);
      B._asDouble(pixelRatio);
      src = E.Rect$fromLTWH(0, 0, sourceSize.get$width(), sourceSize.get$height());
      dst = E.Rect$fromLTWH(offset.get$dx(), offset.get$dy(), size.get$width(), size.get$height());
      paint = E.Paint_Paint();
      paint.set$filterQuality(D.FilterQuality_2);
      context.get$canvas().drawImageRect$4(image, src, dst, paint);
    },
    removeListener$1(listener) {
      type$.void_Function._as(listener);
    },
    shouldRepaint$1(oldPainter) {
      type$._DefaultSnapshotPainter._as(oldPainter);
      return false;
    },
    $isListenable: 1,
    $isChangeNotifier: 1,
    $isSnapshotPainter: 1
  };
  A.TapRegionSurface.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A.RenderTapRegionSurface$();
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$.RenderProxyBoxWithHitTestBehavior._as(renderObject);
    }
  };
  A.RenderTapRegionSurface.prototype = {
    hitTest$2$position(result, position) {
      var hitTarget, entry, _this = this;
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      if (!B.boolConversionCheck(J.contains$1$asx(_this.get$size(), position)))
        return false;
      hitTarget = B.boolConversionCheck(_this.hitTestChildren$2$position(result, position)) || B.boolConversionCheck(_this.hitTestSelf$1(position));
      if (hitTarget) {
        entry = E.BoxHitTestEntry$(_this, position);
        J.$indexSet$ax(_this._cachedResults, entry, result);
        result.add$1(0, entry);
      }
      return hitTarget;
    },
    handleEvent$2($event, entry) {
      var t1, result, t2, hitRegions, t3, t4, t5, t6, outsideRegions, consumeOutsideTaps, _this = this;
      type$.PointerEvent._as($event);
      type$.HitTestEntry_HitTestTarget._as(entry);
      if (!type$.PointerDownEvent._is($event))
        return;
      t1 = _this._registeredRegions;
      if (B.boolConversionCheck(J.get$isEmpty$asx(t1)))
        return;
      result = J.$index$asx(_this._cachedResults, entry);
      if (result == null)
        return;
      t2 = type$.RenderTapRegion;
      hitRegions = J.toSet$0$ax(J.cast$1$0$ax(_this._getRegionsHit$2(t1, result.get$path()), t2));
      t2 = B.LinkedHashSet_LinkedHashSet$_empty(t2);
      for (t3 = hitRegions.get$iterator(hitRegions), t4 = _this._groupIdToRegions, t5 = J.getInterceptor$asx(t4); B.boolConversionCheck(t3.moveNext$0());) {
        t6 = t3.get$current();
        if (t6.get$groupId() == null)
          t2.add$1(0, t6);
        else {
          t6 = t5.$index(t4, t6.get$groupId());
          t6.toString;
          t2.addAll$1(0, t6);
        }
      }
      outsideRegions = t1.difference$1(t2);
      for (t1 = outsideRegions.get$iterator(outsideRegions), consumeOutsideTaps = false; B.boolConversionCheck(t1.moveNext$0());) {
        t3 = t1.get$current();
        if (B.boolConversionCheck(t3.get$consumeOutsideTaps()))
          consumeOutsideTaps = true;
        t3 = t3.get$onTapOutside();
        if (t3 != null)
          t3.call$1($event);
      }
      for (t1 = t2.get$iterator(0); B.boolConversionCheck(t1.moveNext$0());) {
        t2 = t1.get$current().get$onTapInside();
        if (t2 != null)
          t2.call$1($event);
      }
      if (consumeOutsideTaps)
        J.add$2$ax(E.GestureBinding_instance().GestureBinding_gestureArena, $event.get$pointer(), A._DummyTapRecognizer$()).resolve$1(D.GestureDisposition_0);
    },
    _getRegionsHit$2(detectors, hitTestPath) {
      var t1, t2, t3, t4, _0_0;
      type$.Set_RenderTapRegion._as(detectors);
      type$.Iterable_HitTestEntry_HitTestTarget._as(hitTestPath);
      t1 = B.LinkedHashSet_LinkedHashSet$_empty(type$.HitTestTarget);
      for (t2 = J.get$iterator$ax(hitTestPath), t3 = this._registeredRegions, t4 = J.getInterceptor$asx(t3); B.boolConversionCheck(t2.moveNext$0());) {
        _0_0 = t2.get$current().target;
        if (B.boolConversionCheck(t4.contains$1(t3, _0_0)))
          t1.add$1(0, _0_0);
      }
      return t1;
    },
    $isTapRegionRegistry: 1
  };
  A._DummyTapRecognizer.prototype = {
    acceptGesture$1(pointer) {
      B._asInt(pointer);
    },
    rejectGesture$1(pointer) {
      B._asInt(pointer);
    }
  };
  A.DefaultTextStyle.prototype = {
    updateShouldNotify$1(oldWidget) {
      var _this = this;
      type$.DefaultTextStyle._as(oldWidget);
      return !B.boolConversionCheck(J.$eq$(_this.style, oldWidget.style)) || !B.boolConversionCheck(J.$eq$(_this.textAlign, oldWidget.textAlign)) || !B.boolConversionCheck(J.$eq$(_this.softWrap, oldWidget.softWrap)) || !B.boolConversionCheck(J.$eq$(_this.overflow, oldWidget.overflow)) || !B.boolConversionCheck(J.$eq$(_this.maxLines, oldWidget.maxLines)) || !B.boolConversionCheck(J.$eq$(_this.textWidthBasis, oldWidget.textWidthBasis)) || !B.boolConversionCheck(J.$eq$(_this.textHeightBehavior, oldWidget.textHeightBehavior));
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Widget$debugFillProperties(properties);
      _this.style.debugFillProperties$1(properties);
      properties.add$1(0, E.EnumProperty$("textAlign", _this.textAlign, _null, D.DiagnosticLevel_3, type$.TextAlign));
      properties.add$1(0, E.FlagProperty$("softWrap", _null, string$.no_wra, "wrapping at box width", D.DiagnosticLevel_3, true, _this.softWrap));
      properties.add$1(0, E.EnumProperty$("overflow", _this.overflow, _null, D.DiagnosticLevel_3, type$.TextOverflow));
      properties.add$1(0, E.IntProperty$("maxLines", _this.maxLines, _null, _null, D.DiagnosticLevel_3, _null));
      properties.add$1(0, E.EnumProperty$("textWidthBasis", _this.textWidthBasis, C.TextWidthBasis_0, D.DiagnosticLevel_3, type$.TextWidthBasis));
      properties.add$1(0, E.DiagnosticsProperty$("textHeightBehavior", _this.textHeightBehavior, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextHeightBehavior));
    }
  };
  A._NullWidget2.prototype = {
    build$1(context) {
      type$.BuildContext._as(context);
      throw B.wrapException(E.FlutterError_FlutterError("A DefaultTextStyle constructed with DefaultTextStyle.fallback cannot be incorporated into the widget tree, it is meant only to provide a fallback value returned by DefaultTextStyle.of() when no enclosing default text style is present in a BuildContext."));
    }
  };
  A.Text0.prototype = {
    build$1(context) {
      var defaultTextStyle, effectiveTextStyle, registrar, t1, result, t2, t3, t4, t5, t6, t7, t8, t9, t10, _this = this, _null = null;
      type$.BuildContext._as(context);
      defaultTextStyle = A.DefaultTextStyle_of(context);
      effectiveTextStyle = _this.style;
      if (effectiveTextStyle == null || B.boolConversionCheck(effectiveTextStyle.inherit))
        effectiveTextStyle = defaultTextStyle.style.merge$1(effectiveTextStyle);
      if (B.boolConversionCheck(A.MediaQuery_boldTextOf(context)))
        effectiveTextStyle = effectiveTextStyle.merge$1(C.TextStyle_W2f);
      registrar = A.SelectionContainer_maybeOf(context);
      $label0$0: {
        t1 = A.MediaQuery_textScalerOf(context);
        break $label0$0;
      }
      result = B._Cell$named("result");
      if (registrar != null) {
        t2 = A.DefaultSelectionStyle_of(context).mouseCursor;
        if (t2 == null)
          t2 = C.SystemMouseCursor_text;
        t3 = _this.textAlign;
        if (t3 == null)
          t3 = defaultTextStyle.textAlign;
        if (t3 == null)
          t3 = D.TextAlign_4;
        t4 = defaultTextStyle.softWrap;
        t5 = effectiveTextStyle == null ? _null : effectiveTextStyle.overflow;
        if (t5 == null)
          t5 = defaultTextStyle.overflow;
        t6 = defaultTextStyle.maxLines;
        t7 = defaultTextStyle.textWidthBasis;
        t8 = defaultTextStyle.textHeightBehavior;
        if (t8 == null)
          t8 = A.DefaultTextHeightBehavior_maybeOf(context);
        t9 = A.DefaultSelectionStyle_of(context).selectionColor;
        if (t9 == null)
          t9 = C.Color_2155905152;
        t10 = _this.textSpan;
        t10 = t10 != null ? B._setArrayType([t10], type$.JSArray_InlineSpan) : _null;
        result.set$value(A.MouseRegion$(A._SelectableTextContainer$(_null, t6, t5, t9, t4, _null, A.TextSpan$(t10, effectiveTextStyle, _this.data), t3, _null, t8, t1, t7), t2, _null, _null));
      } else {
        t2 = _this.textAlign;
        if (t2 == null)
          t2 = defaultTextStyle.textAlign;
        if (t2 == null)
          t2 = D.TextAlign_4;
        t3 = defaultTextStyle.softWrap;
        t4 = effectiveTextStyle == null ? _null : effectiveTextStyle.overflow;
        if (t4 == null)
          t4 = defaultTextStyle.overflow;
        t5 = defaultTextStyle.maxLines;
        t6 = defaultTextStyle.textWidthBasis;
        t7 = defaultTextStyle.textHeightBehavior;
        if (t7 == null)
          t7 = A.DefaultTextHeightBehavior_maybeOf(context);
        t8 = A.DefaultSelectionStyle_of(context).selectionColor;
        if (t8 == null)
          t8 = C.Color_2155905152;
        t9 = _this.textSpan;
        t9 = t9 != null ? B._setArrayType([t9], type$.JSArray_InlineSpan) : _null;
        result.set$value(A.RichText$(_null, _null, t5, t4, t8, _null, t3, _null, A.TextSpan$(t9, effectiveTextStyle, _this.data), t2, _null, t7, t1, t6));
      }
      return result.readLocal$1$0(type$.Widget);
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.StringProperty$("data", _this.data, D.C__NoDefaultValue, true, false));
      t1 = _this.textSpan;
      if (t1 != null)
        properties.add$1(0, t1.toDiagnosticsNode$2$name$style("textSpan", D.DiagnosticsTreeStyle_4));
      t1 = _this.style;
      if (t1 != null)
        t1.debugFillProperties$1(properties);
      properties.add$1(0, E.EnumProperty$("textAlign", _this.textAlign, _null, D.DiagnosticLevel_3, type$.TextAlign));
      properties.add$1(0, E.EnumProperty$("textDirection", _null, _null, D.DiagnosticLevel_3, type$.TextDirection));
      properties.add$1(0, E.DiagnosticsProperty$("locale", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Locale));
      properties.add$1(0, E.FlagProperty$("softWrap", _null, string$.no_wra, "wrapping at box width", D.DiagnosticLevel_3, true, _null));
      properties.add$1(0, E.EnumProperty$("overflow", _null, _null, D.DiagnosticLevel_3, type$.TextOverflow));
      properties.add$1(0, E.DoubleProperty$("textScaleFactor", _null, _null, _null, D.DiagnosticLevel_3, _null, _null));
      properties.add$1(0, E.IntProperty$("maxLines", _null, _null, _null, D.DiagnosticLevel_3, _null));
      properties.add$1(0, E.EnumProperty$("textWidthBasis", _null, _null, D.DiagnosticLevel_3, type$.TextWidthBasis));
      properties.add$1(0, E.DiagnosticsProperty$("textHeightBehavior", _null, true, _null, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextHeightBehavior));
    }
  };
  A._SelectableTextContainer.prototype = {
    createState$0() {
      return A._SelectableTextContainerState$();
    }
  };
  A._SelectableTextContainerState.prototype = {
    get$_selectionDelegate() {
      return this.___SelectableTextContainerState__selectionDelegate_F;
    },
    set$_selectionDelegate(value) {
      type$._SelectableTextContainerDelegate._as(value);
      this.___SelectableTextContainerState__selectionDelegate_F !== $ && B.throwLateFieldAI("_selectionDelegate");
      this.___SelectableTextContainerState__selectionDelegate_F = value;
    },
    initState$0() {
      this.super$State$initState0();
      this.set$_selectionDelegate(A._SelectableTextContainerDelegate$(this._textKey));
    },
    dispose$0() {
      this.get$_selectionDelegate().dispose$0();
      this.super$State$dispose();
    },
    build$1(context) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, _this = this;
      type$.BuildContext._as(context);
      t1 = _this.get$_selectionDelegate();
      t2 = _this.get$widget().textAlign;
      t3 = _this.get$widget().textDirection;
      t4 = _this.get$widget().locale;
      t5 = _this.get$widget().softWrap;
      t6 = _this.get$widget().overflow;
      t7 = _this.get$widget().textScaler;
      t8 = _this.get$widget().maxLines;
      t9 = _this.get$widget().strutStyle;
      t10 = _this.get$widget().textWidthBasis;
      t11 = _this.get$widget().textHeightBehavior;
      return A.SelectionContainer$(A._RichText$(t4, t8, t6, _this.get$widget().selectionColor, t5, t9, _this.get$widget().text, t2, t3, t11, _this._textKey, t7, t10), t1);
    }
  };
  A._RichText.prototype = {
    build$1(context) {
      var _this = this;
      return A.RichText$(_this.textKey, _this.locale, _this.maxLines, _this.overflow, _this.selectionColor, A.SelectionContainer_maybeOf(type$.BuildContext._as(context)), _this.softWrap, _this.strutStyle, _this.text, _this.textAlign, _this.textDirection, _this.textHeightBehavior, _this.textScaler, _this.textWidthBasis);
    }
  };
  A._SelectableTextContainerDelegate.prototype = {
    get$paragraph() {
      var t1 = this._textKey.get$currentContext().findRenderObject$0();
      t1.toString;
      return type$.RenderParagraph._as(t1);
    },
    handleSelectParagraph$1($event) {
      var _this = this,
        result = _this._handleSelectParagraph$1(type$.SelectParagraphSelectionEvent._as($event));
      if (!B.boolConversionCheck(J.$eq$(_this.currentSelectionStartIndex, -1)))
        J.add$1$ax(_this._hasReceivedStartEvent, J.$index$asx(_this.selectables, _this.currentSelectionStartIndex));
      if (!B.boolConversionCheck(J.$eq$(_this.currentSelectionEndIndex, -1)))
        J.add$1$ax(_this._hasReceivedEndEvent, J.$index$asx(_this.selectables, _this.currentSelectionEndIndex));
      _this._updateLastEdgeEventsFromGeometries$0();
      return result;
    },
    _handleSelectParagraph$1($event) {
      var index, t1, t2, t3, foundStart, lastNextIndex, synthesizedEvent, result, existingGeometry, lastSelectionResult, selectionAtStartOfSelectable, startIndex, i, _this = this;
      type$.SelectParagraphSelectionEvent._as($event);
      if (B.boolConversionCheck($event.absorb)) {
        index = 0;
        while (true) {
          t1 = J.get$length$asx(_this.selectables);
          if (typeof t1 !== "number")
            return B.iae(t1);
          if (!(index < t1))
            break;
          _this.dispatchSelectionEventToChild$2(J.$index$asx(_this.selectables, index), $event);
          ++index;
        }
        _this.currentSelectionStartIndex = 0;
        t1 = J.get$length$asx(_this.selectables);
        if (typeof t1 !== "number")
          return t1.$sub();
        _this.set$currentSelectionEndIndex(t1 - 1);
        return C.SelectionResult_0;
      }
      t1 = $event.globalPosition;
      index = 0;
      while (true) {
        t2 = J.get$length$asx(_this.selectables);
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (!(index < t2))
          break;
        if (!B.boolConversionCheck(_this.get$paragraph().selectableBelongsToParagraph$1(J.$index$asx(_this.selectables, index))) && B.boolConversionCheck(J.get$isNotEmpty$asx(J.$index$asx(_this.selectables, index).get$boundingBoxes())))
          for (t2 = J.get$iterator$ax(J.$index$asx(_this.selectables, index).get$boundingBoxes()); B.boolConversionCheck(t2.moveNext$0());) {
            t3 = t2.get$current();
            if (B.boolConversionCheck(E.MatrixUtils_transformRect(J.$index$asx(_this.selectables, index).getTransformTo$1(null), t3).contains$1(0, t1))) {
              _this.currentSelectionStartIndex = _this.currentSelectionEndIndex = index;
              return _this.dispatchSelectionEventToChild$2(J.$index$asx(_this.selectables, index), $event);
            }
          }
        ++index;
      }
      foundStart = false;
      lastNextIndex = null;
      index = 0;
      while (true) {
        t2 = J.get$length$asx(_this.selectables);
        if (typeof t2 !== "number")
          return B.iae(t2);
        if (!(index < t2))
          break;
        c$0: {
          if (!B.boolConversionCheck(_this.get$paragraph().selectableBelongsToParagraph$1(J.$index$asx(_this.selectables, index)))) {
            if (foundStart) {
              synthesizedEvent = A.SelectParagraphSelectionEvent$(true, t1);
              result = _this.dispatchSelectionEventToChild$2(J.$index$asx(_this.selectables, index), synthesizedEvent);
              t2 = J.get$length$asx(_this.selectables);
              if (typeof t2 !== "number")
                return t2.$sub();
              if (t2 - 1 === index) {
                _this.currentSelectionEndIndex = index;
                _this._text$_flushInactiveSelections$0();
                return result;
              }
            }
            break c$0;
          }
          existingGeometry = J.$index$asx(_this.selectables, index).get$value();
          lastSelectionResult = _this.dispatchSelectionEventToChild$2(J.$index$asx(_this.selectables, index), $event);
          t2 = J.get$length$asx(_this.selectables);
          if (typeof t2 !== "number")
            return t2.$sub();
          if (index === t2 - 1 && lastSelectionResult === C.SelectionResult_0) {
            if (foundStart)
              _this.currentSelectionEndIndex = index;
            else
              _this.currentSelectionStartIndex = _this.currentSelectionEndIndex = index;
            return C.SelectionResult_0;
          }
          if (lastSelectionResult === C.SelectionResult_0) {
            if (B.boolConversionCheck(J.$eq$(J.$index$asx(_this.selectables, index).get$value(), existingGeometry)) && !foundStart)
              lastNextIndex = index;
            if (!B.boolConversionCheck(J.$eq$(J.$index$asx(_this.selectables, index).get$value(), existingGeometry)) && !foundStart) {
              selectionAtStartOfSelectable = J.$index$asx(J.$index$asx(_this.selectables, index).get$boundingBoxes(), 0).overlaps$1(J.$index$asx(J.$index$asx(_this.selectables, index).get$value().selectionRects, 0));
              t2 = lastNextIndex == null;
              if (!t2 && selectionAtStartOfSelectable) {
                if (typeof lastNextIndex !== "number")
                  return lastNextIndex.$add();
                startIndex = lastNextIndex + 1;
              } else
                startIndex = t2 && selectionAtStartOfSelectable ? 0 : index;
              for (i = startIndex; i < index; ++i) {
                synthesizedEvent = A.SelectParagraphSelectionEvent$(true, t1);
                _this.dispatchSelectionEventToChild$2(J.$index$asx(_this.selectables, i), synthesizedEvent);
              }
              _this.currentSelectionStartIndex = startIndex;
              foundStart = true;
            }
            break c$0;
          }
          if (index === 0 && lastSelectionResult === C.SelectionResult_1)
            return C.SelectionResult_1;
          if (!B.boolConversionCheck(J.$eq$(J.$index$asx(_this.selectables, index).get$value(), existingGeometry))) {
            if (!foundStart && lastNextIndex == null) {
              i = _this.currentSelectionStartIndex = 0;
              for (; i < index; ++i) {
                synthesizedEvent = A.SelectParagraphSelectionEvent$(true, t1);
                _this.dispatchSelectionEventToChild$2(J.$index$asx(_this.selectables, i), synthesizedEvent);
              }
            }
            _this.currentSelectionEndIndex = index;
            _this._text$_flushInactiveSelections$0();
          }
          return C.SelectionResult_2;
        }
        ++index;
      }
      return C.SelectionResult_2;
    },
    _initSelection$2$isEnd($event, isEnd) {
      var hasOppositeEdge, t1, _0_1, _0_3, _0_5, _0_4, t2, t3, _0_7, _0_4_isSet, _0_8, currentSelectableResult, $forward, newIndex, finalResult, _this = this, _null = null;
      type$.SelectionEdgeUpdateEvent._as($event);
      B._asBool(isEnd);
      hasOppositeEdge = isEnd ? !B.boolConversionCheck(J.$eq$(_this.currentSelectionStartIndex, -1)) : !B.boolConversionCheck(J.$eq$(_this.currentSelectionEndIndex, -1));
      $label0$0: {
        t1 = isEnd;
        _0_1 = t1;
        _0_3 = _0_1;
        B.boolConversionCheck(t1);
        _0_5 = _null;
        _0_4 = _null;
        if (t1) {
          t2 = hasOppositeEdge;
          _0_4 = t2;
          _0_5 = _0_4;
          B.boolConversionCheck(t2);
        } else
          t2 = false;
        t3 = 0;
        if (t2) {
          t1 = _this.currentSelectionStartIndex;
          break $label0$0;
        }
        B.boolConversionCheck(_0_3);
        _0_7 = _null;
        if (_0_3) {
          if (t1) {
            t2 = _0_4;
            _0_4_isSet = t1;
          } else {
            t2 = hasOppositeEdge;
            _0_4 = t2;
            _0_4_isSet = true;
          }
          _0_7 = false === t2;
          t2 = _0_7;
          B.boolConversionCheck(t2);
        } else {
          _0_4_isSet = t1;
          t2 = false;
        }
        if (t2) {
          t1 = t3;
          break $label0$0;
        }
        _0_8 = false === _0_1;
        t2 = _0_8;
        if (B.boolConversionCheck(t2)) {
          if (t1)
            t1 = _0_5;
          else {
            if (_0_4_isSet)
              t1 = _0_4;
            else {
              t1 = hasOppositeEdge;
              _0_4 = t1;
              _0_4_isSet = true;
            }
            _0_5 = true === t1;
            t1 = _0_5;
          }
          B.boolConversionCheck(t1);
        } else
          t1 = false;
        if (t1) {
          t1 = _this.currentSelectionEndIndex;
          break $label0$0;
        }
        if (B.boolConversionCheck(_0_8)) {
          if (_0_3)
            t1 = _0_7;
          else {
            _0_7 = false === (_0_4_isSet ? _0_4 : hasOppositeEdge);
            t1 = _0_7;
          }
          B.boolConversionCheck(t1);
        } else
          t1 = false;
        if (t1) {
          t1 = t3;
          break $label0$0;
        }
        t1 = _null;
      }
      currentSelectableResult = B._Cell$named("currentSelectableResult");
      t2 = type$.SelectionResult;
      $forward = _null;
      newIndex = t1;
      finalResult = $forward;
      while (true) {
        t1 = J.get$length$asx(_this.selectables);
        if (typeof t1 !== "number")
          return B.iae(t1);
        if (!(newIndex < t1 && newIndex >= 0 && finalResult == null))
          break;
        currentSelectableResult.set$value(_this.dispatchSelectionEventToChild$2(J.$index$asx(_this.selectables, newIndex), $event));
        switch (currentSelectableResult.readLocal$1$0(t2)) {
          case C.SelectionResult_2:
          case C.SelectionResult_3:
          case C.SelectionResult_4:
            finalResult = currentSelectableResult.readLocal$1$0(t2);
            break;
          case C.SelectionResult_0:
            if ($forward === false) {
              ++newIndex;
              finalResult = C.SelectionResult_2;
            } else {
              t1 = J.get$length$asx(_this.selectables);
              if (typeof t1 !== "number")
                return t1.$sub();
              if (newIndex === t1 - 1)
                finalResult = currentSelectableResult.readLocal$1$0(t2);
              else {
                ++newIndex;
                $forward = true;
              }
            }
            break;
          case C.SelectionResult_1:
            if ($forward === true) {
              --newIndex;
              finalResult = C.SelectionResult_2;
            } else if (newIndex === 0)
              finalResult = currentSelectableResult.readLocal$1$0(t2);
            else {
              --newIndex;
              $forward = false;
            }
            break;
        }
      }
      if (isEnd)
        _this.currentSelectionEndIndex = newIndex;
      else
        _this.currentSelectionStartIndex = newIndex;
      _this._text$_flushInactiveSelections$0();
      finalResult.toString;
      return finalResult;
    },
    _adjustSelection$2$isEnd($event, isEnd) {
      var isCurrentEdgeWithinViewport, isOppositeEdgeWithinViewport, _0_7, _0_6, t1, _0_6_isSet, _0_7_isSet, _0_4, _0_5, t2, _0_9, t3, _0_4_isSet, _0_5_isSet, _0_9_isSet, _0_10, _0_11, _0_10_isSet, currentSelectableResult, $forward, newIndex, finalResult, forwardSelection, _this = this, _null = null;
      type$.SelectionEdgeUpdateEvent._as($event);
      B._asBool(isEnd);
      isCurrentEdgeWithinViewport = isEnd ? _this.get$value().endSelectionPoint != null : _this.get$value().startSelectionPoint != null;
      isOppositeEdgeWithinViewport = isEnd ? _this.get$value().startSelectionPoint != null : _this.get$value().endSelectionPoint != null;
      $label0$0: {
        B.boolConversionCheck(isEnd);
        _0_7 = _null;
        _0_6 = _null;
        t1 = false;
        if (isEnd) {
          B.boolConversionCheck(isCurrentEdgeWithinViewport);
          if (isCurrentEdgeWithinViewport) {
            B.boolConversionCheck(isOppositeEdgeWithinViewport);
            t1 = isOppositeEdgeWithinViewport;
            _0_6 = t1;
            _0_7 = _0_6;
          }
          _0_6_isSet = isCurrentEdgeWithinViewport;
          _0_7_isSet = _0_6_isSet;
          _0_4 = _0_7_isSet;
          _0_5 = _0_4;
        } else {
          _0_4 = _null;
          _0_5 = _0_4;
          _0_7_isSet = false;
          _0_6_isSet = false;
        }
        t2 = 0;
        if (t1) {
          t1 = _this.currentSelectionEndIndex;
          break $label0$0;
        }
        B.boolConversionCheck(isEnd);
        _0_9 = _null;
        t1 = false;
        if (isEnd) {
          if (isEnd) {
            t3 = _0_5;
            _0_4_isSet = isEnd;
            _0_5_isSet = _0_4_isSet;
          } else {
            t3 = isCurrentEdgeWithinViewport;
            _0_4 = t3;
            _0_5 = _0_4;
            _0_5_isSet = true;
            _0_4_isSet = true;
          }
          B.boolConversionCheck(t3);
          if (t3) {
            if (_0_6_isSet)
              t1 = _0_6;
            else {
              t1 = isOppositeEdgeWithinViewport;
              _0_6 = t1;
              _0_6_isSet = true;
            }
            _0_9 = false === t1;
            t1 = _0_9;
            B.boolConversionCheck(t1);
          }
          _0_9_isSet = t3;
        } else {
          _0_4_isSet = isEnd;
          _0_5_isSet = _0_4_isSet;
          _0_9_isSet = false;
        }
        if (t1) {
          t1 = _this.currentSelectionEndIndex;
          break $label0$0;
        }
        _0_10 = _null;
        t1 = false;
        if (isEnd) {
          if (_0_4_isSet)
            t3 = _0_4;
          else {
            t3 = isCurrentEdgeWithinViewport;
            _0_4 = t3;
            _0_4_isSet = true;
          }
          _0_10 = false === t3;
          t3 = _0_10;
          if (B.boolConversionCheck(t3)) {
            if (_0_7_isSet)
              t1 = _0_7;
            else {
              if (_0_6_isSet)
                t1 = _0_6;
              else {
                t1 = isOppositeEdgeWithinViewport;
                _0_6 = t1;
                _0_6_isSet = true;
              }
              _0_7 = true === t1;
              t1 = _0_7;
              _0_7_isSet = true;
            }
            B.boolConversionCheck(t1);
          }
        }
        if (t1) {
          t1 = _this.currentSelectionStartIndex;
          break $label0$0;
        }
        t1 = false;
        if (isEnd)
          if (B.boolConversionCheck(_0_10)) {
            if (_0_9_isSet)
              t1 = _0_9;
            else {
              if (_0_6_isSet)
                t1 = _0_6;
              else {
                t1 = isOppositeEdgeWithinViewport;
                _0_6 = t1;
                _0_6_isSet = true;
              }
              _0_9 = false === t1;
              t1 = _0_9;
              _0_9_isSet = true;
            }
            B.boolConversionCheck(t1);
          }
        if (t1) {
          t1 = t2;
          break $label0$0;
        }
        _0_11 = false === isEnd;
        t1 = _0_11;
        t3 = false;
        if (B.boolConversionCheck(t1)) {
          if (_0_5_isSet)
            t1 = _0_5;
          else {
            if (_0_4_isSet)
              t1 = _0_4;
            else {
              t1 = isCurrentEdgeWithinViewport;
              _0_4 = t1;
              _0_4_isSet = true;
            }
            _0_5 = true === t1;
            t1 = _0_5;
            _0_5_isSet = true;
          }
          if (B.boolConversionCheck(t1)) {
            if (_0_7_isSet)
              t1 = _0_7;
            else {
              if (_0_6_isSet)
                t1 = _0_6;
              else {
                t1 = isOppositeEdgeWithinViewport;
                _0_6 = t1;
                _0_6_isSet = true;
              }
              _0_7 = true === t1;
              t1 = _0_7;
              _0_7_isSet = true;
            }
            B.boolConversionCheck(t1);
          } else
            t1 = t3;
        } else
          t1 = t3;
        if (t1) {
          t1 = _this.currentSelectionStartIndex;
          break $label0$0;
        }
        B.boolConversionCheck(_0_11);
        t1 = false;
        if (_0_11) {
          if (_0_5_isSet)
            t3 = _0_5;
          else {
            if (_0_4_isSet)
              t3 = _0_4;
            else {
              t3 = isCurrentEdgeWithinViewport;
              _0_4 = t3;
              _0_4_isSet = true;
            }
            _0_5 = true === t3;
            t3 = _0_5;
          }
          if (B.boolConversionCheck(t3)) {
            if (_0_9_isSet)
              t1 = _0_9;
            else {
              if (_0_6_isSet)
                t1 = _0_6;
              else {
                t1 = isOppositeEdgeWithinViewport;
                _0_6 = t1;
                _0_6_isSet = true;
              }
              _0_9 = false === t1;
              t1 = _0_9;
              _0_9_isSet = true;
            }
            B.boolConversionCheck(t1);
          }
        }
        if (t1) {
          t1 = _this.currentSelectionStartIndex;
          break $label0$0;
        }
        t1 = false;
        if (_0_11) {
          if (isEnd) {
            t3 = _0_10;
            _0_10_isSet = isEnd;
          } else {
            if (_0_4_isSet)
              t3 = _0_4;
            else {
              t3 = isCurrentEdgeWithinViewport;
              _0_4 = t3;
              _0_4_isSet = true;
            }
            _0_10 = false === t3;
            t3 = _0_10;
            _0_10_isSet = true;
          }
          if (B.boolConversionCheck(t3)) {
            if (_0_7_isSet)
              t1 = _0_7;
            else {
              if (_0_6_isSet)
                t1 = _0_6;
              else {
                t1 = isOppositeEdgeWithinViewport;
                _0_6 = t1;
                _0_6_isSet = true;
              }
              _0_7 = true === t1;
              t1 = _0_7;
            }
            B.boolConversionCheck(t1);
          }
        } else
          _0_10_isSet = isEnd;
        if (t1) {
          t1 = _this.currentSelectionEndIndex;
          break $label0$0;
        }
        t1 = false;
        if (_0_11) {
          if (_0_10_isSet)
            t3 = _0_10;
          else {
            _0_10 = false === (_0_4_isSet ? _0_4 : isCurrentEdgeWithinViewport);
            t3 = _0_10;
          }
          if (B.boolConversionCheck(t3)) {
            if (_0_9_isSet)
              t1 = _0_9;
            else {
              _0_9 = false === (_0_6_isSet ? _0_6 : isOppositeEdgeWithinViewport);
              t1 = _0_9;
            }
            B.boolConversionCheck(t1);
          }
        }
        if (t1) {
          t1 = t2;
          break $label0$0;
        }
        t1 = _null;
      }
      currentSelectableResult = B._Cell$named("currentSelectableResult");
      t2 = type$.SelectionResult;
      $forward = _null;
      newIndex = t1;
      finalResult = $forward;
      while (true) {
        t1 = J.get$length$asx(_this.selectables);
        if (typeof t1 !== "number")
          return B.iae(t1);
        if (!(newIndex < t1 && newIndex >= 0 && finalResult == null))
          break;
        currentSelectableResult.set$value(_this.dispatchSelectionEventToChild$2(J.$index$asx(_this.selectables, newIndex), $event));
        switch (currentSelectableResult.readLocal$1$0(t2)) {
          case C.SelectionResult_2:
          case C.SelectionResult_3:
          case C.SelectionResult_4:
            finalResult = currentSelectableResult.readLocal$1$0(t2);
            break;
          case C.SelectionResult_0:
            if ($forward === false) {
              ++newIndex;
              finalResult = C.SelectionResult_2;
            } else {
              t1 = J.get$length$asx(_this.selectables);
              if (typeof t1 !== "number")
                return t1.$sub();
              if (newIndex === t1 - 1)
                finalResult = currentSelectableResult.readLocal$1$0(t2);
              else {
                ++newIndex;
                $forward = true;
              }
            }
            break;
          case C.SelectionResult_1:
            if ($forward === true) {
              --newIndex;
              finalResult = C.SelectionResult_2;
            } else if (newIndex === 0)
              finalResult = currentSelectableResult.readLocal$1$0(t2);
            else {
              --newIndex;
              $forward = false;
            }
            break;
        }
      }
      t1 = _this.currentSelectionEndIndex;
      t2 = _this.currentSelectionStartIndex;
      if (isEnd) {
        if (typeof t1 !== "number")
          return t1.$ge();
        if (typeof t2 !== "number")
          return B.iae(t2);
        forwardSelection = t1 >= t2;
        if ($forward != null)
          if (!(!forwardSelection && $forward && newIndex >= t2))
            t2 = forwardSelection && !$forward && newIndex <= t2;
          else
            t2 = true;
        else
          t2 = false;
        if (t2)
          _this.set$currentSelectionStartIndex(t1);
        _this.currentSelectionEndIndex = newIndex;
      } else {
        if (typeof t1 !== "number")
          return t1.$ge();
        if (typeof t2 !== "number")
          return B.iae(t2);
        forwardSelection = t1 >= t2;
        if ($forward != null)
          if (!(!forwardSelection && !$forward && newIndex <= t1))
            t1 = forwardSelection && $forward && newIndex >= t1;
          else
            t1 = true;
        else
          t1 = false;
        if (t1)
          _this.set$currentSelectionEndIndex(t2);
        _this.currentSelectionStartIndex = newIndex;
      }
      _this._text$_flushInactiveSelections$0();
      finalResult.toString;
      return finalResult;
    },
    get$compareOrder() {
      return A.text__SelectableTextContainerDelegate__compareScreenOrder$closure();
    },
    _text$_flushInactiveSelections$0() {
      var skipIndex, t1, t2, t3, skipStart, skipEnd, index, _this = this;
      if (B.boolConversionCheck(J.$eq$(_this.currentSelectionStartIndex, -1)) && B.boolConversionCheck(J.$eq$(_this.currentSelectionEndIndex, -1)))
        return;
      if (B.boolConversionCheck(J.$eq$(_this.currentSelectionStartIndex, -1)) || B.boolConversionCheck(J.$eq$(_this.currentSelectionEndIndex, -1))) {
        skipIndex = B.boolConversionCheck(J.$eq$(_this.currentSelectionStartIndex, -1)) ? _this.currentSelectionEndIndex : _this.currentSelectionStartIndex;
        J.forEach$1$ax(J.where$1$ax(_this.selectables, new A._SelectableTextContainerDelegate__flushInactiveSelections_closure(_this, skipIndex)), new A._SelectableTextContainerDelegate__flushInactiveSelections_closure0(_this));
        return;
      }
      t1 = _this.currentSelectionStartIndex;
      t2 = _this.currentSelectionEndIndex;
      t3 = type$.int;
      skipStart = E.min(t1, t2, t3);
      skipEnd = E.max(t1, t2, t3);
      index = 0;
      while (true) {
        t1 = J.get$length$asx(_this.selectables);
        if (typeof t1 !== "number")
          return B.iae(t1);
        if (!(index < t1))
          break;
        c$0: {
          if (index >= skipStart && index <= skipEnd)
            break c$0;
          _this.dispatchSelectionEventToChild$2(J.$index$asx(_this.selectables, index), C.ClearSelectionEvent_SelectionEventType_2);
        }
        ++index;
      }
    },
    remove$1(_, selectable) {
      type$.Selectable._as(selectable);
      J.remove$1$ax(this._hasReceivedStartEvent, selectable);
      J.remove$1$ax(this._hasReceivedEndEvent, selectable);
      this.super$MultiSelectableSelectionContainerDelegate$remove(0, selectable);
    },
    _updateLastEdgeEventsFromGeometries$0() {
      var start, t1, t2, localStartEdge, end, localEndEdge, _this = this;
      if (!B.boolConversionCheck(J.$eq$(_this.currentSelectionStartIndex, -1)) && B.boolConversionCheck(J.$index$asx(_this.selectables, _this.currentSelectionStartIndex).get$value().get$hasSelection())) {
        start = J.$index$asx(_this.selectables, _this.currentSelectionStartIndex);
        t1 = start.get$value().startSelectionPoint.localPosition;
        t2 = J.$negate$in(start.get$value().startSelectionPoint.lineHeight);
        if (typeof t2 !== "number")
          return t2.$div();
        localStartEdge = J.$add$ansx(t1, E.Offset$(0, t2 / 2));
        _this.set$_lastStartEdgeUpdateGlobalPosition(E.MatrixUtils_transformPoint(start.getTransformTo$1(null), localStartEdge));
      }
      if (!B.boolConversionCheck(J.$eq$(_this.currentSelectionEndIndex, -1)) && B.boolConversionCheck(J.$index$asx(_this.selectables, _this.currentSelectionEndIndex).get$value().get$hasSelection())) {
        end = J.$index$asx(_this.selectables, _this.currentSelectionEndIndex);
        t1 = end.get$value().endSelectionPoint.localPosition;
        t2 = J.$negate$in(end.get$value().endSelectionPoint.lineHeight);
        if (typeof t2 !== "number")
          return t2.$div();
        localEndEdge = J.$add$ansx(t1, E.Offset$(0, t2 / 2));
        _this.set$_lastEndEdgeUpdateGlobalPosition(E.MatrixUtils_transformPoint(end.getTransformTo$1(null), localEndEdge));
      }
    },
    handleSelectAll$1($event) {
      var t1, t2, t3, t4, t5, t6, _this = this,
        result = _this.super$MultiSelectableSelectionContainerDelegate$handleSelectAll(type$.SelectAllSelectionEvent._as($event));
      for (t1 = J.get$iterator$ax(_this.selectables), t2 = _this._hasReceivedStartEvent, t3 = J.getInterceptor$ax(t2), t4 = _this._hasReceivedEndEvent, t5 = J.getInterceptor$ax(t4); B.boolConversionCheck(t1.moveNext$0());) {
        t6 = t1.get$current();
        t3.add$1(t2, t6);
        t5.add$1(t4, t6);
      }
      _this._updateLastEdgeEventsFromGeometries$0();
      return result;
    },
    handleSelectWord$1($event) {
      var _this = this,
        result = _this.super$MultiSelectableSelectionContainerDelegate$handleSelectWord(type$.SelectWordSelectionEvent._as($event));
      if (!B.boolConversionCheck(J.$eq$(_this.currentSelectionStartIndex, -1)))
        J.add$1$ax(_this._hasReceivedStartEvent, J.$index$asx(_this.selectables, _this.currentSelectionStartIndex));
      if (!B.boolConversionCheck(J.$eq$(_this.currentSelectionEndIndex, -1)))
        J.add$1$ax(_this._hasReceivedEndEvent, J.$index$asx(_this.selectables, _this.currentSelectionEndIndex));
      _this._updateLastEdgeEventsFromGeometries$0();
      return result;
    },
    handleClearSelection$1($event) {
      var _this = this,
        result = _this.super$MultiSelectableSelectionContainerDelegate$handleClearSelection(type$.ClearSelectionEvent._as($event));
      J.clear$0$ax(_this._hasReceivedStartEvent);
      J.clear$0$ax(_this._hasReceivedEndEvent);
      _this._lastEndEdgeUpdateGlobalPosition = _this._lastStartEdgeUpdateGlobalPosition = null;
      return result;
    },
    handleSelectionEdgeUpdate$1($event) {
      var t1, t2, t3, _this = this;
      type$.SelectionEdgeUpdateEvent._as($event);
      t1 = $event.type;
      t2 = J.getInterceptor$(t1);
      t3 = $event.globalPosition;
      if (B.boolConversionCheck(t2.$eq(t1, C.SelectionEventType_1)))
        _this.set$_lastEndEdgeUpdateGlobalPosition(t3);
      else
        _this.set$_lastStartEdgeUpdateGlobalPosition(t3);
      if (B.boolConversionCheck(J.$eq$($event.granularity, C.TextGranularity_2))) {
        if (B.boolConversionCheck(t2.$eq(t1, C.SelectionEventType_1)))
          return B.boolConversionCheck(J.$eq$(_this.currentSelectionEndIndex, -1)) ? _this._initSelection$2$isEnd($event, true) : _this._adjustSelection$2$isEnd($event, true);
        return B.boolConversionCheck(J.$eq$(_this.currentSelectionStartIndex, -1)) ? _this._initSelection$2$isEnd($event, false) : _this._adjustSelection$2$isEnd($event, false);
      }
      return _this.super$MultiSelectableSelectionContainerDelegate$handleSelectionEdgeUpdate($event);
    },
    dispose$0() {
      J.clear$0$ax(this._hasReceivedStartEvent);
      J.clear$0$ax(this._hasReceivedEndEvent);
      this.super$MultiSelectableSelectionContainerDelegate$dispose();
    },
    dispatchSelectionEventToChild$2(selectable, $event) {
      var _this = this;
      type$.Selectable._as(selectable);
      type$.SelectionEvent._as($event);
      switch ($event.type) {
        case C.SelectionEventType_0:
          J.add$1$ax(_this._hasReceivedStartEvent, selectable);
          _this.ensureChildUpdated$1(selectable);
          break;
        case C.SelectionEventType_1:
          J.add$1$ax(_this._hasReceivedEndEvent, selectable);
          _this.ensureChildUpdated$1(selectable);
          break;
        case C.SelectionEventType_2:
          J.remove$1$ax(_this._hasReceivedStartEvent, selectable);
          J.remove$1$ax(_this._hasReceivedEndEvent, selectable);
          break;
        case C.SelectionEventType_3:
        case C.SelectionEventType_4:
        case C.SelectionEventType_5:
          break;
        case C.SelectionEventType_6:
        case C.SelectionEventType_7:
          J.add$1$ax(_this._hasReceivedStartEvent, selectable);
          J.add$1$ax(_this._hasReceivedEndEvent, selectable);
          _this.ensureChildUpdated$1(selectable);
          break;
      }
      return _this.super$MultiSelectableSelectionContainerDelegate$dispatchSelectionEventToChild(selectable, $event);
    },
    ensureChildUpdated$1(selectable) {
      var t1, synthesizedEvent, _this = this;
      type$.Selectable._as(selectable);
      if (_this._lastEndEdgeUpdateGlobalPosition != null && B.boolConversionCheck(J.add$1$ax(_this._hasReceivedEndEvent, selectable))) {
        t1 = _this._lastEndEdgeUpdateGlobalPosition;
        t1.toString;
        synthesizedEvent = A.SelectionEdgeUpdateEvent$forEnd(t1);
        if (B.boolConversionCheck(J.$eq$(_this.currentSelectionEndIndex, -1)))
          _this.handleSelectionEdgeUpdate$1(synthesizedEvent);
        selectable.dispatchSelectionEvent$1(synthesizedEvent);
      }
      if (_this._lastStartEdgeUpdateGlobalPosition != null && B.boolConversionCheck(J.add$1$ax(_this._hasReceivedStartEvent, selectable))) {
        t1 = _this._lastStartEdgeUpdateGlobalPosition;
        t1.toString;
        synthesizedEvent = A.SelectionEdgeUpdateEvent$forStart(t1);
        if (B.boolConversionCheck(J.$eq$(_this.currentSelectionStartIndex, -1)))
          _this.handleSelectionEdgeUpdate$1(synthesizedEvent);
        selectable.dispatchSelectionEvent$1(synthesizedEvent);
      }
    },
    didChangeSelectables$0() {
      var selectableSet, _this = this,
        t1 = _this._lastEndEdgeUpdateGlobalPosition;
      if (t1 != null)
        _this.handleSelectionEdgeUpdate$1(A.SelectionEdgeUpdateEvent$forEnd(t1));
      t1 = _this._lastStartEdgeUpdateGlobalPosition;
      if (t1 != null)
        _this.handleSelectionEdgeUpdate$1(A.SelectionEdgeUpdateEvent$forStart(t1));
      selectableSet = J.toSet$0$ax(_this.selectables);
      J.removeWhere$1$ax(_this._hasReceivedEndEvent, new A._SelectableTextContainerDelegate_didChangeSelectables_closure(selectableSet));
      J.removeWhere$1$ax(_this._hasReceivedStartEvent, new A._SelectableTextContainerDelegate_didChangeSelectables_closure0(selectableSet));
      _this.super$MultiSelectableSelectionContainerDelegate$didChangeSelectables();
    },
    set$_lastStartEdgeUpdateGlobalPosition(_lastStartEdgeUpdateGlobalPosition) {
      this._lastStartEdgeUpdateGlobalPosition = type$.nullable_Offset._as(_lastStartEdgeUpdateGlobalPosition);
    },
    set$_lastEndEdgeUpdateGlobalPosition(_lastEndEdgeUpdateGlobalPosition) {
      this._lastEndEdgeUpdateGlobalPosition = type$.nullable_Offset._as(_lastEndEdgeUpdateGlobalPosition);
    },
    compareOrder$2(arg0, arg1) {
      return this.get$compareOrder().call$2(arg0, arg1);
    }
  };
  A.DoNothingAndStopPropagationTextIntent.prototype = {};
  A.DirectionalTextEditingIntent.prototype = {};
  A.DeleteCharacterIntent.prototype = {};
  A.DeleteToNextWordBoundaryIntent.prototype = {};
  A.DeleteToLineBreakIntent.prototype = {};
  A.DirectionalCaretMovementIntent.prototype = {};
  A.ExtendSelectionByCharacterIntent.prototype = {};
  A.ExtendSelectionToNextWordBoundaryIntent.prototype = {};
  A.ExtendSelectionToNextWordBoundaryOrCaretLocationIntent.prototype = {};
  A.ExpandSelectionToDocumentBoundaryIntent.prototype = {};
  A.ExpandSelectionToLineBreakIntent.prototype = {};
  A.ExtendSelectionToLineBreakIntent.prototype = {};
  A.ExtendSelectionVerticallyToAdjacentLineIntent.prototype = {};
  A.ExtendSelectionVerticallyToAdjacentPageIntent.prototype = {};
  A.ExtendSelectionToNextParagraphBoundaryIntent.prototype = {};
  A.ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent.prototype = {};
  A.ExtendSelectionToDocumentBoundaryIntent.prototype = {};
  A.ScrollToDocumentBoundaryIntent.prototype = {};
  A.SelectAllTextIntent.prototype = {};
  A.CopySelectionTextIntent.prototype = {};
  A.PasteTextIntent.prototype = {};
  A.RedoTextIntent.prototype = {};
  A.UndoTextIntent.prototype = {};
  A.TransposeCharactersIntent.prototype = {};
  A.TickerMode.prototype = {
    createState$0() {
      return A._TickerModeState$();
    }
  };
  A._TickerModeState.prototype = {
    didChangeDependencies$0() {
      var _this = this;
      _this.super$State$didChangeDependencies();
      _this.set$_ancestorTicketMode(A.TickerMode_of(_this.get$context()));
      _this._updateEffectiveMode$0();
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(type$.TickerMode._as(oldWidget));
      this._updateEffectiveMode$0();
    },
    dispose$0() {
      this._effectiveMode.dispose$0();
      this.super$State$dispose();
    },
    _updateEffectiveMode$0() {
      var t1 = B.boolConversionCheck(this._ancestorTicketMode) && B.boolConversionCheck(this.get$widget().enabled);
      this._effectiveMode.set$value(t1);
    },
    build$1(context) {
      var t1, t2;
      type$.BuildContext._as(context);
      t1 = this._effectiveMode;
      t2 = t1.get$value();
      return A._EffectiveTickerMode$(this.get$widget().child, t2, t1);
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$State$debugFillProperties(properties);
      properties.add$1(0, E.FlagProperty$("requested mode", null, "disabled", "enabled", D.DiagnosticLevel_3, true, this.get$widget().enabled));
    },
    set$_ancestorTicketMode(_ancestorTicketMode) {
      this._ancestorTicketMode = B._asBool(_ancestorTicketMode);
    }
  };
  A._EffectiveTickerMode.prototype = {
    updateShouldNotify$1(oldWidget) {
      return !B.boolConversionCheck(J.$eq$(this.enabled, type$._EffectiveTickerMode._as(oldWidget).enabled));
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.FlagProperty$("effective mode", null, "disabled", "enabled", D.DiagnosticLevel_3, true, this.enabled));
    }
  };
  A.SingleTickerProviderStateMixin.prototype = {
    createTicker$1(onTick) {
      var t1, _this = this;
      _this.SingleTickerProviderStateMixin__ticker = A.Ticker$(type$.void_Function_Duration._as(onTick), "created by " + B.S(E.describeIdentity(_this)));
      _this._updateTickerModeNotifier$0();
      _this._updateTicker$0();
      t1 = _this.SingleTickerProviderStateMixin__ticker;
      t1.toString;
      return t1;
    },
    _updateTicker$0() {
      var t1 = this.SingleTickerProviderStateMixin__ticker;
      if (t1 != null)
        t1.set$muted(!B.boolConversionCheck(this.SingleTickerProviderStateMixin__tickerModeNotifier.get$value()));
    },
    _updateTickerModeNotifier$0() {
      var _this = this,
        newNotifier = A.TickerMode_getNotifier(_this.get$context()),
        t1 = _this.SingleTickerProviderStateMixin__tickerModeNotifier;
      if (newNotifier === t1)
        return;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTicker());
      newNotifier.addListener$1(_this.get$_updateTicker());
      _this.set$_tickerModeNotifier(newNotifier);
    },
    set$_tickerModeNotifier(_tickerModeNotifier) {
      this.SingleTickerProviderStateMixin__tickerModeNotifier = type$.nullable_ValueListenable_bool._as(_tickerModeNotifier);
    },
    $isDiagnosticable: 1,
    $isTickerProvider: 1,
    $isState0: 1,
    $is_State_Object_Diagnosticable: 1
  };
  A.TickerProviderStateMixin.prototype = {
    createTicker$1(onTick) {
      var result, t1, _this = this;
      type$.void_Function_Duration._as(onTick);
      if (_this.TickerProviderStateMixin__tickerModeNotifier == null)
        _this._updateTickerModeNotifier$0();
      if (_this.TickerProviderStateMixin__tickers == null)
        _this.set$_tickers(B.LinkedHashSet_LinkedHashSet$_empty(type$._WidgetTicker));
      result = A._WidgetTicker$(onTick, _this, "created by " + B.S(E.describeIdentity(_this)));
      result.set$muted(!B.boolConversionCheck(_this.TickerProviderStateMixin__tickerModeNotifier.get$value()));
      t1 = _this.TickerProviderStateMixin__tickers;
      t1.toString;
      J.add$1$ax(t1, result);
      return result;
    },
    _removeTicker$1(ticker) {
      var t1;
      type$._WidgetTicker._as(ticker);
      t1 = this.TickerProviderStateMixin__tickers;
      t1.toString;
      J.remove$1$ax(t1, ticker);
    },
    _updateTickers$0() {
      var muted, t1;
      if (this.TickerProviderStateMixin__tickers != null) {
        muted = !B.boolConversionCheck(this.TickerProviderStateMixin__tickerModeNotifier.get$value());
        t1 = this.TickerProviderStateMixin__tickers;
        t1.toString;
        t1 = J.get$iterator$ax(t1);
        for (; B.boolConversionCheck(t1.moveNext$0());)
          t1.get$current().set$muted(muted);
      }
    },
    _updateTickerModeNotifier$0() {
      var _this = this,
        newNotifier = A.TickerMode_getNotifier(_this.get$context()),
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (newNotifier === t1)
        return;
      if (t1 != null)
        t1.removeListener$1(_this.get$_updateTickers());
      newNotifier.addListener$1(_this.get$_updateTickers());
      _this.set$_tickerModeNotifier(newNotifier);
    },
    set$_tickers(_tickers) {
      this.TickerProviderStateMixin__tickers = type$.nullable_Set_Ticker._as(_tickers);
    },
    set$_tickerModeNotifier(_tickerModeNotifier) {
      this.TickerProviderStateMixin__tickerModeNotifier = type$.nullable_ValueListenable_bool._as(_tickerModeNotifier);
    },
    $isDiagnosticable: 1,
    $isTickerProvider: 1,
    $isState0: 1,
    $is_State_Object_Diagnosticable: 1
  };
  A._WidgetTicker.prototype = {
    dispose$0() {
      this._creator._removeTicker$1(this);
      this.super$Ticker$dispose();
    }
  };
  A._ConstantValueListenable.prototype = {
    addListener$1(listener) {
      type$.void_Function._as(listener);
    },
    removeListener$1(listener) {
      type$.void_Function._as(listener);
    },
    $isListenable: 1,
    $isValueListenable: 1,
    get$value() {
      return true;
    }
  };
  A.Title.prototype = {
    build$1(context) {
      type$.BuildContext._as(context);
      A.SystemChrome_setApplicationSwitcherDescription(A.ApplicationSwitcherDescription$(this.title, this.color.get$value()));
      return this.child;
    },
    debugFillProperties$1(properties) {
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.StringProperty$("title", this.title, "", true, true));
      properties.add$1(0, A.ColorProperty$("color", this.color, null, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
    }
  };
  A.AnimatedWidget.prototype = {
    createState$0() {
      return A._AnimatedState$();
    },
    debugFillProperties$1(properties) {
      var _null = null;
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("listenable", this.get$listenable(), true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Listenable));
    },
    get$listenable() {
      return this.listenable;
    }
  };
  A._AnimatedState.prototype = {
    initState$0() {
      this.super$State$initState0();
      this.get$widget().get$listenable().addListener$1(this.get$_handleChange());
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      type$.AnimatedWidget._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      if (!B.boolConversionCheck(J.$eq$(_this.get$widget().get$listenable(), oldWidget.get$listenable()))) {
        t1 = _this.get$_handleChange();
        oldWidget.get$listenable().removeListener$1(t1);
        _this.get$widget().get$listenable().addListener$1(t1);
      }
    },
    dispose$0() {
      this.get$widget().get$listenable().removeListener$1(this.get$_handleChange());
      this.super$State$dispose();
    },
    _handleChange$0() {
      if (!B.boolConversionCheck(this.get$mounted()))
        return;
      this.setState$1(new A._AnimatedState__handleChange_closure());
    },
    build$1(context) {
      type$.BuildContext._as(context);
      return this.get$widget().build$1(context);
    }
  };
  A.SlideTransition.prototype = {
    get$position() {
      return type$.Animation_Offset._as(this.listenable);
    },
    build$1(context) {
      var offset, _this = this;
      type$.BuildContext._as(context);
      offset = _this.get$position().get$value();
      if (B.boolConversionCheck(J.$eq$(_this.textDirection, D.TextDirection_0)))
        offset = E.Offset$(J.$negate$in(offset.get$dx()), offset.get$dy());
      return A.FractionalTranslation$(_this.child, _this.transformHitTests, offset);
    }
  };
  A.FadeTransition.prototype = {
    createRenderObject$1(context) {
      type$.BuildContext._as(context);
      return A.RenderAnimatedOpacity$(false, this.opacity);
    },
    updateRenderObject$2(context, renderObject) {
      type$.BuildContext._as(context);
      type$.RenderAnimatedOpacity._as(renderObject);
      renderObject.set$opacity(this.opacity);
      renderObject.set$alwaysIncludeSemantics(false);
    },
    debugFillProperties$1(properties) {
      var _null = null,
        _s22_ = "alwaysIncludeSemantics";
      type$.DiagnosticPropertiesBuilder._as(properties);
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, E.DiagnosticsProperty$("opacity", this.opacity, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Animation_double));
      properties.add$1(0, E.FlagProperty$(_s22_, _null, _null, _s22_, D.DiagnosticLevel_3, false, false));
    }
  };
  A.DecoratedBoxTransition.prototype = {
    build$1(context) {
      type$.BuildContext._as(context);
      return A.DecoratedBox$(this.child, this.decoration.get$value(), C.DecorationPosition_0);
    }
  };
  A.ListenableBuilder.prototype = {
    get$listenable() {
      return this.listenable;
    },
    build$1(context) {
      return this.builder$2(type$.BuildContext._as(context), this.child);
    },
    builder$2(arg0, arg1) {
      return this.builder.call$2(arg0, arg1);
    }
  };
  A.AnimatedBuilder.prototype = {
    get$listenable() {
      return A.ListenableBuilder.prototype.get$listenable.call(this);
    },
    get$builder() {
      return this.builder;
    },
    builder$2(arg0, arg1) {
      return this.get$builder().call$2(arg0, arg1);
    }
  };
  A.WidgetState.prototype = {
    _enumToString$0() {
      return "WidgetState." + B.S(this._core$_name);
    }
  };
  A.WidgetStateColor.prototype = {$isWidgetStateProperty: 1};
  A._WidgetStateColor.prototype = {
    resolve$1(states) {
      return this._widget_state$_resolve.call$1(type$.Set_WidgetState._as(states));
    }
  };
  A.WidgetStateMouseCursor.prototype = {
    createSession$1(device) {
      B._asInt(device);
      return this.resolve$1(B.LinkedHashSet_LinkedHashSet$_empty(type$.WidgetState)).createSession$1(device);
    },
    $isWidgetStateProperty: 1
  };
  A._EnabledAndDisabledMouseCursor.prototype = {
    resolve$1(states) {
      if (B.boolConversionCheck(type$.Set_WidgetState._as(states).contains$1(0, C.WidgetState_6)))
        return D.SystemMouseCursor_basic;
      return C.SystemMouseCursor_click;
    },
    get$debugDescription() {
      return "WidgetStateMouseCursor(clickable)";
    }
  };
  A._LerpSides.prototype = {
    resolve$1(states) {
      var t1, resolvedA, resolvedB, _this = this;
      type$.Set_WidgetState._as(states);
      t1 = _this.a;
      resolvedA = t1 == null ? null : t1.resolve$1(states);
      t1 = _this.b;
      resolvedB = t1 == null ? null : t1.resolve$1(states);
      t1 = resolvedA == null;
      if (t1 && resolvedB == null)
        return null;
      if (t1)
        return A.BorderSide_lerp(A.BorderSide$(resolvedB.color.withAlpha$1(0), -1, C.BorderStyle_1, 0), resolvedB, _this.t);
      if (resolvedB == null)
        return A.BorderSide_lerp(resolvedA, A.BorderSide$(resolvedA.color.withAlpha$1(0), -1, C.BorderStyle_1, 0), _this.t);
      return A.BorderSide_lerp(resolvedA, resolvedB, _this.t);
    },
    $isWidgetStateProperty: 1
  };
  A.WidgetStateProperty.prototype = {};
  A._LerpProperties.prototype = {
    resolve$1(states) {
      var t1, resolvedA, resolvedB, _this = this;
      type$.Set_WidgetState._as(states);
      t1 = _this.a;
      resolvedA = t1 == null ? null : t1.resolve$1(states);
      t1 = _this.b;
      resolvedB = t1 == null ? null : t1.resolve$1(states);
      return _this.lerpFunction.call$3(resolvedA, resolvedB, _this.t);
    },
    $isWidgetStateProperty: 1
  };
  A._WidgetStatePropertyWith.prototype = {
    resolve$1(states) {
      return this._widget_state$_resolve.call$1(type$.Set_WidgetState._as(states));
    },
    $isWidgetStateProperty: 1
  };
  A.WidgetStatePropertyAll.prototype = {
    resolve$1(states) {
      type$.Set_WidgetState._as(states);
      return this.value;
    },
    toString$0(_) {
      var _s23_ = "WidgetStatePropertyAll(",
        t1 = this.value;
      if (typeof t1 == "number")
        return _s23_ + B.S(E.debugFormatDouble(t1)) + ")";
      else
        return _s23_ + B.S(t1) + ")";
    },
    $isWidgetStateProperty: 1
  };
  A.WidgetStatesController.prototype = {
    update$2(state, add) {
      type$.WidgetState._as(state);
      if (B._asBool(add) ? J.add$1$ax(this.get$value(), state) : J.remove$1$ax(this.get$value(), state))
        this.notifyListeners$0();
    }
  };
  A.DynamicColor.prototype = {
    getArgb$1(scheme) {
      return J.toInt$0$n(this.getHct$1(type$.DynamicScheme._as(scheme)));
    },
    getHct$1(scheme) {
      var t1, t2, cachedAnswer, tone, answer, t3;
      type$.DynamicScheme._as(scheme);
      t1 = this._hctCache;
      t2 = J.getInterceptor$asx(t1);
      cachedAnswer = t2.$index(t1, scheme);
      if (cachedAnswer != null)
        return cachedAnswer;
      tone = this.getTone$1(scheme);
      answer = this.palette.call$1(scheme).getHct$1(tone);
      t3 = t2.get$length(t1);
      if (typeof t3 !== "number")
        return t3.$gt();
      if (t3 > 4)
        t2.clear$0(t1);
      t2.$indexSet(t1, scheme, answer);
      return answer;
    },
    getTone$1(scheme) {
      var t1, decreasingContrast, t2, pair, roleA, roleB, delta, polarity, stayTogether, bgTone, aIsNearer, nearer, farther, amNearer, expansionDir, nContrast, fContrast, nInitialTone, nTone, fInitialTone, fTone, nTone0, answer, desiredRatio, bgTone1, bgTone2, upper, lower, lightOption, darkOption, availables, _this = this;
      type$.DynamicScheme._as(scheme);
      t1 = scheme.contrastLevel;
      if (typeof t1 !== "number")
        return t1.$lt();
      decreasingContrast = t1 < 0;
      t2 = _this.toneDeltaPair;
      if (t2 != null) {
        pair = t2.call$1(scheme);
        roleA = pair.roleA;
        roleB = pair.roleB;
        delta = pair.delta;
        polarity = pair.polarity;
        stayTogether = pair.stayTogether;
        bgTone = _this.background.call$1(scheme).getTone$1(scheme);
        aIsNearer = true;
        if (polarity !== C.TonePolarity_2)
          if (!(polarity === C.TonePolarity_1 && !B.boolConversionCheck(scheme.isDark))) {
            t2 = polarity === C.TonePolarity_0 && B.boolConversionCheck(scheme.isDark);
            aIsNearer = t2;
          }
        nearer = aIsNearer ? roleA : roleB;
        farther = aIsNearer ? roleB : roleA;
        amNearer = J.$eq$(_this.name, nearer.name);
        expansionDir = B.boolConversionCheck(scheme.isDark) ? 1 : -1;
        nContrast = nearer.contrastCurve.$get$1(t1);
        fContrast = farther.contrastCurve.$get$1(t1);
        nInitialTone = nearer.tone.call$1(scheme);
        t1 = A.Contrast_ratioOfTones(bgTone, nInitialTone);
        if (typeof t1 !== "number")
          return t1.$ge();
        nTone = t1 >= nContrast ? nInitialTone : A.DynamicColor_foregroundTone(bgTone, nContrast);
        fInitialTone = farther.tone.call$1(scheme);
        t1 = A.Contrast_ratioOfTones(bgTone, fInitialTone);
        if (typeof t1 !== "number")
          return t1.$ge();
        fTone = t1 >= fContrast ? fInitialTone : A.DynamicColor_foregroundTone(bgTone, fContrast);
        if (decreasingContrast) {
          nTone = A.DynamicColor_foregroundTone(bgTone, nContrast);
          fTone = A.DynamicColor_foregroundTone(bgTone, fContrast);
        }
        if (!((fTone - nTone) * expansionDir >= delta)) {
          t1 = delta * expansionDir;
          fTone = A.MathUtils_clampDouble(0, 100, nTone + t1);
          nTone = (fTone - nTone) * expansionDir >= delta ? nTone : A.MathUtils_clampDouble(0, 100, fTone - t1);
        }
        nTone0 = 60;
        if (50 <= nTone && nTone < 60) {
          t1 = type$.double;
          t2 = delta * expansionDir;
          if (expansionDir > 0) {
            fTone = E.max(fTone, 60 + t2, t1);
            nTone = nTone0;
          } else {
            fTone = E.min(fTone, 49 + t2, t1);
            nTone = 49;
          }
        } else if (50 <= fTone && fTone < 60)
          if (stayTogether) {
            t1 = type$.double;
            t2 = delta * expansionDir;
            if (expansionDir > 0) {
              fTone = E.max(fTone, 60 + t2, t1);
              nTone = nTone0;
            } else {
              fTone = E.min(fTone, 49 + t2, t1);
              nTone = 49;
            }
          } else
            fTone = expansionDir > 0 ? 60 : 49;
        return amNearer ? nTone : fTone;
      } else {
        answer = _this.tone.call$1(scheme);
        t2 = _this.background;
        if (t2 == null)
          return answer;
        bgTone = t2.call$1(scheme).getTone$1(scheme);
        desiredRatio = _this.contrastCurve.$get$1(t1);
        t1 = A.Contrast_ratioOfTones(bgTone, answer);
        if (typeof t1 !== "number")
          return t1.$ge();
        answer = t1 >= desiredRatio ? answer : A.DynamicColor_foregroundTone(bgTone, desiredRatio);
        if (decreasingContrast)
          answer = A.DynamicColor_foregroundTone(bgTone, desiredRatio);
        if (B.boolConversionCheck(_this.isBackground) && 50 <= answer && answer < 60) {
          t1 = A.Contrast_ratioOfTones(49, bgTone);
          if (typeof t1 !== "number")
            return t1.$ge();
          answer = t1 >= desiredRatio ? 49 : 60;
        }
        t1 = _this.secondBackground;
        if (t1 != null) {
          bgTone1 = t2.call$1(scheme).getTone$1(scheme);
          bgTone2 = t1.call$1(scheme).getTone$1(scheme);
          t1 = type$.double;
          upper = E.max(bgTone1, bgTone2, t1);
          lower = E.min(bgTone1, bgTone2, t1);
          t1 = A.Contrast_ratioOfTones(upper, answer);
          if (typeof t1 !== "number")
            return t1.$ge();
          if (t1 >= desiredRatio) {
            t1 = A.Contrast_ratioOfTones(lower, answer);
            if (typeof t1 !== "number")
              return t1.$ge();
            t1 = t1 >= desiredRatio;
          } else
            t1 = false;
          if (t1)
            return answer;
          lightOption = A.Contrast_lighter(desiredRatio, upper);
          darkOption = A.Contrast_darker(desiredRatio, lower);
          availables = [];
          if (lightOption !== -1)
            availables.push(lightOption);
          if (darkOption !== -1)
            availables.push(darkOption);
          if (B.boolConversionCheck(A.DynamicColor_tonePrefersLightForeground(bgTone1)) || B.boolConversionCheck(A.DynamicColor_tonePrefersLightForeground(bgTone2)))
            return lightOption < 0 ? 100 : lightOption;
          t1 = availables.length;
          if (t1 === 1) {
            if (0 >= t1)
              return B.ioore(availables, 0);
            return B._asDouble(availables[0]);
          }
          return darkOption < 0 ? 0 : darkOption;
        }
        return answer;
      }
    },
    tone$1(arg0) {
      return this.tone.call$1(arg0);
    }
  };
  A.DynamicScheme.prototype = {};
  A.ContrastCurve.prototype = {
    $get$1(contrastLevel) {
      var t1, _this = this;
      B._asDouble(contrastLevel);
      if (contrastLevel <= -1)
        return _this.low;
      else if (contrastLevel < 0)
        return A.MathUtils_lerp(_this.low, _this.normal, (contrastLevel - -1) / 1);
      else if (contrastLevel < 0.5)
        return A.MathUtils_lerp(_this.normal, _this.medium, contrastLevel / 0.5);
      else {
        t1 = _this.high;
        if (contrastLevel < 1)
          return A.MathUtils_lerp(_this.medium, t1, (contrastLevel - 0.5) / 0.5);
        else
          return t1;
      }
    }
  };
  A.TonePolarity.prototype = {
    _enumToString$0() {
      return "TonePolarity." + B.S(this._core$_name);
    }
  };
  A.ToneDeltaPair.prototype = {};
  A.Variant.prototype = {
    _enumToString$0() {
      return "Variant." + B.S(this._core$_name);
    }
  };
  A.Cam16.prototype = {};
  A.Hct.prototype = {
    get$_hue() {
      return this.__Hct__hue_A;
    },
    set$_hue(value) {
      this.__Hct__hue_A = B._asDouble(value);
    },
    get$_chroma() {
      return this.__Hct__chroma_A;
    },
    set$_chroma(value) {
      this.__Hct__chroma_A = B._asDouble(value);
    },
    get$_tone() {
      return this.__Hct__tone_A;
    },
    set$_tone(value) {
      this.__Hct__tone_A = B._asDouble(value);
    },
    get$_argb() {
      return this.__Hct__argb_A;
    },
    set$_argb(value) {
      this.__Hct__argb_A = B._asInt(value);
    },
    $eq(_, o) {
      if (o == null)
        return false;
      if (!(o instanceof A.Hct))
        return false;
      return J.$eq$(o.get$_argb(), this.get$_argb());
    },
    get$hashCode(_) {
      return J.get$hashCode$(this.get$_argb());
    },
    toString$0(_) {
      return "H" + B.S(J.toString$0$(J.round$0$n(this.get$hue()))) + " C" + B.S(J.round$0$n(this.get$chroma())) + " T" + B.S(J.toString$0$(J.round$0$n(this.get$tone())));
    },
    toInt$0(_) {
      return this.get$_argb();
    },
    get$hue() {
      return this.get$_hue();
    },
    get$chroma() {
      return this.get$_chroma();
    },
    get$tone() {
      return this.get$_tone();
    },
    Hct$_$1(argb) {
      var cam16, _this = this;
      _this.set$_argb(argb);
      cam16 = A.Cam16_fromInt(argb);
      _this.set$_hue(cam16.hue);
      _this.set$_chroma(cam16.chroma);
      _this.set$_tone(A.ColorUtils_lstarFromArgb(_this.get$_argb()));
    }
  };
  A.ViewingConditions.prototype = {};
  A.TonalPalette.prototype = {
    getHct$1(tone) {
      var t1;
      B._asDouble(tone);
      t1 = this._tonal_palette$_cache;
      if (B.boolConversionCheck(t1.containsKey$1(tone))) {
        t1 = J.$index$asx(t1, tone);
        t1.toString;
        return A.Hct_fromInt(t1);
      } else
        return A.Hct_from(this.hue, this.chroma, tone);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (other instanceof A.TonalPalette)
        return B.boolConversionCheck(J.$eq$(this.hue, other.hue)) && B.boolConversionCheck(J.$eq$(this.chroma, other.chroma));
      return false;
    },
    get$hashCode(_) {
      var t1 = B.Object_hash(this.hue, this.chroma, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue, F.C_SentinelValue);
      return t1;
    },
    toString$0(_) {
      var t1 = B.S(this.hue),
        t2 = B.S(this.chroma);
      return "TonalPalette.of(" + t1 + ", " + t2 + ")";
    }
  };
  A.SchemeContent.prototype = {};
  A.SchemeExpressive.prototype = {};
  A.SchemeFidelity.prototype = {};
  A.SchemeFruitSalad.prototype = {};
  A.SchemeMonochrome.prototype = {};
  A.SchemeNeutral.prototype = {};
  A.SchemeRainbow.prototype = {};
  A.SchemeTonalSpot.prototype = {};
  A.SchemeVibrant.prototype = {};
  A.TemperatureCache.prototype = {
    get$warmest() {
      return J.get$last$ax(this.get$hctsByTemp());
    },
    get$coldest() {
      return J.get$first$ax(this.get$hctsByTemp());
    },
    analogous$2$count$divisions(count, divisions) {
      var t1, startHue, startHct, lastTemp, t2, allColors, absoluteTotalTempDelta, i, hue, temp, tempStep, hueAddend, totalTempDelta, hct, t3, indexSatisfied, indexAddend, answers, increaseHueCount, index, _this = this;
      B._asInt(count);
      B._asInt(divisions);
      t1 = _this.input;
      startHue = J.round$0$n(t1.get$hue());
      startHct = J.$index$asx(_this.get$hctsByHue(), startHue);
      lastTemp = _this.relativeTemperature$1(startHct);
      t2 = type$.JSArray_Hct;
      allColors = B._setArrayType([startHct], t2);
      for (absoluteTotalTempDelta = 0, i = 0; i < 360; ++i, lastTemp = temp) {
        hue = A.MathUtils_sanitizeDegreesInt(startHue + i);
        temp = _this.relativeTemperature$1(J.$index$asx(_this.get$hctsByHue(), hue));
        absoluteTotalTempDelta += Math.abs(temp - lastTemp);
      }
      tempStep = absoluteTotalTempDelta / divisions;
      lastTemp = _this.relativeTemperature$1(startHct);
      for (hueAddend = 1, totalTempDelta = 0; allColors.length < divisions; lastTemp = temp) {
        hue = A.MathUtils_sanitizeDegreesInt(startHue + hueAddend);
        hct = J.$index$asx(_this.get$hctsByHue(), hue);
        temp = _this.relativeTemperature$1(hct);
        totalTempDelta += Math.abs(temp - lastTemp);
        t3 = allColors.length;
        indexSatisfied = totalTempDelta >= t3 * tempStep;
        indexAddend = 1;
        while (true) {
          if (!(indexSatisfied && t3 < divisions))
            break;
          F.JSArray_methods.add$1(allColors, hct);
          t3 = allColors.length;
          indexSatisfied = totalTempDelta >= (t3 + indexAddend) * tempStep;
          ++indexAddend;
        }
        ++hueAddend;
        if (hueAddend > 360) {
          for (; allColors.length < divisions;)
            F.JSArray_methods.add$1(allColors, hct);
          break;
        }
      }
      answers = B._setArrayType([t1], t2);
      increaseHueCount = F.JSNumber_methods.floor$0((count - 1) / 2);
      for (t1 = increaseHueCount + 1, i = 1; i < t1; ++i) {
        index = 0 - i;
        for (t2 = allColors.length; index < 0;)
          index = t2 + index;
        F.JSArray_methods.insert$2(answers, 0, allColors[index >= t2 ? F.JSInt_methods.$mod(index, t2) : index]);
      }
      for (t1 = count - increaseHueCount - 1 + 1, i = 1; i < t1; ++i) {
        for (t2 = allColors.length, index = i; false;)
          index = t2 + index;
        F.JSArray_methods.add$1(answers, allColors[index >= t2 ? F.JSInt_methods.$mod(index, t2) : index]);
      }
      return answers;
    },
    get$complement() {
      var coldestHue, warmestHue, t2, range, startHueIsColdestToWarmest, startHue, endHue, answer, complementRelativeTemp, smallestError, hueAddend, hue, possibleAnswer, error, _this = this,
        t1 = _this._complement;
      if (t1 != null)
        return t1;
      coldestHue = _this.get$coldest().get$hue();
      t1 = J.$index$asx(_this.get$tempsByHct(), _this.get$coldest());
      t1.toString;
      warmestHue = _this.get$warmest().get$hue();
      t2 = J.$index$asx(_this.get$tempsByHct(), _this.get$warmest());
      t2.toString;
      range = t2 - t1;
      t2 = _this.input;
      startHueIsColdestToWarmest = A.TemperatureCache_isBetween(coldestHue, t2.get$hue(), warmestHue);
      startHue = startHueIsColdestToWarmest ? warmestHue : coldestHue;
      endHue = startHueIsColdestToWarmest ? coldestHue : warmestHue;
      answer = J.$index$asx(_this.get$hctsByHue(), J.round$0$n(t2.get$hue()));
      t2 = _this.get$inputRelativeTemperature();
      if (typeof t2 !== "number")
        return B.iae(t2);
      complementRelativeTemp = 1 - t2;
      for (smallestError = 1000, hueAddend = 0; hueAddend <= 360; ++hueAddend) {
        hue = A.MathUtils_sanitizeDegreesDouble(startHue + hueAddend);
        if (!B.boolConversionCheck(A.TemperatureCache_isBetween(startHue, hue, endHue)))
          continue;
        possibleAnswer = J.$index$asx(_this.get$hctsByHue(), F.JSNumber_methods.round$0(hue));
        t2 = J.$index$asx(_this._tempsByHct, possibleAnswer);
        t2.toString;
        if (typeof t2 !== "number")
          return t2.$sub();
        error = Math.abs(complementRelativeTemp - (t2 - t1) / range);
        if (error < smallestError) {
          answer = possibleAnswer;
          smallestError = error;
        }
      }
      return _this._complement = answer;
    },
    relativeTemperature$1(hct) {
      var t1, t2, range, _this = this;
      type$.Hct._as(hct);
      t1 = J.$index$asx(_this.get$tempsByHct(), _this.get$warmest());
      t1.toString;
      t2 = J.$index$asx(_this.get$tempsByHct(), _this.get$coldest());
      t2.toString;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t2 !== "number")
        return B.iae(t2);
      range = t1 - t2;
      t2 = J.$index$asx(_this.get$tempsByHct(), hct);
      t2.toString;
      t1 = J.$index$asx(_this.get$tempsByHct(), _this.get$coldest());
      t1.toString;
      if (typeof t2 !== "number")
        return t2.$sub();
      if (typeof t1 !== "number")
        return B.iae(t1);
      if (range === 0)
        return 0.5;
      return (t2 - t1) / range;
    },
    get$inputRelativeTemperature() {
      var t2, range, _this = this,
        t1 = _this._inputRelativeTemperature;
      if (typeof t1 !== "number")
        return t1.$ge();
      if (t1 >= 0)
        return t1;
      t1 = J.$index$asx(_this.get$tempsByHct(), _this.get$coldest());
      t1.toString;
      t2 = J.$index$asx(_this.get$tempsByHct(), _this.get$warmest());
      t2.toString;
      if (typeof t2 !== "number")
        return t2.$sub();
      range = t2 - t1;
      t2 = J.$index$asx(_this.get$tempsByHct(), _this.input);
      t2.toString;
      if (typeof t2 !== "number")
        return t2.$sub();
      return _this._inputRelativeTemperature = range === 0 ? 0.5 : (t2 - t1) / range;
    },
    get$hctsByTemp() {
      var hcts, t1, _this = this;
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(_this._hctsByTemp)))
        return _this._hctsByTemp;
      hcts = B.List_List$from(_this.get$hctsByHue(), true, type$.Hct);
      t1 = J.getInterceptor$ax(hcts);
      t1.add$1(hcts, _this.input);
      t1.sort$1(hcts, new A.TemperatureCache_hctsByTemp_closure(_this.get$tempsByHct()));
      _this.set$_hctsByTemp(hcts);
      return _this._hctsByTemp;
    },
    get$tempsByHct() {
      var t1, allHcts, t2, t3, _this = this;
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(_this._tempsByHct)))
        return _this._tempsByHct;
      t1 = type$.Hct;
      allHcts = B.List_List$from(_this.get$hctsByHue(), true, t1);
      t2 = J.getInterceptor$ax(allHcts);
      t2.add$1(allHcts, _this.input);
      t1 = B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.double);
      for (t2 = t2.get$iterator(allHcts); B.boolConversionCheck(t2.moveNext$0());) {
        t3 = t2.get$current();
        t1.$indexSet(0, t3, A.TemperatureCache_rawTemperature(t3));
      }
      _this.set$_tempsByHct(t1);
      return _this._tempsByHct;
    },
    get$hctsByHue() {
      var hcts, t1, hue, _this = this;
      if (B.boolConversionCheck(J.get$isNotEmpty$asx(_this._hctsByHue)))
        return _this._hctsByHue;
      hcts = B._setArrayType([], type$.JSArray_Hct);
      for (t1 = _this.input, hue = 0; hue <= 360; ++hue)
        F.JSArray_methods.add$1(hcts, A.Hct_from(hue, t1.get$chroma(), t1.get$tone()));
      _this.set$_hctsByHue(B.List_List$from(hcts, false, type$.Hct));
      return _this._hctsByHue;
    },
    set$_hctsByTemp(_hctsByTemp) {
      this._hctsByTemp = type$.List_Hct._as(_hctsByTemp);
    },
    set$_hctsByHue(_hctsByHue) {
      this._hctsByHue = type$.List_Hct._as(_hctsByHue);
    },
    set$_tempsByHct(_tempsByHct) {
      this._tempsByHct = type$.Map_Hct_double._as(_tempsByHct);
    }
  };
  A.CounterWidget.prototype = {
    build$1(context) {
      var t1, t2, _null = null;
      type$.BuildContext._as(context);
      t1 = A.RoundedRectangleBorder$(A.BorderRadius$circular(10), C.BorderSide_xGY);
      t2 = type$.JSArray_Widget;
      return A.MaterialApp$(false, A.Material$(D.Duration_200000, A.Row$(B._setArrayType([A.IconButton$(C.Icon_IconData_58646_null, new A.CounterWidget_build_closure(this)), C.SizedBox_5_null_null_null, A.Column$(B._setArrayType([C.Text_4Wf, A.Text$0(B.S(this.count), A.TextStyle$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, C.FontWeight_6, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null))], t2), C.MainAxisAlignment_2), C.SizedBox_5_null_null_null, A.IconButton$(C.Icon_IconData_57415_null, new A.CounterWidget_build_closure0(this))], t2), C.MainAxisAlignment_5, C.MainAxisSize_1), D.Clip_0, _null, 0, _null, t1, _null, _null, C.MaterialType_0));
    },
    onChange$1(arg0) {
      return this.onChange.call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes(["TonalPalette(DynamicScheme)", "double(DynamicScheme)", "DynamicColor(DynamicScheme)", "~()", "~(AnimationStatus)", "ToneDeltaPair(DynamicScheme)", "Color(Set<WidgetState>)", "~(PaintingContext,Offset)", "~(DragUpdateDetails)", "bool(BoxHitTestResult,Offset)", "Widget(BuildContext)", "bool(Object?)", "WidgetStateProperty<Color?>?(ButtonStyle?)", "bool(_RouteEntry)", "~(Selectable)", "bool(Selectable)", "bool(int)", "int(Object?)", "~(PointerDownEvent)", "~(PointerEvent)", "SystemMouseCursor(Set<WidgetState>)", "bool(Object?,Object?)", "ColorTween(@)", "~(Element0)", "~(NavigatorObserver)", "~(Duration)", "Color(Color)", "WidgetStateProperty<Size?>?(ButtonStyle?)", "bool(InlineSpan)", "~(RestorableProperty<Object?>,~())", "~(TapUpDetails)", "bool(SemanticsNode)", "Widget(BuildContext,Set<WidgetState>,Widget?)?(ButtonStyle?)", "Color?(Color?)", "Rect()", "~(TapDownDetails)", "Tween<double>(@)", "_ZoomEnterTransition(BuildContext,Animation<double>,Widget?)", "_ZoomExitTransition(BuildContext,Animation<double>,Widget?)", "~(@)", "Widget(BuildContext,Widget?)", "TextBox(TextBox)", "+boundaryEnd,boundaryStart(TextPosition,TextPosition)(TextPosition)", "bool(InheritedElement)", "bool(NavigationNotification)", "List<Route<@>>(NavigatorState,String)", "KeyEventResult(FocusNode,KeyEvent)", "double?(RenderBox,BoxConstraints,TextBaseline)", "Tween<@>?(Tween<@>?,@,Tween<@>(@))", "Size(RenderBox,BoxConstraints)", "~(DragEndDetails)", "~(RenderObject)", "WidgetStateProperty<double?>?(ButtonStyle?)", "String(ShapeBorder)", "~(_TapTracker)", "~(PointerEnterEvent)", "~(PointerExitEvent)", "bool(InkHighlight?)", "Color(_HighlightType)", "bool(LayoutChangedNotification)", "VisualDensity?(ButtonStyle?)", "MaterialRectArcTween(Rect?,Rect?)", "ShapeBorderTween(@)", "MaterialTapTargetSize?(ButtonStyle?)", "Duration?(ButtonStyle?)", "PageTransitionsBuilder?(TargetPlatform)", "bool?(ButtonStyle?)", "Widget(BuildContext,~())", "ThemeDataTween(@)", "ThemeData()", "MapEntry<Object,ThemeExtension<@>>(Object,ThemeExtension<@>)", "bool(MapEntry<Object,ThemeExtension<@>>)", "EdgeInsetsGeometry(EdgeInsetsGeometry,ShapeBorder)", "ShapeBorder(ShapeBorder)", "WidgetStateProperty<OutlinedBorder?>?(ButtonStyle?)", "AlignmentGeometry?(ButtonStyle?)", "bool(int,bool)", "GlyphInfo?()", "InteractiveInkFeatureFactory?(ButtonStyle?)", "LineMetrics(LineMetrics)", "DiagnosticsNode(InlineSpan)", "bool(DiagnosticsNode)", "BoxConstraints(RenderBox)", "~(Object?)", "~(_SelectableFragment)", "bool(_SelectableFragment)", "MouseCursor0?(Set<WidgetState>)", "+boundaryEnd,boundaryStart(TextPosition,TextPosition)(TextPosition,String)", "Set<LogicalKeyboardKey>(LogicalKeyboardKey)", "MouseCursor0?(ButtonStyle?)", "~(Action<Intent>)", "TickerFuture({from:double?})", "Route<@>?(RouteSettings)", "Route<@>(RouteSettings)", "MaterialPageRoute<0^>(RouteSettings,Widget(BuildContext))<Object?>", "BorderSide?(Set<WidgetState>)", "Title(BuildContext)", "Color?(Set<WidgetState>)", "DefaultSelectionStyle(BuildContext)", "TapGestureRecognizer()", "~(TapGestureRecognizer)", "DoubleTapGestureRecognizer()", "~(DoubleTapGestureRecognizer)", "LongPressGestureRecognizer()", "~(LongPressGestureRecognizer)", "PanGestureRecognizer()", "~(PanGestureRecognizer)", "~(PointerPanZoomStartEvent)", "Rect()?(RenderBox)", "String(GestureRecognizer)", "~(StatefulElement0,Object)", "Positioned(BuildContext,Widget?)", "~(_HeroFlight)", "Widget(BuildContext,Animation<double>,HeroFlightDirection,BuildContext,BuildContext)", "bool(_HeroFlight)", "MediaQuery(BuildContext,Widget?)", "IconTheme(BuildContext)", "bool(BuildContext)", "~(Intent?)", "BorderRadiusTween(@)", "Future<@>(_Pending)", "bool(Element0)", "bool(Route<@>?)", "bool(OverlayEntry)", "double(_Diagonal)", "~([Intent?])", "_RouteEntry(Route<@>)", "0^?(0^?(ButtonStyle?))<Object?>", "~(FocusHighlightMode)", "Null(RestorationBucket?)", "~(RestorableProperty<Object?>)", "Future<bool>()", "SynchronousFuture<bool>(bool)", "List<DiagnosticsNode>()", "bool(_ModalRouteAspect)", "RestorationScope(BuildContext,Widget?)", "Actions(BuildContext)", "IgnorePointer(BuildContext,Widget?)", "0^?(WidgetStateProperty<0^>?(ButtonStyle?))<Object?>", "Rect(Rect)", "bool(Rect)", "~(bool)", "Color?(ButtonStyle?)", "String(ShortcutActivator)", "~(ShortcutActivator,Intent)", "List<_ActivatorIntentPair>()", "WidgetStateProperty<TextStyle?>?(ButtonStyle?)", "String(String,Color)", "WidgetStateProperty<EdgeInsetsGeometry?>?(ButtonStyle?)", "~(DragStartDetails)", "int(Hct,Hct)", "Size?(Size?,Size?,double)", "double?(num?,num?,double)", "Color?(Color?,Color?,double)", "WidgetStateProperty<BorderSide?>?(ButtonStyle?)", "VelocityTracker(PointerEvent)", "bool?(bool?,bool?,double)", "OutlinedBorder?(OutlinedBorder?,OutlinedBorder?,double)", "EdgeInsetsGeometry?(EdgeInsetsGeometry?,EdgeInsetsGeometry?,double)", "TextStyle?(TextStyle?,TextStyle?,double)", "IconThemeData(IconThemeData?,IconThemeData?,double)", "int(Selectable,Selectable)", "TextStyleTween(@)", "~(RenderSemanticsGestureHandler)"]);
  A.CupertinoDynamicColor_toString_toString.prototype = {
    call$2($name, color) {
      var marker;
      B._asString($name);
      type$.Color._as(color);
      marker = B.boolConversionCheck(color.$eq(0, this.$this._effectiveColor)) ? "*" : "";
      return marker + $name + " = " + B.S(color) + marker;
    },
    $signature: typesOffset + 147
  };
  A.CupertinoRouteTransitionMixin__startPopGesture_closure0.prototype = {
    call$0() {
      return this.route.get$isCurrent();
    },
    $signature: 33
  };
  A.CupertinoRouteTransitionMixin__startPopGesture_closure.prototype = {
    call$0() {
      return this.route.get$isActive();
    },
    $signature: 33
  };
  A.CupertinoRouteTransitionMixin_buildPageTransitions_closure.prototype = {
    call$0() {
      return this.route.get$popGestureEnabled();
    },
    $signature: 33
  };
  A.CupertinoRouteTransitionMixin_buildPageTransitions_closure0.prototype = {
    call$0() {
      return A.CupertinoRouteTransitionMixin__startPopGesture(this.route, this.T);
    },
    $signature() {
      return this.T._eval$1("_CupertinoBackGestureController<0>()");
    }
  };
  A._CupertinoBackGestureDetectorState_dispose_closure.prototype = {
    call$1(_) {
      var t1, t2;
      type$.Duration._as(_);
      t1 = this.$this;
      t2 = t1._backGestureController;
      t2 = t2 == null ? null : t2.navigator.get$mounted();
      if (B.boolConversionCheck(t2 == null ? false : t2)) {
        t2 = t1._backGestureController;
        if (t2 != null)
          t2.navigator.didStopUserGesture$0();
      }
      t1.set$_backGestureController(null);
    },
    $signature: 3
  };
  A._CupertinoBackGestureController_dragEnd_closure.prototype = {
    call$1($status) {
      var t1;
      type$.AnimationStatus._as($status);
      t1 = this.$this;
      t1.navigator.didStopUserGesture$0();
      t1.controller.removeStatusListener$1(this.animationStatusCallback.readLocal$1$0(type$.void_Function_AnimationStatus));
    },
    $signature: typesOffset + 4
  };
  A._CupertinoEdgeShadowDecoration_lerp_closure.prototype = {
    call$1(color) {
      var t1 = A.Color_lerp(null, type$.Color._as(color), this.t);
      t1.toString;
      return t1;
    },
    $signature: typesOffset + 26
  };
  A._CupertinoEdgeShadowDecoration_lerp_closure0.prototype = {
    call$1(color) {
      var t1;
      type$.Color._as(color);
      t1 = this.t;
      if (typeof t1 !== "number")
        return B.iae(t1);
      t1 = A.Color_lerp(null, color, 1 - t1);
      t1.toString;
      return t1;
    },
    $signature: typesOffset + 26
  };
  A.CupertinoThemeData_resolveFrom_convertColor.prototype = {
    call$1(color) {
      return A.CupertinoDynamicColor_maybeResolve(type$.nullable_Color._as(color), this.context);
    },
    $signature: typesOffset + 33
  };
  A.NoDefaultCupertinoThemeData_resolveFrom_convertColor.prototype = {
    call$1(color) {
      return A.CupertinoDynamicColor_maybeResolve(type$.nullable_Color._as(color), this.context);
    },
    $signature: typesOffset + 33
  };
  A._CupertinoThemeDefaults_resolveFrom_convertColor.prototype = {
    call$1(color) {
      return A.CupertinoDynamicColor_resolve(type$.Color._as(color), this.context);
    },
    $signature: typesOffset + 26
  };
  A.FlagsSummary__hasNonNullEntry_closure.prototype = {
    call$1(o) {
      return this.$this.$ti._eval$1("1?")._as(o) != null;
    },
    $signature() {
      return this.$this.$ti._eval$1("bool(1?)");
    }
  };
  A.FlagsSummary__formattedValues_closure.prototype = {
    call$1(entry) {
      return this.$this.$ti._eval$1("MapEntry<String,1?>")._as(entry).value != null;
    },
    $signature() {
      return this.$this.$ti._eval$1("bool(MapEntry<String,1?>)");
    }
  };
  A.FlagsSummary__formattedValues_closure0.prototype = {
    call$1(entry) {
      return this.$this.$ti._eval$1("MapEntry<String,1?>")._as(entry).key;
    },
    $signature() {
      return this.$this.$ti._eval$1("String(MapEntry<String,1?>)");
    }
  };
  A.LongPressGestureRecognizer__checkLongPressDown_closure.prototype = {
    call$0() {
      return this.$this.onLongPressDown.call$1(this.details);
    },
    $signature: 0
  };
  A.LongPressGestureRecognizer__checkLongPressDown_closure0.prototype = {
    call$0() {
      return this.$this.onSecondaryLongPressDown.call$1(this.details);
    },
    $signature: 0
  };
  A.LongPressGestureRecognizer__checkLongPressDown_closure1.prototype = {
    call$0() {
      return this.$this.onTertiaryLongPressDown.call$1(this.details);
    },
    $signature: 0
  };
  A.LongPressGestureRecognizer__checkLongPressStart_closure.prototype = {
    call$0() {
      return this.$this.onLongPressStart.call$1(this.details);
    },
    $signature: 0
  };
  A.LongPressGestureRecognizer__checkLongPressStart_closure0.prototype = {
    call$0() {
      return this.$this.onSecondaryLongPressStart.call$1(this.details);
    },
    $signature: 0
  };
  A.LongPressGestureRecognizer__checkLongPressStart_closure1.prototype = {
    call$0() {
      return this.$this.onTertiaryLongPressStart.call$1(this.details);
    },
    $signature: 0
  };
  A.LongPressGestureRecognizer__checkLongPressMoveUpdate_closure.prototype = {
    call$0() {
      return this.$this.onLongPressMoveUpdate.call$1(this.details);
    },
    $signature: 0
  };
  A.LongPressGestureRecognizer__checkLongPressMoveUpdate_closure0.prototype = {
    call$0() {
      return this.$this.onSecondaryLongPressMoveUpdate.call$1(this.details);
    },
    $signature: 0
  };
  A.LongPressGestureRecognizer__checkLongPressMoveUpdate_closure1.prototype = {
    call$0() {
      return this.$this.onTertiaryLongPressMoveUpdate.call$1(this.details);
    },
    $signature: 0
  };
  A.LongPressGestureRecognizer__checkLongPressEnd_closure.prototype = {
    call$0() {
      return this.$this.onLongPressEnd.call$1(this.details);
    },
    $signature: 0
  };
  A.LongPressGestureRecognizer__checkLongPressEnd_closure0.prototype = {
    call$0() {
      return this.$this.onSecondaryLongPressEnd.call$1(this.details);
    },
    $signature: 0
  };
  A.LongPressGestureRecognizer__checkLongPressEnd_closure1.prototype = {
    call$0() {
      return this.$this.onTertiaryLongPressEnd.call$1(this.details);
    },
    $signature: 0
  };
  A.PolynomialFit_toString_closure.prototype = {
    call$1(c) {
      return F.JSNumber_methods.toStringAsPrecision$1(B._asDouble(c), 3);
    },
    $signature: 130
  };
  A.DragGestureRecognizer__checkDown_closure.prototype = {
    call$0() {
      return this.$this.onDown.call$1(this.details);
    },
    $signature: 0
  };
  A.DragGestureRecognizer__checkStart_closure.prototype = {
    call$0() {
      return this.$this.onStart.call$1(this.details);
    },
    $signature: 0
  };
  A.DragGestureRecognizer__checkUpdate_closure.prototype = {
    call$0() {
      return this.$this.onUpdate.call$1(this.details);
    },
    $signature: 0
  };
  A.DragGestureRecognizer__checkEnd_closure.prototype = {
    call$0() {
      return "Could not estimate velocity.";
    },
    $signature: 10
  };
  A.DragGestureRecognizer__checkEnd_closure0.prototype = {
    call$0() {
      return B.S(this.estimate) + "; fling at " + B.S(this._box_0.details.velocity) + ".";
    },
    $signature: 10
  };
  A.DragGestureRecognizer__checkEnd_closure1.prototype = {
    call$0() {
      return B.S(this.estimate) + "; judged to not be a fling.";
    },
    $signature: 10
  };
  A.DragGestureRecognizer__checkEnd_closure2.prototype = {
    call$0() {
      var t2,
        t1 = this.$this.onEnd;
      t1.toString;
      t2 = this._box_0.details;
      t2.toString;
      return t1.call$1(t2);
    },
    $signature: 0
  };
  A.DoubleTapGestureRecognizer_addAllowedPointer_closure.prototype = {
    call$0() {
      return this.$this.onDoubleTapDown.call$1(this.details);
    },
    $signature: 0
  };
  A.PrimaryPointerGestureRecognizer_addAllowedPointer_closure.prototype = {
    call$0() {
      return this.$this.didExceedDeadlineWithEvent$1(this.event);
    },
    $signature: 0
  };
  A.TapGestureRecognizer_handleTapDown_closure.prototype = {
    call$0() {
      return this.$this.onTapDown.call$1(this.details);
    },
    $signature: 0
  };
  A.TapGestureRecognizer_handleTapDown_closure0.prototype = {
    call$0() {
      return this.$this.onSecondaryTapDown.call$1(this.details);
    },
    $signature: 0
  };
  A.TapGestureRecognizer_handleTapDown_closure1.prototype = {
    call$0() {
      return this.$this.onTertiaryTapDown.call$1(this.details);
    },
    $signature: 0
  };
  A.TapGestureRecognizer_handleTapUp_closure.prototype = {
    call$0() {
      return this.$this.onTapUp.call$1(this.details);
    },
    $signature: 0
  };
  A.TapGestureRecognizer_handleTapUp_closure0.prototype = {
    call$0() {
      return this.$this.onSecondaryTapUp.call$1(this.details);
    },
    $signature: 0
  };
  A.TapGestureRecognizer_handleTapUp_closure1.prototype = {
    call$0() {
      return this.$this.onSecondaryTap.call$0();
    },
    $signature: 0
  };
  A.TapGestureRecognizer_handleTapUp_closure2.prototype = {
    call$0() {
      return this.$this.onTertiaryTapUp.call$1(this.details);
    },
    $signature: 0
  };
  A.MaterialApp_createMaterialHeroController_closure.prototype = {
    call$2(begin, end) {
      var t1 = type$.nullable_Rect;
      return A.MaterialRectArcTween$(t1._as(begin), t1._as(end));
    },
    $signature: typesOffset + 61
  };
  A._MaterialAppState__buildWidgetApp_closure.prototype = {
    call$1$2(settings, builder, $T) {
      type$.RouteSettings._as(settings);
      return A.MaterialPageRoute$(type$.Widget_Function_BuildContext._as(builder), settings, $T);
    },
    call$2(settings, builder) {
      return this.call$1$2(settings, builder, type$.dynamic);
    },
    $signature: typesOffset + 94
  };
  A._MaterialAppState_build_closure.prototype = {
    call$2(node, $event) {
      type$.FocusNode._as(node);
      type$.KeyEvent._as($event);
      if (!type$.KeyDownEvent._is($event) && !type$.KeyRepeatEvent._is($event) || !B.boolConversionCheck(J.$eq$($event.logicalKey, D.LogicalKeyboardKey_4294967323)))
        return D.KeyEventResult_1;
      return B.boolConversionCheck(A.Tooltip_dismissAllToolTips()) ? D.KeyEventResult_0 : D.KeyEventResult_1;
    },
    $signature: typesOffset + 46
  };
  A.MaterialPointArcTween__initialize_sweepAngle.prototype = {
    call$0() {
      var t1 = this.distanceFromAtoB,
        t2 = this.$this._arc$_radius;
      t2.toString;
      if (typeof t2 !== "number")
        return B.iae(t2);
      if (typeof t1 !== "number")
        return t1.$div();
      t2 = A.asin(t1 / (2 * t2));
      if (typeof t2 !== "number")
        return B.iae(t2);
      return 2 * t2;
    },
    $signature: 131
  };
  A.MaterialRectArcTween__initialize_closure.prototype = {
    call$1(d) {
      return this.$this._diagonalSupport$2(this.centersVector, type$._Diagonal._as(d));
    },
    $signature: typesOffset + 124
  };
  A._RenderInputPadding_hitTest_closure0.prototype = {
    call$2(result, position) {
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      return this.$this.get$child().hitTest$2$position(result, this.center);
    },
    $signature: typesOffset + 9
  };
  A._ButtonStyleState_handleStatesControllerChange_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._ButtonStyleState_build_effectiveValue.prototype = {
    call$1$1(getProperty, $T) {
      var widgetValue, themeValue, defaultValue, t1;
      $T._eval$1("0?(ButtonStyle?)")._as(getProperty);
      widgetValue = getProperty.call$1(this.widgetStyle);
      themeValue = getProperty.call$1(this.themeStyle);
      defaultValue = getProperty.call$1(this.defaultStyle);
      t1 = widgetValue == null ? themeValue : widgetValue;
      return t1 == null ? defaultValue : t1;
    },
    call$1(getProperty) {
      return this.call$1$1(getProperty, type$.dynamic);
    },
    $signature: typesOffset + 127
  };
  A._ButtonStyleState_build_resolve.prototype = {
    call$1$1(getProperty, $T) {
      return this.effectiveValue.call$1$1(new A._ButtonStyleState_build_resolve_closure(this.$this, $T._eval$1("WidgetStateProperty<0>?(ButtonStyle?)")._as(getProperty), $T), $T);
    },
    call$1(getProperty) {
      return this.call$1$1(getProperty, type$.dynamic);
    },
    $signature: typesOffset + 138
  };
  A._ButtonStyleState_build_resolve_closure.prototype = {
    call$1(style) {
      var t1 = this.getProperty.call$1(type$.nullable_ButtonStyle._as(style));
      return t1 == null ? null : t1.resolve$1(this.$this.get$statesController().get$value());
    },
    $signature() {
      return this.T._eval$1("0?(ButtonStyle?)");
    }
  };
  A._ButtonStyleState_build_closure.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.get$elevation();
    },
    $signature: typesOffset + 52
  };
  A._ButtonStyleState_build_closure0.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.textStyle;
    },
    $signature: typesOffset + 146
  };
  A._ButtonStyleState_build_closure1.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.get$backgroundColor();
    },
    $signature: typesOffset + 12
  };
  A._ButtonStyleState_build_closure2.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.get$foregroundColor();
    },
    $signature: typesOffset + 12
  };
  A._ButtonStyleState_build_closure3.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.get$shadowColor();
    },
    $signature: typesOffset + 12
  };
  A._ButtonStyleState_build_closure4.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.get$surfaceTintColor();
    },
    $signature: typesOffset + 12
  };
  A._ButtonStyleState_build_closure5.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.get$padding();
    },
    $signature: typesOffset + 148
  };
  A._ButtonStyleState_build_closure6.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.get$minimumSize();
    },
    $signature: typesOffset + 27
  };
  A._ButtonStyleState_build_closure7.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.fixedSize;
    },
    $signature: typesOffset + 27
  };
  A._ButtonStyleState_build_closure8.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.get$maximumSize();
    },
    $signature: typesOffset + 27
  };
  A._ButtonStyleState_build_closure9.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.iconColor;
    },
    $signature: typesOffset + 12
  };
  A._ButtonStyleState_build_closure10.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.get$iconSize();
    },
    $signature: typesOffset + 52
  };
  A._ButtonStyleState_build_closure11.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.get$side();
    },
    $signature: typesOffset + 154
  };
  A._ButtonStyleState_build_closure12.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.get$shape();
    },
    $signature: typesOffset + 74
  };
  A._ButtonStyleState_build_closure13.prototype = {
    call$1(states) {
      return this.effectiveValue.call$1$1(new A._ButtonStyleState_build__closure1(type$.Set_WidgetState._as(states)), type$.MouseCursor);
    },
    $signature: typesOffset + 86
  };
  A._ButtonStyleState_build__closure1.prototype = {
    call$1(style) {
      var t1;
      type$.nullable_ButtonStyle._as(style);
      if (style == null)
        t1 = null;
      else {
        t1 = style.get$mouseCursor();
        t1 = t1 == null ? null : t1.resolve$1(this.states);
      }
      return t1;
    },
    $signature: typesOffset + 89
  };
  A._ButtonStyleState_build_closure14.prototype = {
    call$1(states) {
      return this.effectiveValue.call$1$1(new A._ButtonStyleState_build__closure0(type$.Set_WidgetState._as(states)), type$.Color);
    },
    $signature: typesOffset + 97
  };
  A._ButtonStyleState_build__closure0.prototype = {
    call$1(style) {
      var t1;
      type$.nullable_ButtonStyle._as(style);
      if (style == null)
        t1 = null;
      else {
        t1 = style.get$overlayColor();
        t1 = t1 == null ? null : t1.resolve$1(this.states);
      }
      return t1;
    },
    $signature: typesOffset + 142
  };
  A._ButtonStyleState_build_closure15.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.get$visualDensity();
    },
    $signature: typesOffset + 60
  };
  A._ButtonStyleState_build_closure16.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.get$tapTargetSize();
    },
    $signature: typesOffset + 63
  };
  A._ButtonStyleState_build_closure17.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.animationDuration;
    },
    $signature: typesOffset + 64
  };
  A._ButtonStyleState_build_closure18.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.enableFeedback;
    },
    $signature: typesOffset + 66
  };
  A._ButtonStyleState_build_closure19.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.alignment;
    },
    $signature: typesOffset + 75
  };
  A._ButtonStyleState_build_closure20.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.get$splashFactory();
    },
    $signature: typesOffset + 78
  };
  A._ButtonStyleState_build_closure21.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.backgroundBuilder;
    },
    $signature: typesOffset + 32
  };
  A._ButtonStyleState_build_closure22.prototype = {
    call$1(style) {
      type$.nullable_ButtonStyle._as(style);
      return style == null ? null : style.foregroundBuilder;
    },
    $signature: typesOffset + 32
  };
  A._ButtonStyleState_build_closure23.prototype = {
    call$1($status) {
      if (type$.AnimationStatus._as($status) === C.AnimationStatus_3)
        this.$this.setState$1(new A._ButtonStyleState_build__closure());
    },
    $signature: typesOffset + 4
  };
  A._ButtonStyleState_build__closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._RenderInputPadding_hitTest_closure.prototype = {
    call$2(result, position) {
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(position);
      return this.$this.get$child().hitTest$2$position(result, this.center);
    },
    $signature: typesOffset + 9
  };
  A._IconButtonDefaultsM3_foregroundColor_closure.prototype = {
    call$1(states) {
      type$.Set_WidgetState._as(states);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_6)))
        return this.$this.get$_colors().onSurface.withOpacity$1(0.38);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_4)))
        return this.$this.get$_colors().primary;
      return this.$this.get$_colors().get$onSurfaceVariant();
    },
    $signature: typesOffset + 6
  };
  A._IconButtonDefaultsM3_overlayColor_closure.prototype = {
    call$1(states) {
      var _this = this;
      type$.Set_WidgetState._as(states);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_4))) {
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_2)))
          return _this.$this.get$_colors().primary.withOpacity$1(0.1);
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_0)))
          return _this.$this.get$_colors().primary.withOpacity$1(0.08);
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_1)))
          return _this.$this.get$_colors().primary.withOpacity$1(0.1);
      }
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_2)))
        return _this.$this.get$_colors().get$onSurfaceVariant().withOpacity$1(0.1);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_0)))
        return _this.$this.get$_colors().get$onSurfaceVariant().withOpacity$1(0.08);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_1)))
        return _this.$this.get$_colors().get$onSurfaceVariant().withOpacity$1(0.1);
      return D.Color_0;
    },
    $signature: typesOffset + 6
  };
  A._IconButtonDefaultsM3_mouseCursor_closure.prototype = {
    call$1(states) {
      if (B.boolConversionCheck(type$.Set_WidgetState._as(states).contains$1(0, C.WidgetState_6)))
        return D.SystemMouseCursor_basic;
      return C.SystemMouseCursor_click;
    },
    $signature: typesOffset + 20
  };
  A._FilledIconButtonDefaultsM3_backgroundColor_closure.prototype = {
    call$1(states) {
      var t1;
      type$.Set_WidgetState._as(states);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_6)))
        return this.$this.get$_colors().onSurface.withOpacity$1(0.12);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_4)))
        return this.$this.get$_colors().primary;
      t1 = this.$this;
      if (B.boolConversionCheck(t1.toggleable))
        return t1.get$_colors().get$surfaceContainerHighest();
      return t1.get$_colors().primary;
    },
    $signature: typesOffset + 6
  };
  A._FilledIconButtonDefaultsM3_foregroundColor_closure.prototype = {
    call$1(states) {
      var t1;
      type$.Set_WidgetState._as(states);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_6)))
        return this.$this.get$_colors().onSurface.withOpacity$1(0.38);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_4)))
        return this.$this.get$_colors().onPrimary;
      t1 = this.$this;
      if (B.boolConversionCheck(t1.toggleable))
        return t1.get$_colors().primary;
      return t1.get$_colors().onPrimary;
    },
    $signature: typesOffset + 6
  };
  A._FilledIconButtonDefaultsM3_overlayColor_closure.prototype = {
    call$1(states) {
      var t1, _this = this;
      type$.Set_WidgetState._as(states);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_4))) {
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_2)))
          return _this.$this.get$_colors().onPrimary.withOpacity$1(0.1);
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_0)))
          return _this.$this.get$_colors().onPrimary.withOpacity$1(0.08);
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_1)))
          return _this.$this.get$_colors().onPrimary.withOpacity$1(0.1);
      }
      t1 = _this.$this;
      if (B.boolConversionCheck(t1.toggleable)) {
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_2)))
          return t1.get$_colors().primary.withOpacity$1(0.1);
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_0)))
          return t1.get$_colors().primary.withOpacity$1(0.08);
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_1)))
          return t1.get$_colors().primary.withOpacity$1(0.1);
      }
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_2)))
        return t1.get$_colors().onPrimary.withOpacity$1(0.1);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_0)))
        return t1.get$_colors().onPrimary.withOpacity$1(0.08);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_1)))
        return t1.get$_colors().onPrimary.withOpacity$1(0.1);
      return D.Color_0;
    },
    $signature: typesOffset + 6
  };
  A._FilledIconButtonDefaultsM3_mouseCursor_closure.prototype = {
    call$1(states) {
      if (B.boolConversionCheck(type$.Set_WidgetState._as(states).contains$1(0, C.WidgetState_6)))
        return D.SystemMouseCursor_basic;
      return C.SystemMouseCursor_click;
    },
    $signature: typesOffset + 20
  };
  A._FilledTonalIconButtonDefaultsM3_backgroundColor_closure.prototype = {
    call$1(states) {
      var t1;
      type$.Set_WidgetState._as(states);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_6)))
        return this.$this.get$_colors().onSurface.withOpacity$1(0.12);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_4)))
        return this.$this.get$_colors().get$secondaryContainer();
      t1 = this.$this;
      if (B.boolConversionCheck(t1.toggleable))
        return t1.get$_colors().get$surfaceContainerHighest();
      return t1.get$_colors().get$secondaryContainer();
    },
    $signature: typesOffset + 6
  };
  A._FilledTonalIconButtonDefaultsM3_foregroundColor_closure.prototype = {
    call$1(states) {
      var t1;
      type$.Set_WidgetState._as(states);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_6)))
        return this.$this.get$_colors().onSurface.withOpacity$1(0.38);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_4)))
        return this.$this.get$_colors().get$onSecondaryContainer();
      t1 = this.$this;
      if (B.boolConversionCheck(t1.toggleable))
        return t1.get$_colors().get$onSurfaceVariant();
      return t1.get$_colors().get$onSecondaryContainer();
    },
    $signature: typesOffset + 6
  };
  A._FilledTonalIconButtonDefaultsM3_overlayColor_closure.prototype = {
    call$1(states) {
      var t1, _this = this;
      type$.Set_WidgetState._as(states);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_4))) {
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_2)))
          return _this.$this.get$_colors().get$onSecondaryContainer().withOpacity$1(0.1);
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_0)))
          return _this.$this.get$_colors().get$onSecondaryContainer().withOpacity$1(0.08);
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_1)))
          return _this.$this.get$_colors().get$onSecondaryContainer().withOpacity$1(0.1);
      }
      t1 = _this.$this;
      if (B.boolConversionCheck(t1.toggleable)) {
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_2)))
          return t1.get$_colors().get$onSurfaceVariant().withOpacity$1(0.1);
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_0)))
          return t1.get$_colors().get$onSurfaceVariant().withOpacity$1(0.08);
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_1)))
          return t1.get$_colors().get$onSurfaceVariant().withOpacity$1(0.1);
      }
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_2)))
        return t1.get$_colors().get$onSecondaryContainer().withOpacity$1(0.1);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_0)))
        return t1.get$_colors().get$onSecondaryContainer().withOpacity$1(0.08);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_1)))
        return t1.get$_colors().get$onSecondaryContainer().withOpacity$1(0.1);
      return D.Color_0;
    },
    $signature: typesOffset + 6
  };
  A._FilledTonalIconButtonDefaultsM3_mouseCursor_closure.prototype = {
    call$1(states) {
      if (B.boolConversionCheck(type$.Set_WidgetState._as(states).contains$1(0, C.WidgetState_6)))
        return D.SystemMouseCursor_basic;
      return C.SystemMouseCursor_click;
    },
    $signature: typesOffset + 20
  };
  A._OutlinedIconButtonDefaultsM3_backgroundColor_closure.prototype = {
    call$1(states) {
      type$.Set_WidgetState._as(states);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_6))) {
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_4)))
          return this.$this.get$_colors().onSurface.withOpacity$1(0.12);
        return D.Color_0;
      }
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_4)))
        return this.$this.get$_colors().get$inverseSurface();
      return D.Color_0;
    },
    $signature: typesOffset + 6
  };
  A._OutlinedIconButtonDefaultsM3_foregroundColor_closure.prototype = {
    call$1(states) {
      type$.Set_WidgetState._as(states);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_6)))
        return this.$this.get$_colors().onSurface.withOpacity$1(0.38);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_4)))
        return this.$this.get$_colors().get$onInverseSurface();
      return this.$this.get$_colors().get$onSurfaceVariant();
    },
    $signature: typesOffset + 6
  };
  A._OutlinedIconButtonDefaultsM3_overlayColor_closure.prototype = {
    call$1(states) {
      var _this = this;
      type$.Set_WidgetState._as(states);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_4))) {
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_2)))
          return _this.$this.get$_colors().get$onInverseSurface().withOpacity$1(0.1);
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_0)))
          return _this.$this.get$_colors().get$onInverseSurface().withOpacity$1(0.08);
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_1)))
          return _this.$this.get$_colors().get$onInverseSurface().withOpacity$1(0.08);
      }
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_2)))
        return _this.$this.get$_colors().onSurface.withOpacity$1(0.1);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_0)))
        return _this.$this.get$_colors().get$onSurfaceVariant().withOpacity$1(0.08);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_1)))
        return _this.$this.get$_colors().get$onSurfaceVariant().withOpacity$1(0.08);
      return D.Color_0;
    },
    $signature: typesOffset + 6
  };
  A._OutlinedIconButtonDefaultsM3_side_closure.prototype = {
    call$1(states) {
      type$.Set_WidgetState._as(states);
      if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_4)))
        return null;
      else {
        if (B.boolConversionCheck(states.contains$1(0, C.WidgetState_6)))
          return A.BorderSide$(this.$this.get$_colors().onSurface.withOpacity$1(0.12), -1, C.BorderStyle_1, 1);
        return A.BorderSide$(this.$this.get$_colors().get$outline(), -1, C.BorderStyle_1, 1);
      }
    },
    $signature: typesOffset + 95
  };
  A._OutlinedIconButtonDefaultsM3_mouseCursor_closure.prototype = {
    call$1(states) {
      if (B.boolConversionCheck(type$.Set_WidgetState._as(states).contains$1(0, C.WidgetState_6)))
        return D.SystemMouseCursor_basic;
      return C.SystemMouseCursor_click;
    },
    $signature: typesOffset + 20
  };
  A._getClipCallback_closure0.prototype = {
    call$0() {
      return D.Offset_0_0.$and(0, this.referenceBox.get$size());
    },
    $signature: typesOffset + 34
  };
  A._getClipCallback_closure.prototype = {
    call$0() {
      return D.Offset_0_0.$and(0, this.referenceBox.get$size());
    },
    $signature: typesOffset + 34
  };
  A._InkResponseState_highlightsExist_closure.prototype = {
    call$1(highlight) {
      return type$.nullable_InkHighlight._as(highlight) != null;
    },
    $signature: typesOffset + 57
  };
  A._InkResponseState_activateOnIntent_closure.prototype = {
    call$0() {
      this.$this.updateHighlight$2$value(C._HighlightType_0, false);
    },
    $signature: 0
  };
  A._InkResponseState_handleStatesControllerChange_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._InkResponseState_updateHighlight_handleInkRemoval.prototype = {
    call$0() {
      var t1 = this.$this;
      J.$indexSet$ax(t1._highlights, this.type, null);
      t1.updateKeepAlive$0();
    },
    $signature: 0
  };
  A._InkResponseState__createSplash_onRemoved.prototype = {
    call$0() {
      var t3,
        t1 = this.$this,
        t2 = t1._splashes;
      if (t2 != null) {
        t3 = this._box_0;
        J.remove$1$ax(t2, t3.splash);
        if (B.boolConversionCheck(J.$eq$(t1._currentSplash, t3.splash)))
          t1._currentSplash = null;
        t1.updateKeepAlive$0();
      }
    },
    $signature: 0
  };
  A._InkResponseState_handleFocusHighlightModeChange_closure.prototype = {
    call$0() {
      this.$this.updateFocusHighlights$0();
    },
    $signature: 0
  };
  A._InkResponseState_build_getHighlightColorForType.prototype = {
    call$1(type) {
      var theme, t1, t2, _this = this, _null = null;
      type$._HighlightType._as(type);
      theme = A.Theme_of(_this.context);
      switch (type.index) {
        case 0:
          t1 = _this.$this;
          t2 = t1.get$widget().overlayColor;
          t2 = t2 == null ? _null : t2.resolve$1(C.Set_VEyFa);
          t1 = t2 == null ? t1.get$widget().highlightColor : t2;
          if (t1 == null)
            t1 = theme.highlightColor;
          break;
        case 2:
          t1 = _this.$this;
          t2 = t1.get$widget().overlayColor;
          t2 = t2 == null ? _null : t2.resolve$1(C.Set_Y7pti);
          t1 = t2 == null ? t1.get$widget().focusColor : t2;
          if (t1 == null)
            t1 = theme.focusColor;
          break;
        case 1:
          t1 = _this.$this;
          t2 = t1.get$widget().overlayColor;
          t2 = t2 == null ? _null : t2.resolve$1(C.Set_MpbDd);
          t1 = t2 == null ? t1.get$widget().hoverColor : t2;
          if (t1 == null)
            t1 = theme.hoverColor;
          break;
        default:
          t1 = _null;
      }
      return t1;
    },
    $signature: typesOffset + 58
  };
  A._MaterialState_build_closure.prototype = {
    call$1(notification) {
      var t1;
      type$.LayoutChangedNotification._as(notification);
      t1 = this.$this._inkFeatureRenderer.get$currentContext().findRenderObject$0();
      t1.toString;
      type$._RenderInkFeatures._as(t1)._didChangeLayout$0();
      return false;
    },
    $signature: typesOffset + 59
  };
  A._MaterialInteriorState_forEachTween_closure.prototype = {
    call$1(value) {
      return A.Tween$(B._asDouble(value), null, type$.double);
    },
    $signature: typesOffset + 36
  };
  A._MaterialInteriorState_forEachTween_closure0.prototype = {
    call$1(value) {
      return A.ColorTween$(type$.Color._as(value), null);
    },
    $signature: typesOffset + 22
  };
  A._MaterialInteriorState_forEachTween_closure1.prototype = {
    call$1(value) {
      return A.ColorTween$(type$.Color._as(value), null);
    },
    $signature: typesOffset + 22
  };
  A._MaterialInteriorState_forEachTween_closure2.prototype = {
    call$1(value) {
      return A.ShapeBorderTween$(type$.ShapeBorder._as(value));
    },
    $signature: typesOffset + 62
  };
  A.MaterialStateMixin_updateMaterialState_closure.prototype = {
    call$1(value) {
      var t1, t2;
      B._asBool(value);
      t1 = this.$this;
      t2 = this.key;
      if (B.boolConversionCheck(J.$eq$(J.contains$1$asx(t1.MaterialStateMixin_materialStates, t2), value)))
        return;
      t1.setMaterialState$2(t2, value);
      t1 = this.onChanged;
      if (t1 != null)
        t1.call$1(value);
    },
    $signature: 12
  };
  A.MaterialStateMixin_addMaterialState_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.MaterialStateMixin_removeMaterialState_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._ZoomPageTransition_build_closure1.prototype = {
    call$3(context, animation, child) {
      var t1;
      type$.BuildContext._as(context);
      type$.Animation_double._as(animation);
      type$.nullable_Widget._as(child);
      t1 = this.$this;
      return A._ZoomEnterTransition$(B.boolConversionCheck(t1.allowSnapshotting) && B.boolConversionCheck(t1.allowEnterRouteSnapshotting), animation, child, false);
    },
    $signature: typesOffset + 37
  };
  A._ZoomPageTransition_build_closure2.prototype = {
    call$3(context, animation, child) {
      type$.BuildContext._as(context);
      type$.Animation_double._as(animation);
      type$.nullable_Widget._as(child);
      return A._ZoomExitTransition$(this.$this.allowSnapshotting, animation, child, true);
    },
    $signature: typesOffset + 38
  };
  A._ZoomPageTransition_build_closure.prototype = {
    call$3(context, animation, child) {
      var t1;
      type$.BuildContext._as(context);
      type$.Animation_double._as(animation);
      type$.nullable_Widget._as(child);
      t1 = this.$this;
      return A._ZoomEnterTransition$(B.boolConversionCheck(t1.allowSnapshotting) && B.boolConversionCheck(t1.allowEnterRouteSnapshotting), animation, child, true);
    },
    $signature: typesOffset + 37
  };
  A._ZoomPageTransition_build_closure0.prototype = {
    call$3(context, animation, child) {
      type$.BuildContext._as(context);
      type$.Animation_double._as(animation);
      type$.nullable_Widget._as(child);
      return A._ZoomExitTransition$(this.$this.allowSnapshotting, animation, child, false);
    },
    $signature: typesOffset + 38
  };
  A.PageTransitionsTheme__all_closure.prototype = {
    call$1(platform) {
      return J.$index$asx(this.builders, type$.TargetPlatform._as(platform));
    },
    $signature: typesOffset + 65
  };
  A._ZoomEnterTransitionPainter_paint_closure.prototype = {
    call$2(context, offset) {
      var t1, t2;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      t1 = this.$this;
      t2 = t1._opacityHandle;
      t1 = t1.fade.get$value();
      if (typeof t1 !== "number")
        return t1.$mul();
      t2.set$layer(context.pushOpacity$4$oldLayer(offset, F.JSNumber_methods.round$0(t1 * 255), this.painter, t2.get$layer()));
    },
    $signature: typesOffset + 7
  };
  A._ZoomExitTransitionPainter_paint_closure.prototype = {
    call$2(context, offset) {
      var t1, t2;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      t1 = this.$this;
      t2 = t1._opacityHandle;
      t1 = t1.fade.get$value();
      if (typeof t1 !== "number")
        return t1.$mul();
      t2.set$layer(context.pushOpacity$4$oldLayer(offset, F.JSNumber_methods.round$0(t1 * 255), this.painter, t2.get$layer()));
    },
    $signature: typesOffset + 7
  };
  A.ScaffoldMessengerState_hideCurrentSnackBar_closure.prototype = {
    call$1(value) {
      var t1 = this.completer;
      if (!B.boolConversionCheck(t1.get$isCompleted()))
        t1.complete$1(this.reason);
    },
    $signature: 5
  };
  A._AnimatedThemeState_forEachTween_closure.prototype = {
    call$1(value) {
      return A.ThemeDataTween$(type$.ThemeData._as(value));
    },
    $signature: typesOffset + 68
  };
  A.ThemeData_localize_closure.prototype = {
    call$0() {
      var t1 = this.baseTheme,
        t2 = this.localTextGeometry;
      return t1.copyWith$2$primaryTextTheme$textTheme(t2.merge$1(t1.primaryTextTheme), t2.merge$1(t1.textTheme));
    },
    $signature: typesOffset + 69
  };
  A.ThemeData__lerpThemeExtensions_closure.prototype = {
    call$2(id, extensionA) {
      var t2,
        t1 = type$.Object;
      t1._as(id);
      t2 = type$.ThemeExtension_dynamic;
      return B.MapEntry$_(id, t2._as(extensionA).lerp$2(J.$index$asx(this.b.extensions, id), this.t), t1, t2);
    },
    $signature: typesOffset + 70
  };
  A.ThemeData__lerpThemeExtensions_closure0.prototype = {
    call$1(entry) {
      type$.MapEntry_of_Object_and_ThemeExtension_dynamic._as(entry);
      return !B.boolConversionCheck(this.a.extensions.containsKey$1(entry.key));
    },
    $signature: typesOffset + 71
  };
  A.TimePickerThemeData_dayPeriodColor_closure.prototype = {
    call$1(states) {
      var t1;
      if (B.boolConversionCheck(type$.Set_WidgetState._as(states).contains$1(0, C.WidgetState_4))) {
        t1 = this.$this._dayPeriodColor;
        return t1 == null ? type$.Color._as(t1) : t1;
      }
      return D.Color_0;
    },
    $signature: typesOffset + 6
  };
  A._CompoundBorder_dimensions_closure.prototype = {
    call$2(previousValue, border) {
      return type$.EdgeInsetsGeometry._as(previousValue).add$1(0, type$.ShapeBorder._as(border).get$dimensions());
    },
    $signature: typesOffset + 72
  };
  A._CompoundBorder_scale_closure.prototype = {
    call$1(border) {
      return type$.ShapeBorder._as(border).scale$1(this.t);
    },
    $signature: typesOffset + 73
  };
  A._CompoundBorder_toString_closure.prototype = {
    call$1(border) {
      return type$.ShapeBorder._as(border).toString$0(0);
    },
    $signature: typesOffset + 53
  };
  A.InlineSpan_getSpanForPosition_closure.prototype = {
    call$1(span) {
      var result = type$.InlineSpan._as(span).getSpanForPositionVisitor$2(this.position, this.offset);
      this._box_0.result = result;
      return result == null;
    },
    $signature: typesOffset + 28
  };
  A.InlineSpan_codeUnitAt_closure.prototype = {
    call$1(span) {
      var result = type$.InlineSpan._as(span).codeUnitAtVisitor$2(this.index, this.offset);
      this._box_0.result = result;
      return result == null;
    },
    $signature: typesOffset + 28
  };
  A._TextLayout__computeEndOfTextCaretAnchorOffset_closure.prototype = {
    call$0() {
      var t1 = this.$this._text_painter$_paragraph,
        t2 = J.get$length$asx(this.rawString);
      if (typeof t2 !== "number")
        return t2.$sub();
      return t1.getGlyphInfoAt$1(t2 - 1);
    },
    $signature: typesOffset + 77
  };
  A.TextPainter_inlinePlaceholderBoxes_closure.prototype = {
    call$1(box) {
      return A.TextPainter__shiftTextBox(type$.TextBox._as(box), this.offset);
    },
    $signature: typesOffset + 41
  };
  A.TextPainter_getBoxesForSelection_closure.prototype = {
    call$1(box) {
      return A.TextPainter__shiftTextBox(type$.TextBox._as(box), this.offset);
    },
    $signature: typesOffset + 41
  };
  A.TextPainter_computeLineMetrics_closure.prototype = {
    call$1(metrics) {
      return A.TextPainter__shiftLineMetrics(type$.LineMetrics._as(metrics), this.offset);
    },
    $signature: typesOffset + 79
  };
  A.TextSpan_debugDescribeChildren_closure.prototype = {
    call$1(child) {
      return type$.InlineSpan._as(child).toDiagnosticsNode$0();
    },
    $signature: typesOffset + 80
  };
  A.TextStyle_fontFamilyFallback_closure.prototype = {
    call$1(str) {
      var t1;
      B._asString(str);
      t1 = this.$this._package;
      return "packages/" + B.S(t1 == null ? B._asString(t1) : t1) + "/" + str;
    },
    $signature: 16
  };
  A.TextStyle_debugFillProperties_closure.prototype = {
    call$1(n) {
      return !B.boolConversionCheck(type$.DiagnosticsNode._as(n).isFiltered$1(D.DiagnosticLevel_3));
    },
    $signature: typesOffset + 81
  };
  A.RenderBoxContainerDefaultsMixin_defaultHitTestChildren_closure.prototype = {
    call$2(result, transformed) {
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(transformed);
      return this._box_0.child.hitTest$2$position(result, transformed);
    },
    $signature: typesOffset + 9
  };
  A.RenderFlex_computeDryBaseline_constraintsForChild.prototype = {
    call$1(child) {
      var spacePerFlex, flex, t1, _this = this;
      type$.RenderBox._as(child);
      spacePerFlex = _this.sizes.spacePerFlex;
      if (spacePerFlex != null) {
        flex = A.RenderFlex__getFlex(child);
        t1 = flex > 0;
      } else {
        flex = null;
        t1 = false;
      }
      if (t1) {
        if (typeof flex !== "number")
          return flex.$mul();
        if (typeof spacePerFlex !== "number")
          return B.iae(spacePerFlex);
        t1 = _this.$this._constraintsForFlexChild$3(child, _this.constraints, flex * spacePerFlex);
      } else
        t1 = _this.nonFlexConstraints;
      return t1;
    },
    $signature: typesOffset + 82
  };
  A.RelayoutWhenSystemFontsChangeMixin__scheduleSystemFontsUpdate_closure.prototype = {
    call$1(timeStamp) {
      var t1;
      type$.Duration._as(timeStamp);
      t1 = this.$this;
      t1.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack = false;
      if (B.boolConversionCheck(t1.get$attached()))
        t1.systemFontsDidChange$0();
    },
    $signature: 3
  };
  A.RenderInlineChildrenContainerDefaults_hitTestInlineChildren_closure.prototype = {
    call$2(result, transformed) {
      type$.BoxHitTestResult._as(result);
      type$.Offset._as(transformed);
      return this._box_0.child.hitTest$2$position(result, transformed);
    },
    $signature: typesOffset + 9
  };
  A.RenderParagraph_markNeedsLayout_closure.prototype = {
    call$1(element) {
      return type$._SelectableFragment._as(element).didChangeParagraphLayout$0();
    },
    $signature: typesOffset + 84
  };
  A.RenderParagraph_selectionColor_closure.prototype = {
    call$1(fragment) {
      return type$._SelectableFragment._as(fragment).get$value().get$hasSelection();
    },
    $signature: typesOffset + 85
  };
  A.RenderParagraph__createShowOnScreenFor_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._cachedChildNodes;
      t2.toString;
      t2 = J.$index$asx(t2, this.key);
      t2.toString;
      t1.showOnScreen$2$descendant$rect(t1, t2.get$rect());
    },
    $signature: 0
  };
  A._SelectableFragment_paint_closure.prototype = {
    call$2(context, offset) {
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
    },
    $signature: typesOffset + 7
  };
  A._SelectableFragment_paint_closure0.prototype = {
    call$2(context, offset) {
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
    },
    $signature: typesOffset + 7
  };
  A.RenderPhysicalModel_paint_closure.prototype = {
    call$2(context, offset) {
      var t1, t2;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      if (B.boolConversionCheck(this.usesSaveLayer)) {
        t1 = context.get$canvas();
        t2 = E.Paint_Paint();
        t2.set$color(this.$this.get$color());
        t1.drawPaint$1(t2);
      }
      this.$this.super$RenderProxyBoxMixin$paint(context, offset);
    },
    $signature: typesOffset + 7
  };
  A.RenderPhysicalShape_paint_closure.prototype = {
    call$2(context, offset) {
      var t1, t2;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      if (B.boolConversionCheck(this.usesSaveLayer)) {
        t1 = context.get$canvas();
        t2 = E.Paint_Paint();
        t2.set$color(this.$this.get$color());
        t1.drawPaint$1(t2);
      }
      this.$this.super$RenderProxyBoxMixin$paint(context, offset);
    },
    $signature: typesOffset + 7
  };
  A.RenderFractionalTranslation_hitTestChildren_closure.prototype = {
    call$2(result, position) {
      return this.$this.super$RenderProxyBoxMixin$hitTestChildren(type$.BoxHitTestResult._as(result), type$.Offset._as(position));
    },
    $signature: typesOffset + 9
  };
  A.RenderShiftedBox_hitTestChildren_closure.prototype = {
    call$2(result, transformed) {
      return this.child.hitTest$2$position(type$.BoxHitTestResult._as(result), type$.Offset._as(transformed));
    },
    $signature: typesOffset + 9
  };
  A.TickerFuture_whenCompleteOrCancel_thunk.prototype = {
    call$1(value) {
      this.callback.call$0();
    },
    $signature: 15
  };
  A.LogicalKeyboardKey_expandSynonyms_closure.prototype = {
    call$1(element) {
      var t2,
        t1 = type$.LogicalKeyboardKey;
      t1._as(element);
      t2 = J.$index$asx($.$get$LogicalKeyboardKey__reverseSynonyms(), element);
      return t2 == null ? B.LinkedHashSet_LinkedHashSet$_literal([element], t1) : t2;
    },
    $signature: typesOffset + 88
  };
  A.Actions_maybeFind_closure.prototype = {
    call$1(element) {
      var result, _this = this;
      type$.InheritedElement._as(element);
      result = E.Actions__castAction(type$._ActionsScope._as(element.get$widget()), _this.intent, _this.T);
      if (result != null) {
        _this.context.dependOnInheritedElement$1(element);
        _this._box_0.action = result;
        return true;
      }
      return false;
    },
    $signature: typesOffset + 43
  };
  A.Actions__maybeFindWithoutDependingOn_closure.prototype = {
    call$1(element) {
      var result = E.Actions__castAction(type$._ActionsScope._as(type$.InheritedElement._as(element).get$widget()), this.intent, this.T);
      if (result != null) {
        this._box_0.action = result;
        return true;
      }
      return false;
    },
    $signature: typesOffset + 43
  };
  A._ActionsState__handleActionChanged_closure.prototype = {
    call$0() {
      this.$this.rebuildKey = B.Object$();
    },
    $signature: 0
  };
  A._WidgetsAppState__onGenerateRoute_closure.prototype = {
    call$1(context) {
      var t1;
      type$.BuildContext._as(context);
      t1 = this.$this.get$widget().home;
      t1.toString;
      return t1;
    },
    $signature: typesOffset + 10
  };
  A._WidgetsAppState_didChangeLocales_closure.prototype = {
    call$0() {
      this.$this.set$_app$_locale(this.newLocale);
    },
    $signature: 0
  };
  A._WidgetsAppState_build_closure.prototype = {
    call$2($navigator, initialRouteName) {
      type$.NavigatorState._as($navigator);
      B._asString(initialRouteName);
      return this.$this.get$widget().onGenerateInitialRoutes.call$1(initialRouteName);
    },
    $signature: typesOffset + 45
  };
  A._WidgetsAppState_build_closure0.prototype = {
    call$1(context) {
      type$.BuildContext._as(context);
      return this.$this.get$widget().builder.call$2(context, this._box_0.routing);
    },
    $signature: typesOffset + 10
  };
  A._WidgetsAppState_build_closure1.prototype = {
    call$1(context) {
      var t1, title;
      type$.BuildContext._as(context);
      t1 = this.$this;
      title = t1.get$widget().onGenerateTitle.call$1(context);
      t1 = t1.get$widget().color.withOpacity$1(1);
      return A.Title$(this._box_0.result, t1, title);
    },
    $signature: typesOffset + 96
  };
  A._UbiquitousInheritedElement_notifyClients_closure.prototype = {
    call$1(element) {
      var t1;
      type$.Element._as(element);
      t1 = this.$this;
      if (B.boolConversionCheck(element.doesDependOnInheritedElement$1(t1)))
        t1.notifyDependent$2(this.oldWidget, element);
    },
    $signature: typesOffset + 23
  };
  A._UbiquitousInheritedElement__recurseChildren_closure.prototype = {
    call$1(child) {
      A._UbiquitousInheritedElement__recurseChildren(type$.Element._as(child), this.visitor);
    },
    $signature: typesOffset + 23
  };
  A.DefaultSelectionStyle_merge_closure.prototype = {
    call$1(context) {
      var t2, t3, _this = this,
        $parent = A.DefaultSelectionStyle_of(type$.BuildContext._as(context)),
        t1 = _this.cursorColor;
      if (t1 == null)
        t1 = $parent.cursorColor;
      t2 = _this.selectionColor;
      if (t2 == null)
        t2 = $parent.selectionColor;
      t3 = _this.mouseCursor;
      if (t3 == null)
        t3 = $parent.mouseCursor;
      return A.DefaultSelectionStyle$(_this.child, t1, _this.key, t3, t2);
    },
    $signature: typesOffset + 98
  };
  A.ParentDataElement__applyParentData_applyParentDataToChild.prototype = {
    call$1(child) {
      var t1;
      type$.Element._as(child);
      if (child instanceof E.RenderObjectElement)
        child._updateParentData$1(this.widget);
      else if (child.get$renderObjectAttachingChild() != null) {
        t1 = child.get$renderObjectAttachingChild();
        t1.toString;
        this.call$1(t1);
      }
    },
    $signature: typesOffset + 23
  };
  A.GestureDetector_build_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1.toString;
      return A.TapGestureRecognizer$(t1, null);
    },
    $signature: typesOffset + 99
  };
  A.GestureDetector_build_closure0.prototype = {
    call$1(instance) {
      var t1, _null = null;
      type$.TapGestureRecognizer._as(instance);
      t1 = this.$this;
      instance.set$onTapDown(t1.onTapDown);
      instance.set$onTapUp(t1.onTapUp);
      instance.set$onTap(t1.onTap);
      instance.set$onTapCancel(t1.onTapCancel);
      instance.set$onSecondaryTap(t1.onSecondaryTap);
      instance.set$onSecondaryTapDown(t1.onSecondaryTapDown);
      instance.set$onSecondaryTapUp(t1.onSecondaryTapUp);
      instance.set$onSecondaryTapCancel(t1.onSecondaryTapCancel);
      instance.set$onTertiaryTapDown(_null);
      instance.set$onTertiaryTapUp(_null);
      instance.set$onTertiaryTapCancel(_null);
      instance.set$gestureSettings(this.gestureSettings);
      instance.set$supportedDevices(_null);
    },
    $signature: typesOffset + 100
  };
  A.GestureDetector_build_closure1.prototype = {
    call$0() {
      var t1 = this.$this;
      t1.toString;
      return A.DoubleTapGestureRecognizer$(t1, null);
    },
    $signature: typesOffset + 101
  };
  A.GestureDetector_build_closure2.prototype = {
    call$1(instance) {
      var t1;
      type$.DoubleTapGestureRecognizer._as(instance);
      t1 = this.$this;
      t1.toString;
      instance.set$onDoubleTapDown(null);
      instance.set$onDoubleTap(t1.onDoubleTap);
      instance.set$onDoubleTapCancel(null);
      instance.set$gestureSettings(this.gestureSettings);
      instance.set$supportedDevices(null);
    },
    $signature: typesOffset + 102
  };
  A.GestureDetector_build_closure3.prototype = {
    call$0() {
      var t1 = this.$this;
      t1.toString;
      return A.LongPressGestureRecognizer$(t1, null);
    },
    $signature: typesOffset + 103
  };
  A.GestureDetector_build_closure4.prototype = {
    call$1(instance) {
      var t1, _null = null;
      type$.LongPressGestureRecognizer._as(instance);
      t1 = this.$this;
      t1.toString;
      instance.set$onLongPressDown(_null);
      instance.set$onLongPressCancel(_null);
      instance.set$onLongPress(t1.onLongPress);
      instance.set$onLongPressStart(_null);
      instance.set$onLongPressMoveUpdate(_null);
      instance.set$onLongPressUp(_null);
      instance.set$onLongPressEnd(_null);
      instance.set$onSecondaryLongPressDown(_null);
      instance.set$onSecondaryLongPressCancel(_null);
      instance.set$onSecondaryLongPress(_null);
      instance.set$onSecondaryLongPressStart(_null);
      instance.set$onSecondaryLongPressMoveUpdate(_null);
      instance.set$onSecondaryLongPressUp(_null);
      instance.set$onSecondaryLongPressEnd(_null);
      instance.set$onTertiaryLongPressDown(_null);
      instance.set$onTertiaryLongPressCancel(_null);
      instance.set$onTertiaryLongPress(_null);
      instance.set$onTertiaryLongPressStart(_null);
      instance.set$onTertiaryLongPressMoveUpdate(_null);
      instance.set$onTertiaryLongPressUp(_null);
      instance.set$onTertiaryLongPressEnd(_null);
      instance.set$gestureSettings(this.gestureSettings);
      instance.set$supportedDevices(_null);
    },
    $signature: typesOffset + 104
  };
  A.GestureDetector_build_closure5.prototype = {
    call$0() {
      var t1 = this.$this;
      t1.toString;
      return A.PanGestureRecognizer$(t1, null);
    },
    $signature: typesOffset + 105
  };
  A.GestureDetector_build_closure6.prototype = {
    call$1(instance) {
      var t1, _this = this, _null = null;
      type$.PanGestureRecognizer._as(instance);
      t1 = _this.$this;
      t1.toString;
      instance.set$onDown(_null);
      instance.set$onStart(_null);
      instance.set$onUpdate(_null);
      instance.set$onEnd(t1.onPanEnd);
      instance.set$onCancel(_null);
      instance.dragStartBehavior = C.DragStartBehavior_1;
      instance.set$multitouchDragStrategy(_this.configuration.getMultitouchDragStrategy$1(_this.context));
      instance.set$gestureSettings(_this.gestureSettings);
      instance.set$supportedDevices(_null);
    },
    $signature: typesOffset + 106
  };
  A.RawGestureDetectorState_debugFillProperties_closure.prototype = {
    call$1(recognizer) {
      return type$.GestureRecognizer._as(recognizer).get$debugDescription();
    },
    $signature: typesOffset + 109
  };
  A._DefaultSemanticsGestureDelegate__getTapHandler_closure.prototype = {
    call$0() {
      var t1 = this.tap,
        t2 = t1.onTapDown;
      if (t2 != null)
        t2.call$1(A.TapDownDetails$(D.Offset_0_0, null, null));
      t2 = t1.onTapUp;
      if (t2 != null)
        t2.call$1(A.TapUpDetails$(D.Offset_0_0, D.PointerDeviceKind_5, null));
      t1 = t1.onTap;
      if (t1 != null)
        t1.call$0();
    },
    $signature: 0
  };
  A._DefaultSemanticsGestureDelegate__getLongPressHandler_closure.prototype = {
    call$0() {
      var t1 = this.longPress,
        t2 = t1.onLongPressDown;
      if (t2 != null)
        t2.call$1(C.C_LongPressDownDetails);
      t2 = t1.onLongPressStart;
      if (t2 != null)
        t2.call$1(C.C_LongPressStartDetails);
      t2 = t1.onLongPress;
      if (t2 != null)
        t2.call$0();
      t2 = t1.onLongPressEnd;
      if (t2 != null)
        t2.call$1(C.C_LongPressEndDetails);
      t1 = t1.onLongPressUp;
      if (t1 != null)
        t1.call$0();
    },
    $signature: 0
  };
  A._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure.prototype = {
    call$1(details) {
      var t1, t2, _null = null;
      type$.DragUpdateDetails._as(details);
      t1 = this.horizontal;
      t2 = t1.onDown;
      if (t2 != null)
        t2.call$1(A.DragDownDetails$(D.Offset_0_0, _null));
      t2 = t1.onStart;
      if (t2 != null)
        t2.call$1(A.DragStartDetails$(D.Offset_0_0, _null, _null, _null));
      t2 = t1.onUpdate;
      if (t2 != null)
        t2.call$1(details);
      t1 = t1.onEnd;
      if (t1 != null)
        t1.call$1(A.DragEndDetails$(D.Offset_0_0, _null, 0, C.Velocity_Offset_0_0));
    },
    $signature: typesOffset + 8
  };
  A._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure0.prototype = {
    call$1(details) {
      var t1, t2, _null = null;
      type$.DragUpdateDetails._as(details);
      t1 = this.pan;
      t2 = t1.onDown;
      if (t2 != null)
        t2.call$1(A.DragDownDetails$(D.Offset_0_0, _null));
      t2 = t1.onStart;
      if (t2 != null)
        t2.call$1(A.DragStartDetails$(D.Offset_0_0, _null, _null, _null));
      t2 = t1.onUpdate;
      if (t2 != null)
        t2.call$1(details);
      t1 = t1.onEnd;
      if (t1 != null)
        t1.call$1(A.DragEndDetails$(D.Offset_0_0, _null, _null, C.Velocity_Offset_0_0));
    },
    $signature: typesOffset + 8
  };
  A._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure1.prototype = {
    call$1(details) {
      var t1;
      type$.DragUpdateDetails._as(details);
      t1 = this.horizontalHandler;
      if (t1 != null)
        t1.call$1(details);
      t1 = this.panHandler;
      if (t1 != null)
        t1.call$1(details);
    },
    $signature: typesOffset + 8
  };
  A._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure.prototype = {
    call$1(details) {
      var t1, t2, _null = null;
      type$.DragUpdateDetails._as(details);
      t1 = this.vertical;
      t2 = t1.onDown;
      if (t2 != null)
        t2.call$1(A.DragDownDetails$(D.Offset_0_0, _null));
      t2 = t1.onStart;
      if (t2 != null)
        t2.call$1(A.DragStartDetails$(D.Offset_0_0, _null, _null, _null));
      t2 = t1.onUpdate;
      if (t2 != null)
        t2.call$1(details);
      t1 = t1.onEnd;
      if (t1 != null)
        t1.call$1(A.DragEndDetails$(D.Offset_0_0, _null, 0, C.Velocity_Offset_0_0));
    },
    $signature: typesOffset + 8
  };
  A._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure0.prototype = {
    call$1(details) {
      var t1, t2, _null = null;
      type$.DragUpdateDetails._as(details);
      t1 = this.pan;
      t2 = t1.onDown;
      if (t2 != null)
        t2.call$1(A.DragDownDetails$(D.Offset_0_0, _null));
      t2 = t1.onStart;
      if (t2 != null)
        t2.call$1(A.DragStartDetails$(D.Offset_0_0, _null, _null, _null));
      t2 = t1.onUpdate;
      if (t2 != null)
        t2.call$1(details);
      t1 = t1.onEnd;
      if (t1 != null)
        t1.call$1(A.DragEndDetails$(D.Offset_0_0, _null, _null, C.Velocity_Offset_0_0));
    },
    $signature: typesOffset + 8
  };
  A._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure1.prototype = {
    call$1(details) {
      var t1;
      type$.DragUpdateDetails._as(details);
      t1 = this.verticalHandler;
      if (t1 != null)
        t1.call$1(details);
      t1 = this.panHandler;
      if (t1 != null)
        t1.call$1(details);
    },
    $signature: typesOffset + 8
  };
  A.Hero__allHeroesFor_inviteHero.prototype = {
    call$2(hero, tag) {
      var heroState, t1;
      type$.StatefulElement._as(hero);
      type$.Object._as(tag);
      type$.Hero._as(hero.get$widget());
      heroState = type$._HeroState._as(hero.get$state());
      t1 = B.boolConversionCheck(this.isUserGestureTransition);
      if (!t1)
        J.$indexSet$ax(this.result, tag, heroState);
      else
        heroState.endFlight$0();
    },
    $signature: typesOffset + 110
  };
  A.Hero__allHeroesFor_visitor.prototype = {
    call$1(element) {
      var widget, tag, heroRoute, t1, _this = this;
      type$.Element._as(element);
      widget = element.get$widget();
      if (widget instanceof A.Hero) {
        type$.StatefulElement._as(element);
        tag = widget.tag;
        if (B.boolConversionCheck(J.$eq$(A.Navigator_of(element), _this.navigator)))
          _this.inviteHero.call$2(element, tag);
        else {
          heroRoute = A.ModalRoute_of(element, type$.nullable_Object);
          if (heroRoute != null)
            t1 = B.boolConversionCheck(heroRoute.get$isCurrent());
          else
            t1 = false;
          if (t1)
            _this.inviteHero.call$2(element, tag);
        }
      }
      element.visitChildren$1(_this);
    },
    $signature: typesOffset + 23
  };
  A._HeroState_startFlight_closure.prototype = {
    call$0() {
      this.$this.set$_placeholderSize(this.box.get$size());
    },
    $signature: 0
  };
  A._HeroState_endFlight_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._HeroFlight__buildOverlay_closure.prototype = {
    call$2(context, child) {
      var t1, t2, offsets;
      type$.BuildContext._as(context);
      type$.nullable_Widget._as(child);
      t1 = this.$this;
      t2 = t1.get$heroRectTween().evaluate$1(t1.get$_proxyAnimation());
      t2.toString;
      offsets = A.RelativeRect$fromSize(t2, t1.get$manifest().navigatorSize);
      return A.Positioned$(offsets.bottom, A.IgnorePointer$(A.FadeTransition$(child, t1._heroOpacity), true), null, null, offsets.left, offsets.right, offsets.top, null);
    },
    $signature: typesOffset + 111
  };
  A._HeroFlight__handleAnimationUpdate_delayedPerformAnimationUpdate.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._scheduledPerformAnimationUpdate = false;
      this.navigator.userGestureInProgressNotifier.removeListener$1(this);
      t1._performAnimationUpdate$1(t1.get$_proxyAnimation().get$status());
    },
    $signature: 0
  };
  A.HeroController_didStopUserGesture_isInvalidFlight.prototype = {
    call$1(flight) {
      type$._HeroFlight._as(flight);
      return B.boolConversionCheck(flight.get$manifest().isUserGestureTransition) && B.boolConversionCheck(J.$eq$(flight.get$manifest().type, C.HeroFlightDirection_1)) && B.boolConversionCheck(flight.get$_proxyAnimation().get$isDismissed());
    },
    $signature: typesOffset + 114
  };
  A.HeroController__maybeStartHeroTransition_closure.prototype = {
    call$1(value) {
      var t1, _this = this;
      type$.Duration._as(value);
      t1 = _this.from;
      if (t1.get$navigator() == null || _this.to.get$navigator() == null)
        return;
      _this.$this._startHeroTransition$4(t1, _this.to, _this.flightType, _this.isUserGestureTransition);
    },
    $signature: 3
  };
  A.HeroController__defaultHeroFlightShuttleBuilder_closure.prototype = {
    call$2(context, child) {
      var t1, t2, t3, _this = this;
      type$.BuildContext._as(context);
      type$.nullable_Widget._as(child);
      t1 = _this.fromHeroPadding;
      t2 = _this.toHeroPadding;
      t3 = _this.animation;
      t1 = B.boolConversionCheck(J.$eq$(_this.flightDirection, C.HeroFlightDirection_0)) ? A.EdgeInsetsTween$(t1, t2).evaluate$1(t3) : A.EdgeInsetsTween$(t2, t1).evaluate$1(t3);
      t1 = _this.toMediaQueryData.copyWith$1$padding(t1);
      return E.MediaQuery$(_this.toHero.child, t1);
    },
    $signature: typesOffset + 115
  };
  A.IconTheme_merge_closure.prototype = {
    call$1(context) {
      return A.IconTheme$(this.child, A.IconTheme__getInheritedIconThemeData(type$.BuildContext._as(context)).merge$1(this.data), this.key);
    },
    $signature: typesOffset + 116
  };
  A.ImplicitlyAnimatedWidgetState_initState_closure.prototype = {
    call$1($status) {
      var t1;
      if (B.boolConversionCheck(type$.AnimationStatus._as($status).get$isCompleted())) {
        t1 = this.$this.get$widget().onEnd;
        if (t1 != null)
          t1.call$0();
      }
    },
    $signature: typesOffset + 4
  };
  A.ImplicitlyAnimatedWidgetState_didUpdateWidget_closure.prototype = {
    call$3(tween, targetValue, $constructor) {
      type$.nullable_Tween_dynamic._as(tween);
      type$.Tween_dynamic_Function_dynamic._as($constructor);
      this.$this._updateTween$2(tween, targetValue);
      return tween;
    },
    $signature: typesOffset + 48
  };
  A.ImplicitlyAnimatedWidgetState__constructTweens_closure.prototype = {
    call$3(tween, targetValue, $constructor) {
      type$.nullable_Tween_dynamic._as(tween);
      type$.Tween_dynamic_Function_dynamic._as($constructor);
      if (targetValue != null) {
        if (tween == null)
          tween = $constructor.call$1(targetValue);
        if (B.boolConversionCheck(this.$this._shouldAnimateTween$2(tween, targetValue)))
          this._box_0.shouldStartAnimation = true;
        else if (tween.end == null)
          tween.set$end(tween.begin);
      } else
        tween = null;
      return tween;
    },
    $signature: typesOffset + 48
  };
  A.AnimatedWidgetBaseState__handleAnimationChanged_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._AnimatedDefaultTextStyleState_forEachTween_closure.prototype = {
    call$1(value) {
      return A.TextStyleTween$(type$.TextStyle._as(value));
    },
    $signature: typesOffset + 162
  };
  A._AnimatedPhysicalModelState_forEachTween_closure.prototype = {
    call$1(value) {
      return A.BorderRadiusTween$(type$.BorderRadius._as(value));
    },
    $signature: typesOffset + 119
  };
  A._AnimatedPhysicalModelState_forEachTween_closure0.prototype = {
    call$1(value) {
      return A.Tween$(B._asDouble(value), null, type$.double);
    },
    $signature: typesOffset + 36
  };
  A._AnimatedPhysicalModelState_forEachTween_closure1.prototype = {
    call$1(value) {
      return A.ColorTween$(type$.Color._as(value), null);
    },
    $signature: typesOffset + 22
  };
  A._AnimatedPhysicalModelState_forEachTween_closure2.prototype = {
    call$1(value) {
      return A.ColorTween$(type$.Color._as(value), null);
    },
    $signature: typesOffset + 22
  };
  A._loadAll_closure.prototype = {
    call$1(value) {
      return this._box_0.completedValue = value;
    },
    $signature: 23
  };
  A._loadAll_closure0.prototype = {
    call$1(p) {
      return type$._Pending._as(p).futureValue;
    },
    $signature: typesOffset + 120
  };
  A._loadAll_closure1.prototype = {
    call$1(values) {
      var t1, t2, t3, t4, i, t5;
      type$.List_dynamic._as(values);
      t1 = J.getInterceptor$asx(values);
      t2 = this._box_1;
      t3 = this.output;
      t4 = J.getInterceptor$ax(t3);
      i = 0;
      while (true) {
        t5 = t1.get$length(values);
        if (typeof t5 !== "number")
          return B.iae(t5);
        if (!(i < t5))
          break;
        t5 = t2.pendingList;
        t5.toString;
        t4.$indexSet(t3, J.$index$asx(t5, i).delegate.get$type(), t1.$index(values, i));
        ++i;
      }
      return t3;
    },
    $signature: 132
  };
  A._LocalizationsState_load_closure.prototype = {
    call$1(value) {
      return this._box_0.typeToResources = type$.Map_Type_dynamic._as(value);
    },
    $signature: 133
  };
  A._LocalizationsState_load_closure0.prototype = {
    call$1(value) {
      var t1;
      type$.Map_Type_dynamic._as(value);
      t1 = this.$this;
      if (B.boolConversionCheck(t1.get$mounted()))
        t1.setState$1(new A._LocalizationsState_load__closure(t1, value, this.locale));
      E.RendererBinding_instance().allowFirstFrame$0();
    },
    $signature: 134
  };
  A._LocalizationsState_load__closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1.set$_typeToResources(this.value);
      t1.set$_localizations$_locale(this.locale);
    },
    $signature: 0
  };
  A.LookupBoundary_findAncestorRenderObjectOfType_closure.prototype = {
    call$1(ancestor) {
      type$.Element._as(ancestor);
      if (ancestor instanceof E.RenderObjectElement && this.T._is(ancestor.get$renderObject())) {
        this._box_0.target = ancestor;
        return false;
      }
      return !B.boolConversionCheck(J.$eq$(J.get$runtimeType$(ancestor.get$widget()), C.Type_LookupBoundary_ATp));
    },
    $signature: typesOffset + 121
  };
  A.ModalBarrier_build_handleDismiss.prototype = {
    call$0() {
      var t1 = this.$this;
      if (B.boolConversionCheck(t1.dismissible)) {
        t1 = t1.onDismiss;
        if (t1 != null)
          t1.call$0();
        else
          A.Navigator_maybePop(this.context, type$.nullable_Object);
      } else
        A.SystemSound_play(C.SystemSoundType_1);
    },
    $signature: 0
  };
  A.Route_didPush_closure.prototype = {
    call$1(_) {
      var t1 = this.$this,
        t2 = t1.get$navigator();
      if (t2 == null)
        t2 = null;
      else {
        t2.get$widget().toString;
        t2 = true;
      }
      if (t2 === true) {
        t1 = t1.get$navigator().focusNode.get$enclosingScope();
        if (t1 != null)
          t1.requestFocus$0();
      }
    },
    $signature: 5
  };
  A.Route_didAdd_closure.prototype = {
    call$1(_) {
      var t1 = this.$this.get$navigator();
      if (t1 != null) {
        t1 = t1.focusNode.get$enclosingScope();
        if (t1 != null)
          t1.requestFocus$0();
      }
    },
    $signature: 5
  };
  A.Navigator_defaultGenerateInitialRoutes_closure.prototype = {
    call$1(route) {
      return type$.nullable_Route_dynamic._as(route) == null;
    },
    $signature: typesOffset + 122
  };
  A._RouteEntry_handlePush_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (B.boolConversionCheck(J.$eq$(t1.currentState, C._RouteLifecycle_5))) {
        t1.currentState = C._RouteLifecycle_7;
        this.navigator._flushHistoryUpdates$0();
      }
    },
    $signature: 0
  };
  A._RouteEntry_handleDidPopNext_closure.prototype = {
    call$1(result) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, _0_0, reFocusNode;
      var $async$call$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _0_0 = E.defaultTargetPlatform();
              $async$goto = D.TargetPlatform_0 === _0_0 ? 3 : 4;
              break;
            case 3:
              // then
              reFocusNode = $async$self.$this.lastFocusNode;
              $async$goto = 5;
              return B._asyncAwait(E.Future_Future$delayed(D.Duration_300000, null, type$.void), $async$call$1);
            case 5:
              // returning from await.
              D.BasicMessageChannel_EyN.send$1(C.FocusSemanticEvent_focus.toMap$1$nodeId(reFocusNode));
              // goto break $label0$0
              $async$goto = 2;
              break;
            case 4:
              // join
              if (D.TargetPlatform_2 === _0_0) {
                D.BasicMessageChannel_EyN.send$1(C.FocusSemanticEvent_focus.toMap$1$nodeId($async$self.$this.lastFocusNode));
                // goto break $label0$0
                $async$goto = 2;
                break;
              }
              // goto break $label0$0
              $async$goto = 2;
              break;
            case 2:
              // break $label0$0
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 135
  };
  A._RouteEntry_dispose_closure.prototype = {
    call$1(e) {
      return type$.OverlayEntry._as(e).get$mounted();
    },
    $signature: typesOffset + 123
  };
  A._RouteEntry_dispose_closure0.prototype = {
    call$0() {
      var _this = this,
        t1 = _this._box_0,
        t2 = t1.mounted;
      if (typeof t2 !== "number")
        return t2.$sub();
      t1.mounted = t2 - 1;
      _this.entry.removeListener$1(_this.listener.readLocal$1$0(type$.void_Function));
      if (B.boolConversionCheck(J.$eq$(t1.mounted, 0)))
        return B.scheduleMicrotask(new A._RouteEntry_dispose__closure(_this.$this, _this.navigator));
    },
    $signature: 0
  };
  A._RouteEntry_dispose__closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (!B.boolConversionCheck(J.remove$1$ax(this.navigator._entryWaitingForSubTreeDisposal, t1)))
        return;
      t1.forcedDispose$0();
    },
    $signature: 0
  };
  A._RouteEntry_isRoutePredicate_closure.prototype = {
    call$1(entry) {
      return J.$eq$(type$._RouteEntry._as(entry).route, this.route);
    },
    $signature: typesOffset + 13
  };
  A.NavigatorState__handleHistoryChanged_closure.prototype = {
    call$1(timeStamp) {
      var t1;
      type$.Duration._as(timeStamp);
      t1 = this.$this;
      if (!B.boolConversionCheck(t1.get$mounted()))
        return;
      this.notification.dispatch$1(t1.get$context());
    },
    $signature: 3
  };
  A.NavigatorState_restoreState_closure.prototype = {
    call$1(route) {
      var t1;
      type$.Route_dynamic._as(route);
      if (route.get$settings().name != null) {
        t1 = route.get$settings().name;
        t1.toString;
        t1 = A._NamedRestorationInformation$(null, t1, this.$this.get$_nextPagelessRestorationScopeId());
      } else
        t1 = null;
      return A._RouteEntry$(route, C._RouteLifecycle_1, false, t1);
    },
    $signature: typesOffset + 126
  };
  A.NavigatorState__forcedDisposeAllRouteEntries_closure.prototype = {
    call$1(entry) {
      type$._RouteEntry._as(entry).forcedDispose$0();
      return true;
    },
    $signature: typesOffset + 13
  };
  A.NavigatorState__afterNavigation_closure.prototype = {
    call$1(object) {
      return B.S(object);
    },
    $signature: 52
  };
  A.NavigatorState__cancelActivePointers_closure.prototype = {
    call$0() {
      var t1 = this.absorber;
      if (t1 != null)
        t1.set$absorbing(true);
    },
    $signature: 0
  };
  A.NavigatorState_build_closure.prototype = {
    call$1(notification) {
      if (B.boolConversionCheck(type$.NavigationNotification._as(notification).canHandlePop) || !B.boolConversionCheck(this.$this.canPop$0()))
        return false;
      C.NavigationNotification_true.dispatch$1(this.context);
      return true;
    },
    $signature: typesOffset + 44
  };
  A._HistoryProperty_fromPrimitives_closure.prototype = {
    call$2(key, value) {
      return B.MapEntry$_(B._asStringQ(key), B.List_List$from(type$.List_dynamic._as(value), true, type$.Object), type$.nullable_String, type$.List_Object);
    },
    $signature: 136
  };
  A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure.prototype = {
    call$2(property, listener) {
      type$.RestorableProperty_nullable_Object._as(property);
      type$.void_Function._as(listener);
      if (!B.boolConversionCheck(property._restoration0$_disposed))
        property.removeListener$1(listener);
    },
    $signature: typesOffset + 29
  };
  A.OverlayEntry_remove_closure.prototype = {
    call$1(duration) {
      type$.Duration._as(duration);
      this.overlay._overlay$_markDirty$0();
    },
    $signature: 3
  };
  A._OverlayEntryWidgetState__markNeedsBuild_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.OverlayState_insert_closure.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.$this;
      J.insert$2$ax(t1._overlay$_entries, t1._insertionIndex$2(_this.below, _this.above), _this.entry);
    },
    $signature: 0
  };
  A.OverlayState_insertAll_closure.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.$this;
      J.insertAll$2$ax(t1._overlay$_entries, t1._insertionIndex$2(_this.below, _this.above), _this.entries);
    },
    $signature: 0
  };
  A.OverlayState_rearrange_closure.prototype = {
    call$0() {
      var t4, t5, _this = this,
        t1 = _this.$this,
        t2 = t1._overlay$_entries,
        t3 = J.getInterceptor$ax(t2);
      t3.clear$0(t2);
      t4 = _this.newEntriesList;
      t3.addAll$1(t2, t4);
      t5 = _this.old;
      t5.removeAll$1(t4);
      t3.insertAll$2(t2, t1._insertionIndex$2(_this.below, _this.above), t5);
    },
    $signature: 0
  };
  A.OverlayState__markDirty_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.OverlayState__didChangeEntryOpacity_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._RenderTheaterMixin_hitTestChildren_childHitTest.prototype = {
    call$2(result, position) {
      return this.localChild.hitTest$2$position(type$.BoxHitTestResult._as(result), type$.Offset._as(position));
    },
    $signature: typesOffset + 9
  };
  A._RenderTheater_debugDescribeChildren_closure.prototype = {
    call$1(renderObject) {
      var t1, t2, t3, _this = this;
      renderObject = type$.RenderBox._as(type$.RenderObject._as(renderObject));
      t1 = _this._box_1;
      t2 = B.boolConversionCheck(t1.onstage);
      t1 = t1.count;
      t3 = _this._box_0;
      if (t2)
        J.add$1$ax(_this.onstageChildren, renderObject.toDiagnosticsNode$1$name("onstage " + B.S(t1) + " - " + B.S(t3.subcount)));
      else
        J.add$1$ax(_this.offstageChildren, renderObject.toDiagnosticsNode$2$name$style("offstage " + B.S(t1) + " - " + B.S(t3.subcount), D.DiagnosticsTreeStyle_2));
      t1 = t3.subcount;
      if (typeof t1 !== "number")
        return t1.$add();
      t3.subcount = t1 + 1;
    },
    $signature: typesOffset + 51
  };
  A._RootRestorationScopeState__loadRootBucketIfNecessary_closure.prototype = {
    call$1(bucket) {
      var t1;
      type$.nullable_RestorationBucket._as(bucket);
      t1 = this.$this;
      t1._isLoadingRootBucket = false;
      if (B.boolConversionCheck(t1.get$mounted())) {
        E.ServicesBinding_instance().get$restorationManager().addListener$1(t1.get$_replaceRootBucket());
        t1.setState$1(new A._RootRestorationScopeState__loadRootBucketIfNecessary__closure(t1, bucket));
      }
      E.RendererBinding_instance().allowFirstFrame$0();
    },
    $signature: typesOffset + 129
  };
  A._RootRestorationScopeState__loadRootBucketIfNecessary__closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1.set$_restoration0$_rootBucket(this.bucket);
      t1._rootBucketValid = true;
      t1._okToRenderBlankContainer = false;
    },
    $signature: 0
  };
  A.RestorationMixin_registerForRestoration_listener.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1.get$bucket() == null)
        return;
      t1._updateProperty$1(this.property);
    },
    $signature: 0
  };
  A.__RestorationScopeState_State_RestorationMixin_dispose_closure.prototype = {
    call$2(property, listener) {
      type$.RestorableProperty_nullable_Object._as(property);
      type$.void_Function._as(listener);
      if (!B.boolConversionCheck(property._restoration0$_disposed))
        property.removeListener$1(listener);
    },
    $signature: typesOffset + 29
  };
  A.__RouterState_State_RestorationMixin_dispose_closure.prototype = {
    call$2(property, listener) {
      type$.RestorableProperty_nullable_Object._as(property);
      type$.void_Function._as(listener);
      if (!B.boolConversionCheck(property._restoration0$_disposed))
        property.removeListener$1(listener);
    },
    $signature: typesOffset + 29
  };
  A._RouterState_restoreState_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      return t1.$ti._eval$1("Future<~>(1)")._as(t1.get$widget().routerDelegate.get$setRestoredRoutePath());
    },
    $signature() {
      return this.$this.$ti._eval$1("Future<~>(1)()");
    }
  };
  A._RouterState_restoreState_closure0.prototype = {
    call$0() {
      var t1 = this.$this;
      return t1.$ti._eval$1("Future<~>(1)")._as(t1.get$widget().routerDelegate.get$setInitialRoutePath());
    },
    $signature() {
      return this.$this.$ti._eval$1("Future<~>(1)()");
    }
  };
  A._RouterState_didChangeDependencies_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      return t1.$ti._eval$1("Future<~>(1)")._as(t1.get$widget().routerDelegate.get$setNewRoutePath());
    },
    $signature() {
      return this.$this.$ti._eval$1("Future<~>(1)()");
    }
  };
  A._RouterState__processParsedRouteInformation_closure.prototype = {
    call$1(data) {
      return this.$call$body$_RouterState__processParsedRouteInformation_closure(this.$this.$ti._precomputed1._as(data));
    },
    $call$body$_RouterState__processParsedRouteInformation_closure(data) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2;
      var $async$call$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = $async$self.transaction;
              if (!B.boolConversionCheck(J.$eq$(t1._currentRouterTransaction, t2))) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 3;
              return B._asyncAwait($async$self.delegateRouteSetter.call$0().call$1(data), $async$call$1);
            case 3:
              // returning from await.
              if (B.boolConversionCheck(J.$eq$(t1._currentRouterTransaction, t2)))
                t1._router$_rebuild$0();
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$call$1, $async$completer);
    },
    $signature() {
      return this.$this.$ti._eval$1("Future<~>(1)");
    }
  };
  A._RouterState__handleRouteInformationProviderNotification_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      return t1.$ti._eval$1("Future<~>(1)")._as(t1.get$widget().routerDelegate.get$setNewRoutePath());
    },
    $signature() {
      return this.$this.$ti._eval$1("Future<~>(1)()");
    }
  };
  A._RouterState__handleRoutePopped_closure.prototype = {
    call$1(data) {
      var t1;
      B._asBool(data);
      t1 = this.$this;
      if (!B.boolConversionCheck(J.$eq$(this.transaction, t1._currentRouterTransaction)))
        return E.SynchronousFuture$(true, type$.bool);
      t1._router$_rebuild$0();
      return E.SynchronousFuture$(data, type$.bool);
    },
    $signature: typesOffset + 132
  };
  A._RouterState__rebuild_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._RouterState__handleRouterDelegateNotification_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._CallbackHookProvider_invokeCallback_closure.prototype = {
    call$0() {
      var _null = null,
        t1 = this.$this;
      return B._setArrayType([E.DiagnosticsProperty$("The " + B.S(J.get$runtimeType$(t1)) + " that invoked the callback was", t1, true, D.C__NoDefaultValue, _null, _null, _null, D.DiagnosticLevel_3, false, true, true, D.DiagnosticsTreeStyle_9, _null, B._instanceType(t1)._eval$1("_CallbackHookProvider<_CallbackHookProvider.T>"))], type$.JSArray_DiagnosticsNode);
    },
    $signature: typesOffset + 133
  };
  A.BackButtonDispatcher_invokeCallback_notifyNextChild.prototype = {
    call$1(result) {
      var t1, t2, childIndex, _this = this;
      if (B._asBool(result))
        return E.SynchronousFuture$(true, type$.bool);
      t1 = _this._box_0;
      t2 = t1.childIndex;
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        childIndex = t2 - 1;
        t1.childIndex = childIndex;
        return J.$index$asx(_this.children, childIndex).notifiedByParent$1(_this.defaultValue).then$1$1(_this, type$.bool);
      }
      return _this.$this.super$_CallbackHookProvider$invokeCallback(_this.defaultValue);
    },
    $signature: 137
  };
  A.TransitionRoute__updateSecondaryAnimation_jumpOnAnimationEnd.prototype = {
    call$1($status) {
      var t1, t2;
      if (!B.boolConversionCheck(type$.AnimationStatus._as($status).get$isAnimating())) {
        t1 = this.$this;
        t1._setSecondaryAnimation$2(this.nextTrain, this.nextRoute.get$completed());
        t2 = t1._trainHoppingListenerRemover;
        if (t2 != null) {
          t2.call$0();
          t1.set$_trainHoppingListenerRemover(null);
        }
      }
    },
    $signature: typesOffset + 4
  };
  A.TransitionRoute__updateSecondaryAnimation_closure.prototype = {
    call$0() {
      this.nextTrain.removeStatusListener$1(this.jumpOnAnimationEnd);
      var t1 = this._box_0.newAnimation;
      if (t1 != null)
        t1.dispose$0();
    },
    $signature: 0
  };
  A.TransitionRoute__updateSecondaryAnimation_closure0.prototype = {
    call$0() {
      var t2,
        t1 = this.$this;
      t1._setSecondaryAnimation$2(this._box_0.newAnimation.get$currentTrain(), this.nextRoute.get$completed());
      t2 = t1._trainHoppingListenerRemover;
      if (t2 != null) {
        t2.call$0();
        t1.set$_trainHoppingListenerRemover(null);
      }
    },
    $signature: 0
  };
  A.TransitionRoute__setSecondaryAnimation_closure.prototype = {
    call$1(_) {
      var t1 = this.$this._secondaryAnimation,
        t2 = this.animation;
      if (B.boolConversionCheck(J.$eq$(t1.get$parent(), t2))) {
        t1.set$parent(C.C__AlwaysDismissedAnimation);
        if (t2 instanceof A.TrainHoppingAnimation)
          t2.dispose$0();
      }
    },
    $signature: 2
  };
  A._ModalScopeStatus_updateShouldNotifyDependent_closure.prototype = {
    call$1(dependency) {
      var t1, _this = this;
      switch (type$._ModalRouteAspect._as(dependency).index) {
        case 0:
          t1 = !B.boolConversionCheck(J.$eq$(_this.$this.isCurrent, _this.oldWidget.isCurrent));
          break;
        case 1:
          t1 = !B.boolConversionCheck(J.$eq$(_this.$this.canPop, _this.oldWidget.canPop));
          break;
        case 2:
          t1 = !B.boolConversionCheck(J.$eq$(_this.$this.route.get$settings(), _this.oldWidget.route.get$settings()));
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    $signature: typesOffset + 134
  };
  A._ModalScopeState__forceRebuildPage_closure.prototype = {
    call$0() {
      this.$this._page = null;
    },
    $signature: 0
  };
  A._ModalScopeState_build_closure.prototype = {
    call$2(context, child) {
      var t1;
      type$.BuildContext._as(context);
      type$.nullable_Widget._as(child);
      t1 = this.$this.get$widget().route.get$restorationScopeId().get$value();
      child.toString;
      return A.RestorationScope$(child, t1);
    },
    $signature: typesOffset + 135
  };
  A._ModalScopeState_build_closure0.prototype = {
    call$1(context) {
      var t1 = B.LinkedHashMap_LinkedHashMap$_literal([C.Type_DismissIntent_Drw, A._DismissModalAction$(type$.BuildContext._as(context))], type$.Type, type$.Action_Intent),
        t2 = this.$this,
        t3 = t2.primaryScrollController,
        t4 = t2.focusScopeNode,
        t5 = t2.get$_listenable(),
        t6 = t2._page;
      if (t6 == null) {
        t6 = t2.get$widget().route._subtreeKey;
        t6 = t2._page = A.RepaintBoundary$(A.Builder$(new A._ModalScopeState_build__closure(t2)), t6);
      }
      return A.Actions$(t1, A.PrimaryScrollController$(E._FocusScopeWithExternalFocusNode$(A.RepaintBoundary$(A.ListenableBuilder$(new A._ModalScopeState_build__closure0(t2), t6, null, t5), null), t4, true), t3));
    },
    $signature: typesOffset + 136
  };
  A._ModalScopeState_build__closure0.prototype = {
    call$2(context, child) {
      var t1, t2, t3, t4, t5;
      type$.BuildContext._as(context);
      type$.nullable_Widget._as(child);
      t1 = this.$this;
      t2 = t1.get$widget().route;
      t3 = t1.get$widget().route.get$animation();
      t3.toString;
      t4 = t1.get$widget().route.get$secondaryAnimation();
      t4.toString;
      t5 = t1.get$widget().route.get$navigator();
      t5 = t5 == null ? null : t5.userGestureInProgressNotifier;
      if (t5 == null)
        t5 = E.ValueNotifier$(false, type$.bool);
      return t2.buildTransitions$4(context, t3, t4, A.ListenableBuilder$(new A._ModalScopeState_build___closure(t1), child, null, t5));
    },
    $signature: typesOffset + 40
  };
  A._ModalScopeState_build___closure.prototype = {
    call$2(context, child) {
      var t1, ignoreEvents;
      type$.BuildContext._as(context);
      type$.nullable_Widget._as(child);
      t1 = this.$this;
      ignoreEvents = t1.get$_shouldIgnoreFocusRequest();
      t1.focusScopeNode.set$canRequestFocus(!ignoreEvents);
      return A.IgnorePointer$(child, ignoreEvents);
    },
    $signature: typesOffset + 137
  };
  A._ModalScopeState_build__closure.prototype = {
    call$1(context) {
      var t1, t2, t3;
      type$.BuildContext._as(context);
      t1 = this.$this;
      t2 = t1.get$widget().route;
      t3 = t1.get$widget().route.get$animation();
      t3.toString;
      t1 = t1.get$widget().route.get$secondaryAnimation();
      t1.toString;
      return t2.buildPage$3(context, t3, t1);
    },
    $signature: typesOffset + 10
  };
  A.ModalRoute_offstage_closure.prototype = {
    call$0() {
      this.$this.set$_routes$_offstage(this.value);
    },
    $signature: 0
  };
  A.ModalRoute__maybeDispatchNavigationNotification_closure.prototype = {
    call$1(timeStamp) {
      var t1, t2;
      type$.Duration._as(timeStamp);
      t1 = this.$this;
      t2 = t1.get$subtreeContext();
      t2 = t2 == null ? null : t2.get$mounted();
      if (!B.boolConversionCheck(t2 == null ? false : t2))
        return;
      this.notification.dispatch$1(t1.get$subtreeContext());
    },
    $signature: 3
  };
  A.ModalRoute_changedInternalState_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.MultiSelectableSelectionContainerDelegate__scheduleSelectableUpdate_runScheduledTask.prototype = {
    call$1(duration) {
      var t1;
      type$.nullable_Duration._as(duration);
      t1 = this.$this;
      if (!B.boolConversionCheck(t1._scheduledSelectableUpdate))
        return;
      t1._scheduledSelectableUpdate = false;
      t1._updateSelectables$0();
    },
    call$0() {
      return this.call$1(null);
    },
    $signature: 138
  };
  A.MultiSelectableSelectionContainerDelegate_getSelectionGeometry_closure.prototype = {
    call$1(selectionRect) {
      var t1, localRect;
      type$.Rect._as(selectionRect);
      t1 = this.$this;
      localRect = E.MatrixUtils_transformRect(t1.getTransformFrom$1(J.$index$asx(t1.selectables, this.index)), selectionRect);
      t1 = this.drawableArea;
      t1 = t1 == null ? null : t1.intersect$1(localRect);
      return t1 == null ? localRect : t1;
    },
    $signature: typesOffset + 139
  };
  A.MultiSelectableSelectionContainerDelegate_getSelectionGeometry_closure0.prototype = {
    call$1(selectionRect) {
      type$.Rect._as(selectionRect);
      return B.boolConversionCheck(selectionRect.get$isFinite(0)) && !B.boolConversionCheck(selectionRect.get$isEmpty(0));
    },
    $signature: typesOffset + 140
  };
  A.MultiSelectableSelectionContainerDelegate__flushInactiveSelections_closure.prototype = {
    call$1(target) {
      return type$.Selectable._as(target) !== J.$index$asx(this.$this.selectables, this.skipIndex);
    },
    $signature: typesOffset + 15
  };
  A.MultiSelectableSelectionContainerDelegate__flushInactiveSelections_closure0.prototype = {
    call$1(target) {
      return this.$this.dispatchSelectionEventToChild$2(type$.Selectable._as(target), C.ClearSelectionEvent_SelectionEventType_2);
    },
    $signature: typesOffset + 14
  };
  A.MultiSelectableSelectionContainerDelegate__handleSelectBoundary_closure.prototype = {
    call$1(target) {
      return type$.Selectable._as(target) !== J.$index$asx(this.$this.selectables, this.index);
    },
    $signature: typesOffset + 15
  };
  A.MultiSelectableSelectionContainerDelegate__handleSelectBoundary_closure0.prototype = {
    call$1(target) {
      return this.$this.dispatchSelectionEventToChild$2(type$.Selectable._as(target), C.ClearSelectionEvent_SelectionEventType_2);
    },
    $signature: typesOffset + 14
  };
  A._SemanticsDebuggerState_didChangeMetrics_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._SemanticsDebuggerState__update_closure.prototype = {
    call$1(timeStamp) {
      var t1;
      type$.Duration._as(timeStamp);
      t1 = this.$this;
      if (B.boolConversionCheck(t1.get$mounted()))
        t1.setState$1(new A._SemanticsDebuggerState__update__closure());
    },
    $signature: 3
  };
  A._SemanticsDebuggerState__update__closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._SemanticsDebuggerState__handlePointerDown_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1.set$_lastPointerDownLocation(J.$mul$ns(this.event.get$position(), A.View_of(t1.get$context()).get$devicePixelRatio()));
    },
    $signature: 0
  };
  A._SemanticsDebuggerState__handleTap_closure.prototype = {
    call$0() {
      this.$this._lastPointerDownLocation = null;
    },
    $signature: 0
  };
  A._SemanticsDebuggerState__handleLongPress_closure.prototype = {
    call$0() {
      this.$this._lastPointerDownLocation = null;
    },
    $signature: 0
  };
  A._SemanticsDebuggerState__handlePanEnd_closure.prototype = {
    call$0() {
      this.$this._lastPointerDownLocation = null;
    },
    $signature: 0
  };
  A._SemanticsDebuggerPainter__findDepth_closure.prototype = {
    call$1(child) {
      var t1;
      type$.SemanticsNode._as(child);
      t1 = this._box_0;
      t1.childrenDepth = E.max(t1.childrenDepth, this.$this._findDepth$1(child), type$.int);
      return true;
    },
    $signature: typesOffset + 31
  };
  A._SemanticsDebuggerPainter__paint_closure.prototype = {
    call$1(child) {
      this.$this._semantics_debugger$_paint$3(this.canvas, type$.SemanticsNode._as(child), this.childRank);
      return true;
    },
    $signature: typesOffset + 31
  };
  A.ShortcutMapProperty_valueToString_closure.prototype = {
    call$1(keySet) {
      type$.ShortcutActivator._as(keySet);
      return "{" + B.S(keySet.debugDescribeKeys$0()) + "}: " + B.S(J.$index$asx(this.$this.get$value(), keySet));
    },
    $signature: typesOffset + 143
  };
  A.ShortcutManager__indexShortcuts_closure.prototype = {
    call$2(activator, intent) {
      var nullableTriggers, t1, t2;
      type$.ShortcutActivator._as(activator);
      type$.Intent._as(intent);
      nullableTriggers = activator.get$triggers();
      t1 = J.get$iterator$ax(nullableTriggers == null ? B._setArrayType([null], type$.JSArray_nullable_LogicalKeyboardKey) : nullableTriggers);
      t2 = this.result;
      for (; B.boolConversionCheck(t1.moveNext$0());)
        J.add$1$ax(t2.putIfAbsent$2(t1.get$current(), new A.ShortcutManager__indexShortcuts__closure()), A._ActivatorIntentPair$(activator, intent));
    },
    $signature: typesOffset + 144
  };
  A.ShortcutManager__indexShortcuts__closure.prototype = {
    call$0() {
      return B._setArrayType([], type$.JSArray__ActivatorIntentPair);
    },
    $signature: typesOffset + 145
  };
  A._SelectableTextContainerDelegate__flushInactiveSelections_closure.prototype = {
    call$1(target) {
      return type$.Selectable._as(target) !== J.$index$asx(this.$this.selectables, this.skipIndex);
    },
    $signature: typesOffset + 15
  };
  A._SelectableTextContainerDelegate__flushInactiveSelections_closure0.prototype = {
    call$1(target) {
      return this.$this.dispatchSelectionEventToChild$2(type$.Selectable._as(target), C.ClearSelectionEvent_SelectionEventType_2);
    },
    $signature: typesOffset + 14
  };
  A._SelectableTextContainerDelegate_didChangeSelectables_closure.prototype = {
    call$1(selectable) {
      return !B.boolConversionCheck(J.contains$1$asx(this.selectableSet, type$.Selectable._as(selectable)));
    },
    $signature: typesOffset + 15
  };
  A._SelectableTextContainerDelegate_didChangeSelectables_closure0.prototype = {
    call$1(selectable) {
      return !B.boolConversionCheck(J.contains$1$asx(this.selectableSet, type$.Selectable._as(selectable)));
    },
    $signature: typesOffset + 15
  };
  A._AnimatedState__handleChange_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.WidgetSpan_extractFromInlineSpan_visitSubtree.prototype = {
    call$1(span) {
      var t1, _0_0, size, t2, _this = this;
      type$.InlineSpan._as(span);
      t1 = span.style;
      _0_0 = t1 == null ? null : t1.fontSize;
      $label0$0: {
        if (typeof _0_0 == "number") {
          t1 = _0_0 !== J.get$last$ax(_this.fontSizeStack);
          size = _0_0;
        } else {
          size = null;
          t1 = false;
        }
        if (t1) {
          t1 = size;
          break $label0$0;
        }
        t1 = null;
        break $label0$0;
      }
      t2 = t1 != null;
      if (t2)
        J.add$1$ax(_this.fontSizeStack, t1);
      span.visitDirectChildren$1(_this);
      if (t2)
        J.removeLast$0$ax(_this.fontSizeStack);
      return true;
    },
    $signature: typesOffset + 28
  };
  A.MaterialDynamicColors_background_closure.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).neutralPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_background_closure0.prototype = {
    call$1(s) {
      return B.boolConversionCheck(type$.DynamicScheme._as(s).isDark) ? 6 : 98;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_onBackground_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).neutralPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_onBackground_closure1.prototype = {
    call$1(s) {
      return B.boolConversionCheck(type$.DynamicScheme._as(s).isDark) ? 90 : 10;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_onBackground_closure.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_background();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_surface_closure.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).neutralPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_surface_closure0.prototype = {
    call$1(s) {
      return B.boolConversionCheck(type$.DynamicScheme._as(s).isDark) ? 6 : 98;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_surfaceDim_closure.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).neutralPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_surfaceDim_closure0.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return B.boolConversionCheck(s.isDark) ? 6 : A.ContrastCurve$(87, 87, 80, 75).$get$1(s.contrastLevel);
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_surfaceBright_closure.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).neutralPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_surfaceBright_closure0.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return B.boolConversionCheck(s.isDark) ? A.ContrastCurve$(24, 24, 29, 34).$get$1(s.contrastLevel) : 98;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_surfaceContainerLowest_closure.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).neutralPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_surfaceContainerLowest_closure0.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return B.boolConversionCheck(s.isDark) ? A.ContrastCurve$(4, 4, 2, 0).$get$1(s.contrastLevel) : 100;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_surfaceContainerLow_closure.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).neutralPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_surfaceContainerLow_closure0.prototype = {
    call$1(s) {
      var t1;
      type$.DynamicScheme._as(s);
      t1 = s.contrastLevel;
      return B.boolConversionCheck(s.isDark) ? A.ContrastCurve$(10, 10, 11, 12).$get$1(t1) : A.ContrastCurve$(96, 96, 96, 95).$get$1(t1);
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_surfaceContainer_closure.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).neutralPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_surfaceContainer_closure0.prototype = {
    call$1(s) {
      var t1;
      type$.DynamicScheme._as(s);
      t1 = s.contrastLevel;
      return B.boolConversionCheck(s.isDark) ? A.ContrastCurve$(12, 12, 16, 20).$get$1(t1) : A.ContrastCurve$(94, 94, 92, 90).$get$1(t1);
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_surfaceContainerHigh_closure.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).neutralPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_surfaceContainerHigh_closure0.prototype = {
    call$1(s) {
      var t1;
      type$.DynamicScheme._as(s);
      t1 = s.contrastLevel;
      return B.boolConversionCheck(s.isDark) ? A.ContrastCurve$(17, 17, 21, 25).$get$1(t1) : A.ContrastCurve$(92, 92, 88, 85).$get$1(t1);
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_surfaceContainerHighest_closure.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).neutralPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_surfaceContainerHighest_closure0.prototype = {
    call$1(s) {
      var t1;
      type$.DynamicScheme._as(s);
      t1 = s.contrastLevel;
      return B.boolConversionCheck(s.isDark) ? A.ContrastCurve$(22, 22, 26, 30).$get$1(t1) : A.ContrastCurve$(90, 90, 84, 80).$get$1(t1);
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_onSurface_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).neutralPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_onSurface_closure1.prototype = {
    call$1(s) {
      return B.boolConversionCheck(type$.DynamicScheme._as(s).isDark) ? 90 : 10;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_onSurface_closure.prototype = {
    call$1(s) {
      return A.MaterialDynamicColors_highestSurface(type$.DynamicScheme._as(s));
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_surfaceVariant_closure.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).neutralVariantPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_surfaceVariant_closure0.prototype = {
    call$1(s) {
      return B.boolConversionCheck(type$.DynamicScheme._as(s).isDark) ? 30 : 90;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_onSurfaceVariant_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).neutralVariantPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_onSurfaceVariant_closure1.prototype = {
    call$1(s) {
      return B.boolConversionCheck(type$.DynamicScheme._as(s).isDark) ? 80 : 30;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_onSurfaceVariant_closure.prototype = {
    call$1(s) {
      return A.MaterialDynamicColors_highestSurface(type$.DynamicScheme._as(s));
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_inverseSurface_closure.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).neutralPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_inverseSurface_closure0.prototype = {
    call$1(s) {
      return B.boolConversionCheck(type$.DynamicScheme._as(s).isDark) ? 90 : 20;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_inverseOnSurface_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).neutralPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_inverseOnSurface_closure1.prototype = {
    call$1(s) {
      return B.boolConversionCheck(type$.DynamicScheme._as(s).isDark) ? 20 : 95;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_inverseOnSurface_closure.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_inverseSurface();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_outline_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).neutralVariantPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_outline_closure1.prototype = {
    call$1(s) {
      return B.boolConversionCheck(type$.DynamicScheme._as(s).isDark) ? 60 : 50;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_outline_closure.prototype = {
    call$1(s) {
      return A.MaterialDynamicColors_highestSurface(type$.DynamicScheme._as(s));
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_outlineVariant_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).neutralVariantPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_outlineVariant_closure1.prototype = {
    call$1(s) {
      return B.boolConversionCheck(type$.DynamicScheme._as(s).isDark) ? 30 : 80;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_outlineVariant_closure.prototype = {
    call$1(s) {
      return A.MaterialDynamicColors_highestSurface(type$.DynamicScheme._as(s));
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_shadow_closure.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).neutralPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_shadow_closure0.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return 0;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_scrim_closure.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).neutralPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_scrim_closure0.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return 0;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_primary_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).primaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_primary_closure1.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      if (B.boolConversionCheck(A._isMonochrome(s)))
        return B.boolConversionCheck(s.isDark) ? 100 : 0;
      return B.boolConversionCheck(s.isDark) ? 80 : 40;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_primary_closure.prototype = {
    call$1(s) {
      return A.MaterialDynamicColors_highestSurface(type$.DynamicScheme._as(s));
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_primary_closure2.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return A.ToneDeltaPair$($.$get$MaterialDynamicColors_primaryContainer(), $.$get$MaterialDynamicColors_primary(), 10, C.TonePolarity_2, false);
    },
    $signature: typesOffset + 5
  };
  A.MaterialDynamicColors_onPrimary_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).primaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_onPrimary_closure1.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      if (B.boolConversionCheck(A._isMonochrome(s)))
        return B.boolConversionCheck(s.isDark) ? 10 : 90;
      return B.boolConversionCheck(s.isDark) ? 20 : 100;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_onPrimary_closure.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_primary();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_primaryContainer_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).primaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_primaryContainer_closure1.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      if (B.boolConversionCheck(A._isFidelity(s)))
        return s.sourceColorHct.get$tone();
      if (B.boolConversionCheck(A._isMonochrome(s)))
        return B.boolConversionCheck(s.isDark) ? 85 : 25;
      return B.boolConversionCheck(s.isDark) ? 30 : 90;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_primaryContainer_closure.prototype = {
    call$1(s) {
      return A.MaterialDynamicColors_highestSurface(type$.DynamicScheme._as(s));
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_primaryContainer_closure2.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return A.ToneDeltaPair$($.$get$MaterialDynamicColors_primaryContainer(), $.$get$MaterialDynamicColors_primary(), 10, C.TonePolarity_2, false);
    },
    $signature: typesOffset + 5
  };
  A.MaterialDynamicColors_onPrimaryContainer_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).primaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_onPrimaryContainer_closure1.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      if (B.boolConversionCheck(A._isFidelity(s)))
        return A.DynamicColor_foregroundTone($.$get$MaterialDynamicColors_primaryContainer().tone$1(s), 4.5);
      if (B.boolConversionCheck(A._isMonochrome(s)))
        return B.boolConversionCheck(s.isDark) ? 0 : 100;
      return B.boolConversionCheck(s.isDark) ? 90 : 10;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_onPrimaryContainer_closure.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_primaryContainer();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_inversePrimary_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).primaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_inversePrimary_closure1.prototype = {
    call$1(s) {
      return B.boolConversionCheck(type$.DynamicScheme._as(s).isDark) ? 40 : 80;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_inversePrimary_closure.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_inverseSurface();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_secondary_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).secondaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_secondary_closure1.prototype = {
    call$1(s) {
      return B.boolConversionCheck(type$.DynamicScheme._as(s).isDark) ? 80 : 40;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_secondary_closure.prototype = {
    call$1(s) {
      return A.MaterialDynamicColors_highestSurface(type$.DynamicScheme._as(s));
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_secondary_closure2.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return A.ToneDeltaPair$($.$get$MaterialDynamicColors_secondaryContainer(), $.$get$MaterialDynamicColors_secondary(), 10, C.TonePolarity_2, false);
    },
    $signature: typesOffset + 5
  };
  A.MaterialDynamicColors_onSecondary_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).secondaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_onSecondary_closure1.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      if (B.boolConversionCheck(A._isMonochrome(s)))
        return B.boolConversionCheck(s.isDark) ? 10 : 100;
      else
        return B.boolConversionCheck(s.isDark) ? 20 : 100;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_onSecondary_closure.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_secondary();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_secondaryContainer_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).secondaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_secondaryContainer_closure1.prototype = {
    call$1(s) {
      var t1, initialTone, t2, t3;
      type$.DynamicScheme._as(s);
      t1 = B.boolConversionCheck(s.isDark);
      initialTone = t1 ? 30 : 90;
      if (B.boolConversionCheck(A._isMonochrome(s)))
        return t1 ? 30 : 85;
      if (!B.boolConversionCheck(A._isFidelity(s)))
        return initialTone;
      t2 = s.secondaryPalette;
      t3 = t2.hue;
      t2 = t2.chroma;
      return A.MaterialDynamicColors__findDesiredChromaByTone(t3, t2, initialTone, !t1);
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_secondaryContainer_closure.prototype = {
    call$1(s) {
      return A.MaterialDynamicColors_highestSurface(type$.DynamicScheme._as(s));
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_secondaryContainer_closure2.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return A.ToneDeltaPair$($.$get$MaterialDynamicColors_secondaryContainer(), $.$get$MaterialDynamicColors_secondary(), 10, C.TonePolarity_2, false);
    },
    $signature: typesOffset + 5
  };
  A.MaterialDynamicColors_onSecondaryContainer_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).secondaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_onSecondaryContainer_closure1.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      if (!B.boolConversionCheck(A._isFidelity(s)))
        return B.boolConversionCheck(s.isDark) ? 90 : 10;
      return A.DynamicColor_foregroundTone($.$get$MaterialDynamicColors_secondaryContainer().tone$1(s), 4.5);
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_onSecondaryContainer_closure.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_secondaryContainer();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_tertiary_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).tertiaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_tertiary_closure1.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      if (B.boolConversionCheck(A._isMonochrome(s)))
        return B.boolConversionCheck(s.isDark) ? 90 : 25;
      return B.boolConversionCheck(s.isDark) ? 80 : 40;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_tertiary_closure.prototype = {
    call$1(s) {
      return A.MaterialDynamicColors_highestSurface(type$.DynamicScheme._as(s));
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_tertiary_closure2.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return A.ToneDeltaPair$($.$get$MaterialDynamicColors_tertiaryContainer(), $.$get$MaterialDynamicColors_tertiary(), 10, C.TonePolarity_2, false);
    },
    $signature: typesOffset + 5
  };
  A.MaterialDynamicColors_onTertiary_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).tertiaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_onTertiary_closure1.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      if (B.boolConversionCheck(A._isMonochrome(s)))
        return B.boolConversionCheck(s.isDark) ? 10 : 90;
      return B.boolConversionCheck(s.isDark) ? 20 : 100;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_onTertiary_closure.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_tertiary();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_tertiaryContainer_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).tertiaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_tertiaryContainer_closure1.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      if (B.boolConversionCheck(A._isMonochrome(s)))
        return B.boolConversionCheck(s.isDark) ? 60 : 49;
      if (!B.boolConversionCheck(A._isFidelity(s)))
        return B.boolConversionCheck(s.isDark) ? 30 : 90;
      return A.DislikeAnalyzer_fixIfDisliked(s.tertiaryPalette.getHct$1(s.sourceColorHct.get$tone())).get$tone();
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_tertiaryContainer_closure.prototype = {
    call$1(s) {
      return A.MaterialDynamicColors_highestSurface(type$.DynamicScheme._as(s));
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_tertiaryContainer_closure2.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return A.ToneDeltaPair$($.$get$MaterialDynamicColors_tertiaryContainer(), $.$get$MaterialDynamicColors_tertiary(), 10, C.TonePolarity_2, false);
    },
    $signature: typesOffset + 5
  };
  A.MaterialDynamicColors_onTertiaryContainer_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).tertiaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_onTertiaryContainer_closure1.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      if (B.boolConversionCheck(A._isMonochrome(s)))
        return B.boolConversionCheck(s.isDark) ? 0 : 100;
      if (!B.boolConversionCheck(A._isFidelity(s)))
        return B.boolConversionCheck(s.isDark) ? 90 : 10;
      return A.DynamicColor_foregroundTone($.$get$MaterialDynamicColors_tertiaryContainer().tone$1(s), 4.5);
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_onTertiaryContainer_closure.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_tertiaryContainer();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_error_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).errorPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_error_closure1.prototype = {
    call$1(s) {
      return B.boolConversionCheck(type$.DynamicScheme._as(s).isDark) ? 80 : 40;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_error_closure.prototype = {
    call$1(s) {
      return A.MaterialDynamicColors_highestSurface(type$.DynamicScheme._as(s));
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_error_closure2.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return A.ToneDeltaPair$($.$get$MaterialDynamicColors_errorContainer(), $.$get$MaterialDynamicColors_error(), 10, C.TonePolarity_2, false);
    },
    $signature: typesOffset + 5
  };
  A.MaterialDynamicColors_onError_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).errorPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_onError_closure1.prototype = {
    call$1(s) {
      return B.boolConversionCheck(type$.DynamicScheme._as(s).isDark) ? 20 : 100;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_onError_closure.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_error();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_errorContainer_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).errorPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_errorContainer_closure1.prototype = {
    call$1(s) {
      return B.boolConversionCheck(type$.DynamicScheme._as(s).isDark) ? 30 : 90;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_errorContainer_closure.prototype = {
    call$1(s) {
      return A.MaterialDynamicColors_highestSurface(type$.DynamicScheme._as(s));
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_errorContainer_closure2.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return A.ToneDeltaPair$($.$get$MaterialDynamicColors_errorContainer(), $.$get$MaterialDynamicColors_error(), 10, C.TonePolarity_2, false);
    },
    $signature: typesOffset + 5
  };
  A.MaterialDynamicColors_onErrorContainer_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).errorPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_onErrorContainer_closure1.prototype = {
    call$1(s) {
      return B.boolConversionCheck(type$.DynamicScheme._as(s).isDark) ? 90 : 10;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_onErrorContainer_closure.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_errorContainer();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_primaryFixed_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).primaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_primaryFixed_closure1.prototype = {
    call$1(s) {
      return B.boolConversionCheck(A._isMonochrome(type$.DynamicScheme._as(s))) ? 40 : 90;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_primaryFixed_closure.prototype = {
    call$1(s) {
      return A.MaterialDynamicColors_highestSurface(type$.DynamicScheme._as(s));
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_primaryFixed_closure2.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return A.ToneDeltaPair$($.$get$MaterialDynamicColors_primaryFixed(), $.$get$MaterialDynamicColors_primaryFixedDim(), 10, C.TonePolarity_1, true);
    },
    $signature: typesOffset + 5
  };
  A.MaterialDynamicColors_primaryFixedDim_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).primaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_primaryFixedDim_closure1.prototype = {
    call$1(s) {
      return B.boolConversionCheck(A._isMonochrome(type$.DynamicScheme._as(s))) ? 30 : 80;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_primaryFixedDim_closure.prototype = {
    call$1(s) {
      return A.MaterialDynamicColors_highestSurface(type$.DynamicScheme._as(s));
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_primaryFixedDim_closure2.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return A.ToneDeltaPair$($.$get$MaterialDynamicColors_primaryFixed(), $.$get$MaterialDynamicColors_primaryFixedDim(), 10, C.TonePolarity_1, true);
    },
    $signature: typesOffset + 5
  };
  A.MaterialDynamicColors_onPrimaryFixed_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).primaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_onPrimaryFixed_closure2.prototype = {
    call$1(s) {
      return B.boolConversionCheck(A._isMonochrome(type$.DynamicScheme._as(s))) ? 100 : 10;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_onPrimaryFixed_closure.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_primaryFixedDim();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_onPrimaryFixed_closure1.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_primaryFixed();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_onPrimaryFixedVariant_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).primaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_onPrimaryFixedVariant_closure2.prototype = {
    call$1(s) {
      return B.boolConversionCheck(A._isMonochrome(type$.DynamicScheme._as(s))) ? 90 : 30;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_onPrimaryFixedVariant_closure.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_primaryFixedDim();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_onPrimaryFixedVariant_closure1.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_primaryFixed();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_secondaryFixed_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).secondaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_secondaryFixed_closure1.prototype = {
    call$1(s) {
      return B.boolConversionCheck(A._isMonochrome(type$.DynamicScheme._as(s))) ? 80 : 90;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_secondaryFixed_closure.prototype = {
    call$1(s) {
      return A.MaterialDynamicColors_highestSurface(type$.DynamicScheme._as(s));
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_secondaryFixed_closure2.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return A.ToneDeltaPair$($.$get$MaterialDynamicColors_secondaryFixed(), $.$get$MaterialDynamicColors_secondaryFixedDim(), 10, C.TonePolarity_1, true);
    },
    $signature: typesOffset + 5
  };
  A.MaterialDynamicColors_secondaryFixedDim_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).secondaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_secondaryFixedDim_closure1.prototype = {
    call$1(s) {
      return B.boolConversionCheck(A._isMonochrome(type$.DynamicScheme._as(s))) ? 70 : 80;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_secondaryFixedDim_closure.prototype = {
    call$1(s) {
      return A.MaterialDynamicColors_highestSurface(type$.DynamicScheme._as(s));
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_secondaryFixedDim_closure2.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return A.ToneDeltaPair$($.$get$MaterialDynamicColors_secondaryFixed(), $.$get$MaterialDynamicColors_secondaryFixedDim(), 10, C.TonePolarity_1, true);
    },
    $signature: typesOffset + 5
  };
  A.MaterialDynamicColors_onSecondaryFixed_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).secondaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_onSecondaryFixed_closure2.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return 10;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_onSecondaryFixed_closure.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_secondaryFixedDim();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_onSecondaryFixed_closure1.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_secondaryFixed();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_onSecondaryFixedVariant_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).secondaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_onSecondaryFixedVariant_closure2.prototype = {
    call$1(s) {
      return B.boolConversionCheck(A._isMonochrome(type$.DynamicScheme._as(s))) ? 25 : 30;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_onSecondaryFixedVariant_closure.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_secondaryFixedDim();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_onSecondaryFixedVariant_closure1.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_secondaryFixed();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_tertiaryFixed_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).tertiaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_tertiaryFixed_closure1.prototype = {
    call$1(s) {
      return B.boolConversionCheck(A._isMonochrome(type$.DynamicScheme._as(s))) ? 40 : 90;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_tertiaryFixed_closure.prototype = {
    call$1(s) {
      return A.MaterialDynamicColors_highestSurface(type$.DynamicScheme._as(s));
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_tertiaryFixed_closure2.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return A.ToneDeltaPair$($.$get$MaterialDynamicColors_tertiaryFixed(), $.$get$MaterialDynamicColors_tertiaryFixedDim(), 10, C.TonePolarity_1, true);
    },
    $signature: typesOffset + 5
  };
  A.MaterialDynamicColors_tertiaryFixedDim_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).tertiaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_tertiaryFixedDim_closure1.prototype = {
    call$1(s) {
      return B.boolConversionCheck(A._isMonochrome(type$.DynamicScheme._as(s))) ? 30 : 80;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_tertiaryFixedDim_closure.prototype = {
    call$1(s) {
      return A.MaterialDynamicColors_highestSurface(type$.DynamicScheme._as(s));
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_tertiaryFixedDim_closure2.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return A.ToneDeltaPair$($.$get$MaterialDynamicColors_tertiaryFixed(), $.$get$MaterialDynamicColors_tertiaryFixedDim(), 10, C.TonePolarity_1, true);
    },
    $signature: typesOffset + 5
  };
  A.MaterialDynamicColors_onTertiaryFixed_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).tertiaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_onTertiaryFixed_closure2.prototype = {
    call$1(s) {
      return B.boolConversionCheck(A._isMonochrome(type$.DynamicScheme._as(s))) ? 100 : 10;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_onTertiaryFixed_closure.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_tertiaryFixedDim();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_onTertiaryFixed_closure1.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_tertiaryFixed();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_onTertiaryFixedVariant_closure0.prototype = {
    call$1(s) {
      return type$.DynamicScheme._as(s).tertiaryPalette;
    },
    $signature: typesOffset + 0
  };
  A.MaterialDynamicColors_onTertiaryFixedVariant_closure2.prototype = {
    call$1(s) {
      return B.boolConversionCheck(A._isMonochrome(type$.DynamicScheme._as(s))) ? 90 : 30;
    },
    $signature: typesOffset + 1
  };
  A.MaterialDynamicColors_onTertiaryFixedVariant_closure.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_tertiaryFixedDim();
    },
    $signature: typesOffset + 2
  };
  A.MaterialDynamicColors_onTertiaryFixedVariant_closure1.prototype = {
    call$1(s) {
      type$.DynamicScheme._as(s);
      return $.$get$MaterialDynamicColors_tertiaryFixed();
    },
    $signature: typesOffset + 2
  };
  A.TemperatureCache_hctsByTemp_closure.prototype = {
    call$2(a, b) {
      var t2, t3,
        t1 = type$.Hct;
      t1._as(a);
      t1._as(b);
      t1 = this.temperaturesByHct;
      t2 = J.getInterceptor$asx(t1);
      t3 = t2.$index(t1, a);
      t3.toString;
      t1 = t2.$index(t1, b);
      t1.toString;
      return J.compareTo$1$ns(t3, t1);
    },
    $signature: typesOffset + 150
  };
  A.CounterWidget_build_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.count;
      if (typeof t2 !== "number")
        return t2.$sub();
      t1.onChange$1(t2 - 1);
    },
    $signature: 0
  };
  A.CounterWidget_build_closure0.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.count;
      if (typeof t2 !== "number")
        return t2.$add();
      t1.onChange$1(t2 + 1);
    },
    $signature: 0
  };
  (function aliases() {
    var _ = A.Animation.prototype;
    _.super$Animation$toStringDetails = _.toStringDetails$0;
    _ = A.AnimationEagerListenerMixin.prototype;
    _.super$AnimationEagerListenerMixin$dispose = _.dispose$0;
    _ = A.GestureRecognizer.prototype;
    _.super$GestureRecognizer$addAllowedPointerPanZoom = _.addAllowedPointerPanZoom$1;
    _.super$GestureRecognizer$isPointerAllowed = _.isPointerAllowed$1;
    _.super$GestureRecognizer$dispose = _.dispose$0;
    _.super$GestureRecognizer$debugFillProperties = _.debugFillProperties$1;
    _ = A.OneSequenceGestureRecognizer.prototype;
    _.super$OneSequenceGestureRecognizer$addAllowedPointer = _.addAllowedPointer$1;
    _.super$OneSequenceGestureRecognizer$handleNonAllowedPointer = _.handleNonAllowedPointer$1;
    _.super$OneSequenceGestureRecognizer$resolve = _.resolve$1;
    _.super$OneSequenceGestureRecognizer$dispose = _.dispose$0;
    _.super$OneSequenceGestureRecognizer$startTrackingPointer = _.startTrackingPointer$2;
    _ = A.PrimaryPointerGestureRecognizer.prototype;
    _.super$PrimaryPointerGestureRecognizer$addAllowedPointer = _.addAllowedPointer$1;
    _.super$PrimaryPointerGestureRecognizer$acceptGesture = _.acceptGesture$1;
    _.super$PrimaryPointerGestureRecognizer$rejectGesture = _.rejectGesture$1;
    _.super$PrimaryPointerGestureRecognizer$debugFillProperties = _.debugFillProperties$1;
    _ = A.__ButtonStyleState_State_TickerProviderStateMixin.prototype;
    _.super$__ButtonStyleState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.__InkResponseState_State_AutomaticKeepAliveClientMixin.prototype;
    _.super$__InkResponseState_State_AutomaticKeepAliveClientMixin$initState = _.initState$0;
    _.super$__InkResponseState_State_AutomaticKeepAliveClientMixin$deactivate = _.deactivate$0;
    _ = A.InkFeature.prototype;
    _.super$InkFeature$dispose = _.dispose$0;
    _ = A.__ZoomEnterTransitionState_State__ZoomTransitionBase.prototype;
    _.super$__ZoomEnterTransitionState_State__ZoomTransitionBase$dispose = _.dispose$0;
    _ = A.__ZoomExitTransitionState_State__ZoomTransitionBase.prototype;
    _.super$__ZoomExitTransitionState_State__ZoomTransitionBase$dispose = _.dispose$0;
    _ = A._ScaffoldMessengerState_State_TickerProviderStateMixin.prototype;
    _.super$_ScaffoldMessengerState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.BorderRadiusGeometry.prototype;
    _.super$BorderRadiusGeometry$subtract = _.subtract$1;
    _.super$BorderRadiusGeometry$add = _.add$1;
    _ = A.OutlinedBorder.prototype;
    _.super$OutlinedBorder$lerpFrom = _.lerpFrom$2;
    _.super$OutlinedBorder$lerpTo = _.lerpTo$2;
    _ = A.InlineSpan.prototype;
    _.super$InlineSpan$$eq = _.$eq;
    _.super$InlineSpan$debugFillProperties = _.debugFillProperties$1;
    _ = A._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin.prototype;
    _.super$_RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin$dispose = _.dispose$0;
    _ = A.RelayoutWhenSystemFontsChangeMixin.prototype;
    _.super$RelayoutWhenSystemFontsChangeMixin$systemFontsDidChange = _.systemFontsDidChange$0;
    _ = A._RenderParagraph_RenderBox_ContainerRenderObjectMixin.prototype;
    _.super$_RenderParagraph_RenderBox_ContainerRenderObjectMixin$attach = _.attach$1;
    _.super$_RenderParagraph_RenderBox_ContainerRenderObjectMixin$detach = _.detach$0;
    _ = A._TextParentData_ParentData_ContainerParentDataMixin.prototype;
    _.super$_TextParentData_ParentData_ContainerParentDataMixin$detach = _.detach$0;
    _ = A.RenderProxyBoxWithHitTestBehavior.prototype;
    _.super$RenderProxyBoxWithHitTestBehavior$hitTest = _.hitTest$2$position;
    _.super$RenderProxyBoxWithHitTestBehavior$debugFillProperties = _.debugFillProperties$1;
    _ = A._RenderPhysicalModelBase.prototype;
    _.super$_RenderPhysicalModelBase$debugFillProperties = _.debugFillProperties$1;
    _ = A.RenderAligningShiftedBox.prototype;
    _.super$RenderAligningShiftedBox$debugFillProperties = _.debugFillProperties$1;
    _ = A.Ticker.prototype;
    _.super$Ticker$dispose = _.dispose$0;
    _ = A.SemanticsSortKey.prototype;
    _.super$SemanticsSortKey$debugFillProperties = _.debugFillProperties$1;
    _ = A.Action.prototype;
    _.super$Action$_updateCallingAction = _._updateCallingAction$1;
    _.super$Action$isEnabled = _.isEnabled$1;
    _.super$Action$addActionListener = _.addActionListener$1;
    _.super$Action$removeActionListener = _.removeActionListener$1;
    _ = A.AutomaticKeepAliveClientMixin.prototype;
    _.super$AutomaticKeepAliveClientMixin$build = _.build$1;
    _ = A.MultiChildRenderObjectElement.prototype;
    _.super$MultiChildRenderObjectElement$insertRenderObjectChild = _.insertRenderObjectChild$2;
    _.super$MultiChildRenderObjectElement$moveRenderObjectChild = _.moveRenderObjectChild$3;
    _ = A.ImplicitlyAnimatedWidget.prototype;
    _.super$ImplicitlyAnimatedWidget$debugFillProperties = _.debugFillProperties$1;
    _ = A.ImplicitlyAnimatedWidgetState.prototype;
    _.super$ImplicitlyAnimatedWidgetState$initState = _.initState$0;
    _ = A._ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin.prototype;
    _.super$_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin$dispose = _.dispose$0;
    _.super$_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin$debugFillProperties = _.debugFillProperties$1;
    _ = A.Route.prototype;
    _.super$Route$install = _.install$0;
    _.super$Route$didPush = _.didPush$0;
    _.super$Route$didAdd = _.didAdd$0;
    _.super$Route$didReplace = _.didReplace$1;
    _.super$Route$willPop = _.willPop$0;
    _.super$Route$onPopInvokedWithResult = _.onPopInvokedWithResult$2;
    _.super$Route$didPop = _.didPop$1;
    _.super$Route$didPopNext = _.didPopNext$1;
    _.super$Route$didChangeNext = _.didChangeNext$1;
    _.super$Route$didChangePrevious = _.didChangePrevious$1;
    _.super$Route$changedInternalState = _.changedInternalState$0;
    _.super$Route$changedExternalState = _.changedExternalState$0;
    _.super$Route$dispose = _.dispose$0;
    _ = A._RestorationInformation.prototype;
    _.super$_RestorationInformation$computeSerializableData = _.computeSerializableData$0;
    _ = A._NavigatorState_State_TickerProviderStateMixin.prototype;
    _.super$_NavigatorState_State_TickerProviderStateMixin$activate = _.activate$0;
    _.super$_NavigatorState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin.prototype;
    _.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$didUpdateWidget = _.didUpdateWidget$1;
    _.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$didChangeDependencies = _.didChangeDependencies$0;
    _.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$dispose = _.dispose$0;
    _ = A._RenderTheaterMixin.prototype;
    _.super$_RenderTheaterMixin$paint = _.paint$2;
    _ = A._OverlayState_State_TickerProviderStateMixin.prototype;
    _.super$_OverlayState_State_TickerProviderStateMixin$debugFillProperties = _.debugFillProperties$1;
    _ = A.__RenderTheater_RenderBox_ContainerRenderObjectMixin.prototype;
    _.super$__RenderTheater_RenderBox_ContainerRenderObjectMixin$attach = _.attach$1;
    _.super$__RenderTheater_RenderBox_ContainerRenderObjectMixin$detach = _.detach$0;
    _ = A.RestorationMixin.prototype;
    _.super$RestorationMixin$didToggleBucket = _.didToggleBucket$1;
    _ = A.RestorableValue.prototype;
    _.super$RestorableValue$value = _.set$value;
    _ = A._RestorablePrimitiveValueN.prototype;
    _.super$_RestorablePrimitiveValueN$fromPrimitives = _.fromPrimitives$1;
    _.super$_RestorablePrimitiveValueN$toPrimitives = _.toPrimitives$0;
    _ = A._CallbackHookProvider.prototype;
    _.super$_CallbackHookProvider$addCallback = _.addCallback$1;
    _.super$_CallbackHookProvider$removeCallback = _.removeCallback$1;
    _.super$_CallbackHookProvider$invokeCallback = _.invokeCallback$1;
    _ = A.__RouterState_State_RestorationMixin.prototype;
    _.super$__RouterState_State_RestorationMixin$didUpdateWidget = _.didUpdateWidget$1;
    _.super$__RouterState_State_RestorationMixin$didChangeDependencies = _.didChangeDependencies$0;
    _.super$__RouterState_State_RestorationMixin$dispose = _.dispose$0;
    _ = A.OverlayRoute.prototype;
    _.super$OverlayRoute$install = _.install$0;
    _.super$OverlayRoute$didPop = _.didPop$1;
    _.super$OverlayRoute$dispose = _.dispose$0;
    _ = A.TransitionRoute.prototype;
    _.super$TransitionRoute$install = _.install$0;
    _.super$TransitionRoute$didPush = _.didPush$0;
    _.super$TransitionRoute$didAdd = _.didAdd$0;
    _.super$TransitionRoute$didPop = _.didPop$1;
    _.super$TransitionRoute$didPopNext = _.didPopNext$1;
    _.super$TransitionRoute$didChangeNext = _.didChangeNext$1;
    _ = A._ModalRoute_TransitionRoute_LocalHistoryRoute.prototype;
    _.super$_ModalRoute_TransitionRoute_LocalHistoryRoute$willPop = _.willPop$0;
    _ = A.MultiSelectableSelectionContainerDelegate.prototype;
    _.super$MultiSelectableSelectionContainerDelegate$remove = _.remove$1;
    _.super$MultiSelectableSelectionContainerDelegate$didChangeSelectables = _.didChangeSelectables$0;
    _.super$MultiSelectableSelectionContainerDelegate$handleSelectAll = _.handleSelectAll$1;
    _.super$MultiSelectableSelectionContainerDelegate$handleSelectWord = _.handleSelectWord$1;
    _.super$MultiSelectableSelectionContainerDelegate$handleClearSelection = _.handleClearSelection$1;
    _.super$MultiSelectableSelectionContainerDelegate$handleSelectionEdgeUpdate = _.handleSelectionEdgeUpdate$1;
    _.super$MultiSelectableSelectionContainerDelegate$dispose = _.dispose$0;
    _.super$MultiSelectableSelectionContainerDelegate$dispatchSelectionEventToChild = _.dispatchSelectionEventToChild$2;
    _ = A.__SelectionContainerState_State_Selectable_SelectionRegistrant.prototype;
    _.super$__SelectionContainerState_State_Selectable_SelectionRegistrant$dispose = _.dispose$0;
  })();
  (function installTearOffs() {
    var _static = hunkHelpers.installStaticTearOff,
      _instance_2_u = hunkHelpers._instance_2u,
      _instance_1_u = hunkHelpers._instance_1u,
      _instance = hunkHelpers.installInstanceTearOff,
      _instance_0_u = hunkHelpers._instance_0u,
      _static_1 = hunkHelpers._static_1,
      _instance_1_i = hunkHelpers._instance_1i,
      _static_2 = hunkHelpers._static_2;
    _static(A, "ui_Size_lerp$closure", 3, null, ["call$3"], ["Size_lerp"], 151, 0);
    _static(A, "ui__lerpDouble$closure", 3, null, ["call$3"], ["lerpDouble"], 152, 0);
    _static(A, "ui_Color_lerp$closure", 3, null, ["call$3"], ["Color_lerp"], 153, 0);
    var _;
    _instance_2_u(_ = A.DefaultEquality.prototype, "get$equals", "equals$2", 21);
    _instance_1_u(_, "get$hash", "hash$1", 17);
    _instance_1_u(_, "get$isValidKey", "isValidKey$1", 11);
    _instance_2_u(_ = A._UnorderedEquality.prototype, "get$equals", "equals$2", 21);
    _instance_1_u(_, "get$hash", "hash$1", 17);
    _instance_1_u(A.UnorderedIterableEquality.prototype, "get$isValidKey", "isValidKey$1", 11);
    _instance_1_u(A.SetEquality.prototype, "get$isValidKey", "isValidKey$1", 11);
    _instance_2_u(_ = A.MapEquality.prototype, "get$equals", "equals$2", 21);
    _instance_1_u(_, "get$hash", "hash$1", 17);
    _instance_1_u(_, "get$isValidKey", "isValidKey$1", 11);
    _instance_2_u(_ = A.DeepCollectionEquality.prototype, "get$equals", "equals$2", 21);
    _instance_1_u(_, "get$hash", "hash$1", 17);
    _instance_1_u(_, "get$isValidKey", "isValidKey$1", 11);
    _instance(_ = A.AnimationController.prototype, "get$reverse", 0, 0, null, ["call$1$from", "call$0"], ["reverse$1$from", "reverse$0"], 91, 0, 0);
    _instance_1_u(_, "get$_animation_controller$_tick", "_animation_controller$_tick$1", 25);
    _instance_1_u(A.ReverseAnimation.prototype, "get$_statusChangeHandler", "_statusChangeHandler$1", 4);
    _instance_1_u(A.CurvedAnimation.prototype, "get$_updateCurveDirection", "_updateCurveDirection$1", 4);
    _instance_1_u(_ = A.TrainHoppingAnimation.prototype, "get$_statusChangeHandler", "_statusChangeHandler$1", 4);
    _instance_0_u(_, "get$_valueChangeHandler", "_valueChangeHandler$0", 3);
    _instance_0_u(A.AnimationLocalListenersMixin.prototype, "get$notifyListeners", "notifyListeners$0", 3);
    _instance_1_u(A.AnimationLocalStatusListenersMixin.prototype, "get$notifyStatusListeners", "notifyStatusListeners$1", 4);
    _instance_1_u(_ = A._CupertinoBackGestureDetectorState.prototype, "get$_handleDragStart", "_handleDragStart$1", 149);
    _instance_1_u(_, "get$_handleDragUpdate", "_handleDragUpdate$1", 8);
    _instance_1_u(_, "get$_handleDragEnd", "_handleDragEnd$1", 50);
    _instance_0_u(_, "get$_handleDragCancel", "_handleDragCancel$0", 3);
    _instance_1_u(_, "get$_route$_handlePointerDown", "_route$_handlePointerDown$1", 18);
    _static_1(A, "long_press_LongPressGestureRecognizer__defaultButtonAcceptBehavior$closure", "LongPressGestureRecognizer__defaultButtonAcceptBehavior", 16);
    _static_1(A, "monodrag_DragGestureRecognizer__defaultBuilder$closure", "DragGestureRecognizer__defaultBuilder", 155);
    _static_1(A, "monodrag_DragGestureRecognizer__defaultButtonAcceptBehavior$closure", "DragGestureRecognizer__defaultButtonAcceptBehavior", 16);
    _instance_1_u(A.DragGestureRecognizer.prototype, "get$handleEvent", "handleEvent$1", 19);
    _static_1(A, "multitap_DoubleTapGestureRecognizer__defaultButtonAcceptBehavior$closure", "DoubleTapGestureRecognizer__defaultButtonAcceptBehavior", 16);
    _instance_0_u(A._CountdownZoned.prototype, "get$_onTimeout", "_onTimeout$0", 3);
    _instance_1_u(_ = A.DoubleTapGestureRecognizer.prototype, "get$_multitap$_handleEvent", "_multitap$_handleEvent$1", 19);
    _instance_1_u(_, "get$_reject", "_reject$1", 54);
    _instance_0_u(_, "get$_multitap$_reset", "_multitap$_reset$0", 3);
    _static_1(A, "recognizer_GestureRecognizer__defaultButtonAcceptBehavior$closure", "GestureRecognizer__defaultButtonAcceptBehavior", 16);
    _instance_1_u(A.PrimaryPointerGestureRecognizer.prototype, "get$handleEvent", "handleEvent$1", 19);
    _instance_2_u(_ = A._MaterialAppState.prototype, "get$_inspectorSelectButtonBuilder", "_inspectorSelectButtonBuilder$2", 67);
    _instance_2_u(_, "get$_materialBuilder", "_materialBuilder$2", 40);
    _instance_0_u(A._ButtonStyleState.prototype, "get$handleStatesControllerChange", "handleStatesControllerChange$0", 3);
    _instance_1_u(A.InkHighlight.prototype, "get$_handleAlphaStatusChanged", "_handleAlphaStatusChanged$1", 4);
    _instance_1_u(A.InkRipple.prototype, "get$_ink_ripple$_handleAlphaStatusChanged", "_ink_ripple$_handleAlphaStatusChanged$1", 4);
    _instance_1_u(A.InkSplash.prototype, "get$_ink_splash$_handleAlphaStatusChanged", "_ink_splash$_handleAlphaStatusChanged$1", 4);
    _instance_1_u(_ = A.InkResponse.prototype, "get$getRectCallback", "getRectCallback$1", 108);
    _instance_1_u(_, "get$debugCheckContext", "debugCheckContext$1", 117);
    _instance_1_u(_ = A._InkResponseState.prototype, "get$activateOnIntent", "activateOnIntent$1", 118);
    _instance(_, "get$simulateTap", 0, 0, null, ["call$1", "call$0"], ["simulateTap$1", "simulateTap$0"], 125, 0, 0);
    _instance_0_u(_, "get$simulateLongPress", "simulateLongPress$0", 3);
    _instance_0_u(_, "get$handleStatesControllerChange", "handleStatesControllerChange$0", 3);
    _instance_1_u(_, "get$handleFocusHighlightModeChange", "handleFocusHighlightModeChange$1", 128);
    _instance_1_u(_, "get$handleFocusUpdate", "handleFocusUpdate$1", 141);
    _instance_1_u(_, "get$handleTapDown", "handleTapDown$1", 35);
    _instance_1_u(_, "get$handleTapUp", "handleTapUp$1", 30);
    _instance_1_u(_, "get$handleSecondaryTapDown", "handleSecondaryTapDown$1", 35);
    _instance_1_u(_, "get$handleSecondaryTapUp", "handleSecondaryTapUp$1", 30);
    _instance_0_u(_, "get$handleTap", "handleTap$0", 3);
    _instance_0_u(_, "get$handleTapCancel", "handleTapCancel$0", 3);
    _instance_0_u(_, "get$handleDoubleTap", "handleDoubleTap$0", 3);
    _instance_0_u(_, "get$handleLongPress", "handleLongPress$0", 3);
    _instance_0_u(_, "get$handleSecondaryTap", "handleSecondaryTap$0", 3);
    _instance_0_u(_, "get$handleSecondaryTapCancel", "handleSecondaryTapCancel$0", 3);
    _instance_1_u(_, "get$handleMouseEnter", "handleMouseEnter$1", 55);
    _instance_1_u(_, "get$handleMouseExit", "handleMouseExit$1", 56);
    _instance_0_u(_ = A._ZoomTransitionBase.prototype, "get$onAnimationValueChange", "onAnimationValueChange$0", 3);
    _instance_1_u(_, "get$onAnimationStatusChange", "onAnimationStatusChange$1", 4);
    _instance_1_u(A._ZoomEnterTransitionPainter.prototype, "get$_onStatusChange", "_onStatusChange$1", 39);
    _instance_1_u(A._ZoomExitTransitionPainter.prototype, "get$_onStatusChange", "_onStatusChange$1", 39);
    _static(A, "scrollbar_theme___lerpBool$closure", 3, null, ["call$3"], ["_lerpBool"], 156, 0);
    _static(A, "borders_OutlinedBorder_lerp$closure", 3, null, ["call$3"], ["OutlinedBorder_lerp"], 157, 0);
    _static(A, "edge_insets_EdgeInsetsGeometry_lerp$closure", 3, null, ["call$3"], ["EdgeInsetsGeometry_lerp"], 158, 0);
    _instance_2_u(A.WordBoundary.prototype, "get$_skipSpacesAndPunctuations", "_skipSpacesAndPunctuations$2", 76);
    _static(A, "text_style_TextStyle_lerp$closure", 3, null, ["call$3"], ["TextStyle_lerp"], 159, 0);
    _instance_2_u(A.RenderBoxContainerDefaultsMixin.prototype, "get$defaultPaint", "defaultPaint$2", 7);
    _instance_1_i(_ = A.ContainerRenderObjectMixin.prototype, "get$add", "add$1", 83);
    _instance_1_u(_, "get$childBefore", "childBefore$1", "ContainerRenderObjectMixin.0?(Object?)");
    _instance_1_u(_, "get$childAfter", "childAfter$1", "ContainerRenderObjectMixin.0?(Object?)");
    _instance_0_u(A.RelayoutWhenSystemFontsChangeMixin.prototype, "get$_scheduleSystemFontsUpdate", "_scheduleSystemFontsUpdate$0", 3);
    _instance_1_u(_ = A._SelectableFragment.prototype, "get$_getWordBoundaryAtPosition", "_getWordBoundaryAtPosition$1", 42);
    _instance_2_u(_, "get$_getParagraphBoundaryAtPosition", "_getParagraphBoundaryAtPosition$2", 87);
    _instance_1_u(_, "get$_getClampedParagraphBoundaryAtPosition", "_getClampedParagraphBoundaryAtPosition$1", 42);
    _instance_0_u(A.RenderAnimatedOpacityMixin.prototype, "get$_updateOpacity", "_updateOpacity$0", 3);
    _instance_0_u(A._RenderCustomClip.prototype, "get$_markNeedsClip", "_markNeedsClip$0", 3);
    _instance_0_u(_ = A.RenderSemanticsGestureHandler.prototype, "get$_performSemanticScrollLeft", "_performSemanticScrollLeft$0", 3);
    _instance_0_u(_, "get$_performSemanticScrollRight", "_performSemanticScrollRight$0", 3);
    _instance_0_u(_, "get$_performSemanticScrollUp", "_performSemanticScrollUp$0", 3);
    _instance_0_u(_, "get$_performSemanticScrollDown", "_performSemanticScrollDown$0", 3);
    _instance_0_u(A.SelectionRegistrant.prototype, "get$_selection$_updateSelectionRegistrarSubscription", "_selection$_updateSelectionRegistrarSubscription$0", 3);
    _instance_2_u(A.RenderStack.prototype, "get$paintStack", "paintStack$2", 7);
    _instance_1_u(A.Ticker.prototype, "get$_ticker$_tick", "_ticker$_tick$1", 25);
    _instance_1_u(A._ActionsState.prototype, "get$_handleActionChanged", "_handleActionChanged$1", 90);
    _instance_1_u(_ = A._WidgetsAppState.prototype, "get$_defaultOnNavigationNotification", "_defaultOnNavigationNotification$1", 44);
    _instance_1_u(_, "get$_onGenerateRoute", "_onGenerateRoute$1", 92);
    _instance_1_u(_, "get$_onUnknownRoute", "_onUnknownRoute$1", 93);
    _instance_1_u(A._DualTransitionBuilderState.prototype, "get$_animationListener", "_animationListener$1", 4);
    _instance_1_u(_ = A.RawGestureDetectorState.prototype, "get$_handlePointerDown", "_handlePointerDown$1", 18);
    _instance_1_u(_, "get$_handlePointerPanZoomStart", "_handlePointerPanZoomStart$1", 107);
    _instance_1_u(_, "get$_updateSemanticsForRenderObject", "_updateSemanticsForRenderObject$1", 163);
    _instance_1_u(_ = A._HeroFlight.prototype, "get$_buildOverlay", "_buildOverlay$1", 10);
    _instance_1_u(_, "get$_handleAnimationUpdate", "_handleAnimationUpdate$1", 4);
    _instance_0_u(_, "get$onTick", "onTick$0", 3);
    _instance_1_u(_ = A.HeroController.prototype, "get$_handleFlightEnded", "_handleFlightEnded$1", 112);
    _instance(_, "get$_defaultHeroFlightShuttleBuilder", 0, 5, null, ["call$5"], ["_defaultHeroFlightShuttleBuilder$5"], 113, 0, 0);
    _static(A, "icon_theme_data_IconThemeData_lerp$closure", 3, null, ["call$3"], ["IconThemeData_lerp"], 160, 0);
    _instance_0_u(A.AnimatedWidgetBaseState.prototype, "get$_handleAnimationChanged", "_handleAnimationChanged$0", 3);
    _static_2(A, "navigator_Navigator_defaultGenerateInitialRoutes$closure", "Navigator_defaultGenerateInitialRoutes", 45);
    _static_1(A, "navigator__RouteEntry_isPresentPredicate$closure", "_RouteEntry_isPresentPredicate", 13);
    _static_1(A, "navigator__RouteEntry_suitableForTransitionAnimationPredicate$closure", "_RouteEntry_suitableForTransitionAnimationPredicate", 13);
    _static_1(A, "navigator__RouteEntry_willBePresentPredicate$closure", "_RouteEntry_willBePresentPredicate", 13);
    _instance_1_u(A._NavigatorPushObservation.prototype, "get$notify", "notify$1", 24);
    _instance_1_u(A._NavigatorPopObservation.prototype, "get$notify", "notify$1", 24);
    _instance_1_u(A._NavigatorRemoveObservation.prototype, "get$notify", "notify$1", 24);
    _instance_1_u(A._NavigatorReplaceObservation.prototype, "get$notify", "notify$1", 24);
    _instance_0_u(_ = A.NavigatorState.prototype, "get$_handleHistoryChanged", "_handleHistoryChanged$0", 3);
    _instance_0_u(_, "get$_recordLastFocus", "_recordLastFocus$0", 3);
    _instance_1_u(_, "get$_navigator$_handlePointerDown", "_navigator$_handlePointerDown$1", 18);
    _instance_1_u(_, "get$_handlePointerUpOrCancel", "_handlePointerUpOrCancel$1", 19);
    _static_1(A, "overlay__RenderTheater__detachChild$closure", "_RenderTheater__detachChild", 51);
    _instance(A._RenderTheaterMixin.prototype, "get$paint", 0, 2, null, ["call$2"], ["paint$2"], 7, 0, 1);
    _instance_0_u(A._RootRestorationScopeState.prototype, "get$_replaceRootBucket", "_replaceRootBucket$0", 3);
    _instance_1_u(A.RestorationMixin.prototype, "get$_updateProperty", "_updateProperty$1", 130);
    _instance_1_u(_ = A._RouterState.prototype, "get$_reportRouteInformation", "_reportRouteInformation$1", 25);
    _instance_0_u(_, "get$_handleRouteInformationProviderNotification", "_handleRouteInformationProviderNotification$0", 3);
    _instance_0_u(_, "get$_handleBackButtonDispatcherNotification", "_handleBackButtonDispatcherNotification$0", 131);
    _instance_0_u(_, "get$_handleRouterDelegateNotification", "_handleRouterDelegateNotification$0", 3);
    _instance_1_u(A.TransitionRoute.prototype, "get$_routes$_handleStatusChanged", "_routes$_handleStatusChanged$1", 4);
    _instance_1_u(_ = A.ModalRoute.prototype, "get$_buildModalBarrier", "_buildModalBarrier$1", 10);
    _instance_1_u(_, "get$_buildModalScope", "_buildModalScope$1", 10);
    _instance_1_i(_ = A.MultiSelectableSelectionContainerDelegate.prototype, "get$add", "add$1", 14);
    _instance_0_u(_, "get$_handleSelectableGeometryChange", "_handleSelectableGeometryChange$0", 3);
    _instance_0_u(_ = A._SemanticsDebuggerState.prototype, "get$_update", "_update$0", 3);
    _instance_1_u(_, "get$_semantics_debugger$_handlePointerDown", "_semantics_debugger$_handlePointerDown$1", 18);
    _instance_0_u(_, "get$_handleTap", "_handleTap$0", 3);
    _instance_0_u(_, "get$_handleLongPress", "_handleLongPress$0", 3);
    _instance_1_u(_, "get$_handlePanEnd", "_handlePanEnd$1", 50);
    _instance_2_u(A._ShortcutsState.prototype, "get$_handleOnKeyEvent", "_handleOnKeyEvent$2", 46);
    _instance_0_u(A._ShortcutRegistrarState.prototype, "get$_shortcutsChanged", "_shortcutsChanged$0", 3);
    _instance_0_u(A._RenderSnapshotWidget.prototype, "get$_onRasterValueChanged", "_onRasterValueChanged$0", 3);
    _static_2(A, "text__SelectableTextContainerDelegate__compareScreenOrder$closure", "_SelectableTextContainerDelegate__compareScreenOrder", 161);
    _instance_1_i(A._SelectableTextContainerDelegate.prototype, "get$remove", "remove$1", 14);
    _instance_0_u(A.SingleTickerProviderStateMixin.prototype, "get$_updateTicker", "_updateTicker$0", 3);
    _instance_0_u(A.TickerProviderStateMixin.prototype, "get$_updateTickers", "_updateTickers$0", 3);
    _instance_0_u(A._AnimatedState.prototype, "get$_handleChange", "_handleChange$0", 3);
    _static_2(A, "layout_helper_ChildLayoutHelper_dryLayoutChild$closure", "ChildLayoutHelper_dryLayoutChild", 49);
    _static_2(A, "layout_helper_ChildLayoutHelper_layoutChild$closure", "ChildLayoutHelper_layoutChild", 49);
    _static(A, "layout_helper_ChildLayoutHelper_getDryBaseline$closure", 3, null, ["call$3"], ["ChildLayoutHelper_getDryBaseline"], 47, 0);
    _static(A, "layout_helper_ChildLayoutHelper_getBaseline$closure", 3, null, ["call$3"], ["ChildLayoutHelper_getBaseline"], 47, 0);
  })();
  (function inheritance() {
    var _mixinHard = hunkHelpers.mixinHard,
      _mixin = hunkHelpers.mixin,
      _inheritMany = hunkHelpers.inheritMany,
      _inherit = hunkHelpers.inherit;
    _inheritMany(B.Object, [A._InitializedCell, A._WeakReferenceWrapper, A._JSRandom, A._Random, A.Shadow, A.StringAttribute, A.FontWeight, A.FontVariation, A.TextHeightBehavior, A.CallbackHandle, A.StringCharacterRange, A.Breaks, A.BackBreaks, A.DefaultEquality, A._UnorderedEquality, A._MapEntry, A.MapEquality, A.DeepCollectionEquality, A.Simulation, A._AnimationStyle_Object_Diagnosticable, A.AnimationWithParentMixin, A.AnimationLazyListenerMixin, A.AnimationEagerListenerMixin, A.AnimationLocalListenersMixin, A.AnimationLocalStatusListenersMixin, A.Animatable, A.TweenSequenceItem, A._Interval, A._IconThemeData_Object_Diagnosticable, A.LocalizationsDelegate, A.DefaultCupertinoLocalizations, A._CupertinoBackGestureController, A._Decoration_Object_Diagnosticable, A.BoxPainter, A._CupertinoTextThemeData_Object_Diagnosticable, A._TextThemeDefaultsBuilder, A.NoDefaultCupertinoThemeData, A._CupertinoThemeDefaults, A._CupertinoTextThemeDefaults, A.GestureArenaMember, A.DragDownDetails, A.DragStartDetails, A.DragUpdateDetails, A.DragEndDetails, A.LongPressDownDetails, A.LongPressStartDetails, A.LongPressMoveUpdateDetails, A.LongPressEndDetails, A._Vector, A._Matrix, A.PolynomialFit, A.LeastSquaresSolver, A._CountdownZoned, A._TapTracker, A.OffsetPair, A.TapDownDetails, A.TapUpDetails, A.Velocity, A.VelocityEstimate, A._PointAtTime, A.VelocityTracker, A._ActionIconThemeData_Object_Diagnosticable, A.ScrollBehavior, A._AppBarTheme_Object_Diagnosticable, A._Diagonal, A._BadgeThemeData_Object_Diagnosticable, A._MaterialBannerThemeData_Object_Diagnosticable, A._BottomAppBarTheme_Object_Diagnosticable, A._BottomNavigationBarThemeData_Object_Diagnosticable, A._BottomSheetThemeData_Object_Diagnosticable, A._ButtonBarThemeData_Object_Diagnosticable, A._ButtonStyle_Object_Diagnosticable, A._ButtonThemeData_Object_Diagnosticable, A._CardTheme_Object_Diagnosticable, A._CheckboxThemeData_Object_Diagnosticable, A._ChipThemeData_Object_Diagnosticable, A._ColorScheme_Object_Diagnosticable, A._DataTableThemeData_Object_Diagnosticable, A._DatePickerThemeData_Object_Diagnosticable, A._DialogTheme_Object_Diagnosticable, A._DividerThemeData_Object_Diagnosticable, A._DrawerThemeData_Object_Diagnosticable, A._DropdownMenuThemeData_Object_Diagnosticable, A._ElevatedButtonThemeData_Object_Diagnosticable, A._ElevationOpacity, A._ExpansionTileThemeData_Object_Diagnosticable, A._FilledButtonThemeData_Object_Diagnosticable, A._DefaultHeroTag, A._FloatingActionButtonThemeData_Object_Diagnosticable, A.WidgetStateProperty, A._IconButtonThemeData_Object_Diagnosticable, A.InkFeature, A.InteractiveInkFeatureFactory, A.FloatingLabelAlignment, A._InputDecorationTheme_Object_Diagnosticable, A._ListTileThemeData_Object_Diagnosticable, A.DefaultMaterialLocalizations, A.MaterialStateMixin, A._MenuThemeData_Object_Diagnosticable, A._MenuButtonThemeData_Object_Diagnosticable, A._MenuStyle_Object_Diagnosticable, A._NavigationBarThemeData_Object_Diagnosticable, A._NavigationDrawerThemeData_Object_Diagnosticable, A._NavigationRailThemeData_Object_Diagnosticable, A._OutlinedButtonThemeData_Object_Diagnosticable, A._RoutePlaceholder, A.MaterialRouteTransitionMixin, A.PageTransitionsBuilder, A._PageTransitionsTheme_Object_Diagnosticable, A._ZoomTransitionBase, A._PopupMenuThemeData_Object_Diagnosticable, A._ProgressIndicatorThemeData_Object_Diagnosticable, A._RadioThemeData_Object_Diagnosticable, A._ScrollbarThemeData_Object_Diagnosticable, A._SearchBarThemeData_Object_Diagnosticable, A._SearchViewThemeData_Object_Diagnosticable, A._SegmentedButtonThemeData_Object_Diagnosticable, A._SliderThemeData_Object_Diagnosticable, A._SnackBarThemeData_Object_Diagnosticable, A._SwitchThemeData_Object_Diagnosticable, A._TabBarTheme_Object_Diagnosticable, A._TextButtonThemeData_Object_Diagnosticable, A._TextSelectionThemeData_Object_Diagnosticable, A._TextTheme_Object_Diagnosticable, A._ThemeData_Object_Diagnosticable, A.CupertinoBasedMaterialThemeData, A._IdentityThemeDataCacheKey, A._FifoCache, A._VisualDensity_Object_Diagnosticable, A._TimePickerThemeData_Object_Diagnosticable, A._ToggleButtonsThemeData_Object_Diagnosticable, A._TooltipThemeData_Object_Diagnosticable, A._Typography_Object_Diagnosticable, A.AlignmentGeometry, A.BorderRadiusGeometry, A._BorderSide_Object_Diagnosticable, A.ShapeBorder, A.ImageConfiguration, A.Accumulator, A.InlineSpanSemanticsInformation, A.PlaceholderDimensions, A.TextBoundary, A._TextLayout, A._TextPainterLayoutCacheWithOffset, A._LineCaretMetrics, A.TextPainter, A._TextStyle_Object_Diagnosticable, A.RenderBoxContainerDefaultsMixin, A.DebugOverflowIndicatorMixin, A._LayoutSizes, A.ContainerParentDataMixin, A.ContainerRenderObjectMixin, A.RelayoutWhenSystemFontsChangeMixin, A.RenderInlineChildrenContainerDefaults, A.__SelectableFragment_Object_Selectable, A.RenderAnimatedOpacityMixin, A.Selectable, A.SelectionRegistrant, A.SelectionEvent, A.SelectionGeometry, A._SelectionPoint_Object_Diagnosticable, A.RelativeRect, A.Ticker, A.TickerFuture, A.TickerCanceled, A._SemanticsSortKey_Object_Diagnosticable, A.SemanticsEvent, A.ApplicationSwitcherDescription, A._Intent_Object_Diagnosticable, A._Action_Object_Diagnosticable, A._OverridableActionMixin, A.Notification, A.AutomaticKeepAliveClientMixin, A.NotifiableElementMixin, A._NotificationNode, A.GestureRecognizerFactory, A.SemanticsGestureDelegate, A._HeroFlightManifest, A._HeroFlight, A.NavigatorObserver, A.IconData, A._Pending, A.DefaultWidgetsLocalizations, A.RouteSettings, A.RouteTransitionRecord, A.TransitionDelegate, A._NavigatorObservation, A._RestorationInformation, A.OverlayEntry, A._RenderTheaterMixin, A.PageStorageBucket, A.MenuSerializableShortcut, A.RestorationMixin, A._CallbackHookProvider, A.LocalHistoryRoute, A.ScrollIncrementDetails, A.SelectionContainerDelegate, A._SingleActivator_Object_Diagnosticable, A.__ActivatorIntentPair_Object_Diagnosticable, A._ShortcutManager_Object_Diagnosticable, A._ShortcutRegistry_Object_ChangeNotifier, A._DefaultSnapshotPainter, A.SingleTickerProviderStateMixin, A.TickerProviderStateMixin, A._ConstantValueListenable, A._LerpSides, A._LerpProperties, A._WidgetStatePropertyWith, A.WidgetStatePropertyAll, A.DynamicColor, A.DynamicScheme, A.ContrastCurve, A.ToneDeltaPair, A.Cam16, A.Hct, A.ViewingConditions, A.TonalPalette, A.TemperatureCache]);
    _inheritMany(A.StringAttribute, [A.SpellOutStringAttribute, A.LocaleStringAttribute]);
    _inheritMany(A._UnorderedEquality, [A.UnorderedIterableEquality, A.SetEquality]);
    _inheritMany(B._Enum, [A.AnimationStatus, A._AnimationDirection, A.AnimationBehavior, A._TrainHoppingMode, A.CupertinoUserInterfaceLevelData, A._DragState, A._DragDirection, A.DragStartBehavior, A.MultitouchDragStrategy, A.GestureRecognizerState, A.ThemeMode, A._CornerId, A.ButtonTextTheme, A.ButtonBarLayoutBehavior, A.DynamicSchemeVariant, A._FloatingActionButtonType, A._IconButtonVariant, A._HighlightType, A.FloatingLabelBehavior, A.MaterialType, A.SnackBarClosedReason, A.MaterialTapTargetSize, A.ScriptCategory, A.RenderComparison, A.VerticalDirection, A.BorderStyle, A.BoxShape, A.TextOverflow, A.TextWidthBasis, A.FlexFit, A.MainAxisSize, A.MainAxisAlignment, A.CrossAxisAlignment, A.HitTestBehavior, A.DecorationPosition, A.SelectionResult, A.SelectionEventType, A.TextGranularity, A.SelectionExtendDirection, A.SelectionStatus, A.TextSelectionHandleType, A.StackFit, A.SystemSoundType, A.SelectionChangedCause, A.HeroFlightDirection, A.RoutePopDisposition, A._RouteLifecycle, A._RouteRestorationType, A.RouteInformationReportingType, A.ScrollIncrementType, A.LockState, A.SnapshotMode, A.WidgetState, A.TonePolarity, A.Variant]);
    _inheritMany(E.Listenable, [A.Animation, A.ValueListenable, A._MergingListenable, A.CustomPainter, A.CustomClipper]);
    _inheritMany(A.Animation, [A._AnimationController_Animation_AnimationEagerListenerMixin, A._AlwaysCompleteAnimation, A._AlwaysDismissedAnimation, A._ProxyAnimation_Animation_AnimationLazyListenerMixin, A._ReverseAnimation_Animation_AnimationLazyListenerMixin, A._CurvedAnimation_Animation_AnimationWithParentMixin, A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin, A.__AnimatedEvaluation_Animation_AnimationWithParentMixin]);
    _inherit(A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin, A._AnimationController_Animation_AnimationEagerListenerMixin);
    _inherit(A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin);
    _inherit(A.AnimationController, A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin);
    _inherit(A._InterpolationSimulation, A.Simulation);
    _inherit(A.AnimationStyle, A._AnimationStyle_Object_Diagnosticable);
    _inherit(A._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin, A._ProxyAnimation_Animation_AnimationLazyListenerMixin);
    _inherit(A._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, A._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin);
    _inherit(A.ProxyAnimation, A._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin);
    _inherit(A._ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin, A._ReverseAnimation_Animation_AnimationLazyListenerMixin);
    _inherit(A.ReverseAnimation, A._ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin);
    _inherit(A.CurvedAnimation, A._CurvedAnimation_Animation_AnimationWithParentMixin);
    _inherit(A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin, A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin);
    _inherit(A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin);
    _inherit(A.TrainHoppingAnimation, A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin);
    _inheritMany(E.Curve, [A._Linear, A.Interval, A.ThreePointCubic]);
    _inherit(A._AnimatedEvaluation, A.__AnimatedEvaluation_Animation_AnimationWithParentMixin);
    _inheritMany(A.Animatable, [A._ChainedEvaluation, A.Tween, A.CurveTween, A.TweenSequence]);
    _inheritMany(A.Tween, [A.ReverseTween, A.ColorTween, A.RectTween, A.IntTween, A.MaterialPointArcTween, A.ShapeBorderTween, A.ThemeDataTween, A.DecorationTween, A.EdgeInsetsTween, A.BorderRadiusTween, A.TextStyleTween]);
    _inheritMany(E.Color, [A._CupertinoDynamicColor_Color_Diagnosticable, A.ColorSwatch, A.WidgetStateColor]);
    _inherit(A.CupertinoDynamicColor, A._CupertinoDynamicColor_Color_Diagnosticable);
    _inheritMany(B.Closure2Args, [A.CupertinoDynamicColor_toString_toString, A.MaterialApp_createMaterialHeroController_closure, A._MaterialAppState_build_closure, A._RenderInputPadding_hitTest_closure0, A._RenderInputPadding_hitTest_closure, A._ZoomEnterTransitionPainter_paint_closure, A._ZoomExitTransitionPainter_paint_closure, A.ThemeData__lerpThemeExtensions_closure, A._CompoundBorder_dimensions_closure, A.RenderBoxContainerDefaultsMixin_defaultHitTestChildren_closure, A.RenderInlineChildrenContainerDefaults_hitTestInlineChildren_closure, A._SelectableFragment_paint_closure, A._SelectableFragment_paint_closure0, A.RenderPhysicalModel_paint_closure, A.RenderPhysicalShape_paint_closure, A.RenderFractionalTranslation_hitTestChildren_closure, A.RenderShiftedBox_hitTestChildren_closure, A._WidgetsAppState_build_closure, A.Hero__allHeroesFor_inviteHero, A._HeroFlight__buildOverlay_closure, A.HeroController__defaultHeroFlightShuttleBuilder_closure, A._HistoryProperty_fromPrimitives_closure, A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure, A._RenderTheaterMixin_hitTestChildren_childHitTest, A.__RestorationScopeState_State_RestorationMixin_dispose_closure, A.__RouterState_State_RestorationMixin_dispose_closure, A._ModalScopeState_build_closure, A._ModalScopeState_build__closure0, A._ModalScopeState_build___closure, A.ShortcutManager__indexShortcuts_closure, A.TemperatureCache_hctsByTemp_closure]);
    _inherit(A.IconThemeData, A._IconThemeData_Object_Diagnosticable);
    _inherit(A._CupertinoIconThemeData_IconThemeData_Diagnosticable, A.IconThemeData);
    _inherit(A.CupertinoIconThemeData, A._CupertinoIconThemeData_IconThemeData_Diagnosticable);
    _inheritMany(A.LocalizationsDelegate, [A._CupertinoLocalizationsDelegate, A._MaterialLocalizationsDelegate, A._WidgetsLocalizationsDelegate]);
    _inheritMany(B.Closure0Args, [A.CupertinoRouteTransitionMixin__startPopGesture_closure0, A.CupertinoRouteTransitionMixin__startPopGesture_closure, A.CupertinoRouteTransitionMixin_buildPageTransitions_closure, A.CupertinoRouteTransitionMixin_buildPageTransitions_closure0, A.LongPressGestureRecognizer__checkLongPressDown_closure, A.LongPressGestureRecognizer__checkLongPressDown_closure0, A.LongPressGestureRecognizer__checkLongPressDown_closure1, A.LongPressGestureRecognizer__checkLongPressStart_closure, A.LongPressGestureRecognizer__checkLongPressStart_closure0, A.LongPressGestureRecognizer__checkLongPressStart_closure1, A.LongPressGestureRecognizer__checkLongPressMoveUpdate_closure, A.LongPressGestureRecognizer__checkLongPressMoveUpdate_closure0, A.LongPressGestureRecognizer__checkLongPressMoveUpdate_closure1, A.LongPressGestureRecognizer__checkLongPressEnd_closure, A.LongPressGestureRecognizer__checkLongPressEnd_closure0, A.LongPressGestureRecognizer__checkLongPressEnd_closure1, A.DragGestureRecognizer__checkDown_closure, A.DragGestureRecognizer__checkStart_closure, A.DragGestureRecognizer__checkUpdate_closure, A.DragGestureRecognizer__checkEnd_closure, A.DragGestureRecognizer__checkEnd_closure0, A.DragGestureRecognizer__checkEnd_closure1, A.DragGestureRecognizer__checkEnd_closure2, A.DoubleTapGestureRecognizer_addAllowedPointer_closure, A.PrimaryPointerGestureRecognizer_addAllowedPointer_closure, A.TapGestureRecognizer_handleTapDown_closure, A.TapGestureRecognizer_handleTapDown_closure0, A.TapGestureRecognizer_handleTapDown_closure1, A.TapGestureRecognizer_handleTapUp_closure, A.TapGestureRecognizer_handleTapUp_closure0, A.TapGestureRecognizer_handleTapUp_closure1, A.TapGestureRecognizer_handleTapUp_closure2, A.MaterialPointArcTween__initialize_sweepAngle, A._ButtonStyleState_handleStatesControllerChange_closure, A._ButtonStyleState_build__closure, A._getClipCallback_closure0, A._getClipCallback_closure, A._InkResponseState_activateOnIntent_closure, A._InkResponseState_handleStatesControllerChange_closure, A._InkResponseState_updateHighlight_handleInkRemoval, A._InkResponseState__createSplash_onRemoved, A._InkResponseState_handleFocusHighlightModeChange_closure, A.MaterialStateMixin_addMaterialState_closure, A.MaterialStateMixin_removeMaterialState_closure, A.ThemeData_localize_closure, A._TextLayout__computeEndOfTextCaretAnchorOffset_closure, A.RenderParagraph__createShowOnScreenFor_closure, A._ActionsState__handleActionChanged_closure, A._WidgetsAppState_didChangeLocales_closure, A.GestureDetector_build_closure, A.GestureDetector_build_closure1, A.GestureDetector_build_closure3, A.GestureDetector_build_closure5, A._DefaultSemanticsGestureDelegate__getTapHandler_closure, A._DefaultSemanticsGestureDelegate__getLongPressHandler_closure, A._HeroState_startFlight_closure, A._HeroState_endFlight_closure, A._HeroFlight__handleAnimationUpdate_delayedPerformAnimationUpdate, A.AnimatedWidgetBaseState__handleAnimationChanged_closure, A._LocalizationsState_load__closure, A.ModalBarrier_build_handleDismiss, A._RouteEntry_handlePush_closure, A._RouteEntry_dispose_closure0, A._RouteEntry_dispose__closure, A.NavigatorState__cancelActivePointers_closure, A._OverlayEntryWidgetState__markNeedsBuild_closure, A.OverlayState_insert_closure, A.OverlayState_insertAll_closure, A.OverlayState_rearrange_closure, A.OverlayState__markDirty_closure, A.OverlayState__didChangeEntryOpacity_closure, A._RootRestorationScopeState__loadRootBucketIfNecessary__closure, A.RestorationMixin_registerForRestoration_listener, A._RouterState_restoreState_closure, A._RouterState_restoreState_closure0, A._RouterState_didChangeDependencies_closure, A._RouterState__handleRouteInformationProviderNotification_closure, A._RouterState__rebuild_closure, A._RouterState__handleRouterDelegateNotification_closure, A._CallbackHookProvider_invokeCallback_closure, A.TransitionRoute__updateSecondaryAnimation_closure, A.TransitionRoute__updateSecondaryAnimation_closure0, A._ModalScopeState__forceRebuildPage_closure, A.ModalRoute_offstage_closure, A.ModalRoute_changedInternalState_closure, A._SemanticsDebuggerState_didChangeMetrics_closure, A._SemanticsDebuggerState__update__closure, A._SemanticsDebuggerState__handlePointerDown_closure, A._SemanticsDebuggerState__handleTap_closure, A._SemanticsDebuggerState__handleLongPress_closure, A._SemanticsDebuggerState__handlePanEnd_closure, A.ShortcutManager__indexShortcuts__closure, A._AnimatedState__handleChange_closure, A.CounterWidget_build_closure, A.CounterWidget_build_closure0]);
    _inheritMany(E.StatefulWidget, [A.CupertinoPageTransition, A.CupertinoFullscreenDialogTransition, A._CupertinoBackGestureDetector, A.MaterialApp, A.RawMaterialButton, A.ButtonStyleButton, A._SelectableIconButton, A._InkResponseStateWidget, A.Material, A.ImplicitlyAnimatedWidget, A._ZoomEnterTransition, A._ZoomExitTransition, A._PageTransitionsThemeTransitions, A.ScaffoldMessenger, A.Actions, A.WidgetsApp, A.DualTransitionBuilder, A.RawGestureDetector, A.Hero, A.Localizations, A.AnimatedWidget, A.Navigator, A._OverlayEntryWidget, A.Overlay, A.RestorationScope, A.RootRestorationScope, A.Router, A._ModalScope, A.SelectionContainer, A.SemanticsDebugger, A.SharedAppData, A.Shortcuts, A.ShortcutRegistrar, A._SelectableTextContainer, A.TickerMode]);
    _inheritMany(E.State0, [A._CupertinoPageTransitionState, A._CupertinoFullscreenDialogTransitionState, A._CupertinoBackGestureDetectorState, A._MaterialAppState, A.__RawMaterialButtonState_State_MaterialStateMixin, A.__ButtonStyleState_State_TickerProviderStateMixin, A._SelectableIconButtonState, A.__InkResponseState_State_AutomaticKeepAliveClientMixin, A.__MaterialState_State_TickerProviderStateMixin, A._ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin, A.__ZoomEnterTransitionState_State__ZoomTransitionBase, A.__ZoomExitTransitionState_State__ZoomTransitionBase, A._PageTransitionsThemeTransitionsState, A._ScaffoldMessengerState_State_TickerProviderStateMixin, A._ActionsState, A.__WidgetsAppState_State_WidgetsBindingObserver, A._DualTransitionBuilderState, A.RawGestureDetectorState, A._HeroState, A._LocalizationsState, A._NavigatorState_State_TickerProviderStateMixin, A._OverlayEntryWidgetState, A._OverlayState_State_TickerProviderStateMixin, A.__RestorationScopeState_State_RestorationMixin, A._RootRestorationScopeState, A.__RouterState_State_RestorationMixin, A._ModalScopeState, A.__SelectionContainerState_State_Selectable, A.__SemanticsDebuggerState_State_WidgetsBindingObserver, A._SharedAppDataState, A._ShortcutsState, A._ShortcutRegistrarState, A._SelectableTextContainerState, A._TickerModeState, A._AnimatedState]);
    _inheritMany(B.Closure, [A._CupertinoBackGestureDetectorState_dispose_closure, A._CupertinoBackGestureController_dragEnd_closure, A._CupertinoEdgeShadowDecoration_lerp_closure, A._CupertinoEdgeShadowDecoration_lerp_closure0, A.CupertinoThemeData_resolveFrom_convertColor, A.NoDefaultCupertinoThemeData_resolveFrom_convertColor, A._CupertinoThemeDefaults_resolveFrom_convertColor, A.FlagsSummary__hasNonNullEntry_closure, A.FlagsSummary__formattedValues_closure, A.FlagsSummary__formattedValues_closure0, A.PolynomialFit_toString_closure, A._MaterialAppState__buildWidgetApp_closure, A.MaterialRectArcTween__initialize_closure, A._ButtonStyleState_build_effectiveValue, A._ButtonStyleState_build_resolve, A._ButtonStyleState_build_resolve_closure, A._ButtonStyleState_build_closure, A._ButtonStyleState_build_closure0, A._ButtonStyleState_build_closure1, A._ButtonStyleState_build_closure2, A._ButtonStyleState_build_closure3, A._ButtonStyleState_build_closure4, A._ButtonStyleState_build_closure5, A._ButtonStyleState_build_closure6, A._ButtonStyleState_build_closure7, A._ButtonStyleState_build_closure8, A._ButtonStyleState_build_closure9, A._ButtonStyleState_build_closure10, A._ButtonStyleState_build_closure11, A._ButtonStyleState_build_closure12, A._ButtonStyleState_build_closure13, A._ButtonStyleState_build__closure1, A._ButtonStyleState_build_closure14, A._ButtonStyleState_build__closure0, A._ButtonStyleState_build_closure15, A._ButtonStyleState_build_closure16, A._ButtonStyleState_build_closure17, A._ButtonStyleState_build_closure18, A._ButtonStyleState_build_closure19, A._ButtonStyleState_build_closure20, A._ButtonStyleState_build_closure21, A._ButtonStyleState_build_closure22, A._ButtonStyleState_build_closure23, A._IconButtonDefaultsM3_foregroundColor_closure, A._IconButtonDefaultsM3_overlayColor_closure, A._IconButtonDefaultsM3_mouseCursor_closure, A._FilledIconButtonDefaultsM3_backgroundColor_closure, A._FilledIconButtonDefaultsM3_foregroundColor_closure, A._FilledIconButtonDefaultsM3_overlayColor_closure, A._FilledIconButtonDefaultsM3_mouseCursor_closure, A._FilledTonalIconButtonDefaultsM3_backgroundColor_closure, A._FilledTonalIconButtonDefaultsM3_foregroundColor_closure, A._FilledTonalIconButtonDefaultsM3_overlayColor_closure, A._FilledTonalIconButtonDefaultsM3_mouseCursor_closure, A._OutlinedIconButtonDefaultsM3_backgroundColor_closure, A._OutlinedIconButtonDefaultsM3_foregroundColor_closure, A._OutlinedIconButtonDefaultsM3_overlayColor_closure, A._OutlinedIconButtonDefaultsM3_side_closure, A._OutlinedIconButtonDefaultsM3_mouseCursor_closure, A._InkResponseState_highlightsExist_closure, A._InkResponseState_build_getHighlightColorForType, A._MaterialState_build_closure, A._MaterialInteriorState_forEachTween_closure, A._MaterialInteriorState_forEachTween_closure0, A._MaterialInteriorState_forEachTween_closure1, A._MaterialInteriorState_forEachTween_closure2, A.MaterialStateMixin_updateMaterialState_closure, A._ZoomPageTransition_build_closure1, A._ZoomPageTransition_build_closure2, A._ZoomPageTransition_build_closure, A._ZoomPageTransition_build_closure0, A.PageTransitionsTheme__all_closure, A.ScaffoldMessengerState_hideCurrentSnackBar_closure, A._AnimatedThemeState_forEachTween_closure, A.ThemeData__lerpThemeExtensions_closure0, A.TimePickerThemeData_dayPeriodColor_closure, A._CompoundBorder_scale_closure, A._CompoundBorder_toString_closure, A.InlineSpan_getSpanForPosition_closure, A.InlineSpan_codeUnitAt_closure, A.TextPainter_inlinePlaceholderBoxes_closure, A.TextPainter_getBoxesForSelection_closure, A.TextPainter_computeLineMetrics_closure, A.TextSpan_debugDescribeChildren_closure, A.TextStyle_fontFamilyFallback_closure, A.TextStyle_debugFillProperties_closure, A.RenderFlex_computeDryBaseline_constraintsForChild, A.RelayoutWhenSystemFontsChangeMixin__scheduleSystemFontsUpdate_closure, A.RenderParagraph_markNeedsLayout_closure, A.RenderParagraph_selectionColor_closure, A.TickerFuture_whenCompleteOrCancel_thunk, A.LogicalKeyboardKey_expandSynonyms_closure, A.Actions_maybeFind_closure, A.Actions__maybeFindWithoutDependingOn_closure, A._WidgetsAppState__onGenerateRoute_closure, A._WidgetsAppState_build_closure0, A._WidgetsAppState_build_closure1, A._UbiquitousInheritedElement_notifyClients_closure, A._UbiquitousInheritedElement__recurseChildren_closure, A.DefaultSelectionStyle_merge_closure, A.ParentDataElement__applyParentData_applyParentDataToChild, A.GestureDetector_build_closure0, A.GestureDetector_build_closure2, A.GestureDetector_build_closure4, A.GestureDetector_build_closure6, A.RawGestureDetectorState_debugFillProperties_closure, A._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure, A._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure0, A._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure1, A._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure, A._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure0, A._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure1, A.Hero__allHeroesFor_visitor, A.HeroController_didStopUserGesture_isInvalidFlight, A.HeroController__maybeStartHeroTransition_closure, A.IconTheme_merge_closure, A.ImplicitlyAnimatedWidgetState_initState_closure, A.ImplicitlyAnimatedWidgetState_didUpdateWidget_closure, A.ImplicitlyAnimatedWidgetState__constructTweens_closure, A._AnimatedDefaultTextStyleState_forEachTween_closure, A._AnimatedPhysicalModelState_forEachTween_closure, A._AnimatedPhysicalModelState_forEachTween_closure0, A._AnimatedPhysicalModelState_forEachTween_closure1, A._AnimatedPhysicalModelState_forEachTween_closure2, A._loadAll_closure, A._loadAll_closure0, A._loadAll_closure1, A._LocalizationsState_load_closure, A._LocalizationsState_load_closure0, A.LookupBoundary_findAncestorRenderObjectOfType_closure, A.Route_didPush_closure, A.Route_didAdd_closure, A.Navigator_defaultGenerateInitialRoutes_closure, A._RouteEntry_handleDidPopNext_closure, A._RouteEntry_dispose_closure, A._RouteEntry_isRoutePredicate_closure, A.NavigatorState__handleHistoryChanged_closure, A.NavigatorState_restoreState_closure, A.NavigatorState__forcedDisposeAllRouteEntries_closure, A.NavigatorState__afterNavigation_closure, A.NavigatorState_build_closure, A.OverlayEntry_remove_closure, A._RenderTheater_debugDescribeChildren_closure, A._RootRestorationScopeState__loadRootBucketIfNecessary_closure, A._RouterState__processParsedRouteInformation_closure, A._RouterState__handleRoutePopped_closure, A.BackButtonDispatcher_invokeCallback_notifyNextChild, A.TransitionRoute__updateSecondaryAnimation_jumpOnAnimationEnd, A.TransitionRoute__setSecondaryAnimation_closure, A._ModalScopeStatus_updateShouldNotifyDependent_closure, A._ModalScopeState_build_closure0, A._ModalScopeState_build__closure, A.ModalRoute__maybeDispatchNavigationNotification_closure, A.MultiSelectableSelectionContainerDelegate__scheduleSelectableUpdate_runScheduledTask, A.MultiSelectableSelectionContainerDelegate_getSelectionGeometry_closure, A.MultiSelectableSelectionContainerDelegate_getSelectionGeometry_closure0, A.MultiSelectableSelectionContainerDelegate__flushInactiveSelections_closure, A.MultiSelectableSelectionContainerDelegate__flushInactiveSelections_closure0, A.MultiSelectableSelectionContainerDelegate__handleSelectBoundary_closure, A.MultiSelectableSelectionContainerDelegate__handleSelectBoundary_closure0, A._SemanticsDebuggerState__update_closure, A._SemanticsDebuggerPainter__findDepth_closure, A._SemanticsDebuggerPainter__paint_closure, A.ShortcutMapProperty_valueToString_closure, A._SelectableTextContainerDelegate__flushInactiveSelections_closure, A._SelectableTextContainerDelegate__flushInactiveSelections_closure0, A._SelectableTextContainerDelegate_didChangeSelectables_closure, A._SelectableTextContainerDelegate_didChangeSelectables_closure0, A.WidgetSpan_extractFromInlineSpan_visitSubtree, A.MaterialDynamicColors_background_closure, A.MaterialDynamicColors_background_closure0, A.MaterialDynamicColors_onBackground_closure0, A.MaterialDynamicColors_onBackground_closure1, A.MaterialDynamicColors_onBackground_closure, A.MaterialDynamicColors_surface_closure, A.MaterialDynamicColors_surface_closure0, A.MaterialDynamicColors_surfaceDim_closure, A.MaterialDynamicColors_surfaceDim_closure0, A.MaterialDynamicColors_surfaceBright_closure, A.MaterialDynamicColors_surfaceBright_closure0, A.MaterialDynamicColors_surfaceContainerLowest_closure, A.MaterialDynamicColors_surfaceContainerLowest_closure0, A.MaterialDynamicColors_surfaceContainerLow_closure, A.MaterialDynamicColors_surfaceContainerLow_closure0, A.MaterialDynamicColors_surfaceContainer_closure, A.MaterialDynamicColors_surfaceContainer_closure0, A.MaterialDynamicColors_surfaceContainerHigh_closure, A.MaterialDynamicColors_surfaceContainerHigh_closure0, A.MaterialDynamicColors_surfaceContainerHighest_closure, A.MaterialDynamicColors_surfaceContainerHighest_closure0, A.MaterialDynamicColors_onSurface_closure0, A.MaterialDynamicColors_onSurface_closure1, A.MaterialDynamicColors_onSurface_closure, A.MaterialDynamicColors_surfaceVariant_closure, A.MaterialDynamicColors_surfaceVariant_closure0, A.MaterialDynamicColors_onSurfaceVariant_closure0, A.MaterialDynamicColors_onSurfaceVariant_closure1, A.MaterialDynamicColors_onSurfaceVariant_closure, A.MaterialDynamicColors_inverseSurface_closure, A.MaterialDynamicColors_inverseSurface_closure0, A.MaterialDynamicColors_inverseOnSurface_closure0, A.MaterialDynamicColors_inverseOnSurface_closure1, A.MaterialDynamicColors_inverseOnSurface_closure, A.MaterialDynamicColors_outline_closure0, A.MaterialDynamicColors_outline_closure1, A.MaterialDynamicColors_outline_closure, A.MaterialDynamicColors_outlineVariant_closure0, A.MaterialDynamicColors_outlineVariant_closure1, A.MaterialDynamicColors_outlineVariant_closure, A.MaterialDynamicColors_shadow_closure, A.MaterialDynamicColors_shadow_closure0, A.MaterialDynamicColors_scrim_closure, A.MaterialDynamicColors_scrim_closure0, A.MaterialDynamicColors_primary_closure0, A.MaterialDynamicColors_primary_closure1, A.MaterialDynamicColors_primary_closure, A.MaterialDynamicColors_primary_closure2, A.MaterialDynamicColors_onPrimary_closure0, A.MaterialDynamicColors_onPrimary_closure1, A.MaterialDynamicColors_onPrimary_closure, A.MaterialDynamicColors_primaryContainer_closure0, A.MaterialDynamicColors_primaryContainer_closure1, A.MaterialDynamicColors_primaryContainer_closure, A.MaterialDynamicColors_primaryContainer_closure2, A.MaterialDynamicColors_onPrimaryContainer_closure0, A.MaterialDynamicColors_onPrimaryContainer_closure1, A.MaterialDynamicColors_onPrimaryContainer_closure, A.MaterialDynamicColors_inversePrimary_closure0, A.MaterialDynamicColors_inversePrimary_closure1, A.MaterialDynamicColors_inversePrimary_closure, A.MaterialDynamicColors_secondary_closure0, A.MaterialDynamicColors_secondary_closure1, A.MaterialDynamicColors_secondary_closure, A.MaterialDynamicColors_secondary_closure2, A.MaterialDynamicColors_onSecondary_closure0, A.MaterialDynamicColors_onSecondary_closure1, A.MaterialDynamicColors_onSecondary_closure, A.MaterialDynamicColors_secondaryContainer_closure0, A.MaterialDynamicColors_secondaryContainer_closure1, A.MaterialDynamicColors_secondaryContainer_closure, A.MaterialDynamicColors_secondaryContainer_closure2, A.MaterialDynamicColors_onSecondaryContainer_closure0, A.MaterialDynamicColors_onSecondaryContainer_closure1, A.MaterialDynamicColors_onSecondaryContainer_closure, A.MaterialDynamicColors_tertiary_closure0, A.MaterialDynamicColors_tertiary_closure1, A.MaterialDynamicColors_tertiary_closure, A.MaterialDynamicColors_tertiary_closure2, A.MaterialDynamicColors_onTertiary_closure0, A.MaterialDynamicColors_onTertiary_closure1, A.MaterialDynamicColors_onTertiary_closure, A.MaterialDynamicColors_tertiaryContainer_closure0, A.MaterialDynamicColors_tertiaryContainer_closure1, A.MaterialDynamicColors_tertiaryContainer_closure, A.MaterialDynamicColors_tertiaryContainer_closure2, A.MaterialDynamicColors_onTertiaryContainer_closure0, A.MaterialDynamicColors_onTertiaryContainer_closure1, A.MaterialDynamicColors_onTertiaryContainer_closure, A.MaterialDynamicColors_error_closure0, A.MaterialDynamicColors_error_closure1, A.MaterialDynamicColors_error_closure, A.MaterialDynamicColors_error_closure2, A.MaterialDynamicColors_onError_closure0, A.MaterialDynamicColors_onError_closure1, A.MaterialDynamicColors_onError_closure, A.MaterialDynamicColors_errorContainer_closure0, A.MaterialDynamicColors_errorContainer_closure1, A.MaterialDynamicColors_errorContainer_closure, A.MaterialDynamicColors_errorContainer_closure2, A.MaterialDynamicColors_onErrorContainer_closure0, A.MaterialDynamicColors_onErrorContainer_closure1, A.MaterialDynamicColors_onErrorContainer_closure, A.MaterialDynamicColors_primaryFixed_closure0, A.MaterialDynamicColors_primaryFixed_closure1, A.MaterialDynamicColors_primaryFixed_closure, A.MaterialDynamicColors_primaryFixed_closure2, A.MaterialDynamicColors_primaryFixedDim_closure0, A.MaterialDynamicColors_primaryFixedDim_closure1, A.MaterialDynamicColors_primaryFixedDim_closure, A.MaterialDynamicColors_primaryFixedDim_closure2, A.MaterialDynamicColors_onPrimaryFixed_closure0, A.MaterialDynamicColors_onPrimaryFixed_closure2, A.MaterialDynamicColors_onPrimaryFixed_closure, A.MaterialDynamicColors_onPrimaryFixed_closure1, A.MaterialDynamicColors_onPrimaryFixedVariant_closure0, A.MaterialDynamicColors_onPrimaryFixedVariant_closure2, A.MaterialDynamicColors_onPrimaryFixedVariant_closure, A.MaterialDynamicColors_onPrimaryFixedVariant_closure1, A.MaterialDynamicColors_secondaryFixed_closure0, A.MaterialDynamicColors_secondaryFixed_closure1, A.MaterialDynamicColors_secondaryFixed_closure, A.MaterialDynamicColors_secondaryFixed_closure2, A.MaterialDynamicColors_secondaryFixedDim_closure0, A.MaterialDynamicColors_secondaryFixedDim_closure1, A.MaterialDynamicColors_secondaryFixedDim_closure, A.MaterialDynamicColors_secondaryFixedDim_closure2, A.MaterialDynamicColors_onSecondaryFixed_closure0, A.MaterialDynamicColors_onSecondaryFixed_closure2, A.MaterialDynamicColors_onSecondaryFixed_closure, A.MaterialDynamicColors_onSecondaryFixed_closure1, A.MaterialDynamicColors_onSecondaryFixedVariant_closure0, A.MaterialDynamicColors_onSecondaryFixedVariant_closure2, A.MaterialDynamicColors_onSecondaryFixedVariant_closure, A.MaterialDynamicColors_onSecondaryFixedVariant_closure1, A.MaterialDynamicColors_tertiaryFixed_closure0, A.MaterialDynamicColors_tertiaryFixed_closure1, A.MaterialDynamicColors_tertiaryFixed_closure, A.MaterialDynamicColors_tertiaryFixed_closure2, A.MaterialDynamicColors_tertiaryFixedDim_closure0, A.MaterialDynamicColors_tertiaryFixedDim_closure1, A.MaterialDynamicColors_tertiaryFixedDim_closure, A.MaterialDynamicColors_tertiaryFixedDim_closure2, A.MaterialDynamicColors_onTertiaryFixed_closure0, A.MaterialDynamicColors_onTertiaryFixed_closure2, A.MaterialDynamicColors_onTertiaryFixed_closure, A.MaterialDynamicColors_onTertiaryFixed_closure1, A.MaterialDynamicColors_onTertiaryFixedVariant_closure0, A.MaterialDynamicColors_onTertiaryFixedVariant_closure2, A.MaterialDynamicColors_onTertiaryFixedVariant_closure, A.MaterialDynamicColors_onTertiaryFixedVariant_closure1]);
    _inherit(A.Decoration, A._Decoration_Object_Diagnosticable);
    _inherit(A._CupertinoEdgeShadowDecoration, A.Decoration);
    _inherit(A._CupertinoEdgeShadowPainter, A.BoxPainter);
    _inherit(A.CupertinoTextThemeData, A._CupertinoTextThemeData_Object_Diagnosticable);
    _inheritMany(E.StatelessWidget, [A.CupertinoTheme, A.FloatingActionButton, A.IconButton, A.InkResponse, A._ShapeBorderPaint, A._ZoomPageTransition, A.Theme, A._NullWidget0, A.PositionedDirectional, A.KeyedSubtree, A.Builder, A._NullWidget1, A.DefaultTextEditingShortcuts, A.GestureDetector, A.Icon, A.ModalBarrier, A._ModalBarrierGestureDetector, A.PageStorage, A._NullWidget2, A.Text0, A._RichText, A.Title, A.CounterWidget]);
    _inheritMany(E.InheritedWidget, [A.InheritedTheme, A._ParentInkResponseProvider, A._ScaffoldMessengerScope, A._ActionsScope, A._UbiquitousInheritedWidget, A._LocalizationsScope, A.HeroControllerScope, A._RenderTheaterMarker, A.PrimaryScrollController, A.UnmanagedRestorationScope, A._RouterScope, A.ScrollConfiguration, A.SelectionRegistrarScope, A._ShortcutRegistrarScope, A._EffectiveTickerMode]);
    _inheritMany(A.InheritedTheme, [A.InheritedCupertinoTheme, A._InheritedTheme, A.DefaultSelectionStyle, A.IconTheme, A.DefaultTextStyle]);
    _inherit(A._CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable, A.NoDefaultCupertinoThemeData);
    _inherit(A.CupertinoThemeData, A._CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable);
    _inherit(A._DefaultCupertinoTextThemeData, A.CupertinoTextThemeData);
    _inheritMany(E.DiagnosticsProperty, [A.FlagsSummary, A.ColorProperty, A.IconDataProperty, A.ShortcutMapProperty]);
    _inheritMany(B.Iterable, [A.ObserverList, A.__History_Iterable_ChangeNotifier]);
    _inheritMany(A.GestureArenaMember, [A._GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin, A._DummyTapRecognizer]);
    _inherit(A.GestureRecognizer, A._GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin);
    _inheritMany(A.GestureRecognizer, [A.OneSequenceGestureRecognizer, A.DoubleTapGestureRecognizer]);
    _inheritMany(A.OneSequenceGestureRecognizer, [A.PrimaryPointerGestureRecognizer, A.DragGestureRecognizer]);
    _inheritMany(A.PrimaryPointerGestureRecognizer, [A.LongPressGestureRecognizer, A.BaseTapGestureRecognizer]);
    _inheritMany(A.DragGestureRecognizer, [A.HorizontalDragGestureRecognizer, A.PanGestureRecognizer]);
    _inheritMany(A.BaseTapGestureRecognizer, [A.TapGestureRecognizer, A._AnyTapGestureRecognizer]);
    _inherit(A.ActionIconThemeData, A._ActionIconThemeData_Object_Diagnosticable);
    _inherit(A.MaterialScrollBehavior, A.ScrollBehavior);
    _inherit(A.AppBarTheme, A._AppBarTheme_Object_Diagnosticable);
    _inherit(A.MaterialRectArcTween, A.RectTween);
    _inherit(A.BadgeThemeData, A._BadgeThemeData_Object_Diagnosticable);
    _inherit(A.MaterialBannerThemeData, A._MaterialBannerThemeData_Object_Diagnosticable);
    _inherit(A.BottomAppBarTheme, A._BottomAppBarTheme_Object_Diagnosticable);
    _inherit(A.BottomNavigationBarThemeData, A._BottomNavigationBarThemeData_Object_Diagnosticable);
    _inherit(A.BottomSheetThemeData, A._BottomSheetThemeData_Object_Diagnosticable);
    _inherit(A._RawMaterialButtonState, A.__RawMaterialButtonState_State_MaterialStateMixin);
    _inheritMany(E.SingleChildRenderObjectWidget, [A._InputPadding0, A._InputPadding, A._ChildOverflowBox, A._InkFeatures, A.CustomPaint, A.ClipPath, A.PhysicalModel, A.PhysicalShape, A.FractionalTranslation, A.Padding, A.Align, A.ConstrainedBox, A.Offstage, A.Listener0, A.MouseRegion, A.RepaintBoundary, A.IgnorePointer, A.AbsorbPointer, A.MergeSemantics, A.BlockSemantics, A.ExcludeSemantics, A.ColoredBox, A.DecoratedBox, A._GestureSemantics, A._SemanticsClipper, A._IgnorePointerWithSemantics, A.SnapshotWidget, A.TapRegionSurface, A.FadeTransition]);
    _inheritMany(E.RenderBox, [A._RenderShiftedBox_RenderBox_RenderObjectWithChildMixin, A._RenderFlex_RenderBox_ContainerRenderObjectMixin, A._RenderParagraph_RenderBox_ContainerRenderObjectMixin, A.RenderPerformanceOverlay, A._RenderStack_RenderBox_ContainerRenderObjectMixin, A.__RenderTheater_RenderBox_ContainerRenderObjectMixin]);
    _inherit(A.RenderShiftedBox, A._RenderShiftedBox_RenderBox_RenderObjectWithChildMixin);
    _inheritMany(A.RenderShiftedBox, [A._RenderInputPadding0, A._RenderInputPadding, A.RenderAligningShiftedBox, A.RenderPadding]);
    _inherit(A.ButtonBarThemeData, A._ButtonBarThemeData_Object_Diagnosticable);
    _inherit(A.ButtonStyle, A._ButtonStyle_Object_Diagnosticable);
    _inherit(A._ButtonStyleState, A.__ButtonStyleState_State_TickerProviderStateMixin);
    _inherit(A.WidgetStateMouseCursor, E.MouseCursor0);
    _inheritMany(A.WidgetStateMouseCursor, [A._MouseCursor, A._EffectiveMouseCursor, A._EnabledAndDisabledMouseCursor]);
    _inherit(A.ButtonThemeData, A._ButtonThemeData_Object_Diagnosticable);
    _inherit(A.CardTheme, A._CardTheme_Object_Diagnosticable);
    _inherit(A.CheckboxThemeData, A._CheckboxThemeData_Object_Diagnosticable);
    _inherit(A.ChipThemeData, A._ChipThemeData_Object_Diagnosticable);
    _inherit(A.ColorScheme, A._ColorScheme_Object_Diagnosticable);
    _inheritMany(A.ColorSwatch, [A.MaterialColor, A.MaterialAccentColor]);
    _inherit(A.DataTableThemeData, A._DataTableThemeData_Object_Diagnosticable);
    _inherit(A.DatePickerThemeData, A._DatePickerThemeData_Object_Diagnosticable);
    _inherit(A.DialogTheme, A._DialogTheme_Object_Diagnosticable);
    _inherit(A.DividerThemeData, A._DividerThemeData_Object_Diagnosticable);
    _inherit(A.DrawerThemeData, A._DrawerThemeData_Object_Diagnosticable);
    _inherit(A.DropdownMenuThemeData, A._DropdownMenuThemeData_Object_Diagnosticable);
    _inherit(A.ElevatedButtonThemeData, A._ElevatedButtonThemeData_Object_Diagnosticable);
    _inherit(A.ExpansionTileThemeData, A._ExpansionTileThemeData_Object_Diagnosticable);
    _inherit(A.FilledButtonThemeData, A._FilledButtonThemeData_Object_Diagnosticable);
    _inheritMany(A.RenderAligningShiftedBox, [A._RenderChildOverflowBox, A.RenderPositionedBox]);
    _inherit(A.FloatingActionButtonThemeData, A._FloatingActionButtonThemeData_Object_Diagnosticable);
    _inheritMany(A.FloatingActionButtonThemeData, [A._FABDefaultsM2, A._FABDefaultsM3]);
    _inherit(A._IconButtonM3, A.ButtonStyleButton);
    _inheritMany(A.WidgetStateProperty, [A._IconButtonDefaultForeground, A._IconButtonDefaultOverlay, A.__IconButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable]);
    _inherit(A._IconButtonDefaultMouseCursor, A.__IconButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable);
    _inheritMany(A.ButtonStyle, [A._IconButtonDefaultsM3, A._FilledIconButtonDefaultsM3, A._FilledTonalIconButtonDefaultsM3, A._OutlinedIconButtonDefaultsM3]);
    _inherit(A.IconButtonThemeData, A._IconButtonThemeData_Object_Diagnosticable);
    _inherit(A.InteractiveInkFeature, A.InkFeature);
    _inheritMany(A.InteractiveInkFeature, [A.InkHighlight, A.InkRipple, A.InkSplash]);
    _inheritMany(A.InteractiveInkFeatureFactory, [A._InkRippleFactory, A._InkSplashFactory]);
    _inherit(A._InkResponseState, A.__InkResponseState_State_AutomaticKeepAliveClientMixin);
    _inherit(A.InkWell, A.InkResponse);
    _inherit(A.InputDecorationTheme, A._InputDecorationTheme_Object_Diagnosticable);
    _inherit(A.ListTileThemeData, A._ListTileThemeData_Object_Diagnosticable);
    _inherit(A._MaterialState, A.__MaterialState_State_TickerProviderStateMixin);
    _inheritMany(E.RenderProxyBox, [A._RenderInkFeatures, A.RenderCustomPaint, A.RenderProxyBoxWithHitTestBehavior, A._RenderAnimatedOpacity_RenderProxyBox_RenderAnimatedOpacityMixin, A._RenderCustomClip, A.RenderDecoratedBox, A.RenderFractionalTranslation, A.RenderRepaintBoundary, A.RenderIgnorePointer, A.RenderOffstage, A.RenderAbsorbPointer, A.RenderBlockSemantics, A.RenderMergeSemantics, A.RenderExcludeSemantics, A._RenderSemanticsClipper, A._RenderIgnorePointerWithSemantics, A._RenderSnapshotWidget]);
    _inheritMany(A.ImplicitlyAnimatedWidget, [A._MaterialInterior, A.AnimatedTheme, A.AnimatedDefaultTextStyle, A.AnimatedPhysicalModel]);
    _inherit(A.ImplicitlyAnimatedWidgetState, A._ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin);
    _inherit(A.AnimatedWidgetBaseState, A.ImplicitlyAnimatedWidgetState);
    _inheritMany(A.AnimatedWidgetBaseState, [A._MaterialInteriorState, A._AnimatedThemeState, A._AnimatedDefaultTextStyleState, A._AnimatedPhysicalModelState]);
    _inheritMany(A.CustomPainter, [A._ShapeBorderPainter, A._SemanticsDebuggerPainter]);
    _inherit(A.MenuThemeData, A._MenuThemeData_Object_Diagnosticable);
    _inherit(A.MenuBarThemeData, A.MenuThemeData);
    _inherit(A.MenuButtonThemeData, A._MenuButtonThemeData_Object_Diagnosticable);
    _inherit(A.MenuStyle, A._MenuStyle_Object_Diagnosticable);
    _inherit(A.NavigationBarThemeData, A._NavigationBarThemeData_Object_Diagnosticable);
    _inherit(A.NavigationDrawerThemeData, A._NavigationDrawerThemeData_Object_Diagnosticable);
    _inherit(A.NavigationRailThemeData, A._NavigationRailThemeData_Object_Diagnosticable);
    _inherit(A.OutlinedButtonThemeData, A._OutlinedButtonThemeData_Object_Diagnosticable);
    _inherit(A.Route, A._RoutePlaceholder);
    _inherit(A.OverlayRoute, A.Route);
    _inherit(A.TransitionRoute, A.OverlayRoute);
    _inherit(A._ModalRoute_TransitionRoute_LocalHistoryRoute, A.TransitionRoute);
    _inherit(A.ModalRoute, A._ModalRoute_TransitionRoute_LocalHistoryRoute);
    _inherit(A.PageRoute, A.ModalRoute);
    _inherit(A._MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin, A.PageRoute);
    _inherit(A.MaterialPageRoute, A._MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin);
    _inherit(A._ZoomEnterTransitionState, A.__ZoomEnterTransitionState_State__ZoomTransitionBase);
    _inherit(A._ZoomExitTransitionState, A.__ZoomExitTransitionState_State__ZoomTransitionBase);
    _inheritMany(A.PageTransitionsBuilder, [A.ZoomPageTransitionsBuilder, A.CupertinoPageTransitionsBuilder]);
    _inherit(A.PageTransitionsTheme, A._PageTransitionsTheme_Object_Diagnosticable);
    _inheritMany(E.ChangeNotifier, [A.SnapshotPainter, A.KeepAliveHandle, A.RestorableProperty, A.ScrollController, A.SnapshotController]);
    _inheritMany(A.SnapshotPainter, [A._ZoomEnterTransitionPainter, A._ZoomExitTransitionPainter]);
    _inherit(A.PopupMenuThemeData, A._PopupMenuThemeData_Object_Diagnosticable);
    _inherit(A.ProgressIndicatorThemeData, A._ProgressIndicatorThemeData_Object_Diagnosticable);
    _inherit(A.RadioThemeData, A._RadioThemeData_Object_Diagnosticable);
    _inherit(A.ScaffoldMessengerState, A._ScaffoldMessengerState_State_TickerProviderStateMixin);
    _inherit(A.ScrollbarThemeData, A._ScrollbarThemeData_Object_Diagnosticable);
    _inherit(A.SearchBarThemeData, A._SearchBarThemeData_Object_Diagnosticable);
    _inherit(A.SearchViewThemeData, A._SearchViewThemeData_Object_Diagnosticable);
    _inherit(A.SegmentedButtonThemeData, A._SegmentedButtonThemeData_Object_Diagnosticable);
    _inherit(A.SliderThemeData, A._SliderThemeData_Object_Diagnosticable);
    _inherit(A.SnackBarThemeData, A._SnackBarThemeData_Object_Diagnosticable);
    _inherit(A.SwitchThemeData, A._SwitchThemeData_Object_Diagnosticable);
    _inherit(A.TabBarTheme, A._TabBarTheme_Object_Diagnosticable);
    _inherit(A.TextButtonThemeData, A._TextButtonThemeData_Object_Diagnosticable);
    _inherit(A.TextSelectionThemeData, A._TextSelectionThemeData_Object_Diagnosticable);
    _inherit(A.TextTheme, A._TextTheme_Object_Diagnosticable);
    _inherit(A.ThemeData, A._ThemeData_Object_Diagnosticable);
    _inherit(A.MaterialBasedCupertinoThemeData, A.CupertinoThemeData);
    _inherit(A.VisualDensity, A._VisualDensity_Object_Diagnosticable);
    _inherit(A.TimePickerThemeData, A._TimePickerThemeData_Object_Diagnosticable);
    _inherit(A.ToggleButtonsThemeData, A._ToggleButtonsThemeData_Object_Diagnosticable);
    _inherit(A.TooltipThemeData, A._TooltipThemeData_Object_Diagnosticable);
    _inherit(A.Typography, A._Typography_Object_Diagnosticable);
    _inheritMany(A.AlignmentGeometry, [A.Alignment, A.AlignmentDirectional, A._MixedAlignment]);
    _inheritMany(A.BorderRadiusGeometry, [A.BorderRadius, A._MixedBorderRadius]);
    _inherit(A.BorderSide, A._BorderSide_Object_Diagnosticable);
    _inheritMany(A.ShapeBorder, [A.OutlinedBorder, A._CompoundBorder]);
    _inheritMany(A.OutlinedBorder, [A.CircleBorder, A.RoundedRectangleBorder, A._RoundedRectangleToCircleBorder, A.StadiumBorder, A._StadiumToCircleBorder, A._StadiumToRoundedRectangleBorder]);
    _inherit(A.EdgeInsetsDirectional, E.EdgeInsetsGeometry);
    _inherit(A.InlineSpan, E.DiagnosticableTree);
    _inheritMany(A.TextBoundary, [A.WordBoundary, A._UntilTextBoundary, A.CharacterBoundary, A.LineBoundary, A.ParagraphBoundary, A.DocumentBoundary]);
    _inherit(A.TextSpan, A.InlineSpan);
    _inherit(A.TextStyle, A._TextStyle_Object_Diagnosticable);
    _inherit(A._ContainerBoxParentData_BoxParentData_ContainerParentDataMixin, E.BoxParentData);
    _inherit(A.ContainerBoxParentData, A._ContainerBoxParentData_BoxParentData_ContainerParentDataMixin);
    _inheritMany(A.ContainerBoxParentData, [A.FlexParentData, A.StackParentData]);
    _inherit(A._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, A._RenderFlex_RenderBox_ContainerRenderObjectMixin);
    _inherit(A._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin, A._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(A.RenderFlex, A._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin);
    _inherit(A.PerformanceOverlayLayer, E.Layer0);
    _inherit(A.LeaderLayer, E.ContainerLayer0);
    _inherit(A._TextParentData_ParentData_ContainerParentDataMixin, E.ParentData);
    _inherit(A.TextParentData, A._TextParentData_ParentData_ContainerParentDataMixin);
    _inherit(A._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderInlineChildrenContainerDefaults, A._RenderParagraph_RenderBox_ContainerRenderObjectMixin);
    _inherit(A._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderInlineChildrenContainerDefaults_RelayoutWhenSystemFontsChangeMixin, A._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderInlineChildrenContainerDefaults);
    _inherit(A.RenderParagraph, A._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderInlineChildrenContainerDefaults_RelayoutWhenSystemFontsChangeMixin);
    _inherit(A.__SelectableFragment_Object_Selectable_Diagnosticable, A.__SelectableFragment_Object_Selectable);
    _inherit(A.__SelectableFragment_Object_Selectable_Diagnosticable_ChangeNotifier, A.__SelectableFragment_Object_Selectable_Diagnosticable);
    _inherit(A._SelectableFragment, A.__SelectableFragment_Object_Selectable_Diagnosticable_ChangeNotifier);
    _inherit(A.RenderAnimatedOpacity, A._RenderAnimatedOpacity_RenderProxyBox_RenderAnimatedOpacityMixin);
    _inherit(A.ShapeBorderClipper, A.CustomClipper);
    _inheritMany(A._RenderCustomClip, [A.RenderClipPath, A._RenderPhysicalModelBase]);
    _inheritMany(A._RenderPhysicalModelBase, [A.RenderPhysicalModel, A.RenderPhysicalShape]);
    _inheritMany(A.RenderProxyBoxWithHitTestBehavior, [A.RenderPointerListener, A.RenderMouseRegion, A.RenderSemanticsGestureHandler, A._RenderColoredBox, A.RenderTapRegionSurface]);
    _inheritMany(A.SelectionEvent, [A.ClearSelectionEvent, A.SelectParagraphSelectionEvent, A.SelectionEdgeUpdateEvent]);
    _inherit(A.SelectionPoint, A._SelectionPoint_Object_Diagnosticable);
    _inherit(A._RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, A._RenderStack_RenderBox_ContainerRenderObjectMixin);
    _inherit(A.RenderStack, A._RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(A.SemanticsSortKey, A._SemanticsSortKey_Object_Diagnosticable);
    _inherit(A.OrdinalSortKey, A.SemanticsSortKey);
    _inheritMany(A.SemanticsEvent, [A.LongPressSemanticsEvent, A.TapSemanticEvent, A.FocusSemanticEvent]);
    _inherit(A.Intent, A._Intent_Object_Diagnosticable);
    _inherit(A.Action, A._Action_Object_Diagnosticable);
    _inheritMany(A.Action, [A.ContextAction, A.CallbackAction, A.VoidCallbackAction, A.DoNothingAction, A.DismissAction, A._ContextActionToActionAdapter, A.RequestFocusAction, A.NextFocusAction, A.PreviousFocusAction, A.DirectionalFocusAction]);
    _inheritMany(A.Intent, [A.ActivateIntent, A.ButtonActivateIntent, A.DismissIntent, A.PrioritizedIntents, A.NextFocusIntent, A.PreviousFocusIntent, A.ScrollIntent, A.DoNothingAndStopPropagationTextIntent, A.DirectionalTextEditingIntent, A.SelectAllTextIntent, A.CopySelectionTextIntent, A.PasteTextIntent, A.RedoTextIntent, A.UndoTextIntent, A.TransposeCharactersIntent]);
    _inheritMany(A.ContextAction, [A.PrioritizedAction, A.__OverridableAction_ContextAction__OverridableActionMixin, A.__OverridableContextAction_ContextAction__OverridableActionMixin, A.ScrollAction]);
    _inherit(A._OverridableAction, A.__OverridableAction_ContextAction__OverridableActionMixin);
    _inherit(A._OverridableContextAction, A.__OverridableContextAction_ContextAction__OverridableActionMixin);
    _inherit(A._WidgetsAppState, A.__WidgetsAppState_State_WidgetsBindingObserver);
    _inheritMany(A.Notification, [A.KeepAliveNotification, A.NavigationNotification]);
    _inherit(A._UbiquitousInheritedElement, E.InheritedElement);
    _inherit(A.Directionality, A._UbiquitousInheritedWidget);
    _inherit(A.Center, A.Align);
    _inherit(A._OffstageElement, E.SingleChildRenderObjectElement);
    _inherit(A.MultiChildRenderObjectWidget, E.RenderObjectWidget);
    _inheritMany(A.MultiChildRenderObjectWidget, [A.Stack, A.Flex, A.RichText, A._Theater]);
    _inheritMany(E.ProxyWidget, [A.ParentDataWidget, A.NotificationListener]);
    _inherit(A.Positioned, A.ParentDataWidget);
    _inheritMany(A.Flex, [A.Row, A.Column]);
    _inheritMany(E.GlobalKey, [A.LabeledGlobalKey, A.GlobalObjectKey]);
    _inheritMany(E.ProxyElement0, [A.ParentDataElement, A.__NotificationElement_ProxyElement_NotifiableElementMixin]);
    _inherit(A.MultiChildRenderObjectElement, E.RenderObjectElement);
    _inheritMany(A.GestureRecognizerFactory, [A.GestureRecognizerFactoryWithHandlers, A._AnyTapGestureRecognizerFactory]);
    _inherit(A._DefaultSemanticsGestureDelegate, A.SemanticsGestureDelegate);
    _inherit(A.HeroController, A.NavigatorObserver);
    _inheritMany(A.AnimatedWidget, [A.AnimatedModalBarrier, A.SlideTransition, A.DecoratedBoxTransition, A.ListenableBuilder]);
    _inherit(A.DefaultTransitionDelegate, A.TransitionDelegate);
    _inherit(A._RouteEntry, A.RouteTransitionRecord);
    _inheritMany(A._NavigatorObservation, [A._NavigatorPushObservation, A._NavigatorPopObservation, A._NavigatorRemoveObservation, A._NavigatorReplaceObservation]);
    _inherit(A._History, A.__History_Iterable_ChangeNotifier);
    _inherit(A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin, A._NavigatorState_State_TickerProviderStateMixin);
    _inherit(A.NavigatorState, A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin);
    _inheritMany(A._RestorationInformation, [A._NamedRestorationInformation, A._AnonymousRestorationInformation]);
    _inheritMany(A.RestorableProperty, [A._HistoryProperty, A.RestorableValue]);
    _inherit(A._NotificationElement, A.__NotificationElement_ProxyElement_NotifiableElementMixin);
    _inherit(A.OverlayState, A._OverlayState_State_TickerProviderStateMixin);
    _inherit(A._TheaterElement, A.MultiChildRenderObjectElement);
    _inherit(A._TheaterParentData, A.StackParentData);
    _inherit(A.__RenderTheater_RenderBox_ContainerRenderObjectMixin__RenderTheaterMixin, A.__RenderTheater_RenderBox_ContainerRenderObjectMixin);
    _inherit(A._RenderTheater, A.__RenderTheater_RenderBox_ContainerRenderObjectMixin__RenderTheaterMixin);
    _inherit(A.PerformanceOverlay, E.LeafRenderObjectWidget);
    _inherit(A._RestorationScopeState, A.__RestorationScopeState_State_RestorationMixin);
    _inheritMany(A.RestorableValue, [A._RestorablePrimitiveValueN, A._RestorableRouteInformation]);
    _inherit(A._RestorablePrimitiveValue, A._RestorablePrimitiveValueN);
    _inherit(A.RestorableNum, A._RestorablePrimitiveValue);
    _inherit(A._RouterState, A.__RouterState_State_RestorationMixin);
    _inherit(A.BackButtonDispatcher, A._CallbackHookProvider);
    _inherit(A._RootBackButtonDispatcher_BackButtonDispatcher_WidgetsBindingObserver, A.BackButtonDispatcher);
    _inherit(A.RootBackButtonDispatcher, A._RootBackButtonDispatcher_BackButtonDispatcher_WidgetsBindingObserver);
    _inherit(A.RouteInformationProvider, A.ValueListenable);
    _inherit(A._PlatformRouteInformationProvider_RouteInformationProvider_WidgetsBindingObserver, A.RouteInformationProvider);
    _inherit(A._PlatformRouteInformationProvider_RouteInformationProvider_WidgetsBindingObserver_ChangeNotifier, A._PlatformRouteInformationProvider_RouteInformationProvider_WidgetsBindingObserver);
    _inherit(A.PlatformRouteInformationProvider, A._PlatformRouteInformationProvider_RouteInformationProvider_WidgetsBindingObserver_ChangeNotifier);
    _inherit(A._DismissModalAction, A.DismissAction);
    _inheritMany(E.InheritedModel, [A._ModalScopeStatus, A._SharedAppModel]);
    _inherit(A._MultiSelectableSelectionContainerDelegate_SelectionContainerDelegate_ChangeNotifier, A.SelectionContainerDelegate);
    _inherit(A.MultiSelectableSelectionContainerDelegate, A._MultiSelectableSelectionContainerDelegate_SelectionContainerDelegate_ChangeNotifier);
    _inherit(A.__SelectionContainerState_State_Selectable_SelectionRegistrant, A.__SelectionContainerState_State_Selectable);
    _inherit(A._SelectionContainerState, A.__SelectionContainerState_State_Selectable_SelectionRegistrant);
    _inherit(A._SemanticsDebuggerState, A.__SemanticsDebuggerState_State_WidgetsBindingObserver);
    _inherit(A._SingleActivator_Object_Diagnosticable_MenuSerializableShortcut, A._SingleActivator_Object_Diagnosticable);
    _inherit(A.SingleActivator, A._SingleActivator_Object_Diagnosticable_MenuSerializableShortcut);
    _inherit(A._ActivatorIntentPair, A.__ActivatorIntentPair_Object_Diagnosticable);
    _inherit(A._ShortcutManager_Object_Diagnosticable_ChangeNotifier, A._ShortcutManager_Object_Diagnosticable);
    _inherit(A.ShortcutManager, A._ShortcutManager_Object_Diagnosticable_ChangeNotifier);
    _inherit(A.ShortcutRegistry, A._ShortcutRegistry_Object_ChangeNotifier);
    _inherit(A._SelectableTextContainerDelegate, A.MultiSelectableSelectionContainerDelegate);
    _inheritMany(A.DirectionalTextEditingIntent, [A.DeleteCharacterIntent, A.DeleteToNextWordBoundaryIntent, A.DeleteToLineBreakIntent, A.DirectionalCaretMovementIntent, A.ScrollToDocumentBoundaryIntent]);
    _inheritMany(A.DirectionalCaretMovementIntent, [A.ExtendSelectionByCharacterIntent, A.ExtendSelectionToNextWordBoundaryIntent, A.ExtendSelectionToNextWordBoundaryOrCaretLocationIntent, A.ExpandSelectionToDocumentBoundaryIntent, A.ExpandSelectionToLineBreakIntent, A.ExtendSelectionToLineBreakIntent, A.ExtendSelectionVerticallyToAdjacentLineIntent, A.ExtendSelectionVerticallyToAdjacentPageIntent, A.ExtendSelectionToNextParagraphBoundaryIntent, A.ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent, A.ExtendSelectionToDocumentBoundaryIntent]);
    _inherit(A._WidgetTicker, A.Ticker);
    _inherit(A.AnimatedBuilder, A.ListenableBuilder);
    _inherit(A._WidgetStateColor, A.WidgetStateColor);
    _inherit(A.WidgetStatesController, E.ValueNotifier);
    _inheritMany(A.DynamicScheme, [A.SchemeContent, A.SchemeExpressive, A.SchemeFidelity, A.SchemeFruitSalad, A.SchemeMonochrome, A.SchemeNeutral, A.SchemeRainbow, A.SchemeTonalSpot, A.SchemeVibrant]);
    _mixinHard(A._AnimationController_Animation_AnimationEagerListenerMixin, A.AnimationEagerListenerMixin);
    _mixinHard(A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin, A.AnimationLocalListenersMixin);
    _mixinHard(A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, A.AnimationLocalStatusListenersMixin);
    _mixinHard(A._AnimationStyle_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._CurvedAnimation_Animation_AnimationWithParentMixin, A.AnimationWithParentMixin);
    _mixinHard(A._ProxyAnimation_Animation_AnimationLazyListenerMixin, A.AnimationLazyListenerMixin);
    _mixinHard(A._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin, A.AnimationLocalListenersMixin);
    _mixinHard(A._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, A.AnimationLocalStatusListenersMixin);
    _mixinHard(A._ReverseAnimation_Animation_AnimationLazyListenerMixin, A.AnimationLazyListenerMixin);
    _mixinHard(A._ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin, A.AnimationLocalStatusListenersMixin);
    _mixinHard(A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin, A.AnimationEagerListenerMixin);
    _mixinHard(A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin, A.AnimationLocalListenersMixin);
    _mixinHard(A._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, A.AnimationLocalStatusListenersMixin);
    _mixinHard(A.__AnimatedEvaluation_Animation_AnimationWithParentMixin, A.AnimationWithParentMixin);
    _mixinHard(A._CupertinoDynamicColor_Color_Diagnosticable, E.Diagnosticable);
    _mixin(A._CupertinoIconThemeData_IconThemeData_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._CupertinoTextThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin, E.DiagnosticableTreeMixin);
    _mixinHard(A._ActionIconThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._AppBarTheme_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._BadgeThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._MaterialBannerThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._BottomAppBarTheme_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._BottomNavigationBarThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._BottomSheetThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A.__RawMaterialButtonState_State_MaterialStateMixin, A.MaterialStateMixin);
    _mixinHard(A._ButtonBarThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._ButtonStyle_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A.__ButtonStyleState_State_TickerProviderStateMixin, A.TickerProviderStateMixin);
    _mixinHard(A._ButtonThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._CardTheme_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._CheckboxThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._ChipThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._ColorScheme_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._DataTableThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._DatePickerThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._DialogTheme_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._DividerThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._DrawerThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._DropdownMenuThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._ElevatedButtonThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._ExpansionTileThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._FilledButtonThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._FloatingActionButtonThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A.__IconButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._IconButtonThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A.__InkResponseState_State_AutomaticKeepAliveClientMixin, A.AutomaticKeepAliveClientMixin);
    _mixinHard(A._InputDecorationTheme_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._ListTileThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A.__MaterialState_State_TickerProviderStateMixin, A.TickerProviderStateMixin);
    _mixinHard(A._MenuButtonThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._MenuStyle_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._MenuThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._NavigationBarThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._NavigationDrawerThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._NavigationRailThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._OutlinedButtonThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin, A.MaterialRouteTransitionMixin);
    _mixinHard(A._PageTransitionsTheme_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A.__ZoomEnterTransitionState_State__ZoomTransitionBase, A._ZoomTransitionBase);
    _mixinHard(A.__ZoomExitTransitionState_State__ZoomTransitionBase, A._ZoomTransitionBase);
    _mixinHard(A._PopupMenuThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._ProgressIndicatorThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._RadioThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._ScaffoldMessengerState_State_TickerProviderStateMixin, A.TickerProviderStateMixin);
    _mixinHard(A._ScrollbarThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._SearchBarThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._SearchViewThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._SegmentedButtonThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._SliderThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._SnackBarThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._SwitchThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._TabBarTheme_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._TextButtonThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._TextSelectionThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._TextTheme_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._ThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._VisualDensity_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._TimePickerThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._ToggleButtonsThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._TooltipThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._Typography_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._BorderSide_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._Decoration_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._TextStyle_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._ContainerBoxParentData_BoxParentData_ContainerParentDataMixin, A.ContainerParentDataMixin);
    _mixinHard(A._RenderFlex_RenderBox_ContainerRenderObjectMixin, A.ContainerRenderObjectMixin);
    _mixinHard(A._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, A.RenderBoxContainerDefaultsMixin);
    _mixinHard(A._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin, A.DebugOverflowIndicatorMixin);
    _mixinHard(A._RenderParagraph_RenderBox_ContainerRenderObjectMixin, A.ContainerRenderObjectMixin);
    _mixinHard(A._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderInlineChildrenContainerDefaults, A.RenderInlineChildrenContainerDefaults);
    _mixinHard(A._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderInlineChildrenContainerDefaults_RelayoutWhenSystemFontsChangeMixin, A.RelayoutWhenSystemFontsChangeMixin);
    _mixinHard(A._TextParentData_ParentData_ContainerParentDataMixin, A.ContainerParentDataMixin);
    _mixinHard(A.__SelectableFragment_Object_Selectable, A.Selectable);
    _mixinHard(A.__SelectableFragment_Object_Selectable_Diagnosticable, E.Diagnosticable);
    _mixinHard(A.__SelectableFragment_Object_Selectable_Diagnosticable_ChangeNotifier, E.ChangeNotifier);
    _mixinHard(A._RenderAnimatedOpacity_RenderProxyBox_RenderAnimatedOpacityMixin, A.RenderAnimatedOpacityMixin);
    _mixinHard(A._SelectionPoint_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._RenderShiftedBox_RenderBox_RenderObjectWithChildMixin, E.RenderObjectWithChildMixin);
    _mixinHard(A._RenderStack_RenderBox_ContainerRenderObjectMixin, A.ContainerRenderObjectMixin);
    _mixinHard(A._RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, A.RenderBoxContainerDefaultsMixin);
    _mixinHard(A._SemanticsSortKey_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._Action_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._Intent_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A.__OverridableAction_ContextAction__OverridableActionMixin, A._OverridableActionMixin);
    _mixinHard(A.__OverridableContextAction_ContextAction__OverridableActionMixin, A._OverridableActionMixin);
    _mixinHard(A.__WidgetsAppState_State_WidgetsBindingObserver, E.WidgetsBindingObserver);
    _mixinHard(A._IconThemeData_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin, A.SingleTickerProviderStateMixin);
    _mixinHard(A._NavigatorState_State_TickerProviderStateMixin, A.TickerProviderStateMixin);
    _mixinHard(A._NavigatorState_State_TickerProviderStateMixin_RestorationMixin, A.RestorationMixin);
    _mixinHard(A.__History_Iterable_ChangeNotifier, E.ChangeNotifier);
    _mixinHard(A.__NotificationElement_ProxyElement_NotifiableElementMixin, A.NotifiableElementMixin);
    _mixinHard(A._OverlayState_State_TickerProviderStateMixin, A.TickerProviderStateMixin);
    _mixinHard(A.__RenderTheater_RenderBox_ContainerRenderObjectMixin, A.ContainerRenderObjectMixin);
    _mixinHard(A.__RenderTheater_RenderBox_ContainerRenderObjectMixin__RenderTheaterMixin, A._RenderTheaterMixin);
    _mixinHard(A.__RestorationScopeState_State_RestorationMixin, A.RestorationMixin);
    _mixinHard(A._PlatformRouteInformationProvider_RouteInformationProvider_WidgetsBindingObserver, E.WidgetsBindingObserver);
    _mixinHard(A._PlatformRouteInformationProvider_RouteInformationProvider_WidgetsBindingObserver_ChangeNotifier, E.ChangeNotifier);
    _mixinHard(A._RootBackButtonDispatcher_BackButtonDispatcher_WidgetsBindingObserver, E.WidgetsBindingObserver);
    _mixinHard(A.__RouterState_State_RestorationMixin, A.RestorationMixin);
    _mixinHard(A._ModalRoute_TransitionRoute_LocalHistoryRoute, A.LocalHistoryRoute);
    _mixinHard(A._MultiSelectableSelectionContainerDelegate_SelectionContainerDelegate_ChangeNotifier, E.ChangeNotifier);
    _mixinHard(A.__SelectionContainerState_State_Selectable, A.Selectable);
    _mixinHard(A.__SelectionContainerState_State_Selectable_SelectionRegistrant, A.SelectionRegistrant);
    _mixinHard(A.__SemanticsDebuggerState_State_WidgetsBindingObserver, E.WidgetsBindingObserver);
    _mixinHard(A._ShortcutManager_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._ShortcutManager_Object_Diagnosticable_ChangeNotifier, E.ChangeNotifier);
    _mixinHard(A._ShortcutRegistry_Object_ChangeNotifier, E.ChangeNotifier);
    _mixinHard(A._SingleActivator_Object_Diagnosticable, E.Diagnosticable);
    _mixinHard(A._SingleActivator_Object_Diagnosticable_MenuSerializableShortcut, A.MenuSerializableShortcut);
    _mixinHard(A.__ActivatorIntentPair_Object_Diagnosticable, E.Diagnosticable);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"_WeakReferenceWrapper":{"WeakReference":["1"]},"_GeneratorIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"HideEfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"_JSRandom":{"Random":[]},"_Random":{"Random":[]},"SpellOutStringAttribute":{"StringAttribute":[]},"LocaleStringAttribute":{"StringAttribute":[]},"StringCharacterRange":{"CharacterRange":[],"Iterator":["String"]},"DefaultEquality":{"Equality":["1"]},"IterableEquality":{"Equality":["Iterable<1>"]},"ListEquality":{"Equality":["List<1>"]},"_UnorderedEquality":{"Equality":["2"]},"UnorderedIterableEquality":{"_UnorderedEquality":["1","Iterable<1>"],"Equality":["Iterable<1>"],"_UnorderedEquality.E":"1","_UnorderedEquality.T":"Iterable<1>"},"SetEquality":{"_UnorderedEquality":["1","Set<1>"],"Equality":["Set<1>"],"_UnorderedEquality.E":"1","_UnorderedEquality.T":"Set<1>"},"MapEquality":{"Equality":["Map<1,2>"]},"DeepCollectionEquality":{"Equality":["@"]},"AnimationStatus":{"_Enum":[],"Enum":[]},"Animation":{"ValueListenable":["1"],"Listenable":[]},"_AnimationDirection":{"_Enum":[],"Enum":[]},"AnimationBehavior":{"_Enum":[],"Enum":[]},"AnimationController":{"_AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin":[],"_AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin":[],"_AnimationController_Animation_AnimationEagerListenerMixin":[],"Animation":["double"],"ValueListenable":["double"],"Listenable":[],"AnimationEagerListenerMixin":[],"AnimationLocalListenersMixin":[],"AnimationLocalStatusListenersMixin":[]},"_InterpolationSimulation":{"Simulation":[]},"_AnimationController_Animation_AnimationEagerListenerMixin":{"Animation":["double"],"ValueListenable":["double"],"Listenable":[],"AnimationEagerListenerMixin":[]},"_AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin":{"_AnimationController_Animation_AnimationEagerListenerMixin":[],"Animation":["double"],"ValueListenable":["double"],"Listenable":[],"AnimationEagerListenerMixin":[],"AnimationLocalListenersMixin":[]},"_AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin":{"_AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin":[],"_AnimationController_Animation_AnimationEagerListenerMixin":[],"Animation":["double"],"ValueListenable":["double"],"Listenable":[],"AnimationEagerListenerMixin":[],"AnimationLocalListenersMixin":[],"AnimationLocalStatusListenersMixin":[]},"AnimationStyle":{"_AnimationStyle_Object_Diagnosticable":[],"Diagnosticable":[]},"_AnimationStyle_Object_Diagnosticable":{"Diagnosticable":[]},"_AlwaysCompleteAnimation":{"Animation":["double"],"ValueListenable":["double"],"Listenable":[]},"_AlwaysDismissedAnimation":{"Animation":["double"],"ValueListenable":["double"],"Listenable":[]},"ProxyAnimation":{"_ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin":[],"_ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin":[],"_ProxyAnimation_Animation_AnimationLazyListenerMixin":[],"Animation":["double"],"ValueListenable":["double"],"Listenable":[],"AnimationLazyListenerMixin":[],"AnimationLocalListenersMixin":[],"AnimationLocalStatusListenersMixin":[]},"ReverseAnimation":{"_ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin":[],"_ReverseAnimation_Animation_AnimationLazyListenerMixin":[],"Animation":["double"],"ValueListenable":["double"],"Listenable":[],"AnimationLazyListenerMixin":[],"AnimationLocalStatusListenersMixin":[]},"CurvedAnimation":{"_CurvedAnimation_Animation_AnimationWithParentMixin":[],"Animation":["double"],"ValueListenable":["double"],"Listenable":[],"AnimationWithParentMixin":["double"]},"_TrainHoppingMode":{"_Enum":[],"Enum":[]},"TrainHoppingAnimation":{"_TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin":[],"_TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin":[],"_TrainHoppingAnimation_Animation_AnimationEagerListenerMixin":[],"Animation":["double"],"ValueListenable":["double"],"Listenable":[],"AnimationEagerListenerMixin":[],"AnimationLocalListenersMixin":[],"AnimationLocalStatusListenersMixin":[]},"_CurvedAnimation_Animation_AnimationWithParentMixin":{"Animation":["double"],"ValueListenable":["double"],"Listenable":[],"AnimationWithParentMixin":["double"]},"_ProxyAnimation_Animation_AnimationLazyListenerMixin":{"Animation":["double"],"ValueListenable":["double"],"Listenable":[],"AnimationLazyListenerMixin":[]},"_ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin":{"_ProxyAnimation_Animation_AnimationLazyListenerMixin":[],"Animation":["double"],"ValueListenable":["double"],"Listenable":[],"AnimationLazyListenerMixin":[],"AnimationLocalListenersMixin":[]},"_ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin":{"_ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin":[],"_ProxyAnimation_Animation_AnimationLazyListenerMixin":[],"Animation":["double"],"ValueListenable":["double"],"Listenable":[],"AnimationLazyListenerMixin":[],"AnimationLocalListenersMixin":[],"AnimationLocalStatusListenersMixin":[]},"_ReverseAnimation_Animation_AnimationLazyListenerMixin":{"Animation":["double"],"ValueListenable":["double"],"Listenable":[],"AnimationLazyListenerMixin":[]},"_ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin":{"_ReverseAnimation_Animation_AnimationLazyListenerMixin":[],"Animation":["double"],"ValueListenable":["double"],"Listenable":[],"AnimationLazyListenerMixin":[],"AnimationLocalStatusListenersMixin":[]},"_TrainHoppingAnimation_Animation_AnimationEagerListenerMixin":{"Animation":["double"],"ValueListenable":["double"],"Listenable":[],"AnimationEagerListenerMixin":[]},"_TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin":{"_TrainHoppingAnimation_Animation_AnimationEagerListenerMixin":[],"Animation":["double"],"ValueListenable":["double"],"Listenable":[],"AnimationEagerListenerMixin":[],"AnimationLocalListenersMixin":[]},"_TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin":{"_TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin":[],"_TrainHoppingAnimation_Animation_AnimationEagerListenerMixin":[],"Animation":["double"],"ValueListenable":["double"],"Listenable":[],"AnimationEagerListenerMixin":[],"AnimationLocalListenersMixin":[],"AnimationLocalStatusListenersMixin":[]},"_Linear":{"Curve":[],"ParametricCurve":["double"]},"Interval":{"Curve":[],"ParametricCurve":["double"]},"ThreePointCubic":{"Curve":[],"ParametricCurve":["double"]},"_AnimatedEvaluation":{"__AnimatedEvaluation_Animation_AnimationWithParentMixin":["1"],"Animation":["1"],"ValueListenable":["1"],"Listenable":[],"AnimationWithParentMixin":["double"]},"_ChainedEvaluation":{"Animatable":["1"],"Animatable.T":"1"},"Tween":{"Animatable":["1"],"Tween.T":"1","Animatable.T":"1"},"ReverseTween":{"Tween":["1"],"Animatable":["1"],"Tween.T":"1","Animatable.T":"1"},"ColorTween":{"Tween":["Color?"],"Animatable":["Color?"],"Tween.T":"Color?","Animatable.T":"Color?"},"RectTween":{"Tween":["Rect?"],"Animatable":["Rect?"],"Tween.T":"Rect?","Animatable.T":"Rect?"},"IntTween":{"Tween":["int"],"Animatable":["int"],"Tween.T":"int","Animatable.T":"int"},"ConstantTween":{"Tween":["1"],"Animatable":["1"],"Tween.T":"1","Animatable.T":"1"},"CurveTween":{"Animatable":["double"],"Animatable.T":"double"},"__AnimatedEvaluation_Animation_AnimationWithParentMixin":{"Animation":["1"],"ValueListenable":["1"],"Listenable":[],"AnimationWithParentMixin":["double"]},"TweenSequence":{"Animatable":["1"],"Animatable.T":"1"},"CupertinoDynamicColor":{"_CupertinoDynamicColor_Color_Diagnosticable":[],"Color":[],"Diagnosticable":[]},"_CupertinoDynamicColor_Color_Diagnosticable":{"Color":[],"Diagnosticable":[]},"CupertinoIconThemeData":{"_CupertinoIconThemeData_IconThemeData_Diagnosticable":[],"IconThemeData":[],"_IconThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_CupertinoIconThemeData_IconThemeData_Diagnosticable":{"IconThemeData":[],"_IconThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"CupertinoUserInterfaceLevelData":{"_Enum":[],"Enum":[]},"CupertinoUserInterfaceLevel":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_CupertinoLocalizationsDelegate":{"LocalizationsDelegate":["CupertinoLocalizations"],"LocalizationsDelegate.T":"CupertinoLocalizations"},"DefaultCupertinoLocalizations":{"CupertinoLocalizations":[]},"CupertinoRouteTransitionMixin":{"PageRoute":["1"],"ModalRoute":["1"],"_ModalRoute_TransitionRoute_LocalHistoryRoute":["1"],"TransitionRoute":["1"],"OverlayRoute":["1"],"LocalHistoryRoute":["1"],"Route":["1"],"_RoutePlaceholder":[],"PredictiveBackRoute":[]},"CupertinoPageTransition":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_CupertinoPageTransitionState":{"State0":["CupertinoPageTransition"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"CupertinoPageTransition"},"CupertinoFullscreenDialogTransition":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_CupertinoFullscreenDialogTransitionState":{"State0":["CupertinoFullscreenDialogTransition"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"CupertinoFullscreenDialogTransition"},"_CupertinoBackGestureDetector":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_CupertinoBackGestureDetectorState":{"State0":["_CupertinoBackGestureDetector<1>"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"_CupertinoBackGestureDetector<1>"},"_CupertinoEdgeShadowDecoration":{"Decoration":[],"_Decoration_Object_Diagnosticable":[],"Diagnosticable":[]},"_CupertinoEdgeShadowPainter":{"BoxPainter":[]},"CupertinoTextThemeData":{"_CupertinoTextThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_CupertinoTextThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"CupertinoTheme":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"InheritedCupertinoTheme":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"CupertinoThemeData":{"_CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable":[],"NoDefaultCupertinoThemeData":[],"Diagnosticable":[]},"_DefaultCupertinoTextThemeData":{"CupertinoTextThemeData":[],"_CupertinoTextThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable":{"NoDefaultCupertinoThemeData":[],"Diagnosticable":[]},"_MergingListenable":{"Listenable":[]},"ValueListenable":{"Listenable":[]},"FlagsSummary":{"DiagnosticsProperty":["Map<String,1?>"],"DiagnosticsNode":[],"DiagnosticsProperty.T":"Map<String,1?>"},"ObserverList":{"Iterable":["1"],"Iterable.E":"1"},"LongPressGestureRecognizer":{"PrimaryPointerGestureRecognizer":[],"OneSequenceGestureRecognizer":[],"GestureRecognizer":[],"_GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"GestureArenaMember":[],"Diagnosticable":[]},"_DragState":{"_Enum":[],"Enum":[]},"DragGestureRecognizer":{"OneSequenceGestureRecognizer":[],"GestureRecognizer":[],"_GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"GestureArenaMember":[],"Diagnosticable":[]},"VerticalDragGestureRecognizer":{"DragGestureRecognizer":[],"OneSequenceGestureRecognizer":[],"GestureRecognizer":[],"_GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"GestureArenaMember":[],"Diagnosticable":[]},"HorizontalDragGestureRecognizer":{"DragGestureRecognizer":[],"OneSequenceGestureRecognizer":[],"GestureRecognizer":[],"_GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"GestureArenaMember":[],"Diagnosticable":[]},"PanGestureRecognizer":{"DragGestureRecognizer":[],"OneSequenceGestureRecognizer":[],"GestureRecognizer":[],"_GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"GestureArenaMember":[],"Diagnosticable":[]},"_DragDirection":{"_Enum":[],"Enum":[]},"DoubleTapGestureRecognizer":{"GestureRecognizer":[],"_GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"GestureArenaMember":[],"Diagnosticable":[]},"DragStartBehavior":{"_Enum":[],"Enum":[]},"MultitouchDragStrategy":{"_Enum":[],"Enum":[]},"GestureRecognizer":{"_GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"GestureArenaMember":[],"Diagnosticable":[]},"OneSequenceGestureRecognizer":{"GestureRecognizer":[],"_GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"GestureArenaMember":[],"Diagnosticable":[]},"GestureRecognizerState":{"_Enum":[],"Enum":[]},"PrimaryPointerGestureRecognizer":{"OneSequenceGestureRecognizer":[],"GestureRecognizer":[],"_GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"GestureArenaMember":[],"Diagnosticable":[]},"_GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin":{"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"GestureArenaMember":[],"Diagnosticable":[]},"BaseTapGestureRecognizer":{"PrimaryPointerGestureRecognizer":[],"OneSequenceGestureRecognizer":[],"GestureRecognizer":[],"_GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"GestureArenaMember":[],"Diagnosticable":[]},"TapGestureRecognizer":{"BaseTapGestureRecognizer":[],"PrimaryPointerGestureRecognizer":[],"OneSequenceGestureRecognizer":[],"GestureRecognizer":[],"_GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"GestureArenaMember":[],"Diagnosticable":[]},"ActionIconThemeData":{"_ActionIconThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_ActionIconThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"ThemeMode":{"_Enum":[],"Enum":[]},"MaterialApp":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"MaterialScrollBehavior":{"ScrollBehavior":[]},"_MaterialAppState":{"State0":["MaterialApp"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"MaterialApp"},"AppBarTheme":{"_AppBarTheme_Object_Diagnosticable":[],"Diagnosticable":[]},"_AppBarTheme_Object_Diagnosticable":{"Diagnosticable":[]},"MaterialPointArcTween":{"Tween":["Offset"],"Animatable":["Offset"],"Tween.T":"Offset","Animatable.T":"Offset"},"_CornerId":{"_Enum":[],"Enum":[]},"MaterialRectArcTween":{"RectTween":[],"Tween":["Rect?"],"Animatable":["Rect?"],"Tween.T":"Rect?","Animatable.T":"Rect?"},"BadgeThemeData":{"_BadgeThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_BadgeThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"MaterialBannerThemeData":{"_MaterialBannerThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_MaterialBannerThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"BottomAppBarTheme":{"_BottomAppBarTheme_Object_Diagnosticable":[],"Diagnosticable":[]},"_BottomAppBarTheme_Object_Diagnosticable":{"Diagnosticable":[]},"BottomNavigationBarThemeData":{"_BottomNavigationBarThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_BottomNavigationBarThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"BottomSheetThemeData":{"_BottomSheetThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_BottomSheetThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"RawMaterialButton":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_RawMaterialButtonState":{"__RawMaterialButtonState_State_MaterialStateMixin":[],"MaterialStateMixin":["RawMaterialButton"],"State0":["RawMaterialButton"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"RawMaterialButton"},"_InputPadding0":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_RenderInputPadding0":{"RenderShiftedBox":[],"_RenderShiftedBox_RenderBox_RenderObjectWithChildMixin":[],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"__RawMaterialButtonState_State_MaterialStateMixin":{"MaterialStateMixin":["RawMaterialButton"],"State0":["RawMaterialButton"],"_State_Object_Diagnosticable":[],"Diagnosticable":[]},"ButtonBarThemeData":{"_ButtonBarThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_ButtonBarThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"ButtonStyle":{"_ButtonStyle_Object_Diagnosticable":[],"Diagnosticable":[]},"_ButtonStyle_Object_Diagnosticable":{"Diagnosticable":[]},"IconAlignment":{"_Enum":[],"Enum":[]},"ButtonStyleButton":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_ButtonStyleState":{"__ButtonStyleState_State_TickerProviderStateMixin":[],"TickerProviderStateMixin":["ButtonStyleButton"],"State0":["ButtonStyleButton"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[],"State0.T":"ButtonStyleButton"},"_MouseCursor":{"WidgetStateMouseCursor":[],"MouseCursor0":[],"_MouseCursor_Object_Diagnosticable":[],"Diagnosticable":[],"WidgetStateProperty":["MouseCursor0"]},"_InputPadding":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_RenderInputPadding":{"RenderShiftedBox":[],"_RenderShiftedBox_RenderBox_RenderObjectWithChildMixin":[],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"__ButtonStyleState_State_TickerProviderStateMixin":{"TickerProviderStateMixin":["ButtonStyleButton"],"State0":["ButtonStyleButton"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[]},"ButtonTextTheme":{"_Enum":[],"Enum":[]},"ButtonBarLayoutBehavior":{"_Enum":[],"Enum":[]},"ButtonThemeData":{"_ButtonThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_ButtonThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"CardTheme":{"_CardTheme_Object_Diagnosticable":[],"Diagnosticable":[]},"_CardTheme_Object_Diagnosticable":{"Diagnosticable":[]},"CheckboxThemeData":{"_CheckboxThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_CheckboxThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"ChipThemeData":{"_ChipThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_ChipThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"DynamicSchemeVariant":{"_Enum":[],"Enum":[]},"ColorScheme":{"_ColorScheme_Object_Diagnosticable":[],"Diagnosticable":[]},"_ColorScheme_Object_Diagnosticable":{"Diagnosticable":[]},"MaterialColor":{"ColorSwatch":["int"],"Color":[],"ColorSwatch.T":"int"},"MaterialAccentColor":{"ColorSwatch":["int"],"Color":[],"ColorSwatch.T":"int"},"DataTableThemeData":{"_DataTableThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_DataTableThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"DatePickerThemeData":{"_DatePickerThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_DatePickerThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"DialogTheme":{"_DialogTheme_Object_Diagnosticable":[],"Diagnosticable":[]},"_DialogTheme_Object_Diagnosticable":{"Diagnosticable":[]},"DividerThemeData":{"_DividerThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_DividerThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"DrawerThemeData":{"_DrawerThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_DrawerThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"DropdownMenuThemeData":{"_DropdownMenuThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_DropdownMenuThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"ElevatedButtonThemeData":{"_ElevatedButtonThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_ElevatedButtonThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"ExpansionTileThemeData":{"_ExpansionTileThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_ExpansionTileThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"FilledButtonThemeData":{"_FilledButtonThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_FilledButtonThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"_FloatingActionButtonType":{"_Enum":[],"Enum":[]},"FloatingActionButton":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_EffectiveMouseCursor":{"WidgetStateMouseCursor":[],"MouseCursor0":[],"_MouseCursor_Object_Diagnosticable":[],"Diagnosticable":[],"WidgetStateProperty":["MouseCursor0"]},"_ChildOverflowBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_RenderChildOverflowBox":{"RenderAligningShiftedBox":[],"RenderShiftedBox":[],"_RenderShiftedBox_RenderBox_RenderObjectWithChildMixin":[],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"_FABDefaultsM2":{"FloatingActionButtonThemeData":[],"_FloatingActionButtonThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_FABDefaultsM3":{"FloatingActionButtonThemeData":[],"_FloatingActionButtonThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"FloatingActionButtonThemeData":{"_FloatingActionButtonThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_FloatingActionButtonThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"_IconButtonVariant":{"_Enum":[],"Enum":[]},"IconButton":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_SelectableIconButton":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_SelectableIconButtonState":{"State0":["_SelectableIconButton"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"_SelectableIconButton"},"_IconButtonM3":{"ButtonStyleButton":[],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_IconButtonDefaultBackground":{"WidgetStateProperty":["Color?"]},"_IconButtonDefaultForeground":{"WidgetStateProperty":["Color?"]},"_IconButtonDefaultOverlay":{"WidgetStateProperty":["Color?"]},"_IconButtonDefaultMouseCursor":{"__IconButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable":[],"WidgetStateProperty":["MouseCursor0?"],"Diagnosticable":[]},"_IconButtonDefaultsM3":{"ButtonStyle":[],"_ButtonStyle_Object_Diagnosticable":[],"Diagnosticable":[]},"_FilledIconButtonDefaultsM3":{"ButtonStyle":[],"_ButtonStyle_Object_Diagnosticable":[],"Diagnosticable":[]},"_FilledTonalIconButtonDefaultsM3":{"ButtonStyle":[],"_ButtonStyle_Object_Diagnosticable":[],"Diagnosticable":[]},"_OutlinedIconButtonDefaultsM3":{"ButtonStyle":[],"_ButtonStyle_Object_Diagnosticable":[],"Diagnosticable":[]},"__IconButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable":{"WidgetStateProperty":["MouseCursor0?"],"Diagnosticable":[]},"IconButtonThemeData":{"_IconButtonThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"IconButtonTheme":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_IconButtonThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"InkHighlight":{"InteractiveInkFeature":[],"InkFeature":[]},"_InkRippleFactory":{"InteractiveInkFeatureFactory":[]},"InkRipple":{"InteractiveInkFeature":[],"InkFeature":[]},"_InkSplashFactory":{"InteractiveInkFeatureFactory":[]},"InkSplash":{"InteractiveInkFeature":[],"InkFeature":[]},"InteractiveInkFeature":{"InkFeature":[]},"_ParentInkResponseProvider":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"InkResponse":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_InkResponseStateWidget":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_HighlightType":{"_Enum":[],"Enum":[]},"_InkResponseState":{"__InkResponseState_State_AutomaticKeepAliveClientMixin":[],"AutomaticKeepAliveClientMixin":["_InkResponseStateWidget"],"State0":["_InkResponseStateWidget"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"_ParentInkResponseState":[],"State0.T":"_InkResponseStateWidget"},"InkWell":{"InkResponse":[],"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"__InkResponseState_State_AutomaticKeepAliveClientMixin":{"AutomaticKeepAliveClientMixin":["_InkResponseStateWidget"],"State0":["_InkResponseStateWidget"],"_State_Object_Diagnosticable":[],"Diagnosticable":[]},"FloatingLabelBehavior":{"_Enum":[],"Enum":[]},"InputDecorationTheme":{"_InputDecorationTheme_Object_Diagnosticable":[],"Diagnosticable":[]},"_InputDecorationTheme_Object_Diagnosticable":{"Diagnosticable":[]},"ListTileThemeData":{"_ListTileThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_ListTileThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"MaterialType":{"_Enum":[],"Enum":[]},"Material":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_MaterialState":{"__MaterialState_State_TickerProviderStateMixin":[],"TickerProviderStateMixin":["Material"],"State0":["Material"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[],"State0.T":"Material"},"_RenderInkFeatures":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"MaterialInkController":[],"RenderObjectWithChildMixin.0":"RenderBox"},"_InkFeatures":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ShapeBorderTween":{"Tween":["ShapeBorder?"],"Animatable":["ShapeBorder?"],"Tween.T":"ShapeBorder?","Animatable.T":"ShapeBorder?"},"_MaterialInterior":{"ImplicitlyAnimatedWidget":[],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_MaterialInteriorState":{"AnimatedWidgetBaseState":["_MaterialInterior"],"ImplicitlyAnimatedWidgetState":["_MaterialInterior"],"_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin":["_MaterialInterior"],"SingleTickerProviderStateMixin":["_MaterialInterior"],"State0":["_MaterialInterior"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[],"State0.T":"_MaterialInterior","ImplicitlyAnimatedWidgetState.T":"_MaterialInterior"},"_ShapeBorderPaint":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_ShapeBorderPainter":{"CustomPainter":[],"Listenable":[]},"__MaterialState_State_TickerProviderStateMixin":{"TickerProviderStateMixin":["Material"],"State0":["Material"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[]},"_MaterialLocalizationsDelegate":{"LocalizationsDelegate":["MaterialLocalizations"],"LocalizationsDelegate.T":"MaterialLocalizations"},"DefaultMaterialLocalizations":{"MaterialLocalizations":[]},"MaterialStateMixin":{"State0":["1"],"_State_Object_Diagnosticable":[],"Diagnosticable":[]},"MenuBarThemeData":{"MenuThemeData":[],"_MenuThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"MenuButtonThemeData":{"_MenuButtonThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_MenuButtonThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"MenuStyle":{"_MenuStyle_Object_Diagnosticable":[],"Diagnosticable":[]},"_MenuStyle_Object_Diagnosticable":{"Diagnosticable":[]},"MenuThemeData":{"_MenuThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_MenuThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"NavigationBarThemeData":{"_NavigationBarThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_NavigationBarThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"NavigationDrawerThemeData":{"_NavigationDrawerThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_NavigationDrawerThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"NavigationRailThemeData":{"_NavigationRailThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_NavigationRailThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"OutlinedButtonThemeData":{"_OutlinedButtonThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_OutlinedButtonThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"MaterialPageRoute":{"_MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin":["1"],"MaterialRouteTransitionMixin":["1"],"PageRoute":["1"],"ModalRoute":["1"],"_ModalRoute_TransitionRoute_LocalHistoryRoute":["1"],"TransitionRoute":["1"],"OverlayRoute":["1"],"LocalHistoryRoute":["1"],"Route":["1"],"_RoutePlaceholder":[],"PredictiveBackRoute":[]},"MaterialRouteTransitionMixin":{"PageRoute":["1"],"ModalRoute":["1"],"_ModalRoute_TransitionRoute_LocalHistoryRoute":["1"],"TransitionRoute":["1"],"OverlayRoute":["1"],"LocalHistoryRoute":["1"],"Route":["1"],"_RoutePlaceholder":[],"PredictiveBackRoute":[]},"_MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin":{"MaterialRouteTransitionMixin":["1"],"PageRoute":["1"],"ModalRoute":["1"],"_ModalRoute_TransitionRoute_LocalHistoryRoute":["1"],"TransitionRoute":["1"],"OverlayRoute":["1"],"LocalHistoryRoute":["1"],"Route":["1"],"_RoutePlaceholder":[],"PredictiveBackRoute":[]},"_ZoomPageTransition":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_ZoomEnterTransition":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_ZoomEnterTransitionState":{"__ZoomEnterTransitionState_State__ZoomTransitionBase":[],"_ZoomTransitionBase":["_ZoomEnterTransition"],"State0":["_ZoomEnterTransition"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"_ZoomEnterTransition"},"_ZoomExitTransition":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_ZoomExitTransitionState":{"__ZoomExitTransitionState_State__ZoomTransitionBase":[],"_ZoomTransitionBase":["_ZoomExitTransition"],"State0":["_ZoomExitTransition"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"_ZoomExitTransition"},"ZoomPageTransitionsBuilder":{"PageTransitionsBuilder":[]},"CupertinoPageTransitionsBuilder":{"PageTransitionsBuilder":[]},"PageTransitionsTheme":{"_PageTransitionsTheme_Object_Diagnosticable":[],"Diagnosticable":[]},"_PageTransitionsThemeTransitions":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_PageTransitionsThemeTransitionsState":{"State0":["_PageTransitionsThemeTransitions<1>"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"_PageTransitionsThemeTransitions<1>"},"_ZoomTransitionBase":{"State0":["1"],"_State_Object_Diagnosticable":[],"Diagnosticable":[]},"_ZoomEnterTransitionPainter":{"SnapshotPainter":[],"ChangeNotifier":[],"Listenable":[]},"_ZoomExitTransitionPainter":{"SnapshotPainter":[],"ChangeNotifier":[],"Listenable":[]},"_PageTransitionsTheme_Object_Diagnosticable":{"Diagnosticable":[]},"__ZoomEnterTransitionState_State__ZoomTransitionBase":{"_ZoomTransitionBase":["_ZoomEnterTransition"],"State0":["_ZoomEnterTransition"],"_State_Object_Diagnosticable":[],"Diagnosticable":[]},"__ZoomExitTransitionState_State__ZoomTransitionBase":{"_ZoomTransitionBase":["_ZoomExitTransition"],"State0":["_ZoomExitTransition"],"_State_Object_Diagnosticable":[],"Diagnosticable":[]},"PopupMenuPosition":{"_Enum":[],"Enum":[]},"PopupMenuThemeData":{"_PopupMenuThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_PopupMenuThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"ProgressIndicatorThemeData":{"_ProgressIndicatorThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_ProgressIndicatorThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"RadioThemeData":{"_RadioThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_RadioThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"ScaffoldMessenger":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ScaffoldMessengerState":{"_ScaffoldMessengerState_State_TickerProviderStateMixin":[],"TickerProviderStateMixin":["ScaffoldMessenger"],"State0":["ScaffoldMessenger"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[],"State0.T":"ScaffoldMessenger"},"_ScaffoldMessengerScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ScaffoldState":{"_ScaffoldState_State_TickerProviderStateMixin_RestorationMixin":[],"_ScaffoldState_State_TickerProviderStateMixin":[],"TickerProviderStateMixin":["Scaffold"],"RestorationMixin":["Scaffold"],"State0":["Scaffold"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[]},"_ScaffoldMessengerState_State_TickerProviderStateMixin":{"TickerProviderStateMixin":["ScaffoldMessenger"],"State0":["ScaffoldMessenger"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[]},"ScrollbarThemeData":{"_ScrollbarThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_ScrollbarThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"SearchBarThemeData":{"_SearchBarThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_SearchBarThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"SearchViewThemeData":{"_SearchViewThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_SearchViewThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"SegmentedButtonThemeData":{"_SegmentedButtonThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_SegmentedButtonThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"ShowValueIndicator":{"_Enum":[],"Enum":[]},"Thumb":{"_Enum":[],"Enum":[]},"SliderThemeData":{"_SliderThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_SliderThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"SnackBarClosedReason":{"_Enum":[],"Enum":[]},"SnackBar":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"SnackBarBehavior":{"_Enum":[],"Enum":[]},"SnackBarThemeData":{"_SnackBarThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_SnackBarThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"SwitchThemeData":{"_SwitchThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_SwitchThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"TabBarTheme":{"_TabBarTheme_Object_Diagnosticable":[],"Diagnosticable":[]},"_TabBarTheme_Object_Diagnosticable":{"Diagnosticable":[]},"TextButtonThemeData":{"_TextButtonThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_TextButtonThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"TextSelectionThemeData":{"_TextSelectionThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_TextSelectionThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"TextTheme":{"_TextTheme_Object_Diagnosticable":[],"Diagnosticable":[]},"_TextTheme_Object_Diagnosticable":{"Diagnosticable":[]},"Theme":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_InheritedTheme":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ThemeDataTween":{"Tween":["ThemeData"],"Animatable":["ThemeData"],"Tween.T":"ThemeData","Animatable.T":"ThemeData"},"AnimatedTheme":{"ImplicitlyAnimatedWidget":[],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_AnimatedThemeState":{"AnimatedWidgetBaseState":["AnimatedTheme"],"ImplicitlyAnimatedWidgetState":["AnimatedTheme"],"_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin":["AnimatedTheme"],"SingleTickerProviderStateMixin":["AnimatedTheme"],"State0":["AnimatedTheme"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[],"State0.T":"AnimatedTheme","ImplicitlyAnimatedWidgetState.T":"AnimatedTheme"},"MaterialTapTargetSize":{"_Enum":[],"Enum":[]},"ThemeData":{"_ThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"MaterialBasedCupertinoThemeData":{"CupertinoThemeData":[],"_CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable":[],"NoDefaultCupertinoThemeData":[],"Diagnosticable":[]},"VisualDensity":{"_VisualDensity_Object_Diagnosticable":[],"Diagnosticable":[]},"_ThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"_VisualDensity_Object_Diagnosticable":{"Diagnosticable":[]},"TimePickerThemeData":{"_TimePickerThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_TimePickerThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"ToggleButtonsThemeData":{"_ToggleButtonsThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_ToggleButtonsThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"TooltipThemeData":{"_TooltipThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"TooltipTheme":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"TooltipTriggerMode":{"_Enum":[],"Enum":[]},"_TooltipThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"ScriptCategory":{"_Enum":[],"Enum":[]},"Typography":{"_Typography_Object_Diagnosticable":[],"Diagnosticable":[]},"_Typography_Object_Diagnosticable":{"Diagnosticable":[]},"Alignment":{"AlignmentGeometry":[]},"AlignmentDirectional":{"AlignmentGeometry":[]},"_MixedAlignment":{"AlignmentGeometry":[]},"RenderComparison":{"_Enum":[],"Enum":[]},"VerticalDirection":{"_Enum":[],"Enum":[]},"BorderRadius":{"BorderRadiusGeometry":[]},"_MixedBorderRadius":{"BorderRadiusGeometry":[]},"BorderStyle":{"_Enum":[],"Enum":[]},"BorderSide":{"_BorderSide_Object_Diagnosticable":[],"Diagnosticable":[]},"OutlinedBorder":{"ShapeBorder":[]},"_CompoundBorder":{"ShapeBorder":[]},"_BorderSide_Object_Diagnosticable":{"Diagnosticable":[]},"BoxShape":{"_Enum":[],"Enum":[]},"BoxBorder":{"ShapeBorder":[]},"Border":{"BoxBorder":[],"ShapeBorder":[]},"BorderDirectional":{"BoxBorder":[],"ShapeBorder":[]},"CircleBorder":{"OutlinedBorder":[],"ShapeBorder":[]},"ColorSwatch":{"Color":[]},"ColorProperty":{"DiagnosticsProperty":["Color"],"DiagnosticsNode":[],"DiagnosticsProperty.T":"Color"},"Decoration":{"_Decoration_Object_Diagnosticable":[],"Diagnosticable":[]},"_Decoration_Object_Diagnosticable":{"Diagnosticable":[]},"EdgeInsetsDirectional":{"EdgeInsetsGeometry":[]},"InlineSpan":{"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"RoundedRectangleBorder":{"OutlinedBorder":[],"ShapeBorder":[]},"_RoundedRectangleToCircleBorder":{"OutlinedBorder":[],"ShapeBorder":[]},"StadiumBorder":{"OutlinedBorder":[],"ShapeBorder":[]},"_StadiumToCircleBorder":{"OutlinedBorder":[],"ShapeBorder":[]},"_StadiumToRoundedRectangleBorder":{"OutlinedBorder":[],"ShapeBorder":[]},"TextOverflow":{"_Enum":[],"Enum":[]},"TextWidthBasis":{"_Enum":[],"Enum":[]},"WordBoundary":{"TextBoundary":[]},"_UntilTextBoundary":{"TextBoundary":[]},"TextSpan":{"InlineSpan":[],"DiagnosticableTree":[],"MouseTrackerAnnotation":[],"_DiagnosticableTree_Object_Diagnosticable":[],"_MouseTrackerAnnotation_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"TextStyle":{"_TextStyle_Object_Diagnosticable":[],"Diagnosticable":[]},"_TextStyle_Object_Diagnosticable":{"Diagnosticable":[]},"ContainerBoxParentData":{"_ContainerBoxParentData_BoxParentData_ContainerParentDataMixin":["1"],"BoxParentData":[],"ContainerParentDataMixin":["1"],"ParentData":[]},"RenderBoxContainerDefaultsMixin":{"ContainerRenderObjectMixin":["1","2"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"_ContainerBoxParentData_BoxParentData_ContainerParentDataMixin":{"BoxParentData":[],"ContainerParentDataMixin":["1"],"ParentData":[]},"CustomPainter":{"Listenable":[]},"RenderCustomPaint":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"_OverflowSide":{"_Enum":[],"Enum":[]},"DebugOverflowIndicatorMixin":{"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"FlexFit":{"_Enum":[],"Enum":[]},"FlexParentData":{"ContainerBoxParentData":["RenderBox"],"_ContainerBoxParentData_BoxParentData_ContainerParentDataMixin":["RenderBox"],"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[],"ContainerParentDataMixin.0":"RenderBox"},"MainAxisSize":{"_Enum":[],"Enum":[]},"MainAxisAlignment":{"_Enum":[],"Enum":[]},"CrossAxisAlignment":{"_Enum":[],"Enum":[]},"RenderFlex":{"_RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin":[],"_RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin":[],"_RenderFlex_RenderBox_ContainerRenderObjectMixin":[],"RenderBoxContainerDefaultsMixin":["RenderBox","FlexParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","FlexParentData"],"DebugOverflowIndicatorMixin":[],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"FlexParentData","ContainerRenderObjectMixin.0":"RenderBox","RenderBoxContainerDefaultsMixin.1":"FlexParentData"},"_RenderFlex_RenderBox_ContainerRenderObjectMixin":{"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","FlexParentData"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"_RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin":{"_RenderFlex_RenderBox_ContainerRenderObjectMixin":[],"RenderBoxContainerDefaultsMixin":["RenderBox","FlexParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","FlexParentData"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"_RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin":{"_RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin":[],"_RenderFlex_RenderBox_ContainerRenderObjectMixin":[],"RenderBoxContainerDefaultsMixin":["RenderBox","FlexParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","FlexParentData"],"DebugOverflowIndicatorMixin":[],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"PerformanceOverlayLayer":{"Layer0":[],"_Layer_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ImageFilterLayer":{"OffsetLayer":[],"ContainerLayer0":[],"Layer0":[],"_Layer_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"BackdropFilterLayer":{"ContainerLayer0":[],"Layer0":[],"_Layer_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"LeaderLayer":{"ContainerLayer0":[],"Layer0":[],"_Layer_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ContainerParentDataMixin":{"ParentData":[]},"ContainerRenderObjectMixin":{"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"RelayoutWhenSystemFontsChangeMixin":{"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"PlaceholderSpanIndexSemanticsTag":{"SemanticsTag":[]},"TextParentData":{"_TextParentData_ParentData_ContainerParentDataMixin":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[],"ContainerParentDataMixin.0":"RenderBox"},"RenderInlineChildrenContainerDefaults":{"ContainerRenderObjectMixin":["RenderBox","TextParentData"],"RenderBox":[],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"RenderParagraph":{"_RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderInlineChildrenContainerDefaults_RelayoutWhenSystemFontsChangeMixin":[],"_RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderInlineChildrenContainerDefaults":[],"_RenderParagraph_RenderBox_ContainerRenderObjectMixin":[],"RenderInlineChildrenContainerDefaults":[],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","TextParentData"],"RelayoutWhenSystemFontsChangeMixin":[],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"TextParentData","ContainerRenderObjectMixin.0":"RenderBox"},"_SelectableFragment":{"__SelectableFragment_Object_Selectable_Diagnosticable_ChangeNotifier":[],"__SelectableFragment_Object_Selectable_Diagnosticable":[],"__SelectableFragment_Object_Selectable":[],"Selectable":[],"SelectionHandler":[],"ValueListenable":["SelectionGeometry"],"ChangeNotifier":[],"Listenable":[],"Diagnosticable":[],"TextLayoutMetrics":[]},"_RenderParagraph_RenderBox_ContainerRenderObjectMixin":{"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","TextParentData"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"_RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderInlineChildrenContainerDefaults":{"_RenderParagraph_RenderBox_ContainerRenderObjectMixin":[],"RenderInlineChildrenContainerDefaults":[],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","TextParentData"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"_RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderInlineChildrenContainerDefaults_RelayoutWhenSystemFontsChangeMixin":{"_RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderInlineChildrenContainerDefaults":[],"_RenderParagraph_RenderBox_ContainerRenderObjectMixin":[],"RenderInlineChildrenContainerDefaults":[],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","TextParentData"],"RelayoutWhenSystemFontsChangeMixin":[],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"_TextParentData_ParentData_ContainerParentDataMixin":{"ContainerParentDataMixin":["RenderBox"],"ParentData":[]},"__SelectableFragment_Object_Selectable":{"Selectable":[],"SelectionHandler":[],"ValueListenable":["SelectionGeometry"],"Listenable":[]},"__SelectableFragment_Object_Selectable_Diagnosticable":{"__SelectableFragment_Object_Selectable":[],"Selectable":[],"SelectionHandler":[],"ValueListenable":["SelectionGeometry"],"Listenable":[],"Diagnosticable":[]},"__SelectableFragment_Object_Selectable_Diagnosticable_ChangeNotifier":{"__SelectableFragment_Object_Selectable_Diagnosticable":[],"__SelectableFragment_Object_Selectable":[],"Selectable":[],"SelectionHandler":[],"ValueListenable":["SelectionGeometry"],"ChangeNotifier":[],"Listenable":[],"Diagnosticable":[]},"PerformanceOverlayOption":{"_Enum":[],"Enum":[]},"RenderPerformanceOverlay":{"RenderBox":[],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"HitTestBehavior":{"_Enum":[],"Enum":[]},"RenderProxyBoxWithHitTestBehavior":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"RenderLimitedBox":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"RenderAnimatedOpacityMixin":{"RenderObjectWithChildMixin":["1"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"RenderAnimatedOpacity":{"_RenderAnimatedOpacity_RenderProxyBox_RenderAnimatedOpacityMixin":[],"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderAnimatedOpacityMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"RenderBackdropFilter":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"CustomClipper":{"Listenable":[]},"ShapeBorderClipper":{"CustomClipper":["Path"],"Listenable":[]},"_RenderCustomClip":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"RenderClipPath":{"_RenderCustomClip":["Path"],"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox","_RenderCustomClip.T":"Path"},"_RenderPhysicalModelBase":{"_RenderCustomClip":["1"],"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"RenderPhysicalModel":{"_RenderPhysicalModelBase":["RRect"],"_RenderCustomClip":["RRect"],"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox","_RenderCustomClip.T":"RRect"},"RenderPhysicalShape":{"_RenderPhysicalModelBase":["Path"],"_RenderCustomClip":["Path"],"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox","_RenderCustomClip.T":"Path"},"DecorationPosition":{"_Enum":[],"Enum":[]},"RenderDecoratedBox":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"RenderTransform":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"RenderFractionalTranslation":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"RenderPointerListener":{"RenderProxyBoxWithHitTestBehavior":[],"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"RenderMouseRegion":{"RenderProxyBoxWithHitTestBehavior":[],"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"MouseTrackerAnnotation":[],"_DiagnosticableTree_Object_Diagnosticable":[],"_MouseTrackerAnnotation_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"RenderRepaintBoundary":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"RenderIgnorePointer":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"RenderOffstage":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"RenderAbsorbPointer":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"RenderSemanticsGestureHandler":{"RenderProxyBoxWithHitTestBehavior":[],"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"RenderBlockSemantics":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"RenderMergeSemantics":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"RenderExcludeSemantics":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"_RenderAnimatedOpacity_RenderProxyBox_RenderAnimatedOpacityMixin":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderAnimatedOpacityMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"SelectionResult":{"_Enum":[],"Enum":[]},"SelectionHandler":{"ValueListenable":["SelectionGeometry"],"Listenable":[]},"Selectable":{"SelectionHandler":[],"ValueListenable":["SelectionGeometry"],"Listenable":[]},"SelectionRegistrant":{"Selectable":[],"SelectionHandler":[],"ValueListenable":["SelectionGeometry"],"Listenable":[]},"SelectionEventType":{"_Enum":[],"Enum":[]},"TextGranularity":{"_Enum":[],"Enum":[]},"SelectAllSelectionEvent":{"SelectionEvent":[]},"ClearSelectionEvent":{"SelectionEvent":[]},"SelectWordSelectionEvent":{"SelectionEvent":[]},"SelectParagraphSelectionEvent":{"SelectionEvent":[]},"SelectionEdgeUpdateEvent":{"SelectionEvent":[]},"GranularlyExtendSelectionEvent":{"SelectionEvent":[]},"SelectionExtendDirection":{"_Enum":[],"Enum":[]},"DirectionallyExtendSelectionEvent":{"SelectionEvent":[]},"SelectionStatus":{"_Enum":[],"Enum":[]},"SelectionPoint":{"_SelectionPoint_Object_Diagnosticable":[],"Diagnosticable":[]},"TextSelectionHandleType":{"_Enum":[],"Enum":[]},"_SelectionPoint_Object_Diagnosticable":{"Diagnosticable":[]},"RenderShiftedBox":{"_RenderShiftedBox_RenderBox_RenderObjectWithChildMixin":[],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"RenderPadding":{"RenderShiftedBox":[],"_RenderShiftedBox_RenderBox_RenderObjectWithChildMixin":[],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"RenderAligningShiftedBox":{"RenderShiftedBox":[],"_RenderShiftedBox_RenderBox_RenderObjectWithChildMixin":[],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"RenderPositionedBox":{"RenderAligningShiftedBox":[],"RenderShiftedBox":[],"_RenderShiftedBox_RenderBox_RenderObjectWithChildMixin":[],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"RenderCustomSingleChildLayoutBox":{"RenderShiftedBox":[],"_RenderShiftedBox_RenderBox_RenderObjectWithChildMixin":[],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"_RenderShiftedBox_RenderBox_RenderObjectWithChildMixin":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"StackParentData":{"ContainerBoxParentData":["RenderBox"],"_ContainerBoxParentData_BoxParentData_ContainerParentDataMixin":["RenderBox"],"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[],"ContainerParentDataMixin.0":"RenderBox"},"StackFit":{"_Enum":[],"Enum":[]},"RenderStack":{"_RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin":[],"_RenderStack_RenderBox_ContainerRenderObjectMixin":[],"RenderBoxContainerDefaultsMixin":["RenderBox","StackParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","StackParentData"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"StackParentData","ContainerRenderObjectMixin.0":"RenderBox","RenderBoxContainerDefaultsMixin.1":"StackParentData"},"_RenderStack_RenderBox_ContainerRenderObjectMixin":{"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","StackParentData"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"_RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin":{"_RenderStack_RenderBox_ContainerRenderObjectMixin":[],"RenderBoxContainerDefaultsMixin":["RenderBox","StackParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","StackParentData"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"TickerFuture":{"Future":["~"]},"TickerCanceled":{"Exception":[]},"OrdinalSortKey":{"SemanticsSortKey":[],"_SemanticsSortKey_Object_Diagnosticable":[],"Diagnosticable":[],"Comparable":["SemanticsSortKey"]},"_SemanticsSortKey_Object_Diagnosticable":{"Diagnosticable":[]},"SemanticsSortKey":{"_SemanticsSortKey_Object_Diagnosticable":[],"Diagnosticable":[],"Comparable":["SemanticsSortKey"]},"TooltipSemanticsEvent":{"SemanticsEvent":[]},"LongPressSemanticsEvent":{"SemanticsEvent":[]},"TapSemanticEvent":{"SemanticsEvent":[]},"FocusSemanticEvent":{"SemanticsEvent":[]},"SystemSoundType":{"_Enum":[],"Enum":[]},"CharacterBoundary":{"TextBoundary":[]},"LineBoundary":{"TextBoundary":[]},"ParagraphBoundary":{"TextBoundary":[]},"DocumentBoundary":{"TextBoundary":[]},"TextCapitalization0":{"_Enum":[],"Enum":[]},"SelectionChangedCause":{"_Enum":[],"Enum":[]},"ContextAction":{"Action":["1"],"_Action_Object_Diagnosticable":[],"Diagnosticable":[]},"CallbackAction":{"Action":["1"],"_Action_Object_Diagnosticable":[],"Diagnosticable":[],"Action.T":"1"},"Actions":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_ActionsState":{"State0":["Actions"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"Actions"},"VoidCallbackIntent":{"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"VoidCallbackAction":{"Action":["VoidCallbackIntent"],"_Action_Object_Diagnosticable":[],"Diagnosticable":[],"Action.T":"VoidCallbackIntent"},"DoNothingIntent":{"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"DoNothingAndStopPropagationIntent":{"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"DoNothingAction":{"Action":["Intent"],"_Action_Object_Diagnosticable":[],"Diagnosticable":[],"Action.T":"Intent"},"ActivateIntent":{"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"ButtonActivateIntent":{"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"DismissIntent":{"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"DismissAction":{"Action":["DismissIntent"],"_Action_Object_Diagnosticable":[],"Diagnosticable":[]},"PrioritizedIntents":{"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"PrioritizedAction":{"ContextAction":["PrioritizedIntents"],"Action":["PrioritizedIntents"],"_Action_Object_Diagnosticable":[],"Diagnosticable":[],"Action.T":"PrioritizedIntents","ContextAction.T":"PrioritizedIntents"},"_OverridableActionMixin":{"Action":["1"],"_Action_Object_Diagnosticable":[],"Diagnosticable":[]},"_OverridableAction":{"__OverridableAction_ContextAction__OverridableActionMixin":["1"],"ContextAction":["1"],"_OverridableActionMixin":["1"],"Action":["1"],"_Action_Object_Diagnosticable":[],"Diagnosticable":[],"Action.T":"1","ContextAction.T":"1"},"_OverridableContextAction":{"__OverridableContextAction_ContextAction__OverridableActionMixin":["1"],"ContextAction":["1"],"_OverridableActionMixin":["1"],"Action":["1"],"_Action_Object_Diagnosticable":[],"Diagnosticable":[],"Action.T":"1","ContextAction.T":"1"},"_ContextActionToActionAdapter":{"Action":["1"],"_Action_Object_Diagnosticable":[],"Diagnosticable":[],"Action.T":"1"},"_Action_Object_Diagnosticable":{"Diagnosticable":[]},"_Intent_Object_Diagnosticable":{"Diagnosticable":[]},"__OverridableAction_ContextAction__OverridableActionMixin":{"ContextAction":["1"],"_OverridableActionMixin":["1"],"Action":["1"],"_Action_Object_Diagnosticable":[],"Diagnosticable":[]},"__OverridableContextAction_ContextAction__OverridableActionMixin":{"ContextAction":["1"],"_OverridableActionMixin":["1"],"Action":["1"],"_Action_Object_Diagnosticable":[],"Diagnosticable":[]},"Intent":{"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"Action":{"_Action_Object_Diagnosticable":[],"Diagnosticable":[]},"_ActionsScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"WidgetsApp":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_WidgetsAppState":{"__WidgetsAppState_State_WidgetsBindingObserver":[],"State0":["WidgetsApp"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"WidgetsBindingObserver":[],"State0.T":"WidgetsApp"},"__WidgetsAppState_State_WidgetsBindingObserver":{"State0":["WidgetsApp"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"WidgetsBindingObserver":[]},"KeepAliveNotification":{"Notification":[]},"KeepAliveHandle":{"ChangeNotifier":[],"Listenable":[]},"AutomaticKeepAliveClientMixin":{"State0":["1"],"_State_Object_Diagnosticable":[],"Diagnosticable":[]},"_NullWidget0":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_UbiquitousInheritedElement":{"InheritedElement":[],"ProxyElement0":[],"ComponentElement":[],"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"_UbiquitousInheritedWidget":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"BackdropFilter":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"CustomPaint":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ClipPath":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"PhysicalModel":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"PhysicalShape":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"Transform":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"FractionalTranslation":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"Padding":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"Align":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"Center":{"Align":[],"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"CustomSingleChildLayout":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ConstrainedBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"LimitedBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"Offstage":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_OffstageElement":{"SingleChildRenderObjectElement":[],"RenderObjectElement":[],"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"Stack":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"Positioned":{"ParentDataWidget":["StackParentData"],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"ParentDataWidget.T":"StackParentData"},"PositionedDirectional":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"Flex":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"Row":{"Flex":[],"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"Column":{"Flex":[],"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"RichText":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"DefaultAssetBundle":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"Listener0":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"MouseRegion":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"RepaintBoundary":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"IgnorePointer":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"AbsorbPointer":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"MergeSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"BlockSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ExcludeSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"KeyedSubtree":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"Builder":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ColoredBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_RenderColoredBox":{"RenderProxyBoxWithHitTestBehavior":[],"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"Directionality":{"_UbiquitousInheritedWidget":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"DecoratedBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"Container":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_DecorationClipper":{"CustomClipper":["Path"],"Listenable":[]},"DefaultSelectionStyle":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_NullWidget1":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"DefaultTextEditingShortcuts":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"DualTransitionBuilder":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_DualTransitionBuilderState":{"State0":["DualTransitionBuilder"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"DualTransitionBuilder"},"RequestFocusIntent":{"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"RequestFocusAction":{"Action":["RequestFocusIntent"],"_Action_Object_Diagnosticable":[],"Diagnosticable":[],"Action.T":"RequestFocusIntent"},"NextFocusIntent":{"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"NextFocusAction":{"Action":["NextFocusIntent"],"_Action_Object_Diagnosticable":[],"Diagnosticable":[],"Action.T":"NextFocusIntent"},"PreviousFocusIntent":{"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"PreviousFocusAction":{"Action":["PreviousFocusIntent"],"_Action_Object_Diagnosticable":[],"Diagnosticable":[],"Action.T":"PreviousFocusIntent"},"DirectionalFocusIntent":{"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"DirectionalFocusAction":{"Action":["DirectionalFocusIntent"],"_Action_Object_Diagnosticable":[],"Diagnosticable":[],"Action.T":"DirectionalFocusIntent"},"LabeledGlobalKey":{"GlobalKey":["1"],"Key":[]},"GlobalObjectKey":{"GlobalKey":["1"],"Key":[]},"MultiChildRenderObjectWidget":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"NotifiableElementMixin":{"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"MultiChildRenderObjectElement":{"RenderObjectElement":[],"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"ParentDataWidget":{"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ParentDataElement":{"ProxyElement0":[],"ComponentElement":[],"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"GestureRecognizerFactoryWithHandlers":{"GestureRecognizerFactory":["1"]},"GestureDetector":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"RawGestureDetector":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"RawGestureDetectorState":{"State0":["RawGestureDetector"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"RawGestureDetector"},"_GestureSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_DefaultSemanticsGestureDelegate":{"SemanticsGestureDelegate":[]},"HeroFlightDirection":{"_Enum":[],"Enum":[]},"Hero":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_HeroState":{"State0":["Hero"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"Hero"},"HeroController":{"NavigatorObserver":[]},"HeroMode":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"Icon":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"IconDataProperty":{"DiagnosticsProperty":["IconData"],"DiagnosticsNode":[],"DiagnosticsProperty.T":"IconData"},"IconTheme":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"IconThemeData":{"_IconThemeData_Object_Diagnosticable":[],"Diagnosticable":[]},"_IconThemeData_Object_Diagnosticable":{"Diagnosticable":[]},"DecorationTween":{"Tween":["Decoration"],"Animatable":["Decoration"],"Tween.T":"Decoration","Animatable.T":"Decoration"},"EdgeInsetsTween":{"Tween":["EdgeInsets"],"Animatable":["EdgeInsets"],"Tween.T":"EdgeInsets","Animatable.T":"EdgeInsets"},"BorderRadiusTween":{"Tween":["BorderRadius?"],"Animatable":["BorderRadius?"],"Tween.T":"BorderRadius?","Animatable.T":"BorderRadius?"},"TextStyleTween":{"Tween":["TextStyle"],"Animatable":["TextStyle"],"Tween.T":"TextStyle","Animatable.T":"TextStyle"},"ImplicitlyAnimatedWidget":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ImplicitlyAnimatedWidgetState":{"_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin":["1"],"SingleTickerProviderStateMixin":["1"],"State0":["1"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[]},"AnimatedWidgetBaseState":{"ImplicitlyAnimatedWidgetState":["1"],"_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin":["1"],"SingleTickerProviderStateMixin":["1"],"State0":["1"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[]},"AnimatedDefaultTextStyle":{"ImplicitlyAnimatedWidget":[],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_AnimatedDefaultTextStyleState":{"AnimatedWidgetBaseState":["AnimatedDefaultTextStyle"],"ImplicitlyAnimatedWidgetState":["AnimatedDefaultTextStyle"],"_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin":["AnimatedDefaultTextStyle"],"SingleTickerProviderStateMixin":["AnimatedDefaultTextStyle"],"State0":["AnimatedDefaultTextStyle"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[],"State0.T":"AnimatedDefaultTextStyle","ImplicitlyAnimatedWidgetState.T":"AnimatedDefaultTextStyle"},"AnimatedPhysicalModel":{"ImplicitlyAnimatedWidget":[],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_AnimatedPhysicalModelState":{"AnimatedWidgetBaseState":["AnimatedPhysicalModel"],"ImplicitlyAnimatedWidgetState":["AnimatedPhysicalModel"],"_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin":["AnimatedPhysicalModel"],"SingleTickerProviderStateMixin":["AnimatedPhysicalModel"],"State0":["AnimatedPhysicalModel"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[],"State0.T":"AnimatedPhysicalModel","ImplicitlyAnimatedWidgetState.T":"AnimatedPhysicalModel"},"_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin":{"SingleTickerProviderStateMixin":["1"],"State0":["1"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[]},"InheritedTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_WidgetsLocalizationsDelegate":{"LocalizationsDelegate":["WidgetsLocalizations"],"LocalizationsDelegate.T":"WidgetsLocalizations"},"DefaultWidgetsLocalizations":{"WidgetsLocalizations":[]},"_LocalizationsScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"Localizations":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_LocalizationsState":{"State0":["Localizations"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"Localizations"},"LookupBoundary":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_SemanticsClipper":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_RenderSemanticsClipper":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"ModalBarrier":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"AnimatedModalBarrier":{"AnimatedWidget":[],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_AnyTapGestureRecognizer":{"BaseTapGestureRecognizer":[],"PrimaryPointerGestureRecognizer":[],"OneSequenceGestureRecognizer":[],"GestureRecognizer":[],"_GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"GestureArenaMember":[],"Diagnosticable":[]},"_AnyTapGestureRecognizerFactory":{"GestureRecognizerFactory":["_AnyTapGestureRecognizer"]},"_ModalBarrierGestureDetector":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"RoutePopDisposition":{"_Enum":[],"Enum":[]},"Route":{"_RoutePlaceholder":[]},"Page":{"RouteSettings":[]},"HeroControllerScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"DefaultTransitionDelegate":{"TransitionDelegate":["1"]},"Navigator":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_RouteLifecycle":{"_Enum":[],"Enum":[]},"_RouteEntry":{"RouteTransitionRecord":[]},"_NavigatorPushObservation":{"_NavigatorObservation":[]},"_NavigatorPopObservation":{"_NavigatorObservation":[]},"_NavigatorRemoveObservation":{"_NavigatorObservation":[]},"_NavigatorReplaceObservation":{"_NavigatorObservation":[]},"_History":{"__History_Iterable_ChangeNotifier":[],"ChangeNotifier":[],"Iterable":["_RouteEntry"],"Listenable":[],"Iterable.E":"_RouteEntry"},"NavigatorState":{"_NavigatorState_State_TickerProviderStateMixin_RestorationMixin":[],"_NavigatorState_State_TickerProviderStateMixin":[],"TickerProviderStateMixin":["Navigator"],"RestorationMixin":["Navigator"],"State0":["Navigator"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[],"State0.T":"Navigator"},"_RouteRestorationType":{"_Enum":[],"Enum":[]},"_NamedRestorationInformation":{"_RestorationInformation":[]},"_AnonymousRestorationInformation":{"_RestorationInformation":[]},"_HistoryProperty":{"RestorableProperty":["Map<String?,List<Object>>?"],"ChangeNotifier":[],"Listenable":[]},"NavigationNotification":{"Notification":[]},"_NavigatorState_State_TickerProviderStateMixin":{"TickerProviderStateMixin":["Navigator"],"State0":["Navigator"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[]},"_NavigatorState_State_TickerProviderStateMixin_RestorationMixin":{"_NavigatorState_State_TickerProviderStateMixin":[],"TickerProviderStateMixin":["Navigator"],"RestorationMixin":["Navigator"],"State0":["Navigator"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[]},"__History_Iterable_ChangeNotifier":{"ChangeNotifier":[],"Iterable":["_RouteEntry"],"Listenable":[]},"NotificationListener":{"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_NotificationElement":{"__NotificationElement_ProxyElement_NotifiableElementMixin":[],"ProxyElement0":[],"ComponentElement":[],"NotifiableElementMixin":[],"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"LayoutChangedNotification":{"Notification":[]},"__NotificationElement_ProxyElement_NotifiableElementMixin":{"ProxyElement0":[],"ComponentElement":[],"NotifiableElementMixin":[],"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"OverlayEntry":{"Listenable":[]},"_OverlayEntryWidget":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_OverlayEntryWidgetState":{"State0":["_OverlayEntryWidget"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"_OverlayEntryWidget"},"Overlay":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"OverlayState":{"_OverlayState_State_TickerProviderStateMixin":[],"TickerProviderStateMixin":["Overlay"],"State0":["Overlay"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[],"State0.T":"Overlay"},"_Theater":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_TheaterElement":{"MultiChildRenderObjectElement":[],"RenderObjectElement":[],"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"_RenderTheaterMixin":{"RenderBox":[],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"_TheaterParentData":{"StackParentData":[],"ContainerBoxParentData":["RenderBox"],"_ContainerBoxParentData_BoxParentData_ContainerParentDataMixin":["RenderBox"],"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[],"ContainerParentDataMixin.0":"RenderBox"},"_RenderTheater":{"__RenderTheater_RenderBox_ContainerRenderObjectMixin__RenderTheaterMixin":[],"__RenderTheater_RenderBox_ContainerRenderObjectMixin":[],"_RenderTheaterMixin":[],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","StackParentData"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"StackParentData","ContainerRenderObjectMixin.0":"RenderBox"},"OverlayPortal":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_OverlayPortalState":{"State0":["OverlayPortal"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"OverlayPortal"},"_OverlayEntryLocation":{"LinkedListEntry":["_OverlayEntryLocation"],"LinkedListEntry.E":"_OverlayEntryLocation"},"_RenderTheaterMarker":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_OverlayPortal":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_OverlayPortalElement":{"RenderObjectElement":[],"Element0":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"BuildContext":[]},"_DeferredLayout":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_RenderDeferredLayoutBox":{"__RenderDeferredLayoutBox_RenderProxyBox__RenderTheaterMixin_LinkedListEntry":[],"__RenderDeferredLayoutBox_RenderProxyBox__RenderTheaterMixin":[],"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"_RenderTheaterMixin":[],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"LinkedListEntry":["_RenderDeferredLayoutBox"],"RenderObjectWithChildMixin.0":"RenderBox","LinkedListEntry.E":"_RenderDeferredLayoutBox"},"_RenderLayoutSurrogateProxyBox":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"_OverlayState_State_TickerProviderStateMixin":{"TickerProviderStateMixin":["Overlay"],"State0":["Overlay"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[]},"__RenderDeferredLayoutBox_RenderProxyBox__RenderTheaterMixin":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"_RenderTheaterMixin":[],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"__RenderDeferredLayoutBox_RenderProxyBox__RenderTheaterMixin_LinkedListEntry":{"__RenderDeferredLayoutBox_RenderProxyBox__RenderTheaterMixin":[],"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"_RenderTheaterMixin":[],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"LinkedListEntry":["_RenderDeferredLayoutBox"]},"__RenderTheater_RenderBox_ContainerRenderObjectMixin":{"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","StackParentData"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"__RenderTheater_RenderBox_ContainerRenderObjectMixin__RenderTheaterMixin":{"__RenderTheater_RenderBox_ContainerRenderObjectMixin":[],"_RenderTheaterMixin":[],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","StackParentData"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"PageStorage":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"PageRoute":{"ModalRoute":["1"],"_ModalRoute_TransitionRoute_LocalHistoryRoute":["1"],"TransitionRoute":["1"],"OverlayRoute":["1"],"LocalHistoryRoute":["1"],"Route":["1"],"_RoutePlaceholder":[],"PredictiveBackRoute":[]},"PerformanceOverlay":{"LeafRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"MenuSerializableShortcut":{"ShortcutActivator":[]},"PrimaryScrollController":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"RestorationScope":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_RestorationScopeState":{"__RestorationScopeState_State_RestorationMixin":[],"RestorationMixin":["RestorationScope"],"State0":["RestorationScope"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"RestorationScope"},"UnmanagedRestorationScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"RootRestorationScope":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_RootRestorationScopeState":{"State0":["RootRestorationScope"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"RootRestorationScope"},"RestorableProperty":{"ChangeNotifier":[],"Listenable":[]},"RestorationMixin":{"State0":["1"],"_State_Object_Diagnosticable":[],"Diagnosticable":[]},"__RestorationScopeState_State_RestorationMixin":{"RestorationMixin":["RestorationScope"],"State0":["RestorationScope"],"_State_Object_Diagnosticable":[],"Diagnosticable":[]},"RestorableValue":{"RestorableProperty":["1"],"ChangeNotifier":[],"Listenable":[]},"_RestorablePrimitiveValueN":{"RestorableValue":["1"],"RestorableProperty":["1"],"ChangeNotifier":[],"Listenable":[]},"_RestorablePrimitiveValue":{"_RestorablePrimitiveValueN":["1"],"RestorableValue":["1"],"RestorableProperty":["1"],"ChangeNotifier":[],"Listenable":[]},"RestorableNum":{"_RestorablePrimitiveValue":["1"],"_RestorablePrimitiveValueN":["1"],"RestorableValue":["1"],"RestorableProperty":["1"],"ChangeNotifier":[],"Listenable":[],"RestorableValue.T":"1"},"Router":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"RouteInformationReportingType":{"_Enum":[],"Enum":[]},"_RouterState":{"__RouterState_State_RestorationMixin":["1"],"RestorationMixin":["Router<1>"],"State0":["Router<1>"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"Router<1>"},"_RouterScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"BackButtonDispatcher":{"_CallbackHookProvider":["Future<bool>"]},"RootBackButtonDispatcher":{"_RootBackButtonDispatcher_BackButtonDispatcher_WidgetsBindingObserver":[],"BackButtonDispatcher":[],"_CallbackHookProvider":["Future<bool>"],"WidgetsBindingObserver":[],"_CallbackHookProvider.T":"Future<bool>"},"ChildBackButtonDispatcher":{"BackButtonDispatcher":[],"_CallbackHookProvider":["Future<bool>"]},"RouterDelegate":{"Listenable":[]},"RouteInformationProvider":{"ValueListenable":["RouteInformation"],"Listenable":[]},"PlatformRouteInformationProvider":{"_PlatformRouteInformationProvider_RouteInformationProvider_WidgetsBindingObserver_ChangeNotifier":[],"_PlatformRouteInformationProvider_RouteInformationProvider_WidgetsBindingObserver":[],"RouteInformationProvider":[],"ValueListenable":["RouteInformation"],"ChangeNotifier":[],"Listenable":[],"WidgetsBindingObserver":[]},"_RestorableRouteInformation":{"RestorableValue":["RouteInformation?"],"RestorableProperty":["RouteInformation?"],"ChangeNotifier":[],"Listenable":[],"RestorableValue.T":"RouteInformation?"},"_PlatformRouteInformationProvider_RouteInformationProvider_WidgetsBindingObserver":{"RouteInformationProvider":[],"ValueListenable":["RouteInformation"],"Listenable":[],"WidgetsBindingObserver":[]},"_PlatformRouteInformationProvider_RouteInformationProvider_WidgetsBindingObserver_ChangeNotifier":{"_PlatformRouteInformationProvider_RouteInformationProvider_WidgetsBindingObserver":[],"RouteInformationProvider":[],"ValueListenable":["RouteInformation"],"ChangeNotifier":[],"Listenable":[],"WidgetsBindingObserver":[]},"_RootBackButtonDispatcher_BackButtonDispatcher_WidgetsBindingObserver":{"BackButtonDispatcher":[],"_CallbackHookProvider":["Future<bool>"],"WidgetsBindingObserver":[]},"__RouterState_State_RestorationMixin":{"RestorationMixin":["Router<1>"],"State0":["Router<1>"],"_State_Object_Diagnosticable":[],"Diagnosticable":[]},"OverlayRoute":{"Route":["1"],"_RoutePlaceholder":[]},"TransitionRoute":{"OverlayRoute":["1"],"Route":["1"],"_RoutePlaceholder":[],"PredictiveBackRoute":[]},"LocalHistoryRoute":{"Route":["1"],"_RoutePlaceholder":[]},"_DismissModalAction":{"DismissAction":[],"Action":["DismissIntent"],"_Action_Object_Diagnosticable":[],"Diagnosticable":[],"Action.T":"DismissIntent"},"_ModalRouteAspect":{"_Enum":[],"Enum":[]},"_ModalScopeStatus":{"InheritedModel":["_ModalRouteAspect"],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"InheritedModel.T":"_ModalRouteAspect"},"_ModalScope":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_ModalScopeState":{"State0":["_ModalScope<1>"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"_ModalScope<1>"},"ModalRoute":{"_ModalRoute_TransitionRoute_LocalHistoryRoute":["1"],"TransitionRoute":["1"],"OverlayRoute":["1"],"LocalHistoryRoute":["1"],"Route":["1"],"_RoutePlaceholder":[],"PredictiveBackRoute":[]},"_ModalRoute_TransitionRoute_LocalHistoryRoute":{"TransitionRoute":["1"],"OverlayRoute":["1"],"LocalHistoryRoute":["1"],"Route":["1"],"_RoutePlaceholder":[],"PredictiveBackRoute":[]},"ScrollConfiguration":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ScrollController":{"ChangeNotifier":[],"Listenable":[]},"ScrollIncrementType":{"_Enum":[],"Enum":[]},"ScrollIntent":{"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"ScrollAction":{"ContextAction":["ScrollIntent"],"Action":["ScrollIntent"],"_Action_Object_Diagnosticable":[],"Diagnosticable":[],"Action.T":"ScrollIntent","ContextAction.T":"ScrollIntent"},"MultiSelectableSelectionContainerDelegate":{"_MultiSelectableSelectionContainerDelegate_SelectionContainerDelegate_ChangeNotifier":[],"SelectionContainerDelegate":[],"SelectionHandler":[],"ValueListenable":["SelectionGeometry"],"ChangeNotifier":[],"Listenable":[],"SelectionRegistrar":[]},"_MultiSelectableSelectionContainerDelegate_SelectionContainerDelegate_ChangeNotifier":{"SelectionContainerDelegate":[],"SelectionHandler":[],"ValueListenable":["SelectionGeometry"],"ChangeNotifier":[],"Listenable":[],"SelectionRegistrar":[]},"SelectionContainer":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_SelectionContainerState":{"__SelectionContainerState_State_Selectable_SelectionRegistrant":[],"__SelectionContainerState_State_Selectable":[],"SelectionRegistrant":[],"Selectable":[],"State0":["SelectionContainer"],"SelectionHandler":[],"_State_Object_Diagnosticable":[],"ValueListenable":["SelectionGeometry"],"Diagnosticable":[],"Listenable":[],"State0.T":"SelectionContainer"},"SelectionRegistrarScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"SelectionContainerDelegate":{"SelectionHandler":[],"ValueListenable":["SelectionGeometry"],"Listenable":[],"SelectionRegistrar":[]},"__SelectionContainerState_State_Selectable":{"Selectable":[],"State0":["SelectionContainer"],"SelectionHandler":[],"_State_Object_Diagnosticable":[],"ValueListenable":["SelectionGeometry"],"Diagnosticable":[],"Listenable":[]},"__SelectionContainerState_State_Selectable_SelectionRegistrant":{"__SelectionContainerState_State_Selectable":[],"SelectionRegistrant":[],"Selectable":[],"State0":["SelectionContainer"],"SelectionHandler":[],"_State_Object_Diagnosticable":[],"ValueListenable":["SelectionGeometry"],"Diagnosticable":[],"Listenable":[]},"SemanticsDebugger":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_SemanticsDebuggerState":{"__SemanticsDebuggerState_State_WidgetsBindingObserver":[],"State0":["SemanticsDebugger"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"WidgetsBindingObserver":[],"State0.T":"SemanticsDebugger"},"_SemanticsDebuggerPainter":{"CustomPainter":[],"Listenable":[]},"_IgnorePointerWithSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_RenderIgnorePointerWithSemantics":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"__SemanticsDebuggerState_State_WidgetsBindingObserver":{"State0":["SemanticsDebugger"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"WidgetsBindingObserver":[]},"SharedAppData":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_SharedAppDataState":{"State0":["SharedAppData"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"SharedAppData"},"_SharedAppModel":{"InheritedModel":["Object"],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"InheritedModel.T":"Object"},"LockState":{"_Enum":[],"Enum":[]},"ShortcutMapProperty":{"DiagnosticsProperty":["Map<ShortcutActivator,Intent>"],"DiagnosticsNode":[],"DiagnosticsProperty.T":"Map<ShortcutActivator,Intent>"},"SingleActivator":{"_SingleActivator_Object_Diagnosticable_MenuSerializableShortcut":[],"_SingleActivator_Object_Diagnosticable":[],"MenuSerializableShortcut":[],"Diagnosticable":[],"ShortcutActivator":[]},"_ActivatorIntentPair":{"__ActivatorIntentPair_Object_Diagnosticable":[],"Diagnosticable":[]},"ShortcutManager":{"_ShortcutManager_Object_Diagnosticable_ChangeNotifier":[],"_ShortcutManager_Object_Diagnosticable":[],"ChangeNotifier":[],"Diagnosticable":[],"Listenable":[]},"Shortcuts":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_ShortcutsState":{"State0":["Shortcuts"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"Shortcuts"},"ShortcutRegistry":{"_ShortcutRegistry_Object_ChangeNotifier":[],"ChangeNotifier":[],"Listenable":[]},"ShortcutRegistrar":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_ShortcutRegistrarState":{"State0":["ShortcutRegistrar"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"ShortcutRegistrar"},"_ShortcutRegistrarScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_ShortcutManager_Object_Diagnosticable":{"Diagnosticable":[]},"_ShortcutManager_Object_Diagnosticable_ChangeNotifier":{"_ShortcutManager_Object_Diagnosticable":[],"ChangeNotifier":[],"Diagnosticable":[],"Listenable":[]},"_ShortcutRegistry_Object_ChangeNotifier":{"ChangeNotifier":[],"Listenable":[]},"_SingleActivator_Object_Diagnosticable":{"Diagnosticable":[]},"_SingleActivator_Object_Diagnosticable_MenuSerializableShortcut":{"_SingleActivator_Object_Diagnosticable":[],"MenuSerializableShortcut":[],"Diagnosticable":[],"ShortcutActivator":[]},"__ActivatorIntentPair_Object_Diagnosticable":{"Diagnosticable":[]},"SnapshotMode":{"_Enum":[],"Enum":[]},"SnapshotController":{"ChangeNotifier":[],"Listenable":[]},"SnapshotWidget":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_RenderSnapshotWidget":{"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"SnapshotPainter":{"ChangeNotifier":[],"Listenable":[]},"_DefaultSnapshotPainter":{"SnapshotPainter":[],"ChangeNotifier":[],"Listenable":[]},"TapRegionSurface":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"RenderTapRegionSurface":{"RenderProxyBoxWithHitTestBehavior":[],"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"TapRegionRegistry":[],"RenderObjectWithChildMixin.0":"RenderBox"},"_DummyTapRecognizer":{"GestureArenaMember":[]},"RenderTapRegion":{"RenderProxyBoxWithHitTestBehavior":[],"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"DefaultTextStyle":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_NullWidget2":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"DefaultTextHeightBehavior":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"Text0":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_SelectableTextContainer":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_SelectableTextContainerState":{"State0":["_SelectableTextContainer"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"_SelectableTextContainer"},"_RichText":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_SelectableTextContainerDelegate":{"MultiSelectableSelectionContainerDelegate":[],"_MultiSelectableSelectionContainerDelegate_SelectionContainerDelegate_ChangeNotifier":[],"SelectionContainerDelegate":[],"SelectionHandler":[],"ValueListenable":["SelectionGeometry"],"ChangeNotifier":[],"Listenable":[],"SelectionRegistrar":[]},"DoNothingAndStopPropagationTextIntent":{"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"DirectionalTextEditingIntent":{"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"DeleteCharacterIntent":{"DirectionalTextEditingIntent":[],"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"DeleteToNextWordBoundaryIntent":{"DirectionalTextEditingIntent":[],"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"DeleteToLineBreakIntent":{"DirectionalTextEditingIntent":[],"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"DirectionalCaretMovementIntent":{"DirectionalTextEditingIntent":[],"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"ExtendSelectionByCharacterIntent":{"DirectionalCaretMovementIntent":[],"DirectionalTextEditingIntent":[],"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"ExtendSelectionToNextWordBoundaryIntent":{"DirectionalCaretMovementIntent":[],"DirectionalTextEditingIntent":[],"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"ExtendSelectionToNextWordBoundaryOrCaretLocationIntent":{"DirectionalCaretMovementIntent":[],"DirectionalTextEditingIntent":[],"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"ExpandSelectionToDocumentBoundaryIntent":{"DirectionalCaretMovementIntent":[],"DirectionalTextEditingIntent":[],"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"ExpandSelectionToLineBreakIntent":{"DirectionalCaretMovementIntent":[],"DirectionalTextEditingIntent":[],"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"ExtendSelectionToLineBreakIntent":{"DirectionalCaretMovementIntent":[],"DirectionalTextEditingIntent":[],"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"ExtendSelectionVerticallyToAdjacentLineIntent":{"DirectionalCaretMovementIntent":[],"DirectionalTextEditingIntent":[],"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"ExtendSelectionVerticallyToAdjacentPageIntent":{"DirectionalCaretMovementIntent":[],"DirectionalTextEditingIntent":[],"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"ExtendSelectionToNextParagraphBoundaryIntent":{"DirectionalCaretMovementIntent":[],"DirectionalTextEditingIntent":[],"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent":{"DirectionalCaretMovementIntent":[],"DirectionalTextEditingIntent":[],"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"ExtendSelectionToDocumentBoundaryIntent":{"DirectionalCaretMovementIntent":[],"DirectionalTextEditingIntent":[],"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"ScrollToDocumentBoundaryIntent":{"DirectionalTextEditingIntent":[],"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"SelectAllTextIntent":{"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"CopySelectionTextIntent":{"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"PasteTextIntent":{"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"RedoTextIntent":{"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"UndoTextIntent":{"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"TransposeCharactersIntent":{"Intent":[],"_Intent_Object_Diagnosticable":[],"Diagnosticable":[]},"TickerMode":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_TickerModeState":{"State0":["TickerMode"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"TickerMode"},"_EffectiveTickerMode":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"SingleTickerProviderStateMixin":{"State0":["1"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[]},"TickerProviderStateMixin":{"State0":["1"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[]},"_WidgetTicker":{"Ticker":[]},"_ConstantValueListenable":{"ValueListenable":["1"],"Listenable":[]},"Title":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"AnimatedWidget":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_AnimatedState":{"State0":["AnimatedWidget"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"State0.T":"AnimatedWidget"},"SlideTransition":{"AnimatedWidget":[],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"FadeTransition":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"DecoratedBoxTransition":{"AnimatedWidget":[],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"ListenableBuilder":{"AnimatedWidget":[],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"AnimatedBuilder":{"ListenableBuilder":[],"AnimatedWidget":[],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"WidgetSpan":{"PlaceholderSpan":[],"InlineSpan":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_WidgetSpanParentData":{"ParentDataWidget":["TextParentData"],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"ParentDataWidget.T":"TextParentData"},"_AutoScaleInlineWidget":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_RenderScaledInlineWidget":{"__RenderScaledInlineWidget_RenderBox_RenderObjectWithChildMixin":[],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"__RenderScaledInlineWidget_RenderBox_RenderObjectWithChildMixin":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[]},"WidgetState":{"_Enum":[],"Enum":[]},"WidgetStateColor":{"Color":[],"WidgetStateProperty":["Color"]},"_WidgetStateColor":{"WidgetStateColor":[],"Color":[],"WidgetStateProperty":["Color"]},"WidgetStateMouseCursor":{"MouseCursor0":[],"_MouseCursor_Object_Diagnosticable":[],"Diagnosticable":[],"WidgetStateProperty":["MouseCursor0"]},"_EnabledAndDisabledMouseCursor":{"WidgetStateMouseCursor":[],"MouseCursor0":[],"_MouseCursor_Object_Diagnosticable":[],"Diagnosticable":[],"WidgetStateProperty":["MouseCursor0"]},"WidgetStateBorderSide":{"BorderSide":[],"_BorderSide_Object_Diagnosticable":[],"Diagnosticable":[],"WidgetStateProperty":["BorderSide?"]},"_LerpSides":{"WidgetStateProperty":["BorderSide?"]},"_LerpProperties":{"WidgetStateProperty":["1?"]},"_WidgetStatePropertyWith":{"WidgetStateProperty":["1"]},"WidgetStatePropertyAll":{"WidgetStateProperty":["1"]},"WidgetStatesController":{"ValueNotifier":["Set<WidgetState>"],"ChangeNotifier":[],"ValueListenable":["Set<WidgetState>"],"Listenable":[],"ValueNotifier.T":"Set<WidgetState>"},"TonePolarity":{"_Enum":[],"Enum":[]},"Variant":{"_Enum":[],"Enum":[]},"SchemeContent":{"DynamicScheme":[]},"SchemeExpressive":{"DynamicScheme":[]},"SchemeFidelity":{"DynamicScheme":[]},"SchemeFruitSalad":{"DynamicScheme":[]},"SchemeMonochrome":{"DynamicScheme":[]},"SchemeNeutral":{"DynamicScheme":[]},"SchemeRainbow":{"DynamicScheme":[]},"SchemeTonalSpot":{"DynamicScheme":[]},"SchemeVibrant":{"DynamicScheme":[]},"CounterWidget":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"LinkedList":{"Iterable":["1"],"Iterable.E":"1"},"_LinkedListIterator":{"Iterator":["1"]},"CharacterRange":{"Iterator":["String"]},"_ForceState":{"_Enum":[],"Enum":[]},"ForcePressGestureRecognizer":{"OneSequenceGestureRecognizer":[],"GestureRecognizer":[],"_GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"GestureArenaMember":[],"Diagnosticable":[]},"_ScaleState":{"_Enum":[],"Enum":[]},"ScaleGestureRecognizer":{"OneSequenceGestureRecognizer":[],"GestureRecognizer":[],"_GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"GestureArenaMember":[],"Diagnosticable":[]},"MaterialBannerClosedReason":{"_Enum":[],"Enum":[]},"MaterialBanner":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"BottomNavigationBarType":{"_Enum":[],"Enum":[]},"BottomNavigationBarLandscapeLayout":{"_Enum":[],"Enum":[]},"InkSparkle":{"InteractiveInkFeature":[],"InkFeature":[]},"_InkSparkleFactory":{"InteractiveInkFeatureFactory":[]},"InputBorder":{"ShapeBorder":[]},"ListTileStyle":{"_Enum":[],"Enum":[]},"ListTileTitleAlignment":{"_Enum":[],"Enum":[]},"NavigationDestinationLabelBehavior":{"_Enum":[],"Enum":[]},"NavigationRailLabelType":{"_Enum":[],"Enum":[]},"SliderInteraction":{"_Enum":[],"Enum":[]},"TabBarIndicatorSize":{"_Enum":[],"Enum":[]},"TabAlignment":{"_Enum":[],"Enum":[]},"_ExclusiveMouseRegion":{"MouseRegion":[],"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_RenderExclusiveMouseRegion":{"RenderMouseRegion":[],"RenderProxyBoxWithHitTestBehavior":[],"RenderProxyBox":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin":[],"_RenderProxyBox_RenderBox_RenderObjectWithChildMixin":[],"RenderProxyBoxMixin":["RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"_RenderObject_Object_DiagnosticableTreeMixin":[],"DiagnosticableTreeMixin":[],"DiagnosticableTree":[],"MouseTrackerAnnotation":[],"_DiagnosticableTree_Object_Diagnosticable":[],"_MouseTrackerAnnotation_Object_Diagnosticable":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"Tooltip":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"TooltipState":{"_TooltipState_State_SingleTickerProviderStateMixin":[],"SingleTickerProviderStateMixin":["Tooltip"],"State0":["Tooltip"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[],"State0.T":"Tooltip"},"_TooltipPositionDelegate":{"SingleChildLayoutDelegate":[]},"_TooltipOverlay":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"_TooltipState_State_SingleTickerProviderStateMixin":{"SingleTickerProviderStateMixin":["Tooltip"],"State0":["Tooltip"],"_State_Object_Diagnosticable":[],"Diagnosticable":[],"TickerProvider":[]},"_TooltipVisibilityScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"BoxDecoration":{"Decoration":[],"_Decoration_Object_Diagnosticable":[],"Diagnosticable":[]},"_BoxDecorationPainter":{"BoxPainter":[]},"BoxShadow":{"Shadow":[]},"_BlendedDecorationImage":{"DecorationImage":[]},"_BlendedDecorationImagePainter":{"DecorationImagePainter":[]},"PlaceholderSpan":{"InlineSpan":[],"DiagnosticableTree":[],"_DiagnosticableTree_Object_Diagnosticable":[],"Diagnosticable":[]},"StrutStyle":{"_StrutStyle_Object_Diagnosticable":[],"Diagnosticable":[]},"DismissDirection":{"_Enum":[],"Enum":[]},"ScrollPosition":{"_ScrollPosition_ViewportOffset_ScrollMetrics":[],"ViewportOffset":[],"ChangeNotifier":[],"Listenable":[],"ScrollMetrics":[]},"Vector2":{"Vector":[]},"_MouseTrackerAnnotation_Object_Diagnosticable":{"Diagnosticable":[]}}'));
  var string$ = {
    x25_of_t: "% of the way to being a CircleBorder that is ",
    E53333: 'E533333333333333333333333333DDDDDDD4333333333333333333334C43333CD53333333333333333333333UEDTE4\x933343333\x933333333333333333333333333D433333333333333333CDDEDDD43333333S5333333333333333333333C333333D533333333333333333333333SUDDDDT5\x9933CD4E333333333333333333333333UEDDDDE433333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333TUUS5CT\x94\x95E3333333333333333333333333333333333333333333333333333333333333333333333SUDD3DUU43533333333333333333C3333333333333w733337333333s3333333w7333333333w33333333333333333333CDDTETE43333ED4S5SE3333C33333D33333333333334E433C3333333C33333333333333333333333333333CETUTDT533333CDDDDDDDDDD3333333343333333D$433333333333333333333333SUDTEE433C34333333333333333333333333333333333333333333333333333333333333333333333333333333TUDDDD3333333333CT5333333333333333333333333333DCEUU3U3U5333343333S5CDDD3CDD333333333333333333333333333333333333333333333333333333333333333333333s73333s33333333333""""""""333333339433333333333333CDDDDDDDDDDDDDDDD3333333CDDDDDDDDDDD\x94DDDDDDDDDDDDDDDDDDDDDDDD33333333DDDDDDDD3333333373s333333333333333333333333333333CDTDDDCTE43C4CD3C333333333333333D3C33333\xee\xee\xed\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xed\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xed\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee333333\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb33\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc<3sww73333swwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww7333swwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww7333333w7333333333333333733333333333333333333333333333sww733333s7333333s3wwwww333333333wwwwwwwwwwwwwwwwwwwwwwwwwwwwgffffffffffffvww7wwwwwwswwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww733333333333333333333333swwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww7333333333333333333333333333333333333333333333333333333333swwwww7333333333333333333333333333333333333333333wwwwwwwwwwwwwwwwwwwww7swwwwwss33373733s33333w33333CT333333333333333EDTETD433333333#\x14"333333333333"""233333373ED4U5UE9333C33333D33333333333333www3333333ss333333333333swwwww33w733wwwwwww73333s33333333337swwwwsw73333wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwDD4D33CDDDDDCDDDDDDDDDDDDDDDDD43EDDDTUEUCDDD33333D33333333333333DDCDDDDCDCDD333333333DT33333333333333D5333333333333333333333333333CSUE4333333333333CDDDDDDDD4333333DT33333333333333333333333CUDDUDU3SUSU43333433333333333333333333ET533E3333SDD3U3U4333D43333C43333333333333s733333s33333333333CTE333333333333333333UUUUDDDDUD3333"""""(\xs373ss33w7733333ww733333333333ss33333333333333333333333333333ww3333333333333333333333333333wwww33333www33333333333333333333wwww333333333333333wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww333333wwwwwwwwwwwwwwwwwwwwwww7wwwwwswwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwx94433333333333333333333333333333333SUUC4UT4333333333333333333333333333333333333333333333333333#"""""""B333DDDDDDD433333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333CED3SDD$"""BDDD4CDDD333333333333333DD33333333333333333333333333333333333333333DEDDDUE333333333333333333333333333CCD3D33CD533333333333333333333333333CESEU3333333333333333333DDDD433333CU33333333333333333333333333334DC44333333333333333333333333333CD4DDDDD33333333333333333333DDD\x95DD333343333DDDUD43333333333333333333\x93\x99\xxaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa:3\x99\x99\x9933333DDDDD4233333333333333333UTEUS433333333CDCDDDDDDEDDD33433C3E433#"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""BDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD$"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""BDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD$"""""""""""""""2333373r33333333\x93933CDDD4333333333333333CDUUDU53SEUUUD43\xa3\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xba\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xcb\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\f',
    max_mu: "max must be in range 0 < max \u2264 2^32, was ",
    no_wra: "no wrapping except at line break characters",
    u1ac4_____: "\u1ac4\u2bb8\u411f\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u3f4f\u0814\u32b6\u32b6\u32b6\u32b6\u1f81\u32b6\u32b6\u32b6\u1bbb\u2f6f\u3cc2\u051e\u32b6\u11d3\u079b\u2c12\u3967\u1b18\u18aa\u392b\u414f\u07f1\u2eb5\u1880\u1123\u047a\u1909\u08c6\u1909\u11af\u2f32\u1a19\u04d1\u19c3\u2e6b\u209a\u1298\u1259\u0667\u108e\u1160\u3c49\u116f\u1b03\u12a3\u1f7c\u121b\u2023\u1840\u34b0\u088a\u3c13\u04b6\u32b6\u41af\u41cf\u41ef\u4217\u32b6\u32b6\u32b6\u32b6\u32b6\u3927\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u18d8\u1201\u2e2e\u15be\u0553\u32b6\u3be9\u32b6\u416f\u32b6\u32b6\u32b6\u1a68\u10e5\u2a59\u2c0e\u205e\u2ef3\u1019\u04e9\u1a84\u32b6\u32b6\u3d0f\u32b6\u32b6\u32b6\u3f4f\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u104e\u076a\u32b6\u07bb\u15dc\u32b6\u10ba\u32b6\u32b6\u32b6\u32b6\u32b6\u1a3f\u32b6\u0cf2\u1606\u32b6\u32b6\u32b6\u0877\u32b6\u32b6\u073d\u2139\u0dcb\u0bcb\u09b3\u0bcb\u0fd9\u20f7\u03e3\u32b6\u32b6\u32b6\u32b6\u32b6\u0733\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u041d\u0864\u32b6\u32b6\u32b6\u32b6\u32b6\u3915\u32b6\u3477\u32b6\u3193\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u20be\u32b6\u36b1\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u2120\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u2f80\u36ac\u369a\u32b6\u32b6\u32b6\u32b6\u1b8c\u32b6\u1584\u1947\u1ae4\u3c82\u1986\u03b8\u043a\u1b52\u2e77\u19d9\u32b6\u32b6\u32b6\u3cdf\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u093a\u0973\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u3498\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u0834\u32b6\u32b6\u2bb8\u32b6\u32b6\u36ac\u35a6\u32b9\u33d6\u32b6\u32b6\u32b6\u35e5\u24ee\u3847\x00\u0567\u3a12\u2826\u01d4\u2fb3\u29f7\u36f2\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u2bc7\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u1e54\u32b6\u1394\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u2412\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u30b3\u2c62\u3271\u32b6\u32b6\u32b6\u12e3\u32b6\u32b6\u1bf2\u1d44\u2526\u32b6\u2656\u32b6\u32b6\u32b6\u0bcb\u1645\u0a85\u0ddf\u2168\u22af\u09c3\u09c5\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u3f2f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6"
  };
  var type$ = (function rtii() {
    var findType = B.findType;
    return {
      Accumulator: findType("Accumulator"),
      ActionDispatcher: findType("ActionDispatcher"),
      ActionIconThemeData: findType("ActionIconThemeData"),
      Action_Intent: findType("Action<Intent>"),
      Action_dynamic: findType("Action<@>"),
      Actions: findType("Actions"),
      ActivateIntent: findType("ActivateIntent"),
      Adaptation_Object: findType("Adaptation<Object>"),
      Adaptation_dynamic: findType("Adaptation<@>"),
      Alignment: findType("Alignment"),
      AlignmentDirectional: findType("AlignmentDirectional"),
      AlignmentGeometry: findType("AlignmentGeometry"),
      Animatable_double: findType("Animatable<double>"),
      AnimatedWidget: findType("AnimatedWidget"),
      AnimationController: findType("AnimationController"),
      AnimationStatus: findType("AnimationStatus"),
      AnimationStyle: findType("AnimationStyle"),
      Animation_Decoration: findType("Animation<Decoration>"),
      Animation_Offset: findType("Animation<Offset>"),
      Animation_double: findType("Animation<double>"),
      Animation_int: findType("Animation<int>"),
      Animation_nullable_Color: findType("Animation<Color?>"),
      AppBarTheme: findType("AppBarTheme"),
      AppLifecycleState: findType("AppLifecycleState"),
      Axis: findType("Axis"),
      BadgeThemeData: findType("BadgeThemeData"),
      BorderRadius: findType("BorderRadius"),
      BorderRadiusGeometry: findType("BorderRadiusGeometry"),
      BorderSide: findType("BorderSide"),
      BorderStyle: findType("BorderStyle"),
      BottomAppBarTheme: findType("BottomAppBarTheme"),
      BottomNavigationBarLandscapeLayout: findType("BottomNavigationBarLandscapeLayout"),
      BottomNavigationBarThemeData: findType("BottomNavigationBarThemeData"),
      BottomNavigationBarType: findType("BottomNavigationBarType"),
      BottomSheetThemeData: findType("BottomSheetThemeData"),
      BoxConstraints: findType("BoxConstraints"),
      BoxHeightStyle: findType("BoxHeightStyle"),
      BoxHitTestResult: findType("BoxHitTestResult"),
      BoxParentData: findType("BoxParentData"),
      BoxShape: findType("BoxShape"),
      BoxWidthStyle: findType("BoxWidthStyle"),
      Brightness: findType("Brightness"),
      BuildContext: findType("BuildContext"),
      ButtonActivateIntent: findType("ButtonActivateIntent"),
      ButtonBarLayoutBehavior: findType("ButtonBarLayoutBehavior"),
      ButtonBarThemeData: findType("ButtonBarThemeData"),
      ButtonStyle: findType("ButtonStyle"),
      ButtonStyleButton: findType("ButtonStyleButton"),
      ButtonTextTheme: findType("ButtonTextTheme"),
      ButtonThemeData: findType("ButtonThemeData"),
      Canvas: findType("Canvas"),
      CardTheme: findType("CardTheme"),
      CheckboxThemeData: findType("CheckboxThemeData"),
      ChildBackButtonDispatcher: findType("ChildBackButtonDispatcher"),
      ChipThemeData: findType("ChipThemeData"),
      ClearSelectionEvent: findType("ClearSelectionEvent"),
      Clip: findType("Clip"),
      ClipRectLayer: findType("ClipRectLayer"),
      Color: findType("Color"),
      ColorScheme: findType("ColorScheme"),
      ContainerLayer: findType("ContainerLayer0"),
      ContainerRenderObjectMixin_of_RenderObject_and_ContainerParentDataMixin_RenderObject: findType("ContainerRenderObjectMixin<RenderObject,ContainerParentDataMixin<RenderObject>>"),
      CrossAxisAlignment: findType("CrossAxisAlignment"),
      CupertinoDynamicColor: findType("CupertinoDynamicColor"),
      CupertinoFullscreenDialogTransition: findType("CupertinoFullscreenDialogTransition"),
      CupertinoLocalizations: findType("CupertinoLocalizations"),
      CupertinoPageTransition: findType("CupertinoPageTransition"),
      CupertinoUserInterfaceLevel: findType("CupertinoUserInterfaceLevel"),
      Curve: findType("Curve"),
      CurvedAnimation: findType("CurvedAnimation"),
      CustomClipper_Path: findType("CustomClipper<Path>"),
      CustomPainter: findType("CustomPainter"),
      DataTableThemeData: findType("DataTableThemeData"),
      DatePickerThemeData: findType("DatePickerThemeData"),
      Decoration: findType("Decoration"),
      DecorationPosition: findType("DecorationPosition"),
      DefaultAssetBundle: findType("DefaultAssetBundle"),
      DefaultSelectionStyle: findType("DefaultSelectionStyle"),
      DefaultTextHeightBehavior: findType("DefaultTextHeightBehavior"),
      DefaultTextStyle: findType("DefaultTextStyle"),
      DiagnosticPropertiesBuilder: findType("DiagnosticPropertiesBuilder"),
      DiagnosticsNode: findType("DiagnosticsNode"),
      DialogTheme: findType("DialogTheme"),
      DirectionalFocusIntent: findType("DirectionalFocusIntent"),
      Directionality: findType("Directionality"),
      DirectionallyExtendSelectionEvent: findType("DirectionallyExtendSelectionEvent"),
      DismissDirection: findType("DismissDirection"),
      DismissIntent: findType("DismissIntent"),
      DividerThemeData: findType("DividerThemeData"),
      DoubleTapGestureRecognizer: findType("DoubleTapGestureRecognizer"),
      DragEndDetails: findType("DragEndDetails"),
      DragStartBehavior: findType("DragStartBehavior"),
      DragStartDetails: findType("DragStartDetails"),
      DragUpdateDetails: findType("DragUpdateDetails"),
      DrawerThemeData: findType("DrawerThemeData"),
      DropdownMenuThemeData: findType("DropdownMenuThemeData"),
      DualTransitionBuilder: findType("DualTransitionBuilder"),
      Duration: findType("Duration"),
      DynamicScheme: findType("DynamicScheme"),
      EdgeInsets: findType("EdgeInsets"),
      EdgeInsetsDirectional: findType("EdgeInsetsDirectional"),
      EdgeInsetsGeometry: findType("EdgeInsetsGeometry"),
      EfficientLengthIterable_dynamic: findType("EfficientLengthIterable<@>"),
      Element: findType("Element0"),
      ElevatedButtonThemeData: findType("ElevatedButtonThemeData"),
      ExpansionTileThemeData: findType("ExpansionTileThemeData"),
      FilledButtonThemeData: findType("FilledButtonThemeData"),
      FlexParentData: findType("FlexParentData"),
      FloatingActionButtonThemeData: findType("FloatingActionButtonThemeData"),
      FloatingLabelAlignment: findType("FloatingLabelAlignment"),
      FloatingLabelBehavior: findType("FloatingLabelBehavior"),
      FocusHighlightMode: findType("FocusHighlightMode"),
      FocusNode: findType("FocusNode"),
      FontFeature: findType("FontFeature"),
      FontStyle: findType("FontStyle"),
      FontVariation: findType("FontVariation"),
      FontWeight: findType("FontWeight"),
      Function: findType("Function"),
      Future_bool: findType("Future<bool>"),
      Future_bool_Function: findType("Future<bool>()"),
      Future_dynamic: findType("Future<@>"),
      GeneralConstantMap_ShortcutActivator_Intent: findType("GeneralConstantMap<ShortcutActivator,Intent>"),
      GeneralConstantMap_int_Color: findType("GeneralConstantMap<int,Color>"),
      GeneralConstantSet_WidgetState: findType("GeneralConstantSet<WidgetState>"),
      GestureArenaEntry: findType("GestureArenaEntry"),
      GestureDisposition: findType("GestureDisposition"),
      GestureRecognizer: findType("GestureRecognizer"),
      GestureRecognizerFactory_GestureRecognizer: findType("GestureRecognizerFactory<GestureRecognizer>"),
      GestureRecognizerState: findType("GestureRecognizerState"),
      GlobalKey_OverlayState: findType("GlobalKey<OverlayState>"),
      GlyphInfo: findType("GlyphInfo"),
      GranularlyExtendSelectionEvent: findType("GranularlyExtendSelectionEvent"),
      HardwareKeyboard: findType("HardwareKeyboard"),
      Hct: findType("Hct"),
      Hero: findType("Hero"),
      HeroController: findType("HeroController"),
      HeroControllerScope: findType("HeroControllerScope"),
      HeroFlightDirection: findType("HeroFlightDirection"),
      HitTestBehavior: findType("HitTestBehavior"),
      HitTestEntry_HitTestTarget: findType("HitTestEntry<HitTestTarget>"),
      HitTestTarget: findType("HitTestTarget"),
      HorizontalDragGestureRecognizer: findType("HorizontalDragGestureRecognizer"),
      IconButtonTheme: findType("IconButtonTheme"),
      IconButtonThemeData: findType("IconButtonThemeData"),
      IconTheme: findType("IconTheme"),
      IconThemeData: findType("IconThemeData"),
      Image: findType("Image"),
      ImageConfiguration: findType("ImageConfiguration"),
      IndexedSlot_nullable_Element: findType("IndexedSlot<Element0?>"),
      InheritedCupertinoTheme: findType("InheritedCupertinoTheme"),
      InheritedElement: findType("InheritedElement"),
      InheritedWidget: findType("InheritedWidget"),
      InkFeature: findType("InkFeature"),
      InlineSpan: findType("InlineSpan"),
      InputBorder: findType("InputBorder"),
      InputDecorationTheme: findType("InputDecorationTheme"),
      Intent: findType("Intent"),
      InteractiveInkFeature: findType("InteractiveInkFeature"),
      InteractiveInkFeatureFactory: findType("InteractiveInkFeatureFactory"),
      Iterable_HitTestEntry_HitTestTarget: findType("Iterable<HitTestEntry<HitTestTarget>>"),
      Iterable_Locale: findType("Iterable<Locale>"),
      Iterable_OverlayEntry: findType("Iterable<OverlayEntry>"),
      Iterable_RenderBox: findType("Iterable<RenderBox>"),
      Iterable_SemanticsNode: findType("Iterable<SemanticsNode>"),
      Iterable__RouteEntry: findType("Iterable<_RouteEntry>"),
      Iterable_dynamic: findType("Iterable<@>"),
      JSArray_Adaptation_Object: findType("JSArray<Adaptation<Object>>"),
      JSArray_AttributedString: findType("JSArray<AttributedString>"),
      JSArray_Color: findType("JSArray<Color>"),
      JSArray_DiagnosticsNode: findType("JSArray<DiagnosticsNode>"),
      JSArray_FontVariation: findType("JSArray<FontVariation>"),
      JSArray_Future_void: findType("JSArray<Future<~>>"),
      JSArray_Hct: findType("JSArray<Hct>"),
      JSArray_InkFeature: findType("JSArray<InkFeature>"),
      JSArray_InlineSpan: findType("JSArray<InlineSpan>"),
      JSArray_InlineSpanSemanticsInformation: findType("JSArray<InlineSpanSemanticsInformation>"),
      JSArray_List_double: findType("JSArray<List<double>>"),
      JSArray_Listenable: findType("JSArray<Listenable>"),
      JSArray_Locale: findType("JSArray<Locale>"),
      JSArray_LocalizationsDelegate_dynamic: findType("JSArray<LocalizationsDelegate<@>>"),
      JSArray_LogicalKeyboardKey: findType("JSArray<LogicalKeyboardKey>"),
      JSArray_NavigatorObserver: findType("JSArray<NavigatorObserver>"),
      JSArray_Object: findType("JSArray<Object>"),
      JSArray_OverlayEntry: findType("JSArray<OverlayEntry>"),
      JSArray_PlaceholderDimensions: findType("JSArray<PlaceholderDimensions>"),
      JSArray_Rect: findType("JSArray<Rect>"),
      JSArray_RenderObject: findType("JSArray<RenderObject>"),
      JSArray_ScrollPosition: findType("JSArray<ScrollPosition>"),
      JSArray_Selectable: findType("JSArray<Selectable>"),
      JSArray_SemanticsNode: findType("JSArray<SemanticsNode>"),
      JSArray_Shadow: findType("JSArray<Shadow>"),
      JSArray_ShapeBorder: findType("JSArray<ShapeBorder>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_StringAttribute: findType("JSArray<StringAttribute>"),
      JSArray_TextBox: findType("JSArray<TextBox>"),
      JSArray_ThemeExtension_ThemeExtension_dynamic: findType("JSArray<ThemeExtension<ThemeExtension<@>>>"),
      JSArray_Widget: findType("JSArray<Widget>"),
      JSArray__ActivatorIntentPair: findType("JSArray<_ActivatorIntentPair>"),
      JSArray__Interval: findType("JSArray<_Interval>"),
      JSArray__OverlayEntryWidget: findType("JSArray<_OverlayEntryWidget>"),
      JSArray__Pending: findType("JSArray<_Pending>"),
      JSArray__RouteEntry: findType("JSArray<_RouteEntry>"),
      JSArray__SelectableFragment: findType("JSArray<_SelectableFragment>"),
      JSArray_double: findType("JSArray<double>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_nullable_LogicalKeyboardKey: findType("JSArray<LogicalKeyboardKey?>"),
      JSArray_nullable_Route_dynamic: findType("JSArray<Route<@>?>"),
      JSArray_nullable_ShapeBorder: findType("JSArray<ShapeBorder?>"),
      JSArray_of_Future_bool_Function: findType("JSArray<Future<bool>()>"),
      Key: findType("Key"),
      KeyDownEvent: findType("KeyDownEvent"),
      KeyEvent: findType("KeyEvent"),
      KeyRepeatEvent: findType("KeyRepeatEvent"),
      Layer: findType("Layer0"),
      LayerLink: findType("LayerLink"),
      LayoutChangedNotification: findType("LayoutChangedNotification"),
      LineMetrics: findType("LineMetrics"),
      LinkedHashSet_ChildBackButtonDispatcher: findType("LinkedHashSet<ChildBackButtonDispatcher>"),
      ListTileStyle: findType("ListTileStyle"),
      ListTileThemeData: findType("ListTileThemeData"),
      ListTileTitleAlignment: findType("ListTileTitleAlignment"),
      List_Element: findType("List<Element0>"),
      List_Hct: findType("List<Hct>"),
      List_InlineSpanSemanticsInformation: findType("List<InlineSpanSemanticsInformation>"),
      List_NavigatorObserver: findType("List<NavigatorObserver>"),
      List_Object: findType("List<Object>"),
      List_OverlayEntry: findType("List<OverlayEntry>"),
      List_Selectable: findType("List<Selectable>"),
      List_String: findType("List<String>"),
      List_TextBox: findType("List<TextBox>"),
      List__ActivatorIntentPair: findType("List<_ActivatorIntentPair>"),
      List_dynamic: findType("List<@>"),
      List_nullable_Object: findType("List<Object?>"),
      List_of_nullable_void_Function: findType("List<~()?>"),
      Listenable: findType("Listenable"),
      Locale: findType("Locale"),
      Localizations: findType("Localizations"),
      LocalizationsDelegate_dynamic: findType("LocalizationsDelegate<@>"),
      LogicalKeyboardKey: findType("LogicalKeyboardKey"),
      LongPressGestureRecognizer: findType("LongPressGestureRecognizer"),
      LookupBoundary: findType("LookupBoundary"),
      MainAxisAlignment: findType("MainAxisAlignment"),
      MainAxisSize: findType("MainAxisSize"),
      MapEntry_of_Object_and_ThemeExtension_dynamic: findType("MapEntry<Object,ThemeExtension<@>>"),
      Map_Hct_double: findType("Map<Hct,double>"),
      Map_Key_SemanticsNode: findType("Map<Key,SemanticsNode>"),
      Map_ShortcutActivator_Intent: findType("Map<ShortcutActivator,Intent>"),
      Map_TargetPlatform_PageTransitionsBuilder: findType("Map<TargetPlatform,PageTransitionsBuilder>"),
      Map_Type_GestureRecognizer: findType("Map<Type,GestureRecognizer>"),
      Map_Type_dynamic: findType("Map<Type,@>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      Map_of_Object_and_nullable_Object: findType("Map<Object,Object?>"),
      Map_of_Type_and_Action_Intent: findType("Map<Type,Action<Intent>>"),
      Map_of_Type_and_GestureRecognizerFactory_GestureRecognizer: findType("Map<Type,GestureRecognizerFactory<GestureRecognizer>>"),
      Map_of_nullable_String_and_List_Object: findType("Map<String?,List<Object>>"),
      MaterialBannerThemeData: findType("MaterialBannerThemeData"),
      MaterialInkController: findType("MaterialInkController"),
      MaterialLocalizations: findType("MaterialLocalizations"),
      MaterialPointArcTween: findType("MaterialPointArcTween"),
      MaterialTapTargetSize: findType("MaterialTapTargetSize"),
      MaterialType: findType("MaterialType"),
      Matrix4: findType("Matrix40"),
      MediaQuery: findType("MediaQuery"),
      MenuBarThemeData: findType("MenuBarThemeData"),
      MenuButtonThemeData: findType("MenuButtonThemeData"),
      MenuStyle: findType("MenuStyle"),
      MenuThemeData: findType("MenuThemeData"),
      MouseCursor: findType("MouseCursor0"),
      MultiChildRenderObjectWidget: findType("MultiChildRenderObjectWidget"),
      MultitouchDragStrategy: findType("MultitouchDragStrategy"),
      NavigationBarThemeData: findType("NavigationBarThemeData"),
      NavigationDestinationLabelBehavior: findType("NavigationDestinationLabelBehavior"),
      NavigationDrawerThemeData: findType("NavigationDrawerThemeData"),
      NavigationNotification: findType("NavigationNotification"),
      NavigationRailLabelType: findType("NavigationRailLabelType"),
      NavigationRailThemeData: findType("NavigationRailThemeData"),
      Navigator: findType("Navigator"),
      NavigatorObserver: findType("NavigatorObserver"),
      NavigatorState: findType("NavigatorState"),
      NextFocusIntent: findType("NextFocusIntent"),
      NoDefaultCupertinoThemeData: findType("NoDefaultCupertinoThemeData"),
      NotchedShape: findType("NotchedShape"),
      Notification: findType("Notification"),
      Null: findType("Null"),
      Object: findType("Object"),
      Offset: findType("Offset"),
      OffsetPair: findType("OffsetPair"),
      OpacityLayer: findType("OpacityLayer"),
      OrdinalSortKey: findType("OrdinalSortKey"),
      OutlinedBorder: findType("OutlinedBorder"),
      OutlinedButtonThemeData: findType("OutlinedButtonThemeData"),
      OverlayEntry: findType("OverlayEntry"),
      OverlayState: findType("OverlayState"),
      PageRoute_dynamic: findType("PageRoute<@>"),
      PageTransitionsTheme: findType("PageTransitionsTheme"),
      Page_nullable_Object: findType("Page<Object?>"),
      Paint: findType("Paint"),
      PaintingBinding: findType("PaintingBinding"),
      PaintingContext: findType("PaintingContext"),
      PanGestureRecognizer: findType("PanGestureRecognizer"),
      Paragraph: findType("Paragraph"),
      ParagraphBuilder: findType("ParagraphBuilder"),
      PipelineOwner: findType("PipelineOwner"),
      PlaceholderDimensions: findType("PlaceholderDimensions"),
      PointerCancelEvent: findType("PointerCancelEvent"),
      PointerDeviceKind: findType("PointerDeviceKind"),
      PointerDownEvent: findType("PointerDownEvent"),
      PointerEnterEvent: findType("PointerEnterEvent"),
      PointerEvent: findType("PointerEvent"),
      PointerExitEvent: findType("PointerExitEvent"),
      PointerHoverEvent: findType("PointerHoverEvent"),
      PointerMoveEvent: findType("PointerMoveEvent"),
      PointerPanZoomEndEvent: findType("PointerPanZoomEndEvent"),
      PointerPanZoomStartEvent: findType("PointerPanZoomStartEvent"),
      PointerPanZoomUpdateEvent: findType("PointerPanZoomUpdateEvent"),
      PointerSignalEvent: findType("PointerSignalEvent"),
      PointerUpEvent: findType("PointerUpEvent"),
      PopEntry_nullable_Object: findType("PopEntry<Object?>"),
      PopupMenuThemeData: findType("PopupMenuThemeData"),
      PreviousFocusIntent: findType("PreviousFocusIntent"),
      PrimaryScrollController: findType("PrimaryScrollController"),
      PrioritizedIntents: findType("PrioritizedIntents"),
      ProgressIndicatorThemeData: findType("ProgressIndicatorThemeData"),
      ProxyAnimation: findType("ProxyAnimation"),
      ProxyWidget: findType("ProxyWidget"),
      RadioThemeData: findType("RadioThemeData"),
      Radius: findType("Radius"),
      RangeSliderThumbShape: findType("RangeSliderThumbShape"),
      RangeSliderTickMarkShape: findType("RangeSliderTickMarkShape"),
      RangeSliderTrackShape: findType("RangeSliderTrackShape"),
      RangeSliderValueIndicatorShape: findType("RangeSliderValueIndicatorShape"),
      RawGestureDetector: findType("RawGestureDetector"),
      RawMaterialButton: findType("RawMaterialButton"),
      Record_2_TextPosition_boundaryEnd_and_TextPosition_boundaryStart: findType("+boundaryEnd,boundaryStart(TextPosition,TextPosition)"),
      Record_2_TextPosition_boundaryEnd_and_TextPosition_boundaryStart_Function_TextPosition: findType("+boundaryEnd,boundaryStart(TextPosition,TextPosition)(TextPosition)"),
      Record_2_TextPosition_boundaryEnd_and_TextPosition_boundaryStart_Function_TextPosition_String: findType("+boundaryEnd,boundaryStart(TextPosition,TextPosition)(TextPosition,String)"),
      Record_2_nullable_Object_and_nullable_Object: findType("+(Object?,Object?)"),
      Rect: findType("Rect"),
      RenderAbsorbPointer: findType("RenderAbsorbPointer"),
      RenderAnimatedOpacity: findType("RenderAnimatedOpacity"),
      RenderBlockSemantics: findType("RenderBlockSemantics"),
      RenderBox: findType("RenderBox"),
      RenderClipPath: findType("RenderClipPath"),
      RenderConstrainedBox: findType("RenderConstrainedBox"),
      RenderCustomPaint: findType("RenderCustomPaint"),
      RenderDecoratedBox: findType("RenderDecoratedBox"),
      RenderExcludeSemantics: findType("RenderExcludeSemantics"),
      RenderFlex: findType("RenderFlex"),
      RenderFractionalTranslation: findType("RenderFractionalTranslation"),
      RenderIgnorePointer: findType("RenderIgnorePointer"),
      RenderMouseRegion: findType("RenderMouseRegion"),
      RenderObject: findType("RenderObject"),
      RenderOffstage: findType("RenderOffstage"),
      RenderPadding: findType("RenderPadding"),
      RenderParagraph: findType("RenderParagraph"),
      RenderPerformanceOverlay: findType("RenderPerformanceOverlay"),
      RenderPhysicalModel: findType("RenderPhysicalModel"),
      RenderPhysicalShape: findType("RenderPhysicalShape"),
      RenderPointerListener: findType("RenderPointerListener"),
      RenderPositionedBox: findType("RenderPositionedBox"),
      RenderProxyBoxWithHitTestBehavior: findType("RenderProxyBoxWithHitTestBehavior"),
      RenderSemanticsGestureHandler: findType("RenderSemanticsGestureHandler"),
      RenderStack: findType("RenderStack"),
      RenderTapRegion: findType("RenderTapRegion"),
      RequestFocusIntent: findType("RequestFocusIntent"),
      RestorableProperty_nullable_Object: findType("RestorableProperty<Object?>"),
      RestorationMixin_StatefulWidget: findType("RestorationMixin<StatefulWidget>"),
      RestorationScope: findType("RestorationScope"),
      RootRestorationScope: findType("RootRestorationScope"),
      RouteInformation: findType("RouteInformation"),
      RouteInformationReportingType: findType("RouteInformationReportingType"),
      RoutePopDisposition: findType("RoutePopDisposition"),
      RouteSettings: findType("RouteSettings"),
      Route_dynamic: findType("Route<@>"),
      Route_dynamic_Function_2_BuildContext_and_nullable_Object: findType("Route<@>(BuildContext,Object?)"),
      ScaffoldFeatureController_MaterialBanner_MaterialBannerClosedReason: findType("ScaffoldFeatureController<MaterialBanner,MaterialBannerClosedReason>"),
      ScaffoldFeatureController_SnackBar_SnackBarClosedReason: findType("ScaffoldFeatureController<SnackBar,SnackBarClosedReason>"),
      ScaffoldState: findType("ScaffoldState"),
      SceneBuilder: findType("SceneBuilder"),
      ScriptCategory: findType("ScriptCategory"),
      ScrollBehavior: findType("ScrollBehavior"),
      ScrollConfiguration: findType("ScrollConfiguration"),
      ScrollController: findType("ScrollController"),
      ScrollIntent: findType("ScrollIntent"),
      ScrollbarThemeData: findType("ScrollbarThemeData"),
      SearchBarThemeData: findType("SearchBarThemeData"),
      SearchViewThemeData: findType("SearchViewThemeData"),
      SegmentedButtonThemeData: findType("SegmentedButtonThemeData"),
      SelectAllSelectionEvent: findType("SelectAllSelectionEvent"),
      SelectParagraphSelectionEvent: findType("SelectParagraphSelectionEvent"),
      SelectWordSelectionEvent: findType("SelectWordSelectionEvent"),
      Selectable: findType("Selectable"),
      SelectionContainer: findType("SelectionContainer"),
      SelectionEdgeUpdateEvent: findType("SelectionEdgeUpdateEvent"),
      SelectionEvent: findType("SelectionEvent"),
      SelectionExtendDirection: findType("SelectionExtendDirection"),
      SelectionGeometry: findType("SelectionGeometry"),
      SelectionRegistrarScope: findType("SelectionRegistrarScope"),
      SelectionResult: findType("SelectionResult"),
      SemanticsAction: findType("SemanticsAction"),
      SemanticsConfiguration: findType("SemanticsConfiguration"),
      SemanticsGestureDelegate: findType("SemanticsGestureDelegate"),
      SemanticsNode: findType("SemanticsNode"),
      SemanticsSortKey: findType("SemanticsSortKey"),
      Set_LogicalKeyboardKey: findType("Set<LogicalKeyboardKey>"),
      Set_Object: findType("Set<Object>"),
      Set_RenderTapRegion: findType("Set<RenderTapRegion>"),
      Set_Selectable: findType("Set<Selectable>"),
      Set_Ticker: findType("Set<Ticker>"),
      Set_WidgetState: findType("Set<WidgetState>"),
      Set__ModalRouteAspect: findType("Set<_ModalRouteAspect>"),
      Set_dynamic: findType("Set<@>"),
      Set_nullable_String: findType("Set<String?>"),
      Shadow: findType("Shadow"),
      ShapeBorder: findType("ShapeBorder"),
      ShapeBorderClipper: findType("ShapeBorderClipper"),
      ShortcutActivator: findType("ShortcutActivator"),
      ShortcutManager: findType("ShortcutManager"),
      ShortcutRegistryEntry: findType("ShortcutRegistryEntry"),
      Shortcuts: findType("Shortcuts"),
      ShowValueIndicator: findType("ShowValueIndicator"),
      Simulation: findType("Simulation"),
      Size: findType("Size"),
      Size_Function_RenderBox_BoxConstraints: findType("Size(RenderBox,BoxConstraints)"),
      SliderComponentShape: findType("SliderComponentShape"),
      SliderInteraction: findType("SliderInteraction"),
      SliderThemeData: findType("SliderThemeData"),
      SliderTickMarkShape: findType("SliderTickMarkShape"),
      SliderTrackShape: findType("SliderTrackShape"),
      SnackBarBehavior: findType("SnackBarBehavior"),
      SnackBarClosedReason: findType("SnackBarClosedReason"),
      SnackBarThemeData: findType("SnackBarThemeData"),
      SnapshotController: findType("SnapshotController"),
      SnapshotMode: findType("SnapshotMode"),
      SnapshotPainter: findType("SnapshotPainter"),
      StackFit: findType("StackFit"),
      StackParentData: findType("StackParentData"),
      StackTrace: findType("StackTrace"),
      State_StatefulWidget: findType("State0<StatefulWidget>"),
      StatefulElement: findType("StatefulElement0"),
      String: findType("String"),
      StringAttribute: findType("StringAttribute"),
      StringBuffer: findType("StringBuffer"),
      StrutStyle: findType("StrutStyle"),
      SwitchThemeData: findType("SwitchThemeData"),
      TabBarTheme: findType("TabBarTheme"),
      TapDownDetails: findType("TapDownDetails"),
      TapGestureRecognizer: findType("TapGestureRecognizer"),
      TapUpDetails: findType("TapUpDetails"),
      TargetPlatform: findType("TargetPlatform"),
      TextAlign: findType("TextAlign"),
      TextBaseline: findType("TextBaseline"),
      TextBoundary: findType("TextBoundary"),
      TextBox: findType("TextBox"),
      TextButtonThemeData: findType("TextButtonThemeData"),
      TextCapitalization: findType("TextCapitalization0"),
      TextDecoration: findType("TextDecoration"),
      TextDirection: findType("TextDirection"),
      TextGranularity: findType("TextGranularity"),
      TextHeightBehavior: findType("TextHeightBehavior"),
      TextLeadingDistribution: findType("TextLeadingDistribution"),
      TextOverflow: findType("TextOverflow"),
      TextPainter: findType("TextPainter"),
      TextParentData: findType("TextParentData"),
      TextPosition: findType("TextPosition"),
      TextRange: findType("TextRange"),
      TextScaler: findType("TextScaler"),
      TextSelection: findType("TextSelection"),
      TextSelectionHandleType: findType("TextSelectionHandleType"),
      TextSelectionThemeData: findType("TextSelectionThemeData"),
      TextStyle: findType("TextStyle"),
      TextTheme: findType("TextTheme"),
      TextWidthBasis: findType("TextWidthBasis"),
      ThemeData: findType("ThemeData"),
      ThemeDataTween: findType("ThemeDataTween"),
      ThemeExtension_ThemeExtension_dynamic: findType("ThemeExtension<ThemeExtension<@>>"),
      ThemeExtension_dynamic: findType("ThemeExtension<@>"),
      Ticker: findType("Ticker"),
      TickerMode: findType("TickerMode"),
      TimePickerThemeData: findType("TimePickerThemeData"),
      ToggleButtonsThemeData: findType("ToggleButtonsThemeData"),
      TooltipThemeData: findType("TooltipThemeData"),
      TooltipTriggerMode: findType("TooltipTriggerMode"),
      TransformLayer: findType("TransformLayer"),
      TransitionRoute_dynamic: findType("TransitionRoute<@>"),
      Tween_dynamic: findType("Tween<@>"),
      Tween_dynamic_Function_dynamic: findType("Tween<@>(@)"),
      Tween_nullable_Rect: findType("Tween<Rect?>"),
      Type: findType("Type"),
      Typography: findType("Typography"),
      UnmanagedRestorationScope: findType("UnmanagedRestorationScope"),
      ValueNotifier_EdgeInsets: findType("ValueNotifier<EdgeInsets>"),
      Velocity: findType("Velocity"),
      VelocityEstimate: findType("VelocityEstimate"),
      VelocityTracker: findType("VelocityTracker"),
      VerticalDirection: findType("VerticalDirection"),
      VisualDensity: findType("VisualDensity"),
      VoidCallbackIntent: findType("VoidCallbackIntent"),
      WeakReference__RoutePlaceholder: findType("WeakReference<_RoutePlaceholder>"),
      Widget: findType("Widget"),
      WidgetState: findType("WidgetState"),
      WidgetStatePropertyAll_Size: findType("WidgetStatePropertyAll<Size>"),
      WidgetStatePropertyAll_double: findType("WidgetStatePropertyAll<double>"),
      WidgetStateProperty_nullable_BorderSide: findType("WidgetStateProperty<BorderSide?>"),
      WidgetStateProperty_nullable_Color: findType("WidgetStateProperty<Color?>"),
      WidgetStateProperty_nullable_EdgeInsetsGeometry: findType("WidgetStateProperty<EdgeInsetsGeometry?>"),
      WidgetStateProperty_nullable_Icon: findType("WidgetStateProperty<Icon?>"),
      WidgetStateProperty_nullable_IconThemeData: findType("WidgetStateProperty<IconThemeData?>"),
      WidgetStateProperty_nullable_MouseCursor: findType("WidgetStateProperty<MouseCursor0?>"),
      WidgetStateProperty_nullable_OutlinedBorder: findType("WidgetStateProperty<OutlinedBorder?>"),
      WidgetStateProperty_nullable_Size: findType("WidgetStateProperty<Size?>"),
      WidgetStateProperty_nullable_TextStyle: findType("WidgetStateProperty<TextStyle?>"),
      WidgetStateProperty_nullable_bool: findType("WidgetStateProperty<bool?>"),
      WidgetStateProperty_nullable_double: findType("WidgetStateProperty<double?>"),
      WidgetStatesController: findType("WidgetStatesController"),
      Widget_Function_3_BuildContext_and_Set_WidgetState_and_nullable_Widget: findType("Widget(BuildContext,Set<WidgetState>,Widget?)"),
      Widget_Function_BuildContext: findType("Widget(BuildContext)"),
      WidgetsApp: findType("WidgetsApp"),
      WidgetsLocalizations: findType("WidgetsLocalizations"),
      _ActionsScope: findType("_ActionsScope"),
      _ActivatorIntentPair: findType("_ActivatorIntentPair"),
      _AnyTapGestureRecognizer: findType("_AnyTapGestureRecognizer"),
      _CornerId: findType("_CornerId"),
      _CupertinoLocalizationsDelegate: findType("_CupertinoLocalizationsDelegate"),
      _DefaultSnapshotPainter: findType("_DefaultSnapshotPainter"),
      _Diagonal: findType("_Diagonal"),
      _DragDirection: findType("_DragDirection"),
      _EffectiveTickerMode: findType("_EffectiveTickerMode"),
      _HeroFlight: findType("_HeroFlight"),
      _HeroFlightManifest: findType("_HeroFlightManifest"),
      _HeroState: findType("_HeroState"),
      _HighlightType: findType("_HighlightType"),
      _History: findType("_History"),
      _InheritedTheme: findType("_InheritedTheme"),
      _InkResponseStateWidget: findType("_InkResponseStateWidget"),
      _LineCaretMetrics: findType("_LineCaretMetrics"),
      _LocalizationsScope: findType("_LocalizationsScope"),
      _MapEntry: findType("_MapEntry"),
      _MaterialLocalizationsDelegate: findType("_MaterialLocalizationsDelegate"),
      _ModalRouteAspect: findType("_ModalRouteAspect"),
      _ModalScopeStatus: findType("_ModalScopeStatus"),
      _NavigatorObservation: findType("_NavigatorObservation"),
      _OverlayEntryWidget: findType("_OverlayEntryWidget"),
      _OverlayEntryWidgetState: findType("_OverlayEntryWidgetState"),
      _ParentInkResponseProvider: findType("_ParentInkResponseProvider"),
      _ParentInkResponseState: findType("_ParentInkResponseState"),
      _Pending: findType("_Pending"),
      _RenderChildOverflowBox: findType("_RenderChildOverflowBox"),
      _RenderColoredBox: findType("_RenderColoredBox"),
      _RenderInkFeatures: findType("_RenderInkFeatures"),
      _RenderInputPadding: findType("_RenderInputPadding0"),
      _RenderInputPadding_2: findType("_RenderInputPadding"),
      _RenderSemanticsClipper: findType("_RenderSemanticsClipper"),
      _RenderSnapshotWidget: findType("_RenderSnapshotWidget"),
      _RenderTheater: findType("_RenderTheater"),
      _RenderTheaterMarker: findType("_RenderTheaterMarker"),
      _RouteEntry: findType("_RouteEntry"),
      _RoutePlaceholder: findType("_RoutePlaceholder"),
      _RouterScope: findType("_RouterScope"),
      _ScaffoldMessengerScope: findType("_ScaffoldMessengerScope"),
      _SelectableFragment: findType("_SelectableFragment"),
      _SelectableIconButton: findType("_SelectableIconButton"),
      _SelectableTextContainerDelegate: findType("_SelectableTextContainerDelegate"),
      _SemanticsDebuggerPainter: findType("_SemanticsDebuggerPainter"),
      _ShapeBorderPainter: findType("_ShapeBorderPainter"),
      _SharedAppModel: findType("_SharedAppModel"),
      _ShortcutRegistrarScope: findType("_ShortcutRegistrarScope"),
      _TapTracker: findType("_TapTracker"),
      _Theater: findType("_Theater"),
      _TheaterParentData: findType("_TheaterParentData"),
      _Vector: findType("_Vector"),
      _ViewScope: findType("_ViewScope"),
      _WidgetTicker: findType("_WidgetTicker"),
      _WidgetsLocalizationsDelegate: findType("_WidgetsLocalizationsDelegate"),
      _ZoomEnterTransition: findType("_ZoomEnterTransition"),
      _ZoomEnterTransitionPainter: findType("_ZoomEnterTransitionPainter"),
      _ZoomExitTransition: findType("_ZoomExitTransition"),
      _ZoomExitTransitionPainter: findType("_ZoomExitTransitionPainter"),
      bool: findType("bool"),
      bool_Function_InlineSpan: findType("bool(InlineSpan)"),
      bool_Function__RouteEntry: findType("bool(_RouteEntry)"),
      double: findType("double"),
      dynamic: findType("@"),
      dynamic_Function: findType("@()"),
      int: findType("int"),
      nullable_Alignment: findType("Alignment?"),
      nullable_AlignmentGeometry: findType("AlignmentGeometry?"),
      nullable_AnimationController: findType("AnimationController?"),
      nullable_AnimationStatus: findType("AnimationStatus?"),
      nullable_Animation_double: findType("Animation<double>?"),
      nullable_AppLifecycleState: findType("AppLifecycleState?"),
      nullable_BorderRadius: findType("BorderRadius?"),
      nullable_BorderRadiusTween: findType("BorderRadiusTween?"),
      nullable_BorderSide: findType("BorderSide?"),
      nullable_BoxPainter: findType("BoxPainter?"),
      nullable_Brightness: findType("Brightness?"),
      nullable_BuildContext: findType("BuildContext?"),
      nullable_ButtonStyle: findType("ButtonStyle?"),
      nullable_ClipPathLayer: findType("ClipPathLayer?"),
      nullable_ClipRRectLayer: findType("ClipRRectLayer?"),
      nullable_Color: findType("Color?"),
      nullable_ColorTween: findType("ColorTween?"),
      nullable_Completer_void: findType("Completer<~>?"),
      nullable_CustomPainter: findType("CustomPainter?"),
      nullable_Decoration: findType("Decoration?"),
      nullable_DeviceGestureSettings: findType("DeviceGestureSettings?"),
      nullable_Duration: findType("Duration?"),
      nullable_EdgeInsets: findType("EdgeInsets?"),
      nullable_EdgeInsetsGeometry: findType("EdgeInsetsGeometry?"),
      nullable_Element: findType("Element0?"),
      nullable_FontStyle: findType("FontStyle?"),
      nullable_FontWeight: findType("FontWeight?"),
      nullable_Function: findType("Function?"),
      nullable_Future_dynamic: findType("Future<@>?"),
      nullable_GlobalKey_NavigatorState: findType("GlobalKey<NavigatorState>?"),
      nullable_GlyphInfo: findType("GlyphInfo?"),
      nullable_HeroController: findType("HeroController?"),
      nullable_HeroControllerScope: findType("HeroControllerScope?"),
      nullable_HitTestBehavior: findType("HitTestBehavior?"),
      nullable_HorizontalDragGestureRecognizer: findType("HorizontalDragGestureRecognizer?"),
      nullable_IconThemeData: findType("IconThemeData?"),
      nullable_Image: findType("Image?"),
      nullable_InkHighlight: findType("InkHighlight?"),
      nullable_InlineSpan: findType("InlineSpan?"),
      nullable_Intent: findType("Intent?"),
      nullable_InteractiveInkFeatureFactory: findType("InteractiveInkFeatureFactory?"),
      nullable_LayerLink: findType("LayerLink?"),
      nullable_LinkedHashMap_Key_SemanticsNode: findType("LinkedHashMap<Key,SemanticsNode>?"),
      nullable_LinkedList__OverlayEntryLocation: findType("LinkedList<_OverlayEntryLocation>?"),
      nullable_List_AttributedString: findType("List<AttributedString>?"),
      nullable_List_CustomPainterSemantics_Function_Size: findType("List<CustomPainterSemantics>(Size)?"),
      nullable_List_FontFeature: findType("List<FontFeature>?"),
      nullable_List_FontVariation: findType("List<FontVariation>?"),
      nullable_List_InkFeature: findType("List<InkFeature>?"),
      nullable_List_InlineSpanSemanticsInformation: findType("List<InlineSpanSemanticsInformation>?"),
      nullable_List_LineMetrics: findType("List<LineMetrics>?"),
      nullable_List_Locale: findType("List<Locale>?"),
      nullable_List_PlaceholderDimensions: findType("List<PlaceholderDimensions>?"),
      nullable_List_Rect: findType("List<Rect>?"),
      nullable_List_SemanticsNode: findType("List<SemanticsNode>?"),
      nullable_List_Shadow: findType("List<Shadow>?"),
      nullable_List_String: findType("List<String>?"),
      nullable_List_TextBox: findType("List<TextBox>?"),
      nullable_List__SelectableFragment: findType("List<_SelectableFragment>?"),
      nullable_Locale: findType("Locale?"),
      nullable_LogicalKeyboardKey: findType("LogicalKeyboardKey?"),
      nullable_LongPressGestureRecognizer: findType("LongPressGestureRecognizer?"),
      nullable_Map_Type_GestureRecognizer: findType("Map<Type,GestureRecognizer>?"),
      nullable_Map_of_nullable_LogicalKeyboardKey_and_List__ActivatorIntentPair: findType("Map<LogicalKeyboardKey?,List<_ActivatorIntentPair>>?"),
      nullable_Map_of_nullable_String_and_List_Object: findType("Map<String?,List<Object>>?"),
      nullable_MaterialTapTargetSize: findType("MaterialTapTargetSize?"),
      nullable_Matrix4: findType("Matrix40?"),
      nullable_MouseCursor: findType("MouseCursor0?"),
      nullable_Object: findType("Object?"),
      nullable_Offset: findType("Offset?"),
      nullable_OpacityLayer: findType("OpacityLayer?"),
      nullable_OutlinedBorder: findType("OutlinedBorder?"),
      nullable_OverlayEntry: findType("OverlayEntry?"),
      nullable_PageTransitionsBuilder: findType("PageTransitionsBuilder?"),
      nullable_Paint: findType("Paint?"),
      nullable_PanGestureRecognizer: findType("PanGestureRecognizer?"),
      nullable_Paragraph: findType("Paragraph?"),
      nullable_PerformanceModeRequestHandle: findType("PerformanceModeRequestHandle?"),
      nullable_PointerCancelEvent: findType("PointerCancelEvent?"),
      nullable_PointerDownEvent: findType("PointerDownEvent?"),
      nullable_PointerUpEvent: findType("PointerUpEvent?"),
      nullable_PopupMenuPosition: findType("PopupMenuPosition?"),
      nullable_Record_2_TextPosition_boundaryEnd_and_TextPosition_boundaryStart: findType("+boundaryEnd,boundaryStart(TextPosition,TextPosition)?"),
      nullable_Record_2_double_and_double: findType("+(double,double)?"),
      nullable_Rect: findType("Rect?"),
      nullable_Rect_Function: findType("Rect()?"),
      nullable_RenderBox: findType("RenderBox?"),
      nullable_RenderBox_Function_RenderBox: findType("RenderBox?(RenderBox)"),
      nullable_RenderObject: findType("RenderObject?"),
      nullable_RestorationBucket: findType("RestorationBucket?"),
      nullable_RestorationMixin_StatefulWidget: findType("RestorationMixin<StatefulWidget>?"),
      nullable_RouteInformation: findType("RouteInformation?"),
      nullable_Route_dynamic: findType("Route<@>?"),
      nullable_Selectable: findType("Selectable?"),
      nullable_SelectionRegistrar: findType("SelectionRegistrar?"),
      nullable_SemanticsHandle: findType("SemanticsHandle?"),
      nullable_SemanticsNode: findType("SemanticsNode?"),
      nullable_Set_Action_Intent: findType("Set<Action<Intent>>?"),
      nullable_Set_InteractiveInkFeature: findType("Set<InteractiveInkFeature>?"),
      nullable_Set_PointerDeviceKind: findType("Set<PointerDeviceKind>?"),
      nullable_Set_Ticker: findType("Set<Ticker>?"),
      nullable_Shader: findType("Shader?"),
      nullable_ShapeBorder: findType("ShapeBorder?"),
      nullable_ShapeBorderTween: findType("ShapeBorderTween?"),
      nullable_Size: findType("Size?"),
      nullable_Stopwatch: findType("Stopwatch?"),
      nullable_String: findType("String?"),
      nullable_String_Function: findType("String()?"),
      nullable_StrutStyle: findType("StrutStyle?"),
      nullable_TapDownDetails: findType("TapDownDetails?"),
      nullable_TapGestureRecognizer: findType("TapGestureRecognizer?"),
      nullable_TextAlign: findType("TextAlign?"),
      nullable_TextBaseline: findType("TextBaseline?"),
      nullable_TextDecoration: findType("TextDecoration?"),
      nullable_TextDecorationStyle: findType("TextDecorationStyle?"),
      nullable_TextDirection: findType("TextDirection?"),
      nullable_TextHeightBehavior: findType("TextHeightBehavior?"),
      nullable_TextLeadingDistribution: findType("TextLeadingDistribution?"),
      nullable_TextOverflow: findType("TextOverflow?"),
      nullable_TextPosition: findType("TextPosition?"),
      nullable_TextStyle: findType("TextStyle?"),
      nullable_TextStyleTween: findType("TextStyleTween?"),
      nullable_TextTheme: findType("TextTheme?"),
      nullable_TextTreeConfiguration: findType("TextTreeConfiguration?"),
      nullable_Thumb_Function_TextDirection_RangeValues_double_Size_Size_double: findType("Thumb?(TextDirection,RangeValues,double,Size,Size,double)"),
      nullable_Ticker: findType("Ticker?"),
      nullable_Timer: findType("Timer?"),
      nullable_TransformEngineLayer: findType("TransformEngineLayer0?"),
      nullable_Tween_double: findType("Tween<double>?"),
      nullable_Tween_dynamic: findType("Tween<@>?"),
      nullable_Tween_dynamic_Function_3_nullable_Tween_dynamic_and_dynamic_and_Tween_dynamic_Function_dynamic: findType("Tween<@>?(Tween<@>?,@,Tween<@>(@))"),
      nullable_ValueListenable_bool: findType("ValueListenable<bool>?"),
      nullable_ValueNotifier_nullable__OverlayEntryWidgetState: findType("ValueNotifier<_OverlayEntryWidgetState?>?"),
      nullable_VerticalDragGestureRecognizer: findType("VerticalDragGestureRecognizer?"),
      nullable_VisualDensity: findType("VisualDensity?"),
      nullable_Widget: findType("Widget?"),
      nullable_WidgetStateProperty_nullable_BorderSide: findType("WidgetStateProperty<BorderSide?>?"),
      nullable_WidgetStateProperty_nullable_Color: findType("WidgetStateProperty<Color?>?"),
      nullable_WidgetStateProperty_nullable_EdgeInsetsGeometry: findType("WidgetStateProperty<EdgeInsetsGeometry?>?"),
      nullable_WidgetStateProperty_nullable_MouseCursor: findType("WidgetStateProperty<MouseCursor0?>?"),
      nullable_WidgetStateProperty_nullable_OutlinedBorder: findType("WidgetStateProperty<OutlinedBorder?>?"),
      nullable_WidgetStateProperty_nullable_Size: findType("WidgetStateProperty<Size?>?"),
      nullable_WidgetStateProperty_nullable_TextStyle: findType("WidgetStateProperty<TextStyle?>?"),
      nullable_WidgetStateProperty_nullable_double: findType("WidgetStateProperty<double?>?"),
      nullable_Widget_Function_3_BuildContext_and_Set_WidgetState_and_nullable_Widget: findType("Widget(BuildContext,Set<WidgetState>,Widget?)?"),
      nullable_WidgetsApp: findType("WidgetsApp?"),
      nullable__OverlayEntryWidgetState: findType("_OverlayEntryWidgetState?"),
      nullable__PointAtTime: findType("_PointAtTime?"),
      nullable__RouteEntry: findType("_RouteEntry?"),
      nullable__RoutePlaceholder: findType("_RoutePlaceholder?"),
      nullable_bool: findType("bool?"),
      nullable_bool_Function_Object: findType("bool(Object)?"),
      nullable_double: findType("double?"),
      nullable_double_Function_RenderBox_BoxConstraints_TextBaseline: findType("double?(RenderBox,BoxConstraints,TextBaseline)"),
      nullable_void_Function: findType("~()?"),
      nullable_void_Function_DragDownDetails: findType("~(DragDownDetails)?"),
      nullable_void_Function_DragEndDetails: findType("~(DragEndDetails)?"),
      nullable_void_Function_DragStartDetails: findType("~(DragStartDetails)?"),
      nullable_void_Function_DragUpdateDetails: findType("~(DragUpdateDetails)?"),
      nullable_void_Function_LongPressDownDetails: findType("~(LongPressDownDetails)?"),
      nullable_void_Function_LongPressEndDetails: findType("~(LongPressEndDetails)?"),
      nullable_void_Function_LongPressMoveUpdateDetails: findType("~(LongPressMoveUpdateDetails)?"),
      nullable_void_Function_LongPressStartDetails: findType("~(LongPressStartDetails)?"),
      nullable_void_Function_PointerCancelEvent: findType("~(PointerCancelEvent)?"),
      nullable_void_Function_PointerDownEvent: findType("~(PointerDownEvent)?"),
      nullable_void_Function_PointerEnterEvent: findType("~(PointerEnterEvent)?"),
      nullable_void_Function_PointerExitEvent: findType("~(PointerExitEvent)?"),
      nullable_void_Function_PointerHoverEvent: findType("~(PointerHoverEvent)?"),
      nullable_void_Function_PointerMoveEvent: findType("~(PointerMoveEvent)?"),
      nullable_void_Function_PointerPanZoomEndEvent: findType("~(PointerPanZoomEndEvent)?"),
      nullable_void_Function_PointerPanZoomStartEvent: findType("~(PointerPanZoomStartEvent)?"),
      nullable_void_Function_PointerPanZoomUpdateEvent: findType("~(PointerPanZoomUpdateEvent)?"),
      nullable_void_Function_PointerSignalEvent: findType("~(PointerSignalEvent)?"),
      nullable_void_Function_PointerUpEvent: findType("~(PointerUpEvent)?"),
      nullable_void_Function_TapDownDetails: findType("~(TapDownDetails)?"),
      nullable_void_Function_TapUpDetails: findType("~(TapUpDetails)?"),
      nullable_void_Function_bool: findType("~(bool)?"),
      num: findType("num"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_2_bool_and_nullable_Object: findType("~(bool,Object?)"),
      void_Function_Action_Intent: findType("~(Action<Intent>)"),
      void_Function_AnimationStatus: findType("~(AnimationStatus)"),
      void_Function_Duration: findType("~(Duration)"),
      void_Function_Element: findType("~(Element0)"),
      void_Function_PaintingContext_Offset: findType("~(PaintingContext,Offset)"),
      void_Function_PointerEvent: findType("~(PointerEvent)"),
      void_Function_RenderObject: findType("~(RenderObject)")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    C.AlignmentDirectional_m1_m1 = new A.AlignmentDirectional(-1, -1);
    C.Alignment_0_0 = new A.Alignment(0, 0);
    C.AnimationBehavior_0 = new A.AnimationBehavior(0, "normal");
    C.AnimationStatus_0 = new A.AnimationStatus(0, "dismissed");
    C.AnimationStatus_1 = new A.AnimationStatus(1, "forward");
    C.AnimationStatus_2 = new A.AnimationStatus(2, "reverse");
    C.AnimationStatus_3 = new A.AnimationStatus(3, "completed");
    C.AppBarTheme_a6m = new A.AppBarTheme(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.BadgeThemeData_oZA = new A.BadgeThemeData(null, null, null, null, null, null, null, null);
    C.BorderRadius_ww8 = new A.BorderRadius(D.Radius_0_0, D.Radius_0_0, D.Radius_0_0, D.Radius_0_0);
    C.Color_4278190080 = new E.Color(4278190080);
    C.BorderStyle_0 = new A.BorderStyle(0, "none");
    C.BorderSide_Q1M = new A.BorderSide(C.Color_4278190080, 0, C.BorderStyle_0, -1);
    C.Color_4278278299 = new E.Color(4278278299);
    C.BorderStyle_1 = new A.BorderStyle(1, "solid");
    C.BorderSide_xGY = new A.BorderSide(C.Color_4278278299, 1, C.BorderStyle_1, -1);
    C.BottomAppBarTheme_xw8 = new A.BottomAppBarTheme(null, null, null, null, null, null, null);
    C.BottomNavigationBarThemeData_5hf = new A.BottomNavigationBarThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.BottomSheetThemeData_cdS = new A.BottomSheetThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.BoxConstraints_40_40_40_40 = new E.BoxConstraints(40, 40, 40, 40);
    C.BoxConstraints_56_56_56_56 = new E.BoxConstraints(56, 56, 56, 56);
    C.BoxConstraints_86y0 = new E.BoxConstraints(0, 1 / 0, 0, 1 / 0);
    C.BoxConstraints_86y1 = new E.BoxConstraints(88, 1 / 0, 36, 1 / 0);
    C.BoxConstraints_86y = new E.BoxConstraints(48, 1 / 0, 48, 1 / 0);
    C.BoxConstraints_96_96_96_96 = new E.BoxConstraints(96, 96, 96, 96);
    C.BoxConstraints_cUt = new E.BoxConstraints(0, 1 / 0, 48, 48);
    C.BoxConstraints_cUt0 = new E.BoxConstraints(0, 1 / 0, 56, 56);
    C.BoxConstraints_xqM = new E.BoxConstraints(1 / 0, 1 / 0, 1 / 0, 1 / 0);
    C.BoxHeightStyle_5 = new E.BoxHeightStyle(5, "strut");
    C.BoxShape_0 = new A.BoxShape(0, "rectangle");
    C.BoxShape_1 = new A.BoxShape(1, "circle");
    C.ButtonBarLayoutBehavior_1 = new A.ButtonBarLayoutBehavior(1, "padded");
    C.ButtonBarThemeData_8hp = new A.ButtonBarThemeData(null, null, null, null, null, null, null, null, null);
    C.ButtonTextTheme_0 = new A.ButtonTextTheme(0, "normal");
    C.ButtonThemeData_LrP = new A.ButtonThemeData(null, null, null, null, null, null, null, null);
    C.SelectionChangedCause_4 = new A.SelectionChangedCause(4, "keyboard");
    C.C_CopySelectionTextIntent0 = new A.CopySelectionTextIntent();
    C.C_CopySelectionTextIntent = new A.CopySelectionTextIntent();
    C.C_CupertinoPageTransitionsBuilder = new A.CupertinoPageTransitionsBuilder();
    C.C_DefaultEquality = new A.DefaultEquality(B.findType("DefaultEquality<0&>"));
    C.C_DeepCollectionEquality = new A.DeepCollectionEquality();
    C.C_DefaultCupertinoLocalizations = new A.DefaultCupertinoLocalizations();
    C.C_DefaultMaterialLocalizations = new A.DefaultMaterialLocalizations();
    C.C_DefaultTransitionDelegate = new A.DefaultTransitionDelegate(B.findType("DefaultTransitionDelegate<@>"));
    C.C_DefaultWidgetsLocalizations = new A.DefaultWidgetsLocalizations();
    C.C_DeleteCharacterIntent = new A.DeleteCharacterIntent();
    C.C_DeleteCharacterIntent0 = new A.DeleteCharacterIntent();
    C.C_DeleteToLineBreakIntent = new A.DeleteToLineBreakIntent();
    C.C_DeleteToLineBreakIntent0 = new A.DeleteToLineBreakIntent();
    C.C_DeleteToNextWordBoundaryIntent = new A.DeleteToNextWordBoundaryIntent();
    C.C_DeleteToNextWordBoundaryIntent0 = new A.DeleteToNextWordBoundaryIntent();
    C.C_DoNothingAndStopPropagationTextIntent = new A.DoNothingAndStopPropagationTextIntent();
    C.C_ExpandSelectionToDocumentBoundaryIntent = new A.ExpandSelectionToDocumentBoundaryIntent();
    C.C_ExpandSelectionToDocumentBoundaryIntent0 = new A.ExpandSelectionToDocumentBoundaryIntent();
    C.C_ExpandSelectionToLineBreakIntent = new A.ExpandSelectionToLineBreakIntent();
    C.C_ExpandSelectionToLineBreakIntent0 = new A.ExpandSelectionToLineBreakIntent();
    C.C_ExtendSelectionByCharacterIntent1 = new A.ExtendSelectionByCharacterIntent();
    C.C_ExtendSelectionByCharacterIntent2 = new A.ExtendSelectionByCharacterIntent();
    C.C_ExtendSelectionByCharacterIntent = new A.ExtendSelectionByCharacterIntent();
    C.C_ExtendSelectionByCharacterIntent0 = new A.ExtendSelectionByCharacterIntent();
    C.C_ExtendSelectionToDocumentBoundaryIntent1 = new A.ExtendSelectionToDocumentBoundaryIntent();
    C.C_ExtendSelectionToDocumentBoundaryIntent2 = new A.ExtendSelectionToDocumentBoundaryIntent();
    C.C_ExtendSelectionToDocumentBoundaryIntent = new A.ExtendSelectionToDocumentBoundaryIntent();
    C.C_ExtendSelectionToDocumentBoundaryIntent0 = new A.ExtendSelectionToDocumentBoundaryIntent();
    C.C_ExtendSelectionToLineBreakIntent5 = new A.ExtendSelectionToLineBreakIntent();
    C.C_ExtendSelectionToLineBreakIntent6 = new A.ExtendSelectionToLineBreakIntent();
    C.C_ExtendSelectionToLineBreakIntent1 = new A.ExtendSelectionToLineBreakIntent();
    C.C_ExtendSelectionToLineBreakIntent2 = new A.ExtendSelectionToLineBreakIntent();
    C.C_ExtendSelectionToLineBreakIntent3 = new A.ExtendSelectionToLineBreakIntent();
    C.C_ExtendSelectionToLineBreakIntent4 = new A.ExtendSelectionToLineBreakIntent();
    C.C_ExtendSelectionToLineBreakIntent = new A.ExtendSelectionToLineBreakIntent();
    C.C_ExtendSelectionToLineBreakIntent0 = new A.ExtendSelectionToLineBreakIntent();
    C.C_ExtendSelectionToNextParagraphBoundaryIntent = new A.ExtendSelectionToNextParagraphBoundaryIntent();
    C.C_ExtendSelectionToNextParagraphBoundaryIntent0 = new A.ExtendSelectionToNextParagraphBoundaryIntent();
    C.C_ExtendSelectionToNextParagraphBoundaryIntent1 = new A.ExtendSelectionToNextParagraphBoundaryIntent();
    C.C_ExtendSelectionToNextParagraphBoundaryIntent2 = new A.ExtendSelectionToNextParagraphBoundaryIntent();
    C.C_ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent = new A.ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent();
    C.C_ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent0 = new A.ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent();
    C.C_ExtendSelectionToNextWordBoundaryIntent1 = new A.ExtendSelectionToNextWordBoundaryIntent();
    C.C_ExtendSelectionToNextWordBoundaryIntent2 = new A.ExtendSelectionToNextWordBoundaryIntent();
    C.C_ExtendSelectionToNextWordBoundaryIntent = new A.ExtendSelectionToNextWordBoundaryIntent();
    C.C_ExtendSelectionToNextWordBoundaryIntent0 = new A.ExtendSelectionToNextWordBoundaryIntent();
    C.C_ExtendSelectionToNextWordBoundaryOrCaretLocationIntent = new A.ExtendSelectionToNextWordBoundaryOrCaretLocationIntent();
    C.C_ExtendSelectionToNextWordBoundaryOrCaretLocationIntent0 = new A.ExtendSelectionToNextWordBoundaryOrCaretLocationIntent();
    C.C_ExtendSelectionVerticallyToAdjacentLineIntent1 = new A.ExtendSelectionVerticallyToAdjacentLineIntent();
    C.C_ExtendSelectionVerticallyToAdjacentLineIntent2 = new A.ExtendSelectionVerticallyToAdjacentLineIntent();
    C.C_ExtendSelectionVerticallyToAdjacentLineIntent = new A.ExtendSelectionVerticallyToAdjacentLineIntent();
    C.C_ExtendSelectionVerticallyToAdjacentLineIntent0 = new A.ExtendSelectionVerticallyToAdjacentLineIntent();
    C.C_ExtendSelectionVerticallyToAdjacentPageIntent1 = new A.ExtendSelectionVerticallyToAdjacentPageIntent();
    C.C_ExtendSelectionVerticallyToAdjacentPageIntent2 = new A.ExtendSelectionVerticallyToAdjacentPageIntent();
    C.C_ExtendSelectionVerticallyToAdjacentPageIntent = new A.ExtendSelectionVerticallyToAdjacentPageIntent();
    C.C_ExtendSelectionVerticallyToAdjacentPageIntent0 = new A.ExtendSelectionVerticallyToAdjacentPageIntent();
    C.C_FloatingLabelAlignment = new A.FloatingLabelAlignment();
    C.FloatingLabelBehavior_1 = new A.FloatingLabelBehavior(1, "auto");
    C.C_InputDecorationTheme = new A.InputDecorationTheme();
    C.C_LongPressDownDetails = new A.LongPressDownDetails();
    C.Velocity_Offset_0_0 = new A.Velocity(D.Offset_0_0);
    C.C_LongPressEndDetails = new A.LongPressEndDetails();
    C.C_LongPressStartDetails = new A.LongPressStartDetails();
    C.C_MaterialScrollBehavior = new A.MaterialScrollBehavior();
    C.C_ZoomPageTransitionsBuilder = new A.ZoomPageTransitionsBuilder();
    C.Map_wOOAM = new B.GeneralConstantMap([D.TargetPlatform_0, C.C_ZoomPageTransitionsBuilder, D.TargetPlatform_2, C.C_CupertinoPageTransitionsBuilder, D.TargetPlatform_4, C.C_CupertinoPageTransitionsBuilder], B.findType("GeneralConstantMap<TargetPlatform,PageTransitionsBuilder>"));
    C.C_PageTransitionsTheme = new A.PageTransitionsTheme();
    C.C_PasteTextIntent = new A.PasteTextIntent();
    C.C_RedoTextIntent = new A.RedoTextIntent();
    C.C_ScrollBehavior = new A.ScrollBehavior();
    C.C_ScrollToDocumentBoundaryIntent = new A.ScrollToDocumentBoundaryIntent();
    C.C_ScrollToDocumentBoundaryIntent0 = new A.ScrollToDocumentBoundaryIntent();
    C.C_SelectAllTextIntent = new A.SelectAllTextIntent();
    C.Offset_sBb = new E.Offset(0.056, 0.024);
    C.Offset_O8m = new E.Offset(0.108, 0.3085);
    C.Offset_UEW = new E.Offset(0.198, 0.541);
    C.Offset_HJk = new E.Offset(0.3655, 1);
    C.Offset_EGT = new E.Offset(0.5465, 0.989);
    C.C_ThreePointCubic = new A.ThreePointCubic();
    C.C_TransposeCharactersIntent = new A.TransposeCharactersIntent();
    C.C_UndoTextIntent = new A.UndoTextIntent();
    C.C__AlwaysCompleteAnimation = new A._AlwaysCompleteAnimation();
    C.C__AlwaysDismissedAnimation = new A._AlwaysDismissedAnimation();
    C.C__ConstantValueListenable = new A._ConstantValueListenable(B.findType("_ConstantValueListenable<bool>"));
    C.C__CupertinoLocalizationsDelegate = new A._CupertinoLocalizationsDelegate();
    C.C__DefaultHeroTag = new A._DefaultHeroTag();
    C.C__DefaultSnapshotPainter = new A._DefaultSnapshotPainter();
    C.SystemMouseCursor_click = new E.SystemMouseCursor("click");
    C.C__EnabledAndDisabledMouseCursor = new A._EnabledAndDisabledMouseCursor();
    C.C__InkRippleFactory = new A._InkRippleFactory();
    C.C__InkSplashFactory = new A._InkSplashFactory();
    C.C__JSRandom = new A._JSRandom();
    C.C__Linear = new A._Linear();
    C.C__MaterialLocalizationsDelegate = new A._MaterialLocalizationsDelegate();
    C.C__RoutePlaceholder = new A._RoutePlaceholder();
    C.C__WidgetsLocalizationsDelegate = new A._WidgetsLocalizationsDelegate();
    C.CardTheme_QOE = new A.CardTheme(null, null, null, null, null, null, null);
    C.CheckboxThemeData_jjv = new A.CheckboxThemeData(null, null, null, null, null, null, null, null, null);
    C.ChipThemeData_oCX = new A.ChipThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.CircleBorder_0 = new A.CircleBorder(0, C.BorderSide_Q1M);
    C.SelectionEventType_2 = new A.SelectionEventType(2, "clear");
    C.ClearSelectionEvent_SelectionEventType_2 = new A.ClearSelectionEvent(C.SelectionEventType_2);
    C.Color_4284612846 = new E.Color(4284612846);
    C.Color_4294967295 = new E.Color(4294967295);
    C.Color_4278442694 = new E.Color(4278442694);
    C.Color_4289724448 = new E.Color(4289724448);
    C.ColorScheme_2Vk = new A.ColorScheme(D.Brightness_1, C.Color_4284612846, C.Color_4294967295, null, null, null, null, null, null, C.Color_4278442694, C.Color_4278190080, null, null, null, null, null, null, null, null, null, null, null, null, null, null, C.Color_4289724448, C.Color_4294967295, null, null, C.Color_4294967295, C.Color_4278190080, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, C.Color_4294967295, C.Color_4278190080);
    C.Color_4291869951 = new E.Color(4291869951);
    C.Color_4281867890 = new E.Color(4281867890);
    C.Color_4283381643 = new E.Color(4283381643);
    C.Color_4293582335 = new E.Color(4293582335);
    C.Color_4280352861 = new E.Color(4280352861);
    C.Color_4291609308 = new E.Color(4291609308);
    C.Color_4281544001 = new E.Color(4281544001);
    C.Color_4283057240 = new E.Color(4283057240);
    C.Color_4293451512 = new E.Color(4293451512);
    C.Color_4280097067 = new E.Color(4280097067);
    C.Color_4293900488 = new E.Color(4293900488);
    C.Color_4282983730 = new E.Color(4282983730);
    C.Color_4284693320 = new E.Color(4284693320);
    C.Color_4294957284 = new E.Color(4294957284);
    C.Color_4281405725 = new E.Color(4281405725);
    C.Color_4294097077 = new E.Color(4294097077);
    C.Color_4284486672 = new E.Color(4284486672);
    C.Color_4287372568 = new E.Color(4287372568);
    C.Color_4294565596 = new E.Color(4294565596);
    C.Color_4279505432 = new E.Color(4279505432);
    C.Color_4293320937 = new E.Color(4293320937);
    C.Color_4282991951 = new E.Color(4282991951);
    C.Color_4282071102 = new E.Color(4282071102);
    C.Color_4279176467 = new E.Color(4279176467);
    C.Color_4280097568 = new E.Color(4280097568);
    C.Color_4280360742 = new E.Color(4280360742);
    C.Color_4281018672 = new E.Color(4281018672);
    C.Color_4281742395 = new E.Color(4281742395);
    C.Color_4291478736 = new E.Color(4291478736);
    C.Color_4287860633 = new E.Color(4287860633);
    C.Color_4281478965 = new E.Color(4281478965);
    C.Color_4284960932 = new E.Color(4284960932);
    C.ColorScheme_iCC = new A.ColorScheme(D.Brightness_0, C.Color_4291869951, C.Color_4281867890, C.Color_4283381643, C.Color_4293582335, C.Color_4293582335, C.Color_4291869951, C.Color_4280352861, C.Color_4283381643, C.Color_4291609308, C.Color_4281544001, C.Color_4283057240, C.Color_4293451512, C.Color_4293451512, C.Color_4291609308, C.Color_4280097067, C.Color_4283057240, C.Color_4293900488, C.Color_4282983730, C.Color_4284693320, C.Color_4294957284, C.Color_4294957284, C.Color_4293900488, C.Color_4281405725, C.Color_4284693320, C.Color_4294097077, C.Color_4284486672, C.Color_4287372568, C.Color_4294565596, C.Color_4279505432, C.Color_4293320937, C.Color_4282991951, C.Color_4279505432, C.Color_4282071102, C.Color_4279176467, C.Color_4280097568, C.Color_4280360742, C.Color_4281018672, C.Color_4281742395, C.Color_4291478736, C.Color_4287860633, C.Color_4282991951, C.Color_4278190080, C.Color_4278190080, C.Color_4293320937, C.Color_4281478965, C.Color_4284960932, C.Color_4291869951, C.Color_4279505432, C.Color_4293320937);
    C.Color_4284636017 = new E.Color(4284636017);
    C.Color_4286403168 = new E.Color(4286403168);
    C.Color_4289930782 = new E.Color(4289930782);
    C.Color_4282453515 = new E.Color(4282453515);
    C.Color_4294899711 = new E.Color(4294899711);
    C.Color_4293386476 = new E.Color(4293386476);
    C.Color_4292794593 = new E.Color(4292794593);
    C.Color_4294439674 = new E.Color(4294439674);
    C.Color_4294176247 = new E.Color(4294176247);
    C.Color_4293715696 = new E.Color(4293715696);
    C.Color_4286149758 = new E.Color(4286149758);
    C.Color_4294307831 = new E.Color(4294307831);
    C.ColorScheme_vfE = new A.ColorScheme(D.Brightness_1, C.Color_4284960932, C.Color_4294967295, C.Color_4293582335, C.Color_4280352861, C.Color_4293582335, C.Color_4291869951, C.Color_4280352861, C.Color_4283381643, C.Color_4284636017, C.Color_4294967295, C.Color_4293451512, C.Color_4280097067, C.Color_4293451512, C.Color_4291609308, C.Color_4280097067, C.Color_4283057240, C.Color_4286403168, C.Color_4294967295, C.Color_4294957284, C.Color_4281405725, C.Color_4294957284, C.Color_4293900488, C.Color_4281405725, C.Color_4284693320, C.Color_4289930782, C.Color_4294967295, C.Color_4294565596, C.Color_4282453515, C.Color_4294899711, C.Color_4280097568, C.Color_4293386476, C.Color_4292794593, C.Color_4294899711, C.Color_4294967295, C.Color_4294439674, C.Color_4294176247, C.Color_4293715696, C.Color_4293320937, C.Color_4282991951, C.Color_4286149758, C.Color_4291478736, C.Color_4278190080, C.Color_4278190080, C.Color_4281478965, C.Color_4294307831, C.Color_4291869951, C.Color_4284960932, C.Color_4294899711, C.Color_4280097568);
    C.Color_1087163596 = new E.Color(1087163596);
    C.Color_1627389952 = new E.Color(1627389952);
    C.Color_1660944383 = new E.Color(1660944383);
    C.Color_16777215 = new E.Color(16777215);
    C.Color_1723645116 = new E.Color(1723645116);
    C.Color_1724434632 = new E.Color(1724434632);
    C.Color_2130743551 = new E.Color(2130743551);
    C.Color_2155905152 = new E.Color(2155905152);
    C.Color_2315255808 = new E.Color(2315255808);
    C.Color_2583691263 = new E.Color(2583691263);
    C.Color_3019898879 = new E.Color(3019898879);
    C.Color_520093696 = new E.Color(520093696);
    C.Color_536870911 = new E.Color(536870911);
    C.CrossAxisAlignment_0 = new A.CrossAxisAlignment(0, "start");
    C.CrossAxisAlignment_1 = new A.CrossAxisAlignment(1, "end");
    C.CrossAxisAlignment_2 = new A.CrossAxisAlignment(2, "center");
    C.CrossAxisAlignment_3 = new A.CrossAxisAlignment(3, "stretch");
    C.CrossAxisAlignment_4 = new A.CrossAxisAlignment(4, "baseline");
    C.Cubic_0Qt = new E.Cubic(0.35, 0.91, 0.33, 0.97);
    C.Cubic_EBD = new E.Cubic(0.4, 0, 0.2, 1);
    C.Cubic_ECQ = new E.Cubic(0.05, 0, 0.133333, 0.06);
    C.Cubic_OxC = new E.Cubic(0.42, 0, 0.58, 1);
    C.Cubic_Z87 = new E.Cubic(0.208333, 0.82, 0.25, 1);
    C.Cubic_anB = new E.Cubic(0.67, 0.03, 0.65, 0.09);
    C.Cubic_irK = new E.Cubic(0.18, 1, 0.04, 1);
    C.Color_4288256409 = new E.Color(4288256409);
    C.Color_4285887861 = new E.Color(4285887861);
    C.CupertinoDynamicColor_MIV = new A.CupertinoDynamicColor(C.Color_4288256409, "inactiveGray", null, C.Color_4288256409, C.Color_4285887861, C.Color_4288256409, C.Color_4285887861, C.Color_4288256409, C.Color_4285887861, C.Color_4288256409, C.Color_4285887861, 0);
    C.CupertinoDynamicColor_kr3 = new A.CupertinoDynamicColor(C.Color_4278190080, "label", null, C.Color_4278190080, C.Color_4294967295, C.Color_4278190080, C.Color_4294967295, C.Color_4278190080, C.Color_4294967295, C.Color_4278190080, C.Color_4294967295, 0);
    C._TextThemeDefaultsBuilder_j4A = new A._TextThemeDefaultsBuilder(C.CupertinoDynamicColor_kr3, C.CupertinoDynamicColor_MIV);
    C.Color_4278221567 = new E.Color(4278221567);
    C.Color_4278879487 = new E.Color(4278879487);
    C.Color_4278206685 = new E.Color(4278206685);
    C.Color_4282424575 = new E.Color(4282424575);
    C.CupertinoDynamicColor_kw7 = new A.CupertinoDynamicColor(C.Color_4278221567, "systemBlue", null, C.Color_4278221567, C.Color_4278879487, C.Color_4278206685, C.Color_4282424575, C.Color_4278221567, C.Color_4278879487, C.Color_4278206685, C.Color_4282424575, 0);
    C.CupertinoTextThemeData_YKY = new A.CupertinoTextThemeData(C._TextThemeDefaultsBuilder_j4A, C.CupertinoDynamicColor_kw7, null, null, null, null, null, null, null, null);
    C.Color_4280032286 = new E.Color(4280032286);
    C.Color_4280558630 = new E.Color(4280558630);
    C.CupertinoDynamicColor_si8 = new A.CupertinoDynamicColor(C.Color_4294967295, "systemBackground", null, C.Color_4294967295, C.Color_4278190080, C.Color_4294967295, C.Color_4278190080, C.Color_4294967295, C.Color_4280032286, C.Color_4294967295, C.Color_4280558630, 0);
    C.Color_4042914297 = new E.Color(4042914297);
    C.Color_4028439837 = new E.Color(4028439837);
    C.CupertinoDynamicColor_oqK = new A.CupertinoDynamicColor(C.Color_4042914297, null, null, C.Color_4042914297, C.Color_4028439837, C.Color_4042914297, C.Color_4028439837, C.Color_4042914297, C.Color_4028439837, C.Color_4042914297, C.Color_4028439837, 0);
    C._CupertinoTextThemeDefaults_dv6 = new A._CupertinoTextThemeDefaults(C.CupertinoDynamicColor_kr3, C.CupertinoDynamicColor_MIV);
    C._CupertinoThemeDefaults_BmO = new A._CupertinoThemeDefaults(null, C.CupertinoDynamicColor_kw7, C.CupertinoDynamicColor_si8, C.CupertinoDynamicColor_oqK, C.CupertinoDynamicColor_si8, false, C._CupertinoTextThemeDefaults_dv6);
    C.CupertinoThemeData_niW = new A.CupertinoThemeData(C._CupertinoThemeDefaults_BmO, null, null, null, null, null, null, null);
    C.CupertinoUserInterfaceLevelData_0 = new A.CupertinoUserInterfaceLevelData(0, "base");
    C.CupertinoUserInterfaceLevelData_1 = new A.CupertinoUserInterfaceLevelData(1, "elevated");
    C.DartPerformanceMode_1 = new E.DartPerformanceMode(1, "latency");
    C.DataTableThemeData_hhf = new A.DataTableThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.DatePickerThemeData_PHH = new A.DatePickerThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.DecorationPosition_0 = new A.DecorationPosition(0, "background");
    C.DecorationPosition_1 = new A.DecorationPosition(1, "foreground");
    C._NullWidget_null1 = new A._NullWidget1(null);
    C.DefaultSelectionStyle_3bE = new A.DefaultSelectionStyle(null, null, null, C._NullWidget_null1, null);
    C.TextStyle_aF8 = new A.TextStyle(true, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.TextOverflow_0 = new A.TextOverflow(0, "clip");
    C.TextWidthBasis_0 = new A.TextWidthBasis(0, "parent");
    C._NullWidget_null2 = new A._NullWidget2(null);
    C.DefaultTextStyle_qaP = new A.DefaultTextStyle(C.TextStyle_aF8, null, true, C.TextOverflow_0, null, C.TextWidthBasis_0, null, C._NullWidget_null2, null);
    C.DialogTheme_2KU = new A.DialogTheme(null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.DividerThemeData_XIK = new A.DividerThemeData(null, null, null, null, null);
    C.DragStartBehavior_0 = new A.DragStartBehavior(0, "down");
    C.DragStartBehavior_1 = new A.DragStartBehavior(1, "start");
    C.DrawerThemeData_ynF = new A.DrawerThemeData(null, null, null, null, null, null, null, null, null);
    C.DropdownMenuThemeData_null_null_null = new A.DropdownMenuThemeData(null, null, null);
    C.Duration_150000 = new B.Duration(150000);
    C.Duration_225000 = new B.Duration(225000);
    C.Duration_375000 = new B.Duration(375000);
    C.Duration_40000 = new B.Duration(40000);
    C.Duration_75000 = new B.Duration(75000);
    C.DynamicSchemeVariant_0 = new A.DynamicSchemeVariant(0, "tonalSpot");
    C.EdgeInsets_16_0_16_0 = new E.EdgeInsets(16, 0, 16, 0);
    C.EdgeInsets_8_8_8_8 = new E.EdgeInsets(8, 8, 8, 8);
    C.ElevatedButtonThemeData_null = new A.ElevatedButtonThemeData(null);
    C.ExpansionTileThemeData_YM6 = new A.ExpansionTileThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.FilledButtonThemeData_null = new A.FilledButtonThemeData(null);
    C.FlexFit_0 = new A.FlexFit(0, "tight");
    C.FlexFit_1 = new A.FlexFit(1, "loose");
    C.FloatingActionButtonThemeData_kWM = new A.FloatingActionButtonThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.FocusSemanticEvent_focus = new A.FocusSemanticEvent("focus");
    C.FontWeight_6 = new A.FontWeight(6);
    C.GestureRecognizerState_0 = new A.GestureRecognizerState(0, "ready");
    C.GestureRecognizerState_1 = new A.GestureRecognizerState(1, "possible");
    C.GestureRecognizerState_2 = new A.GestureRecognizerState(2, "defunct");
    C.HeroFlightDirection_0 = new A.HeroFlightDirection(0, "push");
    C.HeroFlightDirection_1 = new A.HeroFlightDirection(1, "pop");
    C.HitTestBehavior_0 = new A.HitTestBehavior(0, "deferToChild");
    C.HitTestBehavior_1 = new A.HitTestBehavior(1, "opaque");
    C.HitTestBehavior_2 = new A.HitTestBehavior(2, "translucent");
    C.IconButtonThemeData_null = new A.IconButtonThemeData(null);
    C.IconThemeData_Jwp = new A.IconThemeData(null, null, null, null, null, C.Color_4294967295, null, null, null);
    C.IconThemeData_Vet0 = new A.IconThemeData(null, null, null, null, null, C.Color_4278190080, null, null, null);
    C.IconThemeData_Vet = new A.IconThemeData(24, 0, 400, 0, 48, C.Color_4278190080, 1, null, false);
    C.IconData_57415 = new A.IconData(57415);
    C.Icon_IconData_57415_null = new A.Icon(C.IconData_57415, null);
    C.IconData_58646 = new A.IconData(58646);
    C.Icon_IconData_58646_null = new A.Icon(C.IconData_58646, null);
    C.IconData_58727 = new A.IconData(58727);
    C.Icon_IconData_58727_null = new A.Icon(C.IconData_58727, null);
    C.ImageConfiguration_MCX = new A.ImageConfiguration(null, null, null, null, null, null);
    C.Interval_43h = new A.Interval(0.0825, 0.2075);
    C.Interval_gzV0 = new A.Interval(0.125, 0.25);
    C.Interval_gzV = new A.Interval(0.6, 1);
    C.Interval_qxB = new A.Interval(0.2075, 0.4175);
    C.ListTileThemeData_ukV = new A.ListTileThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C._ElevationOpacity_0_0 = new A._ElevationOpacity(0, 0);
    C._ElevationOpacity_HbX = new A._ElevationOpacity(1, 0.05);
    C._ElevationOpacity_FJu = new A._ElevationOpacity(3, 0.08);
    C._ElevationOpacity_qo0 = new A._ElevationOpacity(6, 0.11);
    C._ElevationOpacity_ClL = new A._ElevationOpacity(8, 0.12);
    C._ElevationOpacity_tUZ = new A._ElevationOpacity(12, 0.14);
    C.List_4Dc = B._setArrayType(makeConstList([C._ElevationOpacity_0_0, C._ElevationOpacity_HbX, C._ElevationOpacity_FJu, C._ElevationOpacity_qo0, C._ElevationOpacity_ClL, C._ElevationOpacity_tUZ]), B.findType("JSArray<_ElevationOpacity>"));
    C.C_ActivateIntent = new A.ActivateIntent();
    C.ScrollIncrementType_1 = new A.ScrollIncrementType(1, "page");
    C.ScrollIntent_A0N = new A.ScrollIntent(D.AxisDirection_2, C.ScrollIncrementType_1);
    C.List_6w5 = B._setArrayType(makeConstList([C.C_ActivateIntent, C.ScrollIntent_A0N]), B.findType("JSArray<Intent>"));
    C._RouteRestorationType_0 = new A._RouteRestorationType(0, "named");
    C._RouteRestorationType_1 = new A._RouteRestorationType(1, "anonymous");
    C.List_8Gl = B._setArrayType(makeConstList([C._RouteRestorationType_0, C._RouteRestorationType_1]), B.findType("JSArray<_RouteRestorationType>"));
    C.FontWeight_0 = new A.FontWeight(0);
    C.FontWeight_1 = new A.FontWeight(1);
    C.FontWeight_2 = new A.FontWeight(2);
    C.FontWeight_3 = new A.FontWeight(3);
    C.FontWeight_4 = new A.FontWeight(4);
    C.FontWeight_5 = new A.FontWeight(5);
    C.FontWeight_7 = new A.FontWeight(7);
    C.FontWeight_8 = new A.FontWeight(8);
    C.List_bNK = B._setArrayType(makeConstList([C.FontWeight_0, C.FontWeight_1, C.FontWeight_2, C.FontWeight_3, C.FontWeight_4, C.FontWeight_5, C.FontWeight_6, C.FontWeight_7, C.FontWeight_8]), B.findType("JSArray<FontWeight>"));
    C.List_empty11 = B._setArrayType(makeConstList([]), B.findType("JSArray<CustomPainterSemantics>"));
    C.List_empty9 = B._setArrayType(makeConstList([]), B.findType("JSArray<LineMetrics>"));
    C.List_empty12 = B._setArrayType(makeConstList([]), type$.JSArray_NavigatorObserver);
    C.List_empty15 = B._setArrayType(makeConstList([]), type$.JSArray_Object);
    C.List_empty13 = B._setArrayType(makeConstList([]), type$.JSArray_OverlayEntry);
    C.List_empty14 = B._setArrayType(makeConstList([]), B.findType("JSArray<Page<@>>"));
    C.List_empty8 = B._setArrayType(makeConstList([]), type$.JSArray_Rect);
    C.List_empty10 = B._setArrayType(makeConstList([]), type$.JSArray_Selectable);
    C.List_empty6 = B._setArrayType(makeConstList([]), B.findType("JSArray<String?>"));
    C._CornerId_0 = new A._CornerId(0, "topLeft");
    C._CornerId_3 = new A._CornerId(3, "bottomRight");
    C._Diagonal__CornerId_0__CornerId_3 = new A._Diagonal(C._CornerId_0, C._CornerId_3);
    C._Diagonal__CornerId_3__CornerId_0 = new A._Diagonal(C._CornerId_3, C._CornerId_0);
    C._CornerId_1 = new A._CornerId(1, "topRight");
    C._CornerId_2 = new A._CornerId(2, "bottomLeft");
    C._Diagonal__CornerId_1__CornerId_2 = new A._Diagonal(C._CornerId_1, C._CornerId_2);
    C._Diagonal__CornerId_2__CornerId_1 = new A._Diagonal(C._CornerId_2, C._CornerId_1);
    C.List_i3t = B._setArrayType(makeConstList([C._Diagonal__CornerId_0__CornerId_3, C._Diagonal__CornerId_3__CornerId_0, C._Diagonal__CornerId_1__CornerId_2, C._Diagonal__CornerId_2__CornerId_1]), B.findType("JSArray<_Diagonal>"));
    C.List_skt = B._setArrayType(makeConstList([D.TargetPlatform_0, D.TargetPlatform_1, D.TargetPlatform_2, D.TargetPlatform_3, D.TargetPlatform_4, D.TargetPlatform_5]), B.findType("JSArray<TargetPlatform>"));
    C.List_true_false = B._setArrayType(makeConstList([true, false]), B.findType("JSArray<bool>"));
    C.LockState_0 = new A.LockState(0, "ignored");
    C.LockState_1 = new A.LockState(1, "locked");
    C.LockState_2 = new A.LockState(2, "unlocked");
    C.LongPressSemanticsEvent_longPress = new A.LongPressSemanticsEvent("longPress");
    C.MainAxisAlignment_0 = new A.MainAxisAlignment(0, "start");
    C.MainAxisAlignment_1 = new A.MainAxisAlignment(1, "end");
    C.MainAxisAlignment_2 = new A.MainAxisAlignment(2, "center");
    C.MainAxisAlignment_3 = new A.MainAxisAlignment(3, "spaceBetween");
    C.MainAxisAlignment_4 = new A.MainAxisAlignment(4, "spaceAround");
    C.MainAxisAlignment_5 = new A.MainAxisAlignment(5, "spaceEvenly");
    C.MainAxisSize_0 = new A.MainAxisSize(0, "min");
    C.MainAxisSize_1 = new A.MainAxisSize(1, "max");
    C.Map_0SNI = new B.GeneralConstantMap([0, "FontWeight.w100", 1, "FontWeight.w200", 2, "FontWeight.w300", 3, "FontWeight.w400", 4, "FontWeight.w500", 5, "FontWeight.w600", 6, "FontWeight.w700", 7, "FontWeight.w800", 8, "FontWeight.w900"], B.findType("GeneralConstantMap<int,String>"));
    C.SingleActivator_FIw5 = new A.SingleActivator(D.LogicalKeyboardKey_32, false, false, false, false, C.LockState_0);
    C.SingleActivator_OBP = new A.SingleActivator(D.LogicalKeyboardKey_4294967309, false, false, false, false, C.LockState_0);
    C.SingleActivator_AmY = new A.SingleActivator(D.LogicalKeyboardKey_8589935117, false, false, false, false, C.LockState_0);
    C.SingleActivator_aRy = new A.SingleActivator(D.LogicalKeyboardKey_4294967323, false, false, false, false, C.LockState_0);
    C.SingleActivator_OBP0 = new A.SingleActivator(D.LogicalKeyboardKey_4294967305, false, false, false, false, C.LockState_0);
    C.SingleActivator_OBP1 = new A.SingleActivator(D.LogicalKeyboardKey_4294967305, false, true, false, false, C.LockState_0);
    C.SingleActivator_EOZ10 = new A.SingleActivator(D.LogicalKeyboardKey_4294968068, false, false, false, false, C.LockState_0);
    C.SingleActivator_EOZ11 = new A.SingleActivator(D.LogicalKeyboardKey_4294968065, false, false, false, false, C.LockState_0);
    C.SingleActivator_EOZ8 = new A.SingleActivator(D.LogicalKeyboardKey_4294968066, false, false, false, false, C.LockState_0);
    C.SingleActivator_EOZ9 = new A.SingleActivator(D.LogicalKeyboardKey_4294968067, false, false, false, false, C.LockState_0);
    C.SingleActivator_ciW = new A.SingleActivator(D.LogicalKeyboardKey_4294968072, false, false, false, false, C.LockState_0);
    C.SingleActivator_EOZ = new A.SingleActivator(D.LogicalKeyboardKey_4294968071, false, false, false, false, C.LockState_0);
    C.C_PrioritizedIntents = new A.PrioritizedIntents();
    C.C_ButtonActivateIntent = new A.ButtonActivateIntent();
    C.C_DismissIntent = new A.DismissIntent();
    C.C_NextFocusIntent = new A.NextFocusIntent();
    C.C_PreviousFocusIntent = new A.PreviousFocusIntent();
    C.ScrollIncrementType_0 = new A.ScrollIncrementType(0, "line");
    C.ScrollIntent_GV5 = new A.ScrollIntent(D.AxisDirection_0, C.ScrollIncrementType_0);
    C.ScrollIntent_jrB = new A.ScrollIntent(D.AxisDirection_2, C.ScrollIncrementType_0);
    C.ScrollIntent_2No = new A.ScrollIntent(D.AxisDirection_3, C.ScrollIncrementType_0);
    C.ScrollIntent_KQb = new A.ScrollIntent(D.AxisDirection_1, C.ScrollIncrementType_0);
    C.ScrollIntent_kuI = new A.ScrollIntent(D.AxisDirection_0, C.ScrollIncrementType_1);
    C.Map_IMYKL = new B.GeneralConstantMap([C.SingleActivator_FIw5, C.C_PrioritizedIntents, C.SingleActivator_OBP, C.C_ButtonActivateIntent, C.SingleActivator_AmY, C.C_ButtonActivateIntent, C.SingleActivator_aRy, C.C_DismissIntent, C.SingleActivator_OBP0, C.C_NextFocusIntent, C.SingleActivator_OBP1, C.C_PreviousFocusIntent, C.SingleActivator_EOZ10, C.ScrollIntent_GV5, C.SingleActivator_EOZ11, C.ScrollIntent_jrB, C.SingleActivator_EOZ8, C.ScrollIntent_2No, C.SingleActivator_EOZ9, C.ScrollIntent_KQb, C.SingleActivator_ciW, C.ScrollIntent_kuI, C.SingleActivator_EOZ, C.ScrollIntent_A0N], type$.GeneralConstantMap_ShortcutActivator_Intent);
    C.SingleActivator_EOZ19 = new A.SingleActivator(D.LogicalKeyboardKey_4294968065, false, false, true, false, C.LockState_0);
    C.SingleActivator_EOZ16 = new A.SingleActivator(D.LogicalKeyboardKey_4294968066, false, false, true, false, C.LockState_0);
    C.SingleActivator_EOZ17 = new A.SingleActivator(D.LogicalKeyboardKey_4294968067, false, false, true, false, C.LockState_0);
    C.SingleActivator_EOZ18 = new A.SingleActivator(D.LogicalKeyboardKey_4294968068, false, false, true, false, C.LockState_0);
    C.SingleActivator_EOZ34 = new A.SingleActivator(D.LogicalKeyboardKey_4294968065, false, false, false, true, C.LockState_0);
    C.SingleActivator_EOZ31 = new A.SingleActivator(D.LogicalKeyboardKey_4294968066, false, false, false, true, C.LockState_0);
    C.SingleActivator_EOZ32 = new A.SingleActivator(D.LogicalKeyboardKey_4294968067, false, false, false, true, C.LockState_0);
    C.SingleActivator_EOZ33 = new A.SingleActivator(D.LogicalKeyboardKey_4294968068, false, false, false, true, C.LockState_0);
    C.SingleActivator_EOZ24 = new A.SingleActivator(D.LogicalKeyboardKey_4294968066, true, false, false, false, C.LockState_0);
    C.SingleActivator_EOZ25 = new A.SingleActivator(D.LogicalKeyboardKey_4294968067, true, false, false, false, C.LockState_0);
    C.SingleActivator_EOZ26 = new A.SingleActivator(D.LogicalKeyboardKey_4294968066, true, true, false, false, C.LockState_0);
    C.SingleActivator_EOZ27 = new A.SingleActivator(D.LogicalKeyboardKey_4294968067, true, true, false, false, C.LockState_0);
    C.Map_axQ1p = new B.GeneralConstantMap([C.SingleActivator_EOZ19, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_EOZ16, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_EOZ17, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_EOZ18, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_EOZ34, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_EOZ31, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_EOZ32, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_EOZ33, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_EOZ11, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_EOZ8, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_EOZ9, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_EOZ10, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_EOZ24, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_EOZ25, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_EOZ26, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_EOZ27, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_FIw5, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_OBP, C.C_DoNothingAndStopPropagationTextIntent], type$.GeneralConstantMap_ShortcutActivator_Intent);
    C.Map_empty5 = new B.ConstantStringMap(F.Object_empty, [], B.findType("ConstantStringMap<Object,_HeroState>"));
    C.Map_empty4 = new B.ConstantStringMap(F.Object_empty, [], B.findType("ConstantStringMap<ShortcutActivator,Intent>"));
    C.Map_empty3 = new B.ConstantStringMap(F.Object_empty, [], B.findType("ConstantStringMap<String,Widget(BuildContext)>"));
    C.Map_empty1 = new B.ConstantStringMap(F.Object_empty, [], B.findType("ConstantStringMap<Type,GestureRecognizer>"));
    C.Map_empty7 = new B.ConstantStringMap(F.Object_empty, [], B.findType("ConstantStringMap<Type,GestureRecognizerFactory<GestureRecognizer>>"));
    C.SingleActivator_OBP2 = new A.SingleActivator(D.LogicalKeyboardKey_4294967304, false, false, false, false, C.LockState_0);
    C.SingleActivator_OBP3 = new A.SingleActivator(D.LogicalKeyboardKey_4294967304, false, true, false, false, C.LockState_0);
    C.SingleActivator_kjl = new A.SingleActivator(D.LogicalKeyboardKey_4294967423, false, false, false, false, C.LockState_0);
    C.SingleActivator_kjl0 = new A.SingleActivator(D.LogicalKeyboardKey_4294967423, false, true, false, false, C.LockState_0);
    C.SingleActivator_OBP4 = new A.SingleActivator(D.LogicalKeyboardKey_4294967304, false, true, true, false, C.LockState_0);
    C.SingleActivator_OBP5 = new A.SingleActivator(D.LogicalKeyboardKey_4294967304, false, false, true, false, C.LockState_0);
    C.SingleActivator_kjl1 = new A.SingleActivator(D.LogicalKeyboardKey_4294967423, false, true, true, false, C.LockState_0);
    C.SingleActivator_kjl2 = new A.SingleActivator(D.LogicalKeyboardKey_4294967423, false, false, true, false, C.LockState_0);
    C.Map_rrcAz = new B.GeneralConstantMap([C.SingleActivator_OBP2, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_OBP3, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_kjl, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_kjl0, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_OBP4, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_OBP5, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_kjl1, C.C_DoNothingAndStopPropagationTextIntent, C.SingleActivator_kjl2, C.C_DoNothingAndStopPropagationTextIntent], type$.GeneralConstantMap_ShortcutActivator_Intent);
    C.Color_4289200107 = new E.Color(4289200107);
    C.Color_4284809178 = new E.Color(4284809178);
    C.Color_4280150454 = new E.Color(4280150454);
    C.Color_4278239141 = new E.Color(4278239141);
    C.Map_3JMhZ = new B.GeneralConstantMap([100, C.Color_4289200107, 200, C.Color_4284809178, 400, C.Color_4280150454, 700, C.Color_4278239141], type$.GeneralConstantMap_int_Color);
    C.MaterialAccentColor_Map_3JMhZ_4284809178 = new A.MaterialAccentColor(C.Map_3JMhZ, 4284809178);
    C.MaterialBannerThemeData_kyy = new A.MaterialBannerThemeData(null, null, null, null, null, null, null, null);
    C.Color_4294638330 = new E.Color(4294638330);
    C.Color_4294309365 = new E.Color(4294309365);
    C.Color_4293848814 = new E.Color(4293848814);
    C.Color_4292927712 = new E.Color(4292927712);
    C.Color_4292269782 = new E.Color(4292269782);
    C.Color_4290624957 = new E.Color(4290624957);
    C.Color_4288585374 = new E.Color(4288585374);
    C.Color_4284572001 = new E.Color(4284572001);
    C.Color_4282532418 = new E.Color(4282532418);
    C.Color_4280361249 = new E.Color(4280361249);
    C.Map_Ng0Da = new B.GeneralConstantMap([50, C.Color_4294638330, 100, C.Color_4294309365, 200, C.Color_4293848814, 300, C.Color_4292927712, 350, C.Color_4292269782, 400, C.Color_4290624957, 500, C.Color_4288585374, 600, C.Color_4285887861, 700, C.Color_4284572001, 800, C.Color_4282532418, 850, D.Color_4281348144, 900, C.Color_4280361249], type$.GeneralConstantMap_int_Color);
    C.MaterialColor_Map_Ng0Da_4288585374 = new A.MaterialColor(C.Map_Ng0Da, 4288585374);
    C.Color_4293128957 = new E.Color(4293128957);
    C.Color_4290502395 = new E.Color(4290502395);
    C.Color_4287679225 = new E.Color(4287679225);
    C.Color_4284790262 = new E.Color(4284790262);
    C.Color_4282557941 = new E.Color(4282557941);
    C.Color_4280391411 = new E.Color(4280391411);
    C.Color_4280191205 = new E.Color(4280191205);
    C.Color_4279858898 = new E.Color(4279858898);
    C.Color_4279592384 = new E.Color(4279592384);
    C.Color_4279060385 = new E.Color(4279060385);
    C.Map_ky0 = new B.GeneralConstantMap([50, C.Color_4293128957, 100, C.Color_4290502395, 200, C.Color_4287679225, 300, C.Color_4284790262, 400, C.Color_4282557941, 500, C.Color_4280391411, 600, C.Color_4280191205, 700, C.Color_4279858898, 800, C.Color_4279592384, 900, C.Color_4279060385], type$.GeneralConstantMap_int_Color);
    C.MaterialColor_Map_ky0_4280391411 = new A.MaterialColor(C.Map_ky0, 4280391411);
    C.Color_4294962158 = new E.Color(4294962158);
    C.Color_4294954450 = new E.Color(4294954450);
    C.Color_4293892762 = new E.Color(4293892762);
    C.Color_4293227379 = new E.Color(4293227379);
    C.Color_4293874512 = new E.Color(4293874512);
    C.Color_4294198070 = new E.Color(4294198070);
    C.Color_4293212469 = new E.Color(4293212469);
    C.Color_4292030255 = new E.Color(4292030255);
    C.Color_4291176488 = new E.Color(4291176488);
    C.Color_4290190364 = new E.Color(4290190364);
    C.Map_kygsm = new B.GeneralConstantMap([50, C.Color_4294962158, 100, C.Color_4294954450, 200, C.Color_4293892762, 300, C.Color_4293227379, 400, C.Color_4293874512, 500, C.Color_4294198070, 600, C.Color_4293212469, 700, C.Color_4292030255, 800, C.Color_4291176488, 900, C.Color_4290190364], type$.GeneralConstantMap_int_Color);
    C.MaterialColor_Map_kygsm_4294198070 = new A.MaterialColor(C.Map_kygsm, 4294198070);
    C.MaterialTapTargetSize_0 = new A.MaterialTapTargetSize(0, "padded");
    C.MaterialTapTargetSize_1 = new A.MaterialTapTargetSize(1, "shrinkWrap");
    C.MaterialType_0 = new A.MaterialType(0, "canvas");
    C.MaterialType_1 = new A.MaterialType(1, "card");
    C.MaterialType_2 = new A.MaterialType(2, "circle");
    C.MaterialType_3 = new A.MaterialType(3, "button");
    C.MaterialType_4 = new A.MaterialType(4, "transparency");
    C.MenuBarThemeData_null = new A.MenuBarThemeData(null);
    C.MenuButtonThemeData_null = new A.MenuButtonThemeData(null);
    C.MenuThemeData_null = new A.MenuThemeData(null);
    C.MultitouchDragStrategy_0 = new A.MultitouchDragStrategy(0, "latestPointer");
    C.MultitouchDragStrategy_1 = new A.MultitouchDragStrategy(1, "averageBoundaryPointers");
    C.MultitouchDragStrategy_2 = new A.MultitouchDragStrategy(2, "sumAllPointers");
    C.NavigationBarThemeData_iDZ = new A.NavigationBarThemeData(null, null, null, null, null, null, null, null, null, null, null);
    C.NavigationDrawerThemeData_qdZ = new A.NavigationDrawerThemeData(null, null, null, null, null, null, null, null, null, null);
    C.NavigationMode_1 = new E.NavigationMode(1, "directional");
    C.NavigationNotification_true = new A.NavigationNotification(true);
    C.NavigationRailThemeData_yLS = new A.NavigationRailThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.OffsetPair_TcR = new A.OffsetPair(D.Offset_0_0, D.Offset_0_0);
    C.Offset_0_1 = new E.Offset(0, 1);
    C.Offset_1_0 = new E.Offset(1, 0);
    C.Offset_7BT = new E.Offset(0, -0.005);
    C.Offset_wEo = new E.Offset(-0.3333333333333333, 0);
    C.Offset_y9W = new E.Offset(1 / 0, 0);
    C.OrdinalSortKey_0_null = new A.OrdinalSortKey(0, null);
    C.OrdinalSortKey_1_null = new A.OrdinalSortKey(1, null);
    C.OutlinedButtonThemeData_null = new A.OutlinedButtonThemeData(null);
    C.ParagraphConstraints_XfG = new E.ParagraphConstraints(1 / 0);
    C.PlaceholderDimensions_ePs = new A.PlaceholderDimensions(D.Size_0_0, D.PlaceholderAlignment_4, null, null);
    C.PopupMenuThemeData_sav = new A.PopupMenuThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.ProgressIndicatorThemeData_3Ff = new A.ProgressIndicatorThemeData(null, null, null, null, null);
    C.RadioThemeData_ZFl = new A.RadioThemeData(null, null, null, null, null, null);
    C.Record2_0_0 = new B._Record_2(0, 0);
    C.Record2_0_true = new B._Record_2(0, true);
    C.RenderComparison_0 = new A.RenderComparison(0, "identical");
    C.RenderComparison_1 = new A.RenderComparison(1, "metadata");
    C.RenderComparison_2 = new A.RenderComparison(2, "paint");
    C.RenderComparison_3 = new A.RenderComparison(3, "layout");
    C.RoundedRectangleBorder_NYu0 = new A.RoundedRectangleBorder(C.BorderRadius_ww8, C.BorderSide_Q1M);
    C.Radius_2_2 = new E.Radius(2, 2);
    C.BorderRadius_ww80 = new A.BorderRadius(C.Radius_2_2, C.Radius_2_2, C.Radius_2_2, C.Radius_2_2);
    C.RoundedRectangleBorder_NYu = new A.RoundedRectangleBorder(C.BorderRadius_ww80, C.BorderSide_Q1M);
    C.Radius_12_12 = new E.Radius(12, 12);
    C.BorderRadius_ww81 = new A.BorderRadius(C.Radius_12_12, C.Radius_12_12, C.Radius_12_12, C.Radius_12_12);
    C.RoundedRectangleBorder_NYu2 = new A.RoundedRectangleBorder(C.BorderRadius_ww81, C.BorderSide_Q1M);
    C.Radius_16_16 = new E.Radius(16, 16);
    C.BorderRadius_ww82 = new A.BorderRadius(C.Radius_16_16, C.Radius_16_16, C.Radius_16_16, C.Radius_16_16);
    C.RoundedRectangleBorder_NYu1 = new A.RoundedRectangleBorder(C.BorderRadius_ww82, C.BorderSide_Q1M);
    C.Radius_28_28 = new E.Radius(28, 28);
    C.BorderRadius_ww83 = new A.BorderRadius(C.Radius_28_28, C.Radius_28_28, C.Radius_28_28, C.Radius_28_28);
    C.RoundedRectangleBorder_NYu3 = new A.RoundedRectangleBorder(C.BorderRadius_ww83, C.BorderSide_Q1M);
    C.RouteInformationReportingType_0 = new A.RouteInformationReportingType(0, "none");
    C.RoutePopDisposition_0 = new A.RoutePopDisposition(0, "pop");
    C.RoutePopDisposition_1 = new A.RoutePopDisposition(1, "doNotPop");
    C.RoutePopDisposition_2 = new A.RoutePopDisposition(2, "bubble");
    C.RouteSettings_null_null = new A.RouteSettings(null, null);
    C.ScriptCategory_0 = new A.ScriptCategory(0, "englishLike");
    C.ScrollbarThemeData_SEb = new A.ScrollbarThemeData(null, null, null, null, null, null, null, null, null, null, null);
    C.SearchBarThemeData_K1g = new A.SearchBarThemeData(null, null, null, null, null, null, null, null, null, null, null, null);
    C.SearchViewThemeData_gT2 = new A.SearchViewThemeData(null, null, null, null, null, null, null, null, null, null);
    C.SegmentedButtonThemeData_null_null = new A.SegmentedButtonThemeData(null, null);
    C.SelectionEventType_0 = new A.SelectionEventType(0, "startEdgeUpdate");
    C.SelectionEventType_1 = new A.SelectionEventType(1, "endEdgeUpdate");
    C.SelectionEventType_3 = new A.SelectionEventType(3, "selectAll");
    C.SelectionEventType_4 = new A.SelectionEventType(4, "selectWord");
    C.SelectionEventType_5 = new A.SelectionEventType(5, "selectParagraph");
    C.SelectionEventType_6 = new A.SelectionEventType(6, "granularlyExtendSelection");
    C.SelectionEventType_7 = new A.SelectionEventType(7, "directionallyExtendSelection");
    C.SelectionExtendDirection_0 = new A.SelectionExtendDirection(0, "previousLine");
    C.SelectionExtendDirection_1 = new A.SelectionExtendDirection(1, "nextLine");
    C.SelectionExtendDirection_2 = new A.SelectionExtendDirection(2, "forward");
    C.SelectionExtendDirection_3 = new A.SelectionExtendDirection(3, "backward");
    C.SelectionStatus_2 = new A.SelectionStatus(2, "none");
    C.SelectionGeometry_2jN0 = new A.SelectionGeometry(null, null, C.SelectionStatus_2, C.List_empty8, false);
    C.SelectionGeometry_2jN = new A.SelectionGeometry(null, null, C.SelectionStatus_2, C.List_empty8, true);
    C.SelectionResult_0 = new A.SelectionResult(0, "next");
    C.SelectionResult_1 = new A.SelectionResult(1, "previous");
    C.SelectionResult_2 = new A.SelectionResult(2, "end");
    C.SelectionResult_3 = new A.SelectionResult(3, "pending");
    C.SelectionResult_4 = new A.SelectionResult(4, "none");
    C.SelectionStatus_0 = new A.SelectionStatus(0, "uncollapsed");
    C.SelectionStatus_1 = new A.SelectionStatus(1, "collapsed");
    C.Set_Hr9R1 = new E.GeneralConstantSet([D.TargetPlatform_0, D.TargetPlatform_2, D.TargetPlatform_1], B.findType("GeneralConstantSet<TargetPlatform>"));
    C.WidgetState_0 = new A.WidgetState(0, "hovered");
    C.Set_MpbDd = new E.GeneralConstantSet([C.WidgetState_0], type$.GeneralConstantSet_WidgetState);
    C.WidgetState_2 = new A.WidgetState(2, "pressed");
    C.Set_VEyFa = new E.GeneralConstantSet([C.WidgetState_2], type$.GeneralConstantSet_WidgetState);
    C.WidgetState_1 = new A.WidgetState(1, "focused");
    C.Set_Y7pti = new E.GeneralConstantSet([C.WidgetState_1], type$.GeneralConstantSet_WidgetState);
    C.Set_empty = new E.ConstantStringSet(F.Object_empty, 0, B.findType("ConstantStringSet<WidgetState>"));
    C.SingleActivator_A4L = new A.SingleActivator(D.LogicalKeyboardKey_8589935150, false, true, false, false, C.LockState_1);
    C.SingleActivator_A4L0 = new A.SingleActivator(D.LogicalKeyboardKey_8589935150, true, true, false, false, C.LockState_1);
    C.SingleActivator_EOZ1 = new A.SingleActivator(D.LogicalKeyboardKey_4294968069, false, false, false, false, C.LockState_0);
    C.SingleActivator_EOZ0 = new A.SingleActivator(D.LogicalKeyboardKey_4294968070, false, false, false, false, C.LockState_0);
    C.SingleActivator_EOZ15 = new A.SingleActivator(D.LogicalKeyboardKey_4294968065, false, true, false, false, C.LockState_0);
    C.SingleActivator_EOZ12 = new A.SingleActivator(D.LogicalKeyboardKey_4294968066, false, true, false, false, C.LockState_0);
    C.SingleActivator_EOZ13 = new A.SingleActivator(D.LogicalKeyboardKey_4294968067, false, true, false, false, C.LockState_0);
    C.SingleActivator_EOZ14 = new A.SingleActivator(D.LogicalKeyboardKey_4294968068, false, true, false, false, C.LockState_0);
    C.SingleActivator_EOZ3 = new A.SingleActivator(D.LogicalKeyboardKey_4294968069, false, true, false, false, C.LockState_0);
    C.SingleActivator_EOZ2 = new A.SingleActivator(D.LogicalKeyboardKey_4294968070, false, true, false, false, C.LockState_0);
    C.SingleActivator_EOZ30 = new A.SingleActivator(D.LogicalKeyboardKey_4294968071, false, true, false, false, C.LockState_0);
    C.SingleActivator_EOZ38 = new A.SingleActivator(D.LogicalKeyboardKey_4294968065, false, true, false, true, C.LockState_0);
    C.SingleActivator_EOZ35 = new A.SingleActivator(D.LogicalKeyboardKey_4294968066, false, true, false, true, C.LockState_0);
    C.SingleActivator_EOZ36 = new A.SingleActivator(D.LogicalKeyboardKey_4294968067, false, true, false, true, C.LockState_0);
    C.SingleActivator_EOZ37 = new A.SingleActivator(D.LogicalKeyboardKey_4294968068, false, true, false, true, C.LockState_0);
    C.SingleActivator_EOZ5 = new A.SingleActivator(D.LogicalKeyboardKey_4294968069, true, false, false, false, C.LockState_0);
    C.SingleActivator_EOZ4 = new A.SingleActivator(D.LogicalKeyboardKey_4294968070, true, false, false, false, C.LockState_0);
    C.SingleActivator_EOZ29 = new A.SingleActivator(D.LogicalKeyboardKey_4294968065, true, true, false, false, C.LockState_0);
    C.SingleActivator_EOZ28 = new A.SingleActivator(D.LogicalKeyboardKey_4294968068, true, true, false, false, C.LockState_0);
    C.SingleActivator_EOZ7 = new A.SingleActivator(D.LogicalKeyboardKey_4294968069, true, true, false, false, C.LockState_0);
    C.SingleActivator_EOZ6 = new A.SingleActivator(D.LogicalKeyboardKey_4294968070, true, true, false, false, C.LockState_0);
    C.SingleActivator_EOZ23 = new A.SingleActivator(D.LogicalKeyboardKey_4294968065, false, true, true, false, C.LockState_0);
    C.SingleActivator_EOZ20 = new A.SingleActivator(D.LogicalKeyboardKey_4294968066, false, true, true, false, C.LockState_0);
    C.SingleActivator_EOZ21 = new A.SingleActivator(D.LogicalKeyboardKey_4294968067, false, true, true, false, C.LockState_0);
    C.SingleActivator_EOZ22 = new A.SingleActivator(D.LogicalKeyboardKey_4294968068, false, true, true, false, C.LockState_0);
    C.SingleActivator_EyN = new A.SingleActivator(D.LogicalKeyboardKey_8589935160, false, true, false, false, C.LockState_1);
    C.SingleActivator_EyN1 = new A.SingleActivator(D.LogicalKeyboardKey_8589935161, false, true, false, false, C.LockState_1);
    C.SingleActivator_EyN0 = new A.SingleActivator(D.LogicalKeyboardKey_8589935160, true, true, false, false, C.LockState_1);
    C.SingleActivator_FIw10 = new A.SingleActivator(D.LogicalKeyboardKey_97, false, false, false, true, C.LockState_0);
    C.SingleActivator_FIw8 = new A.SingleActivator(D.LogicalKeyboardKey_99, false, false, false, true, C.LockState_0);
    C.SingleActivator_FIw9 = new A.SingleActivator(D.LogicalKeyboardKey_118, false, false, false, true, C.LockState_0);
    C.SingleActivator_FIw7 = new A.SingleActivator(D.LogicalKeyboardKey_120, false, false, false, true, C.LockState_0);
    C.SingleActivator_FIw11 = new A.SingleActivator(D.LogicalKeyboardKey_122, false, false, false, true, C.LockState_0);
    C.SingleActivator_FIw12 = new A.SingleActivator(D.LogicalKeyboardKey_122, false, true, false, true, C.LockState_0);
    C.SingleActivator_FIw2 = new A.SingleActivator(D.LogicalKeyboardKey_97, true, false, false, false, C.LockState_0);
    C.SingleActivator_FIw15 = new A.SingleActivator(D.LogicalKeyboardKey_98, true, false, false, false, C.LockState_0);
    C.SingleActivator_FIw0 = new A.SingleActivator(D.LogicalKeyboardKey_99, true, false, false, false, C.LockState_0);
    C.SingleActivator_FIw13 = new A.SingleActivator(D.LogicalKeyboardKey_101, true, false, false, false, C.LockState_0);
    C.SingleActivator_FIw14 = new A.SingleActivator(D.LogicalKeyboardKey_102, true, false, false, false, C.LockState_0);
    C.SingleActivator_FIw16 = new A.SingleActivator(D.LogicalKeyboardKey_110, true, false, false, false, C.LockState_0);
    C.SingleActivator_FIw17 = new A.SingleActivator(D.LogicalKeyboardKey_112, true, false, false, false, C.LockState_0);
    C.SingleActivator_FIw6 = new A.SingleActivator(D.LogicalKeyboardKey_116, true, false, false, false, C.LockState_0);
    C.SingleActivator_FIw1 = new A.SingleActivator(D.LogicalKeyboardKey_118, true, false, false, false, C.LockState_0);
    C.SingleActivator_FIw = new A.SingleActivator(D.LogicalKeyboardKey_120, true, false, false, false, C.LockState_0);
    C.SingleActivator_FIw3 = new A.SingleActivator(D.LogicalKeyboardKey_122, true, false, false, false, C.LockState_0);
    C.SingleActivator_FIw4 = new A.SingleActivator(D.LogicalKeyboardKey_122, true, true, false, false, C.LockState_0);
    C.SingleActivator_Gp57 = new A.SingleActivator(D.LogicalKeyboardKey_8589935153, false, false, false, false, C.LockState_2);
    C.SingleActivator_Gp51 = new A.SingleActivator(D.LogicalKeyboardKey_8589935154, false, false, false, false, C.LockState_2);
    C.SingleActivator_Gp55 = new A.SingleActivator(D.LogicalKeyboardKey_8589935155, false, false, false, false, C.LockState_2);
    C.SingleActivator_Gp50 = new A.SingleActivator(D.LogicalKeyboardKey_8589935156, false, false, false, false, C.LockState_2);
    C.SingleActivator_Gp5 = new A.SingleActivator(D.LogicalKeyboardKey_8589935158, false, false, false, false, C.LockState_2);
    C.SingleActivator_Gp56 = new A.SingleActivator(D.LogicalKeyboardKey_8589935159, false, false, false, false, C.LockState_2);
    C.SingleActivator_Gp54 = new A.SingleActivator(D.LogicalKeyboardKey_8589935154, true, false, false, false, C.LockState_2);
    C.SingleActivator_Gp53 = new A.SingleActivator(D.LogicalKeyboardKey_8589935156, true, false, false, false, C.LockState_2);
    C.SingleActivator_Gp52 = new A.SingleActivator(D.LogicalKeyboardKey_8589935158, true, false, false, false, C.LockState_2);
    C.SingleActivator_KlX = new A.SingleActivator(D.LogicalKeyboardKey_8589935150, false, false, false, false, C.LockState_2);
    C.SingleActivator_KlX0 = new A.SingleActivator(D.LogicalKeyboardKey_8589935150, true, false, false, false, C.LockState_2);
    C.SingleActivator_Qtz = new A.SingleActivator(D.LogicalKeyboardKey_8589935160, false, false, false, false, C.LockState_2);
    C.SingleActivator_Qtz1 = new A.SingleActivator(D.LogicalKeyboardKey_8589935161, false, false, false, false, C.LockState_2);
    C.SingleActivator_Qtz0 = new A.SingleActivator(D.LogicalKeyboardKey_8589935160, true, false, false, false, C.LockState_2);
    C.SingleActivator_ciW0 = new A.SingleActivator(D.LogicalKeyboardKey_4294968072, false, true, false, false, C.LockState_0);
    C.SingleActivator_saY7 = new A.SingleActivator(D.LogicalKeyboardKey_8589935153, false, true, false, false, C.LockState_1);
    C.SingleActivator_saY1 = new A.SingleActivator(D.LogicalKeyboardKey_8589935154, false, true, false, false, C.LockState_1);
    C.SingleActivator_saY5 = new A.SingleActivator(D.LogicalKeyboardKey_8589935155, false, true, false, false, C.LockState_1);
    C.SingleActivator_saY0 = new A.SingleActivator(D.LogicalKeyboardKey_8589935156, false, true, false, false, C.LockState_1);
    C.SingleActivator_saY = new A.SingleActivator(D.LogicalKeyboardKey_8589935158, false, true, false, false, C.LockState_1);
    C.SingleActivator_saY6 = new A.SingleActivator(D.LogicalKeyboardKey_8589935159, false, true, false, false, C.LockState_1);
    C.SingleActivator_saY4 = new A.SingleActivator(D.LogicalKeyboardKey_8589935154, true, true, false, false, C.LockState_1);
    C.SingleActivator_saY3 = new A.SingleActivator(D.LogicalKeyboardKey_8589935156, true, true, false, false, C.LockState_1);
    C.SingleActivator_saY2 = new A.SingleActivator(D.LogicalKeyboardKey_8589935158, true, true, false, false, C.LockState_1);
    C.SizedBox_0_0_null_null = new E.SizedBox(0, 0, null, null);
    C.SizedBox_5_null_null_null = new E.SizedBox(5, null, null, null);
    C.SliderThemeData_94D = new A.SliderThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.SnackBarClosedReason_3 = new A.SnackBarClosedReason(3, "hide");
    C.SnackBarClosedReason_5 = new A.SnackBarClosedReason(5, "timeout");
    C.SnackBarThemeData_VWS = new A.SnackBarThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.SnapshotMode_0 = new A.SnapshotMode(0, "permissive");
    C.SnapshotMode_1 = new A.SnapshotMode(1, "normal");
    C.SnapshotMode_2 = new A.SnapshotMode(2, "forced");
    C.StackFit_0 = new A.StackFit(0, "loose");
    C.StackFit_1 = new A.StackFit(1, "expand");
    C.StackFit_2 = new A.StackFit(2, "passthrough");
    C.StadiumBorder_7BT = new A.StadiumBorder(C.BorderSide_Q1M);
    C.SwitchThemeData_KTZ = new A.SwitchThemeData(null, null, null, null, null, null, null, null, null);
    C.SystemMouseCursor_text = new E.SystemMouseCursor("text");
    C.SystemSoundType_0 = new A.SystemSoundType(0, "click");
    C.SystemSoundType_1 = new A.SystemSoundType(1, "alert");
    C.TabBarTheme_61L = new A.TabBarTheme(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.TapSemanticEvent_tap = new A.TapSemanticEvent("tap");
    C.TextButtonThemeData_null = new A.TextButtonThemeData(null);
    C.TextGranularity_0 = new A.TextGranularity(0, "character");
    C.TextGranularity_2 = new A.TextGranularity(2, "paragraph");
    C.TextOverflow_1 = new A.TextOverflow(1, "fade");
    C.TextOverflow_2 = new A.TextOverflow(2, "ellipsis");
    C.TextOverflow_3 = new A.TextOverflow(3, "visible");
    C.TextSelectionHandleType_0 = new A.TextSelectionHandleType(0, "left");
    C.TextSelectionHandleType_1 = new A.TextSelectionHandleType(1, "right");
    C.TextSelectionThemeData_null_null_null = new A.TextSelectionThemeData(null, null, null);
    C.TextStyle_IJC = new A.TextStyle(false, C.CupertinoDynamicColor_kr3, null, "CupertinoSystemDisplay", null, null, 21, C.FontWeight_3, null, -0.6, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.TextStyle_JEl = new A.TextStyle(false, C.CupertinoDynamicColor_kr3, null, "CupertinoSystemDisplay", null, null, 21, C.FontWeight_3, null, 0.4, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.TextStyle_QpY = new A.TextStyle(false, C.CupertinoDynamicColor_kr3, null, "CupertinoSystemDisplay", null, null, 34, C.FontWeight_6, null, 0.38, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.TextStyle_Vnt = new A.TextStyle(false, C.CupertinoDynamicColor_kr3, null, "CupertinoSystemText", null, null, 17, C.FontWeight_5, null, -0.41, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.TextStyle_W2f = new A.TextStyle(true, null, null, null, null, null, null, C.FontWeight_6, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.TextStyle_cQL = new A.TextStyle(false, C.CupertinoDynamicColor_kr3, null, "CupertinoSystemText", null, null, 17, null, null, -0.41, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, null, null, null, null, null);
    C.Color_3506372608 = new E.Color(3506372608);
    C.Color_4294967040 = new E.Color(4294967040);
    C.TextStyle_eRy = new A.TextStyle(true, C.Color_3506372608, null, "monospace", null, null, 48, C.FontWeight_8, null, null, null, null, null, null, null, null, null, D.TextDecoration_1, C.Color_4294967040, D.TextDecorationStyle_1, null, "fallback style; consider putting your text in a Material", null, null, null, null);
    C.TextStyle_gri = new A.TextStyle(false, C.CupertinoDynamicColor_kw7, null, "CupertinoSystemText", null, null, 17, null, null, -0.41, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, null, null, null, null, null);
    C.TextStyle_qBv = new A.TextStyle(true, C.Color_4278190080, null, null, null, null, 10, null, null, null, null, null, 0.8, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.TextStyle_ufz = new A.TextStyle(false, C.CupertinoDynamicColor_MIV, null, "CupertinoSystemText", null, null, 10, C.FontWeight_4, null, -0.24, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.TextStyle_QKc = new A.TextStyle(true, C.Color_2315255808, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedwoodCity displayLarge", null, null, null, null);
    C.TextStyle_ahs = new A.TextStyle(true, C.Color_2315255808, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedwoodCity displayMedium", null, null, null, null);
    C.TextStyle_QKc0 = new A.TextStyle(true, C.Color_2315255808, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedwoodCity displaySmall", null, null, null, null);
    C.TextStyle_xw8 = new A.TextStyle(true, C.Color_2315255808, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedwoodCity headlineLarge", null, null, null, null);
    C.TextStyle_izR = new A.TextStyle(true, C.Color_2315255808, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedwoodCity headlineMedium", null, null, null, null);
    C.Color_3707764736 = new E.Color(3707764736);
    C.TextStyle_A4L = new A.TextStyle(true, C.Color_3707764736, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedwoodCity headlineSmall", null, null, null, null);
    C.TextStyle_zvl = new A.TextStyle(true, C.Color_3707764736, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedwoodCity titleLarge", null, null, null, null);
    C.TextStyle_SNN = new A.TextStyle(true, C.Color_3707764736, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedwoodCity titleMedium", null, null, null, null);
    C.TextStyle_VYA = new A.TextStyle(true, C.Color_4278190080, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedwoodCity titleSmall", null, null, null, null);
    C.TextStyle_kqo = new A.TextStyle(true, C.Color_3707764736, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedwoodCity bodyLarge", null, null, null, null);
    C.TextStyle_gg4 = new A.TextStyle(true, C.Color_3707764736, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedwoodCity bodyMedium", null, null, null, null);
    C.TextStyle_sgF = new A.TextStyle(true, C.Color_2315255808, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedwoodCity bodySmall", null, null, null, null);
    C.TextStyle_0 = new A.TextStyle(true, C.Color_3707764736, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedwoodCity labelLarge", null, null, null, null);
    C.TextStyle_lw7 = new A.TextStyle(true, C.Color_4278190080, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedwoodCity labelMedium", null, null, null, null);
    C.TextStyle_6ld = new A.TextStyle(true, C.Color_4278190080, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedwoodCity labelSmall", null, null, null, null);
    C.TextTheme_48f = new A.TextTheme(C.TextStyle_QKc, C.TextStyle_ahs, C.TextStyle_QKc0, C.TextStyle_xw8, C.TextStyle_izR, C.TextStyle_A4L, C.TextStyle_zvl, C.TextStyle_SNN, C.TextStyle_VYA, C.TextStyle_kqo, C.TextStyle_gg4, C.TextStyle_sgF, C.TextStyle_0, C.TextStyle_lw7, C.TextStyle_6ld);
    C.TextStyle_gsm = new A.TextStyle(false, null, null, null, null, null, 112, C.FontWeight_0, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense displayLarge 2014", null, null, null, null);
    C.TextStyle_FIw = new A.TextStyle(false, null, null, null, null, null, 56, C.FontWeight_3, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense displayMedium 2014", null, null, null, null);
    C.TextStyle_rBh = new A.TextStyle(false, null, null, null, null, null, 45, C.FontWeight_3, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense displaySmall 2014", null, null, null, null);
    C.TextStyle_HZv = new A.TextStyle(false, null, null, null, null, null, 40, C.FontWeight_3, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense headlineLarge 2014", null, null, null, null);
    C.TextStyle_Feh = new A.TextStyle(false, null, null, null, null, null, 34, C.FontWeight_3, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense headlineMedium 2014", null, null, null, null);
    C.TextStyle_uUr = new A.TextStyle(false, null, null, null, null, null, 24, C.FontWeight_3, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense headlineSmall 2014", null, null, null, null);
    C.TextStyle_5GT = new A.TextStyle(false, null, null, null, null, null, 21, C.FontWeight_4, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense titleLarge 2014", null, null, null, null);
    C.TextStyle_IYd = new A.TextStyle(false, null, null, null, null, null, 17, C.FontWeight_3, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense titleMedium 2014", null, null, null, null);
    C.TextStyle_YEt = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_4, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense titleSmall 2014", null, null, null, null);
    C.TextStyle_e7M = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_4, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense bodyLarge 2014", null, null, null, null);
    C.TextStyle_iYS = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_3, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense bodyMedium 2014", null, null, null, null);
    C.TextStyle_Hp5 = new A.TextStyle(false, null, null, null, null, null, 13, C.FontWeight_3, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense bodySmall 2014", null, null, null, null);
    C.TextStyle_p6N = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_4, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense labelLarge 2014", null, null, null, null);
    C.TextStyle_cfV = new A.TextStyle(false, null, null, null, null, null, 12, C.FontWeight_3, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense labelMedium 2014", null, null, null, null);
    C.TextStyle_bOB = new A.TextStyle(false, null, null, null, null, null, 11, C.FontWeight_3, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense labelSmall 2014", null, null, null, null);
    C.TextTheme_9SL = new A.TextTheme(C.TextStyle_gsm, C.TextStyle_FIw, C.TextStyle_rBh, C.TextStyle_HZv, C.TextStyle_Feh, C.TextStyle_uUr, C.TextStyle_5GT, C.TextStyle_IYd, C.TextStyle_YEt, C.TextStyle_e7M, C.TextStyle_iYS, C.TextStyle_Hp5, C.TextStyle_p6N, C.TextStyle_cfV, C.TextStyle_bOB);
    C.TextStyle_yfE = new A.TextStyle(true, C.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedmond displayLarge", null, null, null, null);
    C.TextStyle_C9x = new A.TextStyle(true, C.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedmond displayMedium", null, null, null, null);
    C.TextStyle_PGb = new A.TextStyle(true, C.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedmond displaySmall", null, null, null, null);
    C.TextStyle_qpY = new A.TextStyle(true, C.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedmond headlineLarge", null, null, null, null);
    C.TextStyle_mvO = new A.TextStyle(true, C.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedmond headlineMedium", null, null, null, null);
    C.TextStyle_AMJ = new A.TextStyle(true, C.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedmond headlineSmall", null, null, null, null);
    C.TextStyle_qz5 = new A.TextStyle(true, C.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedmond titleLarge", null, null, null, null);
    C.TextStyle_s0t = new A.TextStyle(true, C.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedmond titleMedium", null, null, null, null);
    C.TextStyle_wT1 = new A.TextStyle(true, C.Color_4278190080, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedmond titleSmall", null, null, null, null);
    C.TextStyle_rq9 = new A.TextStyle(true, C.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedmond bodyLarge", null, null, null, null);
    C.TextStyle_MDl = new A.TextStyle(true, C.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedmond bodyMedium", null, null, null, null);
    C.TextStyle_6Xe = new A.TextStyle(true, C.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedmond bodySmall", null, null, null, null);
    C.TextStyle_yP5 = new A.TextStyle(true, C.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedmond labelLarge", null, null, null, null);
    C.TextStyle_Q9u = new A.TextStyle(true, C.Color_4278190080, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedmond labelMedium", null, null, null, null);
    C.TextStyle_oMH = new A.TextStyle(true, C.Color_4278190080, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackRedmond labelSmall", null, null, null, null);
    C.TextTheme_FxU = new A.TextTheme(C.TextStyle_yfE, C.TextStyle_C9x, C.TextStyle_PGb, C.TextStyle_qpY, C.TextStyle_mvO, C.TextStyle_AMJ, C.TextStyle_qz5, C.TextStyle_s0t, C.TextStyle_wT1, C.TextStyle_rq9, C.TextStyle_MDl, C.TextStyle_6Xe, C.TextStyle_yP5, C.TextStyle_Q9u, C.TextStyle_oMH);
    C.TextStyle_ZZ4 = new A.TextStyle(false, null, null, null, null, null, 57, C.FontWeight_3, null, -0.25, null, D.TextBaseline_1, 1.12, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "dense displayLarge 2021", null, null, null, null);
    C.TextStyle_8yJ = new A.TextStyle(false, null, null, null, null, null, 45, C.FontWeight_3, null, 0, null, D.TextBaseline_1, 1.16, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "dense displayMedium 2021", null, null, null, null);
    C.TextStyle_li2 = new A.TextStyle(false, null, null, null, null, null, 36, C.FontWeight_3, null, 0, null, D.TextBaseline_1, 1.22, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "dense displaySmall 2021", null, null, null, null);
    C.TextStyle_4UD = new A.TextStyle(false, null, null, null, null, null, 32, C.FontWeight_3, null, 0, null, D.TextBaseline_1, 1.25, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "dense headlineLarge 2021", null, null, null, null);
    C.TextStyle_qNA = new A.TextStyle(false, null, null, null, null, null, 28, C.FontWeight_3, null, 0, null, D.TextBaseline_1, 1.29, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "dense headlineMedium 2021", null, null, null, null);
    C.TextStyle_cWd = new A.TextStyle(false, null, null, null, null, null, 24, C.FontWeight_3, null, 0, null, D.TextBaseline_1, 1.33, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "dense headlineSmall 2021", null, null, null, null);
    C.TextStyle_yL6 = new A.TextStyle(false, null, null, null, null, null, 22, C.FontWeight_3, null, 0, null, D.TextBaseline_1, 1.27, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "dense titleLarge 2021", null, null, null, null);
    C.TextStyle_C1B = new A.TextStyle(false, null, null, null, null, null, 16, C.FontWeight_4, null, 0.15, null, D.TextBaseline_1, 1.5, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "dense titleMedium 2021", null, null, null, null);
    C.TextStyle_KB7 = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_4, null, 0.1, null, D.TextBaseline_1, 1.43, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "dense titleSmall 2021", null, null, null, null);
    C.TextStyle_Ju1 = new A.TextStyle(false, null, null, null, null, null, 16, C.FontWeight_3, null, 0.5, null, D.TextBaseline_1, 1.5, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "dense bodyLarge 2021", null, null, null, null);
    C.TextStyle_Mc8 = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_3, null, 0.25, null, D.TextBaseline_1, 1.43, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "dense bodyMedium 2021", null, null, null, null);
    C.TextStyle_IIy = new A.TextStyle(false, null, null, null, null, null, 12, C.FontWeight_3, null, 0.4, null, D.TextBaseline_1, 1.33, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "dense bodySmall 2021", null, null, null, null);
    C.TextStyle_mBv = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_4, null, 0.1, null, D.TextBaseline_1, 1.43, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "dense labelLarge 2021", null, null, null, null);
    C.TextStyle_UEQ = new A.TextStyle(false, null, null, null, null, null, 12, C.FontWeight_4, null, 0.5, null, D.TextBaseline_1, 1.33, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "dense labelMedium 2021", null, null, null, null);
    C.TextStyle_Jom = new A.TextStyle(false, null, null, null, null, null, 11, C.FontWeight_4, null, 0.5, null, D.TextBaseline_1, 1.45, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "dense labelSmall 2021", null, null, null, null);
    C.TextTheme_Jhy = new A.TextTheme(C.TextStyle_ZZ4, C.TextStyle_8yJ, C.TextStyle_li2, C.TextStyle_4UD, C.TextStyle_qNA, C.TextStyle_cWd, C.TextStyle_yL6, C.TextStyle_C1B, C.TextStyle_KB7, C.TextStyle_Ju1, C.TextStyle_Mc8, C.TextStyle_IIy, C.TextStyle_mBv, C.TextStyle_UEQ, C.TextStyle_Jom);
    C.TextStyle_kWM = new A.TextStyle(true, C.Color_3019898879, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedwoodCity displayLarge", null, null, null, null);
    C.TextStyle_uU1 = new A.TextStyle(true, C.Color_3019898879, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedwoodCity displayMedium", null, null, null, null);
    C.TextStyle_kWM0 = new A.TextStyle(true, C.Color_3019898879, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedwoodCity displaySmall", null, null, null, null);
    C.TextStyle_vKi = new A.TextStyle(true, C.Color_3019898879, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedwoodCity headlineLarge", null, null, null, null);
    C.TextStyle_bqJ = new A.TextStyle(true, C.Color_3019898879, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedwoodCity headlineMedium", null, null, null, null);
    C.TextStyle_iXN = new A.TextStyle(true, C.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedwoodCity headlineSmall", null, null, null, null);
    C.TextStyle_Lwp = new A.TextStyle(true, C.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedwoodCity titleLarge", null, null, null, null);
    C.TextStyle_8WR = new A.TextStyle(true, C.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedwoodCity titleMedium", null, null, null, null);
    C.TextStyle_ES6 = new A.TextStyle(true, C.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedwoodCity titleSmall", null, null, null, null);
    C.TextStyle_kGg = new A.TextStyle(true, C.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedwoodCity bodyLarge", null, null, null, null);
    C.TextStyle_uI7 = new A.TextStyle(true, C.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedwoodCity bodyMedium", null, null, null, null);
    C.TextStyle_6nc = new A.TextStyle(true, C.Color_3019898879, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedwoodCity bodySmall", null, null, null, null);
    C.TextStyle_Eob = new A.TextStyle(true, C.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedwoodCity labelLarge", null, null, null, null);
    C.TextStyle_GJj = new A.TextStyle(true, C.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedwoodCity labelMedium", null, null, null, null);
    C.TextStyle_86y = new A.TextStyle(true, C.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedwoodCity labelSmall", null, null, null, null);
    C.TextTheme_KL3 = new A.TextTheme(C.TextStyle_kWM, C.TextStyle_uU1, C.TextStyle_kWM0, C.TextStyle_vKi, C.TextStyle_bqJ, C.TextStyle_iXN, C.TextStyle_Lwp, C.TextStyle_8WR, C.TextStyle_ES6, C.TextStyle_kGg, C.TextStyle_uI7, C.TextStyle_6nc, C.TextStyle_Eob, C.TextStyle_GJj, C.TextStyle_86y);
    C.TextStyle_idk = new A.TextStyle(false, null, null, null, null, null, 112, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall displayLarge 2014", null, null, null, null);
    C.TextStyle_M9Z = new A.TextStyle(false, null, null, null, null, null, 56, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall displayMedium 2014", null, null, null, null);
    C.TextStyle_Qyi = new A.TextStyle(false, null, null, null, null, null, 45, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall displaySmall 2014", null, null, null, null);
    C.TextStyle_eT2 = new A.TextStyle(false, null, null, null, null, null, 40, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall headlineLarge 2014", null, null, null, null);
    C.TextStyle_ky0 = new A.TextStyle(false, null, null, null, null, null, 34, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall headlineMedium 2014", null, null, null, null);
    C.TextStyle_Tc0 = new A.TextStyle(false, null, null, null, null, null, 24, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall headlineSmall 2014", null, null, null, null);
    C.TextStyle_YsN = new A.TextStyle(false, null, null, null, null, null, 21, C.FontWeight_6, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall titleLarge 2014", null, null, null, null);
    C.TextStyle_9Q9 = new A.TextStyle(false, null, null, null, null, null, 17, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall titleMedium 2014", null, null, null, null);
    C.TextStyle_n8l = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_4, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall titleSmall 2014", null, null, null, null);
    C.TextStyle_M4X = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_6, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall bodyLarge 2014", null, null, null, null);
    C.TextStyle_oyU = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall bodyMedium 2014", null, null, null, null);
    C.TextStyle_MtK = new A.TextStyle(false, null, null, null, null, null, 13, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall bodySmall 2014", null, null, null, null);
    C.TextStyle_wEo = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_6, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall labelLarge 2014", null, null, null, null);
    C.TextStyle_ZaB = new A.TextStyle(false, null, null, null, null, null, 12, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall labelMedium 2014", null, null, null, null);
    C.TextStyle_1I7 = new A.TextStyle(false, null, null, null, null, null, 11, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall labelSmall 2014", null, null, null, null);
    C.TextTheme_LtR = new A.TextTheme(C.TextStyle_idk, C.TextStyle_M9Z, C.TextStyle_Qyi, C.TextStyle_eT2, C.TextStyle_ky0, C.TextStyle_Tc0, C.TextStyle_YsN, C.TextStyle_9Q9, C.TextStyle_n8l, C.TextStyle_M4X, C.TextStyle_oyU, C.TextStyle_MtK, C.TextStyle_wEo, C.TextStyle_ZaB, C.TextStyle_1I7);
    C.TextStyle_chs = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteMountainView displayLarge", null, null, null, null);
    C.TextStyle_OOt = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteMountainView displayMedium", null, null, null, null);
    C.TextStyle_ww8 = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteMountainView displaySmall", null, null, null, null);
    C.TextStyle_9XX = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteMountainView headlineLarge", null, null, null, null);
    C.TextStyle_EOZ = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteMountainView headlineMedium", null, null, null, null);
    C.TextStyle_kyU = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteMountainView headlineSmall", null, null, null, null);
    C.TextStyle_Cht = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteMountainView titleLarge", null, null, null, null);
    C.TextStyle_G6F = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteMountainView titleMedium", null, null, null, null);
    C.TextStyle_dq2 = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteMountainView titleSmall", null, null, null, null);
    C.TextStyle_kuc = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteMountainView bodyLarge", null, null, null, null);
    C.TextStyle_BmO = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteMountainView bodyMedium", null, null, null, null);
    C.TextStyle_E1L = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteMountainView bodySmall", null, null, null, null);
    C.TextStyle_vVh = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteMountainView labelLarge", null, null, null, null);
    C.TextStyle_xw80 = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteMountainView labelMedium", null, null, null, null);
    C.TextStyle_tMv = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteMountainView labelSmall", null, null, null, null);
    C.TextTheme_MQW = new A.TextTheme(C.TextStyle_chs, C.TextStyle_OOt, C.TextStyle_ww8, C.TextStyle_9XX, C.TextStyle_EOZ, C.TextStyle_kyU, C.TextStyle_Cht, C.TextStyle_G6F, C.TextStyle_dq2, C.TextStyle_kuc, C.TextStyle_BmO, C.TextStyle_E1L, C.TextStyle_vVh, C.TextStyle_xw80, C.TextStyle_tMv);
    C.TextStyle_Ejg = new A.TextStyle(false, null, null, null, null, null, 57, C.FontWeight_3, null, -0.25, null, D.TextBaseline_0, 1.12, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "englishLike displayLarge 2021", null, null, null, null);
    C.TextStyle_ezW = new A.TextStyle(false, null, null, null, null, null, 45, C.FontWeight_3, null, 0, null, D.TextBaseline_0, 1.16, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "englishLike displayMedium 2021", null, null, null, null);
    C.TextStyle_FCG = new A.TextStyle(false, null, null, null, null, null, 36, C.FontWeight_3, null, 0, null, D.TextBaseline_0, 1.22, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "englishLike displaySmall 2021", null, null, null, null);
    C.TextStyle_SLS = new A.TextStyle(false, null, null, null, null, null, 32, C.FontWeight_3, null, 0, null, D.TextBaseline_0, 1.25, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "englishLike headlineLarge 2021", null, null, null, null);
    C.TextStyle_Esm = new A.TextStyle(false, null, null, null, null, null, 28, C.FontWeight_3, null, 0, null, D.TextBaseline_0, 1.29, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "englishLike headlineMedium 2021", null, null, null, null);
    C.TextStyle_M2b = new A.TextStyle(false, null, null, null, null, null, 24, C.FontWeight_3, null, 0, null, D.TextBaseline_0, 1.33, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "englishLike headlineSmall 2021", null, null, null, null);
    C.TextStyle_w0E = new A.TextStyle(false, null, null, null, null, null, 22, C.FontWeight_3, null, 0, null, D.TextBaseline_0, 1.27, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "englishLike titleLarge 2021", null, null, null, null);
    C.TextStyle_akq = new A.TextStyle(false, null, null, null, null, null, 16, C.FontWeight_4, null, 0.15, null, D.TextBaseline_0, 1.5, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "englishLike titleMedium 2021", null, null, null, null);
    C.TextStyle_3rn = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_4, null, 0.1, null, D.TextBaseline_0, 1.43, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "englishLike titleSmall 2021", null, null, null, null);
    C.TextStyle_MT8 = new A.TextStyle(false, null, null, null, null, null, 16, C.FontWeight_3, null, 0.5, null, D.TextBaseline_0, 1.5, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "englishLike bodyLarge 2021", null, null, null, null);
    C.TextStyle_A2Y = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_3, null, 0.25, null, D.TextBaseline_0, 1.43, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "englishLike bodyMedium 2021", null, null, null, null);
    C.TextStyle_wuU = new A.TextStyle(false, null, null, null, null, null, 12, C.FontWeight_3, null, 0.4, null, D.TextBaseline_0, 1.33, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "englishLike bodySmall 2021", null, null, null, null);
    C.TextStyle_2nh = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_4, null, 0.1, null, D.TextBaseline_0, 1.43, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "englishLike labelLarge 2021", null, null, null, null);
    C.TextStyle_Y63 = new A.TextStyle(false, null, null, null, null, null, 12, C.FontWeight_4, null, 0.5, null, D.TextBaseline_0, 1.33, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "englishLike labelMedium 2021", null, null, null, null);
    C.TextStyle_mtZ = new A.TextStyle(false, null, null, null, null, null, 11, C.FontWeight_4, null, 0.5, null, D.TextBaseline_0, 1.45, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "englishLike labelSmall 2021", null, null, null, null);
    C.TextTheme_NyU = new A.TextTheme(C.TextStyle_Ejg, C.TextStyle_ezW, C.TextStyle_FCG, C.TextStyle_SLS, C.TextStyle_Esm, C.TextStyle_M2b, C.TextStyle_w0E, C.TextStyle_akq, C.TextStyle_3rn, C.TextStyle_MT8, C.TextStyle_A2Y, C.TextStyle_wuU, C.TextStyle_2nh, C.TextStyle_Y63, C.TextStyle_mtZ);
    C.TextStyle_gsm0 = new A.TextStyle(false, null, null, null, null, null, 96, C.FontWeight_0, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense displayLarge 2018", null, null, null, null);
    C.TextStyle_qhc = new A.TextStyle(false, null, null, null, null, null, 60, C.FontWeight_0, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense displayMedium 2018", null, null, null, null);
    C.TextStyle_rBh0 = new A.TextStyle(false, null, null, null, null, null, 48, C.FontWeight_3, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense displaySmall 2018", null, null, null, null);
    C.TextStyle_sRw = new A.TextStyle(false, null, null, null, null, null, 40, C.FontWeight_3, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense headlineLarge 2018", null, null, null, null);
    C.TextStyle_Feh0 = new A.TextStyle(false, null, null, null, null, null, 34, C.FontWeight_3, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense headlineMedium 2018", null, null, null, null);
    C.TextStyle_Ex1 = new A.TextStyle(false, null, null, null, null, null, 24, C.FontWeight_3, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense headlineSmall 2018", null, null, null, null);
    C.TextStyle_5GT0 = new A.TextStyle(false, null, null, null, null, null, 21, C.FontWeight_4, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense titleLarge 2018", null, null, null, null);
    C.TextStyle_IYd0 = new A.TextStyle(false, null, null, null, null, null, 17, C.FontWeight_3, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense titleMedium 2018", null, null, null, null);
    C.TextStyle_YEt0 = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_4, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense titleSmall 2018", null, null, null, null);
    C.TextStyle_e7M0 = new A.TextStyle(false, null, null, null, null, null, 17, C.FontWeight_3, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense bodyLarge 2018", null, null, null, null);
    C.TextStyle_iYS0 = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_3, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense bodyMedium 2018", null, null, null, null);
    C.TextStyle_Hp50 = new A.TextStyle(false, null, null, null, null, null, 13, C.FontWeight_3, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense bodySmall 2018", null, null, null, null);
    C.TextStyle_p6N0 = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_4, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense labelLarge 2018", null, null, null, null);
    C.TextStyle_cfV0 = new A.TextStyle(false, null, null, null, null, null, 12, C.FontWeight_3, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense labelMedium 2018", null, null, null, null);
    C.TextStyle_bOB0 = new A.TextStyle(false, null, null, null, null, null, 11, C.FontWeight_3, null, null, null, D.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense labelSmall 2018", null, null, null, null);
    C.TextTheme_Oyy = new A.TextTheme(C.TextStyle_gsm0, C.TextStyle_qhc, C.TextStyle_rBh0, C.TextStyle_sRw, C.TextStyle_Feh0, C.TextStyle_Ex1, C.TextStyle_5GT0, C.TextStyle_IYd0, C.TextStyle_YEt0, C.TextStyle_e7M0, C.TextStyle_iYS0, C.TextStyle_Hp50, C.TextStyle_p6N0, C.TextStyle_cfV0, C.TextStyle_bOB0);
    C.TextStyle_otv = new A.TextStyle(true, C.Color_2315255808, null, "CupertinoSystemDisplay", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackCupertino displayLarge", null, null, null, null);
    C.TextStyle_o88 = new A.TextStyle(true, C.Color_2315255808, null, "CupertinoSystemDisplay", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackCupertino displayMedium", null, null, null, null);
    C.TextStyle_xoj = new A.TextStyle(true, C.Color_2315255808, null, "CupertinoSystemDisplay", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackCupertino displaySmall", null, null, null, null);
    C.TextStyle_GFh = new A.TextStyle(true, C.Color_2315255808, null, "CupertinoSystemDisplay", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackCupertino headlineLarge", null, null, null, null);
    C.TextStyle_oyU0 = new A.TextStyle(true, C.Color_2315255808, null, "CupertinoSystemDisplay", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackCupertino headlineMedium", null, null, null, null);
    C.TextStyle_2Zi = new A.TextStyle(true, C.Color_3707764736, null, "CupertinoSystemDisplay", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackCupertino headlineSmall", null, null, null, null);
    C.TextStyle_A6W = new A.TextStyle(true, C.Color_3707764736, null, "CupertinoSystemDisplay", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackCupertino titleLarge", null, null, null, null);
    C.TextStyle_EOZ0 = new A.TextStyle(true, C.Color_3707764736, null, "CupertinoSystemText", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackCupertino titleMedium", null, null, null, null);
    C.TextStyle_mN6 = new A.TextStyle(true, C.Color_4278190080, null, "CupertinoSystemText", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackCupertino titleSmall", null, null, null, null);
    C.TextStyle_1sI = new A.TextStyle(true, C.Color_3707764736, null, "CupertinoSystemText", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackCupertino bodyLarge", null, null, null, null);
    C.TextStyle_k2a = new A.TextStyle(true, C.Color_3707764736, null, "CupertinoSystemText", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackCupertino bodyMedium", null, null, null, null);
    C.TextStyle_hW1 = new A.TextStyle(true, C.Color_2315255808, null, "CupertinoSystemText", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackCupertino bodySmall", null, null, null, null);
    C.TextStyle_ptW = new A.TextStyle(true, C.Color_3707764736, null, "CupertinoSystemText", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackCupertino labelLarge", null, null, null, null);
    C.TextStyle_EKW = new A.TextStyle(true, C.Color_4278190080, null, "CupertinoSystemText", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackCupertino labelMedium", null, null, null, null);
    C.TextStyle_gkc = new A.TextStyle(true, C.Color_4278190080, null, "CupertinoSystemText", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackCupertino labelSmall", null, null, null, null);
    C.TextTheme_V6j = new A.TextTheme(C.TextStyle_otv, C.TextStyle_o88, C.TextStyle_xoj, C.TextStyle_GFh, C.TextStyle_oyU0, C.TextStyle_2Zi, C.TextStyle_A6W, C.TextStyle_EOZ0, C.TextStyle_mN6, C.TextStyle_1sI, C.TextStyle_k2a, C.TextStyle_hW1, C.TextStyle_ptW, C.TextStyle_EKW, C.TextStyle_gkc);
    C.TextStyle_GVa = new A.TextStyle(false, null, null, null, null, null, 57, C.FontWeight_3, null, -0.25, null, D.TextBaseline_0, 1.12, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "tall displayLarge 2021", null, null, null, null);
    C.TextStyle_6Lu = new A.TextStyle(false, null, null, null, null, null, 45, C.FontWeight_3, null, 0, null, D.TextBaseline_0, 1.16, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "tall displayMedium 2021", null, null, null, null);
    C.TextStyle_WnF = new A.TextStyle(false, null, null, null, null, null, 36, C.FontWeight_3, null, 0, null, D.TextBaseline_0, 1.22, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "tall displaySmall 2021", null, null, null, null);
    C.TextStyle_Cyb = new A.TextStyle(false, null, null, null, null, null, 32, C.FontWeight_3, null, 0, null, D.TextBaseline_0, 1.25, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "tall headlineLarge 2021", null, null, null, null);
    C.TextStyle_0o8 = new A.TextStyle(false, null, null, null, null, null, 28, C.FontWeight_3, null, 0, null, D.TextBaseline_0, 1.29, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "tall headlineMedium 2021", null, null, null, null);
    C.TextStyle_WRV = new A.TextStyle(false, null, null, null, null, null, 24, C.FontWeight_3, null, 0, null, D.TextBaseline_0, 1.33, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "tall headlineSmall 2021", null, null, null, null);
    C.TextStyle_exN = new A.TextStyle(false, null, null, null, null, null, 22, C.FontWeight_3, null, 0, null, D.TextBaseline_0, 1.27, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "tall titleLarge 2021", null, null, null, null);
    C.TextStyle_QkT = new A.TextStyle(false, null, null, null, null, null, 16, C.FontWeight_4, null, 0.15, null, D.TextBaseline_0, 1.5, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "tall titleMedium 2021", null, null, null, null);
    C.TextStyle_mZ3 = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_4, null, 0.1, null, D.TextBaseline_0, 1.43, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "tall titleSmall 2021", null, null, null, null);
    C.TextStyle_Mz0 = new A.TextStyle(false, null, null, null, null, null, 16, C.FontWeight_3, null, 0.5, null, D.TextBaseline_0, 1.5, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "tall bodyLarge 2021", null, null, null, null);
    C.TextStyle_6TA = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_3, null, 0.25, null, D.TextBaseline_0, 1.43, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "tall bodyMedium 2021", null, null, null, null);
    C.TextStyle_ouN = new A.TextStyle(false, null, null, null, null, null, 12, C.FontWeight_3, null, 0.4, null, D.TextBaseline_0, 1.33, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "tall bodySmall 2021", null, null, null, null);
    C.TextStyle_EIc = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_4, null, 0.1, null, D.TextBaseline_0, 1.43, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "tall labelLarge 2021", null, null, null, null);
    C.TextStyle_8eb = new A.TextStyle(false, null, null, null, null, null, 12, C.FontWeight_4, null, 0.5, null, D.TextBaseline_0, 1.33, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "tall labelMedium 2021", null, null, null, null);
    C.TextStyle_2eS = new A.TextStyle(false, null, null, null, null, null, 11, C.FontWeight_4, null, 0.5, null, D.TextBaseline_0, 1.45, D.TextLeadingDistribution_1, null, null, null, null, null, null, null, "tall labelSmall 2021", null, null, null, null);
    C.TextTheme_Wbt = new A.TextTheme(C.TextStyle_GVa, C.TextStyle_6Lu, C.TextStyle_WnF, C.TextStyle_Cyb, C.TextStyle_0o8, C.TextStyle_WRV, C.TextStyle_exN, C.TextStyle_QkT, C.TextStyle_mZ3, C.TextStyle_Mz0, C.TextStyle_6TA, C.TextStyle_ouN, C.TextStyle_EIc, C.TextStyle_8eb, C.TextStyle_2eS);
    C.List_J4B = B._setArrayType(makeConstList(["Ubuntu", "Cantarell", "DejaVu Sans", "Liberation Sans", "Arial"]), type$.JSArray_String);
    C.TextStyle_sem = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteHelsinki displayLarge", null, null, null, null);
    C.TextStyle_myx = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteHelsinki displayMedium", null, null, null, null);
    C.TextStyle_yhb = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteHelsinki displaySmall", null, null, null, null);
    C.TextStyle_v6k = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteHelsinki headlineLarge", null, null, null, null);
    C.TextStyle_ato = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteHelsinki headlineMedium", null, null, null, null);
    C.TextStyle_MIe = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteHelsinki headlineSmall", null, null, null, null);
    C.TextStyle_y5u = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteHelsinki titleLarge", null, null, null, null);
    C.TextStyle_ibz = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteHelsinki titleMedium", null, null, null, null);
    C.TextStyle_3Zi = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteHelsinki titleSmall", null, null, null, null);
    C.TextStyle_uw1 = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteHelsinki bodyLarge", null, null, null, null);
    C.TextStyle_NsC = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteHelsinki bodyMedium", null, null, null, null);
    C.TextStyle_rKV = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteHelsinki bodySmall", null, null, null, null);
    C.TextStyle_b9c = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteHelsinki labelLarge", null, null, null, null);
    C.TextStyle_vBr = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteHelsinki labelMedium", null, null, null, null);
    C.TextStyle_00 = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteHelsinki labelSmall", null, null, null, null);
    C.TextTheme_bRS = new A.TextTheme(C.TextStyle_sem, C.TextStyle_myx, C.TextStyle_yhb, C.TextStyle_v6k, C.TextStyle_ato, C.TextStyle_MIe, C.TextStyle_y5u, C.TextStyle_ibz, C.TextStyle_3Zi, C.TextStyle_uw1, C.TextStyle_NsC, C.TextStyle_rKV, C.TextStyle_b9c, C.TextStyle_vBr, C.TextStyle_00);
    C.TextStyle_oiR = new A.TextStyle(true, C.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedmond displayLarge", null, null, null, null);
    C.TextStyle_G3O = new A.TextStyle(true, C.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedmond displayMedium", null, null, null, null);
    C.TextStyle_xsE = new A.TextStyle(true, C.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedmond displaySmall", null, null, null, null);
    C.TextStyle_mLq = new A.TextStyle(true, C.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedmond headlineLarge", null, null, null, null);
    C.TextStyle_Au8 = new A.TextStyle(true, C.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedmond headlineMedium", null, null, null, null);
    C.TextStyle_01 = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedmond headlineSmall", null, null, null, null);
    C.TextStyle_mlz = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedmond titleLarge", null, null, null, null);
    C.TextStyle_GVa0 = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedmond titleMedium", null, null, null, null);
    C.TextStyle_qxQ = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedmond titleSmall", null, null, null, null);
    C.TextStyle_02 = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedmond bodyLarge", null, null, null, null);
    C.TextStyle_jnD = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedmond bodyMedium", null, null, null, null);
    C.TextStyle_gsm1 = new A.TextStyle(true, C.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedmond bodySmall", null, null, null, null);
    C.TextStyle_AIG = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedmond labelLarge", null, null, null, null);
    C.TextStyle_AyI = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedmond labelMedium", null, null, null, null);
    C.TextStyle_14C = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteRedmond labelSmall", null, null, null, null);
    C.TextTheme_cr1 = new A.TextTheme(C.TextStyle_oiR, C.TextStyle_G3O, C.TextStyle_xsE, C.TextStyle_mLq, C.TextStyle_Au8, C.TextStyle_01, C.TextStyle_mlz, C.TextStyle_GVa0, C.TextStyle_qxQ, C.TextStyle_02, C.TextStyle_jnD, C.TextStyle_gsm1, C.TextStyle_AIG, C.TextStyle_AyI, C.TextStyle_14C);
    C.TextStyle_R8q = new A.TextStyle(false, null, null, null, null, null, 96, C.FontWeight_2, null, -1.5, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike displayLarge 2018", null, null, null, null);
    C.TextStyle_vp5 = new A.TextStyle(false, null, null, null, null, null, 60, C.FontWeight_2, null, -0.5, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike displayMedium 2018", null, null, null, null);
    C.TextStyle_3mv = new A.TextStyle(false, null, null, null, null, null, 48, C.FontWeight_3, null, 0, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike displaySmall 2018", null, null, null, null);
    C.TextStyle_MY7 = new A.TextStyle(false, null, null, null, null, null, 40, C.FontWeight_3, null, 0.25, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike headlineLarge 2018", null, null, null, null);
    C.TextStyle_8aB = new A.TextStyle(false, null, null, null, null, null, 34, C.FontWeight_3, null, 0.25, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike headlineMedium 2018", null, null, null, null);
    C.TextStyle_aha = new A.TextStyle(false, null, null, null, null, null, 24, C.FontWeight_3, null, 0, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike headlineSmall 2018", null, null, null, null);
    C.TextStyle_43h = new A.TextStyle(false, null, null, null, null, null, 20, C.FontWeight_4, null, 0.15, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike titleLarge 2018", null, null, null, null);
    C.TextStyle_6Ds = new A.TextStyle(false, null, null, null, null, null, 16, C.FontWeight_3, null, 0.15, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike titleMedium 2018", null, null, null, null);
    C.TextStyle_6YR = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_4, null, 0.1, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike titleSmall 2018", null, null, null, null);
    C.TextStyle_S48 = new A.TextStyle(false, null, null, null, null, null, 16, C.FontWeight_3, null, 0.5, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike bodyLarge 2018", null, null, null, null);
    C.TextStyle_AIA = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_3, null, 0.25, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike bodyMedium 2018", null, null, null, null);
    C.TextStyle_tv8 = new A.TextStyle(false, null, null, null, null, null, 12, C.FontWeight_3, null, 0.4, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike bodySmall 2018", null, null, null, null);
    C.TextStyle_IfL = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_4, null, 1.25, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike labelLarge 2018", null, null, null, null);
    C.TextStyle_CBD = new A.TextStyle(false, null, null, null, null, null, 11, C.FontWeight_3, null, 1.5, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike labelMedium 2018", null, null, null, null);
    C.TextStyle_RA5 = new A.TextStyle(false, null, null, null, null, null, 10, C.FontWeight_3, null, 1.5, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike labelSmall 2018", null, null, null, null);
    C.TextTheme_fPs = new A.TextTheme(C.TextStyle_R8q, C.TextStyle_vp5, C.TextStyle_3mv, C.TextStyle_MY7, C.TextStyle_8aB, C.TextStyle_aha, C.TextStyle_43h, C.TextStyle_6Ds, C.TextStyle_6YR, C.TextStyle_S48, C.TextStyle_AIA, C.TextStyle_tv8, C.TextStyle_IfL, C.TextStyle_CBD, C.TextStyle_RA5);
    C.TextStyle_Yqr = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackMountainView displayLarge", null, null, null, null);
    C.TextStyle_wIv = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackMountainView displayMedium", null, null, null, null);
    C.TextStyle_EIw = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackMountainView displaySmall", null, null, null, null);
    C.TextStyle_uL1 = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackMountainView headlineLarge", null, null, null, null);
    C.TextStyle_hcK = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackMountainView headlineMedium", null, null, null, null);
    C.TextStyle_KHt = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackMountainView headlineSmall", null, null, null, null);
    C.TextStyle_j7r = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackMountainView titleLarge", null, null, null, null);
    C.TextStyle_gkJ = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackMountainView titleMedium", null, null, null, null);
    C.TextStyle_Wz9 = new A.TextStyle(true, C.Color_4278190080, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackMountainView titleSmall", null, null, null, null);
    C.TextStyle_KLP = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackMountainView bodyLarge", null, null, null, null);
    C.TextStyle_FCG0 = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackMountainView bodyMedium", null, null, null, null);
    C.TextStyle_X36 = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackMountainView bodySmall", null, null, null, null);
    C.TextStyle_WTF = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackMountainView labelLarge", null, null, null, null);
    C.TextStyle_Oob = new A.TextStyle(true, C.Color_4278190080, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackMountainView labelMedium", null, null, null, null);
    C.TextStyle_MCX = new A.TextStyle(true, C.Color_4278190080, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackMountainView labelSmall", null, null, null, null);
    C.TextTheme_gSu = new A.TextTheme(C.TextStyle_Yqr, C.TextStyle_wIv, C.TextStyle_EIw, C.TextStyle_uL1, C.TextStyle_hcK, C.TextStyle_KHt, C.TextStyle_j7r, C.TextStyle_gkJ, C.TextStyle_Wz9, C.TextStyle_KLP, C.TextStyle_FCG0, C.TextStyle_X36, C.TextStyle_WTF, C.TextStyle_Oob, C.TextStyle_MCX);
    C.TextStyle_6Ng = new A.TextStyle(true, C.Color_3019898879, null, "CupertinoSystemDisplay", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteCupertino displayLarge", null, null, null, null);
    C.TextStyle_sEf = new A.TextStyle(true, C.Color_3019898879, null, "CupertinoSystemDisplay", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteCupertino displayMedium", null, null, null, null);
    C.TextStyle_wI7 = new A.TextStyle(true, C.Color_3019898879, null, "CupertinoSystemDisplay", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteCupertino displaySmall", null, null, null, null);
    C.TextStyle_In1 = new A.TextStyle(true, C.Color_3019898879, null, "CupertinoSystemDisplay", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteCupertino headlineLarge", null, null, null, null);
    C.TextStyle_Zyt = new A.TextStyle(true, C.Color_3019898879, null, "CupertinoSystemDisplay", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteCupertino headlineMedium", null, null, null, null);
    C.TextStyle_AK0 = new A.TextStyle(true, C.Color_4294967295, null, "CupertinoSystemDisplay", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteCupertino headlineSmall", null, null, null, null);
    C.TextStyle_VWf = new A.TextStyle(true, C.Color_4294967295, null, "CupertinoSystemDisplay", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteCupertino titleLarge", null, null, null, null);
    C.TextStyle_8I8 = new A.TextStyle(true, C.Color_4294967295, null, "CupertinoSystemText", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteCupertino titleMedium", null, null, null, null);
    C.TextStyle_I9C = new A.TextStyle(true, C.Color_4294967295, null, "CupertinoSystemText", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteCupertino titleSmall", null, null, null, null);
    C.TextStyle_G4k = new A.TextStyle(true, C.Color_4294967295, null, "CupertinoSystemText", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteCupertino bodyLarge", null, null, null, null);
    C.TextStyle_KRx = new A.TextStyle(true, C.Color_4294967295, null, "CupertinoSystemText", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteCupertino bodyMedium", null, null, null, null);
    C.TextStyle_jfn = new A.TextStyle(true, C.Color_3019898879, null, "CupertinoSystemText", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteCupertino bodySmall", null, null, null, null);
    C.TextStyle_ibb = new A.TextStyle(true, C.Color_4294967295, null, "CupertinoSystemText", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteCupertino labelLarge", null, null, null, null);
    C.TextStyle_MAi = new A.TextStyle(true, C.Color_4294967295, null, "CupertinoSystemText", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteCupertino labelMedium", null, null, null, null);
    C.TextStyle_Ah0 = new A.TextStyle(true, C.Color_4294967295, null, "CupertinoSystemText", null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "whiteCupertino labelSmall", null, null, null, null);
    C.TextTheme_mT8 = new A.TextTheme(C.TextStyle_6Ng, C.TextStyle_sEf, C.TextStyle_wI7, C.TextStyle_In1, C.TextStyle_Zyt, C.TextStyle_AK0, C.TextStyle_VWf, C.TextStyle_8I8, C.TextStyle_I9C, C.TextStyle_G4k, C.TextStyle_KRx, C.TextStyle_jfn, C.TextStyle_ibb, C.TextStyle_MAi, C.TextStyle_Ah0);
    C.TextStyle_R8q0 = new A.TextStyle(false, null, null, null, null, null, 112, C.FontWeight_0, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike displayLarge 2014", null, null, null, null);
    C.TextStyle_fRN = new A.TextStyle(false, null, null, null, null, null, 56, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike displayMedium 2014", null, null, null, null);
    C.TextStyle_3mv0 = new A.TextStyle(false, null, null, null, null, null, 45, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike displaySmall 2014", null, null, null, null);
    C.TextStyle_yx6 = new A.TextStyle(false, null, null, null, null, null, 40, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike headlineLarge 2014", null, null, null, null);
    C.TextStyle_8aB0 = new A.TextStyle(false, null, null, null, null, null, 34, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike headlineMedium 2014", null, null, null, null);
    C.TextStyle_ImB = new A.TextStyle(false, null, null, null, null, null, 24, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike headlineSmall 2014", null, null, null, null);
    C.TextStyle_MQy = new A.TextStyle(false, null, null, null, null, null, 20, C.FontWeight_4, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike titleLarge 2014", null, null, null, null);
    C.TextStyle_HZw = new A.TextStyle(false, null, null, null, null, null, 16, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike titleMedium 2014", null, null, null, null);
    C.TextStyle_6YR0 = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_4, null, 0.1, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike titleSmall 2014", null, null, null, null);
    C.TextStyle_S480 = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_4, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike bodyLarge 2014", null, null, null, null);
    C.TextStyle_AIA0 = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike bodyMedium 2014", null, null, null, null);
    C.TextStyle_9XU = new A.TextStyle(false, null, null, null, null, null, 12, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike bodySmall 2014", null, null, null, null);
    C.TextStyle_Ecu = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_4, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike labelLarge 2014", null, null, null, null);
    C.TextStyle_u5C = new A.TextStyle(false, null, null, null, null, null, 12, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike labelMedium 2014", null, null, null, null);
    C.TextStyle_RA50 = new A.TextStyle(false, null, null, null, null, null, 10, C.FontWeight_3, null, 1.5, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike labelSmall 2014", null, null, null, null);
    C.TextTheme_oCX = new A.TextTheme(C.TextStyle_R8q0, C.TextStyle_fRN, C.TextStyle_3mv0, C.TextStyle_yx6, C.TextStyle_8aB0, C.TextStyle_ImB, C.TextStyle_MQy, C.TextStyle_HZw, C.TextStyle_6YR0, C.TextStyle_S480, C.TextStyle_AIA0, C.TextStyle_9XU, C.TextStyle_Ecu, C.TextStyle_u5C, C.TextStyle_RA50);
    C.TextStyle_idk0 = new A.TextStyle(false, null, null, null, null, null, 96, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall displayLarge 2018", null, null, null, null);
    C.TextStyle_M9Z0 = new A.TextStyle(false, null, null, null, null, null, 60, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall displayMedium 2018", null, null, null, null);
    C.TextStyle_Qyi0 = new A.TextStyle(false, null, null, null, null, null, 48, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall displaySmall 2018", null, null, null, null);
    C.TextStyle_eT20 = new A.TextStyle(false, null, null, null, null, null, 40, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall headlineLarge 2018", null, null, null, null);
    C.TextStyle_AUq = new A.TextStyle(false, null, null, null, null, null, 34, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall headlineMedium 2018", null, null, null, null);
    C.TextStyle_Tc00 = new A.TextStyle(false, null, null, null, null, null, 24, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall headlineSmall 2018", null, null, null, null);
    C.TextStyle_YsN0 = new A.TextStyle(false, null, null, null, null, null, 21, C.FontWeight_6, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall titleLarge 2018", null, null, null, null);
    C.TextStyle_9Q90 = new A.TextStyle(false, null, null, null, null, null, 17, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall titleMedium 2018", null, null, null, null);
    C.TextStyle_n8l0 = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_4, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall titleSmall 2018", null, null, null, null);
    C.TextStyle_FeV = new A.TextStyle(false, null, null, null, null, null, 17, C.FontWeight_6, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall bodyLarge 2018", null, null, null, null);
    C.TextStyle_oyU1 = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall bodyMedium 2018", null, null, null, null);
    C.TextStyle_RsV = new A.TextStyle(false, null, null, null, null, null, 13, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall bodySmall 2018", null, null, null, null);
    C.TextStyle_wEo0 = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_6, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall labelLarge 2018", null, null, null, null);
    C.TextStyle_ZaB0 = new A.TextStyle(false, null, null, null, null, null, 12, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall labelMedium 2018", null, null, null, null);
    C.TextStyle_1I70 = new A.TextStyle(false, null, null, null, null, null, 11, C.FontWeight_3, null, null, null, D.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall labelSmall 2018", null, null, null, null);
    C.TextTheme_qtW = new A.TextTheme(C.TextStyle_idk0, C.TextStyle_M9Z0, C.TextStyle_Qyi0, C.TextStyle_eT20, C.TextStyle_AUq, C.TextStyle_Tc00, C.TextStyle_YsN0, C.TextStyle_9Q90, C.TextStyle_n8l0, C.TextStyle_FeV, C.TextStyle_oyU1, C.TextStyle_RsV, C.TextStyle_wEo0, C.TextStyle_ZaB0, C.TextStyle_1I70);
    C.TextStyle_vdf = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackHelsinki displayLarge", null, null, null, null);
    C.TextStyle_BCG = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackHelsinki displayMedium", null, null, null, null);
    C.TextStyle_QIj = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackHelsinki displaySmall", null, null, null, null);
    C.TextStyle_ijF = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackHelsinki headlineLarge", null, null, null, null);
    C.TextStyle_kvD = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackHelsinki headlineMedium", null, null, null, null);
    C.TextStyle_2No = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackHelsinki headlineSmall", null, null, null, null);
    C.TextStyle_IhD = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackHelsinki titleLarge", null, null, null, null);
    C.TextStyle_37p = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackHelsinki titleMedium", null, null, null, null);
    C.TextStyle_eZz = new A.TextStyle(true, C.Color_4278190080, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackHelsinki titleSmall", null, null, null, null);
    C.TextStyle_n3g = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackHelsinki bodyLarge", null, null, null, null);
    C.TextStyle_SPl = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackHelsinki bodyMedium", null, null, null, null);
    C.TextStyle_nGa = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackHelsinki bodySmall", null, null, null, null);
    C.TextStyle_qd9 = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackHelsinki labelLarge", null, null, null, null);
    C.TextStyle_ijl = new A.TextStyle(true, C.Color_4278190080, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackHelsinki labelMedium", null, null, null, null);
    C.TextStyle_kr3 = new A.TextStyle(true, C.Color_4278190080, null, "Roboto", C.List_J4B, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_0, null, null, null, "blackHelsinki labelSmall", null, null, null, null);
    C.TextTheme_s6o = new A.TextTheme(C.TextStyle_vdf, C.TextStyle_BCG, C.TextStyle_QIj, C.TextStyle_ijF, C.TextStyle_kvD, C.TextStyle_2No, C.TextStyle_IhD, C.TextStyle_37p, C.TextStyle_eZz, C.TextStyle_n3g, C.TextStyle_SPl, C.TextStyle_nGa, C.TextStyle_qd9, C.TextStyle_ijl, C.TextStyle_kr3);
    C.Text_4Wf = new A.Text0("Flutter Counter", null, null, null, null);
    C.ThemeMode_0 = new A.ThemeMode(0, "system");
    C.TickerCanceled_null = new A.TickerCanceled(null);
    C.TimePickerThemeData_qBr = new A.TimePickerThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.ToggleButtonsThemeData_46W = new A.ToggleButtonsThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.TonePolarity_0 = new A.TonePolarity(0, "darker");
    C.TonePolarity_1 = new A.TonePolarity(1, "lighter");
    C.TonePolarity_2 = new A.TonePolarity(2, "nearer");
    C.TooltipThemeData_qla = new A.TooltipThemeData(null, null, null, null, null, null, null, null, null);
    C.Type_4AN = B.typeLiteral("VerticalDragGestureRecognizer");
    C.Type_ActivateIntent_fF3 = B.typeLiteral("ActivateIntent");
    C.Type_AnimationController_dqw = B.typeLiteral("AnimationController");
    C.Type_ButtonActivateIntent_Spn = B.typeLiteral("ButtonActivateIntent");
    C.Type_CurvedAnimation_Xdq = B.typeLiteral("CurvedAnimation");
    C.Type_DirectionalFocusIntent_UZG = B.typeLiteral("DirectionalFocusIntent");
    C.Type_DismissIntent_Drw = B.typeLiteral("DismissIntent");
    C.Type_DoNothingIntent_0mM = B.typeLiteral("DoNothingIntent");
    C.Type_DoubleTapGestureRecognizer_ww8 = B.typeLiteral("DoubleTapGestureRecognizer");
    C.Type_GestureRecognizer_yzN = B.typeLiteral("GestureRecognizer");
    C.Type_HeroController_ivD = B.typeLiteral("HeroController");
    C.Type_Ich = B.typeLiteral("DoNothingAndStopPropagationIntent");
    C.Type_InkFeature_7iQ = B.typeLiteral("InkFeature");
    C.Type_LabeledGlobalKey_EKR = B.typeLiteral("LabeledGlobalKey<State0<StatefulWidget>>");
    C.Type_LongPressGestureRecognizer_kMT = B.typeLiteral("LongPressGestureRecognizer");
    C.Type_LookupBoundary_ATp = B.typeLiteral("LookupBoundary");
    C.Type_MaterialLocalizations_EyN = B.typeLiteral("MaterialLocalizations");
    C.Type_NextFocusIntent_FGJ = B.typeLiteral("NextFocusIntent");
    C.Type_OverlayEntry_rBb = B.typeLiteral("OverlayEntry");
    C.Type_PanGestureRecognizer_wX3 = B.typeLiteral("PanGestureRecognizer");
    C.Type_PreviousFocusIntent_8eb = B.typeLiteral("PreviousFocusIntent");
    C.Type_PrioritizedIntents_kyu = B.typeLiteral("PrioritizedIntents");
    C.Type_Q4d = B.typeLiteral("HorizontalDragGestureRecognizer");
    C.Type_RequestFocusIntent_JFX = B.typeLiteral("RequestFocusIntent");
    C.Type_Route_8Oh = B.typeLiteral("Route<@>");
    C.Type_ScrollIntent_eXW = B.typeLiteral("ScrollIntent");
    C.Type_ShapeBorderClipper_bL3 = B.typeLiteral("ShapeBorderClipper");
    C.Type_Shortcuts_GZK = B.typeLiteral("Shortcuts");
    C.Type_TapGestureRecognizer_o05 = B.typeLiteral("TapGestureRecognizer");
    C.Type_TextPainter_58T = B.typeLiteral("TextPainter");
    C.Type_Ticker_C3K = B.typeLiteral("Ticker");
    C.Type_TrainHoppingAnimation_TyI = B.typeLiteral("TrainHoppingAnimation");
    C.Type_VoidCallbackIntent_w3m = B.typeLiteral("VoidCallbackIntent");
    C.Type_WidgetsLocalizations_eAf = B.typeLiteral("WidgetsLocalizations");
    C.Type__AnyTapGestureRecognizer_pdd = B.typeLiteral("_AnyTapGestureRecognizer");
    C.Type__HeroFlight_ku2 = B.typeLiteral("_HeroFlight");
    C.Type__ModalScopeState_ME9 = B.typeLiteral("_ModalScopeState<@>");
    C.Type__RouteEntry_yHm = B.typeLiteral("_RouteEntry");
    C.Variant_0_monochrome = new A.Variant(0, "monochrome");
    C.Variant_1_neutral = new A.Variant(1, "neutral");
    C.Variant_2_tonalSpot = new A.Variant(2, "tonalSpot");
    C.Variant_3_vibrant = new A.Variant(3, "vibrant");
    C.Variant_4_expressive = new A.Variant(4, "expressive");
    C.Variant_5_content = new A.Variant(5, "content");
    C.Variant_6_fidelity = new A.Variant(6, "fidelity");
    C.Variant_7_rainbow = new A.Variant(7, "rainbow");
    C.Variant_8_fruitSalad = new A.Variant(8, "fruitSalad");
    C.VelocityEstimate_mRX = new A.VelocityEstimate(D.Offset_0_0, 1, F.Duration_0, D.Offset_0_0);
    C.VerticalDirection_0 = new A.VerticalDirection(0, "up");
    C.VerticalDirection_1 = new A.VerticalDirection(1, "down");
    C.VisualDensity_0_0 = new A.VisualDensity(0, 0);
    C.VisualDensity_m2_m2 = new A.VisualDensity(-2, -2);
    C.WidgetStatePropertyAll_0 = new A.WidgetStatePropertyAll(0, type$.WidgetStatePropertyAll_double);
    C.WidgetStatePropertyAll_24 = new A.WidgetStatePropertyAll(24, type$.WidgetStatePropertyAll_double);
    C.WidgetStatePropertyAll_8UW = new A.WidgetStatePropertyAll(C.StadiumBorder_7BT, B.findType("WidgetStatePropertyAll<OutlinedBorder>"));
    C.Size_0kM = new E.Size(1 / 0, 1 / 0);
    C.WidgetStatePropertyAll_Bzp = new A.WidgetStatePropertyAll(C.Size_0kM, type$.WidgetStatePropertyAll_Size);
    C.WidgetStatePropertyAll_Color_0 = new A.WidgetStatePropertyAll(D.Color_0, B.findType("WidgetStatePropertyAll<Color>"));
    C.WidgetStatePropertyAll_Color_00 = new A.WidgetStatePropertyAll(D.Color_0, B.findType("WidgetStatePropertyAll<Color?>"));
    C.Size_40_40 = new E.Size(40, 40);
    C.WidgetStatePropertyAll_Size_40_40 = new A.WidgetStatePropertyAll(C.Size_40_40, type$.WidgetStatePropertyAll_Size);
    C.WidgetStatePropertyAll_wEo = new A.WidgetStatePropertyAll(C.EdgeInsets_8_8_8_8, B.findType("WidgetStatePropertyAll<EdgeInsetsGeometry>"));
    C.WidgetState_4 = new A.WidgetState(4, "selected");
    C.WidgetState_6 = new A.WidgetState(6, "disabled");
    C._AnimationDirection_0 = new A._AnimationDirection(0, "forward");
    C._AnimationDirection_1 = new A._AnimationDirection(1, "reverse");
    C.Color_67108864 = new E.Color(67108864);
    C.List_Color_67108864_Color_0 = B._setArrayType(makeConstList([C.Color_67108864, D.Color_0]), type$.JSArray_Color);
    C._CupertinoEdgeShadowDecoration_OTU = new A._CupertinoEdgeShadowDecoration(C.List_Color_67108864_Color_0);
    C._CupertinoEdgeShadowDecoration_null = new A._CupertinoEdgeShadowDecoration(null);
    C._DragDirection_0 = new A._DragDirection(0, "horizontal");
    C._DragDirection_1 = new A._DragDirection(1, "vertical");
    C._DragState_0 = new A._DragState(0, "ready");
    C._DragState_1 = new A._DragState(1, "possible");
    C._DragState_2 = new A._DragState(2, "accepted");
    C._FloatingActionButtonType_0 = new A._FloatingActionButtonType(0, "regular");
    C._FloatingActionButtonType_1 = new A._FloatingActionButtonType(1, "small");
    C._FloatingActionButtonType_2 = new A._FloatingActionButtonType(2, "large");
    C._FloatingActionButtonType_3 = new A._FloatingActionButtonType(3, "extended");
    C._HighlightType_0 = new A._HighlightType(0, "pressed");
    C._HighlightType_1 = new A._HighlightType(1, "hover");
    C._HighlightType_2 = new A._HighlightType(2, "focus");
    C._IconButtonVariant_0 = new A._IconButtonVariant(0, "standard");
    C._IconButtonVariant_1 = new A._IconButtonVariant(1, "filled");
    C._IconButtonVariant_2 = new A._IconButtonVariant(2, "filledTonal");
    C._IconButtonVariant_3 = new A._IconButtonVariant(3, "outlined");
    C._MixedEdgeInsets_Drw = new E._MixedEdgeInsets(1 / 0, 1 / 0, 1 / 0, 1 / 0, 1 / 0, 1 / 0);
    C._NullWidget_null0 = new A._NullWidget0(null);
    C._RouteLifecycle_0 = new A._RouteLifecycle(0, "staging");
    C._RouteLifecycle_1 = new A._RouteLifecycle(1, "add");
    C._RouteLifecycle_10 = new A._RouteLifecycle(10, "remove");
    C._RouteLifecycle_11 = new A._RouteLifecycle(11, "popping");
    C._RouteLifecycle_12 = new A._RouteLifecycle(12, "removing");
    C._RouteLifecycle_13 = new A._RouteLifecycle(13, "dispose");
    C._RouteLifecycle_14 = new A._RouteLifecycle(14, "disposing");
    C._RouteLifecycle_15 = new A._RouteLifecycle(15, "disposed");
    C._RouteLifecycle_2 = new A._RouteLifecycle(2, "adding");
    C._RouteLifecycle_3 = new A._RouteLifecycle(3, "push");
    C._RouteLifecycle_4 = new A._RouteLifecycle(4, "pushReplace");
    C._RouteLifecycle_5 = new A._RouteLifecycle(5, "pushing");
    C._RouteLifecycle_6 = new A._RouteLifecycle(6, "replace");
    C._RouteLifecycle_7 = new A._RouteLifecycle(7, "idle");
    C._RouteLifecycle_8 = new A._RouteLifecycle(8, "pop");
    C._RouteLifecycle_9 = new A._RouteLifecycle(9, "complete");
    C._TrainHoppingMode_0 = new A._TrainHoppingMode(0, "minimize");
    C._TrainHoppingMode_1 = new A._TrainHoppingMode(1, "maximize");
  })();
  (function staticFields() {
    $.Tooltip__openedTooltips = B._setArrayType([], B.findType("JSArray<TooltipState>"));
    $.HctSolver__scaledDiscountFromLinrgb = function() {
      var t1 = type$.JSArray_double;
      return B._setArrayType([B._setArrayType([0.001200833568784504, 0.002389694492170889, 0.0002795742885861124], t1), B._setArrayType([0.0005891086651375999, 0.0029785502573438758, 0.0003270666104008398], t1), B._setArrayType([0.00010146692491640572, 0.0005364214359186694, 0.0032979401770712076], t1)], type$.JSArray_List_double);
    }();
    $.HctSolver__linrgbFromScaledDiscount = function() {
      var t1 = type$.JSArray_double;
      return B._setArrayType([B._setArrayType([1373.2198709594231, -1100.4251190754821, -7.278681089101213], t1), B._setArrayType([-271.815969077903, 559.6580465940733, -32.46047482791194], t1), B._setArrayType([1.9622899599665666, -57.173814538844006, 308.7233197812385], t1)], type$.JSArray_List_double);
    }();
    $.HctSolver__yFromLinrgb = B._setArrayType([0.2126, 0.7152, 0.0722], type$.JSArray_double);
    $.HctSolver__criticalPlanes = B._setArrayType([0.015176349177441876, 0.045529047532325624, 0.07588174588720938, 0.10623444424209313, 0.13658714259697685, 0.16693984095186062, 0.19729253930674434, 0.2276452376616281, 0.2579979360165119, 0.28835063437139563, 0.3188300904430532, 0.350925934958123, 0.3848314933096426, 0.42057480301049466, 0.458183274052838, 0.4976837250274023, 0.5391024159806381, 0.5824650784040898, 0.6277969426914107, 0.6751227633498623, 0.7244668422128921, 0.775853049866786, 0.829304845476233, 0.8848452951698498, 0.942497089126609, 1.0022825574869039, 1.0642236851973577, 1.1283421258858297, 1.1946592148522128, 1.2631959812511864, 1.3339731595349034, 1.407011200216447, 1.4823302800086415, 1.5599503113873272, 1.6398909516233677, 1.7221716113234105, 1.8068114625156377, 1.8938294463134073, 1.9832442801866852, 2.075074464868551, 2.1693382909216234, 2.2660538449872063, 2.36523901573795, 2.4669114995532007, 2.5710888059345764, 2.6777882626779785, 2.7870270208169257, 2.898822059350997, 3.0131901897720907, 3.1301480604002863, 3.2497121605402226, 3.3718988244681087, 3.4967242352587946, 3.624204428461639, 3.754355295633311, 3.887192587735158, 4.022731918402185, 4.160988767090289, 4.301978482107941, 4.445716283538092, 4.592217266055746, 4.741496401646282, 4.893568542229298, 5.048448422192488, 5.20615066083972, 5.3666897647573375, 5.5300801301023865, 5.696336044816294, 5.865471690767354, 6.037501145825082, 6.212438385869475, 6.390297286737924, 6.571091626112461, 6.7548350853498045, 6.941541251256611, 7.131223617812143, 7.323895587840543, 7.5195704746346665, 7.7182615035334345, 7.919981813454504, 8.124744458384042, 8.332562408825165, 8.543448553206703, 8.757415699253682, 8.974476575321063, 9.194643831691977, 9.417930041841839, 9.644347703669503, 9.873909240696694, 10.106627003236781, 10.342513269534024, 10.58158024687427, 10.8238400726681, 11.069304815507364, 11.317986476196008, 11.569896988756009, 11.825048221409341, 12.083451977536606, 12.345119996613247, 12.610063955123938, 12.878295467455942, 13.149826086772048, 13.42466730586372, 13.702830557985108, 13.984327217668513, 14.269168601521828, 14.55736596900856, 14.848930523210871, 15.143873411576273, 15.44220572664832, 15.743938506781891, 16.04908273684337, 16.35764934889634, 16.66964922287304, 16.985093187232053, 17.30399201960269, 17.62635644741625, 17.95219714852476, 18.281524751807332, 18.614349837764564, 18.95068293910138, 19.290534541298456, 19.633915083172692, 19.98083495742689, 20.331304511189067, 20.685334046541502, 21.042933821039977, 21.404114048223256, 21.76888489811322, 22.137256497705877, 22.50923893145328, 22.884842241736916, 23.264076429332462, 23.6469514538663, 24.033477234264016, 24.42366364919083, 24.817520537484558, 25.21505769858089, 25.61628489293138, 26.021211842414342, 26.429848230738664, 26.842203703840827, 27.258287870275353, 27.678110301598522, 28.10168053274597, 28.529008062403893, 28.96010235337422, 29.39497283293396, 29.83362889318845, 30.276079891419332, 30.722335150426627, 31.172403958865512, 31.62629557157785, 32.08401920991837, 32.54558406207592, 33.010999283389665, 33.4802739966603, 33.953417292456834, 34.430438229418264, 34.911345834551085, 35.39614910352207, 35.88485700094671, 36.37747846067349, 36.87402238606382, 37.37449765026789, 37.87891309649659, 38.38727753828926, 38.89959975977785, 39.41588851594697, 39.93615253289054, 40.460400508064545, 40.98864111053629, 41.520882981230194, 42.05713473317016, 42.597404951718396, 43.141702194811224, 43.6900349931913, 44.24241185063697, 44.798841244188324, 45.35933162437017, 45.92389141541209, 46.49252901546552, 47.065252796817916, 47.64207110610409, 48.22299226451468, 48.808024568002054, 49.3971762874833, 49.9904556690408, 50.587870934119984, 51.189430279724725, 51.79514187861014, 52.40501387947288, 53.0190544071392, 53.637271562750364, 54.259673423945976, 54.88626804504493, 55.517063457223934, 56.15206766869424, 56.79128866487574, 57.43473440856916, 58.08241284012621, 58.734331877617365, 59.39049941699807, 60.05092333227251, 60.715611475655585, 61.38457167773311, 62.057811747619894, 62.7353394731159, 63.417162620860914, 64.10328893648692, 64.79372614476921, 65.48848194977529, 66.18756403501224, 66.89098006357258, 67.59873767827808, 68.31084450182222, 69.02730813691093, 69.74813616640164, 70.47333615344107, 71.20291564160104, 71.93688215501312, 72.67524319850172, 73.41800625771542, 74.16517879925733, 74.9167682708136, 75.67278210128072, 76.43322770089146, 77.1981124613393, 77.96744375590167, 78.74122893956174, 79.51947534912904, 80.30219030335869, 81.08938110306934, 81.88105503125999, 82.67721935322541, 83.4778813166706, 84.28304815182372, 85.09272707154808, 85.90692527145302, 86.72564993000343, 87.54890820862819, 88.3767072518277, 89.2090541872801, 90.04595612594655, 90.88742016217518, 91.73345337380438, 92.58406282226491, 93.43925555268066, 94.29903859396902, 95.16341895893969, 96.03240364439274, 96.9059996312159, 97.78421388448044, 98.6670533535366, 99.55452497210776], type$.JSArray_double);
    $.SchemeExpressive_hues = B._setArrayType([0, 21, 51, 121, 151, 191, 271, 321, 360], type$.JSArray_double);
    $.SchemeExpressive_secondaryRotations = B._setArrayType([45, 95, 45, 20, 45, 90, 45, 45, 45], type$.JSArray_double);
    $.SchemeExpressive_tertiaryRotations = B._setArrayType([120, 120, 20, 45, 20, 15, 20, 120, 120], type$.JSArray_double);
    $.SchemeVibrant_hues = B._setArrayType([0, 41, 61, 101, 131, 181, 251, 301, 360], type$.JSArray_double);
    $.SchemeVibrant_secondaryRotations = B._setArrayType([18, 15, 10, 12, 15, 18, 15, 12, 12], type$.JSArray_double);
    $.SchemeVibrant_tertiaryRotations = B._setArrayType([35, 30, 20, 25, 30, 35, 30, 25, 25], type$.JSArray_double);
    $.ColorUtils__srgbToXyz = function() {
      var t1 = type$.JSArray_double;
      return B._setArrayType([B._setArrayType([0.41233895, 0.35762064, 0.18051042], t1), B._setArrayType([0.2126, 0.7152, 0.0722], t1), B._setArrayType([0.01932141, 0.11916382, 0.95034478], t1)], type$.JSArray_List_double);
    }();
    $.ColorUtils__whitePointD65 = B._setArrayType([95.047, 100, 108.883], type$.JSArray_double);
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal,
      _lazy = hunkHelpers.lazy;
    _lazyFinal($, "_WeakReferenceWrapper__weakRefConstructor", "$get$_WeakReferenceWrapper__weakRefConstructor", () => A._WeakReferenceWrapper__findWeakRefConstructor());
    _lazy($, "AnimationStyle_noAnimation", "$get$AnimationStyle_noAnimation", () => A.AnimationStyle$(F.Duration_0, F.Duration_0));
    _lazyFinal($, "_kRightMiddleTween", "$get$_kRightMiddleTween", () => A.Tween$(C.Offset_1_0, D.Offset_0_0, type$.Offset));
    _lazyFinal($, "_kMiddleLeftTween", "$get$_kMiddleLeftTween", () => A.Tween$(D.Offset_0_0, C.Offset_wEo, type$.Offset));
    _lazyFinal($, "_kBottomUpTween", "$get$_kBottomUpTween", () => A.Tween$(C.Offset_0_1, D.Offset_0_0, type$.Offset));
    _lazy($, "_CupertinoEdgeShadowDecoration_kTween", "$get$_CupertinoEdgeShadowDecoration_kTween", () => A.DecorationTween$(C._CupertinoEdgeShadowDecoration_null, C._CupertinoEdgeShadowDecoration_OTU));
    _lazyFinal($, "kDefaultIconLightColor", "$get$kDefaultIconLightColor", () => E.Color$(4294967295));
    _lazyFinal($, "kDefaultIconDarkColor", "$get$kDefaultIconDarkColor", () => E.Color$(3707764736));
    _lazyFinal($, "InkRipple__easeCurveTween", "$get$InkRipple__easeCurveTween", () => A.CurveTween$(D.Cubic_WKj));
    _lazyFinal($, "InkRipple__fadeOutIntervalTween", "$get$InkRipple__fadeOutIntervalTween", () => A.CurveTween$(C.Interval_gzV));
    _lazyFinal($, "_ZoomPageTransition_fastOutExtraSlowInTweenSequenceItems", "$get$_ZoomPageTransition_fastOutExtraSlowInTweenSequenceItems", () => {
      var t1 = type$.double;
      return B._setArrayType([A.TweenSequenceItem$(A.Tween$(0, 0.4, t1).chain$1(A.CurveTween$(C.Cubic_ECQ)), 0.166666, t1), A.TweenSequenceItem$(A.Tween$(0.4, 1, t1).chain$1(A.CurveTween$(C.Cubic_Z87)), 0.833334, t1)], B.findType("JSArray<TweenSequenceItem<double>>"));
    });
    _lazyFinal($, "_ZoomPageTransition__scaleCurveSequence", "$get$_ZoomPageTransition__scaleCurveSequence", () => A.TweenSequence$($.$get$_ZoomPageTransition_fastOutExtraSlowInTweenSequenceItems(), type$.double));
    _lazyFinal($, "_ZoomEnterTransitionState__fadeInTransition", "$get$_ZoomEnterTransitionState__fadeInTransition", () => A.Tween$(0, 1, type$.double).chain$1(A.CurveTween$(C.Interval_gzV0)));
    _lazyFinal($, "_ZoomEnterTransitionState__scaleDownTransition", "$get$_ZoomEnterTransitionState__scaleDownTransition", () => A.Tween$(1.1, 1, type$.double).chain$1($.$get$_ZoomPageTransition__scaleCurveSequence()));
    _lazyFinal($, "_ZoomEnterTransitionState__scaleUpTransition", "$get$_ZoomEnterTransitionState__scaleUpTransition", () => A.Tween$(0.85, 1, type$.double).chain$1($.$get$_ZoomPageTransition__scaleCurveSequence()));
    _lazyFinal($, "_ZoomEnterTransitionState__scrimOpacityTween", "$get$_ZoomEnterTransitionState__scrimOpacityTween", () => A.Tween$(0, 0.6, type$.nullable_double).chain$1(A.CurveTween$(C.Interval_qxB)));
    _lazyFinal($, "_ZoomExitTransitionState__fadeOutTransition", "$get$_ZoomExitTransitionState__fadeOutTransition", () => A.Tween$(1, 0, type$.double).chain$1(A.CurveTween$(C.Interval_43h)));
    _lazyFinal($, "_ZoomExitTransitionState__scaleUpTransition", "$get$_ZoomExitTransitionState__scaleUpTransition", () => A.Tween$(1, 1.05, type$.double).chain$1($.$get$_ZoomPageTransition__scaleCurveSequence()));
    _lazyFinal($, "_ZoomExitTransitionState__scaleDownTransition", "$get$_ZoomExitTransitionState__scaleDownTransition", () => A.Tween$(1, 0.9, type$.double).chain$1($.$get$_ZoomPageTransition__scaleCurveSequence()));
    _lazyFinal($, "Theme__kFallbackTheme", "$get$Theme__kFallbackTheme", () => A.ThemeData_ThemeData$fallback());
    _lazyFinal($, "ThemeData__localizedThemeDataCache", "$get$ThemeData__localizedThemeDataCache", () => A._FifoCache$(5, B.findType("_IdentityThemeDataCacheKey"), type$.ThemeData));
    _lazyFinal($, "RenderParagraph__placeholderCharacter", "$get$RenderParagraph__placeholderCharacter", () => B.String_String$fromCharCode(65532));
    _lazyFinal($, "_SelectableFragment__placeholderCharacter", "$get$_SelectableFragment__placeholderCharacter", () => B.String_String$fromCharCode(65532));
    _lazyFinal($, "_SelectableFragment__placeholderLength", "$get$_SelectableFragment__placeholderLength", () => J.get$length$asx($.$get$_SelectableFragment__placeholderCharacter()));
    _lazyFinal($, "LogicalKeyboardKey__reverseSynonyms", "$get$LogicalKeyboardKey__reverseSynonyms", () => {
      var t1 = type$.LogicalKeyboardKey;
      return B.LinkedHashMap_LinkedHashMap$_literal([D.LogicalKeyboardKey_8589935090, B.LinkedHashSet_LinkedHashSet$_literal([D.LogicalKeyboardKey_8589934850, D.LogicalKeyboardKey_8589934851], t1), D.LogicalKeyboardKey_8589935094, B.LinkedHashSet_LinkedHashSet$_literal([D.LogicalKeyboardKey_8589934854, D.LogicalKeyboardKey_8589934855], t1), D.LogicalKeyboardKey_8589935092, B.LinkedHashSet_LinkedHashSet$_literal([D.LogicalKeyboardKey_8589934852, D.LogicalKeyboardKey_8589934853], t1), D.LogicalKeyboardKey_8589935088, B.LinkedHashSet_LinkedHashSet$_literal([D.LogicalKeyboardKey_8589934848, D.LogicalKeyboardKey_8589934849], t1)], t1, type$.Set_LogicalKeyboardKey);
    });
    _lazy($, "WidgetsApp_defaultActions", "$get$WidgetsApp_defaultActions", () => B.LinkedHashMap_LinkedHashMap$_literal([C.Type_DoNothingIntent_0mM, A.DoNothingAction$(true), C.Type_Ich, A.DoNothingAction$(false), C.Type_RequestFocusIntent_JFX, A.RequestFocusAction$(), C.Type_NextFocusIntent_FGJ, A.NextFocusAction$(), C.Type_PreviousFocusIntent_8eb, A.PreviousFocusAction$(), C.Type_DirectionalFocusIntent_UZG, A.DirectionalFocusAction$(), C.Type_ScrollIntent_eXW, A.ScrollAction$(), C.Type_PrioritizedIntents_kyu, A.PrioritizedAction$(), C.Type_VoidCallbackIntent_w3m, A.VoidCallbackAction$()], type$.Type, type$.Action_Intent));
    _lazyFinal($, "DefaultTextEditingShortcuts__commonShortcuts", "$get$DefaultTextEditingShortcuts__commonShortcuts", () => {
      var t3, t4, t5,
        t1 = type$.Intent,
        t2 = B.LinkedHashMap_LinkedHashMap$_empty(type$.ShortcutActivator, t1);
      for (t3 = F.JSArray_methods.get$iterator(C.List_true_false), t4 = B.findType("SingleActivator"); B.boolConversionCheck(t3.moveNext$0());) {
        t5 = t3.get$current();
        t2.addAll$1(0, B.LinkedHashMap_LinkedHashMap$_literal([A.SingleActivator$(D.LogicalKeyboardKey_4294967304, false, false, false, t5), C.C_DeleteCharacterIntent, A.SingleActivator$(D.LogicalKeyboardKey_4294967304, false, true, false, t5), C.C_DeleteToNextWordBoundaryIntent, A.SingleActivator$(D.LogicalKeyboardKey_4294967304, true, false, false, t5), C.C_DeleteToLineBreakIntent, A.SingleActivator$(D.LogicalKeyboardKey_4294967423, false, false, false, t5), C.C_DeleteCharacterIntent0, A.SingleActivator$(D.LogicalKeyboardKey_4294967423, false, true, false, t5), C.C_DeleteToNextWordBoundaryIntent0, A.SingleActivator$(D.LogicalKeyboardKey_4294967423, true, false, false, t5), C.C_DeleteToLineBreakIntent0], t4, t1));
      }
      t2.$indexSet(0, C.SingleActivator_EOZ8, C.C_ExtendSelectionByCharacterIntent);
      t2.$indexSet(0, C.SingleActivator_EOZ9, C.C_ExtendSelectionByCharacterIntent0);
      t2.$indexSet(0, C.SingleActivator_EOZ10, C.C_ExtendSelectionVerticallyToAdjacentLineIntent);
      t2.$indexSet(0, C.SingleActivator_EOZ11, C.C_ExtendSelectionVerticallyToAdjacentLineIntent0);
      t2.$indexSet(0, C.SingleActivator_EOZ12, C.C_ExtendSelectionByCharacterIntent1);
      t2.$indexSet(0, C.SingleActivator_EOZ13, C.C_ExtendSelectionByCharacterIntent2);
      t2.$indexSet(0, C.SingleActivator_EOZ14, C.C_ExtendSelectionVerticallyToAdjacentLineIntent1);
      t2.$indexSet(0, C.SingleActivator_EOZ15, C.C_ExtendSelectionVerticallyToAdjacentLineIntent2);
      t2.$indexSet(0, C.SingleActivator_EOZ16, C.C_ExtendSelectionToLineBreakIntent3);
      t2.$indexSet(0, C.SingleActivator_EOZ17, C.C_ExtendSelectionToLineBreakIntent4);
      t2.$indexSet(0, C.SingleActivator_EOZ18, C.C_ExtendSelectionToDocumentBoundaryIntent);
      t2.$indexSet(0, C.SingleActivator_EOZ19, C.C_ExtendSelectionToDocumentBoundaryIntent0);
      t2.$indexSet(0, C.SingleActivator_EOZ20, C.C_ExtendSelectionToLineBreakIntent5);
      t2.$indexSet(0, C.SingleActivator_EOZ21, C.C_ExtendSelectionToLineBreakIntent6);
      t2.$indexSet(0, C.SingleActivator_EOZ22, C.C_ExtendSelectionToDocumentBoundaryIntent1);
      t2.$indexSet(0, C.SingleActivator_EOZ23, C.C_ExtendSelectionToDocumentBoundaryIntent2);
      t2.$indexSet(0, C.SingleActivator_EOZ24, C.C_ExtendSelectionToNextWordBoundaryIntent);
      t2.$indexSet(0, C.SingleActivator_EOZ25, C.C_ExtendSelectionToNextWordBoundaryIntent0);
      t2.$indexSet(0, C.SingleActivator_EOZ26, C.C_ExtendSelectionToNextWordBoundaryIntent1);
      t2.$indexSet(0, C.SingleActivator_EOZ27, C.C_ExtendSelectionToNextWordBoundaryIntent2);
      t2.$indexSet(0, C.SingleActivator_EOZ28, C.C_ExtendSelectionToNextParagraphBoundaryIntent);
      t2.$indexSet(0, C.SingleActivator_EOZ29, C.C_ExtendSelectionToNextParagraphBoundaryIntent0);
      t2.$indexSet(0, C.SingleActivator_ciW, C.C_ExtendSelectionVerticallyToAdjacentPageIntent);
      t2.$indexSet(0, C.SingleActivator_EOZ, C.C_ExtendSelectionVerticallyToAdjacentPageIntent0);
      t2.$indexSet(0, C.SingleActivator_ciW0, C.C_ExtendSelectionVerticallyToAdjacentPageIntent1);
      t2.$indexSet(0, C.SingleActivator_EOZ30, C.C_ExtendSelectionVerticallyToAdjacentPageIntent2);
      t2.$indexSet(0, C.SingleActivator_FIw, C.C_CopySelectionTextIntent);
      t2.$indexSet(0, C.SingleActivator_FIw0, C.C_CopySelectionTextIntent0);
      t2.$indexSet(0, C.SingleActivator_FIw1, C.C_PasteTextIntent);
      t2.$indexSet(0, C.SingleActivator_FIw2, C.C_SelectAllTextIntent);
      t2.$indexSet(0, C.SingleActivator_FIw3, C.C_UndoTextIntent);
      t2.$indexSet(0, C.SingleActivator_FIw4, C.C_RedoTextIntent);
      t2.$indexSet(0, C.SingleActivator_FIw5, C.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, C.SingleActivator_OBP, C.C_DoNothingAndStopPropagationTextIntent);
      return t2;
    });
    _lazyFinal($, "DefaultTextEditingShortcuts__androidShortcuts", "$get$DefaultTextEditingShortcuts__androidShortcuts", () => $.$get$DefaultTextEditingShortcuts__commonShortcuts());
    _lazyFinal($, "DefaultTextEditingShortcuts__fuchsiaShortcuts", "$get$DefaultTextEditingShortcuts__fuchsiaShortcuts", () => $.$get$DefaultTextEditingShortcuts__androidShortcuts());
    _lazyFinal($, "DefaultTextEditingShortcuts__linuxNumpadShortcuts", "$get$DefaultTextEditingShortcuts__linuxNumpadShortcuts", () => B.LinkedHashMap_LinkedHashMap$_literal([C.SingleActivator_saY, C.C_ExtendSelectionByCharacterIntent2, C.SingleActivator_saY0, C.C_ExtendSelectionByCharacterIntent1, C.SingleActivator_EyN, C.C_ExtendSelectionVerticallyToAdjacentLineIntent1, C.SingleActivator_saY1, C.C_ExtendSelectionVerticallyToAdjacentLineIntent2, C.SingleActivator_saY2, C.C_ExtendSelectionToNextWordBoundaryIntent2, C.SingleActivator_saY3, C.C_ExtendSelectionToNextWordBoundaryIntent1, C.SingleActivator_EyN0, C.C_ExtendSelectionToNextParagraphBoundaryIntent, C.SingleActivator_saY4, C.C_ExtendSelectionToNextParagraphBoundaryIntent0, C.SingleActivator_EyN1, C.C_ExtendSelectionVerticallyToAdjacentPageIntent1, C.SingleActivator_saY5, C.C_ExtendSelectionVerticallyToAdjacentPageIntent2, C.SingleActivator_saY6, C.C_ExtendSelectionVerticallyToAdjacentLineIntent1, C.SingleActivator_saY7, C.C_ExtendSelectionVerticallyToAdjacentLineIntent2, C.SingleActivator_A4L, C.C_DeleteCharacterIntent0, C.SingleActivator_A4L0, C.C_DeleteToNextWordBoundaryIntent0, C.SingleActivator_Gp5, C.C_ExtendSelectionByCharacterIntent0, C.SingleActivator_Gp50, C.C_ExtendSelectionByCharacterIntent, C.SingleActivator_Qtz, C.C_ExtendSelectionVerticallyToAdjacentLineIntent, C.SingleActivator_Gp51, C.C_ExtendSelectionVerticallyToAdjacentLineIntent0, C.SingleActivator_Gp52, C.C_ExtendSelectionToNextWordBoundaryIntent0, C.SingleActivator_Gp53, C.C_ExtendSelectionToNextWordBoundaryIntent, C.SingleActivator_Qtz0, C.C_ExtendSelectionToNextParagraphBoundaryIntent1, C.SingleActivator_Gp54, C.C_ExtendSelectionToNextParagraphBoundaryIntent2, C.SingleActivator_Qtz1, C.C_ExtendSelectionVerticallyToAdjacentPageIntent, C.SingleActivator_Gp55, C.C_ExtendSelectionVerticallyToAdjacentPageIntent0, C.SingleActivator_Gp56, C.C_ExtendSelectionVerticallyToAdjacentLineIntent, C.SingleActivator_Gp57, C.C_ExtendSelectionVerticallyToAdjacentLineIntent0, C.SingleActivator_KlX, C.C_DeleteCharacterIntent0, C.SingleActivator_KlX0, C.C_DeleteToNextWordBoundaryIntent0], type$.ShortcutActivator, type$.Intent));
    _lazyFinal($, "DefaultTextEditingShortcuts__linuxShortcuts", "$get$DefaultTextEditingShortcuts__linuxShortcuts", () => {
      var t1 = B.LinkedHashMap_LinkedHashMap$of($.$get$DefaultTextEditingShortcuts__commonShortcuts(), type$.ShortcutActivator, type$.Intent);
      t1.addAll$1(0, $.$get$DefaultTextEditingShortcuts__linuxNumpadShortcuts());
      t1.$indexSet(0, C.SingleActivator_EOZ0, C.C_ExtendSelectionToLineBreakIntent3);
      t1.$indexSet(0, C.SingleActivator_EOZ1, C.C_ExtendSelectionToLineBreakIntent4);
      t1.$indexSet(0, C.SingleActivator_EOZ2, C.C_ExtendSelectionToLineBreakIntent5);
      t1.$indexSet(0, C.SingleActivator_EOZ3, C.C_ExtendSelectionToLineBreakIntent6);
      return t1;
    });
    _lazyFinal($, "DefaultTextEditingShortcuts__macShortcuts", "$get$DefaultTextEditingShortcuts__macShortcuts", () => {
      var t3, t4, t5,
        t1 = type$.Intent,
        t2 = B.LinkedHashMap_LinkedHashMap$_empty(type$.ShortcutActivator, t1);
      for (t3 = F.JSArray_methods.get$iterator(C.List_true_false), t4 = B.findType("SingleActivator"); B.boolConversionCheck(t3.moveNext$0());) {
        t5 = t3.get$current();
        t2.addAll$1(0, B.LinkedHashMap_LinkedHashMap$_literal([A.SingleActivator$(D.LogicalKeyboardKey_4294967304, false, false, false, t5), C.C_DeleteCharacterIntent, A.SingleActivator$(D.LogicalKeyboardKey_4294967304, true, false, false, t5), C.C_DeleteToNextWordBoundaryIntent, A.SingleActivator$(D.LogicalKeyboardKey_4294967304, false, false, true, t5), C.C_DeleteToLineBreakIntent, A.SingleActivator$(D.LogicalKeyboardKey_4294967423, false, false, false, t5), C.C_DeleteCharacterIntent0, A.SingleActivator$(D.LogicalKeyboardKey_4294967423, true, false, false, t5), C.C_DeleteToNextWordBoundaryIntent0, A.SingleActivator$(D.LogicalKeyboardKey_4294967423, false, false, true, t5), C.C_DeleteToLineBreakIntent0], t4, t1));
      }
      t2.$indexSet(0, C.SingleActivator_EOZ8, C.C_ExtendSelectionByCharacterIntent);
      t2.$indexSet(0, C.SingleActivator_EOZ9, C.C_ExtendSelectionByCharacterIntent0);
      t2.$indexSet(0, C.SingleActivator_EOZ10, C.C_ExtendSelectionVerticallyToAdjacentLineIntent);
      t2.$indexSet(0, C.SingleActivator_EOZ11, C.C_ExtendSelectionVerticallyToAdjacentLineIntent0);
      t2.$indexSet(0, C.SingleActivator_EOZ12, C.C_ExtendSelectionByCharacterIntent1);
      t2.$indexSet(0, C.SingleActivator_EOZ13, C.C_ExtendSelectionByCharacterIntent2);
      t2.$indexSet(0, C.SingleActivator_EOZ14, C.C_ExtendSelectionVerticallyToAdjacentLineIntent1);
      t2.$indexSet(0, C.SingleActivator_EOZ15, C.C_ExtendSelectionVerticallyToAdjacentLineIntent2);
      t2.$indexSet(0, C.SingleActivator_EOZ16, C.C_ExtendSelectionToNextWordBoundaryIntent);
      t2.$indexSet(0, C.SingleActivator_EOZ17, C.C_ExtendSelectionToNextWordBoundaryIntent0);
      t2.$indexSet(0, C.SingleActivator_EOZ18, C.C_ExtendSelectionToLineBreakIntent3);
      t2.$indexSet(0, C.SingleActivator_EOZ19, C.C_ExtendSelectionToLineBreakIntent4);
      t2.$indexSet(0, C.SingleActivator_EOZ20, C.C_ExtendSelectionToNextWordBoundaryOrCaretLocationIntent);
      t2.$indexSet(0, C.SingleActivator_EOZ21, C.C_ExtendSelectionToNextWordBoundaryOrCaretLocationIntent0);
      t2.$indexSet(0, C.SingleActivator_EOZ22, C.C_ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent);
      t2.$indexSet(0, C.SingleActivator_EOZ23, C.C_ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent0);
      t2.$indexSet(0, C.SingleActivator_EOZ31, C.C_ExtendSelectionToLineBreakIntent3);
      t2.$indexSet(0, C.SingleActivator_EOZ32, C.C_ExtendSelectionToLineBreakIntent4);
      t2.$indexSet(0, C.SingleActivator_EOZ33, C.C_ExtendSelectionToDocumentBoundaryIntent);
      t2.$indexSet(0, C.SingleActivator_EOZ34, C.C_ExtendSelectionToDocumentBoundaryIntent0);
      t2.$indexSet(0, C.SingleActivator_EOZ35, C.C_ExpandSelectionToLineBreakIntent);
      t2.$indexSet(0, C.SingleActivator_EOZ36, C.C_ExpandSelectionToLineBreakIntent0);
      t2.$indexSet(0, C.SingleActivator_EOZ37, C.C_ExpandSelectionToDocumentBoundaryIntent);
      t2.$indexSet(0, C.SingleActivator_EOZ38, C.C_ExpandSelectionToDocumentBoundaryIntent0);
      t2.$indexSet(0, C.SingleActivator_FIw6, C.C_TransposeCharactersIntent);
      t2.$indexSet(0, C.SingleActivator_EOZ0, C.C_ScrollToDocumentBoundaryIntent);
      t2.$indexSet(0, C.SingleActivator_EOZ1, C.C_ScrollToDocumentBoundaryIntent0);
      t2.$indexSet(0, C.SingleActivator_EOZ2, C.C_ExpandSelectionToDocumentBoundaryIntent);
      t2.$indexSet(0, C.SingleActivator_EOZ3, C.C_ExpandSelectionToDocumentBoundaryIntent0);
      t2.$indexSet(0, C.SingleActivator_ciW, C.ScrollIntent_kuI);
      t2.$indexSet(0, C.SingleActivator_EOZ, C.ScrollIntent_A0N);
      t2.$indexSet(0, C.SingleActivator_ciW0, C.C_ExtendSelectionVerticallyToAdjacentPageIntent1);
      t2.$indexSet(0, C.SingleActivator_EOZ30, C.C_ExtendSelectionVerticallyToAdjacentPageIntent2);
      t2.$indexSet(0, C.SingleActivator_FIw7, C.C_CopySelectionTextIntent);
      t2.$indexSet(0, C.SingleActivator_FIw8, C.C_CopySelectionTextIntent0);
      t2.$indexSet(0, C.SingleActivator_FIw9, C.C_PasteTextIntent);
      t2.$indexSet(0, C.SingleActivator_FIw10, C.C_SelectAllTextIntent);
      t2.$indexSet(0, C.SingleActivator_FIw11, C.C_UndoTextIntent);
      t2.$indexSet(0, C.SingleActivator_FIw12, C.C_RedoTextIntent);
      t2.$indexSet(0, C.SingleActivator_FIw13, C.C_ExtendSelectionToLineBreakIntent4);
      t2.$indexSet(0, C.SingleActivator_FIw2, C.C_ExtendSelectionToLineBreakIntent3);
      t2.$indexSet(0, C.SingleActivator_FIw14, C.C_ExtendSelectionByCharacterIntent0);
      t2.$indexSet(0, C.SingleActivator_FIw15, C.C_ExtendSelectionByCharacterIntent);
      t2.$indexSet(0, C.SingleActivator_FIw16, C.C_ExtendSelectionVerticallyToAdjacentLineIntent0);
      t2.$indexSet(0, C.SingleActivator_FIw17, C.C_ExtendSelectionVerticallyToAdjacentLineIntent);
      t2.$indexSet(0, C.SingleActivator_FIw5, C.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, C.SingleActivator_OBP, C.C_DoNothingAndStopPropagationTextIntent);
      return t2;
    });
    _lazyFinal($, "DefaultTextEditingShortcuts__iOSShortcuts", "$get$DefaultTextEditingShortcuts__iOSShortcuts", () => $.$get$DefaultTextEditingShortcuts__macShortcuts());
    _lazyFinal($, "DefaultTextEditingShortcuts__windowsShortcuts", "$get$DefaultTextEditingShortcuts__windowsShortcuts", () => {
      var t1 = B.LinkedHashMap_LinkedHashMap$of($.$get$DefaultTextEditingShortcuts__commonShortcuts(), type$.ShortcutActivator, type$.Intent);
      t1.$indexSet(0, C.SingleActivator_ciW, C.C_ExtendSelectionVerticallyToAdjacentPageIntent);
      t1.$indexSet(0, C.SingleActivator_EOZ, C.C_ExtendSelectionVerticallyToAdjacentPageIntent0);
      t1.$indexSet(0, C.SingleActivator_EOZ0, C.C_ExtendSelectionToLineBreakIntent);
      t1.$indexSet(0, C.SingleActivator_EOZ1, C.C_ExtendSelectionToLineBreakIntent0);
      t1.$indexSet(0, C.SingleActivator_EOZ2, C.C_ExtendSelectionToLineBreakIntent1);
      t1.$indexSet(0, C.SingleActivator_EOZ3, C.C_ExtendSelectionToLineBreakIntent2);
      t1.$indexSet(0, C.SingleActivator_EOZ4, C.C_ExtendSelectionToDocumentBoundaryIntent);
      t1.$indexSet(0, C.SingleActivator_EOZ5, C.C_ExtendSelectionToDocumentBoundaryIntent0);
      t1.$indexSet(0, C.SingleActivator_EOZ6, C.C_ExtendSelectionToDocumentBoundaryIntent1);
      t1.$indexSet(0, C.SingleActivator_EOZ7, C.C_ExtendSelectionToDocumentBoundaryIntent2);
      return t1;
    });
    _lazyFinal($, "DefaultTextEditingShortcuts__webDisablingTextShortcuts", "$get$DefaultTextEditingShortcuts__webDisablingTextShortcuts", () => {
      var t3, t4, t5,
        t1 = type$.Intent,
        t2 = B.LinkedHashMap_LinkedHashMap$_empty(type$.ShortcutActivator, t1);
      for (t3 = F.JSArray_methods.get$iterator(C.List_true_false), t4 = B.findType("SingleActivator"); B.boolConversionCheck(t3.moveNext$0());) {
        t5 = t3.get$current();
        t2.addAll$1(0, B.LinkedHashMap_LinkedHashMap$_literal([A.SingleActivator$(D.LogicalKeyboardKey_4294967304, false, false, false, t5), C.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(D.LogicalKeyboardKey_4294967423, false, false, false, t5), C.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(D.LogicalKeyboardKey_4294967304, true, false, false, t5), C.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(D.LogicalKeyboardKey_4294967423, true, false, false, t5), C.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(D.LogicalKeyboardKey_4294967304, false, true, false, t5), C.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(D.LogicalKeyboardKey_4294967423, false, true, false, t5), C.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(D.LogicalKeyboardKey_4294967304, false, false, true, t5), C.C_DoNothingAndStopPropagationTextIntent, A.SingleActivator$(D.LogicalKeyboardKey_4294967423, false, false, true, t5), C.C_DoNothingAndStopPropagationTextIntent], t4, t1));
      }
      t2.addAll$1(0, C.Map_axQ1p);
      t2.$indexSet(0, C.SingleActivator_FIw, C.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, C.SingleActivator_FIw7, C.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, C.SingleActivator_FIw0, C.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, C.SingleActivator_FIw8, C.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, C.SingleActivator_FIw1, C.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, C.SingleActivator_FIw9, C.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, C.SingleActivator_FIw2, C.C_DoNothingAndStopPropagationTextIntent);
      t2.$indexSet(0, C.SingleActivator_FIw10, C.C_DoNothingAndStopPropagationTextIntent);
      return t2;
    });
    _lazyFinal($, "DefaultTextEditingShortcuts__macDisablingTextShortcuts", "$get$DefaultTextEditingShortcuts__macDisablingTextShortcuts", () => {
      var t1 = B.LinkedHashMap_LinkedHashMap$of(C.Map_axQ1p, type$.ShortcutActivator, type$.Intent);
      t1.addAll$1(0, C.Map_rrcAz);
      t1.$indexSet(0, C.SingleActivator_aRy, C.C_DoNothingAndStopPropagationTextIntent);
      t1.$indexSet(0, C.SingleActivator_OBP0, C.C_DoNothingAndStopPropagationTextIntent);
      t1.$indexSet(0, C.SingleActivator_OBP1, C.C_DoNothingAndStopPropagationTextIntent);
      t1.$indexSet(0, C.SingleActivator_EOZ23, C.C_DoNothingAndStopPropagationTextIntent);
      t1.$indexSet(0, C.SingleActivator_EOZ22, C.C_DoNothingAndStopPropagationTextIntent);
      t1.$indexSet(0, C.SingleActivator_EOZ12, C.C_DoNothingAndStopPropagationTextIntent);
      t1.$indexSet(0, C.SingleActivator_EOZ13, C.C_DoNothingAndStopPropagationTextIntent);
      t1.$indexSet(0, C.SingleActivator_EOZ20, C.C_DoNothingAndStopPropagationTextIntent);
      t1.$indexSet(0, C.SingleActivator_EOZ21, C.C_DoNothingAndStopPropagationTextIntent);
      t1.$indexSet(0, C.SingleActivator_EOZ35, C.C_DoNothingAndStopPropagationTextIntent);
      t1.$indexSet(0, C.SingleActivator_EOZ36, C.C_DoNothingAndStopPropagationTextIntent);
      t1.$indexSet(0, C.SingleActivator_ciW, C.C_DoNothingAndStopPropagationTextIntent);
      t1.$indexSet(0, C.SingleActivator_EOZ, C.C_DoNothingAndStopPropagationTextIntent);
      t1.$indexSet(0, C.SingleActivator_EOZ1, C.C_DoNothingAndStopPropagationTextIntent);
      t1.$indexSet(0, C.SingleActivator_EOZ0, C.C_DoNothingAndStopPropagationTextIntent);
      t1.$indexSet(0, C.SingleActivator_ciW0, C.C_DoNothingAndStopPropagationTextIntent);
      t1.$indexSet(0, C.SingleActivator_EOZ30, C.C_DoNothingAndStopPropagationTextIntent);
      t1.$indexSet(0, C.SingleActivator_EOZ3, C.C_DoNothingAndStopPropagationTextIntent);
      t1.$indexSet(0, C.SingleActivator_EOZ2, C.C_DoNothingAndStopPropagationTextIntent);
      t1.$indexSet(0, C.SingleActivator_EOZ5, C.C_DoNothingAndStopPropagationTextIntent);
      t1.$indexSet(0, C.SingleActivator_EOZ4, C.C_DoNothingAndStopPropagationTextIntent);
      return t1;
    });
    _lazyFinal($, "_HeroFlight__reverseTween", "$get$_HeroFlight__reverseTween", () => A.Tween$(1, 0, type$.double));
    _lazyFinal($, "NavigatorObserver__navigators", "$get$NavigatorObserver__navigators", () => E.Expando$(type$.NavigatorState));
    _lazyFinal($, "_controlSynonyms", "$get$_controlSynonyms", () => A.LogicalKeyboardKey_expandSynonyms(B.LinkedHashSet_LinkedHashSet$_literal([D.LogicalKeyboardKey_8589935088], type$.LogicalKeyboardKey)));
    _lazyFinal($, "_shiftSynonyms", "$get$_shiftSynonyms", () => A.LogicalKeyboardKey_expandSynonyms(B.LinkedHashSet_LinkedHashSet$_literal([D.LogicalKeyboardKey_8589935090], type$.LogicalKeyboardKey)));
    _lazyFinal($, "_altSynonyms", "$get$_altSynonyms", () => A.LogicalKeyboardKey_expandSynonyms(B.LinkedHashSet_LinkedHashSet$_literal([D.LogicalKeyboardKey_8589935092], type$.LogicalKeyboardKey)));
    _lazyFinal($, "_metaSynonyms", "$get$_metaSynonyms", () => A.LogicalKeyboardKey_expandSynonyms(B.LinkedHashSet_LinkedHashSet$_literal([D.LogicalKeyboardKey_8589935094], type$.LogicalKeyboardKey)));
    _lazy($, "MaterialDynamicColors_background", "$get$MaterialDynamicColors_background", () => {
      var _null = null;
      return A.DynamicColor_DynamicColor$fromPalette(_null, _null, true, "background", new A.MaterialDynamicColors_background_closure(), _null, new A.MaterialDynamicColors_background_closure0(), _null);
    });
    _lazy($, "MaterialDynamicColors_onBackground", "$get$MaterialDynamicColors_onBackground", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_onBackground_closure(), A.ContrastCurve$(3, 3, 4.5, 7), false, "on_background", new A.MaterialDynamicColors_onBackground_closure0(), null, new A.MaterialDynamicColors_onBackground_closure1(), null));
    _lazy($, "MaterialDynamicColors_surface", "$get$MaterialDynamicColors_surface", () => {
      var _null = null;
      return A.DynamicColor_DynamicColor$fromPalette(_null, _null, true, "surface", new A.MaterialDynamicColors_surface_closure(), _null, new A.MaterialDynamicColors_surface_closure0(), _null);
    });
    _lazy($, "MaterialDynamicColors_surfaceDim", "$get$MaterialDynamicColors_surfaceDim", () => {
      var _null = null;
      return A.DynamicColor_DynamicColor$fromPalette(_null, _null, true, "surface_dim", new A.MaterialDynamicColors_surfaceDim_closure(), _null, new A.MaterialDynamicColors_surfaceDim_closure0(), _null);
    });
    _lazy($, "MaterialDynamicColors_surfaceBright", "$get$MaterialDynamicColors_surfaceBright", () => {
      var _null = null;
      return A.DynamicColor_DynamicColor$fromPalette(_null, _null, true, "surface_bright", new A.MaterialDynamicColors_surfaceBright_closure(), _null, new A.MaterialDynamicColors_surfaceBright_closure0(), _null);
    });
    _lazy($, "MaterialDynamicColors_surfaceContainerLowest", "$get$MaterialDynamicColors_surfaceContainerLowest", () => {
      var _null = null;
      return A.DynamicColor_DynamicColor$fromPalette(_null, _null, true, "surface_container_lowest", new A.MaterialDynamicColors_surfaceContainerLowest_closure(), _null, new A.MaterialDynamicColors_surfaceContainerLowest_closure0(), _null);
    });
    _lazy($, "MaterialDynamicColors_surfaceContainerLow", "$get$MaterialDynamicColors_surfaceContainerLow", () => {
      var _null = null;
      return A.DynamicColor_DynamicColor$fromPalette(_null, _null, true, "surface_container_low", new A.MaterialDynamicColors_surfaceContainerLow_closure(), _null, new A.MaterialDynamicColors_surfaceContainerLow_closure0(), _null);
    });
    _lazy($, "MaterialDynamicColors_surfaceContainer", "$get$MaterialDynamicColors_surfaceContainer", () => {
      var _null = null;
      return A.DynamicColor_DynamicColor$fromPalette(_null, _null, true, "surface_container", new A.MaterialDynamicColors_surfaceContainer_closure(), _null, new A.MaterialDynamicColors_surfaceContainer_closure0(), _null);
    });
    _lazy($, "MaterialDynamicColors_surfaceContainerHigh", "$get$MaterialDynamicColors_surfaceContainerHigh", () => {
      var _null = null;
      return A.DynamicColor_DynamicColor$fromPalette(_null, _null, true, "surface_container_high", new A.MaterialDynamicColors_surfaceContainerHigh_closure(), _null, new A.MaterialDynamicColors_surfaceContainerHigh_closure0(), _null);
    });
    _lazy($, "MaterialDynamicColors_surfaceContainerHighest", "$get$MaterialDynamicColors_surfaceContainerHighest", () => {
      var _null = null;
      return A.DynamicColor_DynamicColor$fromPalette(_null, _null, true, "surface_container_highest", new A.MaterialDynamicColors_surfaceContainerHighest_closure(), _null, new A.MaterialDynamicColors_surfaceContainerHighest_closure0(), _null);
    });
    _lazy($, "MaterialDynamicColors_onSurface", "$get$MaterialDynamicColors_onSurface", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_onSurface_closure(), A.ContrastCurve$(4.5, 7, 11, 21), false, "on_surface", new A.MaterialDynamicColors_onSurface_closure0(), null, new A.MaterialDynamicColors_onSurface_closure1(), null));
    _lazy($, "MaterialDynamicColors_surfaceVariant", "$get$MaterialDynamicColors_surfaceVariant", () => {
      var _null = null;
      return A.DynamicColor_DynamicColor$fromPalette(_null, _null, true, "surface_variant", new A.MaterialDynamicColors_surfaceVariant_closure(), _null, new A.MaterialDynamicColors_surfaceVariant_closure0(), _null);
    });
    _lazy($, "MaterialDynamicColors_onSurfaceVariant", "$get$MaterialDynamicColors_onSurfaceVariant", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_onSurfaceVariant_closure(), A.ContrastCurve$(3, 4.5, 7, 11), false, "on_surface_variant", new A.MaterialDynamicColors_onSurfaceVariant_closure0(), null, new A.MaterialDynamicColors_onSurfaceVariant_closure1(), null));
    _lazy($, "MaterialDynamicColors_inverseSurface", "$get$MaterialDynamicColors_inverseSurface", () => {
      var _null = null;
      return A.DynamicColor_DynamicColor$fromPalette(_null, _null, false, "inverse_surface", new A.MaterialDynamicColors_inverseSurface_closure(), _null, new A.MaterialDynamicColors_inverseSurface_closure0(), _null);
    });
    _lazy($, "MaterialDynamicColors_inverseOnSurface", "$get$MaterialDynamicColors_inverseOnSurface", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_inverseOnSurface_closure(), A.ContrastCurve$(4.5, 7, 11, 21), false, "inverse_on_surface", new A.MaterialDynamicColors_inverseOnSurface_closure0(), null, new A.MaterialDynamicColors_inverseOnSurface_closure1(), null));
    _lazy($, "MaterialDynamicColors_outline", "$get$MaterialDynamicColors_outline", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_outline_closure(), A.ContrastCurve$(1.5, 3, 4.5, 7), false, "outline", new A.MaterialDynamicColors_outline_closure0(), null, new A.MaterialDynamicColors_outline_closure1(), null));
    _lazy($, "MaterialDynamicColors_outlineVariant", "$get$MaterialDynamicColors_outlineVariant", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_outlineVariant_closure(), A.ContrastCurve$(1, 1, 3, 4.5), false, "outline_variant", new A.MaterialDynamicColors_outlineVariant_closure0(), null, new A.MaterialDynamicColors_outlineVariant_closure1(), null));
    _lazy($, "MaterialDynamicColors_shadow", "$get$MaterialDynamicColors_shadow", () => {
      var _null = null;
      return A.DynamicColor_DynamicColor$fromPalette(_null, _null, false, "shadow", new A.MaterialDynamicColors_shadow_closure(), _null, new A.MaterialDynamicColors_shadow_closure0(), _null);
    });
    _lazy($, "MaterialDynamicColors_scrim", "$get$MaterialDynamicColors_scrim", () => {
      var _null = null;
      return A.DynamicColor_DynamicColor$fromPalette(_null, _null, false, "scrim", new A.MaterialDynamicColors_scrim_closure(), _null, new A.MaterialDynamicColors_scrim_closure0(), _null);
    });
    _lazy($, "MaterialDynamicColors_primary", "$get$MaterialDynamicColors_primary", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_primary_closure(), A.ContrastCurve$(3, 4.5, 7, 7), true, "primary", new A.MaterialDynamicColors_primary_closure0(), null, new A.MaterialDynamicColors_primary_closure1(), new A.MaterialDynamicColors_primary_closure2()));
    _lazy($, "MaterialDynamicColors_onPrimary", "$get$MaterialDynamicColors_onPrimary", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_onPrimary_closure(), A.ContrastCurve$(4.5, 7, 11, 21), false, "on_primary", new A.MaterialDynamicColors_onPrimary_closure0(), null, new A.MaterialDynamicColors_onPrimary_closure1(), null));
    _lazy($, "MaterialDynamicColors_primaryContainer", "$get$MaterialDynamicColors_primaryContainer", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_primaryContainer_closure(), A.ContrastCurve$(1, 1, 3, 4.5), true, "primary_container", new A.MaterialDynamicColors_primaryContainer_closure0(), null, new A.MaterialDynamicColors_primaryContainer_closure1(), new A.MaterialDynamicColors_primaryContainer_closure2()));
    _lazy($, "MaterialDynamicColors_onPrimaryContainer", "$get$MaterialDynamicColors_onPrimaryContainer", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_onPrimaryContainer_closure(), A.ContrastCurve$(4.5, 7, 11, 21), false, "on_primary_container", new A.MaterialDynamicColors_onPrimaryContainer_closure0(), null, new A.MaterialDynamicColors_onPrimaryContainer_closure1(), null));
    _lazy($, "MaterialDynamicColors_inversePrimary", "$get$MaterialDynamicColors_inversePrimary", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_inversePrimary_closure(), A.ContrastCurve$(3, 4.5, 7, 7), false, "inverse_primary", new A.MaterialDynamicColors_inversePrimary_closure0(), null, new A.MaterialDynamicColors_inversePrimary_closure1(), null));
    _lazy($, "MaterialDynamicColors_secondary", "$get$MaterialDynamicColors_secondary", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_secondary_closure(), A.ContrastCurve$(3, 4.5, 7, 7), true, "secondary", new A.MaterialDynamicColors_secondary_closure0(), null, new A.MaterialDynamicColors_secondary_closure1(), new A.MaterialDynamicColors_secondary_closure2()));
    _lazy($, "MaterialDynamicColors_onSecondary", "$get$MaterialDynamicColors_onSecondary", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_onSecondary_closure(), A.ContrastCurve$(4.5, 7, 11, 21), false, "on_secondary", new A.MaterialDynamicColors_onSecondary_closure0(), null, new A.MaterialDynamicColors_onSecondary_closure1(), null));
    _lazy($, "MaterialDynamicColors_secondaryContainer", "$get$MaterialDynamicColors_secondaryContainer", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_secondaryContainer_closure(), A.ContrastCurve$(1, 1, 3, 4.5), true, "secondary_container", new A.MaterialDynamicColors_secondaryContainer_closure0(), null, new A.MaterialDynamicColors_secondaryContainer_closure1(), new A.MaterialDynamicColors_secondaryContainer_closure2()));
    _lazy($, "MaterialDynamicColors_onSecondaryContainer", "$get$MaterialDynamicColors_onSecondaryContainer", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_onSecondaryContainer_closure(), A.ContrastCurve$(4.5, 7, 11, 21), false, "on_secondary_container", new A.MaterialDynamicColors_onSecondaryContainer_closure0(), null, new A.MaterialDynamicColors_onSecondaryContainer_closure1(), null));
    _lazy($, "MaterialDynamicColors_tertiary", "$get$MaterialDynamicColors_tertiary", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_tertiary_closure(), A.ContrastCurve$(3, 4.5, 7, 7), true, "tertiary", new A.MaterialDynamicColors_tertiary_closure0(), null, new A.MaterialDynamicColors_tertiary_closure1(), new A.MaterialDynamicColors_tertiary_closure2()));
    _lazy($, "MaterialDynamicColors_onTertiary", "$get$MaterialDynamicColors_onTertiary", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_onTertiary_closure(), A.ContrastCurve$(4.5, 7, 11, 21), false, "on_tertiary", new A.MaterialDynamicColors_onTertiary_closure0(), null, new A.MaterialDynamicColors_onTertiary_closure1(), null));
    _lazy($, "MaterialDynamicColors_tertiaryContainer", "$get$MaterialDynamicColors_tertiaryContainer", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_tertiaryContainer_closure(), A.ContrastCurve$(1, 1, 3, 4.5), true, "tertiary_container", new A.MaterialDynamicColors_tertiaryContainer_closure0(), null, new A.MaterialDynamicColors_tertiaryContainer_closure1(), new A.MaterialDynamicColors_tertiaryContainer_closure2()));
    _lazy($, "MaterialDynamicColors_onTertiaryContainer", "$get$MaterialDynamicColors_onTertiaryContainer", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_onTertiaryContainer_closure(), A.ContrastCurve$(4.5, 7, 11, 21), false, "on_tertiary_container", new A.MaterialDynamicColors_onTertiaryContainer_closure0(), null, new A.MaterialDynamicColors_onTertiaryContainer_closure1(), null));
    _lazy($, "MaterialDynamicColors_error", "$get$MaterialDynamicColors_error", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_error_closure(), A.ContrastCurve$(3, 4.5, 7, 7), true, "error", new A.MaterialDynamicColors_error_closure0(), null, new A.MaterialDynamicColors_error_closure1(), new A.MaterialDynamicColors_error_closure2()));
    _lazy($, "MaterialDynamicColors_onError", "$get$MaterialDynamicColors_onError", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_onError_closure(), A.ContrastCurve$(4.5, 7, 11, 21), false, "on_error", new A.MaterialDynamicColors_onError_closure0(), null, new A.MaterialDynamicColors_onError_closure1(), null));
    _lazy($, "MaterialDynamicColors_errorContainer", "$get$MaterialDynamicColors_errorContainer", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_errorContainer_closure(), A.ContrastCurve$(1, 1, 3, 4.5), true, "error_container", new A.MaterialDynamicColors_errorContainer_closure0(), null, new A.MaterialDynamicColors_errorContainer_closure1(), new A.MaterialDynamicColors_errorContainer_closure2()));
    _lazy($, "MaterialDynamicColors_onErrorContainer", "$get$MaterialDynamicColors_onErrorContainer", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_onErrorContainer_closure(), A.ContrastCurve$(4.5, 7, 11, 21), false, "on_error_container", new A.MaterialDynamicColors_onErrorContainer_closure0(), null, new A.MaterialDynamicColors_onErrorContainer_closure1(), null));
    _lazy($, "MaterialDynamicColors_primaryFixed", "$get$MaterialDynamicColors_primaryFixed", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_primaryFixed_closure(), A.ContrastCurve$(1, 1, 3, 4.5), true, "primary_fixed", new A.MaterialDynamicColors_primaryFixed_closure0(), null, new A.MaterialDynamicColors_primaryFixed_closure1(), new A.MaterialDynamicColors_primaryFixed_closure2()));
    _lazy($, "MaterialDynamicColors_primaryFixedDim", "$get$MaterialDynamicColors_primaryFixedDim", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_primaryFixedDim_closure(), A.ContrastCurve$(1, 1, 3, 4.5), true, "primary_fixed_dim", new A.MaterialDynamicColors_primaryFixedDim_closure0(), null, new A.MaterialDynamicColors_primaryFixedDim_closure1(), new A.MaterialDynamicColors_primaryFixedDim_closure2()));
    _lazy($, "MaterialDynamicColors_onPrimaryFixed", "$get$MaterialDynamicColors_onPrimaryFixed", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_onPrimaryFixed_closure(), A.ContrastCurve$(4.5, 7, 11, 21), false, "on_primary_fixed", new A.MaterialDynamicColors_onPrimaryFixed_closure0(), new A.MaterialDynamicColors_onPrimaryFixed_closure1(), new A.MaterialDynamicColors_onPrimaryFixed_closure2(), null));
    _lazy($, "MaterialDynamicColors_onPrimaryFixedVariant", "$get$MaterialDynamicColors_onPrimaryFixedVariant", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_onPrimaryFixedVariant_closure(), A.ContrastCurve$(3, 4.5, 7, 11), false, "on_primary_fixed_variant", new A.MaterialDynamicColors_onPrimaryFixedVariant_closure0(), new A.MaterialDynamicColors_onPrimaryFixedVariant_closure1(), new A.MaterialDynamicColors_onPrimaryFixedVariant_closure2(), null));
    _lazy($, "MaterialDynamicColors_secondaryFixed", "$get$MaterialDynamicColors_secondaryFixed", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_secondaryFixed_closure(), A.ContrastCurve$(1, 1, 3, 4.5), true, "secondary_fixed", new A.MaterialDynamicColors_secondaryFixed_closure0(), null, new A.MaterialDynamicColors_secondaryFixed_closure1(), new A.MaterialDynamicColors_secondaryFixed_closure2()));
    _lazy($, "MaterialDynamicColors_secondaryFixedDim", "$get$MaterialDynamicColors_secondaryFixedDim", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_secondaryFixedDim_closure(), A.ContrastCurve$(1, 1, 3, 4.5), true, "secondary_fixed_dim", new A.MaterialDynamicColors_secondaryFixedDim_closure0(), null, new A.MaterialDynamicColors_secondaryFixedDim_closure1(), new A.MaterialDynamicColors_secondaryFixedDim_closure2()));
    _lazy($, "MaterialDynamicColors_onSecondaryFixed", "$get$MaterialDynamicColors_onSecondaryFixed", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_onSecondaryFixed_closure(), A.ContrastCurve$(4.5, 7, 11, 21), false, "on_secondary_fixed", new A.MaterialDynamicColors_onSecondaryFixed_closure0(), new A.MaterialDynamicColors_onSecondaryFixed_closure1(), new A.MaterialDynamicColors_onSecondaryFixed_closure2(), null));
    _lazy($, "MaterialDynamicColors_onSecondaryFixedVariant", "$get$MaterialDynamicColors_onSecondaryFixedVariant", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_onSecondaryFixedVariant_closure(), A.ContrastCurve$(3, 4.5, 7, 11), false, "on_secondary_fixed_variant", new A.MaterialDynamicColors_onSecondaryFixedVariant_closure0(), new A.MaterialDynamicColors_onSecondaryFixedVariant_closure1(), new A.MaterialDynamicColors_onSecondaryFixedVariant_closure2(), null));
    _lazy($, "MaterialDynamicColors_tertiaryFixed", "$get$MaterialDynamicColors_tertiaryFixed", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_tertiaryFixed_closure(), A.ContrastCurve$(1, 1, 3, 4.5), true, "tertiary_fixed", new A.MaterialDynamicColors_tertiaryFixed_closure0(), null, new A.MaterialDynamicColors_tertiaryFixed_closure1(), new A.MaterialDynamicColors_tertiaryFixed_closure2()));
    _lazy($, "MaterialDynamicColors_tertiaryFixedDim", "$get$MaterialDynamicColors_tertiaryFixedDim", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_tertiaryFixedDim_closure(), A.ContrastCurve$(1, 1, 3, 4.5), true, "tertiary_fixed_dim", new A.MaterialDynamicColors_tertiaryFixedDim_closure0(), null, new A.MaterialDynamicColors_tertiaryFixedDim_closure1(), new A.MaterialDynamicColors_tertiaryFixedDim_closure2()));
    _lazy($, "MaterialDynamicColors_onTertiaryFixed", "$get$MaterialDynamicColors_onTertiaryFixed", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_onTertiaryFixed_closure(), A.ContrastCurve$(4.5, 7, 11, 21), false, "on_tertiary_fixed", new A.MaterialDynamicColors_onTertiaryFixed_closure0(), new A.MaterialDynamicColors_onTertiaryFixed_closure1(), new A.MaterialDynamicColors_onTertiaryFixed_closure2(), null));
    _lazy($, "MaterialDynamicColors_onTertiaryFixedVariant", "$get$MaterialDynamicColors_onTertiaryFixedVariant", () => A.DynamicColor_DynamicColor$fromPalette(new A.MaterialDynamicColors_onTertiaryFixedVariant_closure(), A.ContrastCurve$(3, 4.5, 7, 11), false, "on_tertiary_fixed_variant", new A.MaterialDynamicColors_onTertiaryFixedVariant_closure0(), new A.MaterialDynamicColors_onTertiaryFixedVariant_closure1(), new A.MaterialDynamicColors_onTertiaryFixedVariant_closure2(), null));
    _lazyFinal($, "ViewingConditions_standard", "$get$ViewingConditions_standard", () => $.$get$ViewingConditions_sRgb());
    _lazyFinal($, "ViewingConditions_sRgb", "$get$ViewingConditions_sRgb", () => A.ViewingConditions_ViewingConditions$make());
  })();
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "home.client.dart.js_1", e: "endPart", h: h});
})($__dart_deferred_initializers__, "kFP4YrplnTau9/ajxM0IcuC4cYQ=");
;
//# sourceMappingURL=home.client.dart.js_1.part.js.map
